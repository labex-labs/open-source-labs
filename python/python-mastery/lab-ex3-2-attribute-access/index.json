{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Attribute Access and Bound Methods",
  "description": "Understand attribute access in Python, use getattr() for generic object processing, create a table formatter via attribute access, and comprehend bound methods in Python.",
  "meta": {
    "title": "Attribute Access and Bound Methods",
    "description": "Understand attribute access in Python, use getattr() for generic object processing, create a table formatter via attribute access, and comprehend bound methods in Python.",
    "keywords": "Python, attribute access, getattr(), table formatter, bound methods"
  },
  "difficulty": "Beginner",
  "time": 20,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "verified": true,
  "details": {
    "steps": [
      {
        "title": "Understanding Attribute Access in Python",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify Python Attribute Manipulation",
            "file": "verify1-1.sh",
            "hint": "Make sure you've run the Python code examples in Step 1.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": []
      },
      {
        "title": "Using getattr() for Generic Object Processing",
        "text": "en/step2.md",
        "verify": [
          {
            "name": "Verify Python History for Getattr Usage",
            "file": "verify2-1.sh",
            "hint": "Make sure you've run the Python code examples in Step 2.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": []
      },
      {
        "title": "Creating a Table Formatter Using Attribute Access",
        "text": "en/step3.md",
        "verify": [
          {
            "name": "Verify tableformat.py File Creation",
            "file": "verify3-1.sh",
            "hint": "Make sure you've created the tableformat.py file with the print_table() function.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [],
        "solutions": ["tableformat.py"]
      },
      {
        "title": "Understanding Bound Methods in Python",
        "text": "en/step4.md",
        "verify": [
          {
            "name": "Verify Python History for Bound Methods Usage",
            "file": "verify4-1.sh",
            "hint": "Make sure you've run the Python code examples about bound methods in Step 4.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": []
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    },
    "assets": {
      "host01": [
        {
          "file": "stock.py",
          "target": "/home/labex/project",
          "chmod": "ugo+rwx"
        },
        {
          "file": "portfolio.csv",
          "target": "/home/labex/project",
          "chmod": "ugo+rwx"
        }
      ]
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": [],
  "license": {
    "name": "CC-BY-SA-4.0",
    "url": "https://github.com/dabeaz-course/python-mastery/blob/main/LICENSE.md",
    "repo": "https://github.com/dabeaz-course/python-mastery"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "属性访问与绑定方法",
      "description": "理解 Python 中的属性访问，使用 getattr() 进行通用对象处理，通过属性访问创建表格格式化器，并掌握 Python 中的绑定方法。",
      "meta": {
        "title": "属性访问与绑定方法",
        "description": "理解 Python 中的属性访问，使用 getattr() 进行通用对象处理，通过属性访问创建表格格式化器，并掌握 Python 中的绑定方法。",
        "keywords": "Python, 属性访问，getattr(), 表格格式化器，绑定方法"
      },
      "details": {
        "steps": [
          {
            "title": "理解 Python 中的属性访问",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "验证 Python 属性操作",
                "file": "verify1-1.sh",
                "hint": "确保你已经运行了步骤 1 中的 Python 代码示例。"
              }
            ]
          },
          {
            "title": "使用 getattr() 进行通用对象处理",
            "text": "zh/step2.md",
            "verify": [
              {
                "name": "验证 getattr 使用的 Python 历史记录",
                "file": "verify2-1.sh",
                "hint": "确保你已经运行了步骤 2 中的 Python 代码示例。"
              }
            ]
          },
          {
            "title": "使用属性访问创建表格格式化器",
            "text": "zh/step3.md",
            "verify": [
              {
                "name": "验证 tableformat.py 文件是否创建",
                "file": "verify3-1.sh",
                "hint": "确保你已经创建了包含 print_table() 函数的 tableformat.py 文件。"
              }
            ]
          },
          {
            "title": "理解 Python 中的绑定方法",
            "text": "zh/step4.md",
            "verify": [
              {
                "name": "验证绑定方法使用的 Python 历史记录",
                "file": "verify4-1.sh",
                "hint": "确保你已经运行了步骤 4 中关于绑定方法的 Python 代码示例。"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Acceso a atributos y métodos enlazados",
      "description": "Comprenda el acceso a atributos en Python, utilice getattr() para el procesamiento genérico de objetos, cree un formateador de tablas a través del acceso a atributos y comprenda los métodos enlazados en Python.",
      "meta": {
        "title": "Acceso a atributos y métodos enlazados",
        "description": "Comprenda el acceso a atributos en Python, utilice getattr() para el procesamiento genérico de objetos, cree un formateador de tablas a través del acceso a atributos y comprenda los métodos enlazados en Python.",
        "keywords": "Python, acceso a atributos, getattr(), formateador de tablas, métodos enlazados"
      },
      "details": {
        "steps": [
          {
            "title": "Comprendiendo el acceso a atributos en Python",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Verificar la manipulación de atributos de Python",
                "file": "verify1-1.sh",
                "hint": "Asegúrate de haber ejecutado los ejemplos de código de Python en el Paso 1."
              }
            ]
          },
          {
            "title": "Usando getattr() para el procesamiento genérico de objetos",
            "text": "es/step2.md",
            "verify": [
              {
                "name": "Verificar el historial de Python para el uso de getattr",
                "file": "verify2-1.sh",
                "hint": "Asegúrate de haber ejecutado los ejemplos de código de Python en el Paso 2."
              }
            ]
          },
          {
            "title": "Creando un formateador de tablas usando acceso a atributos",
            "text": "es/step3.md",
            "verify": [
              {
                "name": "Verificar la creación del archivo tableformat.py",
                "file": "verify3-1.sh",
                "hint": "Asegúrate de haber creado el archivo tableformat.py con la función print_table()."
              }
            ]
          },
          {
            "title": "Comprendiendo los métodos enlazados en Python",
            "text": "es/step4.md",
            "verify": [
              {
                "name": "Verificar el historial de Python para el uso de métodos enlazados",
                "file": "verify4-1.sh",
                "hint": "Asegúrate de haber ejecutado los ejemplos de código de Python sobre métodos enlazados en el Paso 4."
              }
            ]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Accès aux attributs et méthodes liées",
      "description": "Comprenez l'accès aux attributs en Python, utilisez getattr() pour le traitement générique d'objets, créez un formateur de table via l'accès aux attributs et comprenez les méthodes liées en Python.",
      "meta": {
        "title": "Accès aux attributs et méthodes liées",
        "description": "Comprenez l'accès aux attributs en Python, utilisez getattr() pour le traitement générique d'objets, créez un formateur de table via l'accès aux attributs et comprenez les méthodes liées en Python.",
        "keywords": "Python, accès aux attributs, getattr(), formateur de table, méthodes liées"
      },
      "details": {
        "steps": [
          {
            "title": "Comprendre l'accès aux attributs en Python",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Vérifier la manipulation des attributs Python",
                "file": "verify1-1.sh",
                "hint": "Assurez-vous d'avoir exécuté les exemples de code Python de l'Étape 1."
              }
            ]
          },
          {
            "title": "Utilisation de getattr() pour le traitement générique d'objets",
            "text": "fr/step2.md",
            "verify": [
              {
                "name": "Vérifier l'utilisation de getattr() dans l'historique Python",
                "file": "verify2-1.sh",
                "hint": "Assurez-vous d'avoir exécuté les exemples de code Python de l'Étape 2."
              }
            ]
          },
          {
            "title": "Création d'un formateur de table en utilisant l'accès aux attributs",
            "text": "fr/step3.md",
            "verify": [
              {
                "name": "Vérifier la création du fichier tableformat.py",
                "file": "verify3-1.sh",
                "hint": "Assurez-vous d'avoir créé le fichier tableformat.py avec la fonction print_table()."
              }
            ]
          },
          {
            "title": "Comprendre les méthodes liées en Python",
            "text": "fr/step4.md",
            "verify": [
              {
                "name": "Vérifier l'utilisation des méthodes liées dans l'historique Python",
                "file": "verify4-1.sh",
                "hint": "Assurez-vous d'avoir exécuté les exemples de code Python sur les méthodes liées de l'Étape 4."
              }
            ]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Attributzugriff und gebundene Methoden",
      "description": "Verstehen Sie den Attributzugriff in Python, nutzen Sie getattr() für die generische Objektverarbeitung, erstellen Sie einen Tabellenformatierer über den Attributzugriff und verstehen Sie gebundene Methoden in Python.",
      "meta": {
        "title": "Attributzugriff und gebundene Methoden",
        "description": "Verstehen Sie den Attributzugriff in Python, nutzen Sie getattr() für die generische Objektverarbeitung, erstellen Sie einen Tabellenformatierer über den Attributzugriff und verstehen Sie gebundene Methoden in Python.",
        "keywords": "Python, Attributzugriff, getattr(), Tabellenformatierer, gebundene Methoden"
      },
      "details": {
        "steps": [
          {
            "title": "Verständnis des Attributzugriffs in Python",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Überprüfen der Python-Attributmanipulation",
                "file": "verify1-1.sh",
                "hint": "Stellen Sie sicher, dass Sie die Python-Codebeispiele in Schritt 1 ausgeführt haben."
              }
            ]
          },
          {
            "title": "Verwendung von getattr() für die generische Objektverarbeitung",
            "text": "de/step2.md",
            "verify": [
              {
                "name": "Überprüfen der Python-Nutzungshistorie für getattr",
                "file": "verify2-1.sh",
                "hint": "Stellen Sie sicher, dass Sie die Python-Codebeispiele in Schritt 2 ausgeführt haben."
              }
            ]
          },
          {
            "title": "Erstellen eines Tabellenformatierers mithilfe des Attributzugriffs",
            "text": "de/step3.md",
            "verify": [
              {
                "name": "Überprüfen der Erstellung der Datei tableformat.py",
                "file": "verify3-1.sh",
                "hint": "Stellen Sie sicher, dass Sie die Datei tableformat.py mit der Funktion print_table() erstellt haben."
              }
            ]
          },
          {
            "title": "Grundlagen zu gebundenen Methoden in Python",
            "text": "de/step4.md",
            "verify": [
              {
                "name": "Überprüfen der Python-Nutzungshistorie für gebundene Methoden",
                "file": "verify4-1.sh",
                "hint": "Stellen Sie sicher, dass Sie die Python-Codebeispiele zu gebundenen Methoden in Schritt 4 ausgeführt haben."
              }
            ]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "属性アクセスとバウンドメソッド",
      "description": "Python における属性アクセスを理解し、getattr() を使って汎用的なオブジェクト処理を行い、属性アクセスを通じてテーブルフォーマッタを作成し、Python のバウンドメソッドを理解しましょう。",
      "meta": {
        "title": "属性アクセスとバウンドメソッド",
        "description": "Python における属性アクセスを理解し、getattr() を使って汎用的なオブジェクト処理を行い、属性アクセスを通じてテーブルフォーマッタを作成し、Python のバウンドメソッドを理解しましょう。",
        "keywords": "Python, 属性アクセス，getattr(), テーブルフォーマッタ，バウンドメソッド"
      },
      "details": {
        "steps": [
          {
            "title": "Python における属性アクセスの理解",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "Python 属性操作の検証",
                "file": "verify1-1.sh",
                "hint": "ステップ 1 の Python コード例を実行したことを確認してください。"
              }
            ]
          },
          {
            "title": "getattr() を使用した汎用オブジェクト処理",
            "text": "ja/step2.md",
            "verify": [
              {
                "name": "getattr 使用の Python 履歴の検証",
                "file": "verify2-1.sh",
                "hint": "ステップ 2 の Python コード例を実行したことを確認してください。"
              }
            ]
          },
          {
            "title": "属性アクセスを使用したテーブルフォーマッタの作成",
            "text": "ja/step3.md",
            "verify": [
              {
                "name": "tableformat.py ファイルの作成を検証",
                "file": "verify3-1.sh",
                "hint": "print_table() 関数を含む tableformat.py ファイルを作成したことを確認してください。"
              }
            ]
          },
          {
            "title": "Python におけるバウンドメソッドの理解",
            "text": "ja/step4.md",
            "verify": [
              {
                "name": "バウンドメソッド使用の Python 履歴の検証",
                "file": "verify4-1.sh",
                "hint": "ステップ 4 でバウンドメソッドに関する Python コード例を実行したことを確認してください。"
              }
            ]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Доступ к атрибутам и связанные методы",
      "description": "Понять доступ к атрибутам в Python, использовать getattr() для универсальной обработки объектов, создать форматировщик таблиц с помощью доступа к атрибутам и понять связанные методы в Python.",
      "meta": {
        "title": "Доступ к атрибутам и связанные методы",
        "description": "Понять доступ к атрибутам в Python, использовать getattr() для универсальной обработки объектов, создать форматировщик таблиц с помощью доступа к атрибутам и понять связанные методы в Python.",
        "keywords": "Python, доступ к атрибутам, getattr(), форматировщик таблиц, связанные методы"
      },
      "details": {
        "steps": [
          {
            "title": "Понимание доступа к атрибутам в Python",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "Проверить манипуляции с атрибутами Python",
                "file": "verify1-1.sh",
                "hint": "Убедитесь, что вы запустили примеры кода на Python в Шаге 1."
              }
            ]
          },
          {
            "title": "Использование getattr() для универсальной обработки объектов",
            "text": "ru/step2.md",
            "verify": [
              {
                "name": "Проверить историю использования getattr() в Python",
                "file": "verify2-1.sh",
                "hint": "Убедитесь, что вы запустили примеры кода на Python в Шаге 2."
              }
            ]
          },
          {
            "title": "Создание форматировщика таблиц с использованием доступа к атрибутам",
            "text": "ru/step3.md",
            "verify": [
              {
                "name": "Проверить создание файла tableformat.py",
                "file": "verify3-1.sh",
                "hint": "Убедитесь, что вы создали файл tableformat.py с функцией print_table()."
              }
            ]
          },
          {
            "title": "Понимание связанных методов в Python",
            "text": "ru/step4.md",
            "verify": [
              {
                "name": "Проверить историю использования связанных методов в Python",
                "file": "verify4-1.sh",
                "hint": "Убедитесь, что вы запустили примеры кода на Python о связанных методах в Шаге 4."
              }
            ]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    },
    {
      "lang": "ko",
      "title": "Python 속성 접근 및 바운드 메서드",
      "description": "Python 에서 속성 접근을 이해하고, getattr() 을 사용하여 일반적인 객체 처리를 수행하며, 속성 접근을 통해 테이블 포맷터를 만들고, Python 의 바운드 메서드를 이해합니다.",
      "meta": {
        "title": "Python 속성 접근 및 바운드 메서드 - 상세 가이드",
        "description": "Python 속성 접근 방법, getattr() 활용, 테이블 포맷터 제작, 바운드 메서드 이해 등 Python 프로그래밍 핵심 개념을 자세히 알아보세요. 파이썬 속성 접근, getattr, 테이블 포맷터, 바운드 메서드 관련 정보 제공.",
        "keywords": "Python, 파이썬, 속성 접근, getattr, 테이블 포맷터, 바운드 메서드, 파이썬 튜토리얼, Python 튜토리얼"
      },
      "details": {
        "steps": [
          {
            "title": "Python 속성 접근 이해하기",
            "text": "ko/step1.md",
            "verify": [
              {
                "name": "Python 속성 조작 확인",
                "file": "verify1-1.sh",
                "hint": "1 단계에서 Python 코드 예제를 실행했는지 확인하세요."
              }
            ]
          },
          {
            "title": "일반 객체 처리를 위한 getattr() 사용",
            "text": "ko/step2.md",
            "verify": [
              {
                "name": "getattr 사용에 대한 Python 기록 확인",
                "file": "verify2-1.sh",
                "hint": "2 단계에서 Python 코드 예제를 실행했는지 확인하세요."
              }
            ]
          },
          {
            "title": "속성 접근을 사용하여 테이블 포맷터 만들기",
            "text": "ko/step3.md",
            "verify": [
              {
                "name": "tableformat.py 파일 생성 확인",
                "file": "verify3-1.sh",
                "hint": "print_table() 함수를 사용하여 tableformat.py 파일을 생성했는지 확인하세요."
              }
            ]
          },
          {
            "title": "Python 에서 바운드 메서드 이해",
            "text": "ko/step4.md",
            "verify": [
              {
                "name": "바운드 메서드 사용에 대한 Python 기록 확인",
                "file": "verify4-1.sh",
                "hint": "4 단계에서 바운드 메서드 관련 Python 코드 예제를 실행했는지 확인하세요."
              }
            ]
          }
        ],
        "intro": {
          "text": "ko/intro.md",
          "title": "소개"
        },
        "finish": {
          "text": "ko/finish.md",
          "title": "요약"
        }
      }
    },
    {
      "lang": "pt",
      "title": "Acesso a Atributos e Métodos Vinculados",
      "description": "Compreenda o acesso a atributos em Python, use getattr() para processamento genérico de objetos, crie um formatador de tabela via acesso a atributos e entenda os métodos vinculados em Python.",
      "meta": {
        "title": "Acesso a Atributos em Python: getattr(), Métodos Vinculados e Formatador de Tabela",
        "description": "Aprenda sobre acesso a atributos em Python, como usar getattr() para processamento genérico de objetos, criar um formatador de tabela e entender métodos vinculados. Guia completo para programadores Python.",
        "keywords": "Python, acesso a atributos, getattr(), formatador de tabela, métodos vinculados, programação Python, tutorial Python"
      },
      "details": {
        "steps": [
          {
            "title": "Entendendo o Acesso a Atributos em Python",
            "text": "pt/step1.md",
            "verify": [
              {
                "name": "Verificar a Manipulação de Atributos Python",
                "file": "verify1-1.sh",
                "hint": "Certifique-se de ter executado os exemplos de código Python no Passo 1."
              }
            ]
          },
          {
            "title": "Usando getattr() para Processamento Genérico de Objetos",
            "text": "pt/step2.md",
            "verify": [
              {
                "name": "Verificar o Histórico Python para o Uso de Getattr",
                "file": "verify2-1.sh",
                "hint": "Certifique-se de ter executado os exemplos de código Python no Passo 2."
              }
            ]
          },
          {
            "title": "Criando um Formatador de Tabela Usando Acesso a Atributos",
            "text": "pt/step3.md",
            "verify": [
              {
                "name": "Verificar a Criação do Arquivo tableformat.py",
                "file": "verify3-1.sh",
                "hint": "Certifique-se de ter criado o arquivo tableformat.py com a função print_table()."
              }
            ]
          },
          {
            "title": "Compreendendo Métodos Vinculados em Python",
            "text": "pt/step4.md",
            "verify": [
              {
                "name": "Verificar o Histórico Python para o Uso de Métodos Vinculados",
                "file": "verify4-1.sh",
                "hint": "Certifique-se de ter executado os exemplos de código Python sobre métodos vinculados no Passo 4."
              }
            ]
          }
        ],
        "intro": {
          "text": "pt/intro.md",
          "title": "Introdução"
        },
        "finish": {
          "text": "pt/finish.md",
          "title": "Resumo"
        }
      }
    }
  ]
}
