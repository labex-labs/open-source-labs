{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Learn About Delegating Generators",
  "description": "Understand the `yield from` statement, use it in coroutines, wrap sockets with generators, and transition from generators to async/await in Python.",
  "meta": {
    "title": "Learn About Delegating Generators",
    "description": "Understand the `yield from` statement, use it in coroutines, wrap sockets with generators, and transition from generators to async/await in Python.",
    "keywords": "Python, delegating generators, yield from, coroutines, async/await"
  },
  "difficulty": "Beginner",
  "time": 15,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "verified": true,
  "details": {
    "steps": [
      {
        "title": "Understanding the `yield from` Statement",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify cofollow.py content",
            "file": "verify1-1.sh",
            "hint": "Make sure you've added the required functions to cofollow.py",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": ["python/function_definition", "python/generators"],
        "solutions": ["cofollow.py"]
      },
      {
        "title": "Using `yield from` in Coroutines",
        "text": "en/step2.md",
        "verify": [
          {
            "name": "Verify receive function implementation",
            "file": "verify2-1.sh",
            "hint": "Make sure you've implemented the receive function correctly",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": ["python/function_definition", "python/generators"],
        "solutions": ["server.py"]
      },
      {
        "title": "Wrapping Sockets with Generators",
        "text": "en/step3.md",
        "verify": [
          {
            "name": "Verify GenSocket class implementation",
            "file": "verify3-1.sh",
            "hint": "Make sure you've implemented the GenSocket class correctly",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "python/encapsulation",
          "python/generators",
          "python/socket_programming"
        ],
        "solutions": ["asyncserver.py"]
      },
      {
        "title": "From Generators to Async/Await",
        "text": "en/step4.md",
        "verify": [
          {
            "name": "Verify async/await implementation",
            "file": "verify4-1.sh",
            "hint": "Make sure you've implemented the async/await versions of the server functions"
          }
        ],
        "skills": ["python/generators", "python/threading_multiprocessing"],
        "solutions": ["asyncserver.py"]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    },
    "assets": {
      "host01": [
        {
          "file": "cofollow.py",
          "target": "/home/labex/project",
          "chmod": "ugo+rwx"
        },
        {
          "file": "coticker.py",
          "target": "/home/labex/project",
          "chmod": "ugo+rwx"
        },
        {
          "file": "server.py",
          "target": "/home/labex/project",
          "chmod": "ugo+rwx"
        },
        {
          "file": "structure.py",
          "target": "/home/labex/project",
          "chmod": "ugo+rwx"
        },
        {
          "file": "tableformat.py",
          "target": "/home/labex/project",
          "chmod": "ugo+rwx"
        },
        {
          "file": "validate.py",
          "target": "/home/labex/project",
          "chmod": "ugo+rwx"
        }
      ]
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": [],
  "license": {
    "name": "CC-BY-SA-4.0",
    "url": "https://github.com/dabeaz-course/python-mastery/blob/main/LICENSE.md",
    "repo": "https://github.com/dabeaz-course/python-mastery"
  }
}
