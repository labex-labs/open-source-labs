{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Metaclasses in Action",
  "description": "Understand the problem of metaclasses, collect validator types, create the StructureMeta metaclass, and test the implementation in Python.",
  "meta": {
    "title": "Metaclasses in Action",
    "description": "Understand the problem of metaclasses, collect validator types, create the StructureMeta metaclass, and test the implementation in Python.",
    "keywords": "Python, metaclasses, validator types, StructureMeta, implementation testing"
  },
  "difficulty": "Beginner",
  "time": 10,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "verified": true,
  "details": {
    "steps": [
      {
        "title": "Understanding the Problem",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify file examination",
            "file": "verify1-1.sh",
            "hint": "Make sure you've examined the structure.py and validate.py files.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": ["python/classes_objects", "python/importing_modules"],
        "solutions": ["validate.py", "structure.py", "stock.py"]
      },
      {
        "title": "Collecting Validator Types",
        "text": "en/step2.md",
        "verify": [
          {
            "name": "Verify Validator class modification",
            "file": "verify2-1.sh",
            "hint": "Make sure you've added the validators dictionary and __init_subclass__ method to the Validator class.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": ["python/classes_objects", "python/function_definition"]
      },
      {
        "title": "Creating the StructureMeta Metaclass",
        "text": "en/step3.md",
        "verify": [
          {
            "name": "Verify StructureMeta implementation",
            "file": "verify3-1.sh",
            "hint": "Make sure you've correctly implemented the StructureMeta class and modified the Structure class."
          }
        ],
        "skills": ["python/classes_objects", "python/importing_modules"]
      },
      {
        "title": "Testing Our Implementation",
        "text": "en/step4.md",
        "verify": [
          {
            "name": "Verify stock.py implementation and test execution",
            "file": "verify4-1.sh",
            "hint": "Make sure you've created the stock.py file and run the tests."
          }
        ],
        "skills": ["python/classes_objects", "python/function_definition"]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    },
    "assets": {
      "host01": [
        {
          "file": "reader.py",
          "target": "/home/labex/project",
          "chmod": "ugo+rwx"
        },
        {
          "file": "stock.py",
          "target": "/home/labex/project",
          "chmod": "ugo+rwx"
        },
        {
          "file": "structure.py",
          "target": "/home/labex/project",
          "chmod": "ugo+rwx"
        },
        {
          "file": "tableformat.py",
          "target": "/home/labex/project",
          "chmod": "ugo+rwx"
        },
        {
          "file": "teststock.py",
          "target": "/home/labex/project",
          "chmod": "ugo+rwx"
        },
        {
          "file": "validate.py",
          "target": "/home/labex/project",
          "chmod": "ugo+rwx"
        },
        {
          "file": "portfolio.csv",
          "target": "/home/labex/project",
          "chmod": "ugo+rwx"
        }
      ]
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": [],
  "license": {
    "name": "CC-BY-SA-4.0",
    "url": "https://github.com/dabeaz-course/python-mastery/blob/main/LICENSE.md",
    "repo": "https://github.com/dabeaz-course/python-mastery"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "元类实战",
      "description": "理解元类问题，收集验证器类型，创建 StructureMeta 元类，并在 Python 中测试实现。",
      "meta": {
        "title": "元类实战",
        "description": "理解元类问题，收集验证器类型，创建 StructureMeta 元类，并在 Python 中测试实现。",
        "keywords": "Python, 元类, 验证器类型, StructureMeta, 实现测试"
      },
      "details": {
        "steps": [
          {
            "title": "理解问题",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "验证文件检查情况",
                "file": "verify1-1.sh",
                "hint": "确保你已经检查了 structure.py 和 validate.py 文件。"
              }
            ]
          },
          {
            "title": "收集验证器类型",
            "text": "zh/step2.md",
            "verify": [
              {
                "name": "验证 Validator 类的修改情况",
                "file": "verify2-1.sh",
                "hint": "确保你已向 Validator 类添加了 validators 字典和 __init_subclass__ 方法。"
              }
            ]
          },
          {
            "title": "创建 StructureMeta 元类",
            "text": "zh/step3.md",
            "verify": [
              {
                "name": "验证 StructureMeta 实现情况",
                "file": "verify3-1.sh",
                "hint": "确保你已正确实现 StructureMeta 类并修改了 Structure 类。"
              }
            ]
          },
          {
            "title": "测试我们的实现",
            "text": "zh/step4.md",
            "verify": [
              {
                "name": "验证 stock.py 的实现和测试执行情况",
                "file": "verify4-1.sh",
                "hint": "确保你已创建 stock.py 文件并运行了测试。"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Metaclases en acción",
      "description": "Comprenda el problema de las metaclases, recopile tipos de validadores, cree la metaclase StructureMeta y pruebe la implementación en Python.",
      "meta": {
        "title": "Metaclases en acción",
        "description": "Comprenda el problema de las metaclases, recopile tipos de validadores, cree la metaclase StructureMeta y pruebe la implementación en Python.",
        "keywords": "Python, metaclases, tipos de validadores, StructureMeta, prueba de implementación"
      },
      "details": {
        "steps": [
          {
            "title": "Comprendiendo el problema",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Verificar la revisión de archivos",
                "file": "verify1-1.sh",
                "hint": "Asegúrate de haber revisado los archivos structure.py y validate.py."
              }
            ]
          },
          {
            "title": "Recopilando tipos de validadores",
            "text": "es/step2.md",
            "verify": [
              {
                "name": "Verificar la modificación de la clase Validator",
                "file": "verify2-1.sh",
                "hint": "Asegúrate de haber agregado el diccionario validators y el método __init_subclass__ a la clase Validator."
              }
            ]
          },
          {
            "title": "Creando la metaclase StructureMeta",
            "text": "es/step3.md",
            "verify": [
              {
                "name": "Verificar la implementación de StructureMeta",
                "file": "verify3-1.sh",
                "hint": "Asegúrate de haber implementado correctamente la clase StructureMeta y de haber modificado la clase Structure."
              }
            ]
          },
          {
            "title": "Probando nuestra implementación",
            "text": "es/step4.md",
            "verify": [
              {
                "name": "Verificar la implementación de stock.py y la ejecución de las pruebas",
                "file": "verify4-1.sh",
                "hint": "Asegúrate de haber creado el archivo stock.py y de haber ejecutado las pruebas."
              }
            ]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Les métaclasses en action",
      "description": "Comprendre le problème des métaclasses, collecter les types de validateurs, créer la métaclasse StructureMeta et tester l'implémentation en Python.",
      "meta": {
        "title": "Les métaclasses en action",
        "description": "Comprendre le problème des métaclasses, collecter les types de validateurs, créer la métaclasse StructureMeta et tester l'implémentation en Python.",
        "keywords": "Python, métaclasses, types de validateurs, StructureMeta, test d'implémentation"
      },
      "details": {
        "steps": [
          {
            "title": "Comprendre le problème",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Vérifier l'examen des fichiers",
                "file": "verify1-1.sh",
                "hint": "Assurez-vous d'avoir examiné les fichiers structure.py et validate.py."
              }
            ]
          },
          {
            "title": "Collecte des types de validateurs",
            "text": "fr/step2.md",
            "verify": [
              {
                "name": "Vérifier la modification de la classe Validator",
                "file": "verify2-1.sh",
                "hint": "Assurez-vous d'avoir ajouté le dictionnaire validators et la méthode __init_subclass__ à la classe Validator."
              }
            ]
          },
          {
            "title": "Création de la métaclasse StructureMeta",
            "text": "fr/step3.md",
            "verify": [
              {
                "name": "Vérifier l'implémentation de StructureMeta",
                "file": "verify3-1.sh",
                "hint": "Assurez-vous d'avoir correctement implémenté la classe StructureMeta et modifié la classe Structure."
              }
            ]
          },
          {
            "title": "Test de notre implémentation",
            "text": "fr/step4.md",
            "verify": [
              {
                "name": "Vérifier l'implémentation de stock.py et l'exécution des tests",
                "file": "verify4-1.sh",
                "hint": "Assurez-vous d'avoir créé le fichier stock.py et d'avoir exécuté les tests."
              }
            ]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Metaklassen in Aktion",
      "description": "Verstehen Sie das Problem der Metaklassen, sammeln Sie Validator-Typen, erstellen Sie die StructureMeta-Metaklasse und testen Sie die Implementierung in Python.",
      "meta": {
        "title": "Metaklassen in Aktion",
        "description": "Verstehen Sie das Problem der Metaklassen, sammeln Sie Validator-Typen, erstellen Sie die StructureMeta-Metaklasse und testen Sie die Implementierung in Python.",
        "keywords": "Python, Metaklassen, Validator-Typen, StructureMeta, Implementierungstest"
      },
      "details": {
        "steps": [
          {
            "title": "Das Problem verstehen",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Dateiprüfung überprüfen",
                "file": "verify1-1.sh",
                "hint": "Stellen Sie sicher, dass Sie die Dateien structure.py und validate.py geprüft haben."
              }
            ]
          },
          {
            "title": "Sammlung von Validator-Typen",
            "text": "de/step2.md",
            "verify": [
              {
                "name": "Überprüfung der Validator-Klassenmodifikation",
                "file": "verify2-1.sh",
                "hint": "Stellen Sie sicher, dass Sie das validators-Wörterbuch und die __init_subclass__-Methode zur Validator-Klasse hinzugefügt haben."
              }
            ]
          },
          {
            "title": "Erstellung der Metaklasse StructureMeta",
            "text": "de/step3.md",
            "verify": [
              {
                "name": "Überprüfung der StructureMeta-Implementierung",
                "file": "verify3-1.sh",
                "hint": "Stellen Sie sicher, dass Sie die StructureMeta-Klasse korrekt implementiert und die Structure-Klasse modifiziert haben."
              }
            ]
          },
          {
            "title": "Testen unserer Implementierung",
            "text": "de/step4.md",
            "verify": [
              {
                "name": "Überprüfung der Implementierung in stock.py und Ausführung der Tests",
                "file": "verify4-1.sh",
                "hint": "Stellen Sie sicher, dass Sie die Datei stock.py erstellt und die Tests ausgeführt haben."
              }
            ]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "メタクラスの実践",
      "description": "Python でメタクラスの問題を理解し、バリデータ型を収集し、StructureMeta メタクラスを作成し、実装をテストします。",
      "meta": {
        "title": "メタクラスの実践",
        "description": "Python でメタクラスの問題を理解し、バリデータ型を収集し、StructureMeta メタクラスを作成し、実装をテストします。",
        "keywords": "Python, メタクラス, バリデータ型, StructureMeta, 実装テスト"
      },
      "details": {
        "steps": [
          {
            "title": "問題の理解",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "ファイル確認の検証",
                "file": "verify1-1.sh",
                "hint": "structure.py と validate.py ファイルを確認したことを確認してください。"
              }
            ]
          },
          {
            "title": "バリデータ型の収集",
            "text": "ja/step2.md",
            "verify": [
              {
                "name": "Validator クラスの変更の検証",
                "file": "verify2-1.sh",
                "hint": "Validator クラスに validators 辞書と __init_subclass__ メソッドを追加したことを確認してください。"
              }
            ]
          },
          {
            "title": "StructureMeta メタクラスの作成",
            "text": "ja/step3.md",
            "verify": [
              {
                "name": "StructureMeta の実装の検証",
                "file": "verify3-1.sh",
                "hint": "StructureMeta クラスを正しく実装し、Structure クラスを修正したことを確認してください。"
              }
            ]
          },
          {
            "title": "実装のテスト",
            "text": "ja/step4.md",
            "verify": [
              {
                "name": "stock.py の実装とテスト実行の検証",
                "file": "verify4-1.sh",
                "hint": "stock.py ファイルを作成し、テストを実行したことを確認してください。"
              }
            ]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Метаклассы в действии",
      "description": "Понять проблему метаклассов, собрать типы валидаторов, создать метакласс StructureMeta и протестировать реализацию на Python.",
      "meta": {
        "title": "Метаклассы в действии",
        "description": "Понять проблему метаклассов, собрать типы валидаторов, создать метакласс StructureMeta и протестировать реализацию на Python.",
        "keywords": "Python, метаклассы, типы валидаторов, StructureMeta, тестирование реализации"
      },
      "details": {
        "steps": [
          {
            "title": "Понимание проблемы",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "Проверка изучения файлов",
                "file": "verify1-1.sh",
                "hint": "Убедитесь, что вы изучили файлы structure.py и validate.py."
              }
            ]
          },
          {
            "title": "Сбор типов валидаторов",
            "text": "ru/step2.md",
            "verify": [
              {
                "name": "Проверка изменения класса Validator",
                "file": "verify2-1.sh",
                "hint": "Убедитесь, что вы добавили словарь validators и метод __init_subclass__ в класс Validator."
              }
            ]
          },
          {
            "title": "Создание метакласса StructureMeta",
            "text": "ru/step3.md",
            "verify": [
              {
                "name": "Проверка реализации StructureMeta",
                "file": "verify3-1.sh",
                "hint": "Убедитесь, что вы корректно реализовали класс StructureMeta и изменили класс Structure."
              }
            ]
          },
          {
            "title": "Тестирование нашей реализации",
            "text": "ru/step4.md",
            "verify": [
              {
                "name": "Проверка реализации stock.py и выполнения тестов",
                "file": "verify4-1.sh",
                "hint": "Убедитесь, что вы создали файл stock.py и запустили тесты."
              }
            ]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    }
  ]
}
