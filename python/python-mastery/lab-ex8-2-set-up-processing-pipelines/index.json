{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Utilize Generators For Stocksim Pipelines",
  "description": "Create a basic generator pipeline with CSV data, build the Ticker class, and construct a more complex data pipeline for stocksim in Python.",
  "meta": {
    "title": "Utilize Generators For Stocksim Pipelines",
    "description": "Create a basic generator pipeline with CSV data, build the Ticker class, and construct a more complex data pipeline for stocksim in Python.",
    "keywords": "Python, generators, stocksim pipelines, CSV data, Ticker class"
  },
  "difficulty": "Beginner",
  "time": 15,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "verified": true,
  "details": {
    "steps": [
      {
        "title": "Basic Generator Pipeline with CSV Data",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify Python commands were executed",
            "file": "verify1-1.sh",
            "hint": "Make sure you've run the Python commands with follow() and csv.reader()",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "python/data_collections",
          "python/file_reading_writing",
          "python/generators"
        ]
      },
      {
        "title": "Creating the Ticker Class",
        "text": "en/step2.md",
        "verify": [
          {
            "name": "Verify ticker.py file exists and contains proper code",
            "file": "verify2-1.sh",
            "hint": "Make sure you've created ticker.py with the Ticker class",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "python/classes_objects",
          "python/constructor",
          "python/data_collections"
        ],
        "solutions": ["step2_solution.py"]
      },
      {
        "title": "Building a More Complex Data Pipeline",
        "text": "en/step3.md",
        "verify": [
          {
            "name": "Verify ticker.py has been updated with the pipeline code",
            "file": "verify3-1.sh",
            "hint": "Make sure you've updated ticker.py with the table formatting code",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "python/data_collections",
          "python/file_operations",
          "python/generators"
        ],
        "solutions": ["step3_solution.py"]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    },
    "assets": {
      "host01": [
        {
          "file": "follow.py",
          "target": "/home/labex/project",
          "chmod": "ugo+rwx"
        },
        {
          "file": "structure.py",
          "target": "/home/labex/project",
          "chmod": "ugo+rwx"
        },
        {
          "file": "tableformat.py",
          "target": "/home/labex/project",
          "chmod": "ugo+rwx"
        },
        {
          "file": "ticker.py",
          "target": "/home/labex/project",
          "chmod": "ugo+rwx"
        },
        {
          "file": "validate.py",
          "target": "/home/labex/project",
          "chmod": "ugo+rwx"
        },
        {
          "file": "stocksim.py",
          "target": "/home/labex/project",
          "chmod": "ugo+rwx"
        },
        {
          "file": "stocklog.csv",
          "target": "/home/labex/project",
          "chmod": "ugo+rwx"
        }
      ]
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": [],
  "license": {
    "name": "CC-BY-SA-4.0",
    "url": "https://github.com/dabeaz-course/python-mastery/blob/main/LICENSE.md",
    "repo": "https://github.com/dabeaz-course/python-mastery"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "在股票模拟（Stocksim）管道中使用生成器",
      "description": "使用 CSV 数据创建基本的生成器管道，构建 Ticker 类，并在 Python 中为股票模拟（Stocksim）构建更复杂的数据管道。",
      "meta": {
        "title": "在股票模拟（Stocksim）管道中使用生成器",
        "description": "使用 CSV 数据创建基本的生成器管道，构建 Ticker 类，并在 Python 中为股票模拟（Stocksim）构建更复杂的数据管道。",
        "keywords": "Python, 生成器，股票模拟（Stocksim）管道，CSV 数据，Ticker 类"
      },
      "details": {
        "steps": [
          {
            "title": "使用 CSV 数据的基本生成器管道",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "验证 Python 命令是否已执行",
                "file": "verify1-1.sh",
                "hint": "确保你已经使用 follow() 和 csv.reader() 运行了 Python 命令"
              }
            ]
          },
          {
            "title": "创建 Ticker 类",
            "text": "zh/step2.md",
            "verify": [
              {
                "name": "验证 ticker.py 文件是否存在且包含正确的代码",
                "file": "verify2-1.sh",
                "hint": "确保你已经创建了包含 Ticker 类的 ticker.py 文件"
              }
            ]
          },
          {
            "title": "构建更复杂的数据管道",
            "text": "zh/step3.md",
            "verify": [
              {
                "name": "验证 ticker.py 是否已使用管道代码进行更新",
                "file": "verify3-1.sh",
                "hint": "确保你已使用表格格式化代码更新了 ticker.py"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Utilizar generadores para tuberías de simulación de acciones (stocksim)",
      "description": "Crear una tubería de generadores básica con datos CSV, construir la clase Ticker y crear una tubería de datos más compleja para la simulación de acciones (stocksim) en Python.",
      "meta": {
        "title": "Utilizar generadores para tuberías de simulación de acciones (stocksim)",
        "description": "Crear una tubería básica con datos CSV, construir la clase Ticker y crear una tubería de datos más compleja para la simulación de acciones (stocksim) en Python.",
        "keywords": "Python, generadores, tuberías de simulación de acciones (stocksim), datos CSV, clase Ticker"
      },
      "details": {
        "steps": [
          {
            "title": "Tubería básica de generadores con datos CSV",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Verificar que se ejecutaron los comandos de Python",
                "file": "verify1-1.sh",
                "hint": "Asegúrate de haber ejecutado los comandos de Python con follow() y csv.reader()"
              }
            ]
          },
          {
            "title": "Creación de la clase Ticker",
            "text": "es/step2.md",
            "verify": [
              {
                "name": "Verificar que el archivo ticker.py exista y contenga el código adecuado",
                "file": "verify2-1.sh",
                "hint": "Asegúrate de haber creado el archivo ticker.py con la clase Ticker"
              }
            ]
          },
          {
            "title": "Construcción de una tubería de datos más compleja",
            "text": "es/step3.md",
            "verify": [
              {
                "name": "Verificar que ticker.py se haya actualizado con el código de la tubería",
                "file": "verify3-1.sh",
                "hint": "Asegúrate de haber actualizado ticker.py con el código de formato de tabla"
              }
            ]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Utiliser les générateurs pour les pipelines de Stocksim",
      "description": "Créer un pipeline de générateur de base avec des données CSV, construire la classe Ticker et élaborer un pipeline de données plus complexe pour Stocksim en Python.",
      "meta": {
        "title": "Utiliser les générateurs pour les pipelines de Stocksim",
        "description": "Créer un pipeline de générateur de base avec des données CSV, construire la classe Ticker et élaborer un pipeline de données plus complexe pour Stocksim en Python.",
        "keywords": "Python, générateurs, pipelines de Stocksim, données CSV, classe Ticker"
      },
      "details": {
        "steps": [
          {
            "title": "Pipeline de générateur de base avec des données CSV",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Vérifier que les commandes Python ont été exécutées",
                "file": "verify1-1.sh",
                "hint": "Assurez-vous d'avoir exécuté les commandes Python avec follow() et csv.reader()"
              }
            ]
          },
          {
            "title": "Création de la classe Ticker",
            "text": "fr/step2.md",
            "verify": [
              {
                "name": "Vérifier que le fichier ticker.py existe et contient le code approprié",
                "file": "verify2-1.sh",
                "hint": "Assurez-vous d'avoir créé le fichier ticker.py avec la classe Ticker"
              }
            ]
          },
          {
            "title": "Construction d'un pipeline de données plus complexe",
            "text": "fr/step3.md",
            "verify": [
              {
                "name": "Vérifier que ticker.py a été mis à jour avec le code du pipeline",
                "file": "verify3-1.sh",
                "hint": "Assurez-vous d'avoir mis à jour ticker.py avec le code de formatage de tableau"
              }
            ]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Verwenden von Generatoren für Stocksim - Pipelines",
      "description": "Erstellen Sie eine grundlegende Generator - Pipeline mit CSV - Daten, bauen Sie die Ticker - Klasse und konstruieren Sie eine komplexere Datenpipeline für Stocksim in Python.",
      "meta": {
        "title": "Verwenden von Generatoren für Stocksim - Pipelines",
        "description": "Erstellen Sie eine grundlegende Generator - Pipeline mit CSV - Daten, bauen Sie die Ticker - Klasse und konstruieren Sie eine komplexere Datenpipeline für Stocksim in Python.",
        "keywords": "Python, Generatoren, Stocksim - Pipelines, CSV - Daten, Ticker - Klasse"
      },
      "details": {
        "steps": [
          {
            "title": "Grundlegende Generator-Pipeline mit CSV-Daten",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Überprüfen, ob die Python-Befehle ausgeführt wurden",
                "file": "verify1-1.sh",
                "hint": "Stellen Sie sicher, dass Sie die Python-Befehle mit follow() und csv.reader() ausgeführt haben"
              }
            ]
          },
          {
            "title": "Erstellen der Ticker-Klasse",
            "text": "de/step2.md",
            "verify": [
              {
                "name": "Überprüfen, ob die Datei ticker.py existiert und den richtigen Code enthält",
                "file": "verify2-1.sh",
                "hint": "Stellen Sie sicher, dass Sie die Datei ticker.py mit der Ticker-Klasse erstellt haben"
              }
            ]
          },
          {
            "title": "Aufbau einer komplexeren Datenpipeline",
            "text": "de/step3.md",
            "verify": [
              {
                "name": "Überprüfen, ob ticker.py mit dem Pipeline-Code aktualisiert wurde",
                "file": "verify3-1.sh",
                "hint": "Stellen Sie sicher, dass Sie ticker.py mit dem Tabellenformatierungs-Code aktualisiert haben"
              }
            ]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "Stocksim パイプラインでジェネレータを活用する",
      "description": "CSV データを使って基本的なジェネレータパイプラインを作成し、Ticker クラスを構築し、Python で Stocksim 用のより複雑なデータパイプラインを構築します。",
      "meta": {
        "title": "Stocksim パイプラインでジェネレータを活用する",
        "description": "CSV データを使って基本的なジェネレータパイプラインを作成し、Ticker クラスを構築し、Python で Stocksim 用のより複雑なデータパイプラインを構築します。",
        "keywords": "Python, ジェネレータ，Stocksim パイプライン，CSV データ，Ticker クラス"
      },
      "details": {
        "steps": [
          {
            "title": "CSV データを用いた基本的なジェネレータパイプライン",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "Python コマンドが実行されたことを確認する",
                "file": "verify1-1.sh",
                "hint": "follow() と csv.reader() を使った Python コマンドを実行したことを確認してください"
              }
            ]
          },
          {
            "title": "Ticker クラスの作成",
            "text": "ja/step2.md",
            "verify": [
              {
                "name": "ticker.py ファイルが存在し、適切なコードが含まれていることを確認する",
                "file": "verify2-1.sh",
                "hint": "Ticker クラスを含む ticker.py ファイルを作成したことを確認してください"
              }
            ]
          },
          {
            "title": "より複雑なデータパイプラインの構築",
            "text": "ja/step3.md",
            "verify": [
              {
                "name": "ticker.py がパイプラインコードで更新されていることを確認する",
                "file": "verify3-1.sh",
                "hint": "ticker.py がテーブル整形コードで更新されていることを確認してください"
              }
            ]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Использование генераторов для конвейеров Stocksim",
      "description": "Создайте базовый конвейер на основе генераторов с данными в формате CSV, создайте класс Ticker и постройте более сложный конвейер обработки данных для Stocksim на Python.",
      "meta": {
        "title": "Использование генераторов для конвейеров Stocksim",
        "description": "Создайте базовый конвейер на основе генераторов с данными в формате CSV, создайте класс Ticker и постройте более сложный конвейер обработки данных для Stocksim на Python.",
        "keywords": "Python, генераторы, конвейеры Stocksim, данные в формате CSV, класс Ticker"
      },
      "details": {
        "steps": [
          {
            "title": "Базовый конвейер на основе генераторов с данными в формате CSV",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "Проверить, что команды Python были выполнены",
                "file": "verify1-1.sh",
                "hint": "Убедитесь, что вы запустили команды Python с использованием функций follow() и csv.reader()"
              }
            ]
          },
          {
            "title": "Создание класса Ticker",
            "text": "ru/step2.md",
            "verify": [
              {
                "name": "Проверить, что файл ticker.py существует и содержит правильный код",
                "file": "verify2-1.sh",
                "hint": "Убедитесь, что вы создали файл ticker.py с классом Ticker"
              }
            ]
          },
          {
            "title": "Создание более сложного конвейера обработки данных",
            "text": "ru/step3.md",
            "verify": [
              {
                "name": "Проверить, что файл ticker.py был обновлен кодом конвейера",
                "file": "verify3-1.sh",
                "hint": "Убедитесь, что вы обновили файл ticker.py кодом форматирования таблицы"
              }
            ]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    },
    {
      "lang": "ko",
      "title": "주식 시뮬레이션 파이프라인을 위한 제너레이터 활용",
      "description": "CSV 데이터를 사용하여 기본 제너레이터 파이프라인을 만들고, Ticker 클래스를 구축하며, Python 에서 주식 시뮬레이션을 위한 보다 복잡한 데이터 파이프라인을 구축합니다.",
      "meta": {
        "title": "Python 을 활용한 주식 시뮬레이션 파이프라인 구축: 제너레이터 활용",
        "description": "CSV 데이터로 기본 제너레이터 파이프라인을 만들고, Ticker 클래스를 구축하여 Python 에서 주식 시뮬레이션 (stocksim) 을 위한 효율적인 데이터 파이프라인을 구축하는 방법을 알아보세요. 주식 데이터 처리, 파이썬 제너레이터, CSV 데이터 분석, Ticker 클래스 활용법.",
        "keywords": "Python, 제너레이터, 주식 시뮬레이션 파이프라인, CSV 데이터, Ticker 클래스, 주식 데이터 분석, 파이썬 튜토리얼, 주식 시뮬레이션, stocksim"
      },
      "details": {
        "steps": [
          {
            "title": "CSV 데이터를 사용한 기본 제너레이터 파이프라인",
            "text": "ko/step1.md",
            "verify": [
              {
                "name": "Python 명령 실행 확인",
                "file": "verify1-1.sh",
                "hint": "follow() 및 csv.reader() 를 사용하여 Python 명령을 실행했는지 확인하세요."
              }
            ]
          },
          {
            "title": "Ticker 클래스 생성",
            "text": "ko/step2.md",
            "verify": [
              {
                "name": "ticker.py 파일 존재 및 코드 검증",
                "file": "verify2-1.sh",
                "hint": "Ticker 클래스를 포함하는 ticker.py 파일을 생성했는지 확인하세요."
              }
            ]
          },
          {
            "title": "더 복잡한 데이터 파이프라인 구축",
            "text": "ko/step3.md",
            "verify": [
              {
                "name": "ticker.py 에 파이프라인 코드 업데이트 확인",
                "file": "verify3-1.sh",
                "hint": "ticker.py 에 테이블 형식 코드 업데이트를 완료했는지 확인하세요."
              }
            ]
          }
        ],
        "intro": {
          "text": "ko/intro.md",
          "title": "소개"
        },
        "finish": {
          "text": "ko/finish.md",
          "title": "요약"
        }
      }
    },
    {
      "lang": "pt",
      "title": "Utilize Geradores para Pipelines de Stocksim",
      "description": "Crie um pipeline de gerador básico com dados CSV, construa a classe Ticker e construa um pipeline de dados mais complexo para stocksim em Python.",
      "meta": {
        "title": "Pipelines de Stocksim com Geradores em Python",
        "description": "Aprenda a criar pipelines de dados eficientes para stocksim usando geradores Python. Inclui exemplos com dados CSV, a classe Ticker e pipelines complexos.",
        "keywords": "Python, geradores, pipelines stocksim, dados CSV, classe Ticker, análise de ações, simulação de mercado, bolsa de valores, programação Python"
      },
      "details": {
        "steps": [
          {
            "title": "Pipeline de Gerador Básico com Dados CSV",
            "text": "pt/step1.md",
            "verify": [
              {
                "name": "Verifique se os comandos Python foram executados",
                "file": "verify1-1.sh",
                "hint": "Certifique-se de ter executado os comandos Python com follow() e csv.reader()"
              }
            ]
          },
          {
            "title": "Criando a Classe Ticker",
            "text": "pt/step2.md",
            "verify": [
              {
                "name": "Verifique se o arquivo ticker.py existe e contém o código correto",
                "file": "verify2-1.sh",
                "hint": "Certifique-se de ter criado ticker.py com a classe Ticker"
              }
            ]
          },
          {
            "title": "Construindo um Pipeline de Dados Mais Complexo",
            "text": "pt/step3.md",
            "verify": [
              {
                "name": "Verifique se ticker.py foi atualizado com o código do pipeline",
                "file": "verify3-1.sh",
                "hint": "Certifique-se de ter atualizado ticker.py com o código de formatação da tabela"
              }
            ]
          }
        ],
        "intro": {
          "text": "pt/intro.md",
          "title": "Introdução"
        },
        "finish": {
          "text": "pt/finish.md",
          "title": "Resumo"
        }
      }
    }
  ]
}
