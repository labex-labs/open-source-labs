{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Private Attributes and Properties",
  "description": "In this lab, you will learn how to encapsulate object internals using private attributes, properties, and slots in Python.",
  "meta": {
    "title": "Mastering Private Attributes and Properties in Python",
    "description": "Learn how to encapsulate object internals using private attributes, properties, and slots in Python programming.",
    "keywords": "private attributes, properties, python, object oriented programming, encapsulation"
  },
  "difficulty": "Beginner",
  "time": 25,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Private attributes",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "This step has no verification at the moment",
            "file": "verify1-1.sh",
            "hint": "This step has no verification at the moment",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": []
      },
      {
        "title": "Properties for computed attributes",
        "text": "en/step2.md",
        "verify": [
          {
            "name": "Verify Property Decorators Usage",
            "file": "verify2-1.sh",
            "hint": "Please convert 'cost()' to a attribute and run the python code in step 2.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "python/build_in_functions",
          "python/classes_objects",
          "python/comments",
          "python/constructor",
          "python/encapsulation",
          "python/for_loops",
          "python/function_definition",
          "python/list_comprehensions",
          "python/lists",
          "python/numeric_types",
          "python/polymorphism",
          "python/python_shell",
          "python/strings",
          "python/tuples",
          "python/variables_data_types"
        ],
        "solutions": ["step2_solution.py"]
      },
      {
        "title": "Enforcing Validation Rules",
        "text": "en/step3.md",
        "verify": [
          {
            "name": "Verify Presence of Setter Methods for Shares and Price",
            "file": "verify3-1.sh",
            "hint": "Please modify the 'shares' and 'price' attribute as required and run the python code in step 3.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "python/build_in_functions",
          "python/classes_objects",
          "python/comments",
          "python/conditional_statements",
          "python/constructor",
          "python/encapsulation",
          "python/for_loops",
          "python/function_definition",
          "python/list_comprehensions",
          "python/lists",
          "python/numeric_types",
          "python/polymorphism",
          "python/python_shell",
          "python/raising_exceptions",
          "python/sets",
          "python/strings",
          "python/tuples",
          "python/variables_data_types"
        ],
        "solutions": ["step3_solution.py"]
      },
      {
        "title": "Adding __slots__",
        "text": "en/step4.md",
        "verify": [
          {
            "name": "Verify Presence of __slots__ in stock.py",
            "file": "verify4-1.sh",
            "hint": "Please use '__slots__' in the 'stock' class.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "python/build_in_functions",
          "python/classes_objects",
          "python/comments",
          "python/conditional_statements",
          "python/constructor",
          "python/encapsulation",
          "python/for_loops",
          "python/function_definition",
          "python/list_comprehensions",
          "python/lists",
          "python/numeric_types",
          "python/polymorphism",
          "python/python_shell",
          "python/raising_exceptions",
          "python/sets",
          "python/strings",
          "python/tuples",
          "python/variables_data_types"
        ],
        "solutions": ["step4_solution.py"]
      },
      {
        "title": "Reconciling Types",
        "text": "en/step5.md",
        "verify": [
          {
            "name": "Verify Python History Contains Decimal, Stock, and Class",
            "file": "verify5-1.sh",
            "hint": "Please run the python code in step 5.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "python/classes_objects",
          "python/importing_modules",
          "python/numeric_types",
          "python/python_shell",
          "python/strings",
          "python/tuples",
          "python/using_packages",
          "python/variables_data_types"
        ]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    },
    "assets": {
      "host01": [
        {
          "file": "stock.py",
          "target": "/home/labex/project",
          "chmod": "ugo+rwx"
        }
      ]
    }
  },
  "backend": {
    "imageid": "vnc-ubuntu:2204"
  },
  "contributors": [],
  "license": {
    "name": "CC-BY-SA-4.0",
    "url": "https://github.com/dabeaz-course/python-mastery/blob/main/LICENSE.md",
    "repo": "https://github.com/dabeaz-course/python-mastery"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "私有属性和特性",
      "description": "在本实验中，你将学习如何在 Python 中使用私有属性、特性和插槽来封装对象内部。",
      "meta": {
        "title": "掌握 Python 中的私有属性和特性",
        "description": "学习如何在 Python 编程中使用私有属性、特性和插槽来封装对象内部。",
        "keywords": "私有属性, 特性, Python, 面向对象编程, 封装"
      },
      "details": {
        "steps": [
          {
            "title": "私有属性",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "此步骤目前没有验证",
                "file": "verify1-1.sh",
                "hint": "此步骤目前没有验证"
              }
            ]
          },
          {
            "title": "计算属性的特性",
            "text": "zh/step2.md",
            "verify": [
              {
                "name": "验证特性装饰器的用法",
                "file": "verify2-1.sh",
                "hint": "请将 'cost()' 转换为一个属性，并运行步骤 2 中的 Python 代码。"
              }
            ],
            "solutions": ["step2_solution.py"]
          },
          {
            "title": "实施验证规则",
            "text": "zh/step3.md",
            "verify": [
              {
                "name": "验证是否存在 shares 和 price 的设置方法",
                "file": "verify3-1.sh",
                "hint": "请根据要求修改'shares' 和 'price' 属性，并运行步骤 3 中的 Python 代码。"
              }
            ],
            "solutions": ["step3_solution.py"]
          },
          {
            "title": "添加 __slots__",
            "text": "zh/step4.md",
            "verify": [
              {
                "name": "验证 stock.py 中是否存在 __slots__",
                "file": "verify4-1.sh",
                "hint": "请在'stock' 类中使用 '__slots__'。"
              }
            ],
            "solutions": ["step4_solution.py"]
          },
          {
            "title": "协调类型",
            "text": "zh/step5.md",
            "verify": [
              {
                "name": "验证 Python 历史记录中包含 Decimal、Stock 和 Class",
                "file": "verify5-1.sh",
                "hint": "请运行步骤 5 中的 Python 代码。"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Atributos Privados y Propiedades",
      "description": "En este laboratorio, aprenderás a encapsular los internos de un objeto utilizando atributos privados, propiedades y ranuras en Python.",
      "meta": {
        "title": "Dominando Atributos Privados y Propiedades en Python",
        "description": "Aprende a encapsular los internos de un objeto utilizando atributos privados, propiedades y ranuras en la programación de Python.",
        "keywords": "atributos privados, propiedades, python, programación orientada a objetos, encapsulación"
      },
      "details": {
        "steps": [
          {
            "title": "Atributos privados",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Este paso no tiene verificaciones en este momento",
                "file": "verify1-1.sh",
                "hint": "Este paso no tiene verificaciones en este momento"
              }
            ]
          },
          {
            "title": "Propiedades para atributos calculados",
            "text": "es/step2.md",
            "verify": [
              {
                "name": "Verificar el uso de los decoradores de propiedades",
                "file": "verify2-1.sh",
                "hint": "Por favor, convierta 'cost()' en un atributo y ejecute el código de Python en el paso 2."
              }
            ]
          },
          {
            "title": "Aplicando Reglas de Validación",
            "text": "es/step3.md",
            "verify": [
              {
                "name": "Verificar la Existencia de Métodos Setter para 'shares' y 'price'",
                "file": "verify3-1.sh",
                "hint": "Por favor, modifique los atributos 'shares' y 'price' según sea necesario y ejecute el código de Python en el paso 3."
              }
            ]
          },
          {
            "title": "Agregando __slots__",
            "text": "es/step4.md",
            "verify": [
              {
                "name": "Verificar la presencia de __slots__ en stock.py",
                "file": "verify4-1.sh",
                "hint": "Por favor, use '__slots__' en la clase 'stock'."
              }
            ]
          },
          {
            "title": "Reconciliando Tipos",
            "text": "es/step5.md",
            "verify": [
              {
                "name": "Verificar que el Historial de Python Contenga Decimal, Stock y Clase",
                "file": "verify5-1.sh",
                "hint": "Por favor, ejecute el código de Python en el paso 5."
              }
            ]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Attributs privés et propriétés",
      "description": "Dans ce laboratoire, vous allez apprendre à encapsuler les internaux des objets à l'aide d'attributs privés, de propriétés et de slots en Python.",
      "meta": {
        "title": "Maîtriser les attributs privés et les propriétés en Python",
        "description": "Découvrez comment encapsuler les internaux des objets à l'aide d'attributs privés, de propriétés et de slots en programmation Python.",
        "keywords": "attributs privés, propriétés, python, programmation orientée objet, encapsulation"
      },
      "details": {
        "steps": [
          {
            "title": "Attributs privés",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Cette étape n'a pas de vérification pour le moment",
                "file": "verify1-1.sh",
                "hint": "Cette étape n'a pas de vérification pour le moment"
              }
            ]
          },
          {
            "title": "Propriétés pour les attributs calculés",
            "text": "fr/step2.md",
            "verify": [
              {
                "name": "Vérifiez l'utilisation des décorateurs de propriété",
                "file": "verify2-1.sh",
                "hint": "Veuillez convertir 'cost()' en un attribut et exécutez le code Python de l'étape 2."
              }
            ]
          },
          {
            "title": "Application des règles de validation",
            "text": "fr/step3.md",
            "verify": [
              {
                "name": "Vérifiez la présence des méthodes de définition pour les actions et le prix",
                "file": "verify3-1.sh",
                "hint": "Veuillez modifier l'attribut'shares' et 'price' selon les exigences et exécutez le code Python de l'étape 3."
              }
            ]
          },
          {
            "title": "Ajout de __slots__",
            "text": "fr/step4.md",
            "verify": [
              {
                "name": "Vérifiez la présence de __slots__ dans stock.py",
                "file": "verify4-1.sh",
                "hint": "Veuillez utiliser '__slots__' dans la classe'stock'."
              }
            ]
          },
          {
            "title": "Réconciliation des types",
            "text": "fr/step5.md",
            "verify": [
              {
                "name": "Vérifiez que l'historique Python contient Decimal, Stock et Class",
                "file": "verify5-1.sh",
                "hint": "Veuillez exécuter le code Python de l'étape 5."
              }
            ]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Private Attribute und Eigenschaften",
      "description": "In diesem Lab lernen Sie, wie Sie die interne Struktur von Objekten in Python mithilfe von privaten Attributen, Eigenschaften und Slots kapseln.",
      "meta": {
        "title": "Meisterhaftigkeit bei privaten Attributen und Eigenschaften in Python",
        "description": "Lernen Sie, wie Sie die interne Struktur von Objekten in der Python-Programmierung mithilfe von privaten Attributen, Eigenschaften und Slots kapseln.",
        "keywords": "private Attribute, Eigenschaften, Python, objektorientierte Programmierung, Kapselung"
      },
      "details": {
        "steps": [
          {
            "title": "Private Attribute",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Dieser Schritt hat momentan keine Verifizierung",
                "file": "verify1-1.sh",
                "hint": "Dieser Schritt hat momentan keine Verifizierung"
              }
            ]
          },
          {
            "title": "Eigenschaften für berechnete Attribute",
            "text": "de/step2.md",
            "verify": [
              {
                "name": "Verifizieren Sie die Verwendung von Eigenschaftendekoratoren",
                "file": "verify2-1.sh",
                "hint": "Bitte konvertieren Sie 'cost()' in ein Attribut und führen Sie den Python-Code in Schritt 2 aus."
              }
            ]
          },
          {
            "title": "Durchsetzung von Validierungsregeln",
            "text": "de/step3.md",
            "verify": [
              {
                "name": "Verifizieren Sie das Vorhandensein von Setter-Methoden für Anteile und Preis",
                "file": "verify3-1.sh",
                "hint": "Bitte ändern Sie das 'Anteile'- und 'Preis'-Attribut wie erforderlich und führen Sie den Python-Code in Schritt 3 aus."
              }
            ]
          },
          {
            "title": "Hinzufügen von __slots__",
            "text": "de/step4.md",
            "verify": [
              {
                "name": "Verifizieren Sie das Vorhandensein von __slots__ in stock.py",
                "file": "verify4-1.sh",
                "hint": "Bitte verwenden Sie '__slots__' in der 'stock'-Klasse."
              }
            ]
          },
          {
            "title": "Vereinheitlichung von Typen",
            "text": "de/step5.md",
            "verify": [
              {
                "name": "Verifizieren Sie, dass die Python-Geschichte Decimal, Stock und Class enthält",
                "file": "verify5-1.sh",
                "hint": "Bitte führen Sie den Python-Code in Schritt 5 aus."
              }
            ]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "プライベート属性とプロパティ",
      "description": "この実験では、Pythonにおいてプライベート属性、プロパティ、およびスロットを使用してオブジェクトの内部をカプセル化する方法を学びます。",
      "meta": {
        "title": "Pythonにおけるプライベート属性とプロパティのマスター",
        "description": "Pythonプログラミングにおいて、プライベート属性、プロパティ、およびスロットを使用してオブジェクトの内部をカプセル化する方法を学びましょう。",
        "keywords": "プライベート属性, プロパティ, Python, オブジェクト指向プログラミング, カプセル化"
      },
      "details": {
        "steps": [
          {
            "title": "プライベート属性",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "このステップには現在検証はありません",
                "file": "verify1-1.sh",
                "hint": "このステップには現在検証はありません"
              }
            ]
          },
          {
            "title": "計算属性用のプロパティ",
            "text": "ja/step2.md",
            "verify": [
              {
                "name": "プロパティデコレータの使用を検証する",
                "file": "verify2-1.sh",
                "hint": "step 2 のPythonコードを実行する前に、'cost()' を属性に変換してください。"
              }
            ]
          },
          {
            "title": "検証ルールの強制",
            "text": "ja/step3.md",
            "verify": [
              {
                "name": "株数と価格のセッターメソッドの存在を検証する",
                "file": "verify3-1.sh",
                "hint": "必要に応じて'shares' と 'price' 属性を変更し、step 3 のPythonコードを実行してください。"
              }
            ]
          },
          {
            "title": "__slots__ の追加",
            "text": "ja/step4.md",
            "verify": [
              {
                "name": "stock.py における __slots__ の存在を検証する",
                "file": "verify4-1.sh",
                "hint": " 'stock' クラスで '__slots__' を使用してください。"
              }
            ]
          },
          {
            "title": "型の整合",
            "text": "ja/step5.md",
            "verify": [
              {
                "name": "Pythonの履歴にDecimal、Stock、およびクラスが含まれていることを検証する",
                "file": "verify5-1.sh",
                "hint": "step 5のPythonコードを実行してください。"
              }
            ]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Приватные атрибуты и свойства",
      "description": "В этой лабораторной работе вы научитесь использовать приватные атрибуты, свойства и слоты для инкапсуляции внутренностей объекта в Python.",
      "meta": {
        "title": "Мастерство в приватных атрибутах и свойствах в Python",
        "description": "Изучите, как инкапсулировать внутренности объекта с использованием приватных атрибутов, свойств и слотов в программировании на Python.",
        "keywords": "приватные атрибуты, свойства, python, объектно-ориентированное программирование, инкапсуляция"
      },
      "details": {
        "steps": [
          {
            "title": "Приватные атрибуты",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "На данный момент эта стадия не имеет проверки",
                "file": "verify1-1.sh",
                "hint": "На данный момент эта стадия не имеет проверки"
              }
            ]
          },
          {
            "title": "Свойства для вычисляемых атрибутов",
            "text": "ru/step2.md",
            "verify": [
              {
                "name": "Проверить использование декораторов свойств",
                "file": "verify2-1.sh",
                "hint": "Пожалуйста, преобразуйте 'cost()' в атрибут и запустите код на Python в шаге 2."
              }
            ]
          },
          {
            "title": "Применение правил проверки",
            "text": "ru/step3.md",
            "verify": [
              {
                "name": "Проверить наличие методов-сеттеров для количества акций и цены",
                "file": "verify3-1.sh",
                "hint": "Пожалуйста, измените атрибуты 'shares' и 'price' в соответствии с требованиями и запустите код на Python в шаге 3."
              }
            ]
          },
          {
            "title": "Добавление __slots__",
            "text": "ru/step4.md",
            "verify": [
              {
                "name": "Проверить наличие __slots__ в stock.py",
                "file": "verify4-1.sh",
                "hint": "Пожалуйста, используйте '__slots__' в классе 'stock'."
              }
            ]
          },
          {
            "title": "Согласование типов",
            "text": "ru/step5.md",
            "verify": [
              {
                "name": "Проверить, что история Python содержит Decimal, Stock и Class",
                "file": "verify5-1.sh",
                "hint": "Пожалуйста, запустите код на Python в шаге 5."
              }
            ]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    }
  ]
}
