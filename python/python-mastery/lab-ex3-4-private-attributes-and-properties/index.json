{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Private Attributes and Properties",
  "description": "In this lab, you will learn how to encapsulate object internals using private attributes, properties, and slots in Python.",
  "meta": {
    "title": "Mastering Private Attributes and Properties in Python",
    "description": "Learn how to encapsulate object internals using private attributes, properties, and slots in Python programming.",
    "keywords": "private attributes, properties, python, object oriented programming, encapsulation"
  },
  "difficulty": "Beginner",
  "time": 25,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Private attributes",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "This step has no verification at the moment",
            "file": "verify1-1.sh",
            "hint": "This step has no verification at the moment",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": []
      },
      {
        "title": "Properties for computed attributes",
        "text": "en/step2.md",
        "verify": [
          {
            "name": "Verify Property Decorators Usage",
            "file": "verify2-1.sh",
            "hint": "Please convert 'cost()' to a attribute and run the python code in step 2.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "python/build_in_functions",
          "python/classes_objects",
          "python/comments",
          "python/constructor",
          "python/encapsulation",
          "python/for_loops",
          "python/function_definition",
          "python/list_comprehensions",
          "python/lists",
          "python/numeric_types",
          "python/polymorphism",
          "python/python_shell",
          "python/strings",
          "python/tuples",
          "python/variables_data_types"
        ],
        "solutions": ["step2_solution.py"]
      },
      {
        "title": "Enforcing Validation Rules",
        "text": "en/step3.md",
        "verify": [
          {
            "name": "Verify Presence of Setter Methods for Shares and Price",
            "file": "verify3-1.sh",
            "hint": "Please modify the 'shares' and 'price' attribute as required and run the python code in step 3.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "python/build_in_functions",
          "python/classes_objects",
          "python/comments",
          "python/conditional_statements",
          "python/constructor",
          "python/encapsulation",
          "python/for_loops",
          "python/function_definition",
          "python/list_comprehensions",
          "python/lists",
          "python/numeric_types",
          "python/polymorphism",
          "python/python_shell",
          "python/raising_exceptions",
          "python/sets",
          "python/strings",
          "python/tuples",
          "python/variables_data_types"
        ],
        "solutions": ["step3_solution.py"]
      },
      {
        "title": "Adding __slots__",
        "text": "en/step4.md",
        "verify": [
          {
            "name": "Verify Presence of __slots__ in stock.py",
            "file": "verify4-1.sh",
            "hint": "Please use '__slots__' in the 'stock' class.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "python/build_in_functions",
          "python/classes_objects",
          "python/comments",
          "python/conditional_statements",
          "python/constructor",
          "python/encapsulation",
          "python/for_loops",
          "python/function_definition",
          "python/list_comprehensions",
          "python/lists",
          "python/numeric_types",
          "python/polymorphism",
          "python/python_shell",
          "python/raising_exceptions",
          "python/sets",
          "python/strings",
          "python/tuples",
          "python/variables_data_types"
        ],
        "solutions": ["step4_solution.py"]
      },
      {
        "title": "Reconciling Types",
        "text": "en/step5.md",
        "verify": [
          {
            "name": "Verify Python History Contains Decimal, Stock, and Class",
            "file": "verify5-1.sh",
            "hint": "Please run the python code in step 5.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "python/classes_objects",
          "python/importing_modules",
          "python/numeric_types",
          "python/python_shell",
          "python/strings",
          "python/tuples",
          "python/using_packages",
          "python/variables_data_types"
        ]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    },
    "assets": {
      "host01": [
        {
          "file": "stock.py",
          "target": "/home/labex/project",
          "chmod": "ugo+rwx"
        }
      ]
    }
  },
  "backend": {
    "imageid": "vnc-ubuntu:2204"
  },
  "contributors": [],
  "license": {
    "name": "CC-BY-SA-4.0",
    "url": "https://github.com/dabeaz-course/python-mastery/blob/main/LICENSE.md",
    "repo": "https://github.com/dabeaz-course/python-mastery"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "私有属性和特性",
      "description": "在本实验中，你将学习如何在 Python 中使用私有属性、特性和插槽来封装对象内部。",
      "meta": {
        "title": "掌握 Python 中的私有属性和特性",
        "description": "学习如何在 Python 编程中使用私有属性、特性和插槽来封装对象内部。",
        "keywords": "私有属性, 特性, Python, 面向对象编程, 封装"
      },
      "details": {
        "steps": [
          {
            "title": "私有属性",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "此步骤目前没有验证",
                "file": "verify1-1.sh",
                "hint": "此步骤目前没有验证"
              }
            ]
          },
          {
            "title": "计算属性的特性",
            "text": "zh/step2.md",
            "verify": [
              {
                "name": "验证特性装饰器的用法",
                "file": "verify2-1.sh",
                "hint": "请将 'cost()' 转换为一个属性，并运行步骤 2 中的 Python 代码。"
              }
            ],
            "solutions": ["step2_solution.py"]
          },
          {
            "title": "实施验证规则",
            "text": "zh/step3.md",
            "verify": [
              {
                "name": "验证是否存在 shares 和 price 的设置方法",
                "file": "verify3-1.sh",
                "hint": "请根据要求修改'shares' 和 'price' 属性，并运行步骤 3 中的 Python 代码。"
              }
            ],
            "solutions": ["step3_solution.py"]
          },
          {
            "title": "添加 __slots__",
            "text": "zh/step4.md",
            "verify": [
              {
                "name": "验证 stock.py 中是否存在 __slots__",
                "file": "verify4-1.sh",
                "hint": "请在'stock' 类中使用 '__slots__'。"
              }
            ],
            "solutions": ["step4_solution.py"]
          },
          {
            "title": "协调类型",
            "text": "zh/step5.md",
            "verify": [
              {
                "name": "验证 Python 历史记录中包含 Decimal、Stock 和 Class",
                "file": "verify5-1.sh",
                "hint": "请运行步骤 5 中的 Python 代码。"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    }
  ]
}
