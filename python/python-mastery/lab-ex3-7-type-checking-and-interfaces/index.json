{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Type Checking and Interfaces",
  "description": "Add type checking to print_table(), implement an abstract base class, and create algorithm template classes in Python for better code structure and type safety.",
  "meta": {
    "title": "Type Checking and Interfaces",
    "description": "Add type checking to print_table(), implement an abstract base class, and create algorithm template classes in Python for better code structure and type safety.",
    "keywords": "Python, type checking, interfaces, abstract base class, algorithm template classes"
  },
  "difficulty": "Beginner",
  "time": 15,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "verified": true,
  "details": {
    "steps": [
      {
        "title": "Adding Type Checking to print_table()",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify type checking was added to print_table",
            "file": "verify1-1.sh",
            "hint": "Make sure you've modified the print_table() function to check if formatter is an instance of TableFormatter",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "python/catching_exceptions",
          "python/conditional_statements",
          "python/raising_exceptions"
        ],
        "solutions": ["step1_solution.py"]
      },
      {
        "title": "Implementing an Abstract Base Class",
        "text": "en/step2.md",
        "verify": [
          {
            "name": "Verify TableFormatter is an abstract base class",
            "file": "verify2-1.sh",
            "hint": "Make sure you've converted TableFormatter to an abstract base class using the abc module",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": ["python/classes_objects", "python/inheritance"],
        "solutions": ["step2_solution.py"]
      },
      {
        "title": "Creating Algorithm Template Classes",
        "text": "en/step3.md",
        "verify": [
          {
            "name": "Verify CSVParser implementation",
            "file": "verify3-1.sh",
            "hint": "Make sure you've added the CSVParser classes and refactored the read functions",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "python/classes_objects",
          "python/function_definition",
          "python/inheritance"
        ],
        "solutions": ["step3_solution.py"]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    },
    "assets": {
      "host01": [
        {
          "file": "reader.py",
          "target": "/home/labex/project",
          "chmod": "ugo+rwx"
        },
        {
          "file": "stock.py",
          "target": "/home/labex/project",
          "chmod": "ugo+rwx"
        },
        {
          "file": "tableformat.py",
          "target": "/home/labex/project",
          "chmod": "ugo+rwx"
        },
        {
          "file": "portfolio.csv",
          "target": "/home/labex/project",
          "chmod": "ugo+rwx"
        }
      ]
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": [],
  "license": {
    "name": "CC-BY-SA-4.0",
    "url": "https://github.com/dabeaz-course/python-mastery/blob/main/LICENSE.md",
    "repo": "https://github.com/dabeaz-course/python-mastery"
  }
}
