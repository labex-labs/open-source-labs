{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Review Simple Functions Exception Handling",
  "description": "Define a function, add error handling, and conduct interactive experimentation for reviewing simple functions exception handling in Python.",
  "meta": {
    "title": "Review Simple Functions Exception Handling",
    "description": "Define a function, add error handling, and conduct interactive experimentation for reviewing simple functions exception handling in Python.",
    "keywords": "Python, simple functions, exception handling, function definition, error handling"
  },
  "difficulty": "Beginner",
  "time": 15,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "verified": true,
  "details": {
    "steps": [
      {
        "title": "Defining a Function",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify pcost.py file exists",
            "file": "verify1-1.sh",
            "hint": "Make sure you've created the pcost.py file in the project directory.",
            "timeout": 0,
            "showstderr": true
          },
          {
            "name": "Verify portfolio_cost function",
            "file": "verify1-2.sh",
            "hint": "Ensure your portfolio_cost function correctly calculates the total cost.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "python/file_opening_closing",
          "python/file_reading_writing",
          "python/function_definition"
        ],
        "solutions": ["pcost.py"]
      },
      {
        "title": "Adding Error Handling",
        "text": "en/step2.md",
        "verify": [
          {
            "name": "Verify exception handling implementation",
            "file": "verify2-1.sh",
            "hint": "Make sure you've added try-except blocks to handle ValueError exceptions.",
            "timeout": 0,
            "showstderr": true
          },
          {
            "name": "Verify handling of bad data",
            "file": "verify2-2.sh",
            "hint": "Ensure your code can process portfolio3.dat without crashing.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": ["python/catching_exceptions", "python/file_reading_writing"],
        "solutions": ["pcost.py"]
      },
      {
        "title": "Interactive Experimentation",
        "text": "en/step3.md",
        "verify": [
          {
            "name": "Verify interactive Python usage",
            "file": "verify3-1.sh",
            "hint": "Make sure you've used Python's interactive mode to call the portfolio_cost function.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": ["python/python_shell"],
        "solutions": ["pcost.py"]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    },
    "assets": {
      "host01": [
        {
          "file": "*_test.py",
          "target": "/tmp",
          "chmod": "ugo+rwx"
        },
        {
          "file": "pcost.py",
          "target": "/home/labex/project",
          "chmod": "ugo+rwx"
        },
        {
          "file": "portfolio3.dat",
          "target": "/home/labex/project",
          "chmod": "ugo+rwx"
        },
        {
          "file": "portfolio2.dat",
          "target": "/home/labex/project",
          "chmod": "ugo+rwx"
        },
        {
          "file": "portfolio.dat",
          "target": "/home/labex/project",
          "chmod": "ugo+rwx"
        }
      ]
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": [],
  "license": {
    "name": "CC-BY-SA-4.0",
    "url": "https://github.com/dabeaz-course/python-mastery/blob/main/LICENSE.md",
    "repo": "https://github.com/dabeaz-course/python-mastery"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "回顾简单函数的异常处理",
      "description": "定义一个函数，添加错误处理，并进行交互式实验，以回顾 Python 中简单函数的异常处理。",
      "meta": {
        "title": "回顾简单函数的异常处理",
        "description": "定义一个函数，添加错误处理，并进行交互式实验，以回顾 Python 中简单函数的异常处理。",
        "keywords": "Python, 简单函数, 异常处理, 函数定义, 错误处理"
      },
      "details": {
        "steps": [
          {
            "title": "定义一个函数",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "验证 pcost.py 文件是否存在",
                "file": "verify1-1.sh",
                "hint": "确保你已在项目目录中创建了 pcost.py 文件。"
              },
              {
                "name": "验证 portfolio_cost 函数",
                "file": "verify1-2.sh",
                "hint": "确保你的 portfolio_cost 函数能正确计算总成本。"
              }
            ]
          },
          {
            "title": "添加错误处理",
            "text": "zh/step2.md",
            "verify": [
              {
                "name": "验证异常处理实现",
                "file": "verify2-1.sh",
                "hint": "确保你已添加 try-except 块来处理 ValueError 异常。"
              },
              {
                "name": "验证对错误数据的处理",
                "file": "verify2-2.sh",
                "hint": "确保你的代码能够处理 portfolio3.dat 文件而不崩溃。"
              }
            ]
          },
          {
            "title": "交互式实验",
            "text": "zh/step3.md",
            "verify": [
              {
                "name": "验证交互式 Python 使用情况",
                "file": "verify3-1.sh",
                "hint": "确保你已使用 Python 的交互式模式调用了 portfolio_cost 函数。"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Revisar el manejo de excepciones en funciones simples",
      "description": "Define una función, agrega manejo de errores y realiza experimentación interactiva para revisar el manejo de excepciones en funciones simples de Python.",
      "meta": {
        "title": "Revisar el manejo de excepciones en funciones simples",
        "description": "Define una función, agrega manejo de errores y realiza experimentación interactiva para revisar el manejo de excepciones en funciones simples de Python.",
        "keywords": "Python, funciones simples, manejo de excepciones, definición de funciones, manejo de errores"
      },
      "details": {
        "steps": [
          {
            "title": "Definición de una función",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Verificar que el archivo pcost.py exista",
                "file": "verify1-1.sh",
                "hint": "Asegúrate de haber creado el archivo pcost.py en el directorio del proyecto."
              },
              {
                "name": "Verificar la función portfolio_cost",
                "file": "verify1-2.sh",
                "hint": "Asegúrate de que tu función portfolio_cost calcule correctamente el costo total."
              }
            ]
          },
          {
            "title": "Agregar manejo de errores",
            "text": "es/step2.md",
            "verify": [
              {
                "name": "Verificar la implementación del manejo de excepciones",
                "file": "verify2-1.sh",
                "hint": "Asegúrate de haber agregado bloques try-except para manejar excepciones de ValueError."
              },
              {
                "name": "Verificar el manejo de datos incorrectos",
                "file": "verify2-2.sh",
                "hint": "Asegúrate de que tu código pueda procesar el archivo portfolio3.dat sin fallar."
              }
            ]
          },
          {
            "title": "Experimentación interactiva",
            "text": "es/step3.md",
            "verify": [
              {
                "name": "Verificar el uso interactivo de Python",
                "file": "verify3-1.sh",
                "hint": "Asegúrate de haber utilizado el modo interactivo de Python para llamar a la función portfolio_cost."
              }
            ]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Revoir la gestion des exceptions dans les fonctions simples",
      "description": "Définir une fonction, ajouter une gestion des erreurs et effectuer des expériences interactives pour revoir la gestion des exceptions dans les fonctions simples en Python.",
      "meta": {
        "title": "Revoir la gestion des exceptions dans les fonctions simples",
        "description": "Définir une fonction, ajouter une gestion des erreurs et effectuer des expériences interactives pour revoir la gestion des exceptions dans les fonctions simples en Python.",
        "keywords": "Python, fonctions simples, gestion des exceptions, définition de fonction, gestion des erreurs"
      },
      "details": {
        "steps": [
          {
            "title": "Définition d'une fonction",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Vérifier l'existence du fichier pcost.py",
                "file": "verify1-1.sh",
                "hint": "Assurez-vous d'avoir créé le fichier pcost.py dans le répertoire du projet."
              },
              {
                "name": "Vérifier la fonction portfolio_cost",
                "file": "verify1-2.sh",
                "hint": "Assurez-vous que votre fonction portfolio_cost calcule correctement le coût total."
              }
            ]
          },
          {
            "title": "Ajout de la gestion des erreurs",
            "text": "fr/step2.md",
            "verify": [
              {
                "name": "Vérifier l'implémentation de la gestion des exceptions",
                "file": "verify2-1.sh",
                "hint": "Assurez-vous d'avoir ajouté des blocs try - except pour gérer les exceptions ValueError."
              },
              {
                "name": "Vérifier la gestion des données erronées",
                "file": "verify2-2.sh",
                "hint": "Assurez-vous que votre code peut traiter le fichier portfolio3.dat sans planter."
              }
            ]
          },
          {
            "title": "Expérimentation interactive",
            "text": "fr/step3.md",
            "verify": [
              {
                "name": "Vérifier l'utilisation interactive de Python",
                "file": "verify3-1.sh",
                "hint": "Assurez-vous d'avoir utilisé le mode interactif de Python pour appeler la fonction portfolio_cost."
              }
            ]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Überprüfung einfacher Funktionen und Ausnahmebehandlung",
      "description": "Definieren Sie eine Funktion, fügen Sie Fehlerbehandlung hinzu und führen Sie interaktive Experimente durch, um die Ausnahmebehandlung einfacher Funktionen in Python zu überprüfen.",
      "meta": {
        "title": "Überprüfung einfacher Funktionen und Ausnahmebehandlung",
        "description": "Definieren Sie eine Funktion, fügen Sie Fehlerbehandlung hinzu und führen Sie interaktive Experimente durch, um die Ausnahmebehandlung einfacher Funktionen in Python zu überprüfen.",
        "keywords": "Python, einfache Funktionen, Ausnahmebehandlung, Funktionsdefinition, Fehlerbehandlung"
      },
      "details": {
        "steps": [
          {
            "title": "Funktionsdefinition",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Überprüfen, ob die Datei pcost.py existiert",
                "file": "verify1-1.sh",
                "hint": "Stellen Sie sicher, dass Sie die Datei pcost.py im Projektverzeichnis erstellt haben."
              },
              {
                "name": "Überprüfen der portfolio_cost-Funktion",
                "file": "verify1-2.sh",
                "hint": "Stellen Sie sicher, dass Ihre portfolio_cost-Funktion die Gesamtkosten korrekt berechnet."
              }
            ]
          },
          {
            "title": "Hinzufügen von Fehlerbehandlung",
            "text": "de/step2.md",
            "verify": [
              {
                "name": "Überprüfen der Implementierung der Ausnahmebehandlung",
                "file": "verify2-1.sh",
                "hint": "Stellen Sie sicher, dass Sie try-except-Blöcke hinzugefügt haben, um ValueError-Ausnahmen zu behandeln."
              },
              {
                "name": "Überprüfen der Behandlung fehlerhafter Daten",
                "file": "verify2-2.sh",
                "hint": "Stellen Sie sicher, dass Ihr Code portfolio3.dat verarbeiten kann, ohne abzustürzen."
              }
            ]
          },
          {
            "title": "Interaktive Experimente",
            "text": "de/step3.md",
            "verify": [
              {
                "name": "Überprüfen der Verwendung des interaktiven Python-Modus",
                "file": "verify3-1.sh",
                "hint": "Stellen Sie sicher, dass Sie den interaktiven Modus von Python verwendet haben, um die portfolio_cost-Funktion aufzurufen."
              }
            ]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "単純な関数と例外処理の復習",
      "description": "Pythonで単純な関数と例外処理を復習するために、関数を定義し、エラー処理を追加し、対話型実験を行います。",
      "meta": {
        "title": "単純な関数と例外処理の復習",
        "description": "Pythonで単純な関数と例外処理を復習するために、関数を定義し、エラー処理を追加し、対話型実験を行います。",
        "keywords": "Python, 単純な関数, 例外処理, 関数定義, エラー処理"
      },
      "details": {
        "steps": [
          {
            "title": "関数の定義",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "pcost.py ファイルの存在を確認する",
                "file": "verify1-1.sh",
                "hint": "プロジェクトディレクトリに pcost.py ファイルを作成したことを確認してください。"
              },
              {
                "name": "portfolio_cost 関数を確認する",
                "file": "verify1-2.sh",
                "hint": "portfolio_cost 関数が総費用を正しく計算することを確認してください。"
              }
            ]
          },
          {
            "title": "エラー処理の追加",
            "text": "ja/step2.md",
            "verify": [
              {
                "name": "例外処理の実装を確認する",
                "file": "verify2-1.sh",
                "hint": "ValueError 例外を処理するための try-except ブロックを追加したことを確認してください。"
              },
              {
                "name": "不正なデータの処理を確認する",
                "file": "verify2-2.sh",
                "hint": "コードが portfolio3.dat をクラッシュすることなく処理できることを確認してください。"
              }
            ]
          },
          {
            "title": "対話的な実験",
            "text": "ja/step3.md",
            "verify": [
              {
                "name": "対話的な Python の使用を確認する",
                "file": "verify3-1.sh",
                "hint": "Python の対話モードを使用して portfolio_cost 関数を呼び出したことを確認してください。"
              }
            ]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Проверка обработки исключений в простых функциях",
      "description": "Определите функцию, добавьте обработку ошибок и проведите интерактивные эксперименты для проверки обработки исключений в простых функциях на Python.",
      "meta": {
        "title": "Проверка обработки исключений в простых функциях",
        "description": "Определите функцию, добавьте обработку ошибок и проведите интерактивные эксперименты для проверки обработки исключений в простых функциях на Python.",
        "keywords": "Python, простые функции, обработка исключений, определение функции, обработка ошибок"
      },
      "details": {
        "steps": [
          {
            "title": "Определение функции",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "Проверить наличие файла pcost.py",
                "file": "verify1-1.sh",
                "hint": "Убедитесь, что вы создали файл pcost.py в директории проекта."
              },
              {
                "name": "Проверить функцию portfolio_cost",
                "file": "verify1-2.sh",
                "hint": "Убедитесь, что ваша функция portfolio_cost правильно вычисляет общую стоимость."
              }
            ]
          },
          {
            "title": "Добавление обработки ошибок",
            "text": "ru/step2.md",
            "verify": [
              {
                "name": "Проверить реализацию обработки исключений",
                "file": "verify2-1.sh",
                "hint": "Убедитесь, что вы добавили блоки try-except для обработки исключений ValueError."
              },
              {
                "name": "Проверить обработку некорректных данных",
                "file": "verify2-2.sh",
                "hint": "Убедитесь, что ваш код может обработать файл portfolio3.dat без сбоя."
              }
            ]
          },
          {
            "title": "Интерактивное исследование",
            "text": "ru/step3.md",
            "verify": [
              {
                "name": "Проверить использование интерактивного Python",
                "file": "verify3-1.sh",
                "hint": "Убедитесь, что вы использовали интерактивный режим Python для вызова функции portfolio_cost."
              }
            ]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    }
  ]
}
