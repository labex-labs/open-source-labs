{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Define a Simple Class",
  "description": "Add a sell method to the Stock class, read a portfolio from a CSV file, and format and print the portfolio data in Python.",
  "meta": {
    "title": "Define a Simple Class",
    "description": "Add a sell method to the Stock class, read a portfolio from a CSV file, and format and print the portfolio data in Python.",
    "keywords": "Python, simple class, sell method, CSV file, portfolio data"
  },
  "difficulty": "Beginner",
  "time": 15,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "verified": true,
  "details": {
    "steps": [
      {
        "title": "Adding a sell Method to the Stock Class",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify Sell Method Implementation",
            "file": "verify1-1.sh",
            "hint": "Please implement the 'sell(nshares)' method in the Stock class.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": ["python/classes_objects", "python/function_definition"],
        "solutions": ["step1_solution.py"]
      },
      {
        "title": "Reading a Portfolio from a CSV File",
        "text": "en/step2.md",
        "verify": [
          {
            "name": "Verify Portfolio Reading Function",
            "file": "verify2-1.sh",
            "hint": "Please implement the 'read_portfolio(filename)' function that reads CSV data and creates Stock objects.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "python/data_collections",
          "python/file_reading_writing",
          "python/function_definition"
        ],
        "solutions": ["step2_solution.py"]
      },
      {
        "title": "Formatting and Printing the Portfolio Data",
        "text": "en/step3.md",
        "verify": [
          {
            "name": "Verify Print Portfolio Function",
            "file": "verify3-1.sh",
            "hint": "Please implement the 'print_portfolio(portfolio)' function that displays formatted portfolio data.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "python/for_loops",
          "python/function_definition",
          "python/strings"
        ],
        "solutions": ["step3_solution.py"]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    },
    "assets": {
      "host01": [
        {
          "file": "stock.py",
          "target": "/home/labex/project",
          "chmod": "ugo+rwx"
        },
        {
          "file": "portfolio.csv",
          "target": "/home/labex/project",
          "chmod": "ugo+rwx"
        }
      ]
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": [],
  "license": {
    "name": "CC-BY-SA-4.0",
    "url": "https://github.com/dabeaz-course/python-mastery/blob/main/LICENSE.md",
    "repo": "https://github.com/dabeaz-course/python-mastery"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "定义一个简单的类",
      "description": "在 Python 中为 Stock 类添加出售方法，从 CSV 文件中读取投资组合，并对投资组合数据进行格式化和打印。",
      "meta": {
        "title": "定义一个简单的类",
        "description": "在 Python 中为 Stock 类添加出售方法，从 CSV 文件中读取投资组合，并对投资组合数据进行格式化和打印。",
        "keywords": "Python, 简单类，出售方法，CSV 文件，投资组合数据"
      },
      "details": {
        "steps": [
          {
            "title": "为 Stock 类添加出售方法",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "验证出售方法的实现",
                "file": "verify1-1.sh",
                "hint": "请在 Stock 类中实现 'sell(nshares)' 方法。"
              }
            ]
          },
          {
            "title": "从 CSV 文件中读取投资组合",
            "text": "zh/step2.md",
            "verify": [
              {
                "name": "验证投资组合读取函数",
                "file": "verify2-1.sh",
                "hint": "请实现 'read_portfolio(filename)' 函数，该函数用于读取 CSV 数据并创建 Stock 对象。"
              }
            ]
          },
          {
            "title": "格式化并打印投资组合数据",
            "text": "zh/step3.md",
            "verify": [
              {
                "name": "验证打印投资组合函数",
                "file": "verify3-1.sh",
                "hint": "请实现 'print_portfolio(portfolio)' 函数，用于显示格式化后的投资组合数据。"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Definir una clase simple",
      "description": "Agregar un método de venta a la clase Stock, leer una cartera desde un archivo CSV y formatear e imprimir los datos de la cartera en Python.",
      "meta": {
        "title": "Definir una clase simple",
        "description": "Agregar un método de venta a la clase Stock, leer una cartera desde un archivo CSV y formatear e imprimir los datos de la cartera en Python.",
        "keywords": "Python, clase simple, método de venta, archivo CSV, datos de la cartera"
      },
      "details": {
        "steps": [
          {
            "title": "Agregar un método de venta a la clase Stock",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Verificar la implementación del método de venta",
                "file": "verify1-1.sh",
                "hint": "Por favor, implemente el método 'sell(nshares)' en la clase Stock."
              }
            ]
          },
          {
            "title": "Lectura de una cartera desde un archivo CSV",
            "text": "es/step2.md",
            "verify": [
              {
                "name": "Verificar la función de lectura de la cartera",
                "file": "verify2-1.sh",
                "hint": "Por favor, implemente la función 'read_portfolio(filename)' que lea los datos CSV y cree objetos Stock."
              }
            ]
          },
          {
            "title": "Formateo e impresión de los datos de la cartera",
            "text": "es/step3.md",
            "verify": [
              {
                "name": "Verificar la función de impresión de la cartera",
                "file": "verify3-1.sh",
                "hint": "Por favor, implemente la función 'print_portfolio(portfolio)' que muestre los datos de la cartera formateados."
              }
            ]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Définir une classe simple",
      "description": "Ajouter une méthode de vente à la classe Stock, lire un portefeuille à partir d'un fichier CSV et formater et afficher les données du portefeuille en Python.",
      "meta": {
        "title": "Définir une classe simple",
        "description": "Ajouter une méthode de vente à la classe Stock, lire un portefeuille à partir d'un fichier CSV et formater et afficher les données du portefeuille en Python.",
        "keywords": "Python, classe simple, méthode de vente, fichier CSV, données de portefeuille"
      },
      "details": {
        "steps": [
          {
            "title": "Ajout d'une méthode de vente à la classe Stock",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Vérification de l'implémentation de la méthode de vente",
                "file": "verify1-1.sh",
                "hint": "Veuillez implémenter la méthode 'sell(nshares)' dans la classe Stock."
              }
            ]
          },
          {
            "title": "Lecture d'un portefeuille à partir d'un fichier CSV",
            "text": "fr/step2.md",
            "verify": [
              {
                "name": "Vérification de la fonction de lecture du portefeuille",
                "file": "verify2-1.sh",
                "hint": "Veuillez implémenter la fonction 'read_portfolio(filename)' qui lit les données CSV et crée des objets Stock."
              }
            ]
          },
          {
            "title": "Mise en forme et impression des données du portefeuille",
            "text": "fr/step3.md",
            "verify": [
              {
                "name": "Vérification de la fonction d'impression du portefeuille",
                "file": "verify3-1.sh",
                "hint": "Veuillez implémenter la fonction 'print_portfolio(portfolio)' qui affiche les données du portefeuille formatées."
              }
            ]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Eine einfache Klasse definieren",
      "description": "Fügen Sie der Stock - Klasse eine sell - Methode hinzu, lesen Sie ein Portfolio aus einer CSV - Datei und formatieren und geben Sie die Portfolio - Daten in Python aus.",
      "meta": {
        "title": "Eine einfache Klasse definieren",
        "description": "Fügen Sie der Stock - Klasse eine sell - Methode hinzu, lesen Sie ein Portfolio aus einer CSV - Datei und formatieren und geben Sie die Portfolio - Daten in Python aus.",
        "keywords": "Python, einfache Klasse, sell - Methode, CSV - Datei, Portfolio - Daten"
      },
      "details": {
        "steps": [
          {
            "title": "Hinzufügen einer sell - Methode zur Stock - Klasse",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Überprüfen der Implementierung der Sell - Methode",
                "file": "verify1-1.sh",
                "hint": "Bitte implementieren Sie die 'sell(nshares)' - Methode in der Stock - Klasse."
              }
            ]
          },
          {
            "title": "Lesen eines Portfolios aus einer CSV - Datei",
            "text": "de/step2.md",
            "verify": [
              {
                "name": "Überprüfen der Portfolio - Lesefunktion",
                "file": "verify2-1.sh",
                "hint": "Bitte implementieren Sie die 'read_portfolio(filename)' - Funktion, die CSV - Daten liest und Stock - Objekte erstellt."
              }
            ]
          },
          {
            "title": "Formatieren und Ausgeben der Portfolio - Daten",
            "text": "de/step3.md",
            "verify": [
              {
                "name": "Überprüfen der Print - Portfolio - Funktion",
                "file": "verify3-1.sh",
                "hint": "Bitte implementieren Sie die 'print_portfolio(portfolio)' - Funktion, die formatierten Portfolio - Daten ausgibt."
              }
            ]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "シンプルなクラスを定義する",
      "description": "Stock クラスに sell メソッドを追加し、CSV ファイルからポートフォリオを読み取り、Python でポートフォリオデータを整形して表示します。",
      "meta": {
        "title": "シンプルなクラスを定義する",
        "description": "Stock クラスに sell メソッドを追加し、CSV ファイルからポートフォリオを読み取り、Python でポートフォリオデータを整形して表示します。",
        "keywords": "Python, シンプルなクラス，sell メソッド，CSV ファイル，ポートフォリオデータ"
      },
      "details": {
        "steps": [
          {
            "title": "Stock クラスに sell メソッドを追加する",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "sell メソッドの実装を確認する",
                "file": "verify1-1.sh",
                "hint": "Stock クラスに 'sell(nshares)' メソッドを実装してください。"
              }
            ]
          },
          {
            "title": "CSV ファイルからポートフォリオを読み取る",
            "text": "ja/step2.md",
            "verify": [
              {
                "name": "ポートフォリオ読み取り関数の確認",
                "file": "verify2-1.sh",
                "hint": "CSV データを読み取り、Stock オブジェクトを作成する 'read_portfolio(filename)' 関数を実装してください。"
              }
            ]
          },
          {
            "title": "ポートフォリオデータの整形と表示",
            "text": "ja/step3.md",
            "verify": [
              {
                "name": "ポートフォリオ表示関数の確認",
                "file": "verify3-1.sh",
                "hint": "整形されたポートフォリオデータを表示する 'print_portfolio(portfolio)' 関数を実装してください。"
              }
            ]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Определение простого класса",
      "description": "Добавьте метод продажи (sell method) в класс Stock, прочитайте портфель из CSV - файла и отформатируйте и выведите данные о портфеле на Python.",
      "meta": {
        "title": "Определение простого класса",
        "description": "Добавьте метод продажи (sell method) в класс Stock, прочитайте портфель из CSV - файла и отформатируйте и выведите данные о портфеле на Python.",
        "keywords": "Python, простой класс, метод продажи (sell method), CSV - файл, данные о портфеле"
      },
      "details": {
        "steps": [
          {
            "title": "Добавление метода sell в класс Stock",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "Проверка реализации метода sell",
                "file": "verify1-1.sh",
                "hint": "Пожалуйста, реализуйте метод 'sell(nshares)' в классе Stock."
              }
            ]
          },
          {
            "title": "Чтение портфеля из CSV-файла",
            "text": "ru/step2.md",
            "verify": [
              {
                "name": "Проверка функции чтения портфеля",
                "file": "verify2-1.sh",
                "hint": "Пожалуйста, реализуйте функцию 'read_portfolio(filename)', которая читает данные из CSV-файла и создает объекты Stock."
              }
            ]
          },
          {
            "title": "Форматирование и вывод данных портфеля",
            "text": "ru/step3.md",
            "verify": [
              {
                "name": "Проверка функции вывода портфеля",
                "file": "verify3-1.sh",
                "hint": "Пожалуйста, реализуйте функцию 'print_portfolio(portfolio)', которая выводит отформатированные данные портфеля."
              }
            ]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    }
  ]
}
