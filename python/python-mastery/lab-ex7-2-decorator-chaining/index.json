{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Decorator Chaining and Parameterized Decorators",
  "description": "In this lab, you will practice decorator chaining and defining decorators that accept arguments.",
  "meta": {
    "title": "Python Decorator Chaining | Function Metadata Preservation",
    "description": "Explore decorator chaining and learn how to define decorators that accept arguments. Discover techniques to preserve function metadata when using decorators.",
    "keywords": "python, decorator, chaining, function metadata, wraps"
  },
  "difficulty": "Beginner",
  "time": 20,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "verified": true,
  "details": {
    "steps": [
      {
        "title": "Preserving Function Metadata in Decorators",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Check if wraps is imported in logcall.py",
            "file": "verify1-1.sh",
            "hint": "Make sure you've imported 'wraps' from 'functools' in logcall.py",
            "timeout": 0,
            "showstderr": true
          },
          {
            "name": "Check if wraps is imported in validate.py",
            "file": "verify1-2.sh",
            "hint": "Make sure you've added 'wraps' from 'functools' to validate.py and applied it to the wrapper function"
          }
        ],
        "skills": [
          "python/decorators",
          "python/function_definition",
          "python/scope"
        ],
        "solutions": ["step1_solution.py"]
      },
      {
        "title": "Creating Decorators with Arguments",
        "text": "en/step2.md",
        "verify": [
          {
            "name": "Check logformat decorator implementation",
            "file": "verify2-1.sh",
            "hint": "Make sure you've implemented the logformat decorator correctly in logcall.py",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "python/decorators",
          "python/function_definition",
          "python/lambda_functions"
        ],
        "solutions": ["logcall.py", "sample.py"]
      },
      {
        "title": "Applying Decorators to Class Methods",
        "text": "en/step3.md",
        "verify": [
          {
            "name": "Check methods.py implementation",
            "file": "verify3-1.sh",
            "hint": "Make sure you've created methods.py with properly ordered decorators",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "python/class_static_methods",
          "python/classes_objects",
          "python/decorators"
        ],
        "solutions": ["spam.py"]
      },
      {
        "title": "Creating a Type Enforcement Decorator with Arguments",
        "text": "en/step4.md",
        "verify": [
          {
            "name": "Check enforce decorator implementation",
            "file": "verify4-1.sh",
            "hint": "Make sure you've implemented the enforce decorator correctly in validate.py",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "python/decorators",
          "python/function_definition",
          "python/type_conversion"
        ],
        "solutions": ["validate.py"]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    },
    "assets": {
      "host01": [
        {
          "file": "logcall.py",
          "target": "/home/labex/project",
          "chmod": "ugo+rwx"
        },
        {
          "file": "sample.py",
          "target": "/home/labex/project",
          "chmod": "ugo+rwx"
        },
        {
          "file": "spam.py",
          "target": "/home/labex/project",
          "chmod": "ugo+rwx"
        },
        {
          "file": "validate.py",
          "target": "/home/labex/project",
          "chmod": "ugo+rwx"
        }
      ]
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": [],
  "license": {
    "name": "CC-BY-SA-4.0",
    "url": "https://github.com/dabeaz-course/python-mastery/blob/main/LICENSE.md",
    "repo": "https://github.com/dabeaz-course/python-mastery"
  }
}
