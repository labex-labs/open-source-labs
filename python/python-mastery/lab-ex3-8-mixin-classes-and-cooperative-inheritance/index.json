{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Mixin Classes and Cooperative Inheritance",
  "description": "Understand the column formatting problem, implement mixin classes for formatting, and create a user - friendly API for mixins to learn about mixin classes and cooperative inheritance in Python.",
  "meta": {
    "title": "Mixin Classes and Cooperative Inheritance",
    "description": "Understand the column formatting problem, implement mixin classes for formatting, and create a user - friendly API for mixins to learn about mixin classes and cooperative inheritance in Python.",
    "keywords": "Python, mixin classes, cooperative inheritance, column formatting, user - friendly API"
  },
  "difficulty": "Beginner",
  "time": 15,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "verified": true,
  "details": {
    "steps": [
      {
        "title": "Understanding the Problem with Column Formatting",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify file exists",
            "file": "verify1-1.sh",
            "hint": "Make sure you have examined the tableformat.py file",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": ["python/classes_objects", "python/function_definition"]
      },
      {
        "title": "Implementing Mixin Classes for Formatting",
        "text": "en/step2.md",
        "verify": [
          {
            "name": "Verify mixin classes implementation",
            "file": "verify2-1.sh",
            "hint": "Make sure you have implemented both ColumnFormatMixin and UpperHeadersMixin classes in tableformat.py",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": ["python/classes_objects", "python/inheritance"],
        "solutions": ["step2_solution.py"]
      },
      {
        "title": "Creating a User-Friendly API for Mixins",
        "text": "en/step3.md",
        "verify": [
          {
            "name": "Verify create_formatter function enhancement",
            "file": "verify3-1.sh",
            "hint": "Make sure you have enhanced the create_formatter function to support column_formats and upper_headers parameters in tableformat.py",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "python/default_arguments",
          "python/function_definition",
          "python/keyword_arguments"
        ],
        "solutions": ["step3_solution.py"]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    },
    "assets": {
      "host01": [
        {
          "file": "reader.py",
          "target": "/home/labex/project",
          "chmod": "ugo+rwx"
        },
        {
          "file": "stock.py",
          "target": "/home/labex/project",
          "chmod": "ugo+rwx"
        },
        {
          "file": "tableformat.py",
          "target": "/home/labex/project",
          "chmod": "ugo+rwx"
        },
        {
          "file": "portfolio.csv",
          "target": "/home/labex/project",
          "chmod": "ugo+rwx"
        }
      ]
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": [],
  "license": {
    "name": "CC-BY-SA-4.0",
    "url": "https://github.com/dabeaz-course/python-mastery/blob/main/LICENSE.md",
    "repo": "https://github.com/dabeaz-course/python-mastery"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "混入类与协作式继承",
      "description": "理解列格式化问题，实现用于格式化的混入类，并为混入类创建用户友好的 API，以学习 Python 中的混入类和协作式继承。",
      "meta": {
        "title": "混入类与协作式继承",
        "description": "理解列格式化问题，实现用于格式化的混入类，并为混入类创建用户友好的 API，以学习 Python 中的混入类和协作式继承。",
        "keywords": "Python, 混入类，协作式继承，列格式化，用户友好的 API"
      },
      "details": {
        "steps": [
          {
            "title": "理解列格式化问题",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "验证文件是否存在",
                "file": "verify1-1.sh",
                "hint": "确保你已经查看了 tableformat.py 文件"
              }
            ]
          },
          {
            "title": "实现用于格式化的混入类",
            "text": "zh/step2.md",
            "verify": [
              {
                "name": "验证混入类的实现",
                "file": "verify2-1.sh",
                "hint": "确保你已经在 tableformat.py 中实现了 ColumnFormatMixin 和 UpperHeadersMixin 类"
              }
            ]
          },
          {
            "title": "为混入类创建用户友好的 API",
            "text": "zh/step3.md",
            "verify": [
              {
                "name": "验证 create_formatter 函数的增强",
                "file": "verify3-1.sh",
                "hint": "确保你已经增强了 create_formatter 函数，使其支持 column_formats 和 upper_headers 参数"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Clases Mixin y Herencia Cooperativa",
      "description": "Comprende el problema de formato de columnas, implementa clases mixin para el formato y crea una API amigable para los usuarios con mixins para aprender sobre clases mixin y herencia cooperativa en Python.",
      "meta": {
        "title": "Clases Mixin y Herencia Cooperativa",
        "description": "Comprende el problema de formato de columnas, implementa clases mixin para el formato y crea una API amigable para los usuarios con mixins para aprender sobre clases mixin y herencia cooperativa en Python.",
        "keywords": "Python, clases mixin, herencia cooperativa, formato de columnas, API amigable para el usuario"
      },
      "details": {
        "steps": [
          {
            "title": "Comprendiendo el problema con el formato de columnas",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Verificar que el archivo exista",
                "file": "verify1-1.sh",
                "hint": "Asegúrate de haber examinado el archivo tableformat.py"
              }
            ]
          },
          {
            "title": "Implementando clases Mixin para el formato",
            "text": "es/step2.md",
            "verify": [
              {
                "name": "Verificar la implementación de las clases Mixin",
                "file": "verify2-1.sh",
                "hint": "Asegúrate de haber implementado las clases ColumnFormatMixin y UpperHeadersMixin en tableformat.py"
              }
            ]
          },
          {
            "title": "Creando una API amigable para los usuarios para Mixins",
            "text": "es/step3.md",
            "verify": [
              {
                "name": "Verificar la mejora de la función create_formatter",
                "file": "verify3-1.sh",
                "hint": "Asegúrate de haber mejorado la función create_formatter para soportar los parámetros column_formats y upper_headers"
              }
            ]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Classes Mixin et Héritage Coopératif",
      "description": "Comprenez le problème de formatage des colonnes, implémentez des classes mixin pour le formatage et créez une API conviviale pour les mixins pour apprendre les classes mixin et l'héritage coopératif en Python.",
      "meta": {
        "title": "Classes Mixin et Héritage Coopératif",
        "description": "Comprenez le problème de formatage des colonnes, implémentez des classes mixin pour le formatage et créez une API conviviale pour les mixins pour apprendre les classes mixin et l'héritage coopératif en Python.",
        "keywords": "Python, classes mixin, héritage coopératif, formatage de colonnes, API conviviale"
      },
      "details": {
        "steps": [
          {
            "title": "Comprendre le problème de formatage des colonnes",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Vérifier l'existence du fichier",
                "file": "verify1-1.sh",
                "hint": "Assurez-vous d'avoir examiné le fichier tableformat.py"
              }
            ]
          },
          {
            "title": "Implémentation de classes Mixin pour le formatage",
            "text": "fr/step2.md",
            "verify": [
              {
                "name": "Vérifier l'implémentation des classes Mixin",
                "file": "verify2-1.sh",
                "hint": "Assurez-vous d'avoir implémenté les classes ColumnFormatMixin et UpperHeadersMixin dans le fichier tableformat.py"
              }
            ]
          },
          {
            "title": "Création d'une API conviviale pour les Mixins",
            "text": "fr/step3.md",
            "verify": [
              {
                "name": "Vérifier l'amélioration de la fonction create_formatter",
                "file": "verify3-1.sh",
                "hint": "Assurez-vous d'avoir amélioré la fonction create_formatter pour prendre en charge les paramètres column_formats et upper_headers"
              }
            ]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Mixin-Klassen und kooperative Vererbung",
      "description": "Verstehen Sie das Problem der Spaltenformatierung, implementieren Sie Mixin-Klassen für die Formatierung und erstellen Sie eine benutzerfreundliche API für Mixins, um sich mit Mixin-Klassen und kooperativer Vererbung in Python vertraut zu machen.",
      "meta": {
        "title": "Mixin-Klassen und kooperative Vererbung",
        "description": "Verstehen Sie das Problem der Spaltenformatierung, implementieren Sie Mixin-Klassen für die Formatierung und erstellen Sie eine benutzerfreundliche API für Mixins, um sich mit Mixin-Klassen und kooperativer Vererbung in Python vertraut zu machen.",
        "keywords": "Python, Mixin-Klassen, kooperative Vererbung, Spaltenformatierung, benutzerfreundliche API"
      },
      "details": {
        "steps": [
          {
            "title": "Das Problem mit der Spaltenformatierung verstehen",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Überprüfen, ob die Datei existiert",
                "file": "verify1-1.sh",
                "hint": "Stellen Sie sicher, dass Sie die Datei tableformat.py untersucht haben"
              }
            ]
          },
          {
            "title": "Implementierung von Mixin-Klassen für die Formatierung",
            "text": "de/step2.md",
            "verify": [
              {
                "name": "Überprüfen der Implementierung der Mixin-Klassen",
                "file": "verify2-1.sh",
                "hint": "Stellen Sie sicher, dass Sie sowohl die ColumnFormatMixin- als auch die UpperHeadersMixin-Klasse in tableformat.py implementiert haben"
              }
            ]
          },
          {
            "title": "Erstellung einer benutzerfreundlichen API für Mixins",
            "text": "de/step3.md",
            "verify": [
              {
                "name": "Überprüfen der Verbesserung der create_formatter-Funktion",
                "file": "verify3-1.sh",
                "hint": "Stellen Sie sicher, dass Sie die create_formatter-Funktion erweitert haben, um die Parameter column_formats und upper_headers zu unterstützen"
              }
            ]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "ミックスインクラスと協調的継承",
      "description": "列フォーマットの問題を理解し、フォーマット用のミックスインクラスを実装し、ミックスイン用の使いやすい API を作成することで、Python のミックスインクラスと協調的継承について学びます。",
      "meta": {
        "title": "ミックスインクラスと協調的継承",
        "description": "列フォーマットの問題を理解し、フォーマット用のミックスインクラスを実装し、ミックスイン用の使いやすい API を作成することで、Python のミックスインクラスと協調的継承について学びます。",
        "keywords": "Python, ミックスインクラス，協調的継承，列フォーマット，使いやすい API"
      },
      "details": {
        "steps": [
          {
            "title": "列フォーマットの問題の理解",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "ファイルの存在を確認する",
                "file": "verify1-1.sh",
                "hint": "tableformat.py ファイルを確認していることを確認してください"
              }
            ]
          },
          {
            "title": "フォーマット用のミックスインクラスの実装",
            "text": "ja/step2.md",
            "verify": [
              {
                "name": "ミックスインクラスの実装を確認する",
                "file": "verify2-1.sh",
                "hint": "tableformat.py で ColumnFormatMixin クラスと UpperHeadersMixin クラスの両方を実装していることを確認してください"
              }
            ]
          },
          {
            "title": "ミックスイン用の使いやすい API の作成",
            "text": "ja/step3.md",
            "verify": [
              {
                "name": "create_formatter 関数の拡張を確認する",
                "file": "verify3-1.sh",
                "hint": "create_formatter 関数を拡張して、column_formats と upper_headers パラメータをサポートするようにしていることを確認してください"
              }
            ]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Миксин - классы и кооперативное наследование",
      "description": "Понять проблему форматирования столбцов, реализовать миксин - классы для форматирования и создать удобный для пользователя API для миксинов, чтобы узнать о миксин - классах и кооперативном наследовании в Python.",
      "meta": {
        "title": "Миксин - классы и кооперативное наследование",
        "description": "Понять проблему форматирования столбцов, реализовать миксин - классы для форматирования и создать удобный для пользователя API для миксинов, чтобы узнать о миксин - классах и кооперативном наследовании в Python.",
        "keywords": "Python, миксин - классы, кооперативное наследование, форматирование столбцов, удобный для пользователя API"
      },
      "details": {
        "steps": [
          {
            "title": "Понимание проблемы форматирования столбцов",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "Проверить существование файла",
                "file": "verify1-1.sh",
                "hint": "Убедитесь, что вы проверили файл tableformat.py"
              }
            ]
          },
          {
            "title": "Реализация миксин - классов для форматирования",
            "text": "ru/step2.md",
            "verify": [
              {
                "name": "Проверить реализацию миксин - классов",
                "file": "verify2-1.sh",
                "hint": "Убедитесь, что вы реализовали классы ColumnFormatMixin и UpperHeadersMixin в файле tableformat.py"
              }
            ]
          },
          {
            "title": "Создание удобного для пользователя API для миксинов",
            "text": "ru/step3.md",
            "verify": [
              {
                "name": "Проверить улучшение функции create_formatter",
                "file": "verify3-1.sh",
                "hint": "Убедитесь, что вы улучшили функцию create_formatter для поддержки параметров column_formats и upper_headers"
              }
            ]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    }
  ]
}
