{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Customizing Attribute Access",
  "description": "In this lab, you will learn about customizing attribute access and the difference between delegation and inheritance.",
  "meta": {
    "title": "Customizing Attribute Access in Python",
    "description": "Explore techniques for customizing attribute access in Python, including delegation, inheritance, and creating read-only proxies.",
    "keywords": "setattr, proxies, python, slots, attribute access"
  },
  "difficulty": "Beginner",
  "time": 15,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Slots vs. setattr",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify Python Class Inheritance and Attributes",
            "file": "verify1-1.sh",
            "hint": "Please follow the instructions to complete the steps.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "python/build_in_functions",
          "python/classes_objects",
          "python/conditional_statements",
          "python/constructor",
          "python/encapsulation",
          "python/function_definition",
          "python/polymorphism",
          "python/python_shell",
          "python/raising_exceptions",
          "python/sets",
          "python/tuples"
        ]
      },
      {
        "title": "Proxies",
        "text": "en/step2.md",
        "verify": [
          {
            "name": "Verify Python __getattr__ and getattr Usage",
            "file": "verify2-1.sh",
            "hint": "Please follow the instructions to complete the steps.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "python/build_in_functions",
          "python/classes_objects",
          "python/constructor",
          "python/data_collections",
          "python/encapsulation",
          "python/function_definition",
          "python/importing_modules",
          "python/lists",
          "python/polymorphism",
          "python/python_shell",
          "python/raising_exceptions",
          "python/tuples",
          "python/using_packages",
          "python/variables_data_types"
        ]
      },
      {
        "title": "Delegation as an alternative to inheritance",
        "text": "en/step3.md",
        "verify": [
          {
            "name": "Verify Python Print History",
            "file": "verify3-1.sh",
            "hint": "Please follow the instructions to complete the steps.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "python/build_in_functions",
          "python/classes_objects",
          "python/constructor",
          "python/encapsulation",
          "python/function_definition",
          "python/polymorphism",
          "python/python_shell",
          "python/tuples"
        ]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    },
    "assets": {
      "host01": [
        {
          "file": "stock.py",
          "target": "/home/labex/project",
          "chmod": "ugo+rwx"
        }
      ]
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": [],
  "license": {
    "name": "CC-BY-SA-4.0",
    "url": "https://github.com/dabeaz-course/python-mastery/blob/main/LICENSE.md",
    "repo": "https://github.com/dabeaz-course/python-mastery"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "自定义属性访问",
      "description": "在本实验中，你将学习如何自定义属性访问以及委托和继承之间的区别。",
      "meta": {
        "title": "Python 中的自定义属性访问",
        "description": "探索 Python 中自定义属性访问的技术，包括委托、继承和创建只读代理。",
        "keywords": "setattr、代理、Python、插槽、属性访问"
      },
      "details": {
        "steps": [
          {
            "title": "插槽与 setattr",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "验证 Python 类的继承和属性",
                "file": "verify1-1.sh",
                "hint": "请按照说明完成步骤。"
              }
            ]
          },
          {
            "title": "代理",
            "text": "zh/step2.md",
            "verify": [
              {
                "name": "验证 Python 的 __getattr__ 和 getattr 的用法",
                "file": "verify2-1.sh",
                "hint": "请按照说明完成步骤。"
              }
            ]
          },
          {
            "title": "作为继承替代方案的委托",
            "text": "zh/step3.md",
            "verify": [
              {
                "name": "验证 Python 打印历史记录",
                "file": "verify3-1.sh",
                "hint": "请按照说明完成步骤。"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Personalización del Acceso a Atributos",
      "description": "En este laboratorio, aprenderás sobre la personalización del acceso a atributos y la diferencia entre delegación e herencia.",
      "meta": {
        "title": "Personalización del Acceso a Atributos en Python",
        "description": "Explora técnicas para personalizar el acceso a atributos en Python, incluyendo delegación, herencia y creación de proxies de solo lectura.",
        "keywords": "setattr, proxies, python, slots, acceso a atributos"
      },
      "details": {
        "steps": [
          {
            "title": "Slots vs. setattr",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Verificar la herencia y los atributos de la clase de Python",
                "file": "verify1-1.sh",
                "hint": "Siga las instrucciones para completar los pasos."
              }
            ]
          },
          {
            "title": "Proxies",
            "text": "es/step2.md",
            "verify": [
              {
                "name": "Verificar el uso de __getattr__ y getattr de Python",
                "file": "verify2-1.sh",
                "hint": "Siga las instrucciones para completar los pasos."
              }
            ]
          },
          {
            "title": "Delegación como alternativa a la herencia",
            "text": "es/step3.md",
            "verify": [
              {
                "name": "Verificar el historial de impresión de Python",
                "file": "verify3-1.sh",
                "hint": "Siga las instrucciones para completar los pasos."
              }
            ]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Personnalisation de l'accès aux attributs",
      "description": "Dans ce laboratoire, vous allez découvrir la personnalisation de l'accès aux attributs et la différence entre la délégation et l'héritage.",
      "meta": {
        "title": "Personnalisation de l'accès aux attributs en Python",
        "description": "Explorez les techniques de personnalisation de l'accès aux attributs en Python, y compris la délégation, l'héritage et la création de proxys en lecture seule.",
        "keywords": "setattr, proxys, python, slots, accès aux attributs"
      },
      "details": {
        "steps": [
          {
            "title": "Slots vs. setattr",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Vérifiez l'héritage des classes Python et les attributs",
                "file": "verify1-1.sh",
                "hint": "Veuillez suivre les instructions pour compléter les étapes."
              }
            ]
          },
          {
            "title": "Proxys",
            "text": "fr/step2.md",
            "verify": [
              {
                "name": "Vérifiez l'utilisation de __getattr__ et getattr en Python",
                "file": "verify2-1.sh",
                "hint": "Veuillez suivre les instructions pour compléter les étapes."
              }
            ]
          },
          {
            "title": "La délégation comme alternative à l'héritage",
            "text": "fr/step3.md",
            "verify": [
              {
                "name": "Vérifiez l'historique d'impression en Python",
                "file": "verify3-1.sh",
                "hint": "Veuillez suivre les instructions pour compléter les étapes."
              }
            ]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Anpassen des Attributzugangs",
      "description": "In diesem Lab lernen Sie, wie Sie den Attributzugang anpassen und den Unterschied zwischen Delegation und Vererbung kennen.",
      "meta": {
        "title": "Anpassen des Attributzugangs in Python",
        "description": "Entdecken Sie Techniken zum Anpassen des Attributzugangs in Python, einschließlich Delegation, Vererbung und Erstellung von schreibgeschützten Proxies.",
        "keywords": "setattr, Proxies, Python, Slots, Attributzugang"
      },
      "details": {
        "steps": [
          {
            "title": "Slots vs. setattr",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Verifizieren Sie die Python-Klassenvererbung und -Attribute",
                "file": "verify1-1.sh",
                "hint": "Bitte folgen Sie den Anweisungen, um die Schritte abzuschließen."
              }
            ]
          },
          {
            "title": "Proxies",
            "text": "de/step2.md",
            "verify": [
              {
                "name": "Verifizieren Sie die Verwendung von Python __getattr__ und getattr",
                "file": "verify2-1.sh",
                "hint": "Bitte folgen Sie den Anweisungen, um die Schritte abzuschließen."
              }
            ]
          },
          {
            "title": "Delegation als Alternative zur Vererbung",
            "text": "de/step3.md",
            "verify": [
              {
                "name": "Verifizieren Sie die Python-Ausgabenhistorie",
                "file": "verify3-1.sh",
                "hint": "Bitte folgen Sie den Anweisungen, um die Schritte abzuschließen."
              }
            ]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "属性アクセスのカスタマイズ",
      "description": "この実験では、属性アクセスのカスタマイズと、委任と継承の違いについて学びます。",
      "meta": {
        "title": "Pythonにおける属性アクセスのカスタマイズ",
        "description": "Pythonにおける属性アクセスのカスタマイズ手法を探ります。委任、継承、および読み取り専用プロキシの作成を含みます。",
        "keywords": "setattr、プロキシ、Python、スロット、属性アクセス"
      },
      "details": {
        "steps": [
          {
            "title": "スロットとsetattrの比較",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "Pythonクラスの継承と属性を確認する",
                "file": "verify1-1.sh",
                "hint": "指示に従って手順を完了してください。"
              }
            ]
          },
          {
            "title": "プロキシ",
            "text": "ja/step2.md",
            "verify": [
              {
                "name": "Pythonの__getattr__とgetattrの使用方法を確認する",
                "file": "verify2-1.sh",
                "hint": "指示に従って手順を完了してください。"
              }
            ]
          },
          {
            "title": "継承の代替手段としての委任",
            "text": "ja/step3.md",
            "verify": [
              {
                "name": "Pythonの印刷履歴を確認する",
                "file": "verify3-1.sh",
                "hint": "指示に従って手順を完了してください。"
              }
            ]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Настройка доступа к атрибутам",
      "description": "В этой лабораторной работе вы узнаете о настройке доступа к атрибутам и различиях между делегированием и наследованием.",
      "meta": {
        "title": "Настройка доступа к атрибутам в Python",
        "description": "Изучайте методы настройки доступа к атрибутам в Python, включая делегирование, наследование и создание только для чтения прокси.",
        "keywords": "setattr, прокси, python, слоты, доступ к атрибутам"
      },
      "details": {
        "steps": [
          {
            "title": "Слоты против setattr",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "Проверить наследование классов и атрибуты в Python",
                "file": "verify1-1.sh",
                "hint": "Пожалуйста, следуйте инструкциям для завершения шагов."
              }
            ]
          },
          {
            "title": "Прокси",
            "text": "ru/step2.md",
            "verify": [
              {
                "name": "Проверить использование __getattr__ и getattr в Python",
                "file": "verify2-1.sh",
                "hint": "Пожалуйста, следуйте инструкциям для завершения шагов."
              }
            ]
          },
          {
            "title": "Делегирование как альтернатива наследованию",
            "text": "ru/step3.md",
            "verify": [
              {
                "name": "Проверить историю вывода в Python",
                "file": "verify3-1.sh",
                "hint": "Пожалуйста, следуйте инструкциям для завершения шагов."
              }
            ]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    }
  ]
}
