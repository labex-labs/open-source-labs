{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Make a New Primitive Type",
  "description": "Create a basic MutInt class, improve its string representation, add mathematical and comparison operations, and implement type conversions to make a new primitive type in Python.",
  "meta": {
    "title": "Make a New Primitive Type",
    "description": "Create a basic MutInt class, improve its string representation, add mathematical and comparison operations, and implement type conversions to make a new primitive type in Python.",
    "keywords": "Python, new primitive type, MutInt class, mathematical operations, type conversions"
  },
  "difficulty": "Beginner",
  "time": 25,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "verified": true,
  "details": {
    "steps": [
      {
        "title": "Creating a Basic MutInt Class",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify MutInt Class Creation",
            "file": "verify1-1.sh",
            "hint": "Make sure you've created the MutInt class with __init__ method in mutint.py",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": ["python/classes_objects", "python/constructor"],
        "solutions": ["step1_solution.md"]
      },
      {
        "title": "Improving String Representation",
        "text": "en/step2.md",
        "verify": [
          {
            "name": "Verify String Representation Methods",
            "file": "verify2-1.sh",
            "hint": "Ensure you've added the __str__, __repr__, and __format__ methods to the MutInt class",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": ["python/classes_objects"],
        "solutions": ["step2_solution.md"]
      },
      {
        "title": "Adding Mathematical Operations",
        "text": "en/step3.md",
        "verify": [
          {
            "name": "Verify Math Operation Methods",
            "file": "verify3-1.sh",
            "hint": "Make sure you've added the __add__, __radd__, and __iadd__ methods to the MutInt class",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": ["python/classes_objects", "python/function_definition"],
        "solutions": ["step3_solution.md"]
      },
      {
        "title": "Implementing Comparison Operations",
        "text": "en/step4.md",
        "verify": [
          {
            "name": "Verify Comparison Methods",
            "file": "verify4-1.sh",
            "hint": "Make sure you've added the comparison methods and the @total_ordering decorator",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "python/classes_objects",
          "python/conditional_statements",
          "python/decorators"
        ],
        "solutions": ["step4_solution.md"]
      },
      {
        "title": "Adding Type Conversions",
        "text": "en/step5.md",
        "verify": [
          {
            "name": "Verify Type Conversion Methods",
            "file": "verify5-1.sh",
            "hint": "Make sure you've added the __int__, __float__, and __index__ methods",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "python/classes_objects",
          "python/function_definition",
          "python/type_conversion"
        ],
        "solutions": ["step5_solution.md"]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": [],
  "license": {
    "name": "CC-BY-SA-4.0",
    "url": "https://github.com/dabeaz-course/python-mastery/blob/main/LICENSE.md",
    "repo": "https://github.com/dabeaz-course/python-mastery"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "创建新的原始类型",
      "description": "创建一个基本的 MutInt 类，改进其字符串表示形式，添加数学和比较运算，并实现类型转换，以在 Python 中创建一个新的原始类型。",
      "meta": {
        "title": "创建新的原始类型",
        "description": "创建一个基本的 MutInt 类，改进其字符串表示形式，添加数学和比较运算，并实现类型转换，以在 Python 中创建一个新的原始类型。",
        "keywords": "Python, 新原始类型, MutInt 类, 数学运算, 类型转换"
      },
      "details": {
        "steps": [
          {
            "title": "创建基本的 MutInt 类",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "验证 MutInt 类是否创建",
                "file": "verify1-1.sh",
                "hint": "确保你已在 mutint.py 中使用 __init__ 方法创建了 MutInt 类"
              }
            ]
          },
          {
            "title": "改进字符串表示形式",
            "text": "zh/step2.md",
            "verify": [
              {
                "name": "验证字符串表示方法",
                "file": "verify2-1.sh",
                "hint": "确保你已为 MutInt 类添加了 __str__、__repr__ 和 __format__ 方法"
              }
            ]
          },
          {
            "title": "添加数学运算",
            "text": "zh/step3.md",
            "verify": [
              {
                "name": "验证数学运算方法",
                "file": "verify3-1.sh",
                "hint": "确保你已为 MutInt 类添加了 __add__、__radd__ 和 __iadd__ 方法"
              }
            ]
          },
          {
            "title": "实现比较运算",
            "text": "zh/step4.md",
            "verify": [
              {
                "name": "验证比较方法",
                "file": "verify4-1.sh",
                "hint": "确保你已添加比较方法和 @total_ordering 装饰器"
              }
            ]
          },
          {
            "title": "添加类型转换",
            "text": "zh/step5.md",
            "verify": [
              {
                "name": "验证类型转换方法",
                "file": "verify5-1.sh",
                "hint": "确保你已添加 __int__、__float__ 和 __index__ 方法"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Crear un nuevo tipo primitivo",
      "description": "Crea una clase básica MutInt, mejora su representación en cadena, agrega operaciones matemáticas y de comparación, e implementa conversiones de tipos para crear un nuevo tipo primitivo en Python.",
      "meta": {
        "title": "Crear un nuevo tipo primitivo",
        "description": "Crea una clase básica MutInt, mejora su representación en cadena, agrega operaciones matemáticas y de comparación, e implementa conversiones de tipos para crear un nuevo tipo primitivo en Python.",
        "keywords": "Python, nuevo tipo primitivo, clase MutInt, operaciones matemáticas, conversiones de tipos"
      },
      "details": {
        "steps": [
          {
            "title": "Crear una clase básica MutInt",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Verificar la creación de la clase MutInt",
                "file": "verify1-1.sh",
                "hint": "Asegúrate de haber creado la clase MutInt con el método __init__ en mutint.py"
              }
            ]
          },
          {
            "title": "Mejorar la representación en cadena",
            "text": "es/step2.md",
            "verify": [
              {
                "name": "Verificar los métodos de representación en cadena",
                "file": "verify2-1.sh",
                "hint": "Asegúrate de haber agregado los métodos __str__, __repr__ y __format__ a la clase MutInt"
              }
            ]
          },
          {
            "title": "Agregar operaciones matemáticas",
            "text": "es/step3.md",
            "verify": [
              {
                "name": "Verificar los métodos de operaciones matemáticas",
                "file": "verify3-1.sh",
                "hint": "Asegúrate de haber agregado los métodos __add__, __radd__ y __iadd__ a la clase MutInt"
              }
            ]
          },
          {
            "title": "Implementar operaciones de comparación",
            "text": "es/step4.md",
            "verify": [
              {
                "name": "Verificar los métodos de comparación",
                "file": "verify4-1.sh",
                "hint": "Asegúrate de haber agregado los métodos de comparación y el decorador @total_ordering"
              }
            ]
          },
          {
            "title": "Agregar conversiones de tipo",
            "text": "es/step5.md",
            "verify": [
              {
                "name": "Verificar los métodos de conversión de tipo",
                "file": "verify5-1.sh",
                "hint": "Asegúrate de haber agregado los métodos __int__, __float__ y __index__"
              }
            ]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Créer un nouveau type primitif",
      "description": "Créez une classe MutInt de base, améliorez sa représentation sous forme de chaîne de caractères, ajoutez des opérations mathématiques et de comparaison, et implémentez des conversions de types pour créer un nouveau type primitif en Python.",
      "meta": {
        "title": "Créer un nouveau type primitif",
        "description": "Créez une classe MutInt de base, améliorez sa représentation sous forme de chaîne de caractères, ajoutez des opérations mathématiques et de comparaison, et implémentez des conversions de types pour créer un nouveau type primitif en Python.",
        "keywords": "Python, nouveau type primitif, classe MutInt, opérations mathématiques, conversions de types"
      },
      "details": {
        "steps": [
          {
            "title": "Création d'une classe MutInt de base",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Vérifier la création de la classe MutInt",
                "file": "verify1-1.sh",
                "hint": "Assurez-vous d'avoir créé la classe MutInt avec la méthode __init__ dans mutint.py"
              }
            ]
          },
          {
            "title": "Amélioration de la représentation sous forme de chaîne de caractères",
            "text": "fr/step2.md",
            "verify": [
              {
                "name": "Vérifier les méthodes de représentation sous forme de chaîne de caractères",
                "file": "verify2-1.sh",
                "hint": "Assurez-vous d'avoir ajouté les méthodes __str__, __repr__ et __format__ à la classe MutInt"
              }
            ]
          },
          {
            "title": "Ajout d'opérations mathématiques",
            "text": "fr/step3.md",
            "verify": [
              {
                "name": "Vérifier les méthodes d'opérations mathématiques",
                "file": "verify3-1.sh",
                "hint": "Assurez-vous d'avoir ajouté les méthodes __add__, __radd__ et __iadd__ à la classe MutInt"
              }
            ]
          },
          {
            "title": "Implémentation d'opérations de comparaison",
            "text": "fr/step4.md",
            "verify": [
              {
                "name": "Vérifier les méthodes de comparaison",
                "file": "verify4-1.sh",
                "hint": "Assurez-vous d'avoir ajouté les méthodes de comparaison et le décorateur @total_ordering"
              }
            ]
          },
          {
            "title": "Ajout de conversions de type",
            "text": "fr/step5.md",
            "verify": [
              {
                "name": "Vérifier les méthodes de conversion de type",
                "file": "verify5-1.sh",
                "hint": "Assurez-vous d'avoir ajouté les méthodes __int__, __float__ et __index__"
              }
            ]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Einen neuen primitiven Typ erstellen",
      "description": "Erstellen Sie eine grundlegende MutInt - Klasse, verbessern Sie ihre String - Darstellung, fügen Sie mathematische und Vergleichsoperationen hinzu und implementieren Sie Typkonvertierungen, um einen neuen primitiven Typ in Python zu erstellen.",
      "meta": {
        "title": "Einen neuen primitiven Typ erstellen",
        "description": "Erstellen Sie eine grundlegende MutInt - Klasse, verbessern Sie ihre String - Darstellung, fügen Sie mathematische und Vergleichsoperationen hinzu und implementieren Sie Typkonvertierungen, um einen neuen primitiven Typ in Python zu erstellen.",
        "keywords": "Python, neuer primitiver Typ, MutInt - Klasse, mathematische Operationen, Typkonvertierungen"
      },
      "details": {
        "steps": [
          {
            "title": "Erstellen einer grundlegenden MutInt - Klasse",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Überprüfen der Erstellung der MutInt - Klasse",
                "file": "verify1-1.sh",
                "hint": "Stellen Sie sicher, dass Sie die MutInt - Klasse mit der __init__ - Methode in mutint.py erstellt haben"
              }
            ]
          },
          {
            "title": "Verbessern der String - Darstellung",
            "text": "de/step2.md",
            "verify": [
              {
                "name": "Überprüfen der String - Darstellungsmethoden",
                "file": "verify2-1.sh",
                "hint": "Stellen Sie sicher, dass Sie die Methoden __str__, __repr__ und __format__ zur MutInt - Klasse hinzugefügt haben"
              }
            ]
          },
          {
            "title": "Hinzufügen von mathematischen Operationen",
            "text": "de/step3.md",
            "verify": [
              {
                "name": "Überprüfen der mathematischen Operationsmethoden",
                "file": "verify3-1.sh",
                "hint": "Stellen Sie sicher, dass Sie die Methoden __add__, __radd__ und __iadd__ zur MutInt - Klasse hinzugefügt haben"
              }
            ]
          },
          {
            "title": "Implementierung von Vergleichsoperationen",
            "text": "de/step4.md",
            "verify": [
              {
                "name": "Überprüfen der Vergleichsmethoden",
                "file": "verify4-1.sh",
                "hint": "Stellen Sie sicher, dass Sie die Vergleichsmethoden und den @total_ordering - Dekorator hinzugefügt haben"
              }
            ]
          },
          {
            "title": "Hinzufügen von Typkonvertierungen",
            "text": "de/step5.md",
            "verify": [
              {
                "name": "Überprüfen der Typkonvertierungsmethoden",
                "file": "verify5-1.sh",
                "hint": "Stellen Sie sicher, dass Sie die Methoden __int__, __float__ und __index__ hinzugefügt haben"
              }
            ]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "新しいプリミティブ型を作成する",
      "description": "基本的な MutInt クラスを作成し、その文字列表現を改善し、数学的および比較演算を追加し、型変換を実装して、Python で新しいプリミティブ型を作成します。",
      "meta": {
        "title": "新しいプリミティブ型を作成する",
        "description": "基本的な MutInt クラスを作成し、その文字列表現を改善し、数学的および比較演算を追加し、型変換を実装して、Python で新しいプリミティブ型を作成します。",
        "keywords": "Python, 新しいプリミティブ型, MutInt クラス, 数学的演算, 型変換"
      },
      "details": {
        "steps": [
          {
            "title": "基本的な MutInt クラスの作成",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "MutInt クラスの作成を確認する",
                "file": "verify1-1.sh",
                "hint": "mutint.py で __init__ メソッドを持つ MutInt クラスを作成したことを確認してください"
              }
            ]
          },
          {
            "title": "文字列表現の改善",
            "text": "ja/step2.md",
            "verify": [
              {
                "name": "文字列表現メソッドの確認",
                "file": "verify2-1.sh",
                "hint": "MutInt クラスに __str__、__repr__、__format__ メソッドを追加したことを確認してください"
              }
            ]
          },
          {
            "title": "数学演算の追加",
            "text": "ja/step3.md",
            "verify": [
              {
                "name": "数学演算メソッドの確認",
                "file": "verify3-1.sh",
                "hint": "MutInt クラスに __add__、__radd__、__iadd__ メソッドを追加したことを確認してください"
              }
            ]
          },
          {
            "title": "比較演算の実装",
            "text": "ja/step4.md",
            "verify": [
              {
                "name": "比較メソッドの確認",
                "file": "verify4-1.sh",
                "hint": "比較メソッドと @total_ordering デコレータを追加したことを確認してください"
              }
            ]
          },
          {
            "title": "型変換の追加",
            "text": "ja/step5.md",
            "verify": [
              {
                "name": "型変換メソッドの確認",
                "file": "verify5-1.sh",
                "hint": "__int__、__float__、__index__ メソッドを追加したことを確認してください"
              }
            ]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Создание нового примитивного типа",
      "description": "Создайте базовый класс MutInt, улучшите его строковое представление, добавьте математические и операции сравнения, а также реализуйте преобразования типов, чтобы создать новый примитивный тип в Python.",
      "meta": {
        "title": "Создание нового примитивного типа",
        "description": "Создайте базовый класс MutInt, улучшите его строковое представление, добавьте математические и операции сравнения, а также реализуйте преобразования типов, чтобы создать новый примитивный тип в Python.",
        "keywords": "Python, новый примитивный тип, класс MutInt, математические операции, преобразования типов"
      },
      "details": {
        "steps": [
          {
            "title": "Создание базового класса MutInt",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "Проверка создания класса MutInt",
                "file": "verify1-1.sh",
                "hint": "Убедитесь, что вы создали класс MutInt с методом __init__ в файле mutint.py"
              }
            ]
          },
          {
            "title": "Улучшение строкового представления",
            "text": "ru/step2.md",
            "verify": [
              {
                "name": "Проверка методов строкового представления",
                "file": "verify2-1.sh",
                "hint": "Убедитесь, что вы добавили методы __str__, __repr__ и __format__ в класс MutInt"
              }
            ]
          },
          {
            "title": "Добавление математических операций",
            "text": "ru/step3.md",
            "verify": [
              {
                "name": "Проверка методов математических операций",
                "file": "verify3-1.sh",
                "hint": "Убедитесь, что вы добавили методы __add__, __radd__ и __iadd__ в класс MutInt"
              }
            ]
          },
          {
            "title": "Реализация операций сравнения",
            "text": "ru/step4.md",
            "verify": [
              {
                "name": "Проверка методов сравнения",
                "file": "verify4-1.sh",
                "hint": "Убедитесь, что вы добавили методы сравнения и декоратор @total_ordering"
              }
            ]
          },
          {
            "title": "Добавление преобразований типов",
            "text": "ru/step5.md",
            "verify": [
              {
                "name": "Проверка методов преобразования типов",
                "file": "verify5-1.sh",
                "hint": "Убедитесь, что вы добавили методы __int__, __float__ и __index__"
              }
            ]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    }
  ]
}
