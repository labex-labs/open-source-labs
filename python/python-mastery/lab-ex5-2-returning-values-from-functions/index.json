{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Returning Values From Functions",
  "description": "Learn to return multiple values from functions, handle optional return values, and work with futures for concurrent programming in Python.",
  "meta": {
    "title": "Returning Values From Functions",
    "description": "Learn to return multiple values from functions, handle optional return values, and work with futures for concurrent programming in Python.",
    "keywords": "Python, returning values, multiple values, optional values, futures"
  },
  "difficulty": "Beginner",
  "time": 15,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "verified": true,
  "details": {
    "steps": [
      {
        "title": "Returning Multiple Values from Functions",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify parse_line function implementation",
            "file": "verify1-1.sh",
            "hint": "Make sure you have created the return_values.py file with the parse_line function that returns a tuple.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "python/arguments_return",
          "python/data_collections",
          "python/tuples"
        ]
      },
      {
        "title": "Returning Optional Values",
        "text": "en/step2.md",
        "verify": [
          {
            "name": "Verify updated parse_line function",
            "file": "verify2-1.sh",
            "hint": "Make sure you have modified the parse_line function to return None for invalid input.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": ["python/arguments_return", "python/catching_exceptions"]
      },
      {
        "title": "Working with Futures for Concurrent Programming",
        "text": "en/step3.md",
        "verify": [
          {
            "name": "Verify futures implementation",
            "file": "verify3-1.sh",
            "hint": "Make sure you have created the futures_demo.py file with the ThreadPoolExecutor example.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "python/arguments_return",
          "python/function_definition",
          "python/threading_multiprocessing"
        ]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": [],
  "license": {
    "name": "CC-BY-SA-4.0",
    "url": "https://github.com/dabeaz-course/python-mastery/blob/main/LICENSE.md",
    "repo": "https://github.com/dabeaz-course/python-mastery"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "函数返回值",
      "description": "学习在 Python 中从函数返回多个值、处理可选返回值，以及使用 Future 进行并发编程。",
      "meta": {
        "title": "函数返回值",
        "description": "学习在 Python 中从函数返回多个值、处理可选返回值，以及使用 Future 进行并发编程。",
        "keywords": "Python, 返回值，多个值，可选值，Future"
      },
      "details": {
        "steps": [
          {
            "title": "从函数返回多个值",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "验证 parse_line 函数的实现",
                "file": "verify1-1.sh",
                "hint": "确保你已经创建了 return_values.py 文件，其中包含返回元组的 parse_line 函数。"
              }
            ]
          },
          {
            "title": "返回可选值",
            "text": "zh/step2.md",
            "verify": [
              {
                "name": "验证更新后的 parse_line 函数",
                "file": "verify2-1.sh",
                "hint": "确保你已修改 parse_line 函数，使其在输入无效时返回 None。"
              }
            ]
          },
          {
            "title": "使用 Futures 进行并发编程",
            "text": "zh/step3.md",
            "verify": [
              {
                "name": "验证 futures 实现",
                "file": "verify3-1.sh",
                "hint": "确保你已经创建了 futures_demo.py 文件，并包含 ThreadPoolExecutor 示例。"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Devolver valores desde funciones",
      "description": "Aprende a devolver múltiples valores desde funciones, manejar valores de retorno opcionales y trabajar con futures para la programación concurrente en Python.",
      "meta": {
        "title": "Devolver valores desde funciones",
        "description": "Aprende a devolver múltiples valores desde funciones, manejar valores de retorno opcionales y trabajar con futures para la programación concurrente en Python.",
        "keywords": "Python, devolver valores, múltiples valores, valores opcionales, futures"
      },
      "details": {
        "steps": [
          {
            "title": "Devolver múltiples valores desde funciones",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Verificar la implementación de la función parse_line",
                "file": "verify1-1.sh",
                "hint": "Asegúrate de haber creado el archivo return_values.py con la función parse_line que devuelve una tupla."
              }
            ]
          },
          {
            "title": "Devolver valores opcionales",
            "text": "es/step2.md",
            "verify": [
              {
                "name": "Verificar la función parse_line actualizada",
                "file": "verify2-1.sh",
                "hint": "Asegúrate de haber modificado la función parse_line para que devuelva None para entradas no válidas."
              }
            ]
          },
          {
            "title": "Trabajando con Futures para programación concurrente",
            "text": "es/step3.md",
            "verify": [
              {
                "name": "Verificar la implementación de futures",
                "file": "verify3-1.sh",
                "hint": "Asegúrate de haber creado el archivo futures_demo.py con el ejemplo de ThreadPoolExecutor."
              }
            ]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Retourner des valeurs depuis des fonctions",
      "description": "Apprenez à retourner plusieurs valeurs depuis des fonctions, à gérer les valeurs de retour optionnelles et à travailler avec les objets `Future` pour la programmation concurrente en Python.",
      "meta": {
        "title": "Retourner des valeurs depuis des fonctions",
        "description": "Apprenez à retourner plusieurs valeurs depuis des fonctions, à gérer les valeurs de retour optionnelles et à travailler avec les objets `Future` pour la programmation concurrente en Python.",
        "keywords": "Python, retour de valeurs, valeurs multiples, valeurs optionnelles, objets `Future`"
      },
      "details": {
        "steps": [
          {
            "title": "Retourner plusieurs valeurs depuis des fonctions",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Vérifier l'implémentation de la fonction parse_line",
                "file": "verify1-1.sh",
                "hint": "Assurez-vous d'avoir créé le fichier return_values.py avec la fonction parse_line qui retourne un tuple."
              }
            ]
          },
          {
            "title": "Retourner des valeurs optionnelles",
            "text": "fr/step2.md",
            "verify": [
              {
                "name": "Vérifier la fonction parse_line mise à jour",
                "file": "verify2-1.sh",
                "hint": "Assurez-vous d'avoir modifié la fonction parse_line pour retourner None en cas d'entrée invalide."
              }
            ]
          },
          {
            "title": "Utilisation des futures pour la programmation concurrente",
            "text": "fr/step3.md",
            "verify": [
              {
                "name": "Vérifier l'implémentation des futures",
                "file": "verify3-1.sh",
                "hint": "Assurez-vous d'avoir créé le fichier futures_demo.py avec l'exemple d'utilisation de ThreadPoolExecutor."
              }
            ]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Rückgabe von Werten aus Funktionen",
      "description": "Lernen Sie, mehrere Werte aus Funktionen zurückzugeben, optionale Rückgabewerte zu verarbeiten und mit Futures für die parallele Programmierung in Python zu arbeiten.",
      "meta": {
        "title": "Rückgabe von Werten aus Funktionen",
        "description": "Lernen Sie, mehrere Werte aus Funktionen zurückzugeben, optionale Rückgabewerte zu verarbeiten und mit Futures für die parallele Programmierung in Python zu arbeiten.",
        "keywords": "Python, Rückgabe von Werten, mehrere Werte, optionale Werte, Futures"
      },
      "details": {
        "steps": [
          {
            "title": "Rückgabe mehrerer Werte aus Funktionen",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Überprüfen Sie die Implementierung der parse_line - Funktion",
                "file": "verify1-1.sh",
                "hint": "Stellen Sie sicher, dass Sie die Datei return_values.py mit der parse_line - Funktion erstellt haben, die ein Tupel zurückgibt."
              }
            ]
          },
          {
            "title": "Rückgabe optionaler Werte",
            "text": "de/step2.md",
            "verify": [
              {
                "name": "Überprüfen Sie die aktualisierte parse_line - Funktion",
                "file": "verify2-1.sh",
                "hint": "Stellen Sie sicher, dass Sie die parse_line - Funktion so geändert haben, dass sie None für ungültige Eingaben zurückgibt."
              }
            ]
          },
          {
            "title": "Arbeiten mit Futures für paralleles Programmieren",
            "text": "de/step3.md",
            "verify": [
              {
                "name": "Überprüfen Sie die Futures - Implementierung",
                "file": "verify3-1.sh",
                "hint": "Stellen Sie sicher, dass Sie die Datei futures_demo.py mit dem ThreadPoolExecutor - Beispiel erstellt haben."
              }
            ]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "関数からの値の返却",
      "description": "Python で関数から複数の値を返す方法、オプションの戻り値を処理する方法、および並行プログラミングでの Future の使い方を学びましょう。",
      "meta": {
        "title": "関数からの値の返却",
        "description": "Python で関数から複数の値を返す方法、オプションの戻り値を処理する方法、および並行プログラミングでの Future の使い方を学びましょう。",
        "keywords": "Python, 値の返却，複数の値，オプションの値，Future"
      },
      "details": {
        "steps": [
          {
            "title": "関数から複数の値を返す",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "parse_line 関数の実装を検証する",
                "file": "verify1-1.sh",
                "hint": "タプルを返す parse_line 関数が記述された return_values.py ファイルを作成していることを確認してください。"
              }
            ]
          },
          {
            "title": "オプションの値を返す",
            "text": "ja/step2.md",
            "verify": [
              {
                "name": "更新された parse_line 関数を検証する",
                "file": "verify2-1.sh",
                "hint": "parse_line 関数を修正し、無効な入力に対して None を返すようにしていることを確認してください。"
              }
            ]
          },
          {
            "title": "並行プログラミングでの Futures の使用",
            "text": "ja/step3.md",
            "verify": [
              {
                "name": "futures の実装を検証する",
                "file": "verify3-1.sh",
                "hint": "ThreadPoolExecutor のサンプルが記述された futures_demo.py ファイルを作成していることを確認してください。"
              }
            ]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Возвращение значений из функций",
      "description": "Узнайте, как возвращать несколько значений из функций, обрабатывать необязательные возвращаемые значения и работать с объектами Future для параллельного программирования в Python.",
      "meta": {
        "title": "Возвращение значений из функций",
        "description": "Узнайте, как возвращать несколько значений из функций, обрабатывать необязательные возвращаемые значения и работать с объектами Future для параллельного программирования в Python.",
        "keywords": "Python, возврат значений, несколько значений, необязательные значения, объекты Future"
      },
      "details": {
        "steps": [
          {
            "title": "Возвращение нескольких значений из функций",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "Проверить реализацию функции parse_line",
                "file": "verify1-1.sh",
                "hint": "Убедитесь, что вы создали файл return_values.py с функцией parse_line, которая возвращает кортеж."
              }
            ]
          },
          {
            "title": "Возвращение необязательных значений",
            "text": "ru/step2.md",
            "verify": [
              {
                "name": "Проверить обновленную функцию parse_line",
                "file": "verify2-1.sh",
                "hint": "Убедитесь, что вы изменили функцию parse_line так, чтобы она возвращала None для некорректного ввода."
              }
            ]
          },
          {
            "title": "Работа с futures для параллельного программирования",
            "text": "ru/step3.md",
            "verify": [
              {
                "name": "Проверить реализацию futures",
                "file": "verify3-1.sh",
                "hint": "Убедитесь, что вы создали файл futures_demo.py с примером ThreadPoolExecutor."
              }
            ]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    },
    {
      "lang": "ko",
      "title": "함수에서 값 반환하기",
      "description": "Python 에서 함수에서 여러 값을 반환하고, 선택적 반환 값을 처리하며, 동시 프로그래밍을 위해 futures 를 사용하는 방법을 알아보세요.",
      "meta": {
        "title": "Python 함수 값 반환: 튜플, None, Future 활용법",
        "description": "Python 함수에서 여러 값 반환, 선택적 값 처리, 동시 프로그래밍 (futures) 활용 방법 학습. 튜플, None, Future 예제.",
        "keywords": "Python, 함수, 값 반환, 튜플, None, Future, 동시 프로그래밍, 멀티스레딩, 비동기 프로그래밍"
      },
      "details": {
        "steps": [
          {
            "title": "함수에서 여러 값 반환하기",
            "text": "ko/step1.md",
            "verify": [
              {
                "name": "parse_line 함수 구현 검증",
                "file": "verify1-1.sh",
                "hint": "튜플을 반환하는 parse_line 함수가 포함된 return_values.py 파일을 생성했는지 확인하세요."
              }
            ]
          },
          {
            "title": "선택적 값 반환",
            "text": "ko/step2.md",
            "verify": [
              {
                "name": "업데이트된 parse_line 함수 검증",
                "file": "verify2-1.sh",
                "hint": "parse_line 함수가 유효하지 않은 입력에 대해 None 을 반환하도록 수정했는지 확인하세요."
              }
            ]
          },
          {
            "title": "동시 프로그래밍을 위한 Future 사용",
            "text": "ko/step3.md",
            "verify": [
              {
                "name": "Futures 구현 검증",
                "file": "verify3-1.sh",
                "hint": "ThreadPoolExecutor 예제가 포함된 futures_demo.py 파일을 생성했는지 확인하세요."
              }
            ]
          }
        ],
        "intro": {
          "text": "ko/intro.md",
          "title": "소개"
        },
        "finish": {
          "text": "ko/finish.md",
          "title": "요약"
        }
      }
    },
    {
      "lang": "pt",
      "title": "Retornando Valores de Funções",
      "description": "Aprenda a retornar múltiplos valores de funções, lidar com valores de retorno opcionais e trabalhar com futures para programação concorrente em Python.",
      "meta": {
        "title": "Retornando Valores de Funções em Python: Guia Completo",
        "description": "Descubra como retornar múltiplos valores de funções, gerenciar valores opcionais e usar futures para programação concorrente em Python. Melhore a eficiência do seu código!",
        "keywords": "Python, retornar valores, múltiplos valores, valores opcionais, futures, programação concorrente, tutorial Python"
      },
      "details": {
        "steps": [
          {
            "title": "Retornando Múltiplos Valores de Funções",
            "text": "pt/step1.md",
            "verify": [
              {
                "name": "Verificar a implementação da função parse_line",
                "file": "verify1-1.sh",
                "hint": "Certifique-se de ter criado o arquivo return_values.py com a função parse_line que retorna uma tupla."
              }
            ]
          },
          {
            "title": "Retornando Valores Opcionais",
            "text": "pt/step2.md",
            "verify": [
              {
                "name": "Verificar a função parse_line atualizada",
                "file": "verify2-1.sh",
                "hint": "Certifique-se de ter modificado a função parse_line para retornar None para entradas inválidas."
              }
            ]
          },
          {
            "title": "Trabalhando com Futures para Programação Concorrente",
            "text": "pt/step3.md",
            "verify": [
              {
                "name": "Verificar a implementação de futures",
                "file": "verify3-1.sh",
                "hint": "Certifique-se de ter criado o arquivo futures_demo.py com o exemplo ThreadPoolExecutor."
              }
            ]
          }
        ],
        "intro": {
          "text": "pt/intro.md",
          "title": "Introdução"
        },
        "finish": {
          "text": "pt/finish.md",
          "title": "Resumo"
        }
      }
    }
  ]
}
