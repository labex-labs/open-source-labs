{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Low-Level of Class Creation",
  "description": "Manually create classes, create a typed structure helper, and generate classes efficiently to understand the low-level aspects of class creation in Python.",
  "meta": {
    "title": "Low-Level of Class Creation",
    "description": "Manually create classes, create a typed structure helper, and generate classes efficiently to understand the low-level aspects of class creation in Python.",
    "keywords": "Python, low-level, class creation, typed structure, efficient generation"
  },
  "difficulty": "Beginner",
  "time": 15,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "verified": true,
  "details": {
    "steps": [
      {
        "title": "Manual Class Creation",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify Python Shell History",
            "file": "verify1-1.sh",
            "hint": "Make sure you've entered all the commands correctly in the Python interactive shell.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": []
      },
      {
        "title": "Creating a Typed Structure Helper",
        "text": "en/step2.md",
        "verify": [
          {
            "name": "Verify structure.py Implementation",
            "file": "verify2-1.sh",
            "hint": "Make sure you've correctly implemented the typed_structure function in structure.py.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [],
        "solutions": ["structure.py"]
      },
      {
        "title": "Efficient Class Generation",
        "text": "en/step3.md",
        "verify": [
          {
            "name": "Verify Typed Class Implementation",
            "file": "verify3-1.sh",
            "hint": "Make sure you've correctly implemented the Typed class and dynamic class generation.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [],
        "solutions": ["validate.py"]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    },
    "assets": {
      "host01": [
        {
          "file": "structure.py",
          "target": "/home/labex/project",
          "chmod": "ugo+rwx"
        },
        {
          "file": "validate.py",
          "target": "/home/labex/project",
          "chmod": "ugo+rwx"
        }
      ]
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": [],
  "license": {
    "name": "CC-BY-SA-4.0",
    "url": "https://github.com/dabeaz-course/python-mastery/blob/main/LICENSE.md",
    "repo": "https://github.com/dabeaz-course/python-mastery"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "类创建的底层机制",
      "description": "手动创建类、创建类型化结构辅助工具并高效生成类，以了解 Python 中类创建的底层方面。",
      "meta": {
        "title": "类创建的底层机制",
        "description": "手动创建类、创建类型化结构辅助工具并高效生成类，以了解 Python 中类创建的底层方面。",
        "keywords": "Python, 底层机制，类创建，类型化结构，高效生成"
      },
      "details": {
        "steps": [
          {
            "title": "手动创建类",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "验证 Python  shell 历史记录",
                "file": "verify1-1.sh",
                "hint": "确保你已在 Python 交互式 shell 中正确输入所有命令。"
              }
            ]
          },
          {
            "title": "创建类型化结构辅助工具",
            "text": "zh/step2.md",
            "verify": [
              {
                "name": "验证 structure.py 的实现",
                "file": "verify2-1.sh",
                "hint": "确保你已在 structure.py 中正确实现了 typed_structure 函数。"
              }
            ]
          },
          {
            "title": "高效类生成",
            "text": "zh/step3.md",
            "verify": [
              {
                "name": "验证类型化类的实现",
                "file": "verify3-1.sh",
                "hint": "确保你已正确实现 Typed 类和动态类生成。"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Nivel bajo de creación de clases",
      "description": "Crea manualmente clases, crea un asistente de estructura tipada y genera clases de manera eficiente para comprender los aspectos de bajo nivel de la creación de clases en Python.",
      "meta": {
        "title": "Nivel bajo de creación de clases",
        "description": "Crea manualmente clases, crea un asistente de estructura tipada y genera clases de manera eficiente para comprender los aspectos de bajo nivel de la creación de clases en Python.",
        "keywords": "Python, nivel bajo, creación de clases, estructura tipada, generación eficiente"
      },
      "details": {
        "steps": [
          {
            "title": "Creación manual de clases",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Verificar el historial de la shell de Python",
                "file": "verify1-1.sh",
                "hint": "Asegúrate de haber ingresado todos los comandos correctamente en la shell interactiva de Python."
              }
            ]
          },
          {
            "title": "Creación de un asistente de estructura tipada",
            "text": "es/step2.md",
            "verify": [
              {
                "name": "Verificar la implementación de structure.py",
                "file": "verify2-1.sh",
                "hint": "Asegúrate de haber implementado correctamente la función typed_structure en structure.py."
              }
            ]
          },
          {
            "title": "Generación eficiente de clases",
            "text": "es/step3.md",
            "verify": [
              {
                "name": "Verificar la implementación de la clase tipada",
                "file": "verify3-1.sh",
                "hint": "Asegúrate de haber implementado correctamente la clase Typed y la generación dinámica de clases."
              }
            ]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Création de classes de bas niveau",
      "description": "Créez manuellement des classes, créez un outil pour les structures typées et générez des classes efficacement pour comprendre les aspects de bas niveau de la création de classes en Python.",
      "meta": {
        "title": "Création de classes de bas niveau",
        "description": "Créez manuellement des classes, créez un outil pour les structures typées et générez des classes efficacement pour comprendre les aspects de bas niveau de la création de classes en Python.",
        "keywords": "Python, bas niveau, création de classes, structure typée, génération efficace"
      },
      "details": {
        "steps": [
          {
            "title": "Création manuelle de classes",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Vérifier l'historique du shell Python",
                "file": "verify1-1.sh",
                "hint": "Assurez-vous d'avoir entré correctement toutes les commandes dans le shell interactif Python."
              }
            ]
          },
          {
            "title": "Création d'un outil pour les structures typées",
            "text": "fr/step2.md",
            "verify": [
              {
                "name": "Vérifier l'implémentation de structure.py",
                "file": "verify2-1.sh",
                "hint": "Assurez-vous d'avoir correctement implémenté la fonction typed_structure dans le fichier structure.py."
              }
            ]
          },
          {
            "title": "Génération efficace de classes",
            "text": "fr/step3.md",
            "verify": [
              {
                "name": "Vérifier l'implémentation de la classe typée",
                "file": "verify3-1.sh",
                "hint": "Assurez-vous d'avoir correctement implémenté la classe Typed et la génération dynamique de classes."
              }
            ]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Niedrig-Level Klassenerstellung",
      "description": "Erstellen Sie Klassen manuell, erstellen Sie einen Helfer für typisierte Strukturen und generieren Sie Klassen effizient, um die niedrig - level Aspekte der Klassenerstellung in Python zu verstehen.",
      "meta": {
        "title": "Niedrig-Level Klassenerstellung",
        "description": "Erstellen Sie Klassen manuell, erstellen Sie einen Helfer für typisierte Strukturen und generieren Sie Klassen effizient, um die niedrig - level Aspekte der Klassenerstellung in Python zu verstehen.",
        "keywords": "Python, niedrig - level, Klassenerstellung, typisierte Struktur, effiziente Generierung"
      },
      "details": {
        "steps": [
          {
            "title": "Manuelle Klassenerstellung",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Überprüfen der Python-Shell-Verlaufs",
                "file": "verify1-1.sh",
                "hint": "Stellen Sie sicher, dass Sie alle Befehle korrekt in der interaktiven Python-Shell eingegeben haben."
              }
            ]
          },
          {
            "title": "Erstellung eines Hilfsprogramms für typisierte Strukturen",
            "text": "de/step2.md",
            "verify": [
              {
                "name": "Überprüfung der Implementierung in structure.py",
                "file": "verify2-1.sh",
                "hint": "Stellen Sie sicher, dass Sie die Funktion typed_structure in structure.py korrekt implementiert haben."
              }
            ]
          },
          {
            "title": "Effiziente Klassen-Erstellung",
            "text": "de/step3.md",
            "verify": [
              {
                "name": "Überprüfung der Implementierung der Typisierten Klasse",
                "file": "verify3-1.sh",
                "hint": "Stellen Sie sicher, dass Sie die Typed-Klasse und die dynamische Klassen-Erstellung korrekt implementiert haben."
              }
            ]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "クラス作成の低レベルメカニズム",
      "description": "Python でのクラス作成の低レベルの側面を理解するために、手動でクラスを作成し、型付き構造のヘルパーを作成し、効率的にクラスを生成します。",
      "meta": {
        "title": "クラス作成の低レベルメカニズム",
        "description": "Python でのクラス作成の低レベルの側面を理解するために、手動でクラスを作成し、型付き構造のヘルパーを作成し、効率的にクラスを生成します。",
        "keywords": "Python, 低レベル，クラス作成，型付き構造，効率的な生成"
      },
      "details": {
        "steps": [
          {
            "title": "手動によるクラス作成",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "Python シェルの履歴を確認する",
                "file": "verify1-1.sh",
                "hint": "Python インタラクティブシェルですべてのコマンドを正しく入力したことを確認してください。"
              }
            ]
          },
          {
            "title": "型付き構造ヘルパーの作成",
            "text": "ja/step2.md",
            "verify": [
              {
                "name": "structure.py の実装を確認する",
                "file": "verify2-1.sh",
                "hint": "structure.py で typed_structure 関数を正しく実装したことを確認してください。"
              }
            ]
          },
          {
            "title": "効率的なクラス生成",
            "text": "ja/step3.md",
            "verify": [
              {
                "name": "型付きクラスの実装を確認する",
                "file": "verify3-1.sh",
                "hint": "Typed クラスと動的クラス生成を正しく実装したことを確認してください。"
              }
            ]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Низкоуровневые аспекты создания классов",
      "description": "Ручное создание классов, создание вспомогательного инструмента для типизированных структур и эффективное создание классов для понимания низкоуровневых аспектов создания классов в Python.",
      "meta": {
        "title": "Низкоуровневые аспекты создания классов",
        "description": "Ручное создание классов, создание вспомогательного инструмента для типизированных структур и эффективное создание классов для понимания низкоуровневых аспектов создания классов в Python.",
        "keywords": "Python, низкоуровневые аспекты, создание классов, типизированные структуры, эффективное создание"
      },
      "details": {
        "steps": [
          {
            "title": "Ручное создание класса",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "Проверить историю команд в Python Shell",
                "file": "verify1-1.sh",
                "hint": "Убедитесь, что вы корректно ввели все команды в интерактивной оболочке Python."
              }
            ]
          },
          {
            "title": "Создание вспомогательного инструмента для типизированных структур",
            "text": "ru/step2.md",
            "verify": [
              {
                "name": "Проверить реализацию в structure.py",
                "file": "verify2-1.sh",
                "hint": "Убедитесь, что вы корректно реализовали функцию typed_structure в файле structure.py."
              }
            ]
          },
          {
            "title": "Эффективное создание классов",
            "text": "ru/step3.md",
            "verify": [
              {
                "name": "Проверить реализацию типизированного класса",
                "file": "verify3-1.sh",
                "hint": "Убедитесь, что вы корректно реализовали класс Typed и динамическое создание классов."
              }
            ]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    },
    {
      "lang": "ko",
      "title": "클래스 생성의 낮은 수준 이해",
      "description": "Python 에서 클래스 생성의 낮은 수준 측면을 이해하기 위해 클래스를 수동으로 생성하고, typed 구조 도우미를 만들고, 클래스를 효율적으로 생성합니다.",
      "meta": {
        "title": "Python 클래스 생성: 낮은 수준 이해 및 효율적인 생성",
        "description": "Python 에서 클래스를 수동으로 생성하고, typed 구조 도우미를 만들고, 클래스를 효율적으로 생성하는 방법을 배우세요. Python 클래스 생성의 낮은 수준 측면을 깊이 있게 이해합니다.",
        "keywords": "Python, 클래스 생성, 낮은 수준, typed 구조, 효율적인 클래스 생성, 파이썬 클래스, 클래스 동적 생성"
      },
      "details": {
        "steps": [
          {
            "title": "수동 클래스 생성",
            "text": "ko/step1.md",
            "verify": [
              {
                "name": "Python 쉘 히스토리 확인",
                "file": "verify1-1.sh",
                "hint": "Python 인터랙티브 쉘에 모든 명령어를 올바르게 입력했는지 확인하세요."
              }
            ]
          },
          {
            "title": "Typed 구조 도우미 생성",
            "text": "ko/step2.md",
            "verify": [
              {
                "name": "structure.py 구현 검증",
                "file": "verify2-1.sh",
                "hint": "structure.py 에서 typed_structure 함수를 올바르게 구현했는지 확인하세요."
              }
            ]
          },
          {
            "title": "효율적인 클래스 생성",
            "text": "ko/step3.md",
            "verify": [
              {
                "name": "Typed 클래스 구현 검증",
                "file": "verify3-1.sh",
                "hint": "Typed 클래스와 동적 클래스 생성을 올바르게 구현했는지 확인하세요."
              }
            ]
          }
        ],
        "intro": {
          "text": "ko/intro.md",
          "title": "소개"
        },
        "finish": {
          "text": "ko/finish.md",
          "title": "요약"
        }
      }
    },
    {
      "lang": "pt",
      "title": "Criação de Classes em Baixo Nível",
      "description": "Crie classes manualmente, desenvolva um auxiliar de estrutura tipada e gere classes de forma eficiente para compreender os aspectos de baixo nível da criação de classes em Python.",
      "meta": {
        "title": "Criação de Classes em Python: Nível Avançado e Otimização",
        "description": "Aprenda a criar classes em Python em baixo nível, utilizando técnicas avançadas e otimizando a geração de classes. Explore a estrutura tipada e a criação eficiente de classes.",
        "keywords": "Python, criação de classes, baixo nível, estrutura tipada, geração eficiente, otimização de classes, tutorial Python"
      },
      "details": {
        "steps": [
          {
            "title": "Criação Manual de Classes",
            "text": "pt/step1.md",
            "verify": [
              {
                "name": "Verificar Histórico do Shell Python",
                "file": "verify1-1.sh",
                "hint": "Certifique-se de que você inseriu todos os comandos corretamente no shell interativo do Python."
              }
            ]
          },
          {
            "title": "Criando um Auxiliar de Estrutura Tipada",
            "text": "pt/step2.md",
            "verify": [
              {
                "name": "Verificar Implementação de structure.py",
                "file": "verify2-1.sh",
                "hint": "Certifique-se de que você implementou corretamente a função typed_structure em structure.py."
              }
            ]
          },
          {
            "title": "Geração Eficiente de Classes",
            "text": "pt/step3.md",
            "verify": [
              {
                "name": "Verificar Implementação da Classe Tipada",
                "file": "verify3-1.sh",
                "hint": "Certifique-se de que você implementou corretamente a classe Typed e a geração dinâmica de classes."
              }
            ]
          }
        ],
        "intro": {
          "text": "pt/intro.md",
          "title": "Introdução"
        },
        "finish": {
          "text": "pt/finish.md",
          "title": "Resumo"
        }
      }
    }
  ]
}
