{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "challenge",
  "title": "Implementing Line Drawing Algorithm",
  "description": "In computer graphics, a line is a basic element that can be drawn on a screen. Drawing a line on a screen involves setting the corresponding bits in the screen's memory. In this challenge, we will implement a method that draws a line on a screen given its width and two absolute pixel positions.",
  "meta": {
    "title": "Computer Graphics | Drawing Lines | Programming Tutorials",
    "description": "Learn how to implement a method that draws a line on a screen given its width and two absolute pixel positions in computer graphics programming.",
    "keywords": "computer graphics, drawing lines, programming tutorials, screen memory, bit manipulation"
  },
  "difficulty": "Beginner",
  "time": 15,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": false,
  "details": {
    "steps": [
      {
        "title": "Draw Line",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify if all tests are passed",
            "file": "verify1-1.sh",
            "hint": "Please make sure you have the correct output format.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "algorithm/bit_manipulation",
          "python/build_in_functions",
          "python/classes_objects",
          "python/conditional_statements",
          "python/encapsulation",
          "python/for_loops",
          "python/function_definition",
          "python/lists",
          "python/numeric_types",
          "python/raising_exceptions",
          "python/tuples",
          "python/type_conversion",
          "python/variables_data_types"
        ],
        "solutions": ["draw_line.py"]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md"
    },
    "assets": {
      "host01": [
        {
          "file": "test_draw_line.py",
          "target": "/tmp",
          "chmod": "ugo+rwx"
        },
        {
          "file": "draw_line.py",
          "target": "/home/labex/project",
          "chmod": "ugo+rwx"
        }
      ]
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["huduo0812"],
  "license": {
    "name": "Apache-2.0",
    "url": "https://github.com/donnemartin/interactive-coding-challenges/blob/master/LICENSE",
    "repo": "https://github.com/donnemartin/interactive-coding-challenges"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "实现直线绘制算法",
      "description": "在计算机图形学中，直线是可以在屏幕上绘制的基本元素。在屏幕上绘制直线涉及设置屏幕内存中的相应位。在这个挑战中，我们将实现一种方法，该方法根据屏幕宽度和两个绝对像素位置在屏幕上绘制直线。",
      "meta": {
        "title": "计算机图形学 | 绘制直线 | 编程教程",
        "description": "学习如何在计算机图形学编程中实现一种方法，该方法根据屏幕宽度和两个绝对像素位置在屏幕上绘制直线。",
        "keywords": "计算机图形学, 绘制直线, 编程教程, 屏幕内存, 位操作"
      },
      "details": {
        "steps": [
          {
            "title": "绘制直线",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "验证所有测试是否通过",
                "file": "verify1-1.sh",
                "hint": "请确保你有正确的输出格式。"
              }
            ],
            "solutions": ["draw_line.py"]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    }
  ]
}
