{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "challenge",
  "title": "Implement Hash Table with Key-Value Operations",
  "description": "A hash table is a data structure that maps keys to values for efficient lookup. It uses a hash function to compute an index into an array of buckets or slots, from which the desired value can be found. In this challenge, we will implement a hash table with set, get, and remove methods.",
  "meta": {
    "title": "Hash Table Implementation | Data Structures",
    "description": "Implement a hash table with set, get, and remove methods. Learn about chaining for collision resolution and efficient key-value lookup.",
    "keywords": "hash table, data structures, key-value, lookup, chaining, set, get, remove"
  },
  "difficulty": "Beginner",
  "time": 15,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": false,
  "details": {
    "steps": [
      {
        "title": "Hash Map",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify if all tests are passed",
            "file": "verify1-1.sh",
            "hint": "Please make sure you have the correct output format.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "algorithm/arrays_strings",
          "python/build_in_functions",
          "python/classes_objects",
          "python/conditional_statements",
          "python/constructor",
          "python/data_collections",
          "python/encapsulation",
          "python/for_loops",
          "python/function_definition",
          "python/list_comprehensions",
          "python/lists",
          "python/polymorphism",
          "python/raising_exceptions",
          "python/tuples",
          "python/variables_data_types"
        ],
        "solutions": ["hash_map.py"]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md"
    },
    "assets": {
      "host01": [
        {
          "file": "test_hash_map.py",
          "target": "/tmp",
          "chmod": "ugo+rwx"
        },
        {
          "file": "hash_map.py",
          "target": "/home/labex/project",
          "chmod": "ugo+rwx"
        }
      ]
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["huduo0812"],
  "license": {
    "name": "Apache-2.0",
    "url": "https://github.com/donnemartin/interactive-coding-challenges/blob/master/LICENSE",
    "repo": "https://github.com/donnemartin/interactive-coding-challenges"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "使用键值操作实现哈希表",
      "description": "哈希表是一种数据结构，它将键映射到值以便进行高效查找。它使用哈希函数来计算进入桶或槽数组的索引，从中可以找到所需的值。在这个挑战中，我们将实现一个具有插入、获取和删除方法的哈希表。",
      "meta": {
        "title": "哈希表实现 | 数据结构",
        "description": "实现一个具有插入、获取和删除方法的哈希表。了解用于冲突解决和高效键值查找的链地址法。",
        "keywords": "哈希表, 数据结构, 键值, 查找, 链地址法, 插入, 获取, 删除"
      },
      "details": {
        "steps": [
          {
            "title": "哈希映射",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "验证所有测试是否通过",
                "file": "verify1-1.sh",
                "hint": "请确保你有正确的输出格式。"
              }
            ],
            "solutions": ["hash_map.py"]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Implementar una tabla hash con operaciones de clave-valor",
      "description": "Una tabla hash es una estructura de datos que mapea claves a valores para una búsqueda eficiente. Utiliza una función hash para calcular un índice en un array de cubetas o ranuras, a partir del cual se puede encontrar el valor deseado. En este desafío, implementaremos una tabla hash con métodos de inserción, búsqueda y eliminación.",
      "meta": {
        "title": "Implementación de tabla hash | Estructuras de datos",
        "description": "Implementa una tabla hash con métodos de inserción, búsqueda y eliminación. Aprende sobre el encadenamiento para la resolución de colisiones y la búsqueda eficiente de pares clave-valor.",
        "keywords": "tabla hash, estructuras de datos, clave-valor, búsqueda, encadenamiento, inserción, búsqueda, eliminación"
      },
      "details": {
        "steps": [
          {
            "title": "Tabla Hash",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Verificar si todas las pruebas pasan",
                "file": "verify1-1.sh",
                "hint": "Asegúrese de tener el formato de salida correcto."
              }
            ],
            "solutions": ["hash_map.py"]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Implémenter une table de hachage avec des opérations clé-valeur",
      "description": "Une table de hachage est une structure de données qui associe des clés à des valeurs pour une recherche efficace. Elle utilise une fonction de hachage pour calculer un index dans un tableau de compartiments ou de trous, à partir duquel la valeur souhaitée peut être trouvée. Dans ce défi, nous allons implémenter une table de hachage avec des méthodes de définition, de récupération et de suppression.",
      "meta": {
        "title": "Implémentation de la table de hachage | Structures de données",
        "description": "Implémentez une table de hachage avec des méthodes de définition, de récupération et de suppression. Découvrez le chaînage pour la résolution des collisions et la recherche efficace clé-valeur.",
        "keywords": "table de hachage, structures de données, clé-valeur, recherche, chaînage, définition, récupération, suppression"
      },
      "details": {
        "steps": [
          {
            "title": "Table de hachage",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Vérifiez si tous les tests ont réussi",
                "file": "verify1-1.sh",
                "hint": "Veuillez vous assurer d'avoir le bon format de sortie."
              }
            ],
            "solutions": ["hash_map.py"]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Implementiere eine Hashtabelle mit Schlüssel-Wert-Operationen",
      "description": "Eine Hashtabelle ist eine Datenstruktur, die Schlüssel zu Werten abbildet, um eine effiziente Suche zu ermöglichen. Sie verwendet eine Hashfunktion, um einen Index in ein Array von Buckets oder Slots zu berechnen, aus dem der gewünschte Wert gefunden werden kann. In dieser Herausforderung werden wir eine Hashtabelle mit den Methoden set, get und remove implementieren.",
      "meta": {
        "title": "Hashtabelle-Implementierung | Datenstrukturen",
        "description": "Implementiere eine Hashtabelle mit den Methoden set, get und remove. Lerne über Kettenschlüsse zur Konfliktauflösung und effiziente Schlüssel-Wert-Suche.",
        "keywords": "Hashtabelle, Datenstrukturen, Schlüssel-Wert, Suche, Kettenschluss, set, get, remove"
      },
      "details": {
        "steps": [
          {
            "title": "Hashtabelle",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Verifiziere, ob alle Tests bestanden sind",
                "file": "verify1-1.sh",
                "hint": "Stellen Sie bitte sicher, dass Sie das richtige Ausgabeformat haben."
              }
            ],
            "solutions": ["hash_map.py"]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "キー-値操作を伴うハッシュテーブルの実装",
      "description": "ハッシュテーブルは、効率的な検索のためにキーを値にマッピングするデータ構造です。ハッシュ関数を使用して、バケットまたはスロットの配列へのインデックスを計算し、そこから目的の値を見つけることができます。このチャレンジでは、set、get、およびremoveメソッドを備えたハッシュテーブルを実装します。",
      "meta": {
        "title": "ハッシュテーブルの実装 | データ構造",
        "description": "set、get、およびremoveメソッドを備えたハッシュテーブルを実装します。衝突解消と効率的なキー-値検索に関するチェーニングについて学びましょう。",
        "keywords": "ハッシュテーブル, データ構造, キー-値, 検索, チェーニング, set, get, remove"
      },
      "details": {
        "steps": [
          {
            "title": "ハッシュマップ",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "すべてのテストが通過したかどうかを確認する",
                "file": "verify1-1.sh",
                "hint": "出力形式が正しいことを確認してください。"
              }
            ],
            "solutions": ["hash_map.py"]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Реализация хеш-таблицы с операциями по ключу-значению",
      "description": "Хеш-таблица — это структура данных, которая сопоставляет ключи со значениями для быстрого поиска. Она использует хеш-функцию для вычисления индекса в массив бакетов или слотов, из которого можно найти нужное значение. В этом испытании мы реализуем хеш-таблицу с методами set, get и remove.",
      "meta": {
        "title": "Реализация хеш-таблицы | Структуры данных",
        "description": "Реализуйте хеш-таблицу с методами set, get и remove. Изучите цепочку для разрешения коллизий и эффективного поиска по ключу-значению.",
        "keywords": "хеш-таблица, структуры данных, ключ-значение, поиск, цепочка, set, get, remove"
      },
      "details": {
        "steps": [
          {
            "title": "Хеш-карта",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "Проверить, пройдены ли все тесты",
                "file": "verify1-1.sh",
                "hint": "Пожалуйста, убедитесь, что у вас правильный формат вывода."
              }
            ],
            "solutions": ["hash_map.py"]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    }
  ]
}
