{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "challenge",
  "title": "Implement Hash Table with Key-Value Operations",
  "description": "A hash table is a data structure that maps keys to values for efficient lookup. It uses a hash function to compute an index into an array of buckets or slots, from which the desired value can be found. In this challenge, we will implement a hash table with set, get, and remove methods.",
  "meta": {
    "title": "Hash Table Implementation | Data Structures",
    "description": "Implement a hash table with set, get, and remove methods. Learn about chaining for collision resolution and efficient key-value lookup.",
    "keywords": "hash table, data structures, key-value, lookup, chaining, set, get, remove"
  },
  "difficulty": "Beginner",
  "time": 15,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": false,
  "details": {
    "steps": [
      {
        "title": "Hash Map",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify if all tests are passed",
            "file": "verify1-1.sh",
            "hint": "Please make sure you have the correct output format.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "algorithm/arrays_strings",
          "python/build_in_functions",
          "python/classes_objects",
          "python/conditional_statements",
          "python/constructor",
          "python/data_collections",
          "python/encapsulation",
          "python/for_loops",
          "python/function_definition",
          "python/list_comprehensions",
          "python/lists",
          "python/polymorphism",
          "python/raising_exceptions",
          "python/tuples",
          "python/variables_data_types"
        ],
        "solutions": ["hash_map.py"]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md"
    },
    "assets": {
      "host01": [
        {
          "file": "test_hash_map.py",
          "target": "/tmp",
          "chmod": "ugo+rwx"
        },
        {
          "file": "hash_map.py",
          "target": "/home/labex/project",
          "chmod": "ugo+rwx"
        }
      ]
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["huduo0812"],
  "license": {
    "name": "Apache-2.0",
    "url": "https://github.com/donnemartin/interactive-coding-challenges/blob/master/LICENSE",
    "repo": "https://github.com/donnemartin/interactive-coding-challenges"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "使用键值操作实现哈希表",
      "description": "哈希表是一种数据结构，它将键映射到值以便进行高效查找。它使用哈希函数来计算进入桶或槽数组的索引，从中可以找到所需的值。在这个挑战中，我们将实现一个具有插入、获取和删除方法的哈希表。",
      "meta": {
        "title": "哈希表实现 | 数据结构",
        "description": "实现一个具有插入、获取和删除方法的哈希表。了解用于冲突解决和高效键值查找的链地址法。",
        "keywords": "哈希表, 数据结构, 键值, 查找, 链地址法, 插入, 获取, 删除"
      },
      "details": {
        "steps": [
          {
            "title": "哈希映射",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "验证所有测试是否通过",
                "file": "verify1-1.sh",
                "hint": "请确保你有正确的输出格式。"
              }
            ],
            "solutions": ["hash_map.py"]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    }
  ]
}
