{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "challenge",
  "title": "Generating Power Sets in Python",
  "description": "In mathematics, a power set of a set S is the set of all subsets of S, including the empty set and S itself. In Python, we can use a combination of loops and recursion to generate the power set of a given set.",
  "meta": {
    "title": "Generating Power Set in Python | Programming Tutorials",
    "description": "Learn how to generate the power set of a given set using Python. Includes examples and requirements for this programming problem.",
    "keywords": "power set, Python, programming, algorithms, sets, subsets"
  },
  "difficulty": "Beginner",
  "time": 5,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": false,
  "details": {
    "steps": [
      {
        "title": "Power Set",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify if all tests are passed",
            "file": "verify1-1.sh",
            "hint": "Please make sure you have the correct output format.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [],
        "solutions": ["power_set.py"]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md"
    },
    "assets": {
      "host01": [
        {
          "file": "test_power_set.py",
          "target": "/tmp",
          "chmod": "ugo+rwx"
        },
        {
          "file": "power_set.py",
          "target": "/home/labex/project",
          "chmod": "ugo+rwx"
        }
      ]
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["huduo0812"],
  "license": {
    "name": "Apache-2.0",
    "url": "https://github.com/donnemartin/interactive-coding-challenges/blob/master/LICENSE",
    "repo": "https://github.com/donnemartin/interactive-coding-challenges"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "在 Python 中生成幂集",
      "description": "在数学中，集合 S 的幂集是 S 的所有子集的集合，包括空集和 S 本身。在 Python 中，我们可以使用循环和递归的组合来生成给定集合的幂集。",
      "meta": {
        "title": "在 Python 中生成幂集 | 编程教程",
        "description": "学习如何使用 Python 生成给定集合的幂集。包括此编程问题的示例和要求。",
        "keywords": "幂集，Python, 编程，算法，集合，子集"
      },
      "details": {
        "steps": [
          {
            "title": "幂集",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "验证所有测试是否通过",
                "file": "verify1-1.sh",
                "hint": "请确保你有正确的输出格式。"
              }
            ],
            "solutions": ["power_set.py"]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Generando Conjuntos Potencia en Python",
      "description": "En matemáticas, el conjunto potencia de un conjunto S es el conjunto de todos los subconjuntos de S, incluyendo el conjunto vacío y S mismo. En Python, podemos usar una combinación de bucles y recursión para generar el conjunto potencia de un conjunto dado.",
      "meta": {
        "title": "Generando Conjunto Potencia en Python | Tutoriales de Programación",
        "description": "Aprende cómo generar el conjunto potencia de un conjunto dado usando Python. Incluye ejemplos y requisitos para este problema de programación.",
        "keywords": "conjunto potencia, Python, programación, algoritmos, conjuntos, subconjuntos"
      },
      "details": {
        "steps": [
          {
            "title": "Conjunto Potencia",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Verifica si todas las pruebas han pasado",
                "file": "verify1-1.sh",
                "hint": "Asegúrate de tener el formato de salida correcto."
              }
            ],
            "solutions": ["power_set.py"]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Générer des ensembles de parties en Python",
      "description": "En mathématiques, l'ensemble des parties d'un ensemble S est l'ensemble de tous les sous-ensembles de S, y compris l'ensemble vide et S lui-même. En Python, on peut utiliser une combinaison de boucles et de récursion pour générer l'ensemble des parties d'un ensemble donné.",
      "meta": {
        "title": "Générer l'ensemble des parties en Python | Didacticiels de programmation",
        "description": "Découvrez comment générer l'ensemble des parties d'un ensemble donné à l'aide de Python. Inclut des exemples et des exigences pour ce problème de programmation.",
        "keywords": "ensemble des parties, Python, programmation, algorithmes, ensembles, sous-ensembles"
      },
      "details": {
        "steps": [
          {
            "title": "Ensemble des parties",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Vérifiez si tous les tests sont passés",
                "file": "verify1-1.sh",
                "hint": "Veuillez vous assurer d'avoir le bon format de sortie."
              }
            ],
            "solutions": ["power_set.py"]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Das Generieren von Potenzmengen in Python",
      "description": "In der Mathematik ist die Potenzmenge einer Menge S die Menge aller Teilmengen von S, einschließlich der leeren Menge und S selbst. In Python können wir eine Kombination aus Schleifen und Rekursion verwenden, um die Potenzmenge einer gegebenen Menge zu generieren.",
      "meta": {
        "title": "Das Generieren von Potenzmengen in Python | Programmier-Tutorials",
        "description": "Lernen Sie, wie Sie die Potenzmenge einer gegebenen Menge mit Python generieren. Enthält Beispiele und Anforderungen für dieses Programmierproblem.",
        "keywords": "Potenzmenge, Python, Programmierung, Algorithmen, Mengen, Teilmengen"
      },
      "details": {
        "steps": [
          {
            "title": "Potenzmenge",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Verifizieren, ob alle Tests bestanden sind",
                "file": "verify1-1.sh",
                "hint": "Stellen Sie bitte sicher, dass Sie das richtige Ausgabeformat haben."
              }
            ],
            "solutions": ["power_set.py"]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "Python における冪集合の生成",
      "description": "数学において、集合 S の冪集合とは、S のすべての部分集合からなる集合であり、空集合と S 自身も含まれます。Python では、与えられた集合の冪集合を生成するために、ループと再帰の組み合わせを使うことができます。",
      "meta": {
        "title": "Python で冪集合を生成する | プログラミングチュートリアル",
        "description": "Python を使って与えられた集合の冪集合を生成する方法を学びましょう。このプログラミング問題の例と要件を含みます。",
        "keywords": "冪集合，Python, プログラミング，アルゴリズム，集合，部分集合"
      },
      "details": {
        "steps": [
          {
            "title": "冪集合",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "すべてのテストが通過したか確認する",
                "file": "verify1-1.sh",
                "hint": "出力形式が正しいことを確認してください。"
              }
            ],
            "solutions": ["power_set.py"]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Генерация power set в Python",
      "description": "В математике множество всех подмножеств множества S, включая пустое множество и само множество S, называется幂集 (power set) множества S. В Python мы можем использовать комбинацию циклов и рекурсии для генерации幂集 (power set) заданного множества.",
      "meta": {
        "title": "Генерация power set в Python | Руководства по программированию",
        "description": "Изучите, как сгенерировать幂集 (power set) заданного множества с использованием Python. Включает примеры и требования к этой задаче программирования.",
        "keywords": "幂集 (power set), Python, программирование, алгоритмы, множества, подмножества"
      },
      "details": {
        "steps": [
          {
            "title": "Power Set",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "Проверить, пройдены ли все тесты",
                "file": "verify1-1.sh",
                "hint": "Пожалуйста, убедитесь, что у вас правильный формат вывода."
              }
            ],
            "solutions": ["power_set.py"]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    }
  ]
}
