{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "challenge",
  "title": "Knapsack Problem Optimization Techniques",
  "description": "The Knapsack problem is a classic optimization problem in computer science. It is a problem of combinatorial optimization, where the goal is to select items to maximize the value while keeping the weight within the capacity of the knapsack. This problem is used in many real-world applications, such as resource allocation, portfolio optimization, and cutting stock problems.",
  "meta": {
    "title": "Mastering the Knapsack Problem: Optimization Techniques Explored",
    "description": "Discover the intricacies of the Knapsack problem, a classic optimization challenge in computer science, and explore the techniques to solve it effectively.",
    "keywords": "python playground, algorithm playground, python, portfolio optimization, optimization techniques, algorithm, combinatorial optimization, resource allocation, knapsack problem"
  },
  "difficulty": "Beginner",
  "time": 15,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": false,
  "details": {
    "steps": [
      {
        "title": "Knapsack 01",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify if all tests are passed",
            "file": "verify1-1.sh",
            "hint": "Please make sure you have the correct output format.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "algorithm/recursion_dynamic",
          "python/build_in_functions",
          "python/classes_objects",
          "python/conditional_statements",
          "python/constructor",
          "python/data_collections",
          "python/encapsulation",
          "python/for_loops",
          "python/function_definition",
          "python/list_comprehensions",
          "python/lists",
          "python/polymorphism",
          "python/raising_exceptions",
          "python/strings",
          "python/tuples",
          "python/type_conversion",
          "python/variables_data_types",
          "python/while_loops"
        ],
        "solutions": ["knapsack.py"]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md"
    },
    "assets": {
      "host01": [
        {
          "file": "test_knapsack.py",
          "target": "/tmp",
          "chmod": "ugo+rwx"
        },
        {
          "file": "knapsack.py",
          "target": "/home/labex/project",
          "chmod": "ugo+rwx"
        }
      ]
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["huduo0812"],
  "license": {
    "name": "Apache-2.0",
    "url": "https://github.com/donnemartin/interactive-coding-challenges/blob/master/LICENSE",
    "repo": "https://github.com/donnemartin/interactive-coding-challenges"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "背包问题优化技术",
      "description": "背包问题是计算机科学中的一个经典优化问题。它是一个组合优化问题，目标是在背包容量限制内选择物品，以最大化价值。这个问题在许多实际应用中都有使用，比如资源分配、投资组合优化和下料问题。",
      "meta": {
        "title": "掌握背包问题：探索优化技术",
        "description": "探索背包问题的复杂性，这是计算机科学中一个经典的优化挑战，并探索有效解决它的技术。",
        "keywords": "Python 实践场, 算法实践场, Python, 投资组合优化, 优化技术, 算法, 组合优化, 资源分配, 背包问题"
      },
      "details": {
        "steps": [
          {
            "title": "01背包问题",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "验证所有测试是否通过",
                "file": "verify1-1.sh",
                "hint": "请确保你有正确的输出格式。"
              }
            ],
            "solutions": ["knapsack.py"]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Técnicas de optimización del problema de la mochila",
      "description": "El problema de la mochila es un problema clásico de optimización en informática. Es un problema de optimización combinatoria, donde el objetivo es seleccionar elementos para maximizar el valor mientras se mantiene el peso dentro de la capacidad de la mochila. Este problema se utiliza en muchas aplicaciones del mundo real, como la asignación de recursos, la optimización de carteras y los problemas de corte de existencias.",
      "meta": {
        "title": "Dominando el problema de la mochila: técnicas de optimización exploradas",
        "description": "Descubre las complejidades del problema de la mochila, un desafío clásico de optimización en informática, y explora las técnicas para resolverlo de manera efectiva.",
        "keywords": "python playground, algorithm playground, python, optimización de carteras, técnicas de optimización, algoritmo, optimización combinatoria, asignación de recursos, problema de la mochila"
      },
      "details": {
        "steps": [
          {
            "title": "Mochila 0/1",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Verifica si todas las pruebas han pasado",
                "file": "verify1-1.sh",
                "hint": "Asegúrate de tener el formato de salida correcto."
              }
            ],
            "solutions": ["knapsack.py"]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Techniques d'optimisation du problème du sac à dos",
      "description": "Le problème du sac à dos est un problème classique d'optimisation en informatique. Il s'agit d'un problème d'optimisation combinatoire, où l'objectif est de sélectionner des objets pour maximiser la valeur tout en gardant le poids dans la capacité du sac à dos. Ce problème est utilisé dans de nombreuses applications du monde réel, telles que l'allocation de ressources, l'optimisation du portefeuille et les problèmes de découpe d'échantillons.",
      "meta": {
        "title": "Maîtriser le problème du sac à dos : Techniques d'optimisation explorées",
        "description": "Découvrez les complexités du problème du sac à dos, un défi classique d'optimisation en informatique, et explorez les techniques pour le résoudre efficacement.",
        "keywords": "python playground, algorithm playground, python, optimisation du portefeuille, techniques d'optimisation, algorithme, optimisation combinatoire, allocation de ressources, problème du sac à dos"
      },
      "details": {
        "steps": [
          {
            "title": "Sac à dos 0/1",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Vérifiez si tous les tests ont réussi",
                "file": "verify1-1.sh",
                "hint": "Veuillez vous assurer d'avoir le bon format de sortie."
              }
            ],
            "solutions": ["knapsack.py"]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Optimierungstechniken für das Rucksackproblem",
      "description": "Das Rucksackproblem ist ein klassisches Optimierungsproblem der Informatik. Es ist ein Problem der kombinatorischen Optimierung, bei dem das Ziel besteht, Gegenstände auszuwählen, um den Wert zu maximieren, während das Gewicht innerhalb der Kapazität des Rucksacks bleibt. Dieses Problem wird in vielen realen Anwendungen verwendet, wie z. B. in der Ressourcenallokation, der Portfoliooptimierung und den Schneidegutproblemen.",
      "meta": {
        "title": "Meisterung des Rucksackproblems: Erkundung von Optimierungstechniken",
        "description": "Entdecken Sie die Komplexitäten des Rucksackproblems, eine klassische Optimierungschallenge in der Informatik, und erkunden Sie die Techniken, um es effektiv zu lösen.",
        "keywords": "python playground, algorithm playground, python, Portfoliooptimierung, Optimierungstechniken, Algorithmus, kombinatorische Optimierung, Ressourcenallokation, Rucksackproblem"
      },
      "details": {
        "steps": [
          {
            "title": "0/1-Rucksackproblem",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Überprüfen, ob alle Tests bestanden sind",
                "file": "verify1-1.sh",
                "hint": "Stellen Sie bitte sicher, dass Sie das richtige Ausgabeformat haben."
              }
            ],
            "solutions": ["knapsack.py"]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "ナップサック問題の最適化技術",
      "description": "ナップサック問題は、コンピュータサイエンスにおける古典的な最適化問題です。これは組み合わせ最適化の問題であり、目的はナップサックの容量内で重さを維持しながら、アイテムを選択して価値を最大化することです。この問題は、資源割り当て、ポートフォリオ最適化、およびカットストック問題など、多くの現実世界のアプリケーションで使用されます。",
      "meta": {
        "title": "ナップサック問題をマスターする：最適化技術の探求",
        "description": "コンピュータサイエンスにおける古典的な最適化チャレンジであるナップサック問題の複雑さを解明し、効果的に解くための技術を探求します。",
        "keywords": "python プレイグラウンド, アルゴリズム プレイグラウンド, python, ポートフォリオ最適化, 最適化技術, アルゴリズム, 組み合わせ最適化, 資源割り当て, ナップサック問題"
      },
      "details": {
        "steps": [
          {
            "title": "ナップサック 01",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "すべてのテストが通過したかどうかを確認する",
                "file": "verify1-1.sh",
                "hint": "出力形式が正しいことを確認してください。"
              }
            ],
            "solutions": ["knapsack.py"]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Техники оптимизации задачи о рюкзаке",
      "description": "Задача о рюкзаке - это классическая задача оптимизации в информатике. Это задача комбинаторной оптимизации, где цель - выбрать предметы так, чтобы максимизировать значение, при этом не превышая вес рюкзака. Эта задача используется во многих реальных приложениях, таких как распределение ресурсов, оптимизация портфеля и задачи по распиловке.",
      "meta": {
        "title": "Осваиваем задачу о рюкзаке: исследуем методы оптимизации",
        "description": "Откройте сложности задачи о рюкзаке - классической задачи оптимизации в информатике, и изучите методы ее эффективного решения.",
        "keywords": "python playground, algorithm playground, python, оптимизация портфеля, методы оптимизации, алгоритм, комбинаторная оптимизация, распределение ресурсов, задача о рюкзаке"
      },
      "details": {
        "steps": [
          {
            "title": "Рюкзак 0/1",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "Проверить, пройдены ли все тесты",
                "file": "verify1-1.sh",
                "hint": "Пожалуйста, убедитесь, что у вас правильный формат вывода."
              }
            ],
            "solutions": ["knapsack.py"]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    }
  ]
}
