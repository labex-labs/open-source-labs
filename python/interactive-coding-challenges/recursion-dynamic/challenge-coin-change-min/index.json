{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "challenge",
  "title": "Coin Change Min",
  "description": "In this Python challenge, we will be solving the problem of determining the minimum number of ways to make n cents, given coins of denominations less than n cents.",
  "meta": {
    "title": "Coin Change Min: Optimizing Coin Combinations",
    "description": "Solve the Coin Change Min problem in Python to find the minimum number of coins needed to make a target amount.",
    "keywords": "algorithm playground, python, coin change, optimization, minimum coins, algorithm, programming challenge"
  },
  "difficulty": "Beginner",
  "time": 5,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": false,
  "details": {
    "steps": [
      {
        "title": "Coin Change Min",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify if all tests are passed",
            "file": "verify1-1.sh",
            "hint": "Please make sure you have the correct output format.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "algorithm/recursion_dynamic",
          "python/break_continue",
          "python/classes_objects",
          "python/conditional_statements",
          "python/encapsulation",
          "python/for_loops",
          "python/function_definition",
          "python/importing_modules",
          "python/lists",
          "python/os_system",
          "python/raising_exceptions",
          "python/standard_libraries",
          "python/tuples"
        ],
        "solutions": ["coin_change_min.py"]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md"
    },
    "assets": {
      "host01": [
        {
          "file": "test_coin_change_min.py",
          "target": "/tmp",
          "chmod": "ugo+rwx"
        },
        {
          "file": "coin_change_min.py",
          "target": "/home/labex/project",
          "chmod": "ugo+rwx"
        }
      ]
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["huduo0812"],
  "license": {
    "name": "Apache-2.0",
    "url": "https://github.com/donnemartin/interactive-coding-challenges/blob/master/LICENSE",
    "repo": "https://github.com/donnemartin/interactive-coding-challenges"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "找零最小化",
      "description": "在这个 Python 挑战中，我们将解决一个问题：给定面值小于 n 美分的硬币，确定凑成 n 美分的最少方法数。",
      "meta": {
        "title": "找零最小化：优化硬币组合",
        "description": "用 Python 解决找零最小化问题，以找到凑成目标金额所需的最少硬币数量。",
        "keywords": "算法游乐场，Python, 找零，优化，最少硬币，算法，编程挑战"
      },
      "details": {
        "steps": [
          {
            "title": "找零最小化",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "验证所有测试是否通过",
                "file": "verify1-1.sh",
                "hint": "请确保你有正确的输出格式。"
              }
            ],
            "solutions": ["coin_change_min.py"]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Cambio de monedas mínimo",
      "description": "En este desafío de Python, resolveremos el problema de determinar el número mínimo de maneras de obtener n centavos, dados monedas de denominaciones menores a n centavos.",
      "meta": {
        "title": "Cambio de monedas mínimo: Optimizando combinaciones de monedas",
        "description": "Resuelve el problema de Cambio de monedas mínimo en Python para encontrar el número mínimo de monedas necesarias para alcanzar una cantidad objetivo.",
        "keywords": "algoritmo playground, python, cambio de monedas, optimización, monedas mínimas, algoritmo, desafío de programación"
      },
      "details": {
        "steps": [
          {
            "title": "Cambio de monedas mínimo",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Verifica si todas las pruebas han pasado",
                "file": "verify1-1.sh",
                "hint": "Asegúrate de tener el formato de salida correcto."
              }
            ],
            "solutions": ["coin_change_min.py"]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Coin Change Min",
      "description": "Dans ce défi Python, nous allons résoudre le problème de déterminer le nombre minimum de façons de composer n cents, étant donné des pièces de valeurs inférieures à n cents.",
      "meta": {
        "title": "Coin Change Min: Optimisation des combinaisons de pièces",
        "description": "Résolvez le problème Coin Change Min en Python pour trouver le nombre minimum de pièces nécessaires pour atteindre un montant cible.",
        "keywords": "plateforme d'algorithmes, python, rendu de monnaie, optimisation, pièces minimales, algorithme, défi de programmation"
      },
      "details": {
        "steps": [
          {
            "title": "Coin Change Min",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Vérifiez si tous les tests ont réussi",
                "file": "verify1-1.sh",
                "hint": "Veuillez vous assurer d'avoir le bon format de sortie."
              }
            ],
            "solutions": ["coin_change_min.py"]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Münzwechsel - Minimale Anzahl",
      "description": "In dieser Python-Aufgabe werden wir das Problem lösen, die minimale Anzahl von Möglichkeiten zu bestimmen, um n Cent zu bilden, wenn Münzen von Denominationen kleiner als n Cent zur Verfügung stehen.",
      "meta": {
        "title": "Münzwechsel - Minimale Anzahl: Optimierung von Münzkombinationen",
        "description": "Lösen Sie das Münzwechsel - Minimale Anzahl - Problem in Python, um die minimale Anzahl von Münzen zu finden, die erforderlich sind, um einen bestimmten Betrag zu bilden.",
        "keywords": "Algorithmus-Spielplatz, Python, Münzwechsel, Optimierung, minimale Münzen, Algorithmus, Programmieraufgabe"
      },
      "details": {
        "steps": [
          {
            "title": "Münzwechsel - Minimale Anzahl",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Überprüfen, ob alle Tests bestanden sind",
                "file": "verify1-1.sh",
                "hint": "Bitte stellen Sie sicher, dass Sie das richtige Ausgabeformat haben."
              }
            ],
            "solutions": ["coin_change_min.py"]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "コインの最小枚数での支払い",
      "description": "この Python チャレンジでは、n セント未満の額面のコインが与えられたときに、n セントを作る方法の最小数を求める問題を解きます。",
      "meta": {
        "title": "コインの最小枚数での支払い：コインの組み合わせを最適化する",
        "description": "Python でコインの最小枚数での支払いの問題を解き、目標金額を作るために必要な最小枚数のコインを見つけます。",
        "keywords": "アルゴリズム プレイグラウンド，Python, コインの支払い，最適化，最小枚数のコイン，アルゴリズム，プログラミング チャレンジ"
      },
      "details": {
        "steps": [
          {
            "title": "コインの最小枚数での支払い",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "すべてのテストが通過したかどうかを確認する",
                "file": "verify1-1.sh",
                "hint": "出力形式が正しいことを確認してください。"
              }
            ],
            "solutions": ["coin_change_min.py"]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Минимальное количество монет для сдачи",
      "description": "В этом задании на Python мы решим задачу определения минимального количества способов составить n центов, если имеются монеты номиналом меньше n центов.",
      "meta": {
        "title": "Минимальное количество монет для сдачи: Оптимизация комбинаций монет",
        "description": "Решите задачу Минимальное количество монет для сдачи на Python, чтобы найти минимальное количество монет, необходимых для достижения целевой суммы.",
        "keywords": "алгоритм, площадка для экспериментов, python, сдача монетами, оптимизация, минимальное количество монет, алгоритм, задача по программированию"
      },
      "details": {
        "steps": [
          {
            "title": "Минимальное количество монет для сдачи",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "Проверить, пройдены ли все тесты",
                "file": "verify1-1.sh",
                "hint": "Пожалуйста, убедитесь, что у вас правильный формат вывода."
              }
            ],
            "solutions": ["coin_change_min.py"]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    }
  ]
}
