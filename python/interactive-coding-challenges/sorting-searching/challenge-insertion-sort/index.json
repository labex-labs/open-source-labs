{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "challenge",
  "title": "Efficient Insertion Sort Algorithm",
  "description": "Insertion sort is a simple sorting algorithm that works by repeatedly inserting the next element in the sorted array. It is an in-place comparison-based sorting algorithm that builds the final sorted array one item at a time.",
  "meta": {
    "title": "Insertion Sort Algorithm | Python Programming",
    "description": "Learn the Insertion Sort algorithm in Python. This simple sorting technique builds the final sorted array one item at a time, making it an efficient in-place comparison-based sorting solution.",
    "keywords": "Insertion Sort, Python, Sorting Algorithm, Programming, Comparison-based Sorting"
  },
  "difficulty": "Beginner",
  "time": 15,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": false,
  "details": {
    "steps": [
      {
        "title": "Insertion Sort",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify if all tests are passed",
            "file": "verify1-1.sh",
            "hint": "Please make sure you have the correct output format.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "algorithm/sorting_searching",
          "python/build_in_functions",
          "python/classes_objects",
          "python/conditional_statements",
          "python/encapsulation",
          "python/for_loops",
          "python/function_definition",
          "python/lists",
          "python/raising_exceptions",
          "python/tuples"
        ],
        "solutions": ["insertion_sort.py"]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md"
    },
    "assets": {
      "host01": [
        {
          "file": "test_insertion_sort.py",
          "target": "/tmp",
          "chmod": "ugo+rwx"
        },
        {
          "file": "insertion_sort.py",
          "target": "/home/labex/project",
          "chmod": "ugo+rwx"
        }
      ]
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["huduo0812"],
  "license": {
    "name": "Apache-2.0",
    "url": "https://github.com/donnemartin/interactive-coding-challenges/blob/master/LICENSE",
    "repo": "https://github.com/donnemartin/interactive-coding-challenges"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "高效插入排序算法",
      "description": "插入排序是一种简单的排序算法，其工作原理是将下一个元素反复插入到已排序的数组中。它是一种基于比较的原地排序算法，每次构建一个最终的已排序数组。",
      "meta": {
        "title": "插入排序算法 | Python 编程",
        "description": "学习 Python 中的插入排序算法。这种简单的排序技术每次构建一个最终的已排序数组，使其成为一种高效的基于比较的原地排序解决方案。",
        "keywords": "插入排序, Python, 排序算法, 编程, 基于比较的排序"
      },
      "details": {
        "steps": [
          {
            "title": "插入排序",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "验证所有测试是否通过",
                "file": "verify1-1.sh",
                "hint": "请确保你有正确的输出格式。"
              }
            ],
            "solutions": ["insertion_sort.py"]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    }
  ]
}
