{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "challenge",
  "title": "Radix Sort: Efficient Integer Sorting Algorithm",
  "description": "Radix sort is a non-comparative integer sorting algorithm that sorts data with integer keys by grouping keys by the individual digits which share the same significant position and value. It is a linear time sorting algorithm that is often used as a subroutine in other sorting algorithms.",
  "meta": {
    "title": "Radix Sort Algorithm | Integer Sorting | Linear Time Sorting",
    "description": "Explore the radix sort algorithm, a non-comparative integer sorting technique that groups keys by their digits and sorts in linear time. Ideal for large datasets.",
    "keywords": "radix sort, integer sorting, linear time sorting, non-comparative sorting, digit-based sorting, algorithm, programming"
  },
  "difficulty": "Beginner",
  "time": 5,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": false,
  "details": {
    "steps": [
      {
        "title": "Radix Sort",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify if all tests are passed",
            "file": "verify1-1.sh",
            "hint": "Please make sure you have the correct output format.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "algorithm/sorting_searching",
          "python/build_in_functions",
          "python/classes_objects",
          "python/conditional_statements",
          "python/default_arguments",
          "python/encapsulation",
          "python/for_loops",
          "python/function_definition",
          "python/list_comprehensions",
          "python/lists",
          "python/raising_exceptions",
          "python/strings",
          "python/tuples",
          "python/type_conversion",
          "python/variables_data_types"
        ],
        "solutions": ["radix_sort.py"]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md"
    },
    "assets": {
      "host01": [
        {
          "file": "test_radix_sort.py",
          "target": "/tmp",
          "chmod": "ugo+rwx"
        },
        {
          "file": "radix_sort.py",
          "target": "/home/labex/project",
          "chmod": "ugo+rwx"
        }
      ]
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["huduo0812"],
  "license": {
    "name": "Apache-2.0",
    "url": "https://github.com/donnemartin/interactive-coding-challenges/blob/master/LICENSE",
    "repo": "https://github.com/donnemartin/interactive-coding-challenges"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "基数排序：高效的整数排序算法",
      "description": "基数排序是一种非比较型整数排序算法，它通过将具有相同有效位和值的各个数位的键分组来对带有整数键的数据进行排序。它是一种线性时间排序算法，经常被用作其他排序算法中的子例程。",
      "meta": {
        "title": "基数排序算法 | 整数排序 | 线性时间排序",
        "description": "探索基数排序算法，这是一种非比较型整数排序技术，它按数位对键进行分组并在线性时间内排序。适用于大型数据集。",
        "keywords": "基数排序，整数排序，线性时间排序，非比较排序，基于数位的排序，算法，编程"
      },
      "details": {
        "steps": [
          {
            "title": "基数排序",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "验证所有测试是否通过",
                "file": "verify1-1.sh",
                "hint": "请确保你有正确的输出格式。"
              }
            ],
            "solutions": ["radix_sort.py"]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Ordenamiento Radix: Algoritmo de Ordenamiento de Enteros Eficiente",
      "description": "El ordenamiento Radix es un algoritmo de ordenamiento de enteros no comparativo que ordena datos con claves enteras agrupando las claves por los dígitos individuales que comparten la misma posición y valor significativo. Es un algoritmo de ordenamiento de tiempo lineal que a menudo se utiliza como subrutina en otros algoritmos de ordenamiento.",
      "meta": {
        "title": "Algoritmo de Ordenamiento Radix | Ordenamiento de Enteros | Ordenamiento de Tiempo Lineal",
        "description": "Explora el algoritmo de ordenamiento Radix, una técnica de ordenamiento de enteros no comparativa que agrupa las claves por sus dígitos y ordena en tiempo lineal. Ideal para conjuntos de datos grandes.",
        "keywords": "ordenamiento Radix, ordenamiento de enteros, ordenamiento de tiempo lineal, ordenamiento no comparativo, ordenamiento basado en dígitos, algoritmo, programación"
      },
      "details": {
        "steps": [
          {
            "title": "Ordenamiento Radix",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Verificar si todas las pruebas han pasado",
                "file": "verify1-1.sh",
                "hint": "Asegúrese de tener el formato de salida correcto."
              }
            ],
            "solutions": ["radix_sort.py"]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Tri par radix : Algorithme de tri d'entiers efficace",
      "description": "Le tri par radix est un algorithme de tri d'entiers non comparatif qui trie des données avec des clés entières en regroupant les clés par les chiffres individuels qui ont la même position et valeur significative. C'est un algorithme de tri en temps linéaire qui est souvent utilisé comme sous-routine dans d'autres algorithmes de tri.",
      "meta": {
        "title": "Algorithme de tri par radix | Tri d'entiers | Tri en temps linéaire",
        "description": "Explorez l'algorithme de tri par radix, une technique de tri d'entiers non comparatif qui regroupe les clés par leurs chiffres et trie en temps linéaire. Idéal pour de grands ensembles de données.",
        "keywords": "tri par radix, tri d'entiers, tri en temps linéaire, tri non comparatif, tri basé sur les chiffres, algorithme, programmation"
      },
      "details": {
        "steps": [
          {
            "title": "Tri par radix",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Vérifiez si tous les tests ont réussi",
                "file": "verify1-1.sh",
                "hint": "Veuillez vous assurer d'avoir le bon format de sortie."
              }
            ],
            "solutions": ["radix_sort.py"]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "基数排序：Effizienter Algorithmus zum Sortieren von ganzen Zahlen",
      "description": "Der 基数排序 ist ein nicht-vergleichender Algorithmus zum Sortieren von ganzen Zahlen, der Daten mit ganzzahligen Schlüsseln sortiert, indem er die Schlüssel nach den einzelnen Ziffern gruppiert, die die gleiche signifikante Position und den gleichen Wert haben. Es ist ein Sortieralgorithmus in linearer Zeit, der oft als Unterprogramm in anderen Sortieralgorithmen verwendet wird.",
      "meta": {
        "title": "基数排序-Algorithmus | Sortieren von ganzen Zahlen | Sortieren in linearer Zeit",
        "description": "Erkunden Sie den 基数排序-Algorithmus, eine nicht-vergleichende Technik zum Sortieren von ganzen Zahlen, die Schlüssel nach ihren Ziffern gruppiert und in linearer Zeit sortiert. Ideal für große Datensätze.",
        "keywords": "基数排序，Sortieren von ganzen Zahlen, Sortieren in linearer Zeit, nicht-vergleichendes Sortieren, ziffernbasiertes Sortieren, Algorithmus, Programmierung"
      },
      "details": {
        "steps": [
          {
            "title": "基数排序",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Überprüfen, ob alle Tests bestanden sind",
                "file": "verify1-1.sh",
                "hint": "Bitte stellen Sie sicher, dass Sie das richtige Ausgabeformat haben."
              }
            ],
            "solutions": ["radix_sort.py"]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "ラディックスソート：効率的な整数ソートアルゴリズム",
      "description": "ラディックスソートは、比較を行わない整数ソートアルゴリズムであり、整数キーを持つデータを、同じ有効桁と値を持つ個々の桁でキーをグループ化することによってソートします。それは線形時間ソートアルゴリズムであり、他のソートアルゴリズムのサブルーチンとして頻繁に使用されます。",
      "meta": {
        "title": "ラディックスソートアルゴリズム | 整数ソート | 線形時間ソート",
        "description": "ラディックスソートアルゴリズムをご覧ください。これは、比較を行わない整数ソート技術で、キーを桁でグループ化して線形時間でソートします。大規模なデータセットに最適。",
        "keywords": "ラディックスソート，整数ソート，線形時間ソート，比較を行わないソート，桁ベースのソート，アルゴリズム，プログラミング"
      },
      "details": {
        "steps": [
          {
            "title": "ラディックスソート",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "すべてのテストが通過したかどうかを確認する",
                "file": "verify1-1.sh",
                "hint": "出力形式が正しいことを確認してください。"
              }
            ],
            "solutions": ["radix_sort.py"]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Radix sort: Эффективный алгоритм сортировки целых чисел",
      "description": "Radix sort - это алгоритм сортировки целых чисел, который не сравнивает элементы. Он сортирует данные с целыми ключами, группируя ключи по отдельным цифрам, имеющим одинаковую значимую позицию и значение. Это алгоритм сортировки линейного времени, который часто используется как подпрограмма в других алгоритмах сортировки.",
      "meta": {
        "title": "Алгоритм Radix sort | Сортировка целых чисел | Сортировка линейного времени",
        "description": "Изучите алгоритм Radix sort, не сравнивающий целые числа, который группирует ключи по их цифрам и сортирует за линейное время. Ideal для больших наборов данных.",
        "keywords": "Radix sort, сортировка целых чисел, сортировка линейного времени, не сравнивающая сортировка, сортировка по цифрам, алгоритм, программирование"
      },
      "details": {
        "steps": [
          {
            "title": "Radix sort",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "Проверить, пройдены ли все тесты",
                "file": "verify1-1.sh",
                "hint": "Пожалуйста, убедитесь, что у вас правильный формат вывода."
              }
            ],
            "solutions": ["radix_sort.py"]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    }
  ]
}
