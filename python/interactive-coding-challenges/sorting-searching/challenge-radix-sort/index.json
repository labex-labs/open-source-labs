{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "challenge",
  "title": "Radix Sort: Efficient Integer Sorting Algorithm",
  "description": "Radix sort is a non-comparative integer sorting algorithm that sorts data with integer keys by grouping keys by the individual digits which share the same significant position and value. It is a linear time sorting algorithm that is often used as a subroutine in other sorting algorithms.",
  "meta": {
    "title": "Radix Sort Algorithm | Integer Sorting | Linear Time Sorting",
    "description": "Explore the radix sort algorithm, a non-comparative integer sorting technique that groups keys by their digits and sorts in linear time. Ideal for large datasets.",
    "keywords": "radix sort, integer sorting, linear time sorting, non-comparative sorting, digit-based sorting, algorithm, programming"
  },
  "difficulty": "Beginner",
  "time": 15,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": false,
  "details": {
    "steps": [
      {
        "title": "Radix Sort",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify if all tests are passed",
            "file": "verify1-1.sh",
            "hint": "Please make sure you have the correct output format.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "algorithm/sorting_searching",
          "python/build_in_functions",
          "python/classes_objects",
          "python/conditional_statements",
          "python/default_arguments",
          "python/encapsulation",
          "python/for_loops",
          "python/function_definition",
          "python/list_comprehensions",
          "python/lists",
          "python/raising_exceptions",
          "python/strings",
          "python/tuples",
          "python/type_conversion",
          "python/variables_data_types"
        ],
        "solutions": ["radix_sort.py"]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md"
    },
    "assets": {
      "host01": [
        {
          "file": "test_radix_sort.py",
          "target": "/tmp",
          "chmod": "ugo+rwx"
        },
        {
          "file": "radix_sort.py",
          "target": "/home/labex/project",
          "chmod": "ugo+rwx"
        }
      ]
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["huduo0812"],
  "license": {
    "name": "Apache-2.0",
    "url": "https://github.com/donnemartin/interactive-coding-challenges/blob/master/LICENSE",
    "repo": "https://github.com/donnemartin/interactive-coding-challenges"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "基数排序：高效的整数排序算法",
      "description": "基数排序是一种非比较型整数排序算法，它通过将具有相同有效位和值的各个数位的键分组来对带有整数键的数据进行排序。它是一种线性时间排序算法，经常被用作其他排序算法中的子例程。",
      "meta": {
        "title": "基数排序算法 | 整数排序 | 线性时间排序",
        "description": "探索基数排序算法，这是一种非比较型整数排序技术，它按数位对键进行分组并在线性时间内排序。适用于大型数据集。",
        "keywords": "基数排序, 整数排序, 线性时间排序, 非比较排序, 基于数位的排序, 算法, 编程"
      },
      "details": {
        "steps": [
          {
            "title": "基数排序",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "验证所有测试是否通过",
                "file": "verify1-1.sh",
                "hint": "请确保你有正确的输出格式。"
              }
            ],
            "solutions": ["radix_sort.py"]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    }
  ]
}
