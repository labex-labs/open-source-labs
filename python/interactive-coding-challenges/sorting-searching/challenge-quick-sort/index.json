{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "challenge",
  "title": "Efficient Quick Sort Algorithm",
  "description": "Quick Sort is a popular sorting algorithm that uses a divide-and-conquer approach to sort an array or a list. It is a comparison-based algorithm that works by partitioning an array into two sub-arrays, then recursively sorting the sub-arrays. Quick Sort is widely used because of its efficiency and simplicity.",
  "meta": {
    "title": "Quick Sort Algorithm | Python Programming Tutorial",
    "description": "Learn the Quick Sort algorithm, a popular and efficient sorting technique, through a comprehensive Python programming tutorial. Dive into the implementation details and practical examples.",
    "keywords": "quick sort, python, programming, sorting algorithm, data structures, tutorial"
  },
  "difficulty": "Beginner",
  "time": 15,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": false,
  "details": {
    "steps": [
      {
        "title": "Quick Sort",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify if all tests are passed",
            "file": "verify1-1.sh",
            "hint": "Please make sure you have the correct output format.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "algorithm/sorting_searching",
          "python/build_in_functions",
          "python/classes_objects",
          "python/comments",
          "python/conditional_statements",
          "python/encapsulation",
          "python/for_loops",
          "python/function_definition",
          "python/lists",
          "python/raising_exceptions",
          "python/tuples"
        ],
        "solutions": ["quick_sort.py"]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md"
    },
    "assets": {
      "host01": [
        {
          "file": "test_quick_sort.py",
          "target": "/tmp",
          "chmod": "ugo+rwx"
        },
        {
          "file": "quick_sort.py",
          "target": "/home/labex/project",
          "chmod": "ugo+rwx"
        }
      ]
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["huduo0812"],
  "license": {
    "name": "Apache-2.0",
    "url": "https://github.com/donnemartin/interactive-coding-challenges/blob/master/LICENSE",
    "repo": "https://github.com/donnemartin/interactive-coding-challenges"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "高效快速排序算法",
      "description": "快速排序是一种流行的排序算法，它采用分治策略对数组或列表进行排序。它是一种基于比较的算法，通过将数组划分为两个子数组，然后递归地对这些子数组进行排序。由于其效率和简单性，快速排序被广泛使用。",
      "meta": {
        "title": "快速排序算法 | Python 编程教程",
        "description": "通过全面的 Python 编程教程学习快速排序算法，这是一种流行且高效的排序技术。深入了解实现细节和实际示例。",
        "keywords": "快速排序，Python, 编程，排序算法，数据结构，教程"
      },
      "details": {
        "steps": [
          {
            "title": "快速排序",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "验证所有测试是否通过",
                "file": "verify1-1.sh",
                "hint": "请确保你有正确的输出格式。"
              }
            ],
            "solutions": ["quick_sort.py"]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Algoritmo Quick Sort Eficiente",
      "description": "Quick Sort es un algoritmo de clasificación popular que utiliza un enfoque divide y vencerás para ordenar una matriz o una lista. Es un algoritmo basado en comparaciones que funciona dividiendo una matriz en dos submatrices, luego ordenando recursivamente las submatrices. Quick Sort es ampliamente utilizado debido a su eficiencia y simplicidad.",
      "meta": {
        "title": "Algoritmo Quick Sort | Tutorial de Programación en Python",
        "description": "Aprende el algoritmo Quick Sort, una técnica de clasificación popular y eficiente, a través de un tutorial de programación en Python completo. Sumérgete en los detalles de la implementación y los ejemplos prácticos.",
        "keywords": "quick sort, python, programación, algoritmo de clasificación, estructuras de datos, tutorial"
      },
      "details": {
        "steps": [
          {
            "title": "Quick Sort",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Verifica si todas las pruebas han pasado",
                "file": "verify1-1.sh",
                "hint": "Asegúrate de tener el formato de salida correcto."
              }
            ],
            "solutions": ["quick_sort.py"]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Algorithme de Tri Rapide Efficace",
      "description": "Le Tri Rapide est un algorithme de tri populaire qui utilise une approche diviser-pour-régner pour trier un tableau ou une liste. C'est un algorithme basé sur les comparaisons qui fonctionne en divisant un tableau en deux sous-tableaux, puis en triant récursivement les sous-tableaux. Le Tri Rapide est largement utilisé en raison de son efficacité et de sa simplicité.",
      "meta": {
        "title": "Algorithme de Tri Rapide | Tutoriel de Programmation Python",
        "description": "Découvrez l'algorithme de Tri Rapide, une technique de tri populaire et efficace, grâce à un tutoriel de programmation Python complet. Plongez dans les détails de l'implémentation et les exemples pratiques.",
        "keywords": "tri rapide, python, programmation, algorithme de tri, structures de données, tutoriel"
      },
      "details": {
        "steps": [
          {
            "title": "Tri Rapide",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Vérifiez si tous les tests ont réussi",
                "file": "verify1-1.sh",
                "hint": "Veuillez vous assurer d'avoir le bon format de sortie."
              }
            ],
            "solutions": ["quick_sort.py"]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Effizienter Quick Sort-Algorithmus",
      "description": "Quick Sort ist ein beliebiger Sortieralgorithmus, der einen Divide-and-Conquer-Ansatz verwendet, um ein Array oder eine Liste zu sortieren. Es ist ein vergleichsbasierter Algorithmus, der funktioniert, indem er ein Array in zwei Teilarrays aufteilt und dann die Teilarrays rekursiv sortiert. Quick Sort wird aufgrund seiner Effizienz und Einfachheit weit verbreitet eingesetzt.",
      "meta": {
        "title": "Quick Sort-Algorithmus | Python-Programmier-Tutorial",
        "description": "Lernen Sie den Quick Sort-Algorithmus, eine beliebte und effiziente Sortiertechnik, durch ein umfassendes Python-Programmier-Tutorial. Tauchen Sie in die Implementierungsdetails und praktischen Beispiele ein.",
        "keywords": "quick sort, python, programmierung, sortieralgorithmus, datenstrukturen, tutorial"
      },
      "details": {
        "steps": [
          {
            "title": "Quick Sort",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Verifizieren, ob alle Tests bestanden sind",
                "file": "verify1-1.sh",
                "hint": "Bitte stellen Sie sicher, dass Sie das richtige Ausgabeformat haben."
              }
            ],
            "solutions": ["quick_sort.py"]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "効率的なクイックソートアルゴリズム",
      "description": "クイックソートは、配列またはリストをソートするために分割統治法を使用する人気のあるソートアルゴリズムです。これは、比較ベースのアルゴリズムであり、配列を 2 つのサブ配列に分割し、その後再帰的にサブ配列をソートすることで機能します。クイックソートは、その効率性と単純さのために広く使用されています。",
      "meta": {
        "title": "クイックソートアルゴリズム | Python プログラミングチュートリアル",
        "description": "包括的な Python プログラミングチュートリアルを通じて、人気で効率的なソート技術であるクイックソートアルゴリズムを学びましょう。実装の詳細と実際の例に深く掘り下げましょう。",
        "keywords": "クイックソート，Python, プログラミング，ソートアルゴリズム，データ構造，チュートリアル"
      },
      "details": {
        "steps": [
          {
            "title": "クイックソート",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "すべてのテストが通過したことを確認する",
                "file": "verify1-1.sh",
                "hint": "出力形式が正しいことを確認してください。"
              }
            ],
            "solutions": ["quick_sort.py"]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Эффективный алгоритм Quick Sort",
      "description": "Quick Sort - это популярный алгоритм сортировки, который использует подход \"разделяй и властвуй\" для сортировки массива или списка. Это сравнительный алгоритм, который работает путём разделения массива на два подмассива, а затем рекурсивной сортировки подмассивов. Quick Sort широко используется из-за своей эффективности и простоты.",
      "meta": {
        "title": "Алгоритм Quick Sort | Руководство по программированию на Python",
        "description": "Изучите алгоритм Quick Sort, популярную и эффективную технику сортировки, с помощью полного руководства по программированию на Python. Освойте детали реализации и практические примеры.",
        "keywords": "quick sort, python, программирование, алгоритм сортировки, структуры данных, руководство"
      },
      "details": {
        "steps": [
          {
            "title": "Quick Sort",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "Проверить, пройдены ли все тесты",
                "file": "verify1-1.sh",
                "hint": "Пожалуйста, убедитесь, что у вас правильный формат вывода."
              }
            ],
            "solutions": ["quick_sort.py"]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    }
  ]
}
