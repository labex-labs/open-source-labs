{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "challenge",
  "title": "Implementing Multiple Stacks Using Array",
  "description": "In computer science, a stack is an abstract data type that serves as a collection of elements, with two main operations: push, which adds an element to the collection, and pop, which removes the most recently added element that was not yet removed. In this challenge, we will implement n stacks using a single array.",
  "meta": {
    "title": "Implement N Stacks Using a Single Array | Programming Challenges",
    "description": "Learn how to implement n stacks using a single array, a common data structure problem in computer science. Understand the requirements and explore example usage.",
    "keywords": "stacks, data structures, programming challenges, array implementation, computer science"
  },
  "difficulty": "Beginner",
  "time": 15,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": false,
  "details": {
    "steps": [
      {
        "title": "N Stacks",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify if all tests are passed",
            "file": "verify1-1.sh",
            "hint": "Please make sure you have the correct output format.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "algorithm/stacks_queues",
          "python/classes_objects",
          "python/conditional_statements",
          "python/constructor",
          "python/encapsulation",
          "python/function_definition",
          "python/lists",
          "python/polymorphism",
          "python/raising_exceptions",
          "python/tuples"
        ],
        "solutions": ["n_stacks.py"]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md"
    },
    "assets": {
      "host01": [
        {
          "file": "test_n_stacks.py",
          "target": "/tmp",
          "chmod": "ugo+rwx"
        },
        {
          "file": "n_stacks.py",
          "target": "/home/labex/project",
          "chmod": "ugo+rwx"
        }
      ]
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["huduo0812"],
  "license": {
    "name": "Apache-2.0",
    "url": "https://github.com/donnemartin/interactive-coding-challenges/blob/master/LICENSE",
    "repo": "https://github.com/donnemartin/interactive-coding-challenges"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "使用数组实现多个栈",
      "description": "在计算机科学中，栈是一种抽象数据类型，它作为一组元素的集合，有两个主要操作：push（将一个元素添加到集合中）和 pop（移除最近添加且尚未移除的元素）。在这个挑战中，我们将使用单个数组实现 n 个栈。",
      "meta": {
        "title": "使用单个数组实现 N 个栈 | 编程挑战",
        "description": "学习如何使用单个数组实现 n 个栈，这是计算机科学中常见的数据结构问题。了解相关要求并探索示例用法。",
        "keywords": "栈，数据结构，编程挑战，数组实现，计算机科学"
      },
      "details": {
        "steps": [
          {
            "title": "N 个栈",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "验证所有测试是否通过",
                "file": "verify1-1.sh",
                "hint": "请确保你有正确的输出格式。"
              }
            ],
            "solutions": ["n_stacks.py"]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Implementar múltiples pilas utilizando una matriz",
      "description": "En informática, una pila es un tipo de dato abstracto que sirve como una colección de elementos, con dos operaciones principales: push, que agrega un elemento a la colección, y pop, que elimina el elemento más recientemente agregado que aún no ha sido eliminado. En este desafío, implementaremos n pilas utilizando una sola matriz.",
      "meta": {
        "title": "Implementar N pilas utilizando una sola matriz | Retos de programación",
        "description": "Aprende cómo implementar n pilas utilizando una sola matriz, un problema común de estructura de datos en informática. Entiende los requisitos y explora el uso de ejemplo.",
        "keywords": "pilas, estructuras de datos, retos de programación, implementación de matriz, informática"
      },
      "details": {
        "steps": [
          {
            "title": "N pilas",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Verificar si todas las pruebas pasan",
                "file": "verify1-1.sh",
                "hint": "Asegúrese de tener el formato de salida correcto."
              }
            ],
            "solutions": ["n_stacks.py"]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Implémentation de plusieurs piles à l'aide d'un tableau",
      "description": "En informatique, une pile est un type abstrait de données qui sert de collection d'éléments, avec deux principales opérations : push, qui ajoute un élément à la collection, et pop, qui supprime l'élément le plus récemment ajouté qui n'a pas encore été supprimé. Dans ce défi, nous allons implémenter n piles à l'aide d'un seul tableau.",
      "meta": {
        "title": "Implémenter N piles à l'aide d'un seul tableau | Défis de programmation",
        "description": "Découvrez comment implémenter n piles à l'aide d'un seul tableau, un problème de structure de données courant en informatique. Comprenez les exigences et explorez des exemples d'utilisation.",
        "keywords": "piles, structures de données, défis de programmation, implémentation de tableau, informatique"
      },
      "details": {
        "steps": [
          {
            "title": "N piles",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Vérifiez si tous les tests ont réussi",
                "file": "verify1-1.sh",
                "hint": "Veuillez vous assurer d'avoir le bon format de sortie."
              }
            ],
            "solutions": ["n_stacks.py"]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Mehrere Stapel mit Array implementieren",
      "description": "In der Informatik ist ein Stapel (Stack) ein abstrakter Datentyp, der als Sammlung von Elementen fungiert, mit zwei Hauptoperationen: push, die ein Element zur Sammlung hinzufügt, und pop, die das zuletzt hinzugefügte Element entfernt, das noch nicht entfernt wurde. In dieser Herausforderung werden wir n Stapel mit einem einzigen Array implementieren.",
      "meta": {
        "title": "N Stapel mit einem einzigen Array implementieren | Programmierchallenges",
        "description": "Lernen Sie, wie Sie n Stapel mit einem einzigen Array implementieren, ein häufiges Problem bei der Datenstruktur in der Informatik. Verstehen Sie die Anforderungen und erkunden Sie Beispielverwendungen.",
        "keywords": "Stapel, Datenstrukturen, Programmierchallenges, Arrayimplementierung, Informatik"
      },
      "details": {
        "steps": [
          {
            "title": "N Stapel",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Überprüfen, ob alle Tests bestanden sind",
                "file": "verify1-1.sh",
                "hint": "Stellen Sie sicher, dass Sie das richtige Ausgabeformat haben."
              }
            ],
            "solutions": ["n_stacks.py"]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "配列を使った複数のスタックの実装",
      "description": "コンピュータサイエンスにおいて、スタックは抽象データ型の一種で、要素のコレクションとして機能します。主に 2 つの操作があります。push はコレクションに要素を追加し、pop はまだ削除されていない最も新しく追加された要素を削除します。このチャレンジでは、単一の配列を使用して n 個のスタックを実装します。",
      "meta": {
        "title": "単一の配列を使って N 個のスタックを実装する | プログラミングチャレンジ",
        "description": "コンピュータサイエンスにおける一般的なデータ構造の問題である単一の配列を使って n 個のスタックを実装する方法を学びましょう。要件を理解し、例の使用法を探りましょう。",
        "keywords": "スタック，データ構造，プログラミングチャレンジ，配列実装，コンピュータサイエンス"
      },
      "details": {
        "steps": [
          {
            "title": "N 個のスタック",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "すべてのテストが通過したかどうかを確認する",
                "file": "verify1-1.sh",
                "hint": "出力形式が正しいことを確認してください。"
              }
            ],
            "solutions": ["n_stacks.py"]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Реализация нескольких стеков с использованием массива",
      "description": "В информатике стек - это абстрактный тип данных, представляющий собой коллекцию элементов, с двумя основными операциями: push, которая добавляет элемент в коллекцию, и pop, которая удаляет наиболее недавно добавленный элемент, который еще не был удален. В этом испытании мы реализуем n стеков с использованием одного массива.",
      "meta": {
        "title": "Реализация N стеков с использованием одного массива | Задачи программирования",
        "description": "Изучите, как реализовать n стеков с использованием одного массива - распространенная задача по структуре данных в информатике. Разберитесь в требованиях и изучите примеры использования.",
        "keywords": "стеки, структуры данных, задачи программирования, реализация массива, информатика"
      },
      "details": {
        "steps": [
          {
            "title": "N стеков",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "Проверить, пройдены ли все тесты",
                "file": "verify1-1.sh",
                "hint": "Пожалуйста, убедитесь, что у вас правильный формат вывода."
              }
            ],
            "solutions": ["n_stacks.py"]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    }
  ]
}
