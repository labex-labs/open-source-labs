{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "challenge",
  "title": "Implement O(1) Stack with Push, Pop, Min",
  "description": "In computer science, a stack is an abstract data type that serves as a collection of elements, with two main operations: push, which adds an element to the collection, and pop, which removes the most recently added element that was not yet removed. In this challenge, we will implement a stack with push, pop, and min methods running O(1) time.",
  "meta": {
    "title": "Stack Implementation | Data Structures | Coding Challenges",
    "description": "Learn how to implement a stack data structure with push, pop, and min methods running in O(1) time. Explore coding challenges and solutions for efficient stack management.",
    "keywords": "stack, data structures, coding challenges, push, pop, min, time complexity"
  },
  "difficulty": "Beginner",
  "time": 15,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": false,
  "details": {
    "steps": [
      {
        "title": "Stack Min",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify if all tests are passed",
            "file": "verify1-1.sh",
            "hint": "Please make sure you have the correct output format.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "algorithm/stacks_queues",
          "python/build_in_functions",
          "python/classes_objects",
          "python/conditional_statements",
          "python/constructor",
          "python/default_arguments",
          "python/encapsulation",
          "python/function_definition",
          "python/importing_modules",
          "python/iterators",
          "python/os_system",
          "python/polymorphism",
          "python/standard_libraries",
          "python/tuples"
        ],
        "solutions": ["stack_min.py"]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md"
    },
    "assets": {
      "host01": [
        {
          "file": "test_stack_min.py",
          "target": "/tmp",
          "chmod": "ugo+rwx"
        },
        {
          "file": "stack_min.py",
          "target": "/home/labex/project",
          "chmod": "ugo+rwx"
        }
      ]
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["huduo0812"],
  "license": {
    "name": "Apache-2.0",
    "url": "https://github.com/donnemartin/interactive-coding-challenges/blob/master/LICENSE",
    "repo": "https://github.com/donnemartin/interactive-coding-challenges"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "实现具有入栈、出栈、最小值操作且时间复杂度为O(1) 的栈",
      "description": "在计算机科学中，栈是一种抽象数据类型，它作为一组元素的集合，有两个主要操作：push（将一个元素添加到集合中）和pop（移除最近添加且尚未移除的元素）。在这个挑战中，我们将实现一个具有push、pop和min方法且运行时间为O(1) 的栈。",
      "meta": {
        "title": "栈的实现 | 数据结构 | 编码挑战",
        "description": "学习如何实现一个栈数据结构，其入栈、出栈和最小值操作的时间复杂度为O(1)。探索高效栈管理的编码挑战及解决方案。",
        "keywords": "栈, 数据结构, 编码挑战, 入栈, 出栈, 最小值, 时间复杂度"
      },
      "details": {
        "steps": [
          {
            "title": "带有最小值操作的栈",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "验证所有测试是否通过",
                "file": "verify1-1.sh",
                "hint": "请确保你有正确的输出格式。"
              }
            ],
            "solutions": ["stack_min.py"]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    }
  ]
}
