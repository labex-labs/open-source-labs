{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "challenge",
  "title": "Depth-First Traversal of Binary Trees",
  "description": "Tree traversal is a common operation in computer science and is used to visit each node in a tree exactly once. Depth-first search (DFS) is a popular algorithm for traversing trees and graphs. In this challenge, we will implement DFS on a binary tree.",
  "meta": {
    "title": "Tree Traversal | Depth-First Search | Binary Tree",
    "description": "Learn how to implement depth-first traversals (in-order, pre-order, post-order) on a binary tree using the Depth-First Search (DFS) algorithm.",
    "keywords": "tree traversal, depth-first search, binary tree, in-order, pre-order, post-order"
  },
  "difficulty": "Beginner",
  "time": 15,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": false,
  "details": {
    "steps": [
      {
        "title": "Tree Dfs",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify if all tests are passed",
            "file": "verify1-1.sh",
            "hint": "Please make sure you have the correct output format.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "algorithm/graphs_trees",
          "algorithm/recursion_dynamic",
          "python/build_in_functions",
          "python/classes_objects",
          "python/conditional_statements",
          "python/constructor",
          "python/default_arguments",
          "python/encapsulation",
          "python/function_definition",
          "python/polymorphism",
          "python/raising_exceptions",
          "python/strings",
          "python/tuples",
          "python/type_conversion",
          "python/variables_data_types"
        ],
        "solutions": ["dfs.py"]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md"
    },
    "assets": {
      "host01": [
        {
          "file": "test_dfs.py",
          "target": "/tmp",
          "chmod": "ugo+rwx"
        },
        {
          "file": "dfs.py",
          "target": "/home/labex/project",
          "chmod": "ugo+rwx"
        }
      ]
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["huduo0812"],
  "license": {
    "name": "Apache-2.0",
    "url": "https://github.com/donnemartin/interactive-coding-challenges/blob/master/LICENSE",
    "repo": "https://github.com/donnemartin/interactive-coding-challenges"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "二叉树的深度优先遍历",
      "description": "树遍历是计算机科学中的一项常见操作，用于恰好访问树中的每个节点一次。深度优先搜索（DFS）是一种用于遍历树和图的流行算法。在这个挑战中，我们将在二叉树上实现 DFS。",
      "meta": {
        "title": "树遍历 | 深度优先搜索 | 二叉树",
        "description": "学习如何使用深度优先搜索（DFS）算法在二叉树上实现深度优先遍历（中序、前序、后序）。",
        "keywords": "树遍历, 深度优先搜索, 二叉树, 中序, 前序, 后序"
      },
      "details": {
        "steps": [
          {
            "title": "树的深度优先搜索",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "验证所有测试是否通过",
                "file": "verify1-1.sh",
                "hint": "请确保你有正确的输出格式。"
              }
            ],
            "solutions": ["dfs.py"]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    }
  ]
}
