{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "challenge",
  "title": "Graph Shortest Path Unweighted",
  "description": "In graph theory, the shortest path problem is the problem of finding a path between two vertices (or nodes) in a graph such that the sum of the weights of its constituent edges is minimized. The problem of finding the shortest path between two nodes in an unweighted graph can be solved using a breadth-first search algorithm.",
  "meta": {
    "title": "Graph Theory | Shortest Path | Unweighted Graph",
    "description": "Explore the shortest path problem in graph theory, learn how to solve it in unweighted graphs using a breadth-first search algorithm.",
    "keywords": "graph theory, shortest path, unweighted graph, breadth-first search, algorithm"
  },
  "difficulty": "Beginner",
  "time": 15,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": false,
  "details": {
    "steps": [
      {
        "title": "Graph Shortest Path Unweighted",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify if all tests are passed",
            "file": "verify1-1.sh",
            "hint": "Please make sure you have the correct output format.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "algorithm/graphs_trees",
          "python/build_in_functions",
          "python/classes_objects",
          "python/comments",
          "python/conditional_statements",
          "python/constructor",
          "python/default_arguments",
          "python/dictionaries",
          "python/encapsulation",
          "python/for_loops",
          "python/function_definition",
          "python/importing_modules",
          "python/lists",
          "python/polymorphism",
          "python/raising_exceptions",
          "python/standard_libraries",
          "python/strings",
          "python/tuples",
          "python/type_conversion",
          "python/using_packages",
          "python/variables_data_types",
          "python/while_loops"
        ],
        "solutions": ["shortest_path.py"]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md"
    },
    "assets": {
      "host01": [
        {
          "file": "test_shortest_path.py",
          "target": "/tmp",
          "chmod": "ugo+rwx"
        },
        {
          "file": "shortest_path.py",
          "target": "/home/labex/project",
          "chmod": "ugo+rwx"
        }
      ]
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["huduo0812"],
  "license": {
    "name": "Apache-2.0",
    "url": "https://github.com/donnemartin/interactive-coding-challenges/blob/master/LICENSE",
    "repo": "https://github.com/donnemartin/interactive-coding-challenges"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "无权图的图最短路径",
      "description": "在图论中，最短路径问题是指在一个图中找到两个顶点（或节点）之间的一条路径，使得其组成边的权重之和最小。在无权图中找到两个节点之间的最短路径问题，可以使用广度优先搜索算法来解决。",
      "meta": {
        "title": "图论 | 最短路径 | 无权图",
        "description": "探索图论中的最短路径问题，了解如何使用广度优先搜索算法在无权图中解决该问题。",
        "keywords": "图论, 最短路径, 无权图, 广度优先搜索, 算法"
      },
      "details": {
        "steps": [
          {
            "title": "无权图的图最短路径",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "验证所有测试是否通过",
                "file": "verify1-1.sh",
                "hint": "请确保你有正确的输出格式。"
              }
            ],
            "solutions": ["shortest_path.py"]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    }
  ]
}
