{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "challenge",
  "title": "Graph Build Order",
  "description": "In software development, it is common to have projects that depend on other projects. In order to build these projects, we need to determine the order in which they should be built. This is known as the build order problem.",
  "meta": {
    "title": "Mastering Build Order in Software Development",
    "description": "Discover the essential techniques for determining the optimal build order for your software projects and dependencies.",
    "keywords": "python playground, algorithm playground, software development, python, project dependencies, algorithm, graph theory, topological sorting, build order"
  },
  "difficulty": "Beginner",
  "time": 15,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": false,
  "details": {
    "steps": [
      {
        "title": "Graph Build Order",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify if all tests are passed",
            "file": "verify1-1.sh",
            "hint": "Please make sure you have the correct output format.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "algorithm/graphs_trees",
          "python/build_in_functions",
          "python/classes_objects",
          "python/comments",
          "python/conditional_statements",
          "python/constructor",
          "python/data_collections",
          "python/default_arguments",
          "python/encapsulation",
          "python/for_loops",
          "python/function_definition",
          "python/importing_modules",
          "python/lists",
          "python/polymorphism",
          "python/raising_exceptions",
          "python/standard_libraries",
          "python/strings",
          "python/tuples",
          "python/type_conversion",
          "python/using_packages",
          "python/variables_data_types",
          "python/while_loops",
          "python/with_statement"
        ],
        "solutions": ["build_order.py"]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md"
    },
    "assets": {
      "host01": [
        {
          "file": "test_build_order.py",
          "target": "/tmp",
          "chmod": "ugo+rwx"
        },
        {
          "file": "build_order.py",
          "target": "/home/labex/project",
          "chmod": "ugo+rwx"
        }
      ]
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["huduo0812"],
  "license": {
    "name": "Apache-2.0",
    "url": "https://github.com/donnemartin/interactive-coding-challenges/blob/master/LICENSE",
    "repo": "https://github.com/donnemartin/interactive-coding-challenges"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "图的构建顺序",
      "description": "在软件开发中，依赖其他项目的项目很常见。为了构建这些项目，我们需要确定它们的构建顺序。这就是所谓的构建顺序问题。",
      "meta": {
        "title": "掌握软件开发中的构建顺序",
        "description": "探索确定软件项目及其依赖项的最佳构建顺序的基本技术。",
        "keywords": "Python 实践场, 算法实践场, 软件开发, Python, 项目依赖项, 算法, 图论, 拓扑排序, 构建顺序"
      },
      "details": {
        "steps": [
          {
            "title": "图的构建顺序",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "验证所有测试是否通过",
                "file": "verify1-1.sh",
                "hint": "请确保你有正确的输出格式。"
              }
            ],
            "solutions": ["build_order.py"]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    }
  ]
}
