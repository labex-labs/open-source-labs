{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "challenge",
  "title": "Depth-First Search on Directed Graphs",
  "description": "Graph is a non-linear data structure that consists of nodes and edges. Depth-first search (DFS) is a graph traversal algorithm that explores as far as possible along each branch before backtracking. In this challenge, we will implement DFS on a directed graph.",
  "meta": {
    "title": "Depth-First Search (DFS) | Graph Traversal Algorithm",
    "description": "Explore the fundamentals of graph theory and implement depth-first search (DFS) on a directed graph, a powerful algorithm for traversing connected graphs.",
    "keywords": "graph theory, depth-first search, DFS, graph traversal, directed graph, algorithm, programming"
  },
  "difficulty": "Beginner",
  "time": 15,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": false,
  "details": {
    "steps": [
      {
        "title": "Graph Dfs",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify if all tests are passed",
            "file": "verify1-1.sh",
            "hint": "Please make sure you have the correct output format.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "algorithm/graphs_trees",
          "python/build_in_functions",
          "python/classes_objects",
          "python/comments",
          "python/conditional_statements",
          "python/constructor",
          "python/default_arguments",
          "python/encapsulation",
          "python/for_loops",
          "python/function_definition",
          "python/importing_modules",
          "python/lists",
          "python/polymorphism",
          "python/raising_exceptions",
          "python/strings",
          "python/tuples",
          "python/type_conversion",
          "python/using_packages",
          "python/variables_data_types"
        ],
        "solutions": ["dfs.py"]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md"
    },
    "assets": {
      "host01": [
        {
          "file": "test_dfs.py",
          "target": "/tmp",
          "chmod": "ugo+rwx"
        },
        {
          "file": "dfs.py",
          "target": "/home/labex/project",
          "chmod": "ugo+rwx"
        }
      ]
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["huduo0812"],
  "license": {
    "name": "Apache-2.0",
    "url": "https://github.com/donnemartin/interactive-coding-challenges/blob/master/LICENSE",
    "repo": "https://github.com/donnemartin/interactive-coding-challenges"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "有向图上的深度优先搜索",
      "description": "图是一种非线性数据结构，由节点和边组成。深度优先搜索（DFS）是一种图遍历算法，它在回溯之前尽可能沿着每个分支进行探索。在这个挑战中，我们将在有向图上实现 DFS。",
      "meta": {
        "title": "深度优先搜索（DFS）| 图遍历算法",
        "description": "探索图论的基础知识，并在有向图上实现深度优先搜索（DFS），这是一种用于遍历连通图的强大算法。",
        "keywords": "图论，深度优先搜索，DFS, 图遍历，有向图，算法，编程"
      },
      "details": {
        "steps": [
          {
            "title": "图的深度优先搜索",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "验证所有测试是否通过",
                "file": "verify1-1.sh",
                "hint": "请确保你有正确的输出格式。"
              }
            ],
            "solutions": ["dfs.py"]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Búsqueda en Profundidad (DFS) en Grafos Dirigidos",
      "description": "Un grafo es una estructura de datos no lineal que consta de nodos y aristas. La búsqueda en profundidad (DFS) es un algoritmo de recorrido de grafos que explora lo más posible por cada rama antes de retroceder. En este desafío, implementaremos la DFS en un grafo dirigido.",
      "meta": {
        "title": "Búsqueda en Profundidad (DFS) | Algoritmo de Recorrido de Grafos",
        "description": "Explora los fundamentos de la teoría de grafos e implementa la búsqueda en profundidad (DFS) en un grafo dirigido, un algoritmo poderoso para recorrer grafos conectados.",
        "keywords": "teoría de grafos, búsqueda en profundidad, DFS, recorrido de grafos, grafo dirigido, algoritmo, programación"
      },
      "details": {
        "steps": [
          {
            "title": "Búsqueda en Profundidad (DFS) en Grafos",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Verifica si todas las pruebas han pasado",
                "file": "verify1-1.sh",
                "hint": "Asegúrate de tener el formato de salida correcto."
              }
            ],
            "solutions": ["dfs.py"]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Recherche en profondeur (DFS) sur des graphes dirigés",
      "description": "Le graphe est une structure de données non linéaire composée de nœuds et d'arêtes. La recherche en profondeur (DFS - Depth - First Search en anglais) est un algorithme de parcours de graphe qui explore le plus loin possible le long de chaque branche avant de revenir en arrière. Dans ce défi, nous allons implémenter la DFS sur un graphe dirigé.",
      "meta": {
        "title": "Recherche en profondeur (DFS) | Algorithme de parcours de graphe",
        "description": "Explorez les bases de la théorie des graphes et implémentez la recherche en profondeur (DFS) sur un graphe dirigé, un puissant algorithme pour parcourir les graphes connectés.",
        "keywords": "théorie des graphes, recherche en profondeur, DFS, parcours de graphe, graphe dirigé, algorithme, programmation"
      },
      "details": {
        "steps": [
          {
            "title": "Recherche en profondeur (DFS) sur un graphe",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Vérifiez si tous les tests sont passés",
                "file": "verify1-1.sh",
                "hint": "Veuillez vous assurer d'avoir le bon format de sortie."
              }
            ],
            "solutions": ["dfs.py"]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Tiefensuche auf gerichteten Graphen",
      "description": "Ein Graph ist eine nicht-lineare Datenstruktur, die aus Knoten und Kanten besteht. Die Tiefensuche (Depth-First Search, DFS) ist ein Algorithmus zum Abwandern eines Graphen, der solange wie möglich entlang jeder Verzweigung abläuft, bevor er zurückgeht. In dieser Herausforderung werden wir die Tiefensuche auf einem gerichteten Graphen implementieren.",
      "meta": {
        "title": "Tiefensuche (DFS) | Algorithmus zum Abwandern von Graphen",
        "description": "Erkunden Sie die Grundlagen der Graphentheorie und implementieren Sie die Tiefensuche (DFS) auf einem gerichteten Graphen, einem leistungsstarken Algorithmus zum Abwandern von zusammenhängenden Graphen.",
        "keywords": "Graphentheorie, Tiefensuche, DFS, Abwandern von Graphen, gerichteter Graph, Algorithmus, Programmierung"
      },
      "details": {
        "steps": [
          {
            "title": "Graph Dfs",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Verifizieren, ob alle Tests bestanden sind",
                "file": "verify1-1.sh",
                "hint": "Stellen Sie bitte sicher, dass Sie das richtige Ausgabeformat haben."
              }
            ],
            "solutions": ["dfs.py"]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "有向グラフ上の深さ優先探索",
      "description": "グラフは、ノードとエッジで構成される非線形データ構造です。深さ優先探索（DFS：Depth-First Search）は、グラフの探索アルゴリズムであり、バックトラッキングする前に各ブランチをできるだけ遠くまで探索します。このチャレンジでは、有向グラフ上で DFS を実装します。",
      "meta": {
        "title": "深さ優先探索 (DFS) | グラフ探索アルゴリズム",
        "description": "グラフ理論の基本を探求し、有向グラフ上で深さ優先探索 (DFS) を実装しましょう。連結グラフを探索する強力なアルゴリズムです。",
        "keywords": "グラフ理論，深さ優先探索，DFS, グラフ探索，有向グラフ，アルゴリズム，プログラミング"
      },
      "details": {
        "steps": [
          {
            "title": "グラフの DFS",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "すべてのテストが合格したかどうかを確認する",
                "file": "verify1-1.sh",
                "hint": "出力形式が正しいことを確認してください。"
              }
            ],
            "solutions": ["dfs.py"]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Обход направленного графа в глубину",
      "description": "Граф - это нелинейная структура данных, состоящая из узлов и ребер. Обход в глубину (Depth-first search, DFS) - это алгоритм обхода графа, который исследует граф вдоль каждого ветви до предела, прежде чем возвращаться назад. В этом испытании мы реализуем DFS для направленного графа.",
      "meta": {
        "title": "Обход в глубину (DFS) | Алгоритм обхода графа",
        "description": "Изучите основы теории графов и реализуйте обход в глубину (DFS) для направленного графа, мощный алгоритм для обхода связных графов.",
        "keywords": "теория графов, обход в глубину, DFS, обход графа, направленный граф, алгоритм, программирование"
      },
      "details": {
        "steps": [
          {
            "title": "Обход графа в глубину",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "Проверить, пройдены ли все тесты",
                "file": "verify1-1.sh",
                "hint": "Пожалуйста, убедитесь, что у вас правильный формат вывода."
              }
            ],
            "solutions": ["dfs.py"]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    }
  ]
}
