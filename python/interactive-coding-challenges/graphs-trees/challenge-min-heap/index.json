{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "challenge",
  "title": "Min Heap Binary Tree Introduction",
  "description": "A min heap is a binary tree data structure that satisfies the heap property, where the parent node is always less than or equal to its children. In a min heap, the root node is always the minimum value in the tree.",
  "meta": {
    "title": "Mastering Min Heap Binary Trees",
    "description": "Explore the fundamentals of min heap binary trees, including implementation and practical applications.",
    "keywords": "python playground, algorithm playground, heap property, python, binary tree, min heap, algorithm, data structure, extract minimum"
  },
  "difficulty": "Beginner",
  "time": 15,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": false,
  "details": {
    "steps": [
      {
        "title": "Min Heap",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify if all tests are passed",
            "file": "verify1-1.sh",
            "hint": "Please make sure you have the correct output format.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "algorithm/graphs_trees",
          "algorithm/recursion_dynamic",
          "python/build_in_functions",
          "python/classes_objects",
          "python/comments",
          "python/conditional_statements",
          "python/constructor",
          "python/encapsulation",
          "python/function_definition",
          "python/lists",
          "python/polymorphism",
          "python/raising_exceptions",
          "python/tuples"
        ],
        "solutions": ["min_heap.py"]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md"
    },
    "assets": {
      "host01": [
        {
          "file": "test_min_heap.py",
          "target": "/tmp",
          "chmod": "ugo+rwx"
        },
        {
          "file": "min_heap.py",
          "target": "/home/labex/project",
          "chmod": "ugo+rwx"
        }
      ]
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["huduo0812"],
  "license": {
    "name": "Apache-2.0",
    "url": "https://github.com/donnemartin/interactive-coding-challenges/blob/master/LICENSE",
    "repo": "https://github.com/donnemartin/interactive-coding-challenges"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "最小堆二叉树介绍",
      "description": "最小堆是一种满足堆属性的二叉树数据结构，其中父节点始终小于或等于其子节点。在最小堆中，根节点始终是树中的最小值。",
      "meta": {
        "title": "掌握最小堆二叉树",
        "description": "探索最小堆二叉树的基础知识，包括实现和实际应用。",
        "keywords": "Python 游乐场, 算法游乐场, 堆属性, Python, 二叉树, 最小堆, 算法, 数据结构, 提取最小值"
      },
      "details": {
        "steps": [
          {
            "title": "最小堆",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "验证所有测试是否通过",
                "file": "verify1-1.sh",
                "hint": "请确保你有正确的输出格式。"
              }
            ],
            "solutions": ["min_heap.py"]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    }
  ]
}
