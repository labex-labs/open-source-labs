{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "challenge",
  "title": "Min Heap Binary Tree Introduction",
  "description": "A min heap is a binary tree data structure that satisfies the heap property, where the parent node is always less than or equal to its children. In a min heap, the root node is always the minimum value in the tree.",
  "meta": {
    "title": "Mastering Min Heap Binary Trees",
    "description": "Explore the fundamentals of min heap binary trees, including implementation and practical applications.",
    "keywords": "python playground, algorithm playground, heap property, python, binary tree, min heap, algorithm, data structure, extract minimum"
  },
  "difficulty": "Beginner",
  "time": 15,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": false,
  "details": {
    "steps": [
      {
        "title": "Min Heap",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify if all tests are passed",
            "file": "verify1-1.sh",
            "hint": "Please make sure you have the correct output format.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "algorithm/graphs_trees",
          "algorithm/recursion_dynamic",
          "python/build_in_functions",
          "python/classes_objects",
          "python/comments",
          "python/conditional_statements",
          "python/constructor",
          "python/encapsulation",
          "python/function_definition",
          "python/lists",
          "python/polymorphism",
          "python/raising_exceptions",
          "python/tuples"
        ],
        "solutions": ["min_heap.py"]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md"
    },
    "assets": {
      "host01": [
        {
          "file": "test_min_heap.py",
          "target": "/tmp",
          "chmod": "ugo+rwx"
        },
        {
          "file": "min_heap.py",
          "target": "/home/labex/project",
          "chmod": "ugo+rwx"
        }
      ]
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["huduo0812"],
  "license": {
    "name": "Apache-2.0",
    "url": "https://github.com/donnemartin/interactive-coding-challenges/blob/master/LICENSE",
    "repo": "https://github.com/donnemartin/interactive-coding-challenges"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "最小堆二叉树介绍",
      "description": "最小堆是一种满足堆属性的二叉树数据结构，其中父节点始终小于或等于其子节点。在最小堆中，根节点始终是树中的最小值。",
      "meta": {
        "title": "掌握最小堆二叉树",
        "description": "探索最小堆二叉树的基础知识，包括实现和实际应用。",
        "keywords": "Python 游乐场，算法游乐场，堆属性，Python, 二叉树，最小堆，算法，数据结构，提取最小值"
      },
      "details": {
        "steps": [
          {
            "title": "最小堆",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "验证所有测试是否通过",
                "file": "verify1-1.sh",
                "hint": "请确保你有正确的输出格式。"
              }
            ],
            "solutions": ["min_heap.py"]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Introducción a los árboles binarios Min Heap",
      "description": "Un min heap es una estructura de datos de árbol binario que satisface la propiedad de heap, donde el nodo padre siempre es menor o igual a sus hijos. En un min heap, el nodo raíz siempre es el valor mínimo en el árbol.",
      "meta": {
        "title": "Dominando los árboles binarios Min Heap",
        "description": "Explora los fundamentos de los árboles binarios Min Heap, incluyendo la implementación y las aplicaciones prácticas.",
        "keywords": "python playground, algorithm playground, propiedad de heap, python, árbol binario, min heap, algoritmo, estructura de datos, extraer mínimo"
      },
      "details": {
        "steps": [
          {
            "title": "Min Heap",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Verifica si todas las pruebas han pasado",
                "file": "verify1-1.sh",
                "hint": "Asegúrate de tener el formato de salida correcto."
              }
            ],
            "solutions": ["min_heap.py"]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Présentation de l'arbre binaire de tas min",
      "description": "Un tas min est une structure de données d'arbre binaire qui satisfait à la propriété du tas, où le nœud parent est toujours inférieur ou égal à ses enfants. Dans un tas min, le nœud racine est toujours la valeur minimale de l'arbre.",
      "meta": {
        "title": "Maîtriser les arbres binaires de tas min",
        "description": "Explorez les bases des arbres binaires de tas min, y compris l'implémentation et les applications pratiques.",
        "keywords": "python playground, algorithm playground, propriété du tas, python, arbre binaire, tas min, algorithme, structure de données, extraire le minimum"
      },
      "details": {
        "steps": [
          {
            "title": "Tas min",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Vérifiez si tous les tests sont passés",
                "file": "verify1-1.sh",
                "hint": "Veuillez vous assurer d'avoir le bon format de sortie."
              }
            ],
            "solutions": ["min_heap.py"]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Einführung in die binäre Baumstruktur Min-Heap",
      "description": "Ein Min-Heap ist eine binäre Baumdatenstruktur, die die Heap-Eigenschaft erfüllt, wobei der Elternknoten immer kleiner oder gleich seinen Kindern ist. In einem Min-Heap ist der Wurzelknoten immer der kleinste Wert im Baum.",
      "meta": {
        "title": "Meisterung von binären Bäumen Min-Heap",
        "description": "Erkunden Sie die Grundlagen von binären Bäumen Min-Heap, einschließlich der Implementierung und praktischen Anwendungen.",
        "keywords": "python playground, algorithm playground, heap-eigenschaft, python, binärer Baum, Min-Heap, Algorithmus, Datenstruktur, minimales Extrakt"
      },
      "details": {
        "steps": [
          {
            "title": "Min-Heap",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Verifizieren, ob alle Tests bestanden sind",
                "file": "verify1-1.sh",
                "hint": "Bitte stellen Sie sicher, dass Sie das richtige Ausgabeformat haben."
              }
            ],
            "solutions": ["min_heap.py"]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "ミニヒープ二分木の紹介",
      "description": "ミニヒープは、親ノードが常に子ノードより小さいか等しいヒーププロパティを満たす二分木データ構造です。ミニヒープでは、ルートノードは常に木の最小値です。",
      "meta": {
        "title": "ミニヒープ二分木をマスターする",
        "description": "ミニヒープ二分木の基本を探り、実装や実際の応用を含めて学びましょう。",
        "keywords": "python プレイグラウンド，アルゴリズム プレイグラウンド，ヒーププロパティ，python, 二分木，ミニヒープ，アルゴリズム，データ構造，最小値を抽出する"
      },
      "details": {
        "steps": [
          {
            "title": "ミニヒープ",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "すべてのテストが通過したかどうかを確認する",
                "file": "verify1-1.sh",
                "hint": "出力形式が正しいことを確認してください。"
              }
            ],
            "solutions": ["min_heap.py"]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Введение в двоичное дерево мини-кучи",
      "description": "Мини-куча - это двоичное дерево, представляющее собой структуру данных, которая удовлетворяет свойству кучи, при котором родительская вершина всегда меньше или равна своим дочерним вершинам. В мини-куче корневая вершина всегда имеет минимальное значение в дереве.",
      "meta": {
        "title": "Осваивание двоичных деревьев мини-кучи",
        "description": "Изучите основы двоичных деревьев мини-кучи, включая реализацию и практические приложения.",
        "keywords": "python playground, algorithm playground, heap property, python, binary tree, min heap, algorithm, data structure, extract minimum"
      },
      "details": {
        "steps": [
          {
            "title": "Мини-куча",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "Проверить, пройдены ли все тесты",
                "file": "verify1-1.sh",
                "hint": "Пожалуйста, убедитесь, что у вас правильный формат вывода."
              }
            ],
            "solutions": ["min_heap.py"]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    }
  ]
}
