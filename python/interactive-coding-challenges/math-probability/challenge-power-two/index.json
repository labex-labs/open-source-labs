{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "challenge",
  "title": "Determine Power of Two in Python",
  "description": "In computer science, it is often necessary to determine if a given number is a power of two. This can be useful in a variety of applications, such as optimizing algorithms or checking for errors in data transmission. In this challenge, we will write a Python function to determine if a number is a power of two.",
  "meta": {
    "title": "Python | Power of Two | Programming Tutorials",
    "description": "Discover how to determine if a number is a power of two in Python. Optimize algorithms and check for data transmission errors with this essential programming skill.",
    "keywords": "Python, Power of Two, Programming Tutorials, Algorithms, Data Transmission"
  },
  "difficulty": "Beginner",
  "time": 5,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": false,
  "details": {
    "steps": [
      {
        "title": "Power Two",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify if all tests are passed",
            "file": "verify1-1.sh",
            "hint": "Please make sure you have the correct output format.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [],
        "solutions": ["is_power_of_two.py"]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md"
    },
    "assets": {
      "host01": [
        {
          "file": "test_is_power_of_two.py",
          "target": "/tmp",
          "chmod": "ugo+rwx"
        },
        {
          "file": "is_power_of_two.py",
          "target": "/home/labex/project",
          "chmod": "ugo+rwx"
        }
      ]
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["huduo0812"],
  "license": {
    "name": "Apache-2.0",
    "url": "https://github.com/donnemartin/interactive-coding-challenges/blob/master/LICENSE",
    "repo": "https://github.com/donnemartin/interactive-coding-challenges"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "用 Python 判断是否为 2 的幂",
      "description": "在计算机科学中，经常需要判断一个给定的数字是否为 2 的幂。这在各种应用中都很有用，比如优化算法或检查数据传输中的错误。在这个挑战中，我们将编写一个 Python 函数来判断一个数字是否为 2 的幂。",
      "meta": {
        "title": "Python | 2 的幂 | 编程教程",
        "description": "探索如何在 Python 中判断一个数字是否为 2 的幂。通过这项基本的编程技能优化算法并检查数据传输错误。",
        "keywords": "Python, 2 的幂，编程教程，算法，数据传输"
      },
      "details": {
        "steps": [
          {
            "title": "2 的幂",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "验证所有测试是否通过",
                "file": "verify1-1.sh",
                "hint": "请确保你有正确的输出格式。"
              }
            ],
            "solutions": ["is_power_of_two.py"]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Determinar la potencia de dos en Python",
      "description": "En informática, a menudo es necesario determinar si un número dado es una potencia de dos. Esto puede ser útil en una variedad de aplicaciones, como optimizar algoritmos o comprobar errores en la transmisión de datos. En este desafío, escribiremos una función de Python para determinar si un número es una potencia de dos.",
      "meta": {
        "title": "Python | Potencia de dos | Tutoriales de programación",
        "description": "Descubre cómo determinar si un número es una potencia de dos en Python. Optimiza algoritmos y comprueba errores en la transmisión de datos con esta habilidad esencial de programación.",
        "keywords": "Python, Potencia de dos, Tutoriales de programación, Algoritmos, Transmisión de datos"
      },
      "details": {
        "steps": [
          {
            "title": "Potencia de dos",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Verificar si todas las pruebas pasan",
                "file": "verify1-1.sh",
                "hint": "Asegúrese de tener el formato de salida correcto."
              }
            ],
            "solutions": ["is_power_of_two.py"]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Déterminer la puissance de deux en Python",
      "description": "En informatique, il est souvent nécessaire de déterminer si un nombre donné est une puissance de deux. Cela peut être utile dans diverses applications, telles que l'optimisation d'algorithmes ou la vérification d'erreurs dans la transmission de données. Dans ce défi, nous allons écrire une fonction Python pour déterminer si un nombre est une puissance de deux.",
      "meta": {
        "title": "Python | Puissance de deux | Tutoriels de programmation",
        "description": "Découvrez comment déterminer si un nombre est une puissance de deux en Python. Optimisez vos algorithmes et vérifiez les erreurs de transmission de données avec cette compétence de programmation essentielle.",
        "keywords": "Python, Puissance de deux, Tutoriels de programmation, Algorithmes, Transmission de données"
      },
      "details": {
        "steps": [
          {
            "title": "Puissance de deux",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Vérifiez si tous les tests sont passés",
                "file": "verify1-1.sh",
                "hint": "Veuillez vous assurer d'avoir le bon format de sortie."
              }
            ],
            "solutions": ["is_power_of_two.py"]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Bestimmen der Zweierpotenz in Python",
      "description": "In der Informatik ist es oft erforderlich, zu bestimmen, ob eine gegebene Zahl eine Zweierpotenz ist. Dies kann in einer Vielzahl von Anwendungen nützlich sein, wie beispielsweise der Optimierung von Algorithmen oder der Fehlerprüfung bei der Datenübertragung. In dieser Herausforderung werden wir eine Python-Funktion schreiben, um zu bestimmen, ob eine Zahl eine Zweierpotenz ist.",
      "meta": {
        "title": "Python | Zweierpotenz | Programmierungstutorials",
        "description": "Entdecken Sie, wie Sie in Python bestimmen können, ob eine Zahl eine Zweierpotenz ist. Optimieren Sie Algorithmen und überprüfen Sie auf Datenübertragungserroren mit dieser essentiellen Programmierkenntnis.",
        "keywords": "Python, Zweierpotenz, Programmierungstutorials, Algorithmen, Datenübertragung"
      },
      "details": {
        "steps": [
          {
            "title": "Zweierpotenz",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Verifizieren, ob alle Tests bestanden sind",
                "file": "verify1-1.sh",
                "hint": "Stellen Sie bitte sicher, dass Sie das richtige Ausgabeformat haben."
              }
            ],
            "solutions": ["is_power_of_two.py"]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "Python で 2 の累乗を判定する",
      "description": "コンピュータサイエンスにおいて、与えられた数が 2 の累乗であるかどうかを判定する必要があることがよくあります。これは、アルゴリズムの最適化やデータ伝送のエラーチェックなど、さまざまなアプリケーションで役立つことができます。このチャレンジでは、Python 関数を書いて数が 2 の累乗であるかどうかを判定します。",
      "meta": {
        "title": "Python | 2 の累乗 | プログラミングチュートリアル",
        "description": "Python で数が 2 の累乗であるかどうかを判定する方法を学びましょう。この必須のプログラミングスキルを使ってアルゴリズムを最適化し、データ伝送エラーをチェックしましょう。",
        "keywords": "Python, 2 の累乗，プログラミングチュートリアル，アルゴリズム，データ伝送"
      },
      "details": {
        "steps": [
          {
            "title": "2 の累乗",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "すべてのテストが合格したことを確認する",
                "file": "verify1-1.sh",
                "hint": "出力形式が正しいことを確認してください。"
              }
            ],
            "solutions": ["is_power_of_two.py"]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Определение степени двойки на Python",
      "description": "В информатике часто необходимо определить, является ли заданное число степенью двойки. Это может быть полезно в различных приложениях, таких как оптимизация алгоритмов или проверка ошибок в передаче данных. В этом испытании мы напишем функцию на Python для определения, является ли число степенью двойки.",
      "meta": {
        "title": "Python | Степень двойки | Руководства по программированию",
        "description": "Изучите, как определить, является ли число степенью двойки на Python. Оптимизируйте алгоритмы и проверяйте ошибки в передаче данных с помощью этого важного навыка программирования.",
        "keywords": "Python, Степень двойки, Руководства по программированию, Алгоритмы, Передача данных"
      },
      "details": {
        "steps": [
          {
            "title": "Степень двойки",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "Проверить, пройдены ли все тесты",
                "file": "verify1-1.sh",
                "hint": "Пожалуйста, убедитесь, что у вас правильный формат вывода."
              }
            ],
            "solutions": ["is_power_of_two.py"]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    }
  ]
}
