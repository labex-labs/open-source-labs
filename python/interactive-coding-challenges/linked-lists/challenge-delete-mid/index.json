{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "challenge",
  "title": "Deleting Middle Node in Python Linked List",
  "description": "In Python, a linked list is a data structure that consists of a sequence of nodes, where each node contains a value and a reference to the next node. Deleting a node in the middle of a linked list can be a challenging task, especially when we only have access to that node. In this challenge, we will explore how to delete a node in the middle of a linked list, given only access to that node.",
  "meta": {
    "title": "Deleting a Node in the Middle of a Linked List | Python Data Structures",
    "description": "Learn how to delete a node in the middle of a non-circular, singly linked list in Python. Explore the requirements and examples for this coding challenge.",
    "keywords": "Python, Linked List, Data Structures, Coding Challenge, Node Deletion"
  },
  "difficulty": "Beginner",
  "time": 15,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": false,
  "details": {
    "steps": [
      {
        "title": "Delete Mid",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify if all tests are passed",
            "file": "verify1-1.sh",
            "hint": "Please make sure you have the correct output format.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "algorithm/linked_lists",
          "python/build_in_functions",
          "python/classes_objects",
          "python/conditional_statements",
          "python/constructor",
          "python/default_arguments",
          "python/encapsulation",
          "python/function_definition",
          "python/iterators",
          "python/lists",
          "python/polymorphism",
          "python/tuples",
          "python/while_loops"
        ],
        "solutions": ["delete_mid.py"]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md"
    },
    "assets": {
      "host01": [
        {
          "file": "test_delete_mid.py",
          "target": "/tmp",
          "chmod": "ugo+rwx"
        },
        {
          "file": "delete_mid.py",
          "target": "/home/labex/project",
          "chmod": "ugo+rwx"
        }
      ]
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["huduo0812"],
  "license": {
    "name": "Apache-2.0",
    "url": "https://github.com/donnemartin/interactive-coding-challenges/blob/master/LICENSE",
    "repo": "https://github.com/donnemartin/interactive-coding-challenges"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "在 Python 链表中删除中间节点",
      "description": "在 Python 中，链表是一种数据结构，由一系列节点组成，其中每个节点包含一个值和指向下一个节点的引用。删除链表中间的节点可能是一项具有挑战性的任务，尤其是当我们只能访问该节点时。在这个挑战中，我们将探讨如何在只能访问链表中间节点的情况下删除该节点。",
      "meta": {
        "title": "在链表中间删除节点 | Python 数据结构",
        "description": "学习如何在 Python 中删除非循环单链表中间的节点。探索此编码挑战的要求和示例。",
        "keywords": "Python, 链表，数据结构，编码挑战，节点删除"
      },
      "details": {
        "steps": [
          {
            "title": "删除中间节点",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "验证所有测试是否通过",
                "file": "verify1-1.sh",
                "hint": "请确保你有正确的输出格式。"
              }
            ],
            "solutions": ["delete_mid.py"]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Eliminando el nodo del medio en una lista enlazada de Python",
      "description": "En Python, una lista enlazada es una estructura de datos que consta de una secuencia de nodos, donde cada nodo contiene un valor y una referencia al siguiente nodo. Eliminar un nodo en el medio de una lista enlazada puede ser una tarea desafiante, especialmente cuando solo tenemos acceso a ese nodo. En este desafío, exploraremos cómo eliminar un nodo en el medio de una lista enlazada, dado solo acceso a ese nodo.",
      "meta": {
        "title": "Eliminando un nodo en el medio de una lista enlazada | Estructuras de datos de Python",
        "description": "Aprende cómo eliminar un nodo en el medio de una lista enlazada simple no circular en Python. Explora los requisitos y los ejemplos para este desafío de codificación.",
        "keywords": "Python, Lista enlazada, Estructuras de datos, Desafío de codificación, Eliminación de nodos"
      },
      "details": {
        "steps": [
          {
            "title": "Eliminar el nodo del medio",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Verificar si todas las pruebas han pasado",
                "file": "verify1-1.sh",
                "hint": "Asegúrese de tener el formato de salida correcto."
              }
            ],
            "solutions": ["delete_mid.py"]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Suppression d'un nœud du milieu dans une liste chaînée Python",
      "description": "En Python, une liste chaînée est une structure de données composée d'une séquence de nœuds, où chaque nœud contient une valeur et une référence au nœud suivant. Supprimer un nœud au milieu d'une liste chaînée peut être une tâche difficile, surtout lorsque nous n'avons accès qu'à ce nœud. Dans ce défi, nous allons explorer comment supprimer un nœud au milieu d'une liste chaînée, étant donné que nous n'avons accès qu'à ce nœud.",
      "meta": {
        "title": "Suppression d'un nœud au milieu d'une liste chaînée | Structures de données Python",
        "description": "Découvrez comment supprimer un nœud au milieu d'une liste chaînée simple non circulaire en Python. Explorez les exigences et les exemples pour ce défi de codage.",
        "keywords": "Python, Liste chaînée, Structures de données, Défi de codage, Suppression de nœud"
      },
      "details": {
        "steps": [
          {
            "title": "Supprimer le nœud du milieu",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Vérifiez si tous les tests ont réussi",
                "file": "verify1-1.sh",
                "hint": "Veuillez vous assurer d'avoir le bon format de sortie."
              }
            ],
            "solutions": ["delete_mid.py"]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Das Löschen eines mittleren Knotens in einer Python verketteten Liste",
      "description": "In Python ist eine verkettete Liste eine Datenstruktur, die aus einer Sequenz von Knoten besteht, wobei jeder Knoten einen Wert und einen Verweis auf den nächsten Knoten enthält. Das Löschen eines Knotens in der Mitte einer verketteten Liste kann eine herausfordernde Aufgabe sein, insbesondere wenn wir nur auf diesen Knoten zugreifen können. In dieser Herausforderung werden wir untersuchen, wie man einen Knoten in der Mitte einer verketteten Liste löscht, wenn man nur auf diesen Knoten zugreifen kann.",
      "meta": {
        "title": "Das Löschen eines Knotens in der Mitte einer verketteten Liste | Python Datenstrukturen",
        "description": "Lernen Sie, wie man einen Knoten in der Mitte einer nicht-zirkulären, einfach verketteten Liste in Python löscht. Entdecken Sie die Anforderungen und Beispiele für diese Codierungschallenge.",
        "keywords": "Python, verkettete Liste, Datenstrukturen, Codierungschallenge, Knotenlöschung"
      },
      "details": {
        "steps": [
          {
            "title": "Entferne Mitte",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Verifiziere, ob alle Tests bestanden sind",
                "file": "verify1-1.sh",
                "hint": "Stellen Sie bitte sicher, dass Sie das richtige Ausgabeformat haben."
              }
            ],
            "solutions": ["delete_mid.py"]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "Python の連結リストの途中のノードを削除する",
      "description": "Python において、連結リストは、各ノードが値と次のノードへの参照を含むノードのシーケンスで構成されるデータ構造です。連結リストの途中のノードを削除することは、そのノードにのみアクセスできる場合、特に難しいタスクになることがあります。このチャレンジでは、そのノードにのみアクセスできる状況下で、連結リストの途中のノードをどのように削除するかを検討します。",
      "meta": {
        "title": "連結リストの途中のノードを削除する | Python のデータ構造",
        "description": "Python において非循環の単方向連結リストの途中のノードをどのように削除するか学びましょう。このコーディングチャレンジの要件と例を探りましょう。",
        "keywords": "Python, 連結リスト，データ構造，コーディングチャレンジ，ノード削除"
      },
      "details": {
        "steps": [
          {
            "title": "途中のノードを削除する",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "すべてのテストが通過したか確認する",
                "file": "verify1-1.sh",
                "hint": "出力形式が正しいことを確認してください。"
              }
            ],
            "solutions": ["delete_mid.py"]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Удаление узла в середине связанного списка на Python",
      "description": "В Python связанный список - это структура данных, состоящая из последовательности узлов, где каждый узел содержит значение и ссылку на следующий узел. Удаление узла в середине связанного списка может быть сложной задачей, особенно если у нас есть доступ только к этому узлу. В этом испытании мы исследуем, как удалить узел в середине связанного списка, имея доступ только к этому узлу.",
      "meta": {
        "title": "Удаление узла в середине связанного списка | Структуры данных на Python",
        "description": "Изучите, как удалить узел в середине нециклического односвязного списка на Python. Исследуйте требования и примеры для этого кодирования испытания.",
        "keywords": "Python, Связанный список, Структуры данных, Кодирование испытания, Удаление узла"
      },
      "details": {
        "steps": [
          {
            "title": "Удалить середину",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "Проверить, пройдены ли все тесты",
                "file": "verify1-1.sh",
                "hint": "Пожалуйста, убедитесь, что у вас правильный формат вывода."
              }
            ],
            "solutions": ["delete_mid.py"]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    }
  ]
}
