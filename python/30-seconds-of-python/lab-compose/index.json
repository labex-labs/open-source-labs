{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Function Composition with Python",
  "description": "Function composition is a technique used in functional programming to combine two or more functions to form a new function. In Python, we can use the functools.reduce() function to perform right-to-left function composition.",
  "meta": {
    "title": "Mastering Function Composition in Python",
    "description": "Discover the power of function composition in Python and learn how to create reusable, modular code.",
    "keywords": "modular design, code reusability, python, functional programming, function composition"
  },
  "difficulty": "Beginner",
  "time": 15,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Compose Functions",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify Python Compose Test Script",
            "file": "verify1-1.sh",
            "hint": "Please make sure you have completed the required actions.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": []
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    },
    "assets": {
      "host01": [
        {
          "file": "test_compose.py",
          "target": "/tmp",
          "chmod": "ugo+rwx"
        },
        {
          "file": "compose.py",
          "target": "/home/labex/project",
          "chmod": "ugo+rwx"
        }
      ]
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["huduo0812", "jiaosenvip"],
  "license": {
    "name": "CC-BY-4.0",
    "url": "https://github.com/30-seconds/30-seconds-of-python/blob/master/LICENSE",
    "repo": "https://github.com/30-seconds/30-seconds-of-python"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "使用 Python 进行函数组合",
      "description": "函数组合是函数式编程中用于将两个或更多函数组合以形成新函数的一种技术。在 Python 中，我们可以使用 functools.reduce() 函数来执行从右到左的函数组合。",
      "meta": {
        "title": "掌握 Python 中的函数组合",
        "description": "探索 Python 中函数组合的强大功能，并学习如何创建可复用的模块化代码。",
        "keywords": "模块化设计，代码可复用性，Python, 函数式编程，函数组合"
      },
      "details": {
        "steps": [
          {
            "title": "组合函数",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "验证 Python 组合测试脚本",
                "file": "verify1-1.sh",
                "hint": "请确保你已完成所需操作。"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Composición de funciones con Python",
      "description": "La composición de funciones es una técnica utilizada en la programación funcional para combinar dos o más funciones para formar una nueva función. En Python, podemos utilizar la función functools.reduce() para realizar la composición de funciones de derecha a izquierda.",
      "meta": {
        "title": "Dominando la composición de funciones en Python",
        "description": "Descubre el poder de la composición de funciones en Python y aprende cómo crear código reutilizable y modular.",
        "keywords": "diseño modular, reutilización de código, python, programación funcional, composición de funciones"
      },
      "details": {
        "steps": [
          {
            "title": "Componer funciones",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Verificar el script de prueba de composición en Python",
                "file": "verify1-1.sh",
                "hint": "Asegúrese de haber completado las acciones requeridas."
              }
            ]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Composition de fonctions avec Python",
      "description": "La composition de fonctions est une technique utilisée en programmation fonctionnelle pour combiner deux ou plusieurs fonctions pour former une nouvelle fonction. En Python, nous pouvons utiliser la fonction functools.reduce() pour effectuer une composition de fonctions de droite à gauche.",
      "meta": {
        "title": "Maîtriser la composition de fonctions en Python",
        "description": "Découvrez le pouvoir de la composition de fonctions en Python et apprenez à créer du code réutilisable et modulaire.",
        "keywords": "conception modulaire, réutilisabilité du code, python, programmation fonctionnelle, composition de fonctions"
      },
      "details": {
        "steps": [
          {
            "title": "Composer des fonctions",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Vérifier le script de test de composition en Python",
                "file": "verify1-1.sh",
                "hint": "Veuillez vous assurer d'avoir effectué les actions requises."
              }
            ]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Funktionskomposition mit Python",
      "description": "Die Funktionskomposition ist eine Technik, die in der funktionalen Programmierung verwendet wird, um zwei oder mehr Funktionen zu kombinieren und eine neue Funktion zu bilden. In Python können wir die functools.reduce()-Funktion verwenden, um eine rechts-links-Funktionskomposition durchzuführen.",
      "meta": {
        "title": "Das Meistern der Funktionskomposition in Python",
        "description": "Entdecken Sie die Macht der Funktionskomposition in Python und lernen Sie, wie Sie wiederverwendbares, modularisiertes Code erstellen.",
        "keywords": "modulares Design, Code-Wiederverwendbarkeit, Python, funktionale Programmierung, Funktionskomposition"
      },
      "details": {
        "steps": [
          {
            "title": "Funktionen zusammensetzen",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Python-Compose-Testskript überprüfen",
                "file": "verify1-1.sh",
                "hint": "Stellen Sie sicher, dass Sie die erforderlichen Aktionen abgeschlossen haben."
              }
            ]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "Python を使った関数合成",
      "description": "関数合成は、関数型プログラミングで使用される技術であり、2 つ以上の関数を結合して新しい関数を形成します。Python では、functools.reduce() 関数を使用して、右から左への関数合成を行うことができます。",
      "meta": {
        "title": "Python における関数合成のマスター",
        "description": "Python における関数合成の力を発見し、再利用可能なモジューラーなコードを作成する方法を学びましょう。",
        "keywords": "モジューラーデザイン，コードの再利用性，python, 関数型プログラミング，関数合成"
      },
      "details": {
        "steps": [
          {
            "title": "関数を合成する",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "Python の合成テストスクリプトを確認する",
                "file": "verify1-1.sh",
                "hint": "必要な操作を完了していることを確認してください。"
              }
            ]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Композиция функций в Python",
      "description": "Композиция функций - это техника, используемая в функциональном программировании для объединения двух или более функций в новую функцию. В Python мы можем использовать функцию functools.reduce() для выполнения правого-налево композиции функций.",
      "meta": {
        "title": "Мастерство в композиции функций в Python",
        "description": "Откройте силу композиции функций в Python и узнайте, как создавать повторно используемый, модульный код.",
        "keywords": "модульный дизайн, повторяемость кода, python, функциональное программирование, композиция функций"
      },
      "details": {
        "steps": [
          {
            "title": "Композиция функций",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "Проверить скрипт теста по композиции в Python",
                "file": "verify1-1.sh",
                "hint": "Пожалуйста, убедитесь, что вы выполнили требуемые действия."
              }
            ]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    },
    {
      "lang": "ko",
      "title": "파이썬을 이용한 함수 합성",
      "description": "함수 합성은 두 개 이상의 함수를 결합하여 새로운 함수를 형성하는 함수형 프로그래밍 기법입니다. 파이썬에서는 functools.reduce() 함수를 사용하여 오른쪽에서 왼쪽으로 함수 합성을 수행할 수 있습니다.",
      "meta": {
        "title": "파이썬 함수 합성 마스터하기",
        "description": "파이썬에서 함수 합성의 강력함을 발견하고 재사용 가능하고 모듈식 코드를 만드는 방법을 알아보세요.",
        "keywords": "모듈형 설계, 코드 재사용성, 파이썬, 함수형 프로그래밍, 함수 합성"
      },
      "details": {
        "steps": [
          {
            "title": "함수 합성 (Compose Functions)",
            "text": "ko/step1.md",
            "verify": [
              {
                "name": "파이썬 합성 테스트 스크립트 검증",
                "file": "verify1-1.sh",
                "hint": "필수 작업을 완료했는지 확인해주세요."
              }
            ]
          }
        ],
        "intro": {
          "text": "ko/intro.md",
          "title": "소개"
        },
        "finish": {
          "text": "ko/finish.md",
          "title": "요약"
        }
      }
    },
    {
      "lang": "pt",
      "title": "Composição de Funções com Python",
      "description": "A composição de funções é uma técnica usada em programação funcional para combinar duas ou mais funções e formar uma nova função. Em Python, podemos usar a função functools.reduce() para realizar a composição de funções da direita para a esquerda.",
      "meta": {
        "title": "Dominando a Composição de Funções em Python: Guia Completo",
        "description": "Descubra o poder da composição de funções em Python e aprenda a criar código reutilizável e modular. Explore exemplos práticos e técnicas avançadas para otimizar seu código.",
        "keywords": "design modular, reutilização de código, python, programação funcional, composição de funções, composição de funções python, functools.reduce, programação python"
      },
      "details": {
        "steps": [
          {
            "title": "Compor Funções",
            "text": "pt/step1.md",
            "verify": [
              {
                "name": "Verificar Script de Teste de Composição em Python",
                "file": "verify1-1.sh",
                "hint": "Por favor, certifique-se de ter concluído as ações necessárias."
              }
            ]
          }
        ],
        "intro": {
          "text": "pt/intro.md",
          "title": "Introdução"
        },
        "finish": {
          "text": "pt/finish.md",
          "title": "Resumo"
        }
      }
    }
  ]
}
