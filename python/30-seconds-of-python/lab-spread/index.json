{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Flatten Nested Lists with Python",
  "description": "In Python, a list can contain other lists as elements. Sometimes, we need to flatten a list, which means to convert a nested list into a single list that contains all the elements of the original list. One way to do this is by using the spread operator. In this challenge, you will be asked to implement a function that flattens a list using the spread operator.",
  "meta": {
    "title": "Python List Flattening | Spread Operator Tutorial",
    "description": "Learn how to flatten nested lists in Python using the spread operator. Discover a simple and efficient way to create a single list from a list of lists.",
    "keywords": "Python, List, Flattening, Spread Operator, Nested List, Tutorial"
  },
  "difficulty": "Beginner",
  "time": 15,
  "hidden": true,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Spread List",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify Student's Python Test Script Execution",
            "file": "verify1-1.sh",
            "hint": "Please make sure you have completed the required actions.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "python/build_in_functions",
          "python/comments",
          "python/conditional_statements",
          "python/data_collections",
          "python/for_loops",
          "python/function_definition",
          "python/lists",
          "python/tuples",
          "python/variables_data_types"
        ]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    },
    "assets": {
      "host01": [
        {
          "file": "test_spread.py",
          "target": "/tmp",
          "chmod": "ugo+rwx"
        },
        {
          "file": "spread.py",
          "target": "/home/labex/project",
          "chmod": "ugo+rwx"
        }
      ]
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["huduo0812", "jiaosenvip"],
  "license": {
    "name": "CC-BY-4.0",
    "url": "https://github.com/30-seconds/30-seconds-of-python/blob/master/LICENSE",
    "repo": "https://github.com/30-seconds/30-seconds-of-python"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "使用 Python 展平嵌套列表",
      "description": "在 Python 中，列表可以包含其他列表作为元素。有时，我们需要展平一个列表，即将嵌套列表转换为包含原始列表所有元素的单个列表。一种方法是使用展开运算符。在这个挑战中，你将被要求实现一个使用展开运算符展平列表的函数。",
      "meta": {
        "title": "Python 列表展平 | 展开运算符教程",
        "description": "学习如何使用展开运算符在 Python 中展平嵌套列表。发现一种从列表的列表创建单个列表的简单有效方法。",
        "keywords": "Python, 列表, 展平, 展开运算符, 嵌套列表, 教程"
      },
      "details": {
        "steps": [
          {
            "title": "展开列表",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "验证学生的 Python 测试脚本执行情况",
                "file": "verify1-1.sh",
                "hint": "请确保你已完成所需操作。"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    }
  ]
}
