{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Flatten Nested Lists with Python",
  "description": "In Python, a list can contain other lists as elements. Sometimes, we need to flatten a list, which means to convert a nested list into a single list that contains all the elements of the original list. One way to do this is by using the spread operator. In this challenge, you will be asked to implement a function that flattens a list using the spread operator.",
  "meta": {
    "title": "Python List Flattening | Spread Operator Tutorial",
    "description": "Learn how to flatten nested lists in Python using the spread operator. Discover a simple and efficient way to create a single list from a list of lists.",
    "keywords": "Python, List, Flattening, Spread Operator, Nested List, Tutorial"
  },
  "difficulty": "Beginner",
  "time": 15,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Spread List",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify Student's Python Test Script Execution",
            "file": "verify1-1.sh",
            "hint": "Please make sure you have completed the required actions.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": []
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    },
    "assets": {
      "host01": [
        {
          "file": "test_spread.py",
          "target": "/tmp",
          "chmod": "ugo+rwx"
        },
        {
          "file": "spread.py",
          "target": "/home/labex/project",
          "chmod": "ugo+rwx"
        }
      ]
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["huduo0812", "jiaosenvip"],
  "license": {
    "name": "CC-BY-4.0",
    "url": "https://github.com/30-seconds/30-seconds-of-python/blob/master/LICENSE",
    "repo": "https://github.com/30-seconds/30-seconds-of-python"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "使用 Python 展平嵌套列表",
      "description": "在 Python 中，列表可以包含其他列表作为元素。有时，我们需要展平一个列表，即将嵌套列表转换为包含原始列表所有元素的单个列表。一种方法是使用展开运算符。在这个挑战中，你将被要求实现一个使用展开运算符展平列表的函数。",
      "meta": {
        "title": "Python 列表展平 | 展开运算符教程",
        "description": "学习如何使用展开运算符在 Python 中展平嵌套列表。发现一种从列表的列表创建单个列表的简单有效方法。",
        "keywords": "Python, 列表，展平，展开运算符，嵌套列表，教程"
      },
      "details": {
        "steps": [
          {
            "title": "展开列表",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "验证学生的 Python 测试脚本执行情况",
                "file": "verify1-1.sh",
                "hint": "请确保你已完成所需操作。"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Aplanar listas anidadas con Python",
      "description": "En Python, una lista puede contener otras listas como elementos. A veces, necesitamos aplanar una lista, lo que significa convertir una lista anidada en una sola lista que contiene todos los elementos de la lista original. Una forma de hacer esto es usando el operador de expansión. En este desafío, se te pedirá implementar una función que aplane una lista usando el operador de expansión.",
      "meta": {
        "title": "Aplanado de listas en Python | Tutorial del operador de expansión",
        "description": "Aprende cómo aplanar listas anidadas en Python usando el operador de expansión. Descubre una forma simple y eficiente de crear una sola lista a partir de una lista de listas.",
        "keywords": "Python, Lista, Aplanado, Operador de expansión, Lista anidada, Tutorial"
      },
      "details": {
        "steps": [
          {
            "title": "Aplanar una lista",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Verificar la ejecución del script de prueba de Python del estudiante",
                "file": "verify1-1.sh",
                "hint": "Asegúrese de haber completado las acciones requeridas."
              }
            ]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Aplatir les listes imbriquées avec Python",
      "description": "En Python, une liste peut contenir d'autres listes en tant qu'éléments. Parfois, nous devons aplatir une liste, ce qui signifie convertir une liste imbriquée en une seule liste qui contient tous les éléments de la liste d'origine. Une manière de faire cela est d'utiliser l'opérateur de diffusion. Dans ce défi, vous devrez implémenter une fonction qui aplatit une liste à l'aide de l'opérateur de diffusion.",
      "meta": {
        "title": "Aplatissement de listes Python | Tutoriel sur l'opérateur de diffusion",
        "description": "Découvrez comment aplatir les listes imbriquées en Python à l'aide de l'opérateur de diffusion. Découvrez une manière simple et efficace de créer une seule liste à partir d'une liste de listes.",
        "keywords": "Python, Liste, Aplatissement, Opérateur de diffusion, Liste imbriquée, Tutoriel"
      },
      "details": {
        "steps": [
          {
            "title": "Liste de diffusion",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Vérifier l'exécution du script de test Python de l'étudiant",
                "file": "verify1-1.sh",
                "hint": "Veuillez vous assurer d'avoir effectué les actions requises."
              }
            ]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Python Listen aufklappen",
      "description": "In Python kann eine Liste andere Listen als Elemente enthalten. Manchmal müssen wir eine Liste aufklappen, was bedeutet, eine geschachtelte Liste in eine einfache Liste umzuwandeln, die alle Elemente der ursprünglichen Liste enthält. Eine Möglichkeit dazu ist die Verwendung des Spread-Operators. In dieser Herausforderung werden Sie aufgefordert, eine Funktion zu implementieren, die eine Liste mit dem Spread-Operator aufklappt.",
      "meta": {
        "title": "Python-Listenaufklappung | Spread-Operator-Tutorial",
        "description": "Lernen Sie, wie Sie in Python geschachtelte Listen mit dem Spread-Operator aufklappen. Entdecken Sie eine einfache und effiziente Methode, um aus einer Liste von Listen eine einzelne Liste zu erstellen.",
        "keywords": "Python, Liste, Aufklappen, Spread-Operator, Geschachtelte Liste, Tutorial"
      },
      "details": {
        "steps": [
          {
            "title": "Liste auffächern",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Verifizieren der Ausführung des Python-Testskripts des Studenten",
                "file": "verify1-1.sh",
                "hint": "Bitte stellen Sie sicher, dass Sie die erforderlichen Aktionen ausgeführt haben."
              }
            ]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "Python を使ったネストされたリストのフラット化",
      "description": "Python では、リストには他のリストを要素として含めることができます。時々、リストをフラット化する必要があります。これは、ネストされたリストを元のリストのすべての要素を含む単一のリストに変換することを意味します。これを行う 1 つの方法は、スプレッド演算子を使用することです。このチャレンジでは、スプレッド演算子を使用してリストをフラット化する関数を実装するよう求められます。",
      "meta": {
        "title": "Python リストのフラット化 | スプレッド演算子チュートリアル",
        "description": "Python でスプレッド演算子を使ってネストされたリストをフラット化する方法を学びましょう。リストのリストから単一のリストを作成する簡単で効率的な方法を見つけましょう。",
        "keywords": "Python, リスト，フラット化，スプレッド演算子，ネストされたリスト，チュートリアル"
      },
      "details": {
        "steps": [
          {
            "title": "スプレッドリスト",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "学生の Python テストスクリプトの実行を確認する",
                "file": "verify1-1.sh",
                "hint": "必要な操作を完了していることを確認してください。"
              }
            ]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Разворачивание вложенных списков в Python",
      "description": "В Python список может содержать другие списки в качестве элементов. Иногда нам нужно развернуть список, что означает преобразование вложенного списка в единый список, содержащий все элементы исходного списка. Одним из способов сделать это является использование оператора расширения. В этом испытании вам будет предложено реализовать функцию, которая разворачивает список с использованием оператора расширения.",
      "meta": {
        "title": "Разворачивание списков в Python | Руководство по оператору расширения",
        "description": "Изучите, как разворачивать вложенные списки в Python с использованием оператора расширения. Откройте простой и эффективный способ создать единый список из списка списков.",
        "keywords": "Python, Список, Разворачивание, Оператор расширения, Вложенный список, Руководство"
      },
      "details": {
        "steps": [
          {
            "title": "Развернуть список",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "Проверить выполнение тестового скрипта на Python студента",
                "file": "verify1-1.sh",
                "hint": "Пожалуйста, убедитесь, что вы выполнили требуемые действия."
              }
            ]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    },
    {
      "lang": "ko",
      "title": "Python 으로 중첩 리스트 평탄화하기",
      "description": "Python 에서 리스트는 다른 리스트를 요소로 포함할 수 있습니다. 때로는 중첩 리스트를 평탄화해야 하는데, 이는 중첩 리스트를 원래 리스트의 모든 요소를 포함하는 단일 리스트로 변환하는 것을 의미합니다. 이를 수행하는 한 가지 방법은 spread operator (확산 연산자) 를 사용하는 것입니다. 이 챌린지에서는 spread operator 를 사용하여 리스트를 평탄화하는 함수를 구현하라는 요청을 받게 됩니다.",
      "meta": {
        "title": "Python 리스트 평탄화 | Spread Operator 튜토리얼 - 초보자를 위한 가이드",
        "description": "spread operator 를 사용하여 Python 에서 중첩 리스트를 평탄화하는 방법을 알아보세요. 리스트의 리스트에서 단일 리스트를 생성하는 간단하고 효율적인 방법을 발견하세요.",
        "keywords": "Python, 리스트, 평탄화, Spread Operator, 중첩 리스트, 튜토리얼, 파이썬 리스트, 리스트 펼치기"
      },
      "details": {
        "steps": [
          {
            "title": "리스트 펼치기 (Spread List)",
            "text": "ko/step1.md",
            "verify": [
              {
                "name": "학생의 Python 테스트 스크립트 실행 확인",
                "file": "verify1-1.sh",
                "hint": "필수 작업을 완료했는지 확인하십시오."
              }
            ]
          }
        ],
        "intro": {
          "text": "ko/intro.md",
          "title": "소개"
        },
        "finish": {
          "text": "ko/finish.md",
          "title": "요약"
        }
      }
    },
    {
      "lang": "pt",
      "title": "Achatando Listas Aninhadas com Python",
      "description": "Em Python, uma lista pode conter outras listas como elementos. Às vezes, precisamos achatar uma lista, o que significa converter uma lista aninhada em uma única lista que contém todos os elementos da lista original. Uma maneira de fazer isso é usando o operador spread. Neste desafio, você será solicitado a implementar uma função que achata uma lista usando o operador spread.",
      "meta": {
        "title": "Achatando Listas Python | Tutorial Operador Spread",
        "description": "Aprenda como achatar listas aninhadas em Python usando o operador spread. Descubra uma maneira simples e eficiente de criar uma única lista a partir de uma lista de listas.",
        "keywords": "Python, Lista, Achatamento, Operador Spread, Lista Aninhada, Tutorial, achatar lista python, como achatar lista python"
      },
      "details": {
        "steps": [
          {
            "title": "Spread List (Lista Spread)",
            "text": "pt/step1.md",
            "verify": [
              {
                "name": "Verificar Execução do Script de Teste Python do Aluno",
                "file": "verify1-1.sh",
                "hint": "Por favor, certifique-se de ter concluído as ações necessárias."
              }
            ]
          }
        ],
        "intro": {
          "text": "pt/intro.md",
          "title": "Introdução"
        },
        "finish": {
          "text": "pt/finish.md",
          "title": "Resumo"
        }
      }
    }
  ]
}
