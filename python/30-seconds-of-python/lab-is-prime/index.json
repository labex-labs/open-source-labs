{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Efficient Prime Number Detection",
  "description": "In mathematics, a prime number is a natural number greater than 1 that is not a product of two smaller natural numbers. For example, 5 is prime because the only ways of writing it as a product, 1 × 5 or 5 × 1, involve 5 itself. However, 4 is not prime because it is a product (2 × 2) in which both numbers are smaller than 4. In this challenge, you need to write a Python function to check if a given number is prime or not.",
  "meta": {
    "title": "Efficient Prime Number Detection in Python",
    "description": "Learn how to write a Python function to check if a given number is prime or not. Discover the mathematical concepts behind prime numbers.",
    "keywords": "python, mathematics, prime number, algorithm, programming"
  },
  "difficulty": "Beginner",
  "time": 15,
  "hidden": true,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Number is Prime",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify Python Script Execution",
            "file": "verify1-1.sh",
            "hint": "Please make sure you have completed the required actions.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "python/booleans",
          "python/build_in_functions",
          "python/comments",
          "python/conditional_statements",
          "python/for_loops",
          "python/function_definition",
          "python/importing_modules",
          "python/math_random",
          "python/numeric_types",
          "python/standard_libraries",
          "python/tuples",
          "python/type_conversion",
          "python/using_packages",
          "python/variables_data_types"
        ]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    },
    "assets": {
      "host01": [
        {
          "file": "test_is_prime.py",
          "target": "/tmp",
          "chmod": "ugo+rwx"
        },
        {
          "file": "is_prime.py",
          "target": "/home/labex/project",
          "chmod": "ugo+rwx"
        }
      ]
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["huduo0812", "jiaosenvip"],
  "license": {
    "name": "CC-BY-4.0",
    "url": "https://github.com/30-seconds/30-seconds-of-python/blob/master/LICENSE",
    "repo": "https://github.com/30-seconds/30-seconds-of-python"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "高效质数检测",
      "description": "在数学中，质数是大于1的自然数，且不是两个较小自然数的乘积。例如，5是质数，因为将它写成乘积的唯一方式1×5或5×1都涉及到5本身。然而，4不是质数，因为它是两个都比4小的数的乘积（2×2）。在这个挑战中，你需要编写一个Python函数来检查给定的数是否为质数。",
      "meta": {
        "title": "Python中的高效质数检测",
        "description": "学习如何编写一个Python函数来检查给定的数是否为质数。探索质数背后的数学概念。",
        "keywords": "Python, 数学, 质数, 算法, 编程"
      },
      "details": {
        "steps": [
          {
            "title": "数字是否为质数",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "验证Python脚本执行情况",
                "file": "verify1-1.sh",
                "hint": "请确保你已完成所需操作。"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    }
  ]
}
