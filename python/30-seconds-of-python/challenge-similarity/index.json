{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "challenge",
  "title": "Comparing Python Lists with Comprehension",
  "description": "In this challenge, you will write a function that uses list comprehension to find the common elements between two lists.",
  "meta": {
    "title": "Python List Similarity | List Comprehension Tutorial",
    "description": "Learn how to compare two lists and find the common elements using Python's powerful list comprehension feature.",
    "keywords": "Python, List Similarity, List Comprehension, Programming Tutorial, Coding"
  },
  "difficulty": "Beginner",
  "time": 15,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": false,
  "details": {
    "steps": [
      {
        "title": "List Similarity",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify Python Similarity Test Script",
            "file": "verify1-1.sh",
            "hint": "Please make sure you have completed the required actions.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [],
        "solutions": ["similarity.py"]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md"
    },
    "assets": {
      "host01": [
        {
          "file": "test_similarity.py",
          "target": "/tmp",
          "chmod": "ugo+rwx"
        },
        {
          "file": "similarity.py",
          "target": "/home/labex/project",
          "chmod": "ugo+rwx"
        }
      ]
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["huduo0812", "jiaosenvip"],
  "license": {
    "name": "CC-BY-4.0",
    "url": "https://github.com/30-seconds/30-seconds-of-python/blob/master/LICENSE",
    "repo": "https://github.com/30-seconds/30-seconds-of-python"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "使用列表推导式比较 Python 列表",
      "description": "在这个挑战中，你将编写一个函数，使用列表推导式找出两个列表之间的共同元素。",
      "meta": {
        "title": "Python 列表相似度 | 列表推导式教程",
        "description": "学习如何使用 Python 强大的列表推导式功能比较两个列表并找出共同元素。",
        "keywords": "Python, 列表相似度，列表推导式，编程教程，编码"
      },
      "details": {
        "steps": [
          {
            "title": "列表相似度",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "验证 Python 相似度测试脚本",
                "file": "verify1-1.sh",
                "hint": "请确保你已完成所需操作。"
              }
            ],
            "solutions": ["similarity.py"]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Comparando listas de Python con comprensión",
      "description": "En este desafío, escribirás una función que use la comprensión de listas para encontrar los elementos comunes entre dos listas.",
      "meta": {
        "title": "Similitud de listas de Python | Tutorial de comprensión de listas",
        "description": "Aprende cómo comparar dos listas y encontrar los elementos comunes usando la potente característica de comprensión de listas de Python.",
        "keywords": "Python, Similitud de listas, Comprensión de listas, Tutorial de programación, Codificación"
      },
      "details": {
        "steps": [
          {
            "title": "Similitud de listas",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Verificar el script de prueba de similitud de Python",
                "file": "verify1-1.sh",
                "hint": "Asegúrese de haber completado las acciones requeridas."
              }
            ],
            "solutions": ["similarity.py"]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Comparer des listes Python avec la compréhension",
      "description": "Dans ce défi, vous écrirez une fonction qui utilise la compréhension de liste pour trouver les éléments communs entre deux listes.",
      "meta": {
        "title": "Similarité de listes Python | Tutoriel sur la compréhension de listes",
        "description": "Découvrez comment comparer deux listes et trouver les éléments communs en utilisant la puissante fonction de compréhension de listes de Python.",
        "keywords": "Python, Similarité de listes, Compréhension de listes, Tutoriel de programmation, Codage"
      },
      "details": {
        "steps": [
          {
            "title": "Similarité de listes",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Vérifier le script de test de similarité Python",
                "file": "verify1-1.sh",
                "hint": "Veuillez vous assurer d'avoir effectué les actions requises."
              }
            ],
            "solutions": ["similarity.py"]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Das Vergleichen von Python-Listen mit List Comprehension",
      "description": "In dieser Herausforderung werden Sie eine Funktion schreiben, die List Comprehension verwendet, um die gemeinsamen Elemente zwischen zwei Listen zu finden.",
      "meta": {
        "title": "Python-Listenähnlichkeit | List Comprehension-Tutorial",
        "description": "Lernen Sie, wie Sie zwei Listen vergleichen und die gemeinsamen Elemente mithilfe der leistungsstarken List Comprehension-Funktion von Python finden.",
        "keywords": "Python, Listenähnlichkeit, List Comprehension, Programmierungstutorial, Coding"
      },
      "details": {
        "steps": [
          {
            "title": "Listenähnlichkeit",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Python-Ähnlichkeitstestskript überprüfen",
                "file": "verify1-1.sh",
                "hint": "Stellen Sie bitte sicher, dass Sie die erforderlichen Aktionen abgeschlossen haben."
              }
            ],
            "solutions": ["similarity.py"]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "コンプリヘンションを使った Python のリスト比較",
      "description": "このチャレンジでは、2 つのリスト間の共通要素を見つけるためにリスト内包表記を使う関数を作成します。",
      "meta": {
        "title": "Python のリスト類似性 | リスト内包表記チュートリアル",
        "description": "Python の強力なリスト内包表記機能を使って、2 つのリストを比較して共通要素を見つける方法を学びましょう。",
        "keywords": "Python, リスト類似性，リスト内包表記，プログラミングチュートリアル，コーディング"
      },
      "details": {
        "steps": [
          {
            "title": "リストの類似性",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "Python の類似性テストスクリプトを確認する",
                "file": "verify1-1.sh",
                "hint": "必要な操作を完了していることを確認してください。"
              }
            ],
            "solutions": ["similarity.py"]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Сравнение списков Python с использованием списочного выражения",
      "description": "В этом испытании вы напишете функцию, которая использует списочное выражение для нахождения общих элементов между двумя списками.",
      "meta": {
        "title": "Схожесть списков Python | Руководство по списочному выражению",
        "description": "Изучите, как сравнивать два списка и находить общие элементы с использованием мощной функции списочного выражения Python.",
        "keywords": "Python, Схожесть списков, Списочное выражение, Руководство по программированию, Кодирование"
      },
      "details": {
        "steps": [
          {
            "title": "Схожесть списков",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "Проверить скрипт теста на схожесть в Python",
                "file": "verify1-1.sh",
                "hint": "Пожалуйста, убедитесь, что вы выполнили требуемые действия."
              }
            ],
            "solutions": ["similarity.py"]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    }
  ]
}
