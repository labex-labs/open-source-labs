{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "challenge",
  "title": "Function Composition in Python",
  "description": "In this challenge, you will implement a function that performs right-to-left function composition using the `functools.reduce()` function in Python.",
  "meta": {
    "title": "Function Composition in Python | Functional Programming",
    "description": "Learn how to use function composition in Python to combine multiple functions into a new function. Explore the power of functional programming techniques.",
    "keywords": "function composition, Python, functional programming, lambda, functools.reduce"
  },
  "difficulty": "Beginner",
  "time": 15,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": false,
  "details": {
    "steps": [
      {
        "title": "Compose Functions",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify Python 3 Compose Test Execution",
            "file": "verify1-1.sh",
            "hint": "Please make sure you have completed the required actions.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [],
        "solutions": ["compose.py"]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md"
    },
    "assets": {
      "host01": [
        {
          "file": "test_compose.py",
          "target": "/tmp",
          "chmod": "ugo+rwx"
        },
        {
          "file": "compose.py",
          "target": "/home/labex/project",
          "chmod": "ugo+rwx"
        }
      ]
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["huduo0812", "jiaosenvip"],
  "license": {
    "name": "CC-BY-4.0",
    "url": "https://github.com/30-seconds/30-seconds-of-python/blob/master/LICENSE",
    "repo": "https://github.com/30-seconds/30-seconds-of-python"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "Python 中的函数组合",
      "description": "在这个挑战中，你将使用 Python 中的 `functools.reduce()` 函数实现一个执行从右到左函数组合的函数。",
      "meta": {
        "title": "Python 中的函数组合 | 函数式编程",
        "description": "学习如何在 Python 中使用函数组合将多个函数组合成一个新函数。探索函数式编程技术的强大之处。",
        "keywords": "函数组合，Python, 函数式编程，lambda, functools.reduce"
      },
      "details": {
        "steps": [
          {
            "title": "组合函数",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "验证 Python 3 组合测试执行情况",
                "file": "verify1-1.sh",
                "hint": "请确保你已完成所需操作。"
              }
            ],
            "solutions": ["compose.py"]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Composición de funciones en Python",
      "description": "En este desafío, implementarás una función que realiza la composición de funciones de derecha a izquierda utilizando la función `functools.reduce()` en Python.",
      "meta": {
        "title": "Composición de funciones en Python | Programación funcional",
        "description": "Aprende cómo utilizar la composición de funciones en Python para combinar múltiples funciones en una nueva función. Explora el poder de las técnicas de programación funcional.",
        "keywords": "composición de funciones, Python, programación funcional, lambda, functools.reduce"
      },
      "details": {
        "steps": [
          {
            "title": "Componer funciones",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Verificar la ejecución de la prueba de composición en Python 3",
                "file": "verify1-1.sh",
                "hint": "Asegúrese de haber completado las acciones requeridas."
              }
            ],
            "solutions": ["compose.py"]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Composition de fonctions en Python",
      "description": "Dans ce défi, vous implémenterez une fonction qui effectue une composition de fonctions de droite à gauche à l'aide de la fonction `functools.reduce()` en Python.",
      "meta": {
        "title": "Composition de fonctions en Python | Programmation fonctionnelle",
        "description": "Découvrez comment utiliser la composition de fonctions en Python pour combiner plusieurs fonctions en une nouvelle fonction. Explorez le pouvoir des techniques de programmation fonctionnelle.",
        "keywords": "composition de fonctions, Python, programmation fonctionnelle, lambda, functools.reduce"
      },
      "details": {
        "steps": [
          {
            "title": "Composer des fonctions",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Vérifier l'exécution des tests de composition en Python 3",
                "file": "verify1-1.sh",
                "hint": "Veuillez vous assurer d'avoir effectué les actions requises."
              }
            ],
            "solutions": ["compose.py"]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Funktionskomposition in Python",
      "description": "In dieser Herausforderung implementieren Sie eine Funktion, die eine rechts-links-Funktionskomposition mit der `functools.reduce()`-Funktion in Python durchführt.",
      "meta": {
        "title": "Funktionskomposition in Python | Funktionales Programmieren",
        "description": "Lernen Sie, wie Sie in Python Funktionskomposition verwenden, um mehrere Funktionen zu einer neuen Funktion zu kombinieren. Entdecken Sie die Macht von funktionalen Programmiertechniken.",
        "keywords": "Funktionskomposition, Python, funktionales Programmieren, lambda, functools.reduce"
      },
      "details": {
        "steps": [
          {
            "title": "Funktionen zusammensetzen",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Verifizieren der Ausführung des Python 3-Compose-Tests",
                "file": "verify1-1.sh",
                "hint": "Bitte stellen Sie sicher, dass Sie die erforderlichen Aktionen abgeschlossen haben."
              }
            ],
            "solutions": ["compose.py"]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "Python における関数合成",
      "description": "このチャレンジでは、Python の `functools.reduce()` 関数を使用して右から左への関数合成を行う関数を実装します。",
      "meta": {
        "title": "Python における関数合成 | 関数型プログラミング",
        "description": "Python で関数合成を使って複数の関数を新しい関数に結合する方法を学びましょう。関数型プログラミング技術の力を探求しましょう。",
        "keywords": "関数合成，Python, 関数型プログラミング，lambda, functools.reduce"
      },
      "details": {
        "steps": [
          {
            "title": "関数を合成する",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "Python 3 の合成テスト実行を確認する",
                "file": "verify1-1.sh",
                "hint": "必要な操作を完了していることを確認してください。"
              }
            ],
            "solutions": ["compose.py"]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Композиция функций в Python",
      "description": "В этом испытании вы реализуете функцию, которая выполняет правую-налево композицию функций с использованием функции `functools.reduce()` в Python.",
      "meta": {
        "title": "Композиция функций в Python | Функциональное программирование",
        "description": "Изучите, как использовать композицию функций в Python для объединения нескольких функций в новую функцию. Исследуйте мощь функциональных техник программирования.",
        "keywords": "композиция функций, Python, функциональное программирование, lambda, functools.reduce"
      },
      "details": {
        "steps": [
          {
            "title": "Композиция функций",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "Проверить выполнение теста по композиции функций на Python 3",
                "file": "verify1-1.sh",
                "hint": "Пожалуйста, убедитесь, что вы выполнили все необходимые действия."
              }
            ],
            "solutions": ["compose.py"]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    }
  ]
}
