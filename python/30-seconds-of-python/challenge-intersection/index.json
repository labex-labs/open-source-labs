{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "challenge",
  "title": "Find Common Elements in Python Lists | Challenge",
  "description": "In Python, you can easily find the common elements between two lists using the set intersection operation. In this challenge, you will be asked to write a function that takes two lists as input and returns a new list containing only the elements that are present in both input lists.",
  "meta": {
    "title": "Python List Intersection | Programming Tutorials",
    "description": "Learn how to easily find common elements between two lists in Python using the set intersection operation. Explore a coding challenge and solution.",
    "keywords": "Python, List Intersection, Programming Tutorials, Coding Challenges, Set Operations"
  },
  "difficulty": "Beginner",
  "time": 15,
  "hidden": true,
  "fee_type": "free",
  "show_in_tutorial": false,
  "details": {
    "steps": [
      {
        "title": "List Intersection Challenge",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify Python Script Execution in Temporary Directory",
            "file": "verify1-1.sh",
            "hint": "Please make sure you have completed the required actions.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "python/build_in_functions",
          "python/comments",
          "python/data_collections",
          "python/function_definition",
          "python/lists",
          "python/tuples",
          "python/variables_data_types"
        ],
        "solutions": ["intersection.py"]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md"
    },
    "assets": {
      "host01": [
        {
          "file": "test_intersection.py",
          "target": "/tmp",
          "chmod": "ugo+rwx"
        },
        {
          "file": "intersection.py",
          "target": "/home/labex/project",
          "chmod": "ugo+rwx"
        }
      ]
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["huduo0812", "jiaosenvip"],
  "license": {
    "name": "CC-BY-4.0",
    "url": "https://github.com/30-seconds/30-seconds-of-python/blob/master/LICENSE",
    "repo": "https://github.com/30-seconds/30-seconds-of-python"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "在 Python 列表中查找共同元素 | 挑战",
      "description": "在 Python 中，你可以使用集合交集操作轻松找到两个列表之间的共同元素。在这个挑战中，你将被要求编写一个函数，该函数接受两个列表作为输入，并返回一个新列表，其中只包含两个输入列表中都存在的元素。",
      "meta": {
        "title": "Python 列表交集 | 编程教程",
        "description": "学习如何使用集合交集操作在 Python 中轻松找到两个列表之间的共同元素。探索一个编码挑战及解决方案。",
        "keywords": "Python, 列表交集，编程教程，编码挑战，集合操作"
      },
      "details": {
        "steps": [
          {
            "title": "列表交集挑战",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "在临时目录中验证 Python 脚本执行情况",
                "file": "verify1-1.sh",
                "hint": "请确保你已完成所需操作。"
              }
            ],
            "solutions": ["intersection.py"]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Encuentra elementos comunes en listas de Python | Desafío",
      "description": "En Python, puedes encontrar fácilmente los elementos comunes entre dos listas utilizando la operación de intersección de conjuntos. En este desafío, se te pedirá escribir una función que tome dos listas como entrada y devuelva una nueva lista que contenga solo los elementos que están presentes en ambas listas de entrada.",
      "meta": {
        "title": "Intersección de listas de Python | Tutoriales de programación",
        "description": "Aprende cómo encontrar fácilmente elementos comunes entre dos listas en Python utilizando la operación de intersección de conjuntos. Explora un desafío de codificación y solución.",
        "keywords": "Python, Intersección de listas, Tutoriales de programación, Desafíos de codificación, Operaciones de conjuntos"
      },
      "details": {
        "steps": [
          {
            "title": "Desafío de Intersección de Listas",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Verificar la ejecución del script de Python en el directorio temporal",
                "file": "verify1-1.sh",
                "hint": "Asegúrese de haber completado las acciones requeridas."
              }
            ],
            "solutions": ["intersection.py"]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Trouver les éléments communs dans les listes Python | Défi",
      "description": "En Python, vous pouvez facilement trouver les éléments communs entre deux listes en utilisant l'opération d'intersection d'ensembles. Dans ce défi, vous devrez écrire une fonction qui prend deux listes en entrée et renvoie une nouvelle liste ne contenant que les éléments présents dans les deux listes d'entrée.",
      "meta": {
        "title": "Intersection de listes Python | Tutoriels de programmation",
        "description": "Découvrez comment trouver facilement les éléments communs entre deux listes en Python en utilisant l'opération d'intersection d'ensembles. Explorez un défi de codage et sa solution.",
        "keywords": "Python, Intersection de listes, Tutoriels de programmation, Défis de codage, Opérations d'ensembles"
      },
      "details": {
        "steps": [
          {
            "title": "Défi d'intersection de listes",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Vérifier l'exécution du script Python dans le répertoire temporaire",
                "file": "verify1-1.sh",
                "hint": "Veuillez vous assurer d'avoir effectué les actions requises."
              }
            ],
            "solutions": ["intersection.py"]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Finde gemeinsame Elemente in Python-Listen | Herausforderung",
      "description": "In Python kannst du mithilfe der Schnittmengeoperation von Mengen leicht die gemeinsamen Elemente zwischen zwei Listen finden. In dieser Herausforderung wirst du aufgefordert, eine Funktion zu schreiben, die zwei Listen als Eingabe nimmt und eine neue Liste zurückgibt, die nur die Elemente enthält, die in beiden Eingabelisten vorhanden sind.",
      "meta": {
        "title": "Python-Listen-Schnittmenge | Programmier-Tutorials",
        "description": "Lerne, wie du in Python mithilfe der Schnittmengeoperation von Mengen leicht gemeinsame Elemente zwischen zwei Listen findest. Entdecke eine Codierungsherausforderung und deren Lösung.",
        "keywords": "Python, Listen-Schnittmenge, Programmier-Tutorials, Codierungsherausforderungen, Mengenoperationen"
      },
      "details": {
        "steps": [
          {
            "title": "Listen-Schnittmenge-Herausforderung",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Verifiziere die Ausführung eines Python-Skripts im temporären Verzeichnis",
                "file": "verify1-1.sh",
                "hint": "Stellen Sie sicher, dass Sie die erforderlichen Aktionen abgeschlossen haben."
              }
            ],
            "solutions": ["intersection.py"]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "Python のリストで共通要素を見つける | チャレンジ",
      "description": "Python では、セットの積集合演算を使って、2 つのリスト間の共通要素を簡単に見つけることができます。このチャレンジでは、2 つのリストを入力として受け取り、入力リストの両方に存在する要素のみを含む新しいリストを返す関数を書くよう求められます。",
      "meta": {
        "title": "Python のリストの積集合 | プログラミングチュートリアル",
        "description": "Python でセットの積集合演算を使って、2 つのリスト間の共通要素を簡単に見つける方法を学びましょう。コーディングチャレンジと解決策を探ります。",
        "keywords": "Python, リストの積集合，プログラミングチュートリアル，コーディングチャレンジ，セット演算"
      },
      "details": {
        "steps": [
          {
            "title": "リストの積集合チャレンジ",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "一時ディレクトリでの Python スクリプトの実行を確認する",
                "file": "verify1-1.sh",
                "hint": "必要な操作を完了していることを確認してください。"
              }
            ],
            "solutions": ["intersection.py"]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Найти общие элементы в списках Python | Задача",
      "description": "В Python вы можете легко найти общие элементы между двумя списками, используя операцию пересечения множеств. В этом испытании вам будет предложено написать функцию, которая принимает два списка в качестве входных данных и возвращает новый список, содержащий только элементы, которые присутствуют в обоих входных списках.",
      "meta": {
        "title": "Пересечение списков Python | Руководства по программированию",
        "description": "Изучите, как легко найти общие элементы между двумя списками в Python, используя операцию пересечения множеств. Изучите задачу по программированию и решение.",
        "keywords": "Python, Пересечение списков, Руководства по программированию, Задачи по программированию, Операции с множествами"
      },
      "details": {
        "steps": [
          {
            "title": "Задача по нахождению пересечения списков",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "Проверить выполнение Python-скрипта в временной директории",
                "file": "verify1-1.sh",
                "hint": "Пожалуйста, убедитесь, что вы выполнили требуемые действия."
              }
            ],
            "solutions": ["intersection.py"]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    }
  ]
}
