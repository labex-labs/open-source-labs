{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "challenge",
  "title": "Randomize List Order in Python | Challenge",
  "description": "In this challenge, you will implement a function to shuffle the items in a list using the Fisher-Yates algorithm, which involves swapping each item with a randomly selected item from the remaining unshuffled portion of the list.",
  "meta": {
    "title": "Python List Shuffling | Programming Tutorials",
    "description": "Learn how to randomize the order of items in a Python list using the Fisher-Yates algorithm. Ideal for games, simulations, and more.",
    "keywords": "Python, list, shuffle, randomize, Fisher-Yates, programming, tutorial"
  },
  "difficulty": "Beginner",
  "time": 15,
  "hidden": true,
  "fee_type": "free",
  "show_in_tutorial": false,
  "details": {
    "steps": [
      {
        "title": "Shuffle List",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify Python Script Execution in Temporary Directory",
            "file": "verify1-1.sh",
            "hint": "Please make sure you have completed the required actions.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "python/build_in_functions",
          "python/comments",
          "python/function_definition",
          "python/importing_modules",
          "python/lists",
          "python/math_random",
          "python/standard_libraries",
          "python/tuples",
          "python/using_packages",
          "python/while_loops"
        ],
        "solutions": ["shuffle.py"]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md"
    },
    "assets": {
      "host01": [
        {
          "file": "test_shuffle.py",
          "target": "/tmp",
          "chmod": "ugo+rwx"
        },
        {
          "file": "shuffle.py",
          "target": "/home/labex/project",
          "chmod": "ugo+rwx"
        }
      ]
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["huduo0812", "jiaosenvip"],
  "license": {
    "name": "CC-BY-4.0",
    "url": "https://github.com/30-seconds/30-seconds-of-python/blob/master/LICENSE",
    "repo": "https://github.com/30-seconds/30-seconds-of-python"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "在 Python 中随机化列表顺序 | 挑战",
      "description": "在这个挑战中，你将实现一个函数，使用 Fisher-Yates 算法打乱列表中的项目，该算法涉及将每个项目与从列表中剩余未打乱部分随机选择的项目进行交换。",
      "meta": {
        "title": "Python 列表洗牌 | 编程教程",
        "description": "学习如何使用 Fisher-Yates 算法随机化 Python 列表中项目的顺序。适用于游戏、模拟等。",
        "keywords": "Python, 列表，洗牌，随机化，Fisher-Yates, 编程，教程"
      },
      "details": {
        "steps": [
          {
            "title": "打乱列表",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "在临时目录中验证 Python 脚本执行情况",
                "file": "verify1-1.sh",
                "hint": "请确保你已完成所需操作。"
              }
            ],
            "solutions": ["shuffle.py"]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Aleatorizar el orden de una lista en Python | Desafío",
      "description": "En este desafío, implementarás una función para barajar los elementos de una lista utilizando el algoritmo de Fisher-Yates, que implica intercambiar cada elemento con un elemento seleccionado al azar de la porción no barajada restante de la lista.",
      "meta": {
        "title": "Barajado de listas en Python | Tutoriales de programación",
        "description": "Aprende a aleatorizar el orden de los elementos en una lista de Python utilizando el algoritmo de Fisher-Yates. Ideal para juegos, simulaciones y más.",
        "keywords": "Python, lista, barajar, aleatorizar, Fisher-Yates, programación, tutorial"
      },
      "details": {
        "steps": [
          {
            "title": "Barajar una lista",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Verificar la ejecución del script de Python en el directorio temporal",
                "file": "verify1-1.sh",
                "hint": "Asegúrese de haber completado las acciones requeridas."
              }
            ],
            "solutions": ["shuffle.py"]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Mélanger l'ordre d'une liste en Python | Défi",
      "description": "Dans ce défi, vous allez implémenter une fonction pour mélanger les éléments d'une liste en utilisant l'algorithme de Fisher-Yates, qui consiste à échanger chaque élément avec un élément sélectionné aléatoirement dans la partie non encore mélangée restante de la liste.",
      "meta": {
        "title": "Mélange de listes Python | Tutoriels de programmation",
        "description": "Découvrez comment aléatoriser l'ordre des éléments dans une liste Python à l'aide de l'algorithme de Fisher-Yates. Idéal pour les jeux, les simulations et bien plus encore.",
        "keywords": "Python, liste, mélanger, aléatoriser, Fisher-Yates, programmation, tutoriel"
      },
      "details": {
        "steps": [
          {
            "title": "Mélanger une liste",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Vérifier l'exécution du script Python dans le répertoire temporaire",
                "file": "verify1-1.sh",
                "hint": "Veuillez vous assurer d'avoir effectué les actions requises."
              }
            ],
            "solutions": ["shuffle.py"]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Listenreihenfolge in Python zufällig mischen | Challenge",
      "description": "In dieser Herausforderung implementieren Sie eine Funktion, um die Elemente in einer Liste mithilfe des Fisher-Yates-Algorithmus zu mischen. Dabei wird jedes Element mit einem zufällig ausgewählten Element aus dem verbleibenden, noch nicht gemischten Teil der Liste getauscht.",
      "meta": {
        "title": "Python-Listenmischen | Programmier-Tutorials",
        "description": "Lernen Sie, wie Sie die Reihenfolge der Elemente in einer Python-Liste mithilfe des Fisher-Yates-Algorithmus zufällig machen. Ideal für Spiele, Simulationen und mehr.",
        "keywords": "Python, Liste, mischen, zufällig machen, Fisher-Yates, Programmierung, Tutorial"
      },
      "details": {
        "steps": [
          {
            "title": "Liste mischen",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Verifizieren der Ausführung des Python-Skripts im temporären Verzeichnis",
                "file": "verify1-1.sh",
                "hint": "Bitte stellen Sie sicher, dass Sie die erforderlichen Aktionen ausgeführt haben."
              }
            ],
            "solutions": ["shuffle.py"]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "Python でリストの順序をランダム化する | チャレンジ",
      "description": "このチャレンジでは、Fisher-Yates アルゴリズムを使用してリスト内の項目をシャッフルする関数を実装します。これには、リストのまだシャッフルされていない残りの部分からランダムに選択された項目と各項目を交換することが含まれます。",
      "meta": {
        "title": "Python リストのシャッフリング | プログラミング チュートリアル",
        "description": "Fisher-Yates アルゴリズムを使用して Python リスト内の項目の順序をランダム化する方法を学びましょう。ゲーム、シミュレーションなどに最適。",
        "keywords": "Python, リスト，シャッフル，ランダム化，Fisher-Yates, プログラミング，チュートリアル"
      },
      "details": {
        "steps": [
          {
            "title": "リストをシャッフルする",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "一時ディレクトリでの Python スクリプトの実行を確認する",
                "file": "verify1-1.sh",
                "hint": "必要な操作を完了していることを確認してください。"
              }
            ],
            "solutions": ["shuffle.py"]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Перемешать порядок элементов списка в Python | Вызов",
      "description": "В этом испытании вы реализуете функцию для перемешивания элементов списка с использованием алгоритма Фишера-Йетса, который включает в себя обмен каждого элемента с случайно выбранным элементом из оставшейся не перемешанной части списка.",
      "meta": {
        "title": "Перемешивание списков в Python | Руководства по программированию",
        "description": "Изучите, как случайным образом изменить порядок элементов в списке Python с использованием алгоритма Фишера-Йетса. Ideal для игр, симуляций и других задач.",
        "keywords": "Python, список, перемешать, случайно расположить, Фишер-Йетс, программирование, учебник"
      },
      "details": {
        "steps": [
          {
            "title": "Перемешать список",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "Проверить выполнение Python-скрипта в временной директории",
                "file": "verify1-1.sh",
                "hint": "Пожалуйста, убедитесь, что вы выполнили все необходимые действия."
              }
            ],
            "solutions": ["shuffle.py"]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    }
  ]
}
