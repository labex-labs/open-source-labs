{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Python Snake Case Conversion",
  "description": "In Python, snake case is a naming convention where words are separated by underscores. This is commonly used for naming variables, functions, and other identifiers. However, sometimes we may have strings that are not in snake case and we need to convert them. In this challenge, you will be tasked with writing a Python function that converts a string to snake case.",
  "meta": {
    "title": "Python | Snake Case Conversion | String Manipulation",
    "description": "Learn how to convert strings to snake case using Python. Discover a powerful function that handles a variety of input formats, including camelCase, mixed-case, and hyphenated strings.",
    "keywords": "Python, snake case, string conversion, string manipulation, camelCase, mixed-case, hyphenated strings"
  },
  "difficulty": "Beginner",
  "time": 15,
  "hidden": true,
  "fee_type": "free",
  "show_in_tutorial": true,
  "verified": true,
  "details": {
    "steps": [
      {
        "title": "Understanding the Problem",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify Python File Creation",
            "file": "verify1-1.sh",
            "hint": "Please create the snake_case.py file in the project directory",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": ["python/function_definition", "python/strings"]
      },
      {
        "title": "Using Regular Expressions for Pattern Matching",
        "text": "en/step2.md",
        "verify": [
          {
            "name": "Verify Regular Expression Usage",
            "file": "verify2-1.sh",
            "hint": "Make sure your snake function uses regular expressions"
          }
        ],
        "skills": ["python/regular_expressions", "python/strings"]
      },
      {
        "title": "Handling More Complex Patterns",
        "text": "en/step3.md",
        "verify": [
          {
            "name": "Verify Enhanced Function",
            "file": "verify3-1.sh",
            "hint": "Make sure your function handles hyphens and PascalCase"
          }
        ],
        "skills": ["python/regular_expressions", "python/strings"]
      },
      {
        "title": "Final Implementation and Testing",
        "text": "en/step4.md",
        "verify": [
          {
            "name": "Verify Final Implementation",
            "file": "verify4-1.sh",
            "hint": "Make sure your final implementation passes all tests"
          }
        ],
        "skills": ["python/regular_expressions", "python/strings"]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    },
    "assets": {
      "host01": [
        {
          "file": "test_snake.py",
          "target": "/tmp",
          "chmod": "ugo+rwx"
        },
        {
          "file": "snake.py",
          "target": "/home/labex/project",
          "chmod": "ugo+rwx"
        }
      ]
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["huduo0812", "jiaosenvip"],
  "license": {
    "name": "CC-BY-4.0",
    "url": "https://github.com/30-seconds/30-seconds-of-python/blob/master/LICENSE",
    "repo": "https://github.com/30-seconds/30-seconds-of-python"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "Python 蛇形命名法转换",
      "description": "在 Python 中，蛇形命名法（snake case）是一种用下划线分隔单词的命名约定。它通常用于命名变量、函数和其他标识符。然而，有时我们可能会遇到非蛇形命名法的字符串，需要将它们进行转换。在这个挑战中，你需要编写一个 Python 函数，将字符串转换为蛇形命名法。",
      "meta": {
        "title": "Python | 蛇形命名法转换 | 字符串操作",
        "description": "学习如何使用 Python 将字符串转换为蛇形命名法。探索一个强大的函数，它可以处理各种输入格式，包括驼峰命名法（camelCase）、混合大小写和带连字符的字符串。",
        "keywords": "Python, 蛇形命名法, 字符串转换, 字符串操作, 驼峰命名法, 混合大小写, 带连字符的字符串"
      },
      "details": {
        "steps": [
          {
            "title": "理解问题",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "验证 Python 文件是否创建",
                "file": "verify1-1.sh",
                "hint": "请在项目目录中创建 snake_case.py 文件"
              }
            ]
          },
          {
            "title": "使用正则表达式进行模式匹配",
            "text": "zh/step2.md",
            "verify": [
              {
                "name": "验证正则表达式的使用",
                "file": "verify2-1.sh",
                "hint": "确保你的 snake 函数使用了正则表达式"
              }
            ]
          },
          {
            "title": "处理更复杂的模式",
            "text": "zh/step3.md",
            "verify": [
              {
                "name": "验证增强功能",
                "file": "verify3-1.sh",
                "hint": "确保你的函数能够处理连字符和帕斯卡命名法（PascalCase）"
              }
            ]
          },
          {
            "title": "最终实现与测试",
            "text": "zh/step4.md",
            "verify": [
              {
                "name": "验证最终实现",
                "file": "verify4-1.sh",
                "hint": "确保你的最终实现通过所有测试"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Conversión a snake case en Python",
      "description": "En Python, el snake case es una convención de nomenclatura en la que las palabras se separan por guiones bajos. Esto se utiliza comúnmente para nombrar variables, funciones y otros identificadores. Sin embargo, a veces podemos tener cadenas que no están en snake case y necesitamos convertirlas. En este desafío, se te encargará escribir una función de Python que convierta una cadena a snake case.",
      "meta": {
        "title": "Python | Conversión a snake case | Manipulación de cadenas",
        "description": "Aprende cómo convertir cadenas a snake case utilizando Python. Descubre una función poderosa que maneja una variedad de formatos de entrada, incluyendo camelCase, cadenas con mayúsculas y minúsculas mezcladas y cadenas con guiones.",
        "keywords": "Python, snake case, conversión de cadenas, manipulación de cadenas, camelCase, cadenas con mayúsculas y minúsculas mezcladas, cadenas con guiones"
      },
      "details": {
        "steps": [
          {
            "title": "Comprendiendo el problema",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Verificar la creación del archivo Python",
                "file": "verify1-1.sh",
                "hint": "Por favor, crea el archivo snake_case.py en el directorio del proyecto"
              }
            ]
          },
          {
            "title": "Uso de expresiones regulares para coincidencia de patrones",
            "text": "es/step2.md",
            "verify": [
              {
                "name": "Verificar el uso de expresiones regulares",
                "file": "verify2-1.sh",
                "hint": "Asegúrate de que tu función snake utilice expresiones regulares"
              }
            ]
          },
          {
            "title": "Manejo de patrones más complejos",
            "text": "es/step3.md",
            "verify": [
              {
                "name": "Verificar la función mejorada",
                "file": "verify3-1.sh",
                "hint": "Asegúrate de que tu función maneje guiones y PascalCase"
              }
            ]
          },
          {
            "title": "Implementación final y pruebas",
            "text": "es/step4.md",
            "verify": [
              {
                "name": "Verificar la implementación final",
                "file": "verify4-1.sh",
                "hint": "Asegúrate de que tu implementación final pase todas las pruebas"
              }
            ]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Conversion en snake case en Python",
      "description": "En Python, le snake case est une convention de nommage où les mots sont séparés par des underscores. Cela est couramment utilisé pour nommer les variables, les fonctions et autres identifiants. Cependant, parfois nous pouvons avoir des chaînes de caractères qui ne sont pas en snake case et nous devons les convertir. Dans ce défi, vous serez chargé d'écrire une fonction Python qui convertit une chaîne de caractères en snake case.",
      "meta": {
        "title": "Python | Conversion en snake case | Manipulation de chaînes de caractères",
        "description": "Apprenez à convertir des chaînes de caractères en snake case en utilisant Python. Découvrez une fonction puissante qui gère une variété de formats d'entrée, y compris le camelCase, les chaînes en cas mixte et les chaînes avec des tirets.",
        "keywords": "Python, snake case, conversion de chaînes de caractères, manipulation de chaînes de caractères, camelCase, cas mixte, chaînes avec des tirets"
      },
      "details": {
        "steps": [
          {
            "title": "Comprendre le problème",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Vérifier la création du fichier Python",
                "file": "verify1-1.sh",
                "hint": "Veuillez créer le fichier snake_case.py dans le répertoire du projet"
              }
            ]
          },
          {
            "title": "Utilisation des expressions régulières pour la correspondance de motifs",
            "text": "fr/step2.md",
            "verify": [
              {
                "name": "Vérifier l'utilisation des expressions régulières",
                "file": "verify2-1.sh",
                "hint": "Assurez-vous que votre fonction snake utilise des expressions régulières"
              }
            ]
          },
          {
            "title": "Gestion de motifs plus complexes",
            "text": "fr/step3.md",
            "verify": [
              {
                "name": "Vérifier la fonction améliorée",
                "file": "verify3-1.sh",
                "hint": "Assurez-vous que votre fonction gère les tirets et le PascalCase"
              }
            ]
          },
          {
            "title": "Implémentation finale et tests",
            "text": "fr/step4.md",
            "verify": [
              {
                "name": "Vérifier l'implémentation finale",
                "file": "verify4-1.sh",
                "hint": "Assurez-vous que votre implémentation finale passe tous les tests"
              }
            ]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Python Snake Case Umwandlung",
      "description": "In Python ist Snake Case eine Benennungskonvention, bei der Wörter durch Unterstriche getrennt sind. Dies wird üblicherweise für die Benennung von Variablen, Funktionen und anderen Bezeichnern verwendet. Manchmal haben wir jedoch Zeichenketten, die nicht in Snake Case vorliegen, und wir müssen sie umwandeln. In dieser Herausforderung müssen Sie eine Python-Funktion schreiben, die eine Zeichenkette in Snake Case umwandelt.",
      "meta": {
        "title": "Python | Snake Case Umwandlung | Zeichenkettenmanipulation",
        "description": "Lernen Sie, wie Sie Zeichenketten mit Python in Snake Case umwandeln. Entdecken Sie eine leistungsstarke Funktion, die eine Vielzahl von Eingabeformaten verarbeitet, einschließlich camelCase, gemischter Groß- und Kleinschreibung und Bindestrich-getrennter Zeichenketten.",
        "keywords": "Python, Snake Case, Zeichenkettenumwandlung, Zeichenkettenmanipulation, camelCase, gemischte Groß- und Kleinschreibung, Bindestrich-getrennte Zeichenketten"
      },
      "details": {
        "steps": [
          {
            "title": "Das Problem verstehen",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Überprüfen der Python-Dateierstellung",
                "file": "verify1-1.sh",
                "hint": "Bitte erstellen Sie die Datei snake_case.py im Projektverzeichnis"
              }
            ]
          },
          {
            "title": "Verwendung von regulären Ausdrücken für Mustererkennung",
            "text": "de/step2.md",
            "verify": [
              {
                "name": "Überprüfen der Verwendung von regulären Ausdrücken",
                "file": "verify2-1.sh",
                "hint": "Stellen Sie sicher, dass Ihre snake-Funktion reguläre Ausdrücke verwendet"
              }
            ]
          },
          {
            "title": "Umgang mit komplexeren Mustern",
            "text": "de/step3.md",
            "verify": [
              {
                "name": "Überprüfen der erweiterten Funktion",
                "file": "verify3-1.sh",
                "hint": "Stellen Sie sicher, dass Ihre Funktion Bindestriche und PascalCase verarbeitet"
              }
            ]
          },
          {
            "title": "Endgültige Implementierung und Testen",
            "text": "de/step4.md",
            "verify": [
              {
                "name": "Überprüfen der endgültigen Implementierung",
                "file": "verify4-1.sh",
                "hint": "Stellen Sie sicher, dass Ihre endgültige Implementierung alle Tests besteht"
              }
            ]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "Python でのスネークケース変換",
      "description": "Python では、スネークケースは単語がアンダースコアで区切られる命名規則です。これは変数、関数、その他の識別子の命名に一般的に使用されます。しかし、時にはスネークケースではない文字列があり、それを変換する必要があることがあります。このチャレンジでは、文字列をスネークケースに変換する Python 関数を書くタスクが与えられます。",
      "meta": {
        "title": "Python | スネークケース変換 | 文字列操作",
        "description": "Python を使って文字列をスネークケースに変換する方法を学びましょう。キャメルケース、混合ケース、ハイフン付き文字列など、さまざまな入力形式を扱う強力な関数を発見します。",
        "keywords": "Python, スネークケース, 文字列変換, 文字列操作, キャメルケース, 混合ケース, ハイフン付き文字列"
      },
      "details": {
        "steps": [
          {
            "title": "問題の理解",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "Python ファイルの作成を確認する",
                "file": "verify1-1.sh",
                "hint": "プロジェクトディレクトリに snake_case.py ファイルを作成してください"
              }
            ]
          },
          {
            "title": "正規表現を使用したパターンマッチング",
            "text": "ja/step2.md",
            "verify": [
              {
                "name": "正規表現の使用を確認する",
                "file": "verify2-1.sh",
                "hint": "snake 関数が正規表現を使用していることを確認してください"
              }
            ]
          },
          {
            "title": "より複雑なパターンの処理",
            "text": "ja/step3.md",
            "verify": [
              {
                "name": "拡張機能の確認",
                "file": "verify3-1.sh",
                "hint": "関数がハイフンと PascalCase を処理できることを確認してください"
              }
            ]
          },
          {
            "title": "最終実装とテスト",
            "text": "ja/step4.md",
            "verify": [
              {
                "name": "最終実装の確認",
                "file": "verify4-1.sh",
                "hint": "最終実装がすべてのテストに合格することを確認してください"
              }
            ]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Преобразование в snake case на Python",
      "description": "В Python snake case - это соглашение об именовании, при котором слова разделяются подчеркиваниями. Оно обычно используется для именования переменных, функций и других идентификаторов. Однако иногда у нас могут быть строки, которые не соответствуют snake case, и нам нужно их преобразовать. В этом задании вам предстоит написать функцию на Python, которая преобразует строку в snake case.",
      "meta": {
        "title": "Python | Преобразование в snake case | Манипуляции со строками",
        "description": "Узнайте, как преобразовать строки в snake case с помощью Python. Откройте для себя мощную функцию, которая обрабатывает различные форматы входных данных, включая camelCase, смешанный регистр и строки с дефисами.",
        "keywords": "Python, snake case, преобразование строк, манипуляции со строками, camelCase, смешанный регистр, строки с дефисами"
      },
      "details": {
        "steps": [
          {
            "title": "Понимание проблемы",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "Проверка создания Python-файла",
                "file": "verify1-1.sh",
                "hint": "Пожалуйста, создайте файл snake_case.py в директории проекта"
              }
            ]
          },
          {
            "title": "Использование регулярных выражений для сопоставления шаблонов",
            "text": "ru/step2.md",
            "verify": [
              {
                "name": "Проверка использования регулярных выражений",
                "file": "verify2-1.sh",
                "hint": "Убедитесь, что ваша функция snake использует регулярные выражения"
              }
            ]
          },
          {
            "title": "Обработка более сложных шаблонов",
            "text": "ru/step3.md",
            "verify": [
              {
                "name": "Проверка усовершенствованной функции",
                "file": "verify3-1.sh",
                "hint": "Убедитесь, что ваша функция обрабатывает дефисы и PascalCase"
              }
            ]
          },
          {
            "title": "Финальная реализация и тестирование",
            "text": "ru/step4.md",
            "verify": [
              {
                "name": "Проверка финальной реализации",
                "file": "verify4-1.sh",
                "hint": "Убедитесь, что ваша финальная реализация проходит все тесты"
              }
            ]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    }
  ]
}
