{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Delayed Function Execution",
  "description": "In this lab, you will learn how to delay the execution of a function in Python using the `time.sleep()` function, which can be useful in scenarios where you need to wait for a certain event to occur before executing a function.",
  "meta": {
    "title": "Python | Delayed Function Execution | Time Management",
    "description": "Learn how to delay the execution of a function in Python using the time.sleep() function. Useful for scenarios where you need to wait for a certain event before executing a function.",
    "keywords": "Python, function, delay, time management, programming, tutorial"
  },
  "difficulty": "Beginner",
  "time": 15,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Delayed Function Execution",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify Python Script Execution in Temporary Directory",
            "file": "verify1-1.sh",
            "hint": "Please make sure you have completed the required actions.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": []
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    },
    "assets": {
      "host01": [
        {
          "file": "test_delay.py",
          "target": "/tmp",
          "chmod": "ugo+rwx"
        },
        {
          "file": "delay.py",
          "target": "/home/labex/project",
          "chmod": "ugo+rwx"
        }
      ]
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["huduo0812", "jiaosenvip"],
  "license": {
    "name": "CC-BY-4.0",
    "url": "https://github.com/30-seconds/30-seconds-of-python/blob/master/LICENSE",
    "repo": "https://github.com/30-seconds/30-seconds-of-python"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "延迟函数执行",
      "description": "在这个实验中，你将学习如何使用 `time.sleep()` 函数在 Python 中延迟函数的执行，这在你需要等待某个事件发生后再执行函数的场景中非常有用。",
      "meta": {
        "title": "Python | 延迟函数执行 | 时间管理",
        "description": "学习如何使用 time.sleep() 函数在 Python 中延迟函数的执行。对于需要在执行函数前等待某个事件的场景很有用。",
        "keywords": "Python, 函数，延迟，时间管理，编程，教程"
      },
      "details": {
        "steps": [
          {
            "title": "延迟函数执行",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "在临时目录中验证 Python 脚本执行情况",
                "file": "verify1-1.sh",
                "hint": "请确保你已完成所需操作。"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Ejecución de función retrasada",
      "description": "En este laboratorio, aprenderá a retrasar la ejecución de una función en Python utilizando la función `time.sleep()`, lo cual puede ser útil en escenarios donde necesita esperar a que ocurra un determinado evento antes de ejecutar una función.",
      "meta": {
        "title": "Python | Ejecución de función retrasada | Gestión del tiempo",
        "description": "Aprenda a retrasar la ejecución de una función en Python utilizando la función time.sleep(). Útil para escenarios donde necesita esperar a un determinado evento antes de ejecutar una función.",
        "keywords": "Python, función, retraso, gestión del tiempo, programación, tutorial"
      },
      "details": {
        "steps": [
          {
            "title": "Ejecución de función retrasada",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Verificar la ejecución del script de Python en el directorio temporal",
                "file": "verify1-1.sh",
                "hint": "Asegúrese de haber completado las acciones requeridas."
              }
            ]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Exécution de fonction retardée",
      "description": "Dans ce laboratoire, vous allez apprendre à retarder l'exécution d'une fonction en Python à l'aide de la fonction `time.sleep()`, ce qui peut être utile dans des scénarios où vous devez attendre qu'un certain événement se produise avant d'exécuter une fonction.",
      "meta": {
        "title": "Python | Exécution de fonction retardée | Gestion du temps",
        "description": "Apprenez à retarder l'exécution d'une fonction en Python à l'aide de la fonction time.sleep(). Utile pour les scénarios où vous devez attendre un certain événement avant d'exécuter une fonction.",
        "keywords": "Python, fonction, retard, gestion du temps, programmation, tutoriel"
      },
      "details": {
        "steps": [
          {
            "title": "Exécution de fonction retardée",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Vérifier l'exécution du script Python dans le répertoire temporaire",
                "file": "verify1-1.sh",
                "hint": "Veuillez vous assurer d'avoir effectué les actions requises."
              }
            ]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Verzögerte Funktionsausführung",
      "description": "In diesem Lab werden Sie lernen, wie Sie die Ausführung einer Funktion in Python mithilfe der Funktion `time.sleep()` verzögern können, was in Szenarien nützlich sein kann, in denen Sie warten müssen, bis ein bestimmtes Ereignis eintritt, bevor Sie eine Funktion ausführen.",
      "meta": {
        "title": "Python | Verzögerte Funktionsausführung | Zeitmanagement",
        "description": "Lernen Sie, wie Sie die Ausführung einer Funktion in Python mithilfe der Funktion `time.sleep()` verzögern können. Nützlich für Szenarien, in denen Sie warten müssen, bis ein bestimmtes Ereignis eintritt, bevor Sie eine Funktion ausführen.",
        "keywords": "Python, Funktion, Verzögerung, Zeitmanagement, Programmierung, Tutorial"
      },
      "details": {
        "steps": [
          {
            "title": "Verzögerte Funktionsausführung",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Verifizieren der Ausführung eines Python-Skripts im temporären Verzeichnis",
                "file": "verify1-1.sh",
                "hint": "Bitte stellen Sie sicher, dass Sie die erforderlichen Aktionen ausgeführt haben."
              }
            ]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "遅延された関数の実行",
      "description": "この実験では、Python で関数の実行を遅らせる方法を学びます。`time.sleep()` 関数を使用することができ、特定のイベントが発生するのを待ってから関数を実行する必要があるシナリオで役立ちます。",
      "meta": {
        "title": "Python | 遅延された関数の実行 | 時間管理",
        "description": "Python で `time.sleep()` 関数を使用して関数の実行を遅らせる方法を学びます。特定のイベントが発生するのを待ってから関数を実行する必要があるシナリオに役立ちます。",
        "keywords": "Python, 関数，遅延，時間管理，プログラミング，チュートリアル"
      },
      "details": {
        "steps": [
          {
            "title": "遅延された関数の実行",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "一時ディレクトリでの Python スクリプトの実行を確認する",
                "file": "verify1-1.sh",
                "hint": "必要な操作を完了していることを確認してください。"
              }
            ]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Отложенное выполнение функции",
      "description": "В этом практическом занятии вы научитесь задерживать выполнение функции в Python с использованием функции `time.sleep()`, что может быть полезно в сценариях, когда вам нужно дождаться наступления определенного события перед выполнением функции.",
      "meta": {
        "title": "Python | Отложенное выполнение функции | Управление временем",
        "description": "Изучите, как задерживать выполнение функции в Python с использованием функции time.sleep(). Полезно для сценариев, когда вам нужно дождаться определенного события перед выполнением функции.",
        "keywords": "Python, функция, задержка, управление временем, программирование, учебник"
      },
      "details": {
        "steps": [
          {
            "title": "Отложенное выполнение функции",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "Проверить выполнение Python-скрипта в временной директории",
                "file": "verify1-1.sh",
                "hint": "Пожалуйста, убедитесь, что вы выполнили все необходимые действия."
              }
            ]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    },
    {
      "lang": "ko",
      "title": "지연된 함수 실행",
      "description": "이 랩에서는 Python 에서 `time.sleep()` 함수를 사용하여 함수의 실행을 지연시키는 방법을 배웁니다. 이는 함수를 실행하기 전에 특정 이벤트가 발생할 때까지 기다려야 하는 시나리오에서 유용할 수 있습니다.",
      "meta": {
        "title": "Python | 지연된 함수 실행 | 시간 관리",
        "description": "time.sleep() 함수를 사용하여 Python 에서 함수의 실행을 지연시키는 방법을 알아보세요. 함수를 실행하기 전에 특정 이벤트를 기다려야 하는 시나리오에 유용합니다.",
        "keywords": "Python, 함수, 지연, 시간 관리, 프로그래밍, 튜토리얼"
      },
      "details": {
        "steps": [
          {
            "title": "지연된 함수 실행",
            "text": "ko/step1.md",
            "verify": [
              {
                "name": "임시 디렉토리에서 Python 스크립트 실행 확인",
                "file": "verify1-1.sh",
                "hint": "필수 작업을 완료했는지 확인하십시오."
              }
            ]
          }
        ],
        "intro": {
          "text": "ko/intro.md",
          "title": "소개"
        },
        "finish": {
          "text": "ko/finish.md",
          "title": "요약"
        }
      }
    },
    {
      "lang": "pt",
      "title": "Execução de Função Atrasada",
      "description": "Neste laboratório, você aprenderá como atrasar a execução de uma função em Python usando a função `time.sleep()`, o que pode ser útil em cenários onde você precisa esperar que um determinado evento ocorra antes de executar uma função.",
      "meta": {
        "title": "Python | Execução de Função Atrasada | Gerenciamento de Tempo",
        "description": "Aprenda como atrasar a execução de uma função em Python usando a função time.sleep(). Útil para cenários onde você precisa esperar por um evento específico antes de executar uma função.",
        "keywords": "Python, função, atraso, gerenciamento de tempo, programação, tutorial"
      },
      "details": {
        "steps": [
          {
            "title": "Execução de Função Atrasada",
            "text": "pt/step1.md",
            "verify": [
              {
                "name": "Verificar Execução do Script Python em Diretório Temporário",
                "file": "verify1-1.sh",
                "hint": "Por favor, certifique-se de ter concluído as ações necessárias."
              }
            ]
          }
        ],
        "intro": {
          "text": "pt/intro.md",
          "title": "Introdução"
        },
        "finish": {
          "text": "pt/finish.md",
          "title": "Resumo"
        }
      }
    }
  ]
}
