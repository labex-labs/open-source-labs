{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Split List by Filter in Python",
  "description": "In Python, we can split a list into two groups based on a given filter. This can be done using a list comprehension and the zip() function. In this challenge, you will be asked to write a function that takes a list and a filter as input and returns two lists, one containing the elements that pass the filter and the other containing the elements that do not.",
  "meta": {
    "title": "Python List Bifurcation | Programming Tutorials",
    "description": "Learn how to split a Python list into two groups based on a given filter using list comprehension and the zip() function.",
    "keywords": "Python, list, bifurcation, programming, tutorials, list comprehension, zip"
  },
  "difficulty": "Beginner",
  "time": 15,
  "hidden": true,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Bifurcate List",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify Python Script Execution in Temporary Directory",
            "file": "verify1-1.sh",
            "hint": "Please make sure you have completed the required actions.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "python/booleans",
          "python/build_in_functions",
          "python/comments",
          "python/conditional_statements",
          "python/for_loops",
          "python/function_definition",
          "python/list_comprehensions",
          "python/lists",
          "python/tuples"
        ]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    },
    "assets": {
      "host01": [
        {
          "file": "test_bifurcate.py",
          "target": "/tmp",
          "chmod": "ugo+rwx"
        },
        {
          "file": "bifurcate.py",
          "target": "/home/labex/project",
          "chmod": "ugo+rwx"
        }
      ]
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["huduo0812", "jiaosenvip"],
  "license": {
    "name": "CC-BY-4.0",
    "url": "https://github.com/30-seconds/30-seconds-of-python/blob/master/LICENSE",
    "repo": "https://github.com/30-seconds/30-seconds-of-python"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "在 Python 中根据筛选条件拆分列表",
      "description": "在 Python 中，我们可以根据给定的筛选条件将一个列表拆分为两组。这可以通过列表推导式和 zip() 函数来完成。在这个挑战中，你将被要求编写一个函数，该函数接受一个列表和一个筛选条件作为输入，并返回两个列表，一个包含通过筛选条件的元素，另一个包含未通过筛选条件的元素。",
      "meta": {
        "title": "Python 列表二分法 | 编程教程",
        "description": "学习如何使用列表推导式和 zip() 函数根据给定的筛选条件将 Python 列表拆分为两组。",
        "keywords": "Python, 列表，二分法，编程，教程，列表推导式，zip"
      },
      "details": {
        "steps": [
          {
            "title": "对列表进行二分",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "在临时目录中验证 Python 脚本执行情况",
                "file": "verify1-1.sh",
                "hint": "请确保你已完成所需操作。"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Dividir una lista por filtro en Python",
      "description": "En Python, podemos dividir una lista en dos grupos basados en un filtro dado. Esto se puede hacer utilizando una comprensión de lista y la función zip(). En este desafío, se te pedirá escribir una función que tome una lista y un filtro como entrada y devuelva dos listas, una que contiene los elementos que pasan el filtro y la otra que contiene los elementos que no.",
      "meta": {
        "title": "Bifurcación de listas en Python | Tutoriales de programación",
        "description": "Aprende cómo dividir una lista de Python en dos grupos basados en un filtro dado utilizando comprensión de lista y la función zip().",
        "keywords": "Python, lista, bifurcación, programación, tutoriales, comprensión de lista, zip"
      },
      "details": {
        "steps": [
          {
            "title": "Dividir una lista en dos",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Verificar la ejecución del script de Python en el directorio temporal",
                "file": "verify1-1.sh",
                "hint": "Asegúrese de haber completado las acciones requeridas."
              }
            ]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Diviser une liste par filtre en Python",
      "description": "En Python, on peut diviser une liste en deux groupes en fonction d'un filtre donné. Cela peut être fait à l'aide d'une compréhension de liste et de la fonction zip(). Dans ce défi, vous devrez écrire une fonction qui prend une liste et un filtre en entrée et renvoie deux listes, l'une contenant les éléments qui passent le filtre et l'autre contenant les éléments qui ne le passent pas.",
      "meta": {
        "title": "Bifurcation de liste en Python | Didacticiels de programmation",
        "description": "Découvrez comment diviser une liste Python en deux groupes en fonction d'un filtre donné à l'aide d'une compréhension de liste et de la fonction zip().",
        "keywords": "Python, liste, bifurcation, programmation, didacticiels, compréhension de liste, zip"
      },
      "details": {
        "steps": [
          {
            "title": "Bifurquer une liste",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Vérifier l'exécution du script Python dans le répertoire temporaire",
                "file": "verify1-1.sh",
                "hint": "Veuillez vous assurer d'avoir effectué les actions requises."
              }
            ]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Liste in Python anhand eines Filters aufteilen",
      "description": "In Python können wir eine Liste basierend auf einem gegebenen Filter in zwei Gruppen unterteilen. Dies kann mit einer List Comprehension und der zip()-Funktion erreicht werden. In dieser Herausforderung werden Sie aufgefordert, eine Funktion zu schreiben, die eine Liste und einen Filter als Eingabe nimmt und zwei Listen zurückgibt, wobei eine die Elemente enthält, die den Filter bestehen, und die andere die Elemente, die ihn nicht bestehen.",
      "meta": {
        "title": "Python-Liste aufteilen | Programmierungstutorials",
        "description": "Lernen Sie, wie Sie eine Python-Liste basierend auf einem gegebenen Filter in zwei Gruppen unterteilen, indem Sie List Comprehension und die zip()-Funktion verwenden.",
        "keywords": "Python, Liste, Aufteilung, Programmierung, Tutorials, List Comprehension, zip"
      },
      "details": {
        "steps": [
          {
            "title": "Liste aufteilen",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Verifizieren der Ausführung eines Python-Skripts im temporären Verzeichnis",
                "file": "verify1-1.sh",
                "hint": "Bitte stellen Sie sicher, dass Sie die erforderlichen Aktionen ausgeführt haben."
              }
            ]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "Python でフィルターに基づいてリストを分割する",
      "description": "Python では、与えられたフィルターに基づいてリストを 2 つのグループに分割できます。これは、リスト内包表記と zip() 関数を使って行うことができます。このチャレンジでは、リストとフィルターを入力として受け取り、フィルターを通過する要素を含むリストと通過しない要素を含むリストの 2 つのリストを返す関数を書くよう求められます。",
      "meta": {
        "title": "Python リストの分割 | プログラミング チュートリアルズ",
        "description": "与えられたフィルターに基づいて Python のリストを 2 つのグループに分割する方法を、リスト内包表記と zip() 関数を使って学びましょう。",
        "keywords": "Python, リスト，分割，プログラミング，チュートリアルズ，リスト内包表記，zip"
      },
      "details": {
        "steps": [
          {
            "title": "リストを二つに分ける",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "一時ディレクトリでの Python スクリプトの実行を確認する",
                "file": "verify1-1.sh",
                "hint": "必要な操作を完了していることを確認してください。"
              }
            ]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Разделение списка по фильтру в Python",
      "description": "В Python мы можем разделить список на две группы на основе заданного фильтра. Это можно сделать с использованием списочного выражения и функции zip(). В этом испытании вас попросят написать функцию, которая принимает список и фильтр в качестве входных данных и возвращает два списка, один из которых содержит элементы, прошедшие фильтр, а другой - элементы, не прошедшие его.",
      "meta": {
        "title": "Разделение списка в Python | Руководства по программированию",
        "description": "Изучите, как разделить список Python на две группы на основе заданного фильтра с использованием списочного выражения и функции zip().",
        "keywords": "Python, список, разделение, программирование, руководства, списочное выражение, zip"
      },
      "details": {
        "steps": [
          {
            "title": "Разделить список на две части",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "Проверить выполнение Python-скрипта в временной директории",
                "file": "verify1-1.sh",
                "hint": "Пожалуйста, убедитесь, что вы выполнили требуемые действия."
              }
            ]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    }
  ]
}
