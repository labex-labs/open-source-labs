{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Calculating Hamming Distance Between Strings",
  "description": "In this lab, you will learn how to calculate the Hamming distance between two integers using the XOR operator, binary string conversion, and the count() method in Python.",
  "meta": {
    "title": "Hamming Distance | Programming Tutorials",
    "description": "Learn how to calculate the Hamming distance between two integers using Python. Explore this programming concept and improve your coding skills.",
    "keywords": "Hamming distance, programming tutorials, Python, coding, bit manipulation"
  },
  "difficulty": "Beginner",
  "time": 15,
  "hidden": true,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Hamming Distance Challenge",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify Hamming Distance Python Script",
            "file": "verify1-1.sh",
            "hint": "Please make sure you have completed the required actions.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "python/build_in_functions",
          "python/comments",
          "python/function_definition",
          "python/tuples"
        ]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    },
    "assets": {
      "host01": [
        {
          "file": "test_hamming_distance.py",
          "target": "/tmp",
          "chmod": "ugo+rwx"
        },
        {
          "file": "hamming_distance.py",
          "target": "/home/labex/project",
          "chmod": "ugo+rwx"
        }
      ]
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["huduo0812", "jiaosenvip"],
  "license": {
    "name": "CC-BY-4.0",
    "url": "https://github.com/30-seconds/30-seconds-of-python/blob/master/LICENSE",
    "repo": "https://github.com/30-seconds/30-seconds-of-python"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "计算字符串之间的汉明距离",
      "description": "在这个实验中，你将学习如何使用异或运算符、二进制字符串转换以及 Python 中的 count() 方法来计算两个整数之间的汉明距离。",
      "meta": {
        "title": "汉明距离 | 编程教程",
        "description": "学习如何使用 Python 计算两个整数之间的汉明距离。探索这个编程概念并提升你的编码技能。",
        "keywords": "汉明距离，编程教程，Python, 编码，位操作"
      },
      "details": {
        "steps": [
          {
            "title": "汉明距离挑战",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "验证汉明距离的 Python 脚本",
                "file": "verify1-1.sh",
                "hint": "请确保你已完成所需操作。"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Cálculo de la distancia de Hamming entre cadenas",
      "description": "En este laboratorio, aprenderá a calcular la distancia de Hamming entre dos enteros utilizando el operador XOR, la conversión a cadena binaria y el método count() en Python.",
      "meta": {
        "title": "Distancia de Hamming | Tutoriales de programación",
        "description": "Aprenda a calcular la distancia de Hamming entre dos enteros utilizando Python. Explore este concepto de programación y mejore sus habilidades de codificación.",
        "keywords": "Distancia de Hamming, tutoriales de programación, Python, codificación, manipulación de bits"
      },
      "details": {
        "steps": [
          {
            "title": "Desafío de Distancia de Hamming",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Verificar el script de Python de Distancia de Hamming",
                "file": "verify1-1.sh",
                "hint": "Asegúrese de haber completado las acciones requeridas."
              }
            ]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Calcul de la distance de Hamming entre des chaînes",
      "description": "Dans ce laboratoire, vous allez apprendre à calculer la distance de Hamming entre deux entiers à l'aide de l'opérateur XOR, de la conversion en chaîne binaire et de la méthode count() en Python.",
      "meta": {
        "title": "Distance de Hamming | Tutoriels de programmation",
        "description": "Découvrez comment calculer la distance de Hamming entre deux entiers à l'aide de Python. Explorez ce concept de programmation et améliorez vos compétences de codage.",
        "keywords": "Distance de Hamming, tutoriels de programmation, Python, codage, manipulation binaire"
      },
      "details": {
        "steps": [
          {
            "title": "Défi de la distance de Hamming",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Vérifier le script Python de la distance de Hamming",
                "file": "verify1-1.sh",
                "hint": "Veuillez vous assurer d'avoir effectué les actions requises."
              }
            ]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Berechnung der Hamming-Distanz zwischen Zeichenketten",
      "description": "In diesem Lab werden Sie lernen, wie man die Hamming-Distanz zwischen zwei ganzen Zahlen mit dem XOR-Operator, der Umwandlung in einen Binärstring und der count()-Methode in Python berechnet.",
      "meta": {
        "title": "Hamming-Distanz | Programmier-Tutorials",
        "description": "Lernen Sie, wie man die Hamming-Distanz zwischen zwei ganzen Zahlen mit Python berechnet. Entdecken Sie dieses Programmierkonzept und verbessern Sie Ihre Programmierkenntnisse.",
        "keywords": "Hamming-Distanz, Programmier-Tutorials, Python, Programmierung, Bitmanipulation"
      },
      "details": {
        "steps": [
          {
            "title": "Hamming-Distanz-Herausforderung",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Verifizieren des Python-Skripts zur Hamming-Distanz",
                "file": "verify1-1.sh",
                "hint": "Bitte stellen Sie sicher, dass Sie die erforderlichen Aktionen abgeschlossen haben."
              }
            ]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "文字列間のハミング距離の計算",
      "description": "この実験では、XOR 演算子、2 進数文字列変換、および Python の count() メソッドを使用して、2 つの整数間のハミング距離を計算する方法を学びます。",
      "meta": {
        "title": "ハミング距離 | プログラミングチュートリアル",
        "description": "Python を使って 2 つの整数間のハミング距離を計算する方法を学びましょう。このプログラミングの概念を探求し、コーディング技術を向上させましょう。",
        "keywords": "ハミング距離，プログラミングチュートリアル，Python, コーディング，ビット操作"
      },
      "details": {
        "steps": [
          {
            "title": "ハミング距離チャレンジ",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "ハミング距離の Python スクリプトを検証する",
                "file": "verify1-1.sh",
                "hint": "必要な操作を完了していることを確認してください。"
              }
            ]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Вычисление расстояния Хэмминга между строками",
      "description": "В этом практическом занятии вы научитесь вычислять расстояние Хэмминга между двумя целыми числами с использованием оператора XOR, преобразования в двоичную строку и метода count() в Python.",
      "meta": {
        "title": "Расстояние Хэмминга | Руководства по программированию",
        "description": "Изучите, как вычислять расстояние Хэмминга между двумя целыми числами с использованием Python. Исследуйте этот концепт программирования и улучшите свои навыки программирования.",
        "keywords": "Расстояние Хэмминга, руководства по программированию, Python, программирование, манипуляция с битами"
      },
      "details": {
        "steps": [
          {
            "title": "Задача по расстоянию Хэмминга",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "Проверить скрипт на Python для расстояния Хэмминга",
                "file": "verify1-1.sh",
                "hint": "Пожалуйста, убедитесь, что вы выполнили все необходимые действия."
              }
            ]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    }
  ]
}
