{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Currying in Python Using functools.partial",
  "description": "In this lab, you will learn about currying, a functional programming technique for transforming a function that takes multiple arguments into a sequence of functions that each take a single argument, and how to implement it using the `functools.partial()` function in Python.",
  "meta": {
    "title": "Functional Programming | Currying in Python | Lab",
    "description": "Learn how to implement currying in Python using the functools.partial() function. Discover the benefits of this functional programming technique.",
    "keywords": "functional programming, currying, python, functools.partial, programming tutorial"
  },
  "difficulty": "Beginner",
  "time": 15,
  "hidden": true,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Curry Function",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify Python 3 Script Execution in Temporary Directory",
            "file": "verify1-1.sh",
            "hint": "Please make sure you have completed the required actions.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "python/comments",
          "python/function_definition",
          "python/importing_modules",
          "python/keyword_arguments",
          "python/lambda_functions",
          "python/standard_libraries",
          "python/tuples",
          "python/using_packages"
        ]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    },
    "assets": {
      "host01": [
        {
          "file": "test_curry.py",
          "target": "/tmp",
          "chmod": "ugo+rwx"
        },
        {
          "file": "curry.py",
          "target": "/home/labex/project",
          "chmod": "ugo+rwx"
        }
      ]
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["huduo0812", "jiaosenvip"],
  "license": {
    "name": "CC-BY-4.0",
    "url": "https://github.com/30-seconds/30-seconds-of-python/blob/master/LICENSE",
    "repo": "https://github.com/30-seconds/30-seconds-of-python"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "使用 functools.partial 在 Python 中进行柯里化",
      "description": "在本实验中，你将了解柯里化，这是一种函数式编程技术，用于将接受多个参数的函数转换为一系列每个只接受一个参数的函数，以及如何使用 Python 中的 `functools.partial()` 函数来实现它。",
      "meta": {
        "title": "函数式编程 | Python 中的柯里化 | 实验",
        "description": "学习如何使用 functools.partial() 函数在 Python 中实现柯里化。探索这种函数式编程技术的好处。",
        "keywords": "函数式编程，柯里化，Python, functools.partial, 编程教程"
      },
      "details": {
        "steps": [
          {
            "title": "柯里化函数",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "在临时目录中验证 Python 3 脚本执行情况",
                "file": "verify1-1.sh",
                "hint": "请确保你已完成所需操作。"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Currying en Python con functools.partial",
      "description": "En este laboratorio, aprenderá sobre la currying, una técnica de programación funcional para transformar una función que toma múltiples argumentos en una secuencia de funciones que cada una toma un solo argumento, y cómo implementarla utilizando la función `functools.partial()` en Python.",
      "meta": {
        "title": "Programación Funcional | Currying en Python | Laboratorio",
        "description": "Aprenda cómo implementar la currying en Python utilizando la función functools.partial(). Descubra los beneficios de esta técnica de programación funcional.",
        "keywords": "programación funcional, currying, python, functools.partial, tutorial de programación"
      },
      "details": {
        "steps": [
          {
            "title": "Función Curry",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Verificar la ejecución del script de Python 3 en el directorio temporal",
                "file": "verify1-1.sh",
                "hint": "Asegúrese de haber completado las acciones requeridas."
              }
            ]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Le curry en Python à l'aide de functools.partial",
      "description": "Dans ce laboratoire, vous allez découvrir le curry, une technique de programmation fonctionnelle consistant à transformer une fonction prenant plusieurs arguments en une séquence de fonctions prenant chacun un seul argument, et apprendrez également à l'implémenter à l'aide de la fonction `functools.partial()` en Python.",
      "meta": {
        "title": "Programmation fonctionnelle | Le curry en Python | Laboratoire",
        "description": "Découvrez comment implémenter le curry en Python à l'aide de la fonction functools.partial(). Découvrez les avantages de cette technique de programmation fonctionnelle.",
        "keywords": "programmation fonctionnelle, curry, python, functools.partial, tutoriel de programmation"
      },
      "details": {
        "steps": [
          {
            "title": "Fonction curry",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Vérifier l'exécution d'un script Python 3 dans un répertoire temporaire",
                "file": "verify1-1.sh",
                "hint": "Veuillez vous assurer d'avoir effectué les actions requises."
              }
            ]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Currying in Python mit functools.partial",
      "description": "In diesem Lab werden Sie über Currying lernen, eine Technik der funktionalen Programmierung, um eine Funktion, die mehrere Argumente annimmt, in eine Sequenz von Funktionen umzuwandeln, von denen jede nur ein einzelnes Argument annimmt, und wie Sie es mit der `functools.partial()`-Funktion in Python implementieren.",
      "meta": {
        "title": "Funktionale Programmierung | Currying in Python | Lab",
        "description": "Lernen Sie, wie Sie Currying in Python mit der functools.partial()-Funktion implementieren. Entdecken Sie die Vorteile dieser Technik der funktionalen Programmierung.",
        "keywords": "funktionale Programmierung, Currying, Python, functools.partial, Programmier-Tutorial"
      },
      "details": {
        "steps": [
          {
            "title": "Curry-Funktion",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Verifizieren der Ausführung eines Python 3-Skripts im temporären Verzeichnis",
                "file": "verify1-1.sh",
                "hint": "Bitte stellen Sie sicher, dass Sie die erforderlichen Aktionen ausgeführt haben."
              }
            ]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "Python における functools.partial を用いたカリング",
      "description": "この実験では、複数の引数を取る関数をそれぞれが 1 つの引数を取る関数のシーケンスに変換する関数型プログラミング技術であるカリングについて学び、Python において `functools.partial()` 関数を使ってそれを実装する方法について学びます。",
      "meta": {
        "title": "関数型プログラミング | Python におけるカリング | 実験",
        "description": "Python において functools.partial() 関数を使ってカリングを実装する方法を学びましょう。この関数型プログラミング技術の利点を発見しましょう。",
        "keywords": "関数型プログラミング，カリング，Python, functools.partial, プログラミングチュートリアル"
      },
      "details": {
        "steps": [
          {
            "title": "カリング関数",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "一時ディレクトリでの Python 3 スクリプト実行を確認する",
                "file": "verify1-1.sh",
                "hint": "必要な操作を完了していることを確認してください。"
              }
            ]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Каррирование в Python с использованием functools.partial",
      "description": "В этом практическом занятии вы узнаете о каррировании - функциональном программировании, которое позволяет преобразовать функцию, которая принимает несколько аргументов, в последовательность функций, каждая из которых принимает только один аргумент, и о том, как реализовать его с использованием функции `functools.partial()` в Python.",
      "meta": {
        "title": "Функциональное программирование | Каррирование в Python | Практическое занятие",
        "description": "Изучите, как реализовать каррирование в Python с использованием функции functools.partial(). Откройте для себя преимущества этого функционального подхода программирования.",
        "keywords": "функциональное программирование, каррирование, python, functools.partial, учебник по программированию"
      },
      "details": {
        "steps": [
          {
            "title": "Каррированная функция",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "Проверить выполнение скрипта Python 3 в временной директории",
                "file": "verify1-1.sh",
                "hint": "Пожалуйста, убедитесь, что вы выполнили все необходимые действия."
              }
            ]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    }
  ]
}
