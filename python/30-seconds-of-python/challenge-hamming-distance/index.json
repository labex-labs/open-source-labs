{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "challenge",
  "title": "Hamming Distance Calculation Challenge",
  "description": "The Hamming distance is a measure of the difference between two strings of equal length. In other words, it is the number of positions at which the corresponding symbols are different. In this challenge, you will be asked to write a function that calculates the Hamming distance between two values.",
  "meta": {
    "title": "Hamming Distance Challenge | Python Programming Tutorial",
    "description": "Learn how to calculate the Hamming distance between two integers using Python. Explore this programming challenge and improve your coding skills.",
    "keywords": "Hamming distance, Python programming, coding challenge, binary string, bit difference"
  },
  "difficulty": "Beginner",
  "time": 15,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": false,
  "details": {
    "steps": [
      {
        "title": "Hamming Distance Challenge",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify Hamming Distance Python Script",
            "file": "verify1-1.sh",
            "hint": "Please make sure you have completed the required actions.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [],
        "solutions": ["hamming_distance.py"]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md"
    },
    "assets": {
      "host01": [
        {
          "file": "test_hamming_distance.py",
          "target": "/tmp",
          "chmod": "ugo+rwx"
        },
        {
          "file": "hamming_distance.py",
          "target": "/home/labex/project",
          "chmod": "ugo+rwx"
        }
      ]
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["huduo0812", "jiaosenvip"],
  "license": {
    "name": "CC-BY-4.0",
    "url": "https://github.com/30-seconds/30-seconds-of-python/blob/master/LICENSE",
    "repo": "https://github.com/30-seconds/30-seconds-of-python"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "汉明距离计算挑战",
      "description": "汉明距离是衡量两个等长字符串差异的一种度量。换句话说，它是对应符号不同的位置数量。在这个挑战中，你将被要求编写一个函数来计算两个值之间的汉明距离。",
      "meta": {
        "title": "汉明距离挑战 | Python 编程教程",
        "description": "学习如何使用 Python 计算两个整数之间的汉明距离。探索这个编程挑战并提升你的编码技能。",
        "keywords": "汉明距离，Python 编程，编码挑战，二进制字符串，位差异"
      },
      "details": {
        "steps": [
          {
            "title": "汉明距离挑战",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "验证汉明距离 Python 脚本",
                "file": "verify1-1.sh",
                "hint": "请确保你已完成所需操作。"
              }
            ],
            "solutions": ["hamming_distance.py"]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Desafío de Cálculo de Distancia de Hamming",
      "description": "La distancia de Hamming es una medida de la diferencia entre dos cadenas de la misma longitud. En otras palabras, es el número de posiciones en las que los símbolos correspondientes son diferentes. En este desafío, se te pedirá escribir una función que calcule la distancia de Hamming entre dos valores.",
      "meta": {
        "title": "Desafío de Distancia de Hamming | Tutorial de Programación en Python",
        "description": "Aprende cómo calcular la distancia de Hamming entre dos enteros utilizando Python. Explora este desafío de programación y mejora tus habilidades de codificación.",
        "keywords": "Distancia de Hamming, Programación en Python, Desafío de codificación, Cadena binaria, Diferencia de bits"
      },
      "details": {
        "steps": [
          {
            "title": "Desafío de Distancia de Hamming",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Verificar el script de Python de Distancia de Hamming",
                "file": "verify1-1.sh",
                "hint": "Asegúrese de haber completado las acciones requeridas."
              }
            ],
            "solutions": ["hamming_distance.py"]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Défi de calcul de la distance de Hamming",
      "description": "La distance de Hamming est une mesure de la différence entre deux chaînes de même longueur. En d'autres termes, c'est le nombre de positions auxquelles les symboles correspondants sont différents. Dans ce défi, vous devrez écrire une fonction qui calcule la distance de Hamming entre deux valeurs.",
      "meta": {
        "title": "Défi de la distance de Hamming | Tutoriel de programmation Python",
        "description": "Apprenez à calculer la distance de Hamming entre deux entiers à l'aide de Python. Explorez ce défi de programmation et améliorez vos compétences de codage.",
        "keywords": "Distance de Hamming, Programmation Python, Défi de codage, Chaîne binaire, Différence binaire"
      },
      "details": {
        "steps": [
          {
            "title": "Défi de la distance de Hamming",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Vérifier le script Python de la distance de Hamming",
                "file": "verify1-1.sh",
                "hint": "Veuillez vous assurer d'avoir effectué les actions requises."
              }
            ],
            "solutions": ["hamming_distance.py"]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Hamming-Distanz-Berechnung-Herausforderung",
      "description": "Die Hamming-Distanz misst die Differenz zwischen zwei Zeichenketten gleicher Länge. Mit anderen Worten, es ist die Anzahl der Positionen, an denen die entsprechenden Symbole unterschiedlich sind. In dieser Herausforderung werden Sie aufgefordert, eine Funktion zu schreiben, die die Hamming-Distanz zwischen zwei Werten berechnet.",
      "meta": {
        "title": "Hamming-Distanz-Herausforderung | Python-Programmier-Tutorial",
        "description": "Lernen Sie, wie man die Hamming-Distanz zwischen zwei ganzen Zahlen mit Python berechnet. Entdecken Sie diese Programmierherausforderung und verbessern Sie Ihre Programmierkenntnisse.",
        "keywords": "Hamming-Distanz, Python-Programmierung, Programmierherausforderung, Binärstring, Bitunterschied"
      },
      "details": {
        "steps": [
          {
            "title": "Hamming-Distanz-Herausforderung",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Verifizieren des Python-Skripts zur Hamming-Distanz",
                "file": "verify1-1.sh",
                "hint": "Bitte stellen Sie sicher, dass Sie die erforderlichen Aktionen abgeschlossen haben."
              }
            ],
            "solutions": ["hamming_distance.py"]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "ハミング距離の計算チャレンジ",
      "description": "ハミング距離は、同じ長さの 2 つの文字列の違いを測る尺度です。言い換えると、対応するシンボルが異なる位置の数です。このチャレンジでは、2 つの値の間のハミング距離を計算する関数を書くように求められます。",
      "meta": {
        "title": "ハミング距離のチャレンジ | Python プログラミングチュートリアル",
        "description": "Python を使って 2 つの整数の間のハミング距離を計算する方法を学びましょう。このプログラミングチャレンジを探求し、コーディング技術を向上させましょう。",
        "keywords": "ハミング距離，Python プログラミング，コーディングチャレンジ，2 進数文字列，ビットの違い"
      },
      "details": {
        "steps": [
          {
            "title": "ハミング距離のチャレンジ",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "ハミング距離の Python スクリプトを検証する",
                "file": "verify1-1.sh",
                "hint": "必要な操作を完了していることを確認してください。"
              }
            ],
            "solutions": ["hamming_distance.py"]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Задача по вычислению расстояния Хэмминга",
      "description": "Расстояние Хэмминга - это мера различия между двумя строками одинаковой длины. Другими словами, это количество позиций, в которых соответствующие символы различаются. В этом испытании вам будет предложено написать функцию, которая вычисляет расстояние Хэмминга между двумя значениями.",
      "meta": {
        "title": "Задача по расстоянию Хэмминга | Руководство по программированию на Python",
        "description": "Изучите, как вычислять расстояние Хэмминга между двумя целыми числами с использованием Python. Исследуйте эту задачу по программированию и улучшите свои навыки программирования.",
        "keywords": "Расстояние Хэмминга, Программирование на Python, Задача по программированию, Двоичная строка, Разница бит"
      },
      "details": {
        "steps": [
          {
            "title": "Задача по расстоянию Хэмминга",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "Проверить скрипт на Python для расстояния Хэмминга",
                "file": "verify1-1.sh",
                "hint": "Пожалуйста, убедитесь, что вы выполнили требуемые действия."
              }
            ],
            "solutions": ["hamming_distance.py"]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    }
  ]
}
