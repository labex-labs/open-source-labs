{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "challenge",
  "title": "Longest Iterable Object Identification | Challenge",
  "description": "In this challenge, you will write a function that takes any number of iterable objects or objects with a length property and returns the longest one using the `max()` function with `len()` as the `key`.",
  "meta": {
    "title": "Longest Iterable Object Identification Challenge",
    "description": "Discover the longest iterable object in a set of inputs with this engaging programming challenge.",
    "keywords": "python playground, challenge, python, iterable, length, max, programming"
  },
  "difficulty": "Beginner",
  "time": 15,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": false,
  "details": {
    "steps": [
      {
        "title": "Longest Item",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify Python Script Execution in Temporary Directory",
            "file": "verify1-1.sh",
            "hint": "Please make sure you have completed the required actions.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [],
        "solutions": ["longest_item.py"]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md"
    },
    "assets": {
      "host01": [
        {
          "file": "test_longest_item.py",
          "target": "/tmp",
          "chmod": "ugo+rwx"
        },
        {
          "file": "longest_item.py",
          "target": "/home/labex/project",
          "chmod": "ugo+rwx"
        }
      ]
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["huduo0812", "jiaosenvip"],
  "license": {
    "name": "CC-BY-4.0",
    "url": "https://github.com/30-seconds/30-seconds-of-python/blob/master/LICENSE",
    "repo": "https://github.com/30-seconds/30-seconds-of-python"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "识别最长的可迭代对象 | 挑战",
      "description": "在这个挑战中，你将编写一个函数，该函数接受任意数量的可迭代对象或具有长度属性的对象，并使用以 `len()` 作为 `key` 的 `max()` 函数返回最长的对象。",
      "meta": {
        "title": "识别最长的可迭代对象挑战",
        "description": "通过这个有趣的编程挑战，找出一组输入中最长的可迭代对象。",
        "keywords": "Python 游乐场，挑战，Python, 可迭代对象，长度，最大值，编程"
      },
      "details": {
        "steps": [
          {
            "title": "最长的元素",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "在临时目录中验证 Python 脚本执行情况",
                "file": "verify1-1.sh",
                "hint": "请确保你已完成所需操作。"
              }
            ],
            "solutions": ["longest_item.py"]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Identificación del objeto iterable más largo | Desafío",
      "description": "En este desafío, escribirás una función que tome cualquier número de objetos iterables o objetos con una propiedad de longitud y devuelva el más largo utilizando la función `max()` con `len()` como `clave`.",
      "meta": {
        "title": "Desafío de identificación del objeto iterable más largo",
        "description": "Descubre el objeto iterable más largo en un conjunto de entradas con este atractivo desafío de programación.",
        "keywords": "python playground, desafío, python, iterable, longitud, max, programación"
      },
      "details": {
        "steps": [
          {
            "title": "Elemento más largo",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Verificar la ejecución del script de Python en el directorio temporal",
                "file": "verify1-1.sh",
                "hint": "Asegúrese de haber completado las acciones requeridas."
              }
            ],
            "solutions": ["longest_item.py"]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Identification de l'objet itérable le plus long | Défi",
      "description": "Dans ce défi, vous devrez écrire une fonction qui prend un nombre quelconque d'objets itérables ou d'objets possédant une propriété de longueur et renvoie celui qui est le plus long en utilisant la fonction `max()` avec `len()` comme `clé`.",
      "meta": {
        "title": "Défi d'identification de l'objet itérable le plus long",
        "description": "Découvrez l'objet itérable le plus long dans un ensemble d'entrées avec ce captivant défi de programmation.",
        "keywords": "plateforme de codage Python, défi, Python, itérable, longueur, max, programmation"
      },
      "details": {
        "steps": [
          {
            "title": "Plus long élément",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Vérifier l'exécution du script Python dans le répertoire temporaire",
                "file": "verify1-1.sh",
                "hint": "Veuillez vous assurer d'avoir effectué les actions requises."
              }
            ],
            "solutions": ["longest_item.py"]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Identifizierung des längsten iterierbaren Objekts | Challenge",
      "description": "In dieser Herausforderung schreiben Sie eine Funktion, die beliebig viele iterierbare Objekte oder Objekte mit einer Länge-Eigenschaft annimmt und das längste mithilfe der `max()`-Funktion mit `len()` als `key` zurückgibt.",
      "meta": {
        "title": "Herausforderung zur Identifizierung des längsten iterierbaren Objekts",
        "description": "Entdecken Sie das längste iterierbare Objekt in einer Reihe von Eingaben mit dieser spannenden Programmierherausforderung.",
        "keywords": "Python-Spielfeld, Challenge, Python, iterierbar, Länge, max, Programmierung"
      },
      "details": {
        "steps": [
          {
            "title": "Das längste Element",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Verifizieren der Ausführung des Python-Skripts im temporären Verzeichnis",
                "file": "verify1-1.sh",
                "hint": "Bitte stellen Sie sicher, dass Sie die erforderlichen Aktionen abgeschlossen haben."
              }
            ],
            "solutions": ["longest_item.py"]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "最長の反復可能オブジェクトの識別 | チャレンジ",
      "description": "このチャレンジでは、任意の数の反復可能なオブジェクトまたは長さプロパティを持つオブジェクトを引数にとり、`len()` を `key` とした `max()` 関数を使用して最長のものを返す関数を書きます。",
      "meta": {
        "title": "最長の反復可能オブジェクトの識別チャレンジ",
        "description": "この魅力的なプログラミングチャレンジで、入力セット内の最長の反復可能オブジェクトを見つけましょう。",
        "keywords": "python プレイグラウンド，チャレンジ，python, 反復可能，長さ，max, プログラミング"
      },
      "details": {
        "steps": [
          {
            "title": "最長の要素",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "一時ディレクトリでの Python スクリプトの実行を確認する",
                "file": "verify1-1.sh",
                "hint": "必要な操作を完了していることを確認してください。"
              }
            ],
            "solutions": ["longest_item.py"]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Идентификация самого длинного итерируемого объекта | Вызов",
      "description": "В этом вызове вы напишете функцию, которая принимает любое количество итерируемых объектов или объектов с свойством длины и возвращает самый длинный с использованием функции `max()` с `len()` в качестве `ключа`.",
      "meta": {
        "title": "Вызов по идентификации самого длинного итерируемого объекта",
        "description": "Откройте самый длинный итерируемый объект в наборе входных данных с помощью этого увлекательного программирования вызовов.",
        "keywords": "python playground, вызов, python, итерируемый, длина, максимум, программирование"
      },
      "details": {
        "steps": [
          {
            "title": "Самый длинный элемент",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "Проверить выполнение Python-скрипта в временной директории",
                "file": "verify1-1.sh",
                "hint": "Пожалуйста, убедитесь, что вы выполнили требуемые действия."
              }
            ],
            "solutions": ["longest_item.py"]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    }
  ]
}
