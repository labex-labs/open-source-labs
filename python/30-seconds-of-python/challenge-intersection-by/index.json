{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "challenge",
  "title": "List Intersection Based on Function | Challenge",
  "description": "In Python, we can find the intersection of two lists using the set() and intersection() methods. However, what if we want to find the intersection based on a specific function applied to each element in both lists? In this challenge, you will create a function that takes in two lists and a function, and returns a list of elements that exist in both lists, after applying the provided function to each list element of both.",
  "meta": {
    "title": "Python List Intersection | Programming Tutorials | Challenge",
    "description": "Learn how to find the intersection of two lists in Python based on a specific function applied to each element. Enhance your programming skills with this helpful tutorial.",
    "keywords": "Python, List Intersection, Programming Tutorials, Coding Challenges, Function Application"
  },
  "difficulty": "Beginner",
  "time": 15,
  "hidden": true,
  "fee_type": "free",
  "show_in_tutorial": false,
  "details": {
    "steps": [
      {
        "title": "List Intersection Based on Function",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify Intersection By Python3 Test",
            "file": "verify1-1.sh",
            "hint": "Please make sure you have completed the required actions.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "python/build_in_functions",
          "python/comments",
          "python/conditional_statements",
          "python/data_collections",
          "python/for_loops",
          "python/function_definition",
          "python/list_comprehensions",
          "python/lists",
          "python/tuples",
          "python/variables_data_types"
        ],
        "solutions": ["intersection_by.py"]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md"
    },
    "assets": {
      "host01": [
        {
          "file": "test_intersection_by.py",
          "target": "/tmp",
          "chmod": "ugo+rwx"
        },
        {
          "file": "intersection_by.py",
          "target": "/home/labex/project",
          "chmod": "ugo+rwx"
        }
      ]
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["huduo0812", "jiaosenvip"],
  "license": {
    "name": "CC-BY-4.0",
    "url": "https://github.com/30-seconds/30-seconds-of-python/blob/master/LICENSE",
    "repo": "https://github.com/30-seconds/30-seconds-of-python"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "基于函数的列表交集 | 挑战",
      "description": "在 Python 中，我们可以使用 set() 和 intersection() 方法找到两个列表的交集。但是，如果我们想基于应用于两个列表中每个元素的特定函数来找到交集呢？在这个挑战中，你将创建一个函数，该函数接受两个列表和一个函数，并在将提供的函数应用于两个列表的每个元素后，返回两个列表中都存在的元素列表。",
      "meta": {
        "title": "Python 列表交集 | 编程教程 | 挑战",
        "description": "学习如何在 Python 中基于应用于每个元素的特定函数找到两个列表的交集。通过这个有用的教程提升你的编程技能。",
        "keywords": "Python, 列表交集，编程教程，编码挑战，函数应用"
      },
      "details": {
        "steps": [
          {
            "title": "基于函数的列表交集",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "通过 Python3 测试验证交集",
                "file": "verify1-1.sh",
                "hint": "请确保你已完成所需操作。"
              }
            ],
            "solutions": ["intersection_by.py"]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Intersección de listas basada en función | Desafío",
      "description": "En Python, podemos encontrar la intersección de dos listas utilizando los métodos set() e intersection(). Sin embargo, ¿y si queremos encontrar la intersección basada en una función específica aplicada a cada elemento de ambas listas? En este desafío, crearás una función que tome dos listas y una función, y devuelva una lista de elementos que existen en ambas listas, después de aplicar la función proporcionada a cada elemento de ambas listas.",
      "meta": {
        "title": "Intersección de listas en Python | Tutoriales de programación | Desafío",
        "description": "Aprende cómo encontrar la intersección de dos listas en Python basada en una función específica aplicada a cada elemento. Mejora tus habilidades de programación con este útil tutorial.",
        "keywords": "Python, Intersección de listas, Tutoriales de programación, Retos de codificación, Aplicación de funciones"
      },
      "details": {
        "steps": [
          {
            "title": "Intersección de listas basada en función",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Verificar intersección con Prueba de Python3",
                "file": "verify1-1.sh",
                "hint": "Asegúrese de haber completado las acciones requeridas."
              }
            ],
            "solutions": ["intersection_by.py"]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Intersection de listes basée sur une fonction | Défi",
      "description": "En Python, on peut trouver l'intersection de deux listes en utilisant les méthodes set() et intersection(). Cependant, que se passe-t-il si on veut trouver l'intersection en fonction d'une fonction spécifique appliquée à chaque élément des deux listes? Dans ce défi, vous devrez créer une fonction qui prend deux listes et une fonction, et qui renvoie une liste d'éléments qui existent dans les deux listes, après avoir appliqué la fonction fournie à chaque élément des deux listes.",
      "meta": {
        "title": "Intersection de listes Python | Didacticiels de programmation | Défi",
        "description": "Apprenez à trouver l'intersection de deux listes en Python en fonction d'une fonction spécifique appliquée à chaque élément. Améliorez vos compétences en programmation avec ce didacticiel utile.",
        "keywords": "Python, Intersection de listes, Didacticiels de programmation, Defis de codage, Application de fonction"
      },
      "details": {
        "steps": [
          {
            "title": "Intersection de listes basée sur une fonction",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Vérifier l'intersection avec le test Python3",
                "file": "verify1-1.sh",
                "hint": "Veuillez vous assurer d'avoir effectué les actions requises."
              }
            ],
            "solutions": ["intersection_by.py"]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Listeinschnitt basierend auf Funktion | Challenge",
      "description": "In Python können wir die Schnittmenge zweier Listen mit den Methoden set() und intersection() finden. Was aber, wenn wir die Schnittmenge basierend auf einer spezifischen Funktion, die auf jedes Element in beiden Listen angewendet wird, finden möchten? In dieser Challenge werden Sie eine Funktion erstellen, die zwei Listen und eine Funktion annimmt und eine Liste von Elementen zurückgibt, die in beiden Listen existieren, nachdem die bereitgestellte Funktion auf jedes Listenelement beider Listen angewendet wurde.",
      "meta": {
        "title": "Python Listeinschnitt | Programmierungstutorials | Challenge",
        "description": "Lernen Sie, wie man die Schnittmenge zweier Listen in Python basierend auf einer spezifischen Funktion, die auf jedes Element angewendet wird, findet. Verbessern Sie Ihre Programmierkenntnisse mit diesem hilfreichen Tutorial.",
        "keywords": "Python, Listeinschnitt, Programmierungstutorials, Coding Challenges, Funktionsanwendung"
      },
      "details": {
        "steps": [
          {
            "title": "Listeinschnitt basierend auf Funktion",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Verifiziere Schnittmenge mit Python3-Test",
                "file": "verify1-1.sh",
                "hint": "Stellen Sie sicher, dass Sie die erforderlichen Aktionen abgeschlossen haben."
              }
            ],
            "solutions": ["intersection_by.py"]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "関数に基づくリストの共通部分 | チャレンジ",
      "description": "Python では、set() と intersection() メソッドを使って 2 つのリストの共通部分を見つけることができます。しかし、両方のリストの各要素に適用される特定の関数に基づいて共通部分を見つけたい場合はどうでしょうか。このチャレンジでは、2 つのリストと関数を受け取り、両方のリストの各要素に提供された関数を適用した後、両方のリストに存在する要素のリストを返す関数を作成します。",
      "meta": {
        "title": "Python のリストの共通部分 | プログラミング チュートリアル | チャレンジ",
        "description": "Python で特定の関数を各要素に適用することに基づいて 2 つのリストの共通部分を見つける方法を学びましょう。この有益なチュートリアルでプログラミングスキルを向上させましょう。",
        "keywords": "Python, リストの共通部分，プログラミング チュートリアル，コーディング チャレンジ，関数の適用"
      },
      "details": {
        "steps": [
          {
            "title": "関数に基づくリストの共通部分",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "Python3 テストによる共通部分の検証",
                "file": "verify1-1.sh",
                "hint": "必要な操作を完了していることを確認してください。"
              }
            ],
            "solutions": ["intersection_by.py"]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Пересечение списков на основе функции | Вызов",
      "description": "В Python мы можем найти пересечение двух списков с использованием методов set() и intersection(). Однако, что если мы хотим найти пересечение на основе определенной функции, применяемой к каждому элементу обоих списков? В этом вызове вы создадите функцию, которая принимает два списка и функцию, и возвращает список элементов, которые присутствуют в обоих списках, после применения указанной функции к каждому элементу обоих списков.",
      "meta": {
        "title": "Пересечение списков Python | Руководства по программированию | Вызов",
        "description": "Изучите, как найти пересечение двух списков в Python на основе определенной функции, применяемой к каждому элементу. Повысьте свои навыки программирования с помощью этого полезного руководства.",
        "keywords": "Python, Пересечение списков, Руководства по программированию, Задачи по программированию, Применение функции"
      },
      "details": {
        "steps": [
          {
            "title": "Пересечение списков на основе функции",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "Проверить пересечение с помощью теста Python3",
                "file": "verify1-1.sh",
                "hint": "Пожалуйста, убедитесь, что вы выполнили все необходимые действия."
              }
            ],
            "solutions": ["intersection_by.py"]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    }
  ]
}
