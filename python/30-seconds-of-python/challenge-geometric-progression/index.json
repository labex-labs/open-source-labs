{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "challenge",
  "title": "Geometric Progression Sequence Generator | Challenge",
  "description": "In mathematics, a geometric progression is a sequence of numbers in which each term after the first is found by multiplying the previous one by a fixed, non-zero number called the common ratio. In this challenge, you will create a function that initializes a list containing the numbers in the specified range where start and end are inclusive and the ratio between two terms is step.",
  "meta": {
    "title": "Geometric Progression Challenge | Python Programming",
    "description": "Learn how to create a Python function that generates a geometric progression sequence based on the provided parameters.",
    "keywords": "geometric progression, Python programming, math, range, list comprehension"
  },
  "difficulty": "Beginner",
  "time": 15,
  "hidden": true,
  "fee_type": "free",
  "show_in_tutorial": false,
  "details": {
    "steps": [
      {
        "title": "Geometric Progression Challenge",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify Geometric Progression Python Test",
            "file": "verify1-1.sh",
            "hint": "Please make sure you have completed the required actions.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "python/build_in_functions",
          "python/comments",
          "python/default_arguments",
          "python/for_loops",
          "python/function_definition",
          "python/importing_modules",
          "python/list_comprehensions",
          "python/lists",
          "python/math_random",
          "python/standard_libraries",
          "python/tuples",
          "python/using_packages"
        ],
        "solutions": ["geometric_progression.py"]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md"
    },
    "assets": {
      "host01": [
        {
          "file": "test_geometric_progression.py",
          "target": "/tmp",
          "chmod": "ugo+rwx"
        },
        {
          "file": "geometric_progression.py",
          "target": "/home/labex/project",
          "chmod": "ugo+rwx"
        }
      ]
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["huduo0812", "jiaosenvip"],
  "license": {
    "name": "CC-BY-4.0",
    "url": "https://github.com/30-seconds/30-seconds-of-python/blob/master/LICENSE",
    "repo": "https://github.com/30-seconds/30-seconds-of-python"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "几何级数序列生成器 | 挑战",
      "description": "在数学中，几何级数是一个数字序列，其中第一个数字之后的每个数字都是通过将前一个数字乘以一个固定的非零数字（称为公比）来得到的。在这个挑战中，你将创建一个函数，该函数初始化一个列表，其中包含指定范围内的数字，其中start和end是包含在内的，并且两个数字之间的比率是step。",
      "meta": {
        "title": "几何级数挑战 | Python编程",
        "description": "学习如何创建一个基于提供的参数生成几何级数序列的Python函数。",
        "keywords": "几何级数, Python编程, 数学, 范围, 列表推导式"
      },
      "details": {
        "steps": [
          {
            "title": "几何级数挑战",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "验证几何级数Python测试",
                "file": "verify1-1.sh",
                "hint": "请确保你已完成所需操作。"
              }
            ],
            "solutions": ["geometric_progression.py"]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    }
  ]
}
