{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "challenge",
  "title": "Check if a Number is Even | Challenge",
  "description": "In Python, we can easily check if a number is even or odd. In this challenge, you will be tasked with writing a function that checks whether a given number is even or not.",
  "meta": {
    "title": "Check if a Number is Even: Python Challenge",
    "description": "Learn how to write a Python function that determines if a given number is even or odd.",
    "keywords": "odd number, python, even number, programming challenge, coding tutorial"
  },
  "difficulty": "Beginner",
  "time": 15,
  "hidden": true,
  "fee_type": "free",
  "show_in_tutorial": false,
  "details": {
    "steps": [
      {
        "title": "Check if a Number is Even",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify Python Script Execution",
            "file": "verify1-1.sh",
            "hint": "Please make sure you have completed the required actions.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "python/booleans",
          "python/comments",
          "python/function_definition"
        ],
        "solutions": ["is_even.py"]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md"
    },
    "assets": {
      "host01": [
        {
          "file": "test_is_even.py",
          "target": "/tmp",
          "chmod": "ugo+rwx"
        },
        {
          "file": "is_even.py",
          "target": "/home/labex/project",
          "chmod": "ugo+rwx"
        }
      ]
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["huduo0812", "jiaosenvip"],
  "license": {
    "name": "CC-BY-4.0",
    "url": "https://github.com/30-seconds/30-seconds-of-python/blob/master/LICENSE",
    "repo": "https://github.com/30-seconds/30-seconds-of-python"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "检查一个数字是否为偶数 | 挑战",
      "description": "在 Python 中，我们可以轻松检查一个数字是偶数还是奇数。在这个挑战中，你将负责编写一个函数来检查给定的数字是否为偶数。",
      "meta": {
        "title": "检查数字是否为偶数：Python 挑战",
        "description": "学习如何编写一个 Python 函数来确定给定数字是偶数还是奇数。",
        "keywords": "奇数，Python, 偶数，编程挑战，编码教程"
      },
      "details": {
        "steps": [
          {
            "title": "检查一个数字是否为偶数",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "验证 Python 脚本执行情况",
                "file": "verify1-1.sh",
                "hint": "请确保你已完成所需操作。"
              }
            ],
            "solutions": ["is_even.py"]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Comprobar si un número es par | Desafío",
      "description": "En Python, podemos comprobar fácilmente si un número es par o impar. En este desafío, tendrás la tarea de escribir una función que compruebe si un número dado es par o no.",
      "meta": {
        "title": "Comprobar si un número es par: Desafío de Python",
        "description": "Aprende cómo escribir una función de Python que determine si un número dado es par o impar.",
        "keywords": "número impar, python, número par, desafío de programación, tutorial de codificación"
      },
      "details": {
        "steps": [
          {
            "title": "Comprobar si un número es par",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Verificar la ejecución del script de Python",
                "file": "verify1-1.sh",
                "hint": "Asegúrese de haber completado las acciones requeridas."
              }
            ],
            "solutions": ["is_even.py"]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Vérifier si un nombre est pair | Défi",
      "description": "En Python, il est facile de vérifier si un nombre est pair ou impair. Dans ce défi, vous devrez écrire une fonction qui vérifie si un nombre donné est pair ou non.",
      "meta": {
        "title": "Vérifier si un nombre est pair : Défi Python",
        "description": "Apprenez à écrire une fonction Python qui détermine si un nombre donné est pair ou impair.",
        "keywords": "nombre impair, python, nombre pair, défi de programmation, tutoriel de codage"
      },
      "details": {
        "steps": [
          {
            "title": "Vérifier si un nombre est pair",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Vérifier l'exécution du script Python",
                "file": "verify1-1.sh",
                "hint": "Veuillez vous assurer d'avoir effectué les actions requises."
              }
            ],
            "solutions": ["is_even.py"]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Überprüfen, ob eine Zahl gerade ist | Herausforderung",
      "description": "In Python können wir leicht überprüfen, ob eine Zahl gerade oder ungerade ist. In dieser Herausforderung müssen Sie eine Funktion schreiben, die überprüft, ob eine gegebene Zahl gerade ist oder nicht.",
      "meta": {
        "title": "Überprüfen, ob eine Zahl gerade ist: Python-Herausforderung",
        "description": "Lernen Sie, wie Sie eine Python-Funktion schreiben, die bestimmt, ob eine gegebene Zahl gerade oder ungerade ist.",
        "keywords": "ungerade Zahl, Python, gerade Zahl, Programmierungschallenge, Codierungstutorial"
      },
      "details": {
        "steps": [
          {
            "title": "Überprüfen, ob eine Zahl gerade ist",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Verifizieren der Ausführung des Python-Skripts",
                "file": "verify1-1.sh",
                "hint": "Bitte stellen Sie sicher, dass Sie die erforderlichen Aktionen abgeschlossen haben."
              }
            ],
            "solutions": ["is_even.py"]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "数が偶数かどうかを確認する | チャレンジ",
      "description": "Python では、数が偶数か奇数かを簡単に確認できます。このチャレンジでは、与えられた数が偶数かどうかをチェックする関数を書くことが求められます。",
      "meta": {
        "title": "数が偶数かどうかを確認する：Python チャレンジ",
        "description": "与えられた数が偶数か奇数かを判定する Python 関数の書き方を学びましょう。",
        "keywords": "奇数，Python, 偶数，プログラミングチャレンジ，コーディングチュートリアル"
      },
      "details": {
        "steps": [
          {
            "title": "数が偶数かどうかを確認する",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "Python スクリプトの実行を確認する",
                "file": "verify1-1.sh",
                "hint": "必要な操作を完了していることを確認してください。"
              }
            ],
            "solutions": ["is_even.py"]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Проверить, является ли число четным | Вызов",
      "description": "В Python мы можем легко проверить, является ли число четным или нечетным. В этом испытании вам предстоит написать функцию, которая проверяет, является ли заданное число четным или нет.",
      "meta": {
        "title": "Проверить, является ли число четным: Вызов на Python",
        "description": "Изучите, как написать функцию на Python, которая определяет, является ли заданное число четным или нечетным.",
        "keywords": "нечетное число, python, четное число, вызов на программирование, учебник по кодированию"
      },
      "details": {
        "steps": [
          {
            "title": "Проверить, является ли число четным",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "Проверить выполнение сценария на Python",
                "file": "verify1-1.sh",
                "hint": "Пожалуйста, убедитесь, что вы выполнили требуемые действия."
              }
            ],
            "solutions": ["is_even.py"]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    }
  ]
}
