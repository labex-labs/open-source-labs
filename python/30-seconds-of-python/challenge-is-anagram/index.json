{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "challenge",
  "title": "Anagram Detection Challenge",
  "description": "In this challenge, you will be asked to write a function that checks if two strings are anagrams of each other, ignoring case, spaces, punctuation, and special characters, and using the `collections.Counter` class to count the resulting characters for comparison.",
  "meta": {
    "title": "Anagram Challenge | Python Programming",
    "description": "Learn how to write a Python function that checks if two strings are anagrams of each other. Improve your coding skills with this programming tutorial.",
    "keywords": "anagram, python, programming, string manipulation, coding challenge"
  },
  "difficulty": "Beginner",
  "time": 15,
  "hidden": true,
  "fee_type": "free",
  "show_in_tutorial": false,
  "details": {
    "steps": [
      {
        "title": "String Anagram Challenge",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify Anagram Python Script Execution",
            "file": "verify1-1.sh",
            "hint": "Please make sure you have completed the required actions.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "python/booleans",
          "python/comments",
          "python/conditional_statements",
          "python/for_loops",
          "python/function_definition",
          "python/importing_modules",
          "python/standard_libraries",
          "python/tuples",
          "python/using_packages"
        ],
        "solutions": ["is_anagram.py"]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md"
    },
    "assets": {
      "host01": [
        {
          "file": "test_is_anagram.py",
          "target": "/tmp",
          "chmod": "ugo+rwx"
        },
        {
          "file": "is_anagram.py",
          "target": "/home/labex/project",
          "chmod": "ugo+rwx"
        }
      ]
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["huduo0812", "jiaosenvip"],
  "license": {
    "name": "CC-BY-4.0",
    "url": "https://github.com/30-seconds/30-seconds-of-python/blob/master/LICENSE",
    "repo": "https://github.com/30-seconds/30-seconds-of-python"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "变位词检测挑战",
      "description": "在这个挑战中，你将被要求编写一个函数，该函数用于检查两个字符串是否为彼此的变位词，不区分大小写，忽略空格、标点符号和特殊字符，并使用 `collections.Counter` 类对结果字符进行计数以进行比较。",
      "meta": {
        "title": "变位词挑战 | Python 编程",
        "description": "学习如何编写一个 Python 函数来检查两个字符串是否为彼此的变位词。通过本编程教程提升你的编码技能。",
        "keywords": "变位词, Python, 编程, 字符串操作, 编码挑战"
      },
      "details": {
        "steps": [
          {
            "title": "字符串变位词挑战",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "验证变位词 Python 脚本执行情况",
                "file": "verify1-1.sh",
                "hint": "请确保你已完成所需操作。"
              }
            ],
            "solutions": ["is_anagram.py"]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Desafío de Detección de Anagramas",
      "description": "En este desafío, se te pedirá escribir una función que compruebe si dos cadenas son anagramas la una de la otra, ignorando mayúsculas y minúsculas, espacios, signos de puntuación y caracteres especiales, y utilizando la clase `collections.Counter` para contar los caracteres resultantes para la comparación.",
      "meta": {
        "title": "Desafío de Anagramas | Programación en Python",
        "description": "Aprende cómo escribir una función en Python que compruebe si dos cadenas son anagramas la una de la otra. Mejora tus habilidades de codificación con este tutorial de programación.",
        "keywords": "anagrama, python, programación, manipulación de cadenas, desafío de codificación"
      },
      "details": {
        "steps": [
          {
            "title": "Desafío de Anagramas de Cadenas",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Verificar la ejecución del script de Python de Anagramas",
                "file": "verify1-1.sh",
                "hint": "Asegúrese de haber completado las acciones requeridas."
              }
            ],
            "solutions": ["is_anagram.py"]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Défi de détection d'anagrammes",
      "description": "Dans ce défi, vous devrez écrire une fonction qui vérifie si deux chaînes de caractères sont des anagrammes l'une de l'autre, en ignorant la casse, les espaces, la ponctuation et les caractères spéciaux, et en utilisant la classe `collections.Counter` pour compter les caractères résultants pour la comparaison.",
      "meta": {
        "title": "Défi d'anagrammes | Programmation Python",
        "description": "Apprenez à écrire une fonction Python qui vérifie si deux chaînes de caractères sont des anagrammes l'une de l'autre. Améliorez vos compétences de codage avec ce tutoriel de programmation.",
        "keywords": "anagramme, python, programmation, manipulation de chaînes de caractères, défi de codage"
      },
      "details": {
        "steps": [
          {
            "title": "Défi d'anagramme de chaîne de caractères",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Vérifier l'exécution du script Python d'anagramme",
                "file": "verify1-1.sh",
                "hint": "Veuillez vous assurer d'avoir effectué les actions requises."
              }
            ],
            "solutions": ["is_anagram.py"]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Anagram-Erkennung-Herausforderung",
      "description": "In dieser Herausforderung werden Sie aufgefordert, eine Funktion zu schreiben, die überprüft, ob zwei Zeichenketten einander Anagramme sind, wobei die Groß- und Kleinschreibung, Leerzeichen, Satzzeichen und Sonderzeichen ignoriert werden, und die `collections.Counter`-Klasse verwendet wird, um die resultierenden Zeichen zu zählen und zu vergleichen.",
      "meta": {
        "title": "Anagram-Herausforderung | Python-Programmierung",
        "description": "Lernen Sie, wie Sie eine Python-Funktion schreiben, die überprüft, ob zwei Zeichenketten einander Anagramme sind. Verbessern Sie Ihre Programmierkenntnisse mit diesem Programmier-Tutorial.",
        "keywords": "Anagramm, Python, Programmierung, Zeichenkettenmanipulation, Programmier-Herausforderung"
      },
      "details": {
        "steps": [
          {
            "title": "String-Anagram-Herausforderung",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Verifizieren der Ausführung des Python-Skripts für Anagramme",
                "file": "verify1-1.sh",
                "hint": "Bitte stellen Sie sicher, dass Sie die erforderlichen Aktionen abgeschlossen haben."
              }
            ],
            "solutions": ["is_anagram.py"]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "アナグラム検出チャレンジ",
      "description": "このチャレンジでは、大文字小文字、空白、句読点、特殊文字を無視し、`collections.Counter` クラスを使って結果となる文字を数えて比較することで、2つの文字列が互いにアナグラムであるかどうかをチェックする関数を書くように求められます。",
      "meta": {
        "title": "アナグラムチャレンジ | Pythonプログラミング",
        "description": "2つの文字列が互いにアナグラムであるかどうかをチェックするPython関数を書く方法を学びましょう。このプログラミングチュートリアルでコーディングスキルを向上させましょう。",
        "keywords": "アナグラム, Python, プログラミング, 文字列操作, コーディングチャレンジ"
      },
      "details": {
        "steps": [
          {
            "title": "文字列のアナグラムチャレンジ",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "アナグラムのPythonスクリプト実行を確認する",
                "file": "verify1-1.sh",
                "hint": "必要な操作を完了していることを確認してください。"
              }
            ],
            "solutions": ["is_anagram.py"]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Задача по определению анаграмм",
      "description": "В этом испытании вам будет предложено написать функцию, которая проверяет, являются ли две строки анаграммами друг друга, игнорируя регистр, пробелы, знаки препинания и специальные символы, и используя класс `collections.Counter` для подсчета получившихся символов для сравнения.",
      "meta": {
        "title": "Задача по анаграммам | Программирование на Python",
        "description": "Изучите, как написать функцию на Python, которая проверяет, являются ли две строки анаграммами друг друга. Повысьте свои навыки программирования с помощью этого учебника по программированию.",
        "keywords": "анаграмма, python, программирование, манипуляция строками, задача по программированию"
      },
      "details": {
        "steps": [
          {
            "title": "Задача по анаграммам строк",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "Проверить выполнение скрипта на Python для анаграмм",
                "file": "verify1-1.sh",
                "hint": "Пожалуйста, убедитесь, что вы выполнили все необходимые действия."
              }
            ],
            "solutions": ["is_anagram.py"]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    }
  ]
}
