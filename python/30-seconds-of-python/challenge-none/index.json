{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "challenge",
  "title": "Test if every list element is falsy | Challenge",
  "description": "In Python, we can use the all() function to check if all elements in a list are truthy. But what if we want to check if every element in a list is falsy? In this challenge, you will need to create a function that checks if every element in a list is falsy.",
  "meta": {
    "title": "Python Falsy List Check | Programming Tutorials",
    "description": "Learn how to use the Python 'none()' function to check if all elements in a list are falsy. Improve your programming skills with this engaging tutorial.",
    "keywords": "Python, programming, falsy, list, none, function, tutorial"
  },
  "difficulty": "Beginner",
  "time": 15,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": false,
  "details": {
    "steps": [
      {
        "title": "Test if every list element is falsy",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify Python Script Execution in Temporary Directory",
            "file": "verify1-1.sh",
            "hint": "Please make sure you have completed the required actions.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [],
        "solutions": ["none.py"]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md"
    },
    "assets": {
      "host01": [
        {
          "file": "test_none.py",
          "target": "/tmp",
          "chmod": "ugo+rwx"
        },
        {
          "file": "none.py",
          "target": "/home/labex/project",
          "chmod": "ugo+rwx"
        }
      ]
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["huduo0812", "jiaosenvip"],
  "license": {
    "name": "CC-BY-4.0",
    "url": "https://github.com/30-seconds/30-seconds-of-python/blob/master/LICENSE",
    "repo": "https://github.com/30-seconds/30-seconds-of-python"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "测试列表中的每个元素是否都为假值 | 挑战",
      "description": "在 Python 中，我们可以使用 all() 函数来检查列表中的所有元素是否都为真值。但如果我们想检查列表中的每个元素是否都为假值呢？在这个挑战中，你需要创建一个函数来检查列表中的每个元素是否都为假值。",
      "meta": {
        "title": "Python 检查列表元素是否全为假值 | 编程教程",
        "description": "学习如何使用 Python 的 'none()' 函数来检查列表中的所有元素是否都为假值。通过这个引人入胜的教程提升你的编程技能。",
        "keywords": "Python, 编程，假值，列表，none, 函数，教程"
      },
      "details": {
        "steps": [
          {
            "title": "测试列表中的每个元素是否都为假值",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "验证在临时目录中执行 Python 脚本",
                "file": "verify1-1.sh",
                "hint": "请确保你已完成所需操作。"
              }
            ],
            "solutions": ["none.py"]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Comprueba si cada elemento de una lista es falso | Desafío",
      "description": "En Python, podemos usar la función all() para comprobar si todos los elementos de una lista son valores verdaderos. Pero ¿y si queremos comprobar si cada elemento de una lista es falso? En este desafío, tendrás que crear una función que compruebe si cada elemento de una lista es falso.",
      "meta": {
        "title": "Comprobación de listas falsas en Python | Tutoriales de programación",
        "description": "Aprende cómo usar la función 'none()' de Python para comprobar si todos los elementos de una lista son falsos. Mejora tus habilidades de programación con este atractivo tutorial.",
        "keywords": "Python, programación, falso, lista, ninguno, función, tutorial"
      },
      "details": {
        "steps": [
          {
            "title": "Comprueba si cada elemento de una lista es falso",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Verifica la ejecución del script de Python en el directorio temporal",
                "file": "verify1-1.sh",
                "hint": "Asegúrate de haber completado las acciones requeridas."
              }
            ],
            "solutions": ["none.py"]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Vérifiez si chaque élément de la liste est considéré comme faux (falsy) | Défi",
      "description": "En Python, on peut utiliser la fonction `all()` pour vérifier si tous les éléments d'une liste sont considérés comme vrais (`truthy`). Mais que faire si on veut vérifier si chaque élément d'une liste est considéré comme faux (`falsy`)? Dans ce défi, vous devrez créer une fonction qui vérifie si chaque élément d'une liste est considéré comme faux (`falsy`).",
      "meta": {
        "title": "Vérification de liste fausse (falsy) en Python | Didacticiels de programmation",
        "description": "Découvrez comment utiliser la fonction Python `none()` pour vérifier si tous les éléments d'une liste sont considérés comme faux (`falsy`). Améliorez vos compétences en programmation avec ce tutoriel captivant.",
        "keywords": "Python, programmation, fausse (`falsy`), liste, none, fonction, tutoriel"
      },
      "details": {
        "steps": [
          {
            "title": "Vérifiez si chaque élément de la liste est considéré comme faux (falsy)",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Vérifiez l'exécution du script Python dans le répertoire temporaire",
                "file": "verify1-1.sh",
                "hint": "Veuillez vous assurer d'avoir effectué les actions requises."
              }
            ],
            "solutions": ["none.py"]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Testen, ob jedes Listenelement falsch ist | Herausforderung",
      "description": "In Python können wir die all()-Funktion verwenden, um zu überprüfen, ob alle Elemente in einer Liste wahrheitswertig sind. Aber was tun, wenn wir überprüfen möchten, ob jedes Element in einer Liste falsch ist? In dieser Herausforderung müssen Sie eine Funktion erstellen, die überprüft, ob jedes Element in einer Liste falsch ist.",
      "meta": {
        "title": "Python-Falsch-Liste-Prüfung | Programmier-Tutorials",
        "description": "Lernen Sie, wie Sie die Python-'none()'-Funktion verwenden, um zu überprüfen, ob alle Elemente in einer Liste falsch sind. Verbessern Sie Ihre Programmierkenntnisse mit diesem ansprechenden Tutorial.",
        "keywords": "Python, Programmierung, falsch, Liste, none, Funktion, Tutorial"
      },
      "details": {
        "steps": [
          {
            "title": "Testen, ob jedes Listenelement falsch ist",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Verifizieren der Ausführung eines Python-Skripts im temporären Verzeichnis",
                "file": "verify1-1.sh",
                "hint": "Bitte stellen Sie sicher, dass Sie die erforderlichen Aktionen abgeschlossen haben."
              }
            ],
            "solutions": ["none.py"]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "すべてのリスト要素が偽であるかどうかをテストする | チャレンジ",
      "description": "Python では、リストのすべての要素が真であるかどうかを確認するには all() 関数を使用できます。しかし、リストのすべての要素が偽であることを確認したい場合はどうでしょうか。このチャレンジでは、リストのすべての要素が偽であることを確認する関数を作成する必要があります。",
      "meta": {
        "title": "Python の偽のリストチェック | プログラミングチュートリアル",
        "description": "Python の'none()'関数を使用して、リストのすべての要素が偽であるかどうかを確認する方法を学びましょう。この魅力的なチュートリアルでプログラミングスキルを向上させましょう。",
        "keywords": "Python, プログラミング，偽，リスト，なし，関数，チュートリアル"
      },
      "details": {
        "steps": [
          {
            "title": "すべてのリスト要素が偽であるかどうかをテストする",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "一時ディレクトリでの Python スクリプトの実行を確認する",
                "file": "verify1-1.sh",
                "hint": "必要な操作を完了していることを確認してください。"
              }
            ],
            "solutions": ["none.py"]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Проверить, являются ли все элементы списка ложными | Вызов",
      "description": "В Python мы можем использовать функцию all() для проверки, являются ли все элементы списка истинными. Но что, если мы хотим проверить, являются ли все элементы списка ложными? В этом вызове вам нужно будет создать функцию, которая проверяет, являются ли все элементы списка ложными.",
      "meta": {
        "title": "Проверка ложных элементов списка на Python | Руководства по программированию",
        "description": "Изучите, как использовать функцию 'none()' на Python для проверки, являются ли все элементы списка ложными. Повысьте свои навыки в программировании с помощью этого увлекательного руководства.",
        "keywords": "Python, программирование, ложный, список, none, функция, учебник"
      },
      "details": {
        "steps": [
          {
            "title": "Проверить, являются ли все элементы списка ложными",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "Проверить выполнение Python-скрипта в временной директории",
                "file": "verify1-1.sh",
                "hint": "Пожалуйста, убедитесь, что вы выполнили требуемые действия."
              }
            ],
            "solutions": ["none.py"]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    }
  ]
}
