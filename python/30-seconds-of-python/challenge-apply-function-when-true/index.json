{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "challenge",
  "title": "Apply Predicate-Based Function",
  "description": "In Python, functions are first-class objects, which means that they can be passed around like any other value. One useful application of this is to conditionally apply a function to a value based on some predicate. In this challenge, you will be asked to write a function that takes a predicate function and a function to apply when the predicate is true, and returns a new function that applies the function when the predicate is true.",
  "meta": {
    "title": "Apply Predicate-Based Function in Python",
    "description": "Learn how to conditionally apply a function to a value based on a predicate in Python.",
    "keywords": "python, conditional, function, predicate, apply"
  },
  "difficulty": "Beginner",
  "time": 15,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": false,
  "details": {
    "steps": [
      {
        "title": "Apply Function When True",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify Python Script Execution in Temporary Directory",
            "file": "verify1-1.sh",
            "hint": "Please make sure you have completed the required actions.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [],
        "solutions": ["when.py"]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md"
    },
    "assets": {
      "host01": [
        {
          "file": "test_when.py",
          "target": "/tmp",
          "chmod": "ugo+rwx"
        },
        {
          "file": "when.py",
          "target": "/home/labex/project",
          "chmod": "ugo+rwx"
        }
      ]
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["huduo0812", "jiaosenvip"],
  "license": {
    "name": "CC-BY-4.0",
    "url": "https://github.com/30-seconds/30-seconds-of-python/blob/master/LICENSE",
    "repo": "https://github.com/30-seconds/30-seconds-of-python"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "基于谓词应用函数",
      "description": "在 Python 中，函数是一等公民，这意味着它们可以像任何其他值一样被传递。这种特性的一个有用应用是根据某个谓词有条件地将一个函数应用于一个值。在这个挑战中，你将被要求编写一个函数，它接受一个谓词函数和一个在谓词为真时要应用的函数，并返回一个新函数，该新函数在谓词为真时应用该函数。",
      "meta": {
        "title": "在 Python 中基于谓词应用函数",
        "description": "学习如何在 Python 中根据谓词有条件地将一个函数应用于一个值。",
        "keywords": "Python, 条件，函数，谓词，应用"
      },
      "details": {
        "steps": [
          {
            "title": "条件为真时应用函数",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "在临时目录中验证 Python 脚本执行情况",
                "file": "verify1-1.sh",
                "hint": "请确保你已完成所需操作。"
              }
            ],
            "solutions": ["when.py"]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Aplicar función basada en predicado",
      "description": "En Python, las funciones son objetos de primer nivel, lo que significa que se pueden pasar como cualquier otro valor. Una aplicación útil de esto es aplicar una función a un valor de manera condicional según un cierto predicado. En este desafío, se te pedirá escribir una función que tome una función predicado y una función a aplicar cuando el predicado sea verdadero, y devuelva una nueva función que aplique la función cuando el predicado sea verdadero.",
      "meta": {
        "title": "Aplicar función basada en predicado en Python",
        "description": "Aprende cómo aplicar una función a un valor de manera condicional según un predicado en Python.",
        "keywords": "python, condicional, función, predicado, aplicar"
      },
      "details": {
        "steps": [
          {
            "title": "Aplicar función cuando sea verdadera",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Verificar la ejecución del script de Python en el directorio temporal",
                "file": "verify1-1.sh",
                "hint": "Asegúrese de haber completado las acciones requeridas."
              }
            ],
            "solutions": ["when.py"]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Appliquer une fonction basée sur un prédicat",
      "description": "En Python, les fonctions sont des objets de première classe, ce qui signifie qu'elles peuvent être passées comme n'importe quelle autre valeur. Une application pratique de ceci est d'appliquer conditionnellement une fonction à une valeur en fonction d'un prédicat. Dans ce défi, vous devrez écrire une fonction qui prend une fonction prédicat et une fonction à appliquer lorsque le prédicat est vrai, et renvoie une nouvelle fonction qui applique la fonction lorsque le prédicat est vrai.",
      "meta": {
        "title": "Appliquer une fonction basée sur un prédicat en Python",
        "description": "Découvrez comment appliquer conditionnellement une fonction à une valeur en fonction d'un prédicat en Python.",
        "keywords": "python, conditionnel, fonction, prédicat, appliquer"
      },
      "details": {
        "steps": [
          {
            "title": "Appliquer une fonction lorsque c'est vrai",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Vérifier l'exécution du script Python dans le répertoire temporaire",
                "file": "verify1-1.sh",
                "hint": "Veuillez vous assurer d'avoir effectué les actions requises."
              }
            ],
            "solutions": ["when.py"]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Wende prädikatbasierte Funktion an",
      "description": "In Python sind Funktionen erstklassige Objekte, was bedeutet, dass sie wie jeder andere Wert weitergegeben werden können. Eine nützliche Anwendung hiervon besteht darin, eine Funktion bedingt auf einen Wert anzuwenden, basierend auf einem Prädikat. In dieser Herausforderung werden Sie aufgefordert, eine Funktion zu schreiben, die eine Prädikatfunktion und eine Funktion erhält, die angewendet werden soll, wenn das Prädikat wahr ist, und eine neue Funktion zurückgibt, die die Funktion anwendet, wenn das Prädikat wahr ist.",
      "meta": {
        "title": "Wende prädikatbasierte Funktion in Python an",
        "description": "Lernen Sie, wie Sie in Python eine Funktion bedingt auf einen Wert anwenden, basierend auf einem Prädikat.",
        "keywords": "python, bedingt, funktion, prädikat, anwenden"
      },
      "details": {
        "steps": [
          {
            "title": "Wende Funktion an, wenn wahr",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Verifiziere die Ausführung des Python-Skripts im temporären Verzeichnis",
                "file": "verify1-1.sh",
                "hint": "Bitte stellen Sie sicher, dass Sie die erforderlichen Aktionen abgeschlossen haben."
              }
            ],
            "solutions": ["when.py"]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "述語ベースの関数を適用する",
      "description": "Python では、関数は一等公民オブジェクトであり、これは他の値と同じように関数を渡すことができることを意味します。この機能の便利な応用例の 1 つは、ある述語に基づいて条件付きで関数を値に適用することです。このチャレンジでは、述語関数と述語が真の場合に適用する関数を受け取り、述語が真の場合に関数を適用する新しい関数を返す関数を書くように求められます。",
      "meta": {
        "title": "Python における述語ベースの関数を適用する",
        "description": "Python で述語に基づいて条件付きで関数を値に適用する方法を学びましょう。",
        "keywords": "python, 条件付き，関数，述語，適用"
      },
      "details": {
        "steps": [
          {
            "title": "真の場合に関数を適用する",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "一時ディレクトリでの Python スクリプトの実行を確認する",
                "file": "verify1-1.sh",
                "hint": "必要な操作を完了していることを確認してください。"
              }
            ],
            "solutions": ["when.py"]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Применить функцию на основе предиката",
      "description": "В Python функции являются объектами первого класса, что означает, что их можно передавать подобно любому другому значению. Одно полезное применение этого заключается в том, чтобы условно применить функцию к значению на основе некоторого предиката. В этом испытании вам будет предложено написать функцию, которая принимает функцию предиката и функцию для применения, когда предикат истинен, и возвращает новую функцию, которая применяет функцию, когда предикат истинен.",
      "meta": {
        "title": "Применить функцию на основе предиката в Python",
        "description": "Изучите, как условно применить функцию к значению на основе предиката в Python.",
        "keywords": "python, условный, функция, предикат, применить"
      },
      "details": {
        "steps": [
          {
            "title": "Применить функцию, когда условие истинно",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "Проверить выполнение Python-скрипта в временной директории",
                "file": "verify1-1.sh",
                "hint": "Пожалуйста, убедитесь, что вы выполнили требуемые действия."
              }
            ],
            "solutions": ["when.py"]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    }
  ]
}
