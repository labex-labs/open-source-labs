{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Get Nested Value",
  "description": "In this lab, you will learn how to use Python's dictionaries and lists to access nested values, and implement a function that retrieves the value of a nested key indicated by a given selector list.",
  "meta": {
    "title": "Get Nested Value in Python",
    "description": "Learn how to retrieve the value of a nested key from a dictionary or list in Python using the get() function.",
    "keywords": "dictionaries, lists, python, get function, nested values"
  },
  "difficulty": "Beginner",
  "time": 15,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Get Nested Value",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify Python 3 Script Execution in Temporary Directory",
            "file": "verify1-1.sh",
            "hint": "Please make sure you have completed the required actions.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": []
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    },
    "assets": {
      "host01": [
        {
          "file": "test_get.py",
          "target": "/tmp",
          "chmod": "ugo+rwx"
        },
        {
          "file": "get.py",
          "target": "/home/labex/project",
          "chmod": "ugo+rwx"
        }
      ]
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["huduo0812", "jiaosenvip"],
  "license": {
    "name": "CC-BY-4.0",
    "url": "https://github.com/30-seconds/30-seconds-of-python/blob/master/LICENSE",
    "repo": "https://github.com/30-seconds/30-seconds-of-python"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "获取嵌套值",
      "description": "在这个实验中，你将学习如何使用 Python 的字典和列表来访问嵌套值，并实现一个函数，该函数可以检索由给定选择器列表指示的嵌套键的值。",
      "meta": {
        "title": "在 Python 中获取嵌套值",
        "description": "学习如何使用 Python 中的 get() 函数从字典或列表中检索嵌套键的值。",
        "keywords": "字典，列表，Python, get 函数，嵌套值"
      },
      "details": {
        "steps": [
          {
            "title": "获取嵌套值",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "在临时目录中验证 Python 3 脚本执行情况",
                "file": "verify1-1.sh",
                "hint": "请确保你已完成所需操作。"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Obtener valor anidado",
      "description": "En este laboratorio, aprenderás a usar los diccionarios y listas de Python para acceder a valores anidados, y a implementar una función que recupera el valor de una clave anidada indicada por una lista de selectores dada.",
      "meta": {
        "title": "Obtener valor anidado en Python",
        "description": "Aprende cómo recuperar el valor de una clave anidada de un diccionario o lista en Python usando la función get().",
        "keywords": "diccionarios, listas, python, función get, valores anidados"
      },
      "details": {
        "steps": [
          {
            "title": "Obtener valor anidado",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Verificar la ejecución del script de Python 3 en el directorio temporal",
                "file": "verify1-1.sh",
                "hint": "Asegúrese de haber completado las acciones requeridas."
              }
            ]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Récupérer une valeur imbriquée",
      "description": "Dans ce laboratoire, vous allez apprendre à utiliser les dictionnaires et les listes de Python pour accéder à des valeurs imbriquées, et à implémenter une fonction qui récupère la valeur d'une clé imbriquée indiquée par une liste de sélecteurs donnée.",
      "meta": {
        "title": "Récupérer une valeur imbriquée en Python",
        "description": "Apprenez à récupérer la valeur d'une clé imbriquée à partir d'un dictionnaire ou d'une liste en Python à l'aide de la fonction get().",
        "keywords": "dictionnaires, listes, python, fonction get, valeurs imbriquées"
      },
      "details": {
        "steps": [
          {
            "title": "Récupérer une valeur imbriquée",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Vérifier l'exécution d'un script Python 3 dans un répertoire temporaire",
                "file": "verify1-1.sh",
                "hint": "Veuillez vous assurer d'avoir effectué les actions requises."
              }
            ]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Das geschachtelte Element abrufen",
      "description": "In diesem Lab werden Sie lernen, wie Sie Python-Wörterbücher und -Listen verwenden, um auf geschachtelte Werte zuzugreifen, und eine Funktion implementieren, die den Wert eines geschachtelten Schlüssels abruft, der durch eine gegebene Selektorenliste angegeben wird.",
      "meta": {
        "title": "Das geschachtelte Element in Python abrufen",
        "description": "Lernen Sie, wie Sie den Wert eines geschachtelten Schlüssels aus einem Wörterbuch oder einer Liste in Python mithilfe der get()-Funktion abrufen.",
        "keywords": "Wörterbücher, Listen, Python, get-Funktion, geschachtelte Werte"
      },
      "details": {
        "steps": [
          {
            "title": "Das geschachtelte Element abrufen",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Verifizieren der Ausführung eines Python 3-Skripts im temporären Verzeichnis",
                "file": "verify1-1.sh",
                "hint": "Bitte stellen Sie sicher, dass Sie die erforderlichen Aktionen abgeschlossen haben."
              }
            ]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "ネストされた値を取得する",
      "description": "この実験では、Python の辞書とリストを使ってネストされた値にアクセスする方法を学び、与えられたセレクターのリストによって示されるネストされたキーの値を取得する関数を実装します。",
      "meta": {
        "title": "Python でネストされた値を取得する",
        "description": "Python の get() 関数を使って、辞書またはリストからネストされたキーの値を取得する方法を学びましょう。",
        "keywords": "辞書，リスト，Python, get 関数，ネストされた値"
      },
      "details": {
        "steps": [
          {
            "title": "ネストされた値を取得する",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "一時ディレクトリで Python 3 スクリプトの実行を確認する",
                "file": "verify1-1.sh",
                "hint": "必要な操作を完了していることを確認してください。"
              }
            ]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Получить вложенное значение",
      "description": "В этом практическом занятии вы научитесь использовать словари и списки в Python для доступа к вложенным значениям и реализовать функцию, которая извлекает значение вложенного ключа, указанного заданным списком селекторов.",
      "meta": {
        "title": "Получить вложенное значение в Python",
        "description": "Изучите, как получить значение вложенного ключа из словаря или списка в Python с использованием функции get().",
        "keywords": "словари, списки, python, функция get, вложенные значения"
      },
      "details": {
        "steps": [
          {
            "title": "Получить вложенное значение",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "Проверить выполнение скрипта Python 3 в временной директории",
                "file": "verify1-1.sh",
                "hint": "Пожалуйста, убедитесь, что вы выполнили все необходимые действия."
              }
            ]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    },
    {
      "lang": "ko",
      "title": "중첩 값 가져오기",
      "description": "이 랩에서는 Python 의 딕셔너리와 리스트를 사용하여 중첩된 값에 접근하는 방법을 배우고, 주어진 선택자 리스트에 의해 표시된 중첩 키의 값을 검색하는 함수를 구현합니다.",
      "meta": {
        "title": "Python 에서 중첩 값 가져오기",
        "description": "get() 함수를 사용하여 Python 에서 딕셔너리 또는 리스트의 중첩 키 값을 가져오는 방법을 알아보세요.",
        "keywords": "딕셔너리, 리스트, 파이썬, get 함수, 중첩 값"
      },
      "details": {
        "steps": [
          {
            "title": "중첩 값 가져오기",
            "text": "ko/step1.md",
            "verify": [
              {
                "name": "임시 디렉토리에서 Python 3 스크립트 실행 확인",
                "file": "verify1-1.sh",
                "hint": "필수 작업을 완료했는지 확인하십시오."
              }
            ]
          }
        ],
        "intro": {
          "text": "ko/intro.md",
          "title": "소개"
        },
        "finish": {
          "text": "ko/finish.md",
          "title": "요약"
        }
      }
    },
    {
      "lang": "pt",
      "title": "Obter Valor Aninhado",
      "description": "Neste laboratório, você aprenderá como usar dicionários e listas do Python para acessar valores aninhados e implementar uma função que recupera o valor de uma chave aninhada indicada por uma lista de seletores.",
      "meta": {
        "title": "Obter Valor Aninhado em Python - Guia Prático",
        "description": "Aprenda como recuperar o valor de uma chave aninhada de um dicionário ou lista em Python usando a função get(). Tutorial passo a passo.",
        "keywords": "dicionários, listas, python, função get, valores aninhados, acesso a dados aninhados, Python tutorial"
      },
      "details": {
        "steps": [
          {
            "title": "Obter Valor Aninhado",
            "text": "pt/step1.md",
            "verify": [
              {
                "name": "Verificar Execução do Script Python 3 em Diretório Temporário",
                "file": "verify1-1.sh",
                "hint": "Por favor, certifique-se de ter concluído as ações necessárias."
              }
            ]
          }
        ],
        "intro": {
          "text": "pt/intro.md",
          "title": "Introdução"
        },
        "finish": {
          "text": "pt/finish.md",
          "title": "Resumo"
        }
      }
    }
  ]
}
