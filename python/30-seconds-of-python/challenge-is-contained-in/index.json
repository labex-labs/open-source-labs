{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "challenge",
  "title": "Checking List Containment in Python | Challenge",
  "description": "In this challenge, you will implement a function to check if all the elements of one list are contained in another list, regardless of the order of the elements.",
  "meta": {
    "title": "Python List Containment | Coding Challenge",
    "description": "Explore a Python coding challenge that teaches how to check if one list is contained in another, regardless of order. Learn efficient techniques for list manipulation.",
    "keywords": "Python, List Containment, Coding Challenge, List Manipulation, Order-Independent Comparison"
  },
  "difficulty": "Beginner",
  "time": 15,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": false,
  "details": {
    "steps": [
      {
        "title": "List Containment",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify Student's Python Script Execution",
            "file": "verify1-1.sh",
            "hint": "Please make sure you have completed the required actions.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [],
        "solutions": ["is_contained_in.py"]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md"
    },
    "assets": {
      "host01": [
        {
          "file": "test_is_contained_in.py",
          "target": "/tmp",
          "chmod": "ugo+rwx"
        },
        {
          "file": "is_contained_in.py",
          "target": "/home/labex/project",
          "chmod": "ugo+rwx"
        }
      ]
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["huduo0812", "jiaosenvip"],
  "license": {
    "name": "CC-BY-4.0",
    "url": "https://github.com/30-seconds/30-seconds-of-python/blob/master/LICENSE",
    "repo": "https://github.com/30-seconds/30-seconds-of-python"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "在 Python 中检查列表包含关系 | 挑战",
      "description": "在这个挑战中，你将实现一个函数，用于检查一个列表的所有元素是否包含在另一个列表中，而不考虑元素的顺序。",
      "meta": {
        "title": "Python 列表包含关系 | 编码挑战",
        "description": "探索一个 Python 编码挑战，它教授如何检查一个列表是否包含在另一个列表中，而不考虑顺序。学习列表操作的高效技巧。",
        "keywords": "Python, 列表包含关系，编码挑战，列表操作，不依赖顺序的比较"
      },
      "details": {
        "steps": [
          {
            "title": "列表包含关系",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "验证学生的 Python 脚本执行情况",
                "file": "verify1-1.sh",
                "hint": "请确保你已完成所需操作。"
              }
            ],
            "solutions": ["is_contained_in.py"]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Verificación de contención de listas en Python | Desafío",
      "description": "En este desafío, implementarás una función para comprobar si todos los elementos de una lista están contenidos en otra lista, independientemente del orden de los elementos.",
      "meta": {
        "title": "Contención de listas en Python | Desafío de codificación",
        "description": "Explora un desafío de codificación en Python que enseña a comprobar si una lista está contenida en otra, independientemente del orden. Aprende técnicas eficientes para la manipulación de listas.",
        "keywords": "Python, Contención de listas, Desafío de codificación, Manipulación de listas, Comparación independiente del orden"
      },
      "details": {
        "steps": [
          {
            "title": "Contención de listas",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Verificar la ejecución del script de Python del estudiante",
                "file": "verify1-1.sh",
                "hint": "Asegúrese de haber completado las acciones requeridas."
              }
            ],
            "solutions": ["is_contained_in.py"]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Vérifier la présence d'une liste dans une autre en Python | Défi",
      "description": "Dans ce défi, vous allez implémenter une fonction pour vérifier si tous les éléments d'une liste sont contenus dans une autre liste, quelle que soit l'ordre des éléments.",
      "meta": {
        "title": "Présence d'une liste dans une autre en Python | Défi de codage",
        "description": "Explorez un défi de codage en Python qui enseigne à vérifier si une liste est contenue dans une autre, quelle que soit l'ordre. Apprenez des techniques efficaces de manipulation de listes.",
        "keywords": "Python, Présence d'une liste dans une autre, Défi de codage, Manipulation de listes, Comparaison indépendante de l'ordre"
      },
      "details": {
        "steps": [
          {
            "title": "Contenu de liste",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Vérifier l'exécution du script Python de l'étudiant",
                "file": "verify1-1.sh",
                "hint": "Veuillez vous assurer d'avoir effectué les actions requises."
              }
            ],
            "solutions": ["is_contained_in.py"]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Überprüfen von Listeninhalten in Python | Challenge",
      "description": "In dieser Herausforderung implementieren Sie eine Funktion, um zu überprüfen, ob alle Elemente einer Liste in einer anderen Liste enthalten sind, unabhängig von der Reihenfolge der Elemente.",
      "meta": {
        "title": "Python-Listeninhalte | Coding Challenge",
        "description": "Entdecken Sie eine Python-Coding-Herausforderung, die Ihnen zeigt, wie Sie überprüfen können, ob eine Liste in einer anderen enthalten ist, unabhängig von der Reihenfolge. Lernen Sie effiziente Techniken für die Listenmanipulation.",
        "keywords": "Python, Listeninhalte, Coding Challenge, Listenmanipulation, reihenfolgeunabhängige Vergleich"
      },
      "details": {
        "steps": [
          {
            "title": "Listeninhalte",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Überprüfen der Ausführung des Python-Skripts des Schülers",
                "file": "verify1-1.sh",
                "hint": "Bitte stellen Sie sicher, dass Sie die erforderlichen Aktionen abgeschlossen haben."
              }
            ],
            "solutions": ["is_contained_in.py"]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "Python でのリストの包含関係のチェック | チャレンジ",
      "description": "このチャレンジでは、要素の順序に関係なく、あるリストのすべての要素が別のリストに含まれているかどうかをチェックする関数を実装します。",
      "meta": {
        "title": "Python のリストの包含関係 | コーディングチャレンジ",
        "description": "要素の順序に関係なく、あるリストが別のリストに含まれているかどうかをチェックする方法を学ぶ Python のコーディングチャレンジを探ってみましょう。リスト操作の効率的な手法を学びましょう。",
        "keywords": "Python, リストの包含関係，コーディングチャレンジ，リスト操作，順序非依存比較"
      },
      "details": {
        "steps": [
          {
            "title": "リストの包含関係",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "学生の Python スクリプトの実行を確認する",
                "file": "verify1-1.sh",
                "hint": "必要な操作を完了していることを確認してください。"
              }
            ],
            "solutions": ["is_contained_in.py"]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Проверка содержания списка в Python | Вызов",
      "description": "В этом испытании вы реализуете функцию для проверки, содержатся ли все элементы одного списка в другом списке, независимо от порядка элементов.",
      "meta": {
        "title": "Содержание списка в Python | Задание по программированию",
        "description": "Изучите задание по программированию на Python, которое показывает, как проверить, содержится ли один список в другом, независимо от порядка. Изучите эффективные методы манипуляции со списками.",
        "keywords": "Python, Содержание списка, Задание по программированию, Обработка списков, Сравнение независимо от порядка"
      },
      "details": {
        "steps": [
          {
            "title": "Содержание списка",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "Проверить выполнение Python-скрипта студента",
                "file": "verify1-1.sh",
                "hint": "Пожалуйста, убедитесь, что вы выполнили все необходимые действия."
              }
            ],
            "solutions": ["is_contained_in.py"]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    }
  ]
}
