{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "challenge",
  "title": "Power Set Generation in Python | Challenge",
  "description": "In this challenge, you will implement a function to generate the powerset of a given iterable, which involves working with lists, generators, and the itertools module in Python.",
  "meta": {
    "title": "Python Powerset | Coding Challenges",
    "description": "Learn how to create a Python function that generates the powerset of a given iterable. Discover the power of Python's itertools module in this coding challenge.",
    "keywords": "Python, Powerset, Coding Challenges, Itertools, Subsets"
  },
  "difficulty": "Beginner",
  "time": 15,
  "hidden": true,
  "fee_type": "free",
  "show_in_tutorial": false,
  "details": {
    "steps": [
      {
        "title": "Powerset Challenge",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify Python Powerset Functionality",
            "file": "verify1-1.sh",
            "hint": "Please make sure you have completed the required actions.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "python/build_in_functions",
          "python/comments",
          "python/data_collections",
          "python/for_loops",
          "python/function_definition",
          "python/importing_modules",
          "python/lists",
          "python/standard_libraries",
          "python/tuples",
          "python/using_packages",
          "python/variables_data_types"
        ],
        "solutions": ["powerset.py"]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md"
    },
    "assets": {
      "host01": [
        {
          "file": "test_powerset.py",
          "target": "/tmp",
          "chmod": "ugo+rwx"
        },
        {
          "file": "powerset.py",
          "target": "/home/labex/project",
          "chmod": "ugo+rwx"
        }
      ]
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["huduo0812", "jiaosenvip"],
  "license": {
    "name": "CC-BY-4.0",
    "url": "https://github.com/30-seconds/30-seconds-of-python/blob/master/LICENSE",
    "repo": "https://github.com/30-seconds/30-seconds-of-python"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "Python 中的幂集生成 | 挑战",
      "description": "在这个挑战中，你将实现一个函数来生成给定可迭代对象的幂集，这涉及到处理 Python 中的列表、生成器和 itertools 模块。",
      "meta": {
        "title": "Python 幂集 | 编码挑战",
        "description": "学习如何创建一个生成给定可迭代对象幂集的 Python 函数。在这个编码挑战中探索 Python 的 itertools 模块的强大功能。",
        "keywords": "Python, 幂集，编码挑战，Itertools, 子集"
      },
      "details": {
        "steps": [
          {
            "title": "幂集挑战",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "验证 Python 幂集功能",
                "file": "verify1-1.sh",
                "hint": "请确保你已完成所需操作。"
              }
            ],
            "solutions": ["powerset.py"]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Generación del conjunto potencia en Python | Desafío",
      "description": "En este desafío, implementarás una función para generar el conjunto potencia de un iterable dado, lo que implica trabajar con listas, generadores y el módulo itertools en Python.",
      "meta": {
        "title": "Conjunto potencia de Python | Retos de codificación",
        "description": "Aprende cómo crear una función de Python que genere el conjunto potencia de un iterable dado. Descubre el poder del módulo itertools de Python en este reto de codificación.",
        "keywords": "Python, Conjunto potencia, Retos de codificación, Itertools, Subconjuntos"
      },
      "details": {
        "steps": [
          {
            "title": "Desafío del conjunto potencia",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Verificar la funcionalidad de la función de conjunto potencia de Python",
                "file": "verify1-1.sh",
                "hint": "Asegúrese de haber completado las acciones requeridas."
              }
            ],
            "solutions": ["powerset.py"]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Génération de l'ensemble des parties en Python | Défi",
      "description": "Dans ce défi, vous allez implémenter une fonction pour générer l'ensemble des parties d'un itérable donné, ce qui implique de travailler avec des listes, des générateurs et le module itertools en Python.",
      "meta": {
        "title": "Ensemble des parties Python | Defis de codage",
        "description": "Découvrez comment créer une fonction Python qui génère l'ensemble des parties d'un itérable donné. Découvrez le pouvoir du module itertools de Python dans ce défi de codage.",
        "keywords": "Python, Ensemble des parties, Defis de codage, Itertools, Sous-ensembles"
      },
      "details": {
        "steps": [
          {
            "title": "Défi de l'ensemble des parties",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Vérifier la fonctionnalité de l'ensemble des parties en Python",
                "file": "verify1-1.sh",
                "hint": "Veuillez vous assurer d'avoir effectué les actions requises."
              }
            ],
            "solutions": ["powerset.py"]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Potenzmenge-Generierung in Python | Challenge",
      "description": "In dieser Herausforderung implementieren Sie eine Funktion, um die Potenzmenge eines gegebenen Iterierbaren zu generieren, was das Arbeiten mit Listen, Generatoren und dem itertools-Modul in Python umfasst.",
      "meta": {
        "title": "Python Potenzmenge | Coding Challenges",
        "description": "Lernen Sie, wie Sie eine Python-Funktion erstellen, die die Potenzmenge eines gegebenen Iterierbaren generiert. Entdecken Sie die Macht des itertools-Moduls in Python bei dieser Codierungschallenge.",
        "keywords": "Python, Potenzmenge, Coding Challenges, Itertools, Teilmengen"
      },
      "details": {
        "steps": [
          {
            "title": "Potenzmenge-Ausforderung",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Verifizieren der Python-Potenzmenge-Funktionalität",
                "file": "verify1-1.sh",
                "hint": "Bitte stellen Sie sicher, dass Sie die erforderlichen Aktionen abgeschlossen haben."
              }
            ],
            "solutions": ["powerset.py"]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "Python における冪集合の生成 | チャレンジ",
      "description": "このチャレンジでは、与えられた反復可能オブジェクトの冪集合を生成する関数を実装します。これには、Python のリスト、ジェネレータ、および itertools モジュールを使うことが含まれます。",
      "meta": {
        "title": "Python の冪集合 | コーディングチャレンジ",
        "description": "与えられた反復可能オブジェクトの冪集合を生成する Python 関数を作成する方法を学びましょう。このコーディングチャレンジで Python の itertools モジュールの力を発見しましょう。",
        "keywords": "Python, 冪集合，コーディングチャレンジ，Itertools, 部分集合"
      },
      "details": {
        "steps": [
          {
            "title": "冪集合チャレンジ",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "Python の冪集合機能を検証する",
                "file": "verify1-1.sh",
                "hint": "必要な操作を完了したことを確認してください。"
              }
            ],
            "solutions": ["powerset.py"]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Генерация мощности множества в Python | Задача",
      "description": "В рамках этой задачи вы реализуете функцию для генерации мощности заданного итерируемого объекта, что включает в себя работу с списками, генераторами и модулем itertools в Python.",
      "meta": {
        "title": "Мощность множества в Python | Задачи по программированию",
        "description": "Изучите, как создать функцию на Python, которая генерирует мощность заданного итерируемого объекта. Откройте силу модуля itertools в Python в рамках этой задачи по программированию.",
        "keywords": "Python, Мощность множества, Задачи по программированию, Itertools, Подмножества"
      },
      "details": {
        "steps": [
          {
            "title": "Задача на нахождение мощности множества",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "Проверить функциональность функции нахождения мощности множества в Python",
                "file": "verify1-1.sh",
                "hint": "Пожалуйста, убедитесь, что вы выполнили все необходимые действия."
              }
            ],
            "solutions": ["powerset.py"]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    }
  ]
}
