{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "challenge",
  "title": "Flatten Nested Lists with Python Spread Operator",
  "description": "In this challenge, you will implement a function that flattens a nested list using the spread operator in Python.",
  "meta": {
    "title": "Python List Flattening | Spread Operator",
    "description": "Learn how to flatten nested lists in Python using the spread operator. Implement a function to flatten a list without modifying the original.",
    "keywords": "Python, List, Flatten, Spread Operator, Nested List"
  },
  "difficulty": "Beginner",
  "time": 15,
  "hidden": true,
  "fee_type": "free",
  "show_in_tutorial": false,
  "details": {
    "steps": [
      {
        "title": "Spread List",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify Student's Python Test Script Execution",
            "file": "verify1-1.sh",
            "hint": "Please make sure you have completed the required actions.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "python/build_in_functions",
          "python/comments",
          "python/conditional_statements",
          "python/data_collections",
          "python/for_loops",
          "python/function_definition",
          "python/lists",
          "python/tuples",
          "python/variables_data_types"
        ],
        "solutions": ["spread.py"]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md"
    },
    "assets": {
      "host01": [
        {
          "file": "test_spread.py",
          "target": "/tmp",
          "chmod": "ugo+rwx"
        },
        {
          "file": "spread.py",
          "target": "/home/labex/project",
          "chmod": "ugo+rwx"
        }
      ]
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["huduo0812", "jiaosenvip"],
  "license": {
    "name": "CC-BY-4.0",
    "url": "https://github.com/30-seconds/30-seconds-of-python/blob/master/LICENSE",
    "repo": "https://github.com/30-seconds/30-seconds-of-python"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "使用 Python 展开运算符扁平化嵌套列表",
      "description": "在这个挑战中，你将实现一个函数，该函数使用 Python 中的展开运算符来扁平化一个嵌套列表。",
      "meta": {
        "title": "Python 列表扁平化 | 展开运算符",
        "description": "学习如何使用展开运算符在 Python 中扁平化嵌套列表。实现一个函数来扁平化列表而不修改原始列表。",
        "keywords": "Python, 列表，扁平化，展开运算符，嵌套列表"
      },
      "details": {
        "steps": [
          {
            "title": "展开列表",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "验证学生的 Python 测试脚本执行情况",
                "file": "verify1-1.sh",
                "hint": "请确保你已完成所需操作。"
              }
            ],
            "solutions": ["spread.py"]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Aplanar listas anidadas con el operador de expansión de Python",
      "description": "En este desafío, implementarás una función que aplace una lista anidada usando el operador de expansión en Python.",
      "meta": {
        "title": "Aplanado de listas en Python | Operador de expansión",
        "description": "Aprende cómo aplanar listas anidadas en Python usando el operador de expansión. Implementa una función para aplanar una lista sin modificar la original.",
        "keywords": "Python, Lista, Aplanar, Operador de expansión, Lista anidada"
      },
      "details": {
        "steps": [
          {
            "title": "Expandir una lista",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Verificar la ejecución del script de prueba de Python del estudiante",
                "file": "verify1-1.sh",
                "hint": "Asegúrese de haber completado las acciones requeridas."
              }
            ],
            "solutions": ["spread.py"]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Aplatir les listes imbriquées avec l'opérateur de diffusion en Python",
      "description": "Dans ce défi, vous implémenterez une fonction qui aplatit une liste imbriquée à l'aide de l'opérateur de diffusion en Python.",
      "meta": {
        "title": "Aplatissement de listes en Python | Opérateur de diffusion",
        "description": "Découvrez comment aplatir les listes imbriquées en Python à l'aide de l'opérateur de diffusion. Implémentez une fonction pour aplatir une liste sans modifier l'originale.",
        "keywords": "Python, Liste, Aplatir, Opérateur de diffusion, Liste imbriquée"
      },
      "details": {
        "steps": [
          {
            "title": "Liste étalée",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Vérifier l'exécution du script de test Python de l'étudiant",
                "file": "verify1-1.sh",
                "hint": "Veuillez vous assurer d'avoir effectué les actions requises."
              }
            ],
            "solutions": ["spread.py"]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Listen in Python mit Spread-Operator auffächern",
      "description": "In dieser Herausforderung implementieren Sie eine Funktion, die eine geschachtelte Liste in Python mit dem Spread-Operator auffächert.",
      "meta": {
        "title": "Auffächern von Listen in Python | Spread-Operator",
        "description": "Lernen Sie, wie Sie geschachtelte Listen in Python mit dem Spread-Operator auffächern. Implementieren Sie eine Funktion, um eine Liste aufzufächern, ohne die ursprüngliche zu verändern.",
        "keywords": "Python, Liste, auffächern, Spread-Operator, geschachtelte Liste"
      },
      "details": {
        "steps": [
          {
            "title": "Liste auffächern",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Überprüfen der Ausführung des Python-Testskripts des Studenten",
                "file": "verify1-1.sh",
                "hint": "Bitte stellen Sie sicher, dass Sie die erforderlichen Aktionen abgeschlossen haben."
              }
            ],
            "solutions": ["spread.py"]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "Python の展開演算子を使ったネストされたリストのフラット化",
      "description": "このチャレンジでは、Python で展開演算子を使ってネストされたリストをフラット化する関数を実装します。",
      "meta": {
        "title": "Python のリストフラット化 | 展開演算子",
        "description": "Python で展開演算子を使ってネストされたリストをどのようにフラット化するか学びましょう。元のリストを変更することなくリストをフラット化する関数を実装します。",
        "keywords": "Python, リスト，フラット化，展開演算子，ネストされたリスト"
      },
      "details": {
        "steps": [
          {
            "title": "展開リスト",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "学生の Python テストスクリプトの実行を確認する",
                "file": "verify1-1.sh",
                "hint": "必要な操作を完了していることを確認してください。"
              }
            ],
            "solutions": ["spread.py"]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Развёртывание вложенных списков с использованием оператора расширения в Python",
      "description": "В этом испытании вы реализуете функцию для развёртывания вложенного списка с использованием оператора расширения в Python.",
      "meta": {
        "title": "Развёртывание списков в Python | Оператор расширения",
        "description": "Изучите, как разворачивать вложенные списки в Python с использованием оператора расширения. Реализуйте функцию для сглаживания списка без изменения исходного.",
        "keywords": "Python, Список, Сглаживание, Оператор расширения, Вложенный список"
      },
      "details": {
        "steps": [
          {
            "title": "Развёрнутый список",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "Проверить выполнение сценария теста на Python студента",
                "file": "verify1-1.sh",
                "hint": "Пожалуйста, убедитесь, что вы выполнили требуемые действия."
              }
            ],
            "solutions": ["spread.py"]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    }
  ]
}
