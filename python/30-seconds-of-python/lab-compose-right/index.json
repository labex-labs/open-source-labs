{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Implement Left-to-Right Function Composition",
  "description": "Function composition is a technique used in functional programming to combine two or more functions to create a new function. In Python, we can use the compose function from the functools module to perform function composition. However, the compose function performs right-to-left function composition, which may not be suitable for all use cases. In this challenge, you will implement a function that performs left-to-right function composition.",
  "meta": {
    "title": "Function Composition in Python | Reverse Compose Functions",
    "description": "Learn how to implement left-to-right function composition in Python using the compose_right function. Discover the power of functional programming techniques.",
    "keywords": "function composition, python, functional programming, compose_right, left-to-right, reduce"
  },
  "difficulty": "Beginner",
  "time": 15,
  "hidden": true,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Reverse Compose Functions",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify Python Compose Script Correctness",
            "file": "verify1-1.sh",
            "hint": "Please make sure you have completed the required actions.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "python/comments",
          "python/function_definition",
          "python/importing_modules",
          "python/keyword_arguments",
          "python/lambda_functions",
          "python/standard_libraries",
          "python/tuples",
          "python/using_packages"
        ]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    },
    "assets": {
      "host01": [
        {
          "file": "test_compose_right.py",
          "target": "/tmp",
          "chmod": "ugo+rwx"
        },
        {
          "file": "compose_right.py",
          "target": "/home/labex/project",
          "chmod": "ugo+rwx"
        }
      ]
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["huduo0812", "jiaosenvip"],
  "license": {
    "name": "CC-BY-4.0",
    "url": "https://github.com/30-seconds/30-seconds-of-python/blob/master/LICENSE",
    "repo": "https://github.com/30-seconds/30-seconds-of-python"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "实现从左到右的函数组合",
      "description": "函数组合是函数式编程中用于将两个或更多函数组合以创建新函数的一种技术。在Python中，我们可以使用functools模块中的compose函数来执行函数组合。但是，compose函数执行的是从右到左的函数组合，这可能并不适用于所有用例。在这个挑战中，你将实现一个执行从左到右函数组合的函数。",
      "meta": {
        "title": "Python中的函数组合 | 反向组合函数",
        "description": "学习如何使用compose_right函数在Python中实现从左到右的函数组合。探索函数式编程技术的强大之处。",
        "keywords": "函数组合, Python, 函数式编程, compose_right, 从左到右, reduce"
      },
      "details": {
        "steps": [
          {
            "title": "反向组合函数",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "验证Python组合脚本的正确性",
                "file": "verify1-1.sh",
                "hint": "请确保你已完成所需操作。"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    }
  ]
}
