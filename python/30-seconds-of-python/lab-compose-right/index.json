{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Implement Left-to-Right Function Composition",
  "description": "Function composition is a technique used in functional programming to combine two or more functions to create a new function. In Python, we can use the compose function from the functools module to perform function composition. However, the compose function performs right-to-left function composition, which may not be suitable for all use cases. In this challenge, you will implement a function that performs left-to-right function composition.",
  "meta": {
    "title": "Function Composition in Python | Reverse Compose Functions",
    "description": "Learn how to implement left-to-right function composition in Python using the compose_right function. Discover the power of functional programming techniques.",
    "keywords": "function composition, python, functional programming, compose_right, left-to-right, reduce"
  },
  "difficulty": "Beginner",
  "time": 15,
  "hidden": true,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Reverse Compose Functions",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify Python Compose Script Correctness",
            "file": "verify1-1.sh",
            "hint": "Please make sure you have completed the required actions.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "python/comments",
          "python/function_definition",
          "python/importing_modules",
          "python/keyword_arguments",
          "python/lambda_functions",
          "python/standard_libraries",
          "python/tuples",
          "python/using_packages"
        ]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    },
    "assets": {
      "host01": [
        {
          "file": "test_compose_right.py",
          "target": "/tmp",
          "chmod": "ugo+rwx"
        },
        {
          "file": "compose_right.py",
          "target": "/home/labex/project",
          "chmod": "ugo+rwx"
        }
      ]
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["huduo0812", "jiaosenvip"],
  "license": {
    "name": "CC-BY-4.0",
    "url": "https://github.com/30-seconds/30-seconds-of-python/blob/master/LICENSE",
    "repo": "https://github.com/30-seconds/30-seconds-of-python"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "实现从左到右的函数组合",
      "description": "函数组合是函数式编程中用于将两个或更多函数组合以创建新函数的一种技术。在 Python 中，我们可以使用 functools 模块中的 compose 函数来执行函数组合。但是，compose 函数执行的是从右到左的函数组合，这可能并不适用于所有用例。在这个挑战中，你将实现一个执行从左到右函数组合的函数。",
      "meta": {
        "title": "Python 中的函数组合 | 反向组合函数",
        "description": "学习如何使用 compose_right 函数在 Python 中实现从左到右的函数组合。探索函数式编程技术的强大之处。",
        "keywords": "函数组合，Python, 函数式编程，compose_right, 从左到右，reduce"
      },
      "details": {
        "steps": [
          {
            "title": "反向组合函数",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "验证 Python 组合脚本的正确性",
                "file": "verify1-1.sh",
                "hint": "请确保你已完成所需操作。"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Implementar la composición de funciones de izquierda a derecha",
      "description": "La composición de funciones es una técnica utilizada en la programación funcional para combinar dos o más funciones y crear una nueva función. En Python, podemos utilizar la función compose del módulo functools para realizar la composición de funciones. Sin embargo, la función compose realiza la composición de funciones de derecha a izquierda, lo que puede no ser adecuado para todos los casos de uso. En este desafío, implementarás una función que realice la composición de funciones de izquierda a derecha.",
      "meta": {
        "title": "Composición de funciones en Python | Composición de funciones inversa",
        "description": "Aprende cómo implementar la composición de funciones de izquierda a derecha en Python utilizando la función compose_right. Descubre el poder de las técnicas de programación funcional.",
        "keywords": "composición de funciones, python, programación funcional, compose_right, izquierda a derecha, reduce"
      },
      "details": {
        "steps": [
          {
            "title": "Composición de funciones inversa",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Verificar la corrección del script de composición de Python",
                "file": "verify1-1.sh",
                "hint": "Asegúrese de haber completado las acciones requeridas."
              }
            ]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Implémenter la composition de fonctions de gauche à droite",
      "description": "La composition de fonctions est une technique utilisée en programmation fonctionnelle pour combiner deux ou plusieurs fonctions afin de créer une nouvelle fonction. En Python, on peut utiliser la fonction compose du module functools pour effectuer la composition de fonctions. Cependant, la fonction compose effectue une composition de fonctions de droite à gauche, ce qui peut ne pas convenir à tous les cas d'utilisation. Dans ce défi, vous allez implémenter une fonction qui effectue une composition de fonctions de gauche à droite.",
      "meta": {
        "title": "Composition de fonctions en Python | Reverse Compose Functions",
        "description": "Découvrez comment implémenter la composition de fonctions de gauche à droite en Python à l'aide de la fonction compose_right. Découvrez le pouvoir des techniques de programmation fonctionnelle.",
        "keywords": "composition de fonctions, python, programmation fonctionnelle, compose_right, gauche-droite, réduire"
      },
      "details": {
        "steps": [
          {
            "title": "Reverse Compose Functions",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Vérifier la correction du script de composition en Python",
                "file": "verify1-1.sh",
                "hint": "Veuillez vous assurer d'avoir effectué les actions requises."
              }
            ]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Implementiere die links-rechts-Funktionskomposition",
      "description": "Die Funktionskomposition ist eine Technik, die in der funktionalen Programmierung verwendet wird, um zwei oder mehr Funktionen zu kombinieren, um eine neue Funktion zu erstellen. In Python können wir die compose-Funktion aus dem functools-Modul verwenden, um die Funktionskomposition durchzuführen. Die compose-Funktion führt jedoch eine rechts-links-Funktionskomposition durch, was für alle Anwendungsfälle möglicherweise nicht geeignet ist. In dieser Herausforderung implementieren Sie eine Funktion, die eine links-rechts-Funktionskomposition durchführt.",
      "meta": {
        "title": "Funktionskomposition in Python | Umgekehrte Kompositionsfunktionen",
        "description": "Lernen Sie, wie Sie die links-rechts-Funktionskomposition in Python mithilfe der compose_right-Funktion implementieren. Entdecken Sie die Macht der funktionalen Programmiertechniken.",
        "keywords": "Funktionskomposition, Python, funktionale Programmierung, compose_right, links-rechts, reduce"
      },
      "details": {
        "steps": [
          {
            "title": "Umgekehrte Kompositionsfunktionen",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Überprüfen der Korrektheit des Python-Kompositionsskripts",
                "file": "verify1-1.sh",
                "hint": "Bitte stellen Sie sicher, dass Sie die erforderlichen Aktionen abgeschlossen haben."
              }
            ]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "左から右への関数合成を実装する",
      "description": "関数合成は、関数型プログラミングで使用される技術であり、2 つ以上の関数を結合して新しい関数を作成します。Python では、functools モジュールの compose 関数を使用して関数合成を行うことができます。ただし、compose 関数は右から左への関数合成を行うため、すべてのケースに適しているとは限りません。このチャレンジでは、左から右への関数合成を行う関数を実装します。",
      "meta": {
        "title": "Python における関数合成 | 逆合成関数",
        "description": "compose_right 関数を使用して Python で左から右への関数合成を実装する方法を学びましょう。関数型プログラミング技術の力を発見しましょう。",
        "keywords": "関数合成，Python, 関数型プログラミング，compose_right, 左から右，reduce"
      },
      "details": {
        "steps": [
          {
            "title": "逆合成関数",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "Python の合成スクリプトの正しさを確認する",
                "file": "verify1-1.sh",
                "hint": "必要な操作を完了していることを確認してください。"
              }
            ]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Реализация композиции функций слева направо",
      "description": "Композиция функций - это техника, используемая в функциональном программировании для объединения двух или более функций с созданием новой функции. В Python мы можем использовать функцию compose из модуля functools для выполнения композиции функций. Однако функция compose выполняет композицию функций справа налево, что может не подходить для всех случаев использования. В этом испытании вы реализуете функцию, которая выполняет композицию функций слева направо.",
      "meta": {
        "title": "Композиция функций в Python | Композиция функций в обратном порядке",
        "description": "Изучите, как реализовать композицию функций слева направо в Python с использованием функции compose_right. Откройте силу функциональных программировательных техник.",
        "keywords": "композиция функций, python, функциональное программирование, compose_right, слева направо, reduce"
      },
      "details": {
        "steps": [
          {
            "title": "Композиция функций в обратном порядке",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "Проверить правильность скрипта композиции функций на Python",
                "file": "verify1-1.sh",
                "hint": "Пожалуйста, убедитесь, что вы выполнили требуемые действия."
              }
            ]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    },
    {
      "lang": "ko",
      "title": "파이썬 함수 합성 구현 (Left-to-Right)",
      "description": "함수 합성은 두 개 이상의 함수를 결합하여 새로운 함수를 생성하는 데 사용되는 함수형 프로그래밍 기법입니다. 파이썬에서는 functools 모듈의 compose 함수를 사용하여 함수 합성을 수행할 수 있습니다. 그러나 compose 함수는 오른쪽에서 왼쪽으로 함수 합성을 수행하므로 모든 사용 사례에 적합하지 않을 수 있습니다. 이 챌린지에서는 왼쪽에서 오른쪽으로 함수 합성을 수행하는 함수를 구현합니다.",
      "meta": {
        "title": "파이썬 함수 합성 | 왼쪽에서 오른쪽 함수 합성 구현",
        "description": "compose_right 함수를 사용하여 파이썬에서 왼쪽에서 오른쪽으로 함수 합성을 구현하는 방법을 알아보세요. 함수형 프로그래밍 기법의 강력함을 경험하세요.",
        "keywords": "함수 합성, 파이썬, 함수형 프로그래밍, compose_right, 왼쪽에서 오른쪽, reduce, 파이썬 함수 합성, 함수형 프로그래밍 예제"
      },
      "details": {
        "steps": [
          {
            "title": "함수 합성 (Reverse Compose) 구현",
            "text": "ko/step1.md",
            "verify": [
              {
                "name": "파이썬 합성 스크립트 정확성 검증",
                "file": "verify1-1.sh",
                "hint": "필수 작업을 완료했는지 확인하십시오."
              }
            ]
          }
        ],
        "intro": {
          "text": "ko/intro.md",
          "title": "소개"
        },
        "finish": {
          "text": "ko/finish.md",
          "title": "요약"
        }
      }
    },
    {
      "lang": "pt",
      "title": "Implementar Composição de Funções da Esquerda para a Direita",
      "description": "A composição de funções é uma técnica usada em programação funcional para combinar duas ou mais funções e criar uma nova função. Em Python, podemos usar a função compose do módulo functools para realizar a composição de funções. No entanto, a função compose realiza a composição de funções da direita para a esquerda, o que pode não ser adequado para todos os casos de uso. Neste desafio, você implementará uma função que realiza a composição de funções da esquerda para a direita.",
      "meta": {
        "title": "Composição de Funções em Python | Funções de Composição Inversa",
        "description": "Aprenda como implementar a composição de funções da esquerda para a direita em Python usando a função compose_right. Descubra o poder das técnicas de programação funcional.",
        "keywords": "composição de funções, python, programação funcional, compose_right, esquerda para direita, reduce"
      },
      "details": {
        "steps": [
          {
            "title": "Composição Inversa de Funções",
            "text": "pt/step1.md",
            "verify": [
              {
                "name": "Verificar a Correção do Script de Composição em Python",
                "file": "verify1-1.sh",
                "hint": "Certifique-se de ter concluído as ações necessárias."
              }
            ]
          }
        ],
        "intro": {
          "text": "pt/intro.md",
          "title": "Introdução"
        },
        "finish": {
          "text": "pt/finish.md",
          "title": "Resumo"
        }
      }
    }
  ]
}
