{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "challenge",
  "title": "Test if every list element is truthy | Challenge",
  "description": "In this challenge, you will need to create a function that checks if a provided function returns True for every element in a given list, using the `all()` function in combination with `map()`.",
  "meta": {
    "title": "Python Programming | List Manipulation | Conditional Checks",
    "description": "Learn how to use the all() function in Python to check if a specific condition is true for every element in a list. Explore list manipulation and conditional checks with this programming tutorial.",
    "keywords": "Python, programming, list, all, conditional, check, truthy, function"
  },
  "difficulty": "Beginner",
  "time": 15,
  "hidden": true,
  "fee_type": "free",
  "show_in_tutorial": false,
  "details": {
    "steps": [
      {
        "title": "Test if every list element is truthy",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify Python 3 Script Execution in Temporary Directory",
            "file": "verify1-1.sh",
            "hint": "Please make sure you have completed the required actions.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "python/booleans",
          "python/build_in_functions",
          "python/comments",
          "python/default_arguments",
          "python/function_definition",
          "python/lambda_functions",
          "python/lists",
          "python/tuples"
        ],
        "solutions": ["every.py"]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md"
    },
    "assets": {
      "host01": [
        {
          "file": "test_every.py",
          "target": "/tmp",
          "chmod": "ugo+rwx"
        },
        {
          "file": "every.py",
          "target": "/home/labex/project",
          "chmod": "ugo+rwx"
        }
      ]
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["huduo0812", "jiaosenvip"],
  "license": {
    "name": "CC-BY-4.0",
    "url": "https://github.com/30-seconds/30-seconds-of-python/blob/master/LICENSE",
    "repo": "https://github.com/30-seconds/30-seconds-of-python"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "测试列表中的每个元素是否为真值 | 挑战",
      "description": "在这个挑战中，你需要创建一个函数，该函数使用 `all()` 函数并结合 `map()`，来检查给定函数对给定列表中的每个元素是否都返回 `True`。",
      "meta": {
        "title": "Python 编程 | 列表操作 | 条件检查",
        "description": "学习如何在 Python 中使用 `all()` 函数来检查列表中的每个元素是否都满足特定条件。通过本编程教程探索列表操作和条件检查。",
        "keywords": "Python, 编程，列表，all, 条件，检查，真值，函数"
      },
      "details": {
        "steps": [
          {
            "title": "测试列表中的每个元素是否为真值",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "在临时目录中验证 Python 3 脚本的执行情况",
                "file": "verify1-1.sh",
                "hint": "请确保你已完成所需操作。"
              }
            ],
            "solutions": ["every.py"]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Comprueba si cada elemento de una lista es verdadero | Desafío",
      "description": "En este desafío, tendrás que crear una función que compruebe si una función proporcionada devuelve True para cada elemento de una lista dada, usando la función `all()` en combinación con `map()`.",
      "meta": {
        "title": "Programación en Python | Manipulación de listas | Comprobaciones condicionales",
        "description": "Aprende a usar la función all() en Python para comprobar si una condición específica es verdadera para cada elemento de una lista. Explora la manipulación de listas y las comprobaciones condicionales con este tutorial de programación.",
        "keywords": "Python, programación, lista, all, condicional, comprobación, verdadero, función"
      },
      "details": {
        "steps": [
          {
            "title": "Comprueba si cada elemento de una lista es verdadero",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Verifica la ejecución del script de Python 3 en el directorio temporal",
                "file": "verify1-1.sh",
                "hint": "Asegúrate de haber completado las acciones necesarias."
              }
            ],
            "solutions": ["every.py"]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Vérifiez si chaque élément de la liste est considéré comme vrai (truthy) | Défi",
      "description": "Dans ce défi, vous devrez créer une fonction qui vérifie si une fonction fournie renvoie True pour chaque élément d'une liste donnée, en utilisant la fonction `all()` en combinaison avec `map()`.",
      "meta": {
        "title": "Programmation Python | Manipulation de listes | Vérifications conditionnelles",
        "description": "Découvrez comment utiliser la fonction all() en Python pour vérifier si une condition spécifique est vraie pour chaque élément d'une liste. Explorez la manipulation de listes et les vérifications conditionnelles avec ce tutoriel de programmation.",
        "keywords": "Python, programmation, liste, all, conditionnel, vérification, truthy, fonction"
      },
      "details": {
        "steps": [
          {
            "title": "Vérifiez si chaque élément de la liste est considéré comme vrai (truthy)",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Vérifiez l'exécution du script Python 3 dans le répertoire temporaire",
                "file": "verify1-1.sh",
                "hint": "Veuillez vous assurer d'avoir effectué les actions requises."
              }
            ],
            "solutions": ["every.py"]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Testen, ob jedes Listenelement wahrheitswertig ist | Herausforderung",
      "description": "In dieser Herausforderung müssen Sie eine Funktion erstellen, die überprüft, ob eine bereitgestellte Funktion für jedes Element in einer gegebenen Liste `True` zurückgibt, indem Sie die `all()`-Funktion in Kombination mit `map()` verwenden.",
      "meta": {
        "title": "Python-Programmierung | Listenmanipulation | bedingte Überprüfungen",
        "description": "Lernen Sie, wie Sie die `all()`-Funktion in Python verwenden, um zu überprüfen, ob eine bestimmte Bedingung für jedes Element in einer Liste wahr ist. Entdecken Sie die Listenmanipulation und bedingte Überprüfungen mit diesem Programmier-Tutorial.",
        "keywords": "Python, Programmierung, Liste, all, bedingt, Überprüfung, wahrheitswertig, Funktion"
      },
      "details": {
        "steps": [
          {
            "title": "Testen, ob jedes Listenelement wahrheitswertig ist",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Verifizieren der Ausführung eines Python 3-Skripts im temporären Verzeichnis",
                "file": "verify1-1.sh",
                "hint": "Bitte stellen Sie sicher, dass Sie die erforderlichen Aktionen abgeschlossen haben."
              }
            ],
            "solutions": ["every.py"]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "すべてのリスト要素が真であるかどうかをテストする | チャレンジ",
      "description": "このチャレンジでは、`all()` 関数を `map()` と併用して、与えられたリストのすべての要素に対して、提供された関数が `True` を返すかどうかを確認する関数を作成する必要があります。",
      "meta": {
        "title": "Python プログラミング | リスト操作 | 条件チェック",
        "description": "Python で `all()` 関数を使って、リストのすべての要素に対して特定の条件が真であるかどうかを確認する方法を学びましょう。このプログラミングチュートリアルでは、リスト操作と条件チェックを探求します。",
        "keywords": "Python, プログラミング，リスト，all, 条件付き，チェック，真，関数"
      },
      "details": {
        "steps": [
          {
            "title": "すべてのリスト要素が真であるかどうかをテストする",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "一時ディレクトリでの Python 3 スクリプトの実行を確認する",
                "file": "verify1-1.sh",
                "hint": "必要な操作を完了していることを確認してください。"
              }
            ],
            "solutions": ["every.py"]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Проверить, являются ли все элементы списка истинными | Вызов",
      "description": "В этом испытании вам нужно будет создать функцию, которая проверяет, возвращает ли предоставленная функция True для каждого элемента в заданном списке, используя функцию `all()` в сочетании с `map()`.",
      "meta": {
        "title": "Программирование на Python | Обработка списков | Условные проверки",
        "description": "Изучите, как использовать функцию all() в Python для проверки, истинно ли какое-то конкретное условие для каждого элемента в списке. Изучите обработку списков и условные проверки с помощью этого учебника по программированию.",
        "keywords": "Python, программирование, список, all, условный, проверка, истинный, функция"
      },
      "details": {
        "steps": [
          {
            "title": "Проверить, являются ли все элементы списка истинными",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "Проверить выполнение скрипта на Python 3 в временной директории",
                "file": "verify1-1.sh",
                "hint": "Пожалуйста, убедитесь, что вы выполнили все необходимые действия."
              }
            ],
            "solutions": ["every.py"]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    }
  ]
}
