{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "challenge",
  "title": "List Difference Based on Function | Challenge",
  "description": "In Python, we can easily find the difference between two lists using the built-in set() function. However, what if we want to find the difference based on a specific function applied to each element in both lists? In this challenge, you will create a function that takes in two lists and a function, and returns the difference between the two lists after applying the provided function to each list element of both.",
  "meta": {
    "title": "Python | List Difference | Function Application",
    "description": "Learn how to find the difference between two lists in Python based on a specific function applied to each element. Enhance your programming skills with this insightful tutorial.",
    "keywords": "Python, List Difference, Function Application, Programming, Tutorial"
  },
  "difficulty": "Beginner",
  "time": 15,
  "hidden": true,
  "fee_type": "free",
  "show_in_tutorial": false,
  "details": {
    "steps": [
      {
        "title": "List Difference Based on Function",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify Python Script Execution in Temporary Directory",
            "file": "verify1-1.sh",
            "hint": "Please make sure you have completed the required actions.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "python/build_in_functions",
          "python/comments",
          "python/conditional_statements",
          "python/data_collections",
          "python/dictionaries",
          "python/for_loops",
          "python/function_definition",
          "python/lambda_functions",
          "python/list_comprehensions",
          "python/lists",
          "python/tuples",
          "python/variables_data_types"
        ],
        "solutions": ["difference_by.py"]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md"
    },
    "assets": {
      "host01": [
        {
          "file": "test_difference_by.py",
          "target": "/tmp",
          "chmod": "ugo+rwx"
        },
        {
          "file": "difference_by.py",
          "target": "/home/labex/project",
          "chmod": "ugo+rwx"
        }
      ]
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["huduo0812", "jiaosenvip"],
  "license": {
    "name": "CC-BY-4.0",
    "url": "https://github.com/30-seconds/30-seconds-of-python/blob/master/LICENSE",
    "repo": "https://github.com/30-seconds/30-seconds-of-python"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "基于函数的列表差异 | 挑战",
      "description": "在Python中，我们可以使用内置的set()函数轻松找到两个列表之间的差异。但是，如果我们想基于应用于两个列表中每个元素的特定函数来找到差异呢？在这个挑战中，你将创建一个函数，该函数接受两个列表和一个函数，并在将提供的函数应用于两个列表的每个元素后返回两个列表之间的差异。",
      "meta": {
        "title": "Python | 列表差异 | 函数应用",
        "description": "学习如何在Python中基于应用于每个元素的特定函数找到两个列表之间的差异。通过这个有见地的教程提升你的编程技能。",
        "keywords": "Python, 列表差异, 函数应用, 编程, 教程"
      },
      "details": {
        "steps": [
          {
            "title": "基于函数的列表差异",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "在临时目录中验证Python脚本执行情况",
                "file": "verify1-1.sh",
                "hint": "请确保你已完成所需操作。"
              }
            ],
            "solutions": ["difference_by.py"]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Diferencia de listas basada en función | Desafío",
      "description": "En Python, podemos encontrar fácilmente la diferencia entre dos listas utilizando la función integrada set(). Sin embargo, ¿y si queremos encontrar la diferencia basada en una función específica aplicada a cada elemento de ambas listas? En este desafío, crearás una función que tome dos listas y una función, y devuelva la diferencia entre las dos listas después de aplicar la función proporcionada a cada elemento de ambas listas.",
      "meta": {
        "title": "Python | Diferencia de listas | Aplicación de función",
        "description": "Aprende cómo encontrar la diferencia entre dos listas en Python basada en una función específica aplicada a cada elemento. Mejora tus habilidades de programación con este tutorial instructivo.",
        "keywords": "Python, Diferencia de listas, Aplicación de función, Programación, Tutorial"
      },
      "details": {
        "steps": [
          {
            "title": "Diferencia de listas basada en función",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Verificar la ejecución del script de Python en el directorio temporal",
                "file": "verify1-1.sh",
                "hint": "Asegúrese de haber completado las acciones requeridas."
              }
            ],
            "solutions": ["difference_by.py"]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Différence de listes basée sur une fonction | Défi",
      "description": "En Python, nous pouvons facilement trouver la différence entre deux listes en utilisant la fonction intégrée set(). Cependant, que se passe-t-il si nous voulons trouver la différence en fonction d'une fonction spécifique appliquée à chaque élément des deux listes? Dans ce défi, vous devrez créer une fonction qui prend deux listes et une fonction en paramètre, et renvoie la différence entre les deux listes après avoir appliqué la fonction fournie à chaque élément des deux listes.",
      "meta": {
        "title": "Python | Différence de listes | Application de fonction",
        "description": "Apprenez à trouver la différence entre deux listes en Python en fonction d'une fonction spécifique appliquée à chaque élément. Améliorez vos compétences en programmation avec ce tutoriel instructif.",
        "keywords": "Python, Différence de listes, Application de fonction, Programmation, Tutoriel"
      },
      "details": {
        "steps": [
          {
            "title": "Différence de listes basée sur une fonction",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Vérifier l'exécution du script Python dans le répertoire temporaire",
                "file": "verify1-1.sh",
                "hint": "Veuillez vous assurer d'avoir effectué les actions requises."
              }
            ],
            "solutions": ["difference_by.py"]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Listenunterschied basierend auf einer Funktion | Challenge",
      "description": "In Python können wir mithilfe der integrierten set()-Funktion leicht den Unterschied zwischen zwei Listen herausfinden. Was passiert jedoch, wenn wir den Unterschied basierend auf einer bestimmten Funktion, die auf jedes Element in beiden Listen angewendet wird, herausfinden möchten? In dieser Challenge werden Sie eine Funktion erstellen, die zwei Listen und eine Funktion annimmt und den Unterschied zwischen den beiden Listen zurückgibt, nachdem die bereitgestellte Funktion auf jedes Listenelement beider Listen angewendet wurde.",
      "meta": {
        "title": "Python | Listenunterschied | Funktionsanwendung",
        "description": "Lernen Sie, wie man in Python den Unterschied zwischen zwei Listen basierend auf einer bestimmten Funktion, die auf jedes Element angewendet wird, herausfindet. Verbessern Sie Ihre Programmierkenntnisse mit diesem lehrreichen Tutorial.",
        "keywords": "Python, Listenunterschied, Funktionsanwendung, Programmierung, Tutorial"
      },
      "details": {
        "steps": [
          {
            "title": "Listenunterschied basierend auf einer Funktion",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Verifizieren der Ausführung eines Python-Skripts im temporären Verzeichnis",
                "file": "verify1-1.sh",
                "hint": "Bitte stellen Sie sicher, dass Sie die erforderlichen Aktionen abgeschlossen haben."
              }
            ],
            "solutions": ["difference_by.py"]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "関数に基づくリストの差分 | チャレンジ",
      "description": "Pythonでは、組み込みのset()関数を使って、2つのリストの差分を簡単に見つけることができます。ただし、両方のリストの各要素に適用される特定の関数に基づいて差分を見つけたい場合はどうでしょうか。このチャレンジでは、2つのリストと関数を受け取り、両方のリスト要素に提供された関数を適用した後の2つのリストの差分を返す関数を作成します。",
      "meta": {
        "title": "Python | リストの差分 | 関数の適用",
        "description": "Pythonにおいて、各要素に適用される特定の関数に基づいて2つのリストの差分を見つける方法を学びましょう。この洞察に富んだチュートリアルでプログラミングスキルを向上させましょう。",
        "keywords": "Python, リストの差分, 関数の適用, プログラミング, チュートリアル"
      },
      "details": {
        "steps": [
          {
            "title": "関数に基づくリストの差分",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "一時ディレクトリでのPythonスクリプトの実行を確認する",
                "file": "verify1-1.sh",
                "hint": "必要な操作を完了していることを確認してください。"
              }
            ],
            "solutions": ["difference_by.py"]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Разница между списками на основе функции | Вызов",
      "description": "В Python мы можем легко найти разницу между двумя списками с использованием встроенной функции set(). Однако, что если мы хотим найти разницу на основе определенной функции, применяемой к каждому элементу обоих списков? В этом испытании вы создадите функцию, которая принимает два списка и функцию и возвращает разницу между двумя списками после применения указанной функции к каждому элементу списка обоих.",
      "meta": {
        "title": "Python | Разница между списками | Применение функции",
        "description": "Изучите, как найти разницу между двумя списками в Python на основе определенной функции, применяемой к каждому элементу. Повысьте свои навыки программирования с помощью этого информативного руководства.",
        "keywords": "Python, Разница между списками, Применение функции, Программирование, Руководство"
      },
      "details": {
        "steps": [
          {
            "title": "Разница между списками на основе функции",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "Проверить выполнение Python-скрипта в временной директории",
                "file": "verify1-1.sh",
                "hint": "Пожалуйста, убедитесь, что вы выполнили требуемые действия."
              }
            ],
            "solutions": ["difference_by.py"]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    }
  ]
}
