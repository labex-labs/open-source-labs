{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "challenge",
  "title": "Symmetric Difference Based on Function | Challenge",
  "description": "In Python, the symmetric difference between two lists is a new list containing all elements that are in either of the original lists, but not in both. In this challenge, we will write a function that returns the symmetric difference between two lists, after applying the provided function to each list element of both.",
  "meta": {
    "title": "Python | Symmetric Difference | Function Application",
    "description": "Learn how to find the symmetric difference between two lists in Python, applying a function to each element. Improve your coding skills with this programming tutorial.",
    "keywords": "Python, Symmetric Difference, Function Application, Programming Tutorial, List Operations"
  },
  "difficulty": "Beginner",
  "time": 15,
  "hidden": true,
  "fee_type": "free",
  "show_in_tutorial": false,
  "details": {
    "steps": [
      {
        "title": "Symmetric Difference Based on Function",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify Symmetric Difference By Python Script",
            "file": "verify1-1.sh",
            "hint": "Please make sure you have completed the required actions.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "python/build_in_functions",
          "python/conditional_statements",
          "python/custom_exceptions",
          "python/data_collections",
          "python/for_loops",
          "python/function_definition",
          "python/importing_modules",
          "python/list_comprehensions",
          "python/lists",
          "python/math_random",
          "python/standard_libraries",
          "python/tuples",
          "python/using_packages",
          "python/variables_data_types"
        ],
        "solutions": ["symmetric_difference_by.py"]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md"
    },
    "assets": {
      "host01": [
        {
          "file": "test_symmetric_difference_by.py",
          "target": "/tmp",
          "chmod": "ugo+rwx"
        },
        {
          "file": "symmetric_difference_by.py",
          "target": "/home/labex/project",
          "chmod": "ugo+rwx"
        }
      ]
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["huduo0812", "jiaosenvip"],
  "license": {
    "name": "CC-BY-4.0",
    "url": "https://github.com/30-seconds/30-seconds-of-python/blob/master/LICENSE",
    "repo": "https://github.com/30-seconds/30-seconds-of-python"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "基于函数的对称差 | 挑战",
      "description": "在 Python 中，两个列表的对称差是一个新列表，它包含原始列表中任意一个列表里的所有元素，但不包含两个列表都有的元素。在这个挑战中，我们将编写一个函数，该函数在对两个列表的每个元素都应用提供的函数之后，返回这两个列表的对称差。",
      "meta": {
        "title": "Python | 对称差 | 函数应用",
        "description": "学习如何在 Python 中找到两个列表的对称差，并对每个元素应用一个函数。通过本编程教程提升你的编码技能。",
        "keywords": "Python, 对称差，函数应用，编程教程，列表操作"
      },
      "details": {
        "steps": [
          {
            "title": "基于函数的对称差",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "通过 Python 脚本验证对称差",
                "file": "verify1-1.sh",
                "hint": "请确保你已完成所需操作。"
              }
            ],
            "solutions": ["symmetric_difference_by.py"]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Diferencia simétrica basada en función | Desafío",
      "description": "En Python, la diferencia simétrica entre dos listas es una nueva lista que contiene todos los elementos que se encuentran en cualquiera de las listas originales, pero no en ambas. En este desafío, escribiremos una función que devuelva la diferencia simétrica entre dos listas, después de aplicar la función proporcionada a cada elemento de ambas listas.",
      "meta": {
        "title": "Python | Diferencia simétrica | Aplicación de función",
        "description": "Aprende cómo encontrar la diferencia simétrica entre dos listas en Python, aplicando una función a cada elemento. Mejora tus habilidades de codificación con este tutorial de programación.",
        "keywords": "Python, Diferencia simétrica, Aplicación de función, Tutorial de programación, Operaciones con listas"
      },
      "details": {
        "steps": [
          {
            "title": "Diferencia simétrica basada en función",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Verificar la diferencia simétrica con un script de Python",
                "file": "verify1-1.sh",
                "hint": "Asegúrese de haber completado las acciones requeridas."
              }
            ],
            "solutions": ["symmetric_difference_by.py"]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Différence symétrique basée sur une fonction | Défi",
      "description": "En Python, la différence symétrique entre deux listes est une nouvelle liste contenant tous les éléments qui se trouvent dans l'une ou l'autre des listes d'origine, mais pas dans les deux. Dans ce défi, nous allons écrire une fonction qui renvoie la différence symétrique entre deux listes, après avoir appliqué la fonction fournie à chaque élément de liste des deux.",
      "meta": {
        "title": "Python | Différence symétrique | Application de fonction",
        "description": "Apprenez à trouver la différence symétrique entre deux listes en Python, en appliquant une fonction à chaque élément. Améliorez vos compétences de codage avec ce tutoriel de programmation.",
        "keywords": "Python, Différence symétrique, Application de fonction, Tutoriel de programmation, Opérations sur les listes"
      },
      "details": {
        "steps": [
          {
            "title": "Différence symétrique basée sur une fonction",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Vérifier la différence symétrique par un script Python",
                "file": "verify1-1.sh",
                "hint": "Veuillez vous assurer d'avoir effectué les actions requises."
              }
            ],
            "solutions": ["symmetric_difference_by.py"]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Symmetrische Differenz basierend auf einer Funktion | Challenge",
      "description": "In Python ist die symmetrische Differenz zwischen zwei Listen eine neue Liste, die alle Elemente enthält, die in einer der ursprünglichen Listen vorhanden sind, aber nicht in beiden. In dieser Challenge werden wir eine Funktion schreiben, die die symmetrische Differenz zwischen zwei Listen zurückgibt, nachdem die bereitgestellte Funktion auf jedes Listenelement beider Listen angewendet wurde.",
      "meta": {
        "title": "Python | Symmetrische Differenz | Funktionsanwendung",
        "description": "Lernen Sie, wie Sie die symmetrische Differenz zwischen zwei Listen in Python finden, indem Sie eine Funktion auf jedes Element anwenden. Verbessern Sie Ihre Programmierkenntnisse mit diesem Programmier-Tutorial.",
        "keywords": "Python, Symmetrische Differenz, Funktionsanwendung, Programmier-Tutorial, Listenoperationen"
      },
      "details": {
        "steps": [
          {
            "title": "Symmetrische Differenz basierend auf einer Funktion",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Verifizieren Sie die symmetrische Differenz mithilfe eines Python-Skripts",
                "file": "verify1-1.sh",
                "hint": "Bitte stellen Sie sicher, dass Sie die erforderlichen Aktionen abgeschlossen haben."
              }
            ],
            "solutions": ["symmetric_difference_by.py"]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "関数に基づく対称差 | チャレンジ",
      "description": "Python では、2 つのリストの対称差は、元のリストのどちらかには含まれているが、両方には含まれていないすべての要素を含む新しいリストです。このチャレンジでは、与えられた関数を両方のリストの各要素に適用した後、2 つのリストの対称差を返す関数を書きます。",
      "meta": {
        "title": "Python | 対称差 | 関数の適用",
        "description": "Python で 2 つのリストの対称差を見つける方法を学び、各要素に関数を適用します。このプログラミング チュートリアルでコーディング スキルを向上させましょう。",
        "keywords": "Python, 対称差，関数の適用，プログラミング チュートリアル，リスト操作"
      },
      "details": {
        "steps": [
          {
            "title": "関数に基づく対称差",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "Python スクリプトによる対称差の検証",
                "file": "verify1-1.sh",
                "hint": "必要な操作を完了していることを確認してください。"
              }
            ],
            "solutions": ["symmetric_difference_by.py"]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Разница между двумя списками на основе функции | Задача",
      "description": "В Python симметрическая разница между двумя списками представляет собой новый список, содержащий все элементы, которые находятся в одном из исходных списков, но не в обоих. В этом испытании мы напишем функцию, которая возвращает симметрическую разницу между двумя списками, после применения заданной функции к каждому элементу обоих списков.",
      "meta": {
        "title": "Python | Симметрическая разница | Применение функции",
        "description": "Изучите, как найти симметрическую разницу между двумя списками в Python, применяя функцию к каждому элементу. Повысьте свои навыки программирования с помощью этого учебника по программированию.",
        "keywords": "Python, Симметрическая разница, Применение функции, Учебник по программированию, Операции со списками"
      },
      "details": {
        "steps": [
          {
            "title": "Разница между двумя списками на основе функции",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "Проверить симметрическую разницу с помощью скрипта на Python",
                "file": "verify1-1.sh",
                "hint": "Пожалуйста, убедитесь, что вы выполнили все необходимые действия."
              }
            ],
            "solutions": ["symmetric_difference_by.py"]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    }
  ]
}
