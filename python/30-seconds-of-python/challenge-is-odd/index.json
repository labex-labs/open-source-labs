{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "challenge",
  "title": "Check if a Number is Odd | Challenge",
  "description": "In programming, it is often necessary to check whether a given number is odd or even. This can be useful in various scenarios, such as when working with loops, conditional statements, or mathematical operations. In this challenge, you will be asked to write a function that checks whether a given number is odd or even.",
  "meta": {
    "title": "Odd Number Checker: A Coding Challenge",
    "description": "Learn how to write a Python function that checks if a given number is odd or even.",
    "keywords": "odd number, python, coding, even number, programming"
  },
  "difficulty": "Beginner",
  "time": 15,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": false,
  "details": {
    "steps": [
      {
        "title": "Check if a Number is Odd",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify Student's Odd Number Check",
            "file": "verify1-1.sh",
            "hint": "Please make sure you have completed the required actions.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [],
        "solutions": ["is_odd.py"]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md"
    },
    "assets": {
      "host01": [
        {
          "file": "test_is_odd.py",
          "target": "/tmp",
          "chmod": "ugo+rwx"
        },
        {
          "file": "is_odd.py",
          "target": "/home/labex/project",
          "chmod": "ugo+rwx"
        }
      ]
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["huduo0812", "jiaosenvip"],
  "license": {
    "name": "CC-BY-4.0",
    "url": "https://github.com/30-seconds/30-seconds-of-python/blob/master/LICENSE",
    "repo": "https://github.com/30-seconds/30-seconds-of-python"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "检查一个数字是否为奇数 | 挑战",
      "description": "在编程中，经常需要检查一个给定的数字是奇数还是偶数。这在各种场景中都很有用，比如在使用循环、条件语句或数学运算时。在这个挑战中，你将被要求编写一个函数来检查一个给定的数字是奇数还是偶数。",
      "meta": {
        "title": "奇数检查器：一个编码挑战",
        "description": "学习如何编写一个 Python 函数来检查一个给定的数字是奇数还是偶数。",
        "keywords": "奇数，Python, 编码，偶数，编程"
      },
      "details": {
        "steps": [
          {
            "title": "检查一个数字是否为奇数",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "验证学生对奇数的检查",
                "file": "verify1-1.sh",
                "hint": "请确保你已完成所需操作。"
              }
            ],
            "solutions": ["is_odd.py"]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Comprueba si un número es impar | Desafío",
      "description": "En la programación, a menudo es necesario comprobar si un número dado es impar o par. Esto puede ser útil en varios escenarios, como cuando se trabaja con bucles, declaraciones condicionales o operaciones matemáticas. En este desafío, se te pedirá escribir una función que compruebe si un número dado es impar o par.",
      "meta": {
        "title": "Verificador de números impares: un desafío de codificación",
        "description": "Aprende a escribir una función de Python que compruebe si un número dado es impar o par.",
        "keywords": "número impar, python, codificación, número par, programación"
      },
      "details": {
        "steps": [
          {
            "title": "Comprueba si un número es impar",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Verifica la comprobación de números impares del estudiante",
                "file": "verify1-1.sh",
                "hint": "Asegúrate de haber completado las acciones requeridas."
              }
            ],
            "solutions": ["is_odd.py"]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Vérifier si un nombre est impair | Défi",
      "description": "En programmation, il est souvent nécessaire de vérifier si un nombre donné est impair ou pair. Cela peut être utile dans diverses situations, par exemple lorsqu'on travaille avec des boucles, des instructions conditionnelles ou des opérations mathématiques. Dans ce défi, vous devrez écrire une fonction qui vérifie si un nombre donné est impair ou pair.",
      "meta": {
        "title": "Vérificateur de nombres impairs : Un défi de codage",
        "description": "Apprenez à écrire une fonction Python qui vérifie si un nombre donné est impair ou pair.",
        "keywords": "nombre impair, python, codage, nombre pair, programmation"
      },
      "details": {
        "steps": [
          {
            "title": "Vérifier si un nombre est impair",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Vérifier la vérification de nombre impair de l'étudiant",
                "file": "verify1-1.sh",
                "hint": "Veuillez vous assurer d'avoir effectué les actions requises."
              }
            ],
            "solutions": ["is_odd.py"]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Überprüfen, ob eine Zahl ungerade ist | Herausforderung",
      "description": "Beim Programmieren ist es oft erforderlich, zu überprüfen, ob eine gegebene Zahl ungerade oder gerade ist. Dies kann in verschiedenen Szenarien nützlich sein, wie beispielsweise bei der Arbeit mit Schleifen, bedingten Anweisungen oder mathematischen Operationen. In dieser Herausforderung werden Sie aufgefordert, eine Funktion zu schreiben, die überprüft, ob eine gegebene Zahl ungerade oder gerade ist.",
      "meta": {
        "title": "Ungerade-Zahl-Prüfgerät: Eine Codierungschallenge",
        "description": "Lernen Sie, wie Sie eine Python-Funktion schreiben, die überprüft, ob eine gegebene Zahl ungerade oder gerade ist.",
        "keywords": "ungerade Zahl, Python, Codierung, gerade Zahl, Programmierung"
      },
      "details": {
        "steps": [
          {
            "title": "Überprüfen, ob eine Zahl ungerade ist",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Überprüfen der Prüfung auf ungerade Zahlen durch den Schüler",
                "file": "verify1-1.sh",
                "hint": "Bitte stellen Sie sicher, dass Sie die erforderlichen Aktionen ausgeführt haben."
              }
            ],
            "solutions": ["is_odd.py"]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "数が奇数であるかチェックする | チャレンジ",
      "description": "プログラミングにおいて、与えられた数が奇数か偶数かをチェックする必要がよくあります。これは、ループ、条件文、または数学的演算を扱う際など、さまざまなシナリオで役立ちます。このチャレンジでは、与えられた数が奇数か偶数かをチェックする関数を書くよう求められます。",
      "meta": {
        "title": "奇数チェッカー：コーディングチャレンジ",
        "description": "与えられた数が奇数か偶数かをチェックする Python 関数を書く方法を学びましょう。",
        "keywords": "奇数，Python, コーディング，偶数，プログラミング"
      },
      "details": {
        "steps": [
          {
            "title": "数が奇数であるかチェックする",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "学生の奇数チェックを確認する",
                "file": "verify1-1.sh",
                "hint": "必要な操作を完了していることを確認してください。"
              }
            ],
            "solutions": ["is_odd.py"]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Проверить, является ли число нечетным | Вызов",
      "description": "В программировании часто необходимо проверить, является ли данное число нечетным или четным. Это может быть полезно в различных сценариях, таких как работа с циклами, условными операторами или математическими операциями. В этом испытании вам будет предложено написать функцию, которая проверяет, является ли данное число нечетным или четным.",
      "meta": {
        "title": "Проверщик нечетных чисел: кодировочный вызов",
        "description": "Изучите, как написать функцию на Python, которая проверяет, является ли данное число нечетным или четным.",
        "keywords": "нечетное число, python, кодирование, четное число, программирование"
      },
      "details": {
        "steps": [
          {
            "title": "Проверить, является ли число нечетным",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "Проверить проверку нечетных чисел студента",
                "file": "verify1-1.sh",
                "hint": "Пожалуйста, убедитесь, что вы выполнили требуемые действия."
              }
            ],
            "solutions": ["is_odd.py"]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    }
  ]
}
