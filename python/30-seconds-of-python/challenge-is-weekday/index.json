{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "challenge",
  "title": "Check if a Date is a Weekday | Challenge",
  "description": "In Python, you can use the datetime module to work with dates and times. One common task is to check if a given date is a weekday or a weekend. In this challenge, you will write a function that takes a date as input and returns True if it is a weekday, and False if it is a weekend.",
  "meta": {
    "title": "Python Date and Time | Weekday Checker",
    "description": "Learn how to use Python's datetime module to check if a given date is a weekday or a weekend. Improve your Python programming skills with this helpful tutorial.",
    "keywords": "Python, datetime, date, time, weekday, weekend, programming, tutorial"
  },
  "difficulty": "Beginner",
  "time": 15,
  "hidden": true,
  "fee_type": "free",
  "show_in_tutorial": false,
  "details": {
    "steps": [
      {
        "title": "Check if a Date is a Weekday",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify If Weekday Python Script Execution",
            "file": "verify1-1.sh",
            "hint": "Please make sure you have completed the required actions.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "python/booleans",
          "python/custom_exceptions",
          "python/date_time",
          "python/default_arguments",
          "python/function_definition",
          "python/importing_modules",
          "python/standard_libraries",
          "python/tuples",
          "python/using_packages"
        ],
        "solutions": ["is_weekday.py"]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md"
    },
    "assets": {
      "host01": [
        {
          "file": "test_is_weekday.py",
          "target": "/tmp",
          "chmod": "ugo+rwx"
        },
        {
          "file": "is_weekday.py",
          "target": "/home/labex/project",
          "chmod": "ugo+rwx"
        }
      ]
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["huduo0812", "jiaosenvip"],
  "license": {
    "name": "CC-BY-4.0",
    "url": "https://github.com/30-seconds/30-seconds-of-python/blob/master/LICENSE",
    "repo": "https://github.com/30-seconds/30-seconds-of-python"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "检查日期是否为工作日 | 挑战",
      "description": "在Python中，你可以使用datetime模块来处理日期和时间。一个常见的任务是检查给定的日期是工作日还是周末。在这个挑战中，你将编写一个函数，该函数接受一个日期作为输入，如果是工作日则返回True，如果是周末则返回False。",
      "meta": {
        "title": "Python日期和时间 | 工作日检查器",
        "description": "学习如何使用Python的datetime模块来检查给定的日期是工作日还是周末。通过这个有用的教程提高你的Python编程技能。",
        "keywords": "Python, datetime, 日期, 时间, 工作日, 周末, 编程, 教程"
      },
      "details": {
        "steps": [
          {
            "title": "检查日期是否为工作日",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "验证工作日Python脚本执行情况",
                "file": "verify1-1.sh",
                "hint": "请确保你已完成所需操作。"
              }
            ],
            "solutions": ["is_weekday.py"]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Comprueba si una fecha es un día hábil | Desafío",
      "description": "En Python, puedes usar el módulo datetime para trabajar con fechas y horas. Una tarea común es comprobar si una fecha dada es un día hábil o un fin de semana. En este desafío, escribirás una función que tome una fecha como entrada y devuelva True si es un día hábil y False si es un fin de semana.",
      "meta": {
        "title": "Fecha y hora de Python | Verificador de días hábiles",
        "description": "Aprende a usar el módulo datetime de Python para comprobar si una fecha dada es un día hábil o un fin de semana. Mejora tus habilidades de programación en Python con este útil tutorial.",
        "keywords": "Python, datetime, fecha, hora, día hábil, fin de semana, programación, tutorial"
      },
      "details": {
        "steps": [
          {
            "title": "Comprueba si una fecha es un día hábil",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Verifica la ejecución del script de Python para días hábiles",
                "file": "verify1-1.sh",
                "hint": "Asegúrate de haber completado las acciones requeridas."
              }
            ],
            "solutions": ["is_weekday.py"]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Vérifiez si une date est un jour de semaine | Défi",
      "description": "En Python, vous pouvez utiliser le module datetime pour travailler avec les dates et les heures. Une tâche courante consiste à vérifier si une date donnée est un jour de semaine ou un week-end. Dans ce défi, vous écrirez une fonction qui prend une date en entrée et renvoie True si c'est un jour de semaine, et False si c'est un week-end.",
      "meta": {
        "title": "Date et heure en Python | Vérificateur de jour de semaine",
        "description": "Apprenez à utiliser le module datetime de Python pour vérifier si une date donnée est un jour de semaine ou un week-end. Améliorez vos compétences en programmation Python avec ce tutoriel utile.",
        "keywords": "Python, datetime, date, heure, jour de semaine, week-end, programmation, tutoriel"
      },
      "details": {
        "steps": [
          {
            "title": "Vérifiez si une date est un jour de semaine",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Vérifiez l'exécution du script Python pour le jour de semaine",
                "file": "verify1-1.sh",
                "hint": "Veuillez vous assurer d'avoir effectué les actions requises."
              }
            ],
            "solutions": ["is_weekday.py"]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Überprüfen, ob ein Datum ein Werktag ist | Herausforderung",
      "description": "In Python kannst du das Modul datetime verwenden, um mit Daten und Zeiten umzugehen. Eine häufige Aufgabe besteht darin, zu überprüfen, ob ein gegebenes Datum ein Werktag oder ein Wochenende ist. In dieser Herausforderung wirst du eine Funktion schreiben, die ein Datum als Eingabe erhält und True zurückgibt, wenn es ein Werktag ist, und False, wenn es ein Wochenende ist.",
      "meta": {
        "title": "Python Datum und Zeit | Wochentag-Prüfgerät",
        "description": "Lerne, wie du das datetime-Modul von Python verwendest, um zu überprüfen, ob ein gegebenes Datum ein Werktag oder ein Wochenende ist. Verbessere deine Python-Programmierkenntnisse mit diesem hilfreichen Tutorial.",
        "keywords": "Python, datetime, Datum, Zeit, Werktag, Wochenende, Programmierung, Tutorial"
      },
      "details": {
        "steps": [
          {
            "title": "Überprüfen, ob ein Datum ein Werktag ist",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Verifizieren der Ausführung des Python-Skripts für den Wochentag",
                "file": "verify1-1.sh",
                "hint": "Bitte stellen Sie sicher, dass Sie die erforderlichen Aktionen abgeschlossen haben."
              }
            ],
            "solutions": ["is_weekday.py"]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "日付が平日かどうかを確認する | チャレンジ",
      "description": "Pythonでは、日付と時刻を扱うためにdatetimeモジュールを使用できます。一般的なタスクの1つは、与えられた日付が平日か休日かを確認することです。このチャレンジでは、日付を入力として受け取り、平日の場合はTrueを返し、休日の場合はFalseを返す関数を書きます。",
      "meta": {
        "title": "Pythonの日付と時刻 | 平日チェッカー",
        "description": "Pythonのdatetimeモジュールを使って、与えられた日付が平日か休日かを確認する方法を学びましょう。この有益なチュートリアルでPythonのプログラミングスキルを向上させましょう。",
        "keywords": "Python, datetime, 日付, 時刻, 平日, 休日, プログラミング, チュートリアル"
      },
      "details": {
        "steps": [
          {
            "title": "日付が平日かどうかを確認する",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "平日の場合のPythonスクリプト実行を確認する",
                "file": "verify1-1.sh",
                "hint": "必要な操作を完了していることを確認してください。"
              }
            ],
            "solutions": ["is_weekday.py"]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Проверьте, является ли дата рабочим днем | Вызов",
      "description": "В Python можно использовать модуль datetime для работы с датами и временем. Одной из распространенных задач является проверка, является ли заданная дата рабочим днем или выходным. В этом испытании вы напишете функцию, которая принимает дату в качестве входных данных и возвращает True, если это рабочий день, и False, если это выходной день.",
      "meta": {
        "title": "Дата и время в Python | Проверщик рабочих дней",
        "description": "Изучите, как использовать модуль datetime в Python для проверки, является ли заданная дата рабочим днем или выходным. Повысьте свои навыки программирования на Python с помощью этого полезного руководства.",
        "keywords": "Python, datetime, дата, время, рабочий день, выходной день, программирование, руководство"
      },
      "details": {
        "steps": [
          {
            "title": "Проверьте, является ли дата рабочим днем",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "Проверьте выполнение сценария Python для рабочего дня",
                "file": "verify1-1.sh",
                "hint": "Пожалуйста, убедитесь, что вы выполнили требуемые действия."
              }
            ],
            "solutions": ["is_weekday.py"]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    }
  ]
}
