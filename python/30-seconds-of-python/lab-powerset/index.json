{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Power Set Generation in Python",
  "description": "In mathematics, the power set of a set is the set of all subsets of the set, including the empty set and the set itself. In Python, we can create a function that returns the powerset of a given iterable.",
  "meta": {
    "title": "Python Powerset | Itertools Combinations",
    "description": "Learn how to create a Python function that generates the powerset of a given iterable using itertools combinations.",
    "keywords": "python, powerset, itertools, combinations, programming, algorithms"
  },
  "difficulty": "Beginner",
  "time": 15,
  "hidden": true,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Powerset Challenge",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify PowerSet Python Script Execution",
            "file": "verify1-1.sh",
            "hint": "Please make sure you have completed the required actions.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "python/build_in_functions",
          "python/comments",
          "python/data_collections",
          "python/for_loops",
          "python/function_definition",
          "python/importing_modules",
          "python/lists",
          "python/standard_libraries",
          "python/tuples",
          "python/using_packages",
          "python/variables_data_types"
        ]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    },
    "assets": {
      "host01": [
        {
          "file": "test_powerset.py",
          "target": "/tmp",
          "chmod": "ugo+rwx"
        },
        {
          "file": "powerset.py",
          "target": "/home/labex/project",
          "chmod": "ugo+rwx"
        }
      ]
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["huduo0812", "jiaosenvip"],
  "license": {
    "name": "CC-BY-4.0",
    "url": "https://github.com/30-seconds/30-seconds-of-python/blob/master/LICENSE",
    "repo": "https://github.com/30-seconds/30-seconds-of-python"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "Python 中的幂集生成",
      "description": "在数学中，一个集合的幂集是该集合所有子集的集合，包括空集和集合本身。在 Python 中，我们可以创建一个函数来返回给定可迭代对象的幂集。",
      "meta": {
        "title": "Python 幂集 | Itertools 组合",
        "description": "学习如何使用 itertools 组合创建一个生成给定可迭代对象幂集的 Python 函数。",
        "keywords": "Python, 幂集，Itertools, 组合，编程，算法"
      },
      "details": {
        "steps": [
          {
            "title": "幂集挑战",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "验证幂集 Python 脚本的执行情况",
                "file": "verify1-1.sh",
                "hint": "请确保你已完成所需操作。"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Generación del conjunto potencia en Python",
      "description": "En matemáticas, el conjunto potencia de un conjunto es el conjunto de todos los subconjuntos del conjunto, incluyendo el conjunto vacío y el conjunto mismo. En Python, podemos crear una función que devuelva el conjunto potencia de un iterable dado.",
      "meta": {
        "title": "Conjunto potencia de Python | Combinaciones de itertools",
        "description": "Aprende cómo crear una función de Python que genera el conjunto potencia de un iterable dado utilizando combinaciones de itertools.",
        "keywords": "python, conjunto potencia, itertools, combinaciones, programación, algoritmos"
      },
      "details": {
        "steps": [
          {
            "title": "Desafío del conjunto potencia",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Verificar la ejecución del script de Python del conjunto potencia",
                "file": "verify1-1.sh",
                "hint": "Asegúrese de haber completado las acciones requeridas."
              }
            ]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Génération de l'ensemble des parties en Python",
      "description": "En mathématiques, l'ensemble des parties d'un ensemble est l'ensemble de tous les sous-ensembles de cet ensemble, y compris l'ensemble vide et l'ensemble lui-même. En Python, on peut créer une fonction qui renvoie l'ensemble des parties d'un itérable donné.",
      "meta": {
        "title": "Ensemble des parties Python | Combinations itertools",
        "description": "Découvrez comment créer une fonction Python qui génère l'ensemble des parties d'un itérable donné en utilisant les combinaisons itertools.",
        "keywords": "python, ensemble des parties, itertools, combinaisons, programmation, algorithmes"
      },
      "details": {
        "steps": [
          {
            "title": "Défi de l'ensemble des parties",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Vérifier l'exécution du script Python de l'ensemble des parties",
                "file": "verify1-1.sh",
                "hint": "Veuillez vous assurer d'avoir effectué les actions requises."
              }
            ]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Potenzmengegenerierung in Python",
      "description": "In der Mathematik ist die Potenzmenge einer Menge die Menge aller Teilmengen der Menge, einschließlich der leeren Menge und der Menge selbst. In Python können wir eine Funktion erstellen, die die Potenzmenge eines gegebenen Iterierbaren zurückgibt.",
      "meta": {
        "title": "Python Potenzmenge | Itertools Kombinationen",
        "description": "Lernen Sie, wie Sie eine Python-Funktion erstellen, die die Potenzmenge eines gegebenen Iterierbaren mit Hilfe von Itertools-Kombinationen generiert.",
        "keywords": "python, Potenzmenge, Itertools, Kombinationen, Programmierung, Algorithmen"
      },
      "details": {
        "steps": [
          {
            "title": "Potenzmengenschallenge",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Verifizieren der Ausführung des Python-Skripts für die Potenzmenge",
                "file": "verify1-1.sh",
                "hint": "Bitte stellen Sie sicher, dass Sie die erforderlichen Aktionen abgeschlossen haben."
              }
            ]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "Python における冪集合の生成",
      "description": "数学において、集合の冪集合とは、空集合と集合自身を含む、その集合のすべての部分集合の集合です。Python では、与えられた反復可能オブジェクトの冪集合を返す関数を作成することができます。",
      "meta": {
        "title": "Python の冪集合 | Itertools の組み合わせ",
        "description": "itertools の組み合わせを使って、与えられた反復可能オブジェクトの冪集合を生成する Python 関数を作成する方法を学びましょう。",
        "keywords": "python, 冪集合，itertools, 組み合わせ，プログラミング，アルゴリズム"
      },
      "details": {
        "steps": [
          {
            "title": "冪集合チャレンジ",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "Python の冪集合スクリプトの実行を確認する",
                "file": "verify1-1.sh",
                "hint": "必要な操作を完了していることを確認してください。"
              }
            ]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Генерация мощности множества в Python",
      "description": "В математике мощность множества - это множество всех подмножеств данного множества, включая пустое множество и само множество. В Python мы можем создать функцию, которая возвращает мощность заданного итерируемого объекта.",
      "meta": {
        "title": "Мощность множества в Python | Комбинации itertools",
        "description": "Изучите, как создать функцию на Python, которая генерирует мощность множества заданного итерируемого объекта с использованием комбинаций itertools.",
        "keywords": "python, мощность множества, itertools, комбинации, программирование, алгоритмы"
      },
      "details": {
        "steps": [
          {
            "title": "Задача по мощности множества",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "Проверить выполнение скрипта на Python для мощности множества",
                "file": "verify1-1.sh",
                "hint": "Пожалуйста, убедитесь, что вы выполнили все необходимые действия."
              }
            ]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    },
    {
      "lang": "ko",
      "title": "Python 멱집합 생성",
      "description": "수학에서 집합의 멱집합은 공집합과 집합 자체를 포함하여 해당 집합의 모든 부분집합의 집합입니다. Python 에서는 주어진 iterable 의 멱집합을 반환하는 함수를 만들 수 있습니다.",
      "meta": {
        "title": "Python 멱집합 | Itertools 조합 (Combinations)",
        "description": "itertools 조합을 사용하여 주어진 iterable 의 멱집합을 생성하는 Python 함수를 만드는 방법을 알아보세요.",
        "keywords": "python, 멱집합, itertools, 조합, 프로그래밍, 알고리즘, 파이썬 멱집합, 파이썬 부분집합"
      },
      "details": {
        "steps": [
          {
            "title": "멱집합 챌린지",
            "text": "ko/step1.md",
            "verify": [
              {
                "name": "Python 멱집합 스크립트 실행 확인",
                "file": "verify1-1.sh",
                "hint": "필수 작업을 완료했는지 확인하십시오."
              }
            ]
          }
        ],
        "intro": {
          "text": "ko/intro.md",
          "title": "소개"
        },
        "finish": {
          "text": "ko/finish.md",
          "title": "요약"
        }
      }
    },
    {
      "lang": "pt",
      "title": "Geração do Conjunto das Partes em Python",
      "description": "Na matemática, o conjunto das partes (powerset) de um conjunto é o conjunto de todos os subconjuntos do conjunto, incluindo o conjunto vazio e o próprio conjunto. Em Python, podemos criar uma função que retorna o conjunto das partes de um iterável dado.",
      "meta": {
        "title": "Powerset em Python | Combinações Itertools",
        "description": "Aprenda como criar uma função Python que gera o conjunto das partes de um iterável dado usando combinações itertools. Descubra como calcular todos os subconjuntos de um conjunto em Python.",
        "keywords": "python, powerset, itertools, combinações, programação, algoritmos, subconjuntos, conjunto das partes"
      },
      "details": {
        "steps": [
          {
            "title": "Desafio do Conjunto das Partes",
            "text": "pt/step1.md",
            "verify": [
              {
                "name": "Verificar Execução do Script Python do Conjunto das Partes",
                "file": "verify1-1.sh",
                "hint": "Por favor, certifique-se de ter concluído as ações necessárias."
              }
            ]
          }
        ],
        "intro": {
          "text": "pt/intro.md",
          "title": "Introdução"
        },
        "finish": {
          "text": "pt/finish.md",
          "title": "Resumo"
        }
      }
    }
  ]
}
