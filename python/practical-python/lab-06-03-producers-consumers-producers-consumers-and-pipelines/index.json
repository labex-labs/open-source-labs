{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Producers, Consumers and Pipelines",
  "description": "Generators are a useful tool for setting various kinds of producer/consumer problems and dataflow pipelines. This section discusses that.",
  "meta": {
    "title": "Producers, Consumers, and Pipelines: Unlocking the Power of Generators",
    "description": "Explore the intricacies of producer-consumer problems and generator-based data processing pipelines in this comprehensive programming tutorial.",
    "keywords": "data processing, producer consumer, python playground, python, programming concepts, generators, data pipelines"
  },
  "difficulty": "Beginner",
  "time": 40,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Producer-Consumer Problems",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "This step has no verification at the moment",
            "file": "verify1-1.sh",
            "hint": "This step has no verification at the moment",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "python/booleans",
          "python/comments",
          "python/for_loops",
          "python/function_definition",
          "python/generators",
          "python/while_loops"
        ]
      },
      {
        "title": "Generator Pipelines",
        "text": "en/step2.md",
        "verify": [
          {
            "name": "This step has no verification at the moment",
            "file": "verify2-1.sh",
            "hint": "This step has no verification at the moment",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "python/comments",
          "python/for_loops",
          "python/function_definition",
          "python/generators"
        ]
      },
      {
        "title": "Exercise 6.8: Setting up a simple pipeline",
        "text": "en/step3.md",
        "verify": [
          {
            "name": "Verify Python History Contains 'yield' Keyword",
            "file": "verify3-1.sh",
            "hint": "Please follow the instructions to complete the steps.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "python/build_in_functions",
          "python/conditional_statements",
          "python/for_loops",
          "python/function_definition",
          "python/generators",
          "python/importing_modules",
          "python/python_shell",
          "python/standard_libraries",
          "python/tuples",
          "python/using_packages"
        ]
      },
      {
        "title": "Exercise 6.9: Setting up a more complex pipeline",
        "text": "en/step4.md",
        "verify": [
          {
            "name": "Verify if Python History Includes CSV Import",
            "file": "verify4-1.sh",
            "hint": "Please follow the instructions to complete the steps.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "python/build_in_functions",
          "python/for_loops",
          "python/importing_modules",
          "python/lists",
          "python/python_shell",
          "python/standard_libraries",
          "python/using_packages"
        ]
      },
      {
        "title": "Exercise 6.10: Making more pipeline components",
        "text": "en/step5.md",
        "verify": [
          {
            "name": "Verify Presence of make_dicts Function in ticker.py",
            "file": "verify5-1.sh",
            "hint": "Please follow the instructions to complete the steps.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "python/build_in_functions",
          "python/comments",
          "python/conditional_statements",
          "python/data_collections",
          "python/for_loops",
          "python/function_definition",
          "python/generators",
          "python/importing_modules",
          "python/list_comprehensions",
          "python/lists",
          "python/numeric_types",
          "python/standard_libraries",
          "python/strings",
          "python/tuples",
          "python/using_packages",
          "python/variables_data_types"
        ]
      },
      {
        "title": "Exercise 6.11: Filtering data",
        "text": "en/step6.md",
        "verify": [
          {
            "name": "Verify Presence of 'filter_symbols' in Python History",
            "file": "verify6-1.sh",
            "hint": "Please follow the instructions to complete the steps.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "python/build_in_functions",
          "python/comments",
          "python/conditional_statements",
          "python/for_loops",
          "python/function_definition",
          "python/generators",
          "python/importing_modules",
          "python/lists",
          "python/standard_libraries",
          "python/tuples"
        ]
      },
      {
        "title": "Discussion",
        "text": "en/step8.md",
        "verify": [
          {
            "name": "This step has no verification at the moment",
            "file": "verify8-1.sh",
            "hint": "This step has no verification at the moment",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": []
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    },
    "assets": {
      "host01": [
        {
          "file": "portfolio.csv",
          "target": "/home/labex/project",
          "chmod": "ugo+rwx"
        },
        {
          "file": "stocksim.py",
          "target": "/home/labex/project",
          "chmod": "ugo+rwx"
        },
        {
          "file": "fileparse.py",
          "target": "/home/labex/project",
          "chmod": "ugo+rwx"
        },
        {
          "file": "pcost.py",
          "target": "/home/labex/project",
          "chmod": "ugo+rwx"
        },
        {
          "file": "report.py",
          "target": "/home/labex/project",
          "chmod": "ugo+rwx"
        },
        {
          "file": "stock.py",
          "target": "/home/labex/project",
          "chmod": "ugo+rwx"
        },
        {
          "file": "tableformat.py",
          "target": "/home/labex/project",
          "chmod": "ugo+rwx"
        },
        {
          "file": "portfolio.py",
          "target": "/home/labex/project",
          "chmod": "ugo+rwx"
        },
        {
          "file": "follow.py",
          "target": "/home/labex/project",
          "chmod": "ugo+rwx"
        },
        {
          "file": "dowstocks.csv",
          "target": "/home/labex/project",
          "chmod": "ugo+rwx"
        }
      ]
    }
  },
  "backend": {
    "imageid": "vnc-ubuntu:2204"
  },
  "contributors": [],
  "license": {
    "name": "CC-BY-SA-4.0",
    "url": "https://github.com/dabeaz-course/practical-python/blob/master/LICENSE.md",
    "repo": "https://github.com/dabeaz-course/practical-python"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "生产者、消费者和管道",
      "description": "生成器是解决各类生产者/消费者问题和数据流管道的有用工具。本节将对此进行讨论。",
      "meta": {
        "title": "生产者、消费者和管道：释放生成器的力量",
        "description": "在本全面的编程教程中探索生产者 - 消费者问题和基于生成器的数据处理管道的复杂性。",
        "keywords": "数据处理，生产者消费者，Python 实践，Python, 编程概念，生成器，数据管道"
      },
      "details": {
        "steps": [
          {
            "title": "生产者 - 消费者问题",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "此步骤目前没有验证",
                "file": "verify1-1.sh",
                "hint": "此步骤目前没有验证"
              }
            ]
          },
          {
            "title": "生成器管道",
            "text": "zh/step2.md",
            "verify": [
              {
                "name": "此步骤目前没有验证",
                "file": "verify2-1.sh",
                "hint": "此步骤目前没有验证"
              }
            ]
          },
          {
            "title": "练习 6.8：设置一个简单的管道",
            "text": "zh/step3.md",
            "verify": [
              {
                "name": "验证 Python 历史记录中包含“yield”关键字",
                "file": "verify3-1.sh",
                "hint": "请按照说明完成步骤。"
              }
            ]
          },
          {
            "title": "练习 6.9：设置一个更复杂的管道",
            "text": "zh/step4.md",
            "verify": [
              {
                "name": "验证 Python 历史记录中是否包含 CSV 导入",
                "file": "verify4-1.sh",
                "hint": "请按照说明完成步骤。"
              }
            ]
          },
          {
            "title": "练习 6.10：创建更多管道组件",
            "text": "zh/step5.md",
            "verify": [
              {
                "name": "验证 ticker.py 中是否存在 make_dicts 函数",
                "file": "verify5-1.sh",
                "hint": "请按照说明完成步骤。"
              }
            ]
          },
          {
            "title": "练习 6.11：数据过滤",
            "text": "zh/step6.md",
            "verify": [
              {
                "name": "验证 Python 历史记录中是否存在'filter_symbols'",
                "file": "verify6-1.sh",
                "hint": "请按照说明完成步骤。"
              }
            ]
          },
          {
            "title": "讨论",
            "text": "zh/step8.md",
            "verify": [
              {
                "name": "此步骤目前没有验证",
                "file": "verify8-1.sh",
                "hint": "此步骤目前没有验证"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Productores, Consumidores y Tuberías",
      "description": "Los generadores son una herramienta útil para resolver diversos tipos de problemas de productor/consumidor y tuberías de flujo de datos. Esta sección aborda eso.",
      "meta": {
        "title": "Productores, Consumidores y Tuberías: Desbloqueando el Poder de los Generadores",
        "description": "Explora las complejidades de los problemas de productor-consumidor y las tuberías de procesamiento de datos basadas en generadores en este completo tutorial de programación.",
        "keywords": "procesamiento de datos, productor-consumidor, playground de Python, Python, conceptos de programación, generadores, tuberías de datos"
      },
      "details": {
        "steps": [
          {
            "title": "Problemas de Productor-Consumidor",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Este paso no tiene verificación en este momento",
                "file": "verify1-1.sh",
                "hint": "Este paso no tiene verificación en este momento"
              }
            ]
          },
          {
            "title": "Tuberías de Generador",
            "text": "es/step2.md",
            "verify": [
              {
                "name": "Este paso no tiene verificación en este momento",
                "file": "verify2-1.sh",
                "hint": "Este paso no tiene verificación en este momento"
              }
            ]
          },
          {
            "title": "Ejercicio 6.8: Configurando una tubería simple",
            "text": "es/step3.md",
            "verify": [
              {
                "name": "Verificar que el historial de Python contenga la palabra clave 'yield'",
                "file": "verify3-1.sh",
                "hint": "Siga las instrucciones para completar los pasos."
              }
            ]
          },
          {
            "title": "Ejercicio 6.9: Configurando una tubería más compleja",
            "text": "es/step4.md",
            "verify": [
              {
                "name": "Verificar si el historial de Python incluye la importación de CSV",
                "file": "verify4-1.sh",
                "hint": "Siga las instrucciones para completar los pasos."
              }
            ]
          },
          {
            "title": "Ejercicio 6.10: Creando más componentes de tubería",
            "text": "es/step5.md",
            "verify": [
              {
                "name": "Verificar la presencia de la función make_dicts en ticker.py",
                "file": "verify5-1.sh",
                "hint": "Siga las instrucciones para completar los pasos."
              }
            ]
          },
          {
            "title": "Ejercicio 6.11: Filtrando datos",
            "text": "es/step6.md",
            "verify": [
              {
                "name": "Verificar la presencia de 'filter_symbols' en el historial de Python",
                "file": "verify6-1.sh",
                "hint": "Siga las instrucciones para completar los pasos."
              }
            ]
          },
          {
            "title": "Discusión",
            "text": "es/step8.md",
            "verify": [
              {
                "name": "En este momento este paso no tiene verificación",
                "file": "verify8-1.sh",
                "hint": "En este momento este paso no tiene verificación"
              }
            ]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Producteurs, Consommateurs et Pipelines",
      "description": "Les générateurs sont un outil utile pour résoudre différents types de problèmes de producteur/consommateur et de pipelines de flux de données. Cette section en traite.",
      "meta": {
        "title": "Producteurs, Consommateurs et Pipelines : Découvrir le pouvoir des générateurs",
        "description": "Explorez les subtilités des problèmes producteur-consommateur et des pipelines de traitement de données basés sur les générateurs dans ce tutoriel de programmation complet.",
        "keywords": "traitement de données, producteur consommateur, terrain de jeu Python, Python, concepts de programmation, générateurs, pipelines de données"
      },
      "details": {
        "steps": [
          {
            "title": "Problèmes Producteur-Consommateur",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Cette étape n'a pas de vérification pour le moment",
                "file": "verify1-1.sh",
                "hint": "Cette étape n'a pas de vérification pour le moment"
              }
            ]
          },
          {
            "title": "Pipelines de Générateurs",
            "text": "fr/step2.md",
            "verify": [
              {
                "name": "Cette étape n'a pas de vérification pour le moment",
                "file": "verify2-1.sh",
                "hint": "Cette étape n'a pas de vérification pour le moment"
              }
            ]
          },
          {
            "title": "Exercice 6.8 : Configuration d'un pipeline simple",
            "text": "fr/step3.md",
            "verify": [
              {
                "name": "Vérifiez que l'historique Python contient le mot clé 'yield'",
                "file": "verify3-1.sh",
                "hint": "Suivez les instructions pour compléter les étapes."
              }
            ]
          },
          {
            "title": "Exercice 6.9 : Configuration d'un pipeline plus complexe",
            "text": "fr/step4.md",
            "verify": [
              {
                "name": "Vérifiez si l'historique Python inclut l'importation de CSV",
                "file": "verify4-1.sh",
                "hint": "Suivez les instructions pour compléter les étapes."
              }
            ]
          },
          {
            "title": "Exercice 6.10 : Création de plus de composants de pipeline",
            "text": "fr/step5.md",
            "verify": [
              {
                "name": "Vérifiez la présence de la fonction make_dicts dans ticker.py",
                "file": "verify5-1.sh",
                "hint": "Suivez les instructions pour compléter les étapes."
              }
            ]
          },
          {
            "title": "Exercice 6.11 : Filtrer des données",
            "text": "fr/step6.md",
            "verify": [
              {
                "name": "Vérifiez la présence de 'filter_symbols' dans l'historique Python",
                "file": "verify6-1.sh",
                "hint": "Suivez les instructions pour compléter les étapes."
              }
            ]
          },
          {
            "title": "Discussion",
            "text": "fr/step8.md",
            "verify": [
              {
                "name": "Cette étape n'a pas de vérification pour le moment",
                "file": "verify8-1.sh",
                "hint": "Cette étape n'a pas de vérification pour le moment"
              }
            ]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Produzenten, Konsumenten und Pipelines",
      "description": "Generatoren sind ein nützliches Werkzeug für das Lösen verschiedener Arten von Produzenten-/Konsumenten-Problemen und Datenfluss-Pipelines. In diesem Abschnitt wird darüber diskutiert.",
      "meta": {
        "title": "Produzenten, Konsumenten und Pipelines: Entschlüsseln der Macht von Generatoren",
        "description": "Erkunden Sie die Feinheiten von Produzenten-Konsumenten-Problemen und generatorbasierten Datenverarbeitungspipelines in diesem umfassenden Programmier-Tutorial.",
        "keywords": "Datenverarbeitung, Produzent-Konsument, Python-Spielplatz, Python, Programmierkonzepte, Generatoren, Datenpipelines"
      },
      "details": {
        "steps": [
          {
            "title": "Produzent-Konsument-Probleme",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Dieser Schritt hat momentan keine Verifizierung",
                "file": "verify1-1.sh",
                "hint": "Dieser Schritt hat momentan keine Verifizierung"
              }
            ]
          },
          {
            "title": "Generator-Pipelines",
            "text": "de/step2.md",
            "verify": [
              {
                "name": "Dieser Schritt hat momentan keine Verifizierung",
                "file": "verify2-1.sh",
                "hint": "Dieser Schritt hat momentan keine Verifizierung"
              }
            ]
          },
          {
            "title": "Übung 6.8: Einfache Pipeline einrichten",
            "text": "de/step3.md",
            "verify": [
              {
                "name": "Verifizieren, dass der Python-Historie das Schlüsselwort 'yield' enthalten ist",
                "file": "verify3-1.sh",
                "hint": "Bitte folgen Sie den Anweisungen, um die Schritte auszuführen."
              }
            ]
          },
          {
            "title": "Übung 6.9: Ein komplexere Pipeline einrichten",
            "text": "de/step4.md",
            "verify": [
              {
                "name": "Verifizieren, ob die Python-Historie das Importieren von CSV-Dateien enthält",
                "file": "verify4-1.sh",
                "hint": "Bitte folgen Sie den Anweisungen, um die Schritte auszuführen."
              }
            ]
          },
          {
            "title": "Übung 6.10: Weitere Pipeline-Komponenten erstellen",
            "text": "de/step5.md",
            "verify": [
              {
                "name": "Verifizieren, ob die Funktion make_dicts in ticker.py vorhanden ist",
                "file": "verify5-1.sh",
                "hint": "Bitte folgen Sie den Anweisungen, um die Schritte auszuführen."
              }
            ]
          },
          {
            "title": "Übung 6.11: Daten filtern",
            "text": "de/step6.md",
            "verify": [
              {
                "name": "Verifizieren, ob 'filter_symbols' in der Python-Historie vorhanden ist",
                "file": "verify6-1.sh",
                "hint": "Bitte folgen Sie den Anweisungen, um die Schritte auszuführen."
              }
            ]
          },
          {
            "title": "Diskussion",
            "text": "de/step8.md",
            "verify": [
              {
                "name": "Dieser Schritt hat momentan keine Verifizierung",
                "file": "verify8-1.sh",
                "hint": "Dieser Schritt hat momentan keine Verifizierung"
              }
            ]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "生産者、消費者、およびパイプライン",
      "description": "ジェネレータは、さまざまな種類の生産者/消費者の問題やデータフローパイプラインを設定するための便利なツールです。このセクションではそれについて説明します。",
      "meta": {
        "title": "生産者、消費者、およびパイプライン：ジェネレータの力を解き放つ",
        "description": "この包括的なプログラミングチュートリアルで、生産者 - 消費者の問題とジェネレータベースのデータ処理パイプラインの複雑さを探求しましょう。",
        "keywords": "データ処理、生産者消費者、Python の遊び場、Python、プログラミング概念、ジェネレータ、データパイプライン"
      },
      "details": {
        "steps": [
          {
            "title": "生産者 - 消費者の問題",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "このステップには現在検証はありません",
                "file": "verify1-1.sh",
                "hint": "このステップには現在検証はありません"
              }
            ]
          },
          {
            "title": "ジェネレータパイプライン",
            "text": "ja/step2.md",
            "verify": [
              {
                "name": "このステップには現在検証はありません",
                "file": "verify2-1.sh",
                "hint": "このステップには現在検証はありません"
              }
            ]
          },
          {
            "title": "演習 6.8：単純なパイプラインの設定",
            "text": "ja/step3.md",
            "verify": [
              {
                "name": "Python の履歴に'yield'キーワードが含まれていることを確認する",
                "file": "verify3-1.sh",
                "hint": "指示に従って手順を完了してください。"
              }
            ]
          },
          {
            "title": "演習 6.9：より複雑なパイプラインの設定",
            "text": "ja/step4.md",
            "verify": [
              {
                "name": "Python の履歴に CSV のインポートが含まれているかどうかを確認する",
                "file": "verify4-1.sh",
                "hint": "指示に従って手順を完了してください。"
              }
            ]
          },
          {
            "title": "演習 6.10：さらに多くのパイプラインコンポーネントを作成する",
            "text": "ja/step5.md",
            "verify": [
              {
                "name": "ticker.py における make_dicts 関数の存在を確認する",
                "file": "verify5-1.sh",
                "hint": "指示に従って手順を完了してください。"
              }
            ]
          },
          {
            "title": "演習 6.11：データのフィルタリング",
            "text": "ja/step6.md",
            "verify": [
              {
                "name": "Python の履歴に'filter_symbols'が存在することを確認する",
                "file": "verify6-1.sh",
                "hint": "指示に従って手順を完了してください。"
              }
            ]
          },
          {
            "title": "議論",
            "text": "ja/step8.md",
            "verify": [
              {
                "name": "このステップは現在検証項目がありません",
                "file": "verify8-1.sh",
                "hint": "このステップは現在検証項目がありません"
              }
            ]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Продьюсеры, потребители и конвейеры",
      "description": "Генераторы - это полезный инструмент для решения различных типов задач по производителям/потребителям и конвейерам потока данных. В этом разделе обсуждается это.",
      "meta": {
        "title": "Продьюсеры, потребители и конвейеры: раскрытие потенциала генераторов",
        "description": "Исследуйте сложности задач по производителям и потребителям и конвейеров обработки данных на основе генераторов в этом полноценном программировательском туториале.",
        "keywords": "обработка данных, производитель-потребитель, питоновская площадка, питон, концепции программирования, генераторы, конвейеры данных"
      },
      "details": {
        "steps": [
          {
            "title": "Задачи производителя - потребителя",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "На данный момент эта стадия не имеет проверки",
                "file": "verify1-1.sh",
                "hint": "На данный момент эта стадия не имеет проверки"
              }
            ]
          },
          {
            "title": "Конвейеры генераторов",
            "text": "ru/step2.md",
            "verify": [
              {
                "name": "На данный момент эта стадия не имеет проверки",
                "file": "verify2-1.sh",
                "hint": "На данный момент эта стадия не имеет проверки"
              }
            ]
          },
          {
            "title": "Упражнение 6.8: настройка простого конвейера",
            "text": "ru/step3.md",
            "verify": [
              {
                "name": "Проверить, что в истории Python есть ключевое слово 'yield'",
                "file": "verify3-1.sh",
                "hint": "Пожалуйста, следуйте инструкциям для завершения шагов."
              }
            ]
          },
          {
            "title": "Упражнение 6.9: настройка более сложного конвейера",
            "text": "ru/step4.md",
            "verify": [
              {
                "name": "Проверить, содержит ли история Python импорт CSV",
                "file": "verify4-1.sh",
                "hint": "Пожалуйста, следуйте инструкциям для завершения шагов."
              }
            ]
          },
          {
            "title": "Упражнение 6.10: создание дополнительных компонентов конвейера",
            "text": "ru/step5.md",
            "verify": [
              {
                "name": "Проверить наличие функции make_dicts в ticker.py",
                "file": "verify5-1.sh",
                "hint": "Пожалуйста, следуйте инструкциям для завершения шагов."
              }
            ]
          },
          {
            "title": "Упражнение 6.11: фильтрация данных",
            "text": "ru/step6.md",
            "verify": [
              {
                "name": "Проверить наличие 'filter_symbols' в истории Python",
                "file": "verify6-1.sh",
                "hint": "Пожалуйста, следуйте инструкциям для завершения шагов."
              }
            ]
          },
          {
            "title": "Обсуждение",
            "text": "ru/step8.md",
            "verify": [
              {
                "name": "На данный момент этот шаг не имеет проверки",
                "file": "verify8-1.sh",
                "hint": "На данный момент этот шаг не имеет проверки"
              }
            ]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    }
  ]
}
