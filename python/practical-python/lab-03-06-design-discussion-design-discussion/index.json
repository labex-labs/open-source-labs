{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Reconsider Design Decision",
  "description": "In this section we reconsider a design decision made earlier.",
  "meta": {
    "title": "Reconsider Design Decision: Exploring Flexible Python Functions",
    "description": "Dive into the concept of 'duck typing' and learn how to create flexible Python functions that can handle various input types.",
    "keywords": "duck typing, python, flexibility, design, programming"
  },
  "difficulty": "Beginner",
  "time": 25,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Filenames versus Iterables",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "This step has no verification at the moment",
            "file": "verify1-1.sh",
            "hint": "This step has no verification at the moment",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": []
      },
      {
        "title": "Deep Idea: 'Duck Typing'",
        "text": "en/step2.md",
        "verify": [
          {
            "name": "This step has no verification at the moment",
            "file": "verify2-1.sh",
            "hint": "This step has no verification at the moment",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": []
      },
      {
        "title": "Library Design Best Practices",
        "text": "en/step3.md",
        "verify": [
          {
            "name": "This step has no verification at the moment",
            "file": "verify3-1.sh",
            "hint": "This step has no verification at the moment",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": []
      },
      {
        "title": "Exercise 3.17: From filenames to file-like objects",
        "text": "en/step4.md",
        "verify": [
          {
            "name": "Verify Python Script Without File Open Operation",
            "file": "verify4-1.sh",
            "hint": "Please follow the instructions to complete the steps.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [],
        "solutions": ["fileparse.py"]
      },
      {
        "title": "Exercise 3.18: Fixing existing functions",
        "text": "en/step5.md",
        "verify": [
          {
            "name": "This step has no verification at the moment",
            "file": "verify5-1.sh",
            "hint": "This step has no verification at the moment",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [],
        "solutions": ["report.py"]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    },
    "assets": {
      "host01": [
        {
          "file": "portfolio.csv.gz",
          "target": "/home/labex/project",
          "chmod": "ugo+rwx"
        },
        {
          "file": "portfolio.csv",
          "target": "/home/labex/project",
          "chmod": "ugo+rwx"
        },
        {
          "file": "fileparse.py",
          "target": "/home/labex/project",
          "chmod": "ugo+rwx"
        }
      ]
    }
  },
  "backend": {
    "imageid": "vnc-ubuntu:2204"
  },
  "contributors": [],
  "license": {
    "name": "CC-BY-SA-4.0",
    "url": "https://github.com/dabeaz-course/practical-python/blob/master/LICENSE.md",
    "repo": "https://github.com/dabeaz-course/practical-python"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "重新考虑设计决策",
      "description": "在本节中，我们重新审视之前做出的一个设计决策。",
      "meta": {
        "title": "重新考虑设计决策：探索灵活的 Python 函数",
        "description": "深入了解“鸭子类型”的概念，并学习如何创建能够处理各种输入类型的灵活 Python 函数。",
        "keywords": "鸭子类型，Python, 灵活性，设计，编程"
      },
      "details": {
        "steps": [
          {
            "title": "文件名与可迭代对象",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "此步骤目前没有验证",
                "file": "verify1-1.sh",
                "hint": "此步骤目前没有验证"
              }
            ]
          },
          {
            "title": "深度解析：“鸭子类型”",
            "text": "zh/step2.md",
            "verify": [
              {
                "name": "此步骤目前没有验证",
                "file": "verify2-1.sh",
                "hint": "此步骤目前没有验证"
              }
            ]
          },
          {
            "title": "库设计最佳实践",
            "text": "zh/step3.md",
            "verify": [
              {
                "name": "此步骤目前没有验证",
                "file": "verify3-1.sh",
                "hint": "此步骤目前没有验证"
              }
            ]
          },
          {
            "title": "练习 3.17：从文件名到类文件对象",
            "text": "zh/step4.md",
            "verify": [
              {
                "name": "验证无文件打开操作的 Python 脚本",
                "file": "verify4-1.sh",
                "hint": "请按照说明完成步骤。"
              }
            ],
            "solutions": ["fileparse.py"]
          },
          {
            "title": "练习 3.18：修复现有函数",
            "text": "zh/step5.md",
            "verify": [
              {
                "name": "此步骤目前没有验证",
                "file": "verify5-1.sh",
                "hint": "此步骤目前没有验证"
              }
            ],
            "solutions": ["report.py"]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Reconsiderar la Decisión de Diseño",
      "description": "En esta sección, reconsideramos una decisión de diseño tomada anteriormente.",
      "meta": {
        "title": "Reconsiderar la Decisión de Diseño: Explorando Funciones Flexibles de Python",
        "description": "Sumérgete en el concepto de 'duck typing' y aprende cómo crear funciones flexibles de Python que pueden manejar varios tipos de entrada.",
        "keywords": "duck typing, python, flexibilidad, diseño, programación"
      },
      "details": {
        "steps": [
          {
            "title": "Nombres de archivos versus Iterables",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Este paso no tiene verificación en este momento",
                "file": "verify1-1.sh",
                "hint": "Este paso no tiene verificación en este momento"
              }
            ]
          },
          {
            "title": "Idea Profunda: 'Duck Typing'",
            "text": "es/step2.md",
            "verify": [
              {
                "name": "Este paso no tiene verificación en este momento",
                "file": "verify2-1.sh",
                "hint": "Este paso no tiene verificación en este momento"
              }
            ]
          },
          {
            "title": "Mejores Prácticas en el Diseño de Bibliotecas",
            "text": "es/step3.md",
            "verify": [
              {
                "name": "Este paso no tiene verificación en este momento",
                "file": "verify3-1.sh",
                "hint": "Este paso no tiene verificación en este momento"
              }
            ]
          },
          {
            "title": "Ejercicio 3.17: De nombres de archivos a objetos similares a archivos",
            "text": "es/step4.md",
            "verify": [
              {
                "name": "Verificar el script de Python sin la operación de apertura de archivo",
                "file": "verify4-1.sh",
                "hint": "Siga las instrucciones para completar los pasos."
              }
            ]
          },
          {
            "title": "Ejercicio 3.18: Corrigiendo funciones existentes",
            "text": "es/step5.md",
            "verify": [
              {
                "name": "Este paso no tiene verificación en este momento",
                "file": "verify5-1.sh",
                "hint": "Este paso no tiene verificación en este momento"
              }
            ]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Repenser la décision de conception",
      "description": "Dans cette section, nous repensons une décision de conception prise précédemment.",
      "meta": {
        "title": "Repenser la décision de conception: Explorer des fonctions Python flexibles",
        "description": "Plongez dans le concept de 'duck typing' et apprenez à créer des fonctions Python flexibles capables de gérer divers types d'entrée.",
        "keywords": "duck typing, python, flexibilité, conception, programmation"
      },
      "details": {
        "steps": [
          {
            "title": "Noms de fichiers vs Itérables",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Cette étape n'a pas de vérification pour le moment",
                "file": "verify1-1.sh",
                "hint": "Cette étape n'a pas de vérification pour le moment"
              }
            ]
          },
          {
            "title": "Idée profonde : 'Duck Typing'",
            "text": "fr/step2.md",
            "verify": [
              {
                "name": "Cette étape n'a pas de vérification pour le moment",
                "file": "verify2-1.sh",
                "hint": "Cette étape n'a pas de vérification pour le moment"
              }
            ]
          },
          {
            "title": "Meilleures pratiques de conception de bibliothèques",
            "text": "fr/step3.md",
            "verify": [
              {
                "name": "Cette étape n'a pas de vérification pour le moment",
                "file": "verify3-1.sh",
                "hint": "Cette étape n'a pas de vérification pour le moment"
              }
            ]
          },
          {
            "title": "Exercice 3.17 : Passer de noms de fichiers à des objets ressemblant à des fichiers",
            "text": "fr/step4.md",
            "verify": [
              {
                "name": "Vérifier le script Python sans opération d'ouverture de fichier",
                "file": "verify4-1.sh",
                "hint": "Veuillez suivre les instructions pour compléter les étapes."
              }
            ]
          },
          {
            "title": "Exercice 3.18 : Correction de fonctions existantes",
            "text": "fr/step5.md",
            "verify": [
              {
                "name": "Cette étape n'a pas de vérification pour le moment",
                "file": "verify5-1.sh",
                "hint": "Cette étape n'a pas de vérification pour le moment"
              }
            ]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Designentscheidung erneut überdenken",
      "description": "In diesem Abschnitt überdenken wir eine zuvor getroffene Designentscheidung.",
      "meta": {
        "title": "Designentscheidung erneut überdenken: Erkundung flexibler Python-Funktionen",
        "description": "Taucht in das Konzept des 'Duck-Typings' ein und lernen Sie, wie Sie flexible Python-Funktionen erstellen, die verschiedene Eingabetypen verarbeiten können.",
        "keywords": "Duck-Typing, Python, Flexibilität, Design, Programmierung"
      },
      "details": {
        "steps": [
          {
            "title": "Dateinamen versus Iterierbare",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Dieser Schritt hat momentan keine Verifikation",
                "file": "verify1-1.sh",
                "hint": "Dieser Schritt hat momentan keine Verifikation"
              }
            ]
          },
          {
            "title": "Tiefer Gedanke: 'Duck Typing'",
            "text": "de/step2.md",
            "verify": [
              {
                "name": "Dieser Schritt hat momentan keine Verifikation",
                "file": "verify2-1.sh",
                "hint": "Dieser Schritt hat momentan keine Verifikation"
              }
            ]
          },
          {
            "title": "Best Practices für die Bibliothekendesign",
            "text": "de/step3.md",
            "verify": [
              {
                "name": "Dieser Schritt hat momentan keine Verifikation",
                "file": "verify3-1.sh",
                "hint": "Dieser Schritt hat momentan keine Verifikation"
              }
            ]
          },
          {
            "title": "Übung 3.17: Von Dateinamen zu dateilichen Objekten",
            "text": "de/step4.md",
            "verify": [
              {
                "name": "Verifizieren Sie das Python-Skript ohne Dateiöffnungsoperation",
                "file": "verify4-1.sh",
                "hint": "Bitte folgen Sie den Anweisungen, um die Schritte auszuführen."
              }
            ]
          },
          {
            "title": "Übung 3.18: Fehlerbehebung vorhandener Funktionen",
            "text": "de/step5.md",
            "verify": [
              {
                "name": "Dieser Schritt hat momentan keine Verifikation",
                "file": "verify5-1.sh",
                "hint": "Dieser Schritt hat momentan keine Verifikation"
              }
            ]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "設計決定を見直す",
      "description": "このセクションでは、以前に行った設計決定を見直します。",
      "meta": {
        "title": "設計決定を見直す：柔軟な Python 関数を探求する",
        "description": "「ダックタイピング」の概念に深く突き入り、さまざまな入力タイプを処理できる柔軟な Python 関数を作成する方法を学びましょう。",
        "keywords": "ダックタイピング，Python, 柔軟性，設計，プログラミング"
      },
      "details": {
        "steps": [
          {
            "title": "ファイル名と反復可能オブジェクト",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "このステップは現在検証項目がありません",
                "file": "verify1-1.sh",
                "hint": "このステップは現在検証項目がありません"
              }
            ]
          },
          {
            "title": "深い考え：「ダックタイピング」",
            "text": "ja/step2.md",
            "verify": [
              {
                "name": "このステップは現在検証項目がありません",
                "file": "verify2-1.sh",
                "hint": "このステップは現在検証項目がありません"
              }
            ]
          },
          {
            "title": "ライブラリ設計のベストプラクティス",
            "text": "ja/step3.md",
            "verify": [
              {
                "name": "このステップは現在検証項目がありません",
                "file": "verify3-1.sh",
                "hint": "このステップは現在検証項目がありません"
              }
            ]
          },
          {
            "title": "演習 3.17：ファイル名からファイルライクオブジェクトへ",
            "text": "ja/step4.md",
            "verify": [
              {
                "name": "ファイルオープン操作なしで Python スクリプトを検証する",
                "file": "verify4-1.sh",
                "hint": "指示に従って手順を完了してください。"
              }
            ]
          },
          {
            "title": "演習 3.18：既存の関数の修正",
            "text": "ja/step5.md",
            "verify": [
              {
                "name": "このステップは現在検証項目がありません",
                "file": "verify5-1.sh",
                "hint": "このステップは現在検証項目がありません"
              }
            ]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Пересмотреть решение по дизайну",
      "description": "В этом разделе мы пересматриваем решение по дизайну, принятое ранее.",
      "meta": {
        "title": "Пересмотреть решение по дизайну: Исследование гибких функций на Python",
        "description": "Освоите концепцию 'duck typing' и узнайте, как создавать гибкие функции на Python, которые могут обрабатывать различные типы входных данных.",
        "keywords": "duck typing, python, гибкость, дизайн, программирование"
      },
      "details": {
        "steps": [
          {
            "title": "Имена файлов versus Итерируемые объекты",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "На данный момент этот шаг не имеет проверки",
                "file": "verify1-1.sh",
                "hint": "На данный момент этот шаг не имеет проверки"
              }
            ]
          },
          {
            "title": "Глубокая идея: 'Duck Typing'",
            "text": "ru/step2.md",
            "verify": [
              {
                "name": "На данный момент этот шаг не имеет проверки",
                "file": "verify2-1.sh",
                "hint": "На данный момент этот шаг не имеет проверки"
              }
            ]
          },
          {
            "title": "Лучшие практики по дизайну библиотек",
            "text": "ru/step3.md",
            "verify": [
              {
                "name": "На данный момент этот шаг не имеет проверки",
                "file": "verify3-1.sh",
                "hint": "На данный момент этот шаг не имеет проверки"
              }
            ]
          },
          {
            "title": "Упражнение 3.17: От имен файлов к объектам, подобным файлам",
            "text": "ru/step4.md",
            "verify": [
              {
                "name": "Проверить Python-скрипт без операции открытия файла",
                "file": "verify4-1.sh",
                "hint": "Пожалуйста, следуйте инструкциям для завершения шагов."
              }
            ]
          },
          {
            "title": "Упражнение 3.18: Исправление существующих функций",
            "text": "ru/step5.md",
            "verify": [
              {
                "name": "На данный момент этот шаг не имеет проверки",
                "file": "verify5-1.sh",
                "hint": "На данный момент этот шаг не имеет проверки"
              }
            ]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    },
    {
      "lang": "ko",
      "title": "디자인 결정 재고",
      "description": "이 섹션에서는 앞서 내린 디자인 결정을 재고합니다.",
      "meta": {
        "title": "디자인 결정 재고: 유연한 Python 함수 탐구 - 파이썬 덕 타이핑",
        "description": "‘덕 타이핑’개념을 파고들어 다양한 입력 유형을 처리할 수 있는 유연한 Python 함수를 만드는 방법을 배우세요. 파이썬 프로그래밍 디자인",
        "keywords": "덕 타이핑, 파이썬, 유연성, 디자인, 프로그래밍, 파이썬 함수"
      },
      "details": {
        "steps": [
          {
            "title": "파일 이름 vs 반복 가능한 객체",
            "text": "ko/step1.md",
            "verify": [
              {
                "name": "현재 이 단계에는 검증이 없습니다.",
                "file": "verify1-1.sh",
                "hint": "현재 이 단계에는 검증이 없습니다."
              }
            ]
          },
          {
            "title": "심층 아이디어: '덕 타이핑'",
            "text": "ko/step2.md",
            "verify": [
              {
                "name": "현재 이 단계에는 검증이 없습니다.",
                "file": "verify2-1.sh",
                "hint": "현재 이 단계에는 검증이 없습니다."
              }
            ]
          },
          {
            "title": "라이브러리 설계 모범 사례",
            "text": "ko/step3.md",
            "verify": [
              {
                "name": "현재 이 단계에는 검증이 없습니다.",
                "file": "verify3-1.sh",
                "hint": "현재 이 단계에는 검증이 없습니다."
              }
            ]
          },
          {
            "title": "연습문제 3.17: 파일 이름에서 파일 유사 객체로",
            "text": "ko/step4.md",
            "verify": [
              {
                "name": "파일 열기 작업 없이 Python 스크립트 검증",
                "file": "verify4-1.sh",
                "hint": "단계 완료를 위해 지침을 따르세요."
              }
            ]
          },
          {
            "title": "연습문제 3.18: 기존 함수 수정",
            "text": "ko/step5.md",
            "verify": [
              {
                "name": "현재 이 단계에는 검증이 없습니다.",
                "file": "verify5-1.sh",
                "hint": "현재 이 단계에는 검증이 없습니다."
              }
            ]
          }
        ],
        "intro": {
          "text": "ko/intro.md",
          "title": "소개"
        },
        "finish": {
          "text": "ko/finish.md",
          "title": "요약"
        }
      }
    },
    {
      "lang": "pt",
      "title": "Reconsiderar Decisão de Design",
      "description": "Nesta seção, reconsideramos uma decisão de design tomada anteriormente.",
      "meta": {
        "title": "Reconsiderar Decisão de Design: Explorando Funções Python Flexíveis",
        "description": "Mergulhe no conceito de 'duck typing' e aprenda a criar funções Python flexíveis que podem lidar com vários tipos de entrada.",
        "keywords": "duck typing, python, flexibilidade, design, programação"
      },
      "details": {
        "steps": [
          {
            "title": "Nomes de Arquivos versus Iteráveis",
            "text": "pt/step1.md",
            "verify": [
              {
                "name": "Esta etapa não possui verificação no momento",
                "file": "verify1-1.sh",
                "hint": "Esta etapa não possui verificação no momento"
              }
            ]
          },
          {
            "title": "Conceito Profundo: 'Duck Typing'",
            "text": "pt/step2.md",
            "verify": [
              {
                "name": "Esta etapa não possui verificação no momento",
                "file": "verify2-1.sh",
                "hint": "Esta etapa não possui verificação no momento"
              }
            ]
          },
          {
            "title": "Melhores Práticas de Design de Bibliotecas",
            "text": "pt/step3.md",
            "verify": [
              {
                "name": "Esta etapa não possui verificação no momento",
                "file": "verify3-1.sh",
                "hint": "Esta etapa não possui verificação no momento"
              }
            ]
          },
          {
            "title": "Exercício 3.17: De nomes de arquivos a objetos semelhantes a arquivos",
            "text": "pt/step4.md",
            "verify": [
              {
                "name": "Verificar Script Python Sem Operação de Abertura de Arquivo",
                "file": "verify4-1.sh",
                "hint": "Por favor, siga as instruções para completar as etapas."
              }
            ]
          },
          {
            "title": "Exercício 3.18: Corrigindo funções existentes",
            "text": "pt/step5.md",
            "verify": [
              {
                "name": "Esta etapa não possui verificação no momento",
                "file": "verify5-1.sh",
                "hint": "Esta etapa não possui verificação no momento"
              }
            ]
          }
        ],
        "intro": {
          "text": "pt/intro.md",
          "title": "Introdução"
        },
        "finish": {
          "text": "pt/finish.md",
          "title": "Resumo"
        }
      }
    }
  ]
}
