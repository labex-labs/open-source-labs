{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Customizing Iteration with Generator Functions",
  "description": "This section looks at how you can customize iteration using a generator function.",
  "meta": {
    "title": "Python Iteration Customization | Generator Functions",
    "description": "Explore how to create custom iteration patterns in Python using generator functions, including a countdown example.",
    "keywords": "Python, Iteration, Generator Functions, Customization, Countdown"
  },
  "difficulty": "Beginner",
  "time": 35,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "A problem",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify Presence of 'print' in Python History",
            "file": "verify1-1.sh",
            "hint": "Please follow the instructions to complete the steps.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "python/build_in_functions",
          "python/for_loops",
          "python/python_shell",
          "python/tuples"
        ]
      },
      {
        "title": "Generators",
        "text": "en/step2.md",
        "verify": [
          {
            "name": "Verify Use of yield and countdown in Python History",
            "file": "verify2-1.sh",
            "hint": "Please follow the instructions to complete the steps.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "python/build_in_functions",
          "python/comments",
          "python/for_loops",
          "python/function_definition",
          "python/generators",
          "python/python_shell",
          "python/tuples",
          "python/while_loops"
        ]
      },
      {
        "title": "Exercise 6.4: A Simple Generator",
        "text": "en/step3.md",
        "verify": [
          {
            "name": "Verify Use of 'with' and 'countdown' in Python History",
            "file": "verify3-1.sh",
            "hint": "Please follow the instructions to complete the steps.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "python/build_in_functions",
          "python/conditional_statements",
          "python/file_opening_closing",
          "python/for_loops",
          "python/function_definition",
          "python/generators",
          "python/python_shell",
          "python/standard_libraries",
          "python/tuples",
          "python/with_statement"
        ]
      },
      {
        "title": "Exercise 6.5: Monitoring a streaming data source",
        "text": "en/step4.md",
        "verify": [
          {
            "name": "Verify Presence of AAPL Stock Log Entry",
            "file": "verify4-1.sh",
            "hint": "Please follow the instructions to complete the steps.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "python/booleans",
          "python/break_continue",
          "python/build_in_functions",
          "python/comments",
          "python/conditional_statements",
          "python/dictionaries",
          "python/file_opening_closing",
          "python/importing_modules",
          "python/lists",
          "python/numeric_types",
          "python/os_system",
          "python/standard_libraries",
          "python/tuples",
          "python/type_conversion",
          "python/variables_data_types",
          "python/while_loops"
        ]
      },
      {
        "title": "Exercise 6.6: Using a generator to produce data",
        "text": "en/step5.md",
        "verify": [
          {
            "name": "Verify if Python Script Contains __main__ Block",
            "file": "verify5-1.sh",
            "hint": "Please follow the instructions to complete the steps.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "python/booleans",
          "python/break_continue",
          "python/build_in_functions",
          "python/comments",
          "python/conditional_statements",
          "python/dictionaries",
          "python/file_opening_closing",
          "python/for_loops",
          "python/function_definition",
          "python/generators",
          "python/importing_modules",
          "python/lists",
          "python/numeric_types",
          "python/os_system",
          "python/python_shell",
          "python/standard_libraries",
          "python/tuples",
          "python/type_conversion",
          "python/variables_data_types",
          "python/while_loops"
        ],
        "solutions": ["follow_6.6.py"]
      },
      {
        "title": "Exercise 6.7: Watching your portfolio",
        "text": "en/step6.md",
        "verify": [
          {
            "name": "Verify Presence of 'import report' in follow.py",
            "file": "verify6-1.sh",
            "hint": "Please follow the instructions to complete the steps.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "python/booleans",
          "python/break_continue",
          "python/build_in_functions",
          "python/comments",
          "python/conditional_statements",
          "python/dictionaries",
          "python/file_opening_closing",
          "python/for_loops",
          "python/function_definition",
          "python/generators",
          "python/importing_modules",
          "python/lists",
          "python/numeric_types",
          "python/os_system",
          "python/standard_libraries",
          "python/tuples",
          "python/type_conversion",
          "python/variables_data_types",
          "python/while_loops"
        ],
        "solutions": ["follow.py"]
      },
      {
        "title": "Discussion",
        "text": "en/step7.md",
        "verify": [
          {
            "name": "This step has no verification at the moment",
            "file": "verify7-1.sh",
            "hint": "This step has no verification at the moment",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": []
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    },
    "assets": {
      "host01": [
        {
          "file": "portfolio.csv",
          "target": "/home/labex/project",
          "chmod": "ugo+rwx"
        },
        {
          "file": "stocksim.py",
          "target": "/home/labex/project",
          "chmod": "ugo+rwx"
        },
        {
          "file": "dowstocks.csv",
          "target": "/home/labex/project",
          "chmod": "ugo+rwx"
        },
        {
          "file": "fileparse.py",
          "target": "/home/labex/project",
          "chmod": "ugo+rwx"
        },
        {
          "file": "pcost.py",
          "target": "/home/labex/project",
          "chmod": "ugo+rwx"
        },
        {
          "file": "report.py",
          "target": "/home/labex/project",
          "chmod": "ugo+rwx"
        },
        {
          "file": "stock.py",
          "target": "/home/labex/project",
          "chmod": "ugo+rwx"
        },
        {
          "file": "tableformat.py",
          "target": "/home/labex/project",
          "chmod": "ugo+rwx"
        }
      ]
    }
  },
  "backend": {
    "imageid": "vnc-ubuntu:2204"
  },
  "contributors": [],
  "license": {
    "name": "CC-BY-SA-4.0",
    "url": "https://github.com/dabeaz-course/practical-python/blob/master/LICENSE.md",
    "repo": "https://github.com/dabeaz-course/practical-python"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "使用生成器函数自定义迭代",
      "description": "本节探讨如何使用生成器函数来自定义迭代。",
      "meta": {
        "title": "Python迭代自定义 | 生成器函数",
        "description": "探索如何使用生成器函数在Python中创建自定义迭代模式，包括一个倒计时示例。",
        "keywords": "Python, 迭代, 生成器函数, 自定义, 倒计时"
      },
      "details": {
        "steps": [
          {
            "title": "一个问题",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "验证Python历史记录中是否存在'print'",
                "file": "verify1-1.sh",
                "hint": "请按照说明完成步骤。"
              }
            ]
          },
          {
            "title": "生成器",
            "text": "zh/step2.md",
            "verify": [
              {
                "name": "验证Python历史记录中yield和倒计时的使用情况",
                "file": "verify2-1.sh",
                "hint": "请按照说明完成步骤。"
              }
            ]
          },
          {
            "title": "练习6.4：一个简单的生成器",
            "text": "zh/step3.md",
            "verify": [
              {
                "name": "验证Python历史记录中'with'和'countdown'的使用",
                "file": "verify3-1.sh",
                "hint": "请按照说明完成步骤。"
              }
            ]
          },
          {
            "title": "练习6.5：监控流数据源",
            "text": "zh/step4.md",
            "verify": [
              {
                "name": "验证是否存在苹果公司股票日志条目",
                "file": "verify4-1.sh",
                "hint": "请按照说明完成步骤。"
              }
            ]
          },
          {
            "title": "练习6.6：使用生成器生成数据",
            "text": "zh/step5.md",
            "verify": [
              {
                "name": "验证Python脚本是否包含__main__代码块",
                "file": "verify5-1.sh",
                "hint": "请按照说明完成步骤。"
              }
            ],
            "solutions": ["follow_6.6.py"]
          },
          {
            "title": "练习6.7：关注你的投资组合",
            "text": "zh/step6.md",
            "verify": [
              {
                "name": "验证follow.py中是否存在'import report'",
                "file": "verify6-1.sh",
                "hint": "请按照说明完成步骤。"
              }
            ],
            "solutions": ["follow.py"]
          },
          {
            "title": "讨论",
            "text": "zh/step7.md",
            "verify": [
              {
                "name": "此步骤目前没有验证",
                "file": "verify7-1.sh",
                "hint": "此步骤目前没有验证"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Personalizar la iteración con funciones generadoras",
      "description": "Esta sección examina cómo se puede personalizar la iteración utilizando una función generadora.",
      "meta": {
        "title": "Personalización de iteración en Python | Funciones generadoras",
        "description": "Explora cómo crear patrones de iteración personalizados en Python utilizando funciones generadoras, incluyendo un ejemplo de cuenta atrás.",
        "keywords": "Python, Iteración, Funciones generadoras, Personalización, Cuenta atrás"
      },
      "details": {
        "steps": [
          {
            "title": "Un problema",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Verificar la presencia de 'print' en el historial de Python",
                "file": "verify1-1.sh",
                "hint": "Siga las instrucciones para completar los pasos."
              }
            ]
          },
          {
            "title": "Generadores",
            "text": "es/step2.md",
            "verify": [
              {
                "name": "Verificar el uso de yield y cuenta atrás en el historial de Python",
                "file": "verify2-1.sh",
                "hint": "Siga las instrucciones para completar los pasos."
              }
            ]
          },
          {
            "title": "Ejercicio 6.4: Un generador simple",
            "text": "es/step3.md",
            "verify": [
              {
                "name": "Verificar el uso de 'with' y 'cuenta atrás' en el historial de Python",
                "file": "verify3-1.sh",
                "hint": "Siga las instrucciones para completar los pasos."
              }
            ]
          },
          {
            "title": "Ejercicio 6.5: Monitorear una fuente de datos en streaming",
            "text": "es/step4.md",
            "verify": [
              {
                "name": "Verificar la presencia de una entrada de registro de acciones AAPL",
                "file": "verify4-1.sh",
                "hint": "Siga las instrucciones para completar los pasos."
              }
            ]
          },
          {
            "title": "Ejercicio 6.6: Usar un generador para producir datos",
            "text": "es/step5.md",
            "verify": [
              {
                "name": "Verificar si el script de Python contiene un bloque __main__",
                "file": "verify5-1.sh",
                "hint": "Siga las instrucciones para completar los pasos."
              }
            ]
          },
          {
            "title": "Ejercicio 6.7: Vigilar tu cartera",
            "text": "es/step6.md",
            "verify": [
              {
                "name": "Verificar la presencia de 'import report' en follow.py",
                "file": "verify6-1.sh",
                "hint": "Siga las instrucciones para completar los pasos."
              }
            ]
          },
          {
            "title": "Discusión",
            "text": "es/step7.md",
            "verify": [
              {
                "name": "Este paso no tiene verificación en este momento",
                "file": "verify7-1.sh",
                "hint": "Este paso no tiene verificación en este momento"
              }
            ]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Personnaliser l'itération avec des fonctions génératrices",
      "description": "Cette section examine la manière dont vous pouvez personnaliser l'itération à l'aide d'une fonction génératrice.",
      "meta": {
        "title": "Personnalisation de l'itération en Python | Fonctions génératrices",
        "description": "Explorez comment créer des modèles d'itération personnalisés en Python à l'aide de fonctions génératrices, y compris un exemple de compte à rebours.",
        "keywords": "Python, Itération, Fonctions génératrices, Personnalisation, Compte à rebours"
      },
      "details": {
        "steps": [
          {
            "title": "Un problème",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Vérifier la présence de 'print' dans l'historique Python",
                "file": "verify1-1.sh",
                "hint": "Veuillez suivre les instructions pour compléter les étapes."
              }
            ]
          },
          {
            "title": "Générateurs",
            "text": "fr/step2.md",
            "verify": [
              {
                "name": "Vérifier l'utilisation de 'yield' et du compte à rebours dans l'historique Python",
                "file": "verify2-1.sh",
                "hint": "Veuillez suivre les instructions pour compléter les étapes."
              }
            ]
          },
          {
            "title": "Exercice 6.4 : Un générateur simple",
            "text": "fr/step3.md",
            "verify": [
              {
                "name": "Vérifier l'utilisation de 'with' et de 'countdown' dans l'historique Python",
                "file": "verify3-1.sh",
                "hint": "Veuillez suivre les instructions pour compléter les étapes."
              }
            ]
          },
          {
            "title": "Exercice 6.5 : Surveiller une source de données en continu",
            "text": "fr/step4.md",
            "verify": [
              {
                "name": "Vérifier la présence d'une entrée de journal du stock AAPL",
                "file": "verify4-1.sh",
                "hint": "Veuillez suivre les instructions pour compléter les étapes."
              }
            ]
          },
          {
            "title": "Exercice 6.6 : Utilisation d'un générateur pour produire des données",
            "text": "fr/step5.md",
            "verify": [
              {
                "name": "Vérifier si le script Python contient un bloc __main__",
                "file": "verify5-1.sh",
                "hint": "Veuillez suivre les instructions pour compléter les étapes."
              }
            ]
          },
          {
            "title": "Exercice 6.7 : Surveiller votre portefeuille",
            "text": "fr/step6.md",
            "verify": [
              {
                "name": "Vérifier la présence de 'import report' dans follow.py",
                "file": "verify6-1.sh",
                "hint": "Veuillez suivre les instructions pour compléter les étapes."
              }
            ]
          },
          {
            "title": "Discussion",
            "text": "fr/step7.md",
            "verify": [
              {
                "name": "Cette étape n'a pas de vérification pour le moment",
                "file": "verify7-1.sh",
                "hint": "Cette étape n'a pas de vérification pour le moment"
              }
            ]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Iterationsanpassung mit Generatorfunktionen",
      "description": "In diesem Abschnitt wird untersucht, wie Sie die Iteration mithilfe einer Generatorfunktion anpassen können.",
      "meta": {
        "title": "Python-Iterationsanpassung | Generatorfunktionen",
        "description": "Erfahren Sie, wie Sie in Python benutzerdefinierte Iterationsmuster mit Generatorfunktionen erstellen können, einschließlich eines Countdown-Beispiels.",
        "keywords": "Python, Iteration, Generatorfunktionen, Anpassung, Countdown"
      },
      "details": {
        "steps": [
          {
            "title": "Ein Problem",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Verifizieren Sie das Vorhandensein von 'print' in der Python-Geschichte",
                "file": "verify1-1.sh",
                "hint": "Bitte folgen Sie den Anweisungen, um die Schritte abzuschließen."
              }
            ]
          },
          {
            "title": "Generatoren",
            "text": "de/step2.md",
            "verify": [
              {
                "name": "Verifizieren Sie die Verwendung von 'yield' und 'countdown' in der Python-Geschichte",
                "file": "verify2-1.sh",
                "hint": "Bitte folgen Sie den Anweisungen, um die Schritte abzuschließen."
              }
            ]
          },
          {
            "title": "Übung 6.4: Ein einfacher Generator",
            "text": "de/step3.md",
            "verify": [
              {
                "name": "Verifizieren Sie die Verwendung von 'with' und 'countdown' in der Python-Geschichte",
                "file": "verify3-1.sh",
                "hint": "Bitte folgen Sie den Anweisungen, um die Schritte abzuschließen."
              }
            ]
          },
          {
            "title": "Übung 6.5: Überwachen einer Streaming-Datenquelle",
            "text": "de/step4.md",
            "verify": [
              {
                "name": "Verifizieren Sie das Vorhandensein eines AAPL-Aktienprotokolleintrags",
                "file": "verify4-1.sh",
                "hint": "Bitte folgen Sie den Anweisungen, um die Schritte abzuschließen."
              }
            ]
          },
          {
            "title": "Übung 6.6: Verwenden eines Generators zum Erzeugen von Daten",
            "text": "de/step5.md",
            "verify": [
              {
                "name": "Verifizieren Sie, ob das Python-Skript einen __main__-Block enthält",
                "file": "verify5-1.sh",
                "hint": "Bitte folgen Sie den Anweisungen, um die Schritte abzuschließen."
              }
            ]
          },
          {
            "title": "Übung 6.7: Beobachten Ihres Portfolios",
            "text": "de/step6.md",
            "verify": [
              {
                "name": "Verifizieren Sie das Vorhandensein von 'import report' in follow.py",
                "file": "verify6-1.sh",
                "hint": "Bitte folgen Sie den Anweisungen, um die Schritte abzuschließen."
              }
            ]
          },
          {
            "title": "Diskussion",
            "text": "de/step7.md",
            "verify": [
              {
                "name": "Dieser Schritt hat momentan keine Verifizierung",
                "file": "verify7-1.sh",
                "hint": "Dieser Schritt hat momentan keine Verifizierung"
              }
            ]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "ジェネレータ関数を使った反復処理のカスタマイズ",
      "description": "このセクションでは、ジェネレータ関数を使って反復処理をどのようにカスタマイズできるかを見ていきます。",
      "meta": {
        "title": "Pythonの反復処理のカスタマイズ | ジェネレータ関数",
        "description": "ジェネレータ関数を使ってPythonでカスタムな反復処理パターンを作成する方法を、カウントダウンの例を含めて探ります。",
        "keywords": "Python, 反復処理, ジェネレータ関数, カスタマイズ, カウントダウン"
      },
      "details": {
        "steps": [
          {
            "title": "問題",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "Python履歴における'print'の存在を確認する",
                "file": "verify1-1.sh",
                "hint": "指示に従って手順を完了してください。"
              }
            ]
          },
          {
            "title": "ジェネレータ",
            "text": "ja/step2.md",
            "verify": [
              {
                "name": "Python履歴におけるyieldとカウントダウンの使用を確認する",
                "file": "verify2-1.sh",
                "hint": "指示に従って手順を完了してください。"
              }
            ]
          },
          {
            "title": "演習6.4：単純なジェネレータ",
            "text": "ja/step3.md",
            "verify": [
              {
                "name": "Python履歴における'with'と'countdown'の使用を確認する",
                "file": "verify3-1.sh",
                "hint": "指示に従って手順を完了してください。"
              }
            ]
          },
          {
            "title": "演習6.5：ストリーミングデータソースの監視",
            "text": "ja/step4.md",
            "verify": [
              {
                "name": "AAPL株価のログエントリの存在を確認する",
                "file": "verify4-1.sh",
                "hint": "指示に従って手順を完了してください。"
              }
            ]
          },
          {
            "title": "演習6.6：データを生成するためのジェネレータの使用",
            "text": "ja/step5.md",
            "verify": [
              {
                "name": "Pythonスクリプトに__main__ブロックが含まれているか確認する",
                "file": "verify5-1.sh",
                "hint": "指示に従って手順を完了してください。"
              }
            ]
          },
          {
            "title": "演習6.7：あなたのポートフォリオを監視する",
            "text": "ja/step6.md",
            "verify": [
              {
                "name": "follow.pyに'import report'が含まれているか確認する",
                "file": "verify6-1.sh",
                "hint": "指示に従って手順を完了してください。"
              }
            ]
          },
          {
            "title": "議論",
            "text": "ja/step7.md",
            "verify": [
              {
                "name": "このステップは現在検証がありません",
                "file": "verify7-1.sh",
                "hint": "このステップは現在検証がありません"
              }
            ]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Настройка итерации с использованием генераторных функций",
      "description": "В этом разделе рассматривается, как можно настроить итерацию с использованием генераторной функции.",
      "meta": {
        "title": "Настройка итерации в Python | Генераторные функции",
        "description": "Изучите, как создавать настраиваемые паттерны итерации в Python с использованием генераторных функций, включая пример обратного отсчета.",
        "keywords": "Python, Итерация, Генераторные функции, Настройка, Обратный отсчет"
      },
      "details": {
        "steps": [
          {
            "title": "Проблема",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "Проверить наличие 'print' в истории Python",
                "file": "verify1-1.sh",
                "hint": "Пожалуйста, следуйте инструкциям для завершения шагов."
              }
            ]
          },
          {
            "title": "Генераторы",
            "text": "ru/step2.md",
            "verify": [
              {
                "name": "Проверить использование yield и обратного отсчета в истории Python",
                "file": "verify2-1.sh",
                "hint": "Пожалуйста, следуйте инструкциям для завершения шагов."
              }
            ]
          },
          {
            "title": "Упражнение 6.4: Простой генератор",
            "text": "ru/step3.md",
            "verify": [
              {
                "name": "Проверить использование 'with' и 'обратного отсчета' в истории Python",
                "file": "verify3-1.sh",
                "hint": "Пожалуйста, следуйте инструкциям для завершения шагов."
              }
            ]
          },
          {
            "title": "Упражнение 6.5: Мониторинг потока данных",
            "text": "ru/step4.md",
            "verify": [
              {
                "name": "Проверить наличие записи журнала акций AAPL",
                "file": "verify4-1.sh",
                "hint": "Пожалуйста, следуйте инструкциям для завершения шагов."
              }
            ]
          },
          {
            "title": "Упражнение 6.6: Использование генератора для производства данных",
            "text": "ru/step5.md",
            "verify": [
              {
                "name": "Проверить, содержит ли Python-скрипт блок __main__",
                "file": "verify5-1.sh",
                "hint": "Пожалуйста, следуйте инструкциям для завершения шагов."
              }
            ]
          },
          {
            "title": "Упражнение 6.7: Следить за портфелем",
            "text": "ru/step6.md",
            "verify": [
              {
                "name": "Проверить наличие 'import report' в follow.py",
                "file": "verify6-1.sh",
                "hint": "Пожалуйста, следуйте инструкциям для завершения шагов."
              }
            ]
          },
          {
            "title": "Обсуждение",
            "text": "ru/step7.md",
            "verify": [
              {
                "name": "На данный момент этот шаг не имеет проверки",
                "file": "verify7-1.sh",
                "hint": "На данный момент этот шаг не имеет проверки"
              }
            ]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    }
  ]
}
