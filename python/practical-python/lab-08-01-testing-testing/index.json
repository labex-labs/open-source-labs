{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Python Testing Essentials",
  "description": "The dynamic nature of Python makes testing critically important to most applications. There is no compiler to find your bugs. The only way to find bugs is to run the code and make sure you try out all of its features.",
  "meta": {
    "title": "Python Testing | Assertions | Programming Fundamentals",
    "description": "Discover the importance of testing in Python and learn about the assert statement for internal checks and invariants. Enhance your programming skills with this comprehensive guide.",
    "keywords": "Python, Testing, Assertions, Programming Fundamentals, Debugging, Coding"
  },
  "difficulty": "Beginner",
  "time": 45,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Assertions",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify Presence of 'assert' in Python History",
            "file": "verify1-1.sh",
            "hint": "Please follow the instructions to complete the steps.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "python/build_in_functions",
          "python/custom_exceptions",
          "python/lists",
          "python/numeric_types",
          "python/tuples",
          "python/variables_data_types"
        ]
      },
      {
        "title": "Contract Programming",
        "text": "en/step2.md",
        "verify": [
          {
            "name": "Verify Presence of 'return' in Python History",
            "file": "verify2-1.sh",
            "hint": "Please follow the instructions to complete the steps.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "python/build_in_functions",
          "python/custom_exceptions",
          "python/function_definition",
          "python/numeric_types",
          "python/python_shell",
          "python/tuples",
          "python/variables_data_types"
        ]
      },
      {
        "title": "Inline Tests",
        "text": "en/step3.md",
        "verify": [
          {
            "name": "Verify Presence of Equals Operator in Python History",
            "file": "verify3-1.sh",
            "hint": "Please follow the instructions to complete the steps.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "python/custom_exceptions",
          "python/function_definition",
          "python/tuples"
        ]
      },
      {
        "title": "unittest Module",
        "text": "en/step4.md",
        "verify": [
          {
            "name": "Verify Presence of 'simple' in test_simple.py",
            "file": "verify4-1.sh",
            "hint": "Please follow the instructions to complete the steps.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "python/classes_objects",
          "python/comments",
          "python/encapsulation",
          "python/function_definition",
          "python/importing_modules",
          "python/standard_libraries",
          "python/tuples",
          "python/with_statement"
        ]
      },
      {
        "title": "Using unittest",
        "text": "en/step5.md",
        "verify": [
          {
            "name": "This step has no verification at the moment",
            "file": "verify5-1.sh",
            "hint": "This step has no verification at the moment",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "python/booleans",
          "python/build_in_functions",
          "python/comments",
          "python/tuples"
        ]
      },
      {
        "title": "Running unittest",
        "text": "en/step6.md",
        "verify": [
          {
            "name": "Verify Execution of Test Script and Command History",
            "file": "verify6-1.sh",
            "hint": "Please follow the instructions to complete the steps.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "python/comments",
          "python/conditional_statements",
          "python/standard_libraries",
          "python/tuples"
        ]
      },
      {
        "title": "Commentary",
        "text": "en/step7.md",
        "verify": [
          {
            "name": "This step has no verification at the moment",
            "file": "verify7-1.sh",
            "hint": "This step has no verification at the moment",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": []
      },
      {
        "title": "Third Party Test Tools",
        "text": "en/step8.md",
        "verify": [
          {
            "name": "Verify Presence of 'assert simple' in test_simple.py",
            "file": "verify8-1.sh",
            "hint": "Please follow the instructions to complete the steps.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "python/comments",
          "python/custom_exceptions",
          "python/function_definition",
          "python/importing_modules",
          "python/tuples"
        ]
      },
      {
        "title": "Exercise 8.1: Writing Unit Tests",
        "text": "en/step9.md",
        "verify": [
          {
            "name": "Verify Stock Class Implementation",
            "file": "verify9-1.sh",
            "hint": "Please follow the instructions to complete the steps.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "python/classes_objects",
          "python/comments",
          "python/conditional_statements",
          "python/encapsulation",
          "python/function_definition",
          "python/importing_modules",
          "python/os_system",
          "python/standard_libraries",
          "python/tuples",
          "python/with_statement"
        ],
        "solutions": ["test_stock.py"]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    },
    "assets": {
      "host01": [
        {
          "file": "stock.py",
          "target": "/home/labex/project",
          "chmod": "ugo+rwx"
        },
        {
          "file": "typedproperty.py",
          "target": "/home/labex/project",
          "chmod": "ugo+rwx"
        },
        {
          "file": "simple.py",
          "target": "/home/labex/project",
          "chmod": "ugo+rwx"
        }
      ]
    }
  },
  "backend": {
    "imageid": "vnc-ubuntu:2204"
  },
  "contributors": [],
  "license": {
    "name": "CC-BY-SA-4.0",
    "url": "https://github.com/dabeaz-course/practical-python/blob/master/LICENSE.md",
    "repo": "https://github.com/dabeaz-course/practical-python"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "Python 测试要点",
      "description": "Python 的动态特性使得测试对大多数应用程序至关重要。没有编译器来帮你找出错误。发现错误的唯一方法就是运行代码，并确保你测试了它的所有功能。",
      "meta": {
        "title": "Python 测试 | 断言 | 编程基础",
        "description": "了解 Python 中测试的重要性，并学习用于内部检查和不变量的断言语句。通过本全面指南提升你的编程技能。",
        "keywords": "Python, 测试，断言，编程基础，调试，编码"
      },
      "details": {
        "steps": [
          {
            "title": "断言",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "验证 Python 历史记录中是否存在'assert'",
                "file": "verify1-1.sh",
                "hint": "请按照说明完成步骤。"
              }
            ]
          },
          {
            "title": "契约式编程",
            "text": "zh/step2.md",
            "verify": [
              {
                "name": "验证 Python 历史记录中是否存在'return'",
                "file": "verify2-1.sh",
                "hint": "请按照说明完成步骤。"
              }
            ]
          },
          {
            "title": "内联测试",
            "text": "zh/step3.md",
            "verify": [
              {
                "name": "验证 Python 历史记录中是否存在等于运算符",
                "file": "verify3-1.sh",
                "hint": "请按照说明完成步骤。"
              }
            ]
          },
          {
            "title": "unittest 模块",
            "text": "zh/step4.md",
            "verify": [
              {
                "name": "验证 test_simple.py 中是否存在'simple'",
                "file": "verify4-1.sh",
                "hint": "请按照说明完成步骤。"
              }
            ]
          },
          {
            "title": "使用 unittest",
            "text": "zh/step5.md",
            "verify": [
              {
                "name": "此步骤目前没有验证",
                "file": "verify5-1.sh",
                "hint": "此步骤目前没有验证"
              }
            ]
          },
          {
            "title": "运行 unittest",
            "text": "zh/step6.md",
            "verify": [
              {
                "name": "验证测试脚本的执行情况和命令历史记录",
                "file": "verify6-1.sh",
                "hint": "请按照说明完成步骤。"
              }
            ]
          },
          {
            "title": "注释",
            "text": "zh/step7.md",
            "verify": [
              {
                "name": "此步骤目前没有验证",
                "file": "verify7-1.sh",
                "hint": "此步骤目前没有验证"
              }
            ]
          },
          {
            "title": "第三方测试工具",
            "text": "zh/step8.md",
            "verify": [
              {
                "name": "验证 test_simple.py 中是否存在 'assert simple'",
                "file": "verify8-1.sh",
                "hint": "请按照说明完成步骤。"
              }
            ]
          },
          {
            "title": "练习 8.1：编写单元测试",
            "text": "zh/step9.md",
            "verify": [
              {
                "name": "验证股票类的实现",
                "file": "verify9-1.sh",
                "hint": "请按照说明完成步骤。"
              }
            ],
            "solutions": ["test_stock.py"]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Elementos esenciales de Pruebas en Python",
      "description": "La naturaleza dinámica de Python hace que las pruebas sean críticamente importantes para la mayoría de las aplicaciones. No hay compilador para encontrar tus errores. La única manera de encontrar errores es ejecutar el código y asegurarse de probar todas sus características.",
      "meta": {
        "title": "Pruebas en Python | Aserciones | Fundamentos de Programación",
        "description": "Descubre la importancia de las pruebas en Python y aprende sobre la declaración assert para comprobaciones internas e invariantes. Mejora tus habilidades de programación con esta guía integral.",
        "keywords": "Python, Pruebas, Aserciones, Fundamentos de Programación, Depuración, Codificación"
      },
      "details": {
        "steps": [
          {
            "title": "Aserciones",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Verificar la presencia de 'assert' en la historia de Python",
                "file": "verify1-1.sh",
                "hint": "Siga las instrucciones para completar los pasos."
              }
            ]
          },
          {
            "title": "Programación por Contrato",
            "text": "es/step2.md",
            "verify": [
              {
                "name": "Verificar la presencia de'return' en la historia de Python",
                "file": "verify2-1.sh",
                "hint": "Siga las instrucciones para completar los pasos."
              }
            ]
          },
          {
            "title": "Pruebas en línea",
            "text": "es/step3.md",
            "verify": [
              {
                "name": "Verificar la presencia del operador de igualdad en la historia de Python",
                "file": "verify3-1.sh",
                "hint": "Siga las instrucciones para completar los pasos."
              }
            ]
          },
          {
            "title": "Módulo unittest",
            "text": "es/step4.md",
            "verify": [
              {
                "name": "Verificar la presencia de'simple' en test_simple.py",
                "file": "verify4-1.sh",
                "hint": "Siga las instrucciones para completar los pasos."
              }
            ]
          },
          {
            "title": "Usando unittest",
            "text": "es/step5.md",
            "verify": [
              {
                "name": "Este paso no tiene verificaciones en este momento",
                "file": "verify5-1.sh",
                "hint": "Este paso no tiene verificaciones en este momento"
              }
            ]
          },
          {
            "title": "Ejecutando unittest",
            "text": "es/step6.md",
            "verify": [
              {
                "name": "Verificar la ejecución del script de prueba y la historia de comandos",
                "file": "verify6-1.sh",
                "hint": "Siga las instrucciones para completar los pasos."
              }
            ]
          },
          {
            "title": "Comentario",
            "text": "es/step7.md",
            "verify": [
              {
                "name": "Este paso no tiene verificaciones en este momento",
                "file": "verify7-1.sh",
                "hint": "Este paso no tiene verificaciones en este momento"
              }
            ]
          },
          {
            "title": "Herramientas de Prueba de Terceros",
            "text": "es/step8.md",
            "verify": [
              {
                "name": "Verificar la presencia de 'assert simple' en test_simple.py",
                "file": "verify8-1.sh",
                "hint": "Siga las instrucciones para completar los pasos."
              }
            ]
          },
          {
            "title": "Ejercicio 8.1: Escribir Pruebas Unitarias",
            "text": "es/step9.md",
            "verify": [
              {
                "name": "Verificar la Implementación de la Clase Stock",
                "file": "verify9-1.sh",
                "hint": "Siga las instrucciones para completar los pasos."
              }
            ]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Essentiels des tests en Python",
      "description": "La nature dynamique de Python rend les tests d'une importance cruciale pour la plupart des applications. Il n'y a pas de compilateur pour détecter vos bugs. Le seul moyen de trouver des bugs est d'exécuter le code et de s'assurer que vous testez toutes ses fonctionnalités.",
      "meta": {
        "title": "Tests en Python | Assertions | Fondements de la programmation",
        "description": "Découvrez l'importance des tests en Python et apprenez-en plus sur l'instruction assert pour les vérifications internes et les invariants. Améliorez vos compétences en programmation avec ce guide complet.",
        "keywords": "Python, Tests, Assertions, Fondements de la programmation, Débogage, Codage"
      },
      "details": {
        "steps": [
          {
            "title": "Assertions",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Vérifiez la présence de 'assert' dans l'historique Python",
                "file": "verify1-1.sh",
                "hint": "Veuillez suivre les instructions pour compléter les étapes."
              }
            ]
          },
          {
            "title": "Programmation contractuelle",
            "text": "fr/step2.md",
            "verify": [
              {
                "name": "Vérifiez la présence de'return' dans l'historique Python",
                "file": "verify2-1.sh",
                "hint": "Veuillez suivre les instructions pour compléter les étapes."
              }
            ]
          },
          {
            "title": "Tests en ligne",
            "text": "fr/step3.md",
            "verify": [
              {
                "name": "Vérifiez la présence de l'opérateur d'égalité dans l'historique Python",
                "file": "verify3-1.sh",
                "hint": "Veuillez suivre les instructions pour compléter les étapes."
              }
            ]
          },
          {
            "title": "Module unittest",
            "text": "fr/step4.md",
            "verify": [
              {
                "name": "Vérifiez la présence de'simple' dans test_simple.py",
                "file": "verify4-1.sh",
                "hint": "Veuillez suivre les instructions pour compléter les étapes."
              }
            ]
          },
          {
            "title": "Utilisation de unittest",
            "text": "fr/step5.md",
            "verify": [
              {
                "name": "Cette étape n'a pas de vérification pour le moment",
                "file": "verify5-1.sh",
                "hint": "Cette étape n'a pas de vérification pour le moment"
              }
            ]
          },
          {
            "title": "Exécution de unittest",
            "text": "fr/step6.md",
            "verify": [
              {
                "name": "Vérifiez l'exécution du script de test et de l'historique des commandes",
                "file": "verify6-1.sh",
                "hint": "Veuillez suivre les instructions pour compléter les étapes."
              }
            ]
          },
          {
            "title": "Commentaire",
            "text": "fr/step7.md",
            "verify": [
              {
                "name": "Cette étape n'a pas de vérification pour le moment",
                "file": "verify7-1.sh",
                "hint": "Cette étape n'a pas de vérification pour le moment"
              }
            ]
          },
          {
            "title": "Outils de test tiers",
            "text": "fr/step8.md",
            "verify": [
              {
                "name": "Vérifiez la présence de 'assert simple' dans test_simple.py",
                "file": "verify8-1.sh",
                "hint": "Veuillez suivre les instructions pour compléter les étapes."
              }
            ]
          },
          {
            "title": "Exercice 8.1 : Écrire des tests unitaires",
            "text": "fr/step9.md",
            "verify": [
              {
                "name": "Vérifiez l'implémentation de la classe Stock",
                "file": "verify9-1.sh",
                "hint": "Veuillez suivre les instructions pour compléter les étapes."
              }
            ]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Python-Testing-Wesentliches",
      "description": "Die dynamische Natur von Python macht das Testen für die meisten Anwendungen von entscheidender Wichtigkeit. Es gibt keinen Compiler, der Ihre Fehler findet. Der einzige Weg, Fehler zu finden, ist, den Code auszuführen und sicherzustellen, dass Sie alle seine Funktionen testen.",
      "meta": {
        "title": "Python-Testing | Assertionen | Grundlagen der Programmierung",
        "description": "Entdecken Sie die Wichtigkeit des Testens in Python und lernen Sie über den assert-Befehl für interne Überprüfungen und Invarianten. Verbessern Sie Ihre Programmierkenntnisse mit dieser umfassenden Anleitung.",
        "keywords": "Python, Testing, Assertionen, Grundlagen der Programmierung, Debugging, Coding"
      },
      "details": {
        "steps": [
          {
            "title": "Assertionen",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Verifizieren Sie das Vorhandensein von 'assert' in der Python-Geschichte",
                "file": "verify1-1.sh",
                "hint": "Bitte folgen Sie den Anweisungen, um die Schritte abzuschließen."
              }
            ]
          },
          {
            "title": "Vertragsorientiertes Programmieren",
            "text": "de/step2.md",
            "verify": [
              {
                "name": "Verifizieren Sie das Vorhandensein von'return' in der Python-Geschichte",
                "file": "verify2-1.sh",
                "hint": "Bitte folgen Sie den Anweisungen, um die Schritte abzuschließen."
              }
            ]
          },
          {
            "title": "Eingebaute Tests",
            "text": "de/step3.md",
            "verify": [
              {
                "name": "Verifizieren Sie das Vorhandensein des Gleichheitsoperators in der Python-Geschichte",
                "file": "verify3-1.sh",
                "hint": "Bitte folgen Sie den Anweisungen, um die Schritte abzuschließen."
              }
            ]
          },
          {
            "title": "unittest-Modul",
            "text": "de/step4.md",
            "verify": [
              {
                "name": "Verifizieren Sie das Vorhandensein von'simple' in test_simple.py",
                "file": "verify4-1.sh",
                "hint": "Bitte folgen Sie den Anweisungen, um die Schritte abzuschließen."
              }
            ]
          },
          {
            "title": "Das Verwenden von unittest",
            "text": "de/step5.md",
            "verify": [
              {
                "name": "Dieser Schritt hat momentan keine Verifizierung",
                "file": "verify5-1.sh",
                "hint": "Dieser Schritt hat momentan keine Verifizierung"
              }
            ]
          },
          {
            "title": "Ausführen von unittest",
            "text": "de/step6.md",
            "verify": [
              {
                "name": "Verifizieren Sie die Ausführung des Testskripts und der Befehlsgeschichte",
                "file": "verify6-1.sh",
                "hint": "Bitte folgen Sie den Anweisungen, um die Schritte abzuschließen."
              }
            ]
          },
          {
            "title": "Kommentar",
            "text": "de/step7.md",
            "verify": [
              {
                "name": "Dieser Schritt hat momentan keine Verifizierung",
                "file": "verify7-1.sh",
                "hint": "Dieser Schritt hat momentan keine Verifizierung"
              }
            ]
          },
          {
            "title": "Dritte-Partner-Testwerkzeuge",
            "text": "de/step8.md",
            "verify": [
              {
                "name": "Verifizieren Sie das Vorhandensein von 'assert simple' in test_simple.py",
                "file": "verify8-1.sh",
                "hint": "Bitte folgen Sie den Anweisungen, um die Schritte abzuschließen."
              }
            ]
          },
          {
            "title": "Übung 8.1: Schreiben von Unit-Tests",
            "text": "de/step9.md",
            "verify": [
              {
                "name": "Verifizieren Sie die Implementierung der Stock-Klasse",
                "file": "verify9-1.sh",
                "hint": "Bitte folgen Sie den Anweisungen, um die Schritte abzuschließen."
              }
            ]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "Python テストの基本",
      "description": "Python の動的な性質は、ほとんどのアプリケーションにとってテストを極めて重要にします。バグを見つけるためのコンパイラはありません。バグを見つける唯一の方法は、コードを実行して、そのすべての機能を試してみることです。",
      "meta": {
        "title": "Python テスト | アサーション | プログラミングの基本",
        "description": "Python におけるテストの重要性を学び、内部チェックと不変条件のための assert 文について学びましょう。この包括的なガイドでプログラミング技術を向上させましょう。",
        "keywords": "Python, テスト，アサーション，プログラミングの基本，デバッグ，コーディング"
      },
      "details": {
        "steps": [
          {
            "title": "アサーション",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "Python の履歴における'assert'の存在を確認する",
                "file": "verify1-1.sh",
                "hint": "指示に従って手順を完了してください。"
              }
            ]
          },
          {
            "title": "契約型プログラミング",
            "text": "ja/step2.md",
            "verify": [
              {
                "name": "Python の履歴における'return'の存在を確認する",
                "file": "verify2-1.sh",
                "hint": "指示に従って手順を完了してください。"
              }
            ]
          },
          {
            "title": "インラインテスト",
            "text": "ja/step3.md",
            "verify": [
              {
                "name": "Python の履歴における等号演算子の存在を確認する",
                "file": "verify3-1.sh",
                "hint": "指示に従って手順を完了してください。"
              }
            ]
          },
          {
            "title": "unittest モジュール",
            "text": "ja/step4.md",
            "verify": [
              {
                "name": "test_simple.py における'simple'の存在を確認する",
                "file": "verify4-1.sh",
                "hint": "指示に従って手順を完了してください。"
              }
            ]
          },
          {
            "title": "unittest の使用",
            "text": "ja/step5.md",
            "verify": [
              {
                "name": "このステップは現在検証対象がありません",
                "file": "verify5-1.sh",
                "hint": "このステップは現在検証対象がありません"
              }
            ]
          },
          {
            "title": "unittest の実行",
            "text": "ja/step6.md",
            "verify": [
              {
                "name": "テストスクリプトとコマンド履歴の実行を確認する",
                "file": "verify6-1.sh",
                "hint": "指示に従って手順を完了してください。"
              }
            ]
          },
          {
            "title": "解説",
            "text": "ja/step7.md",
            "verify": [
              {
                "name": "このステップは現在検証対象がありません",
                "file": "verify7-1.sh",
                "hint": "このステップは現在検証対象がありません"
              }
            ]
          },
          {
            "title": "第三者のテストツール",
            "text": "ja/step8.md",
            "verify": [
              {
                "name": "test_simple.py における'assert simple'の存在を確認する",
                "file": "verify8-1.sh",
                "hint": "指示に従って手順を完了してください。"
              }
            ]
          },
          {
            "title": "演習 8.1：単体テストの作成",
            "text": "ja/step9.md",
            "verify": [
              {
                "name": "Stock クラスの実装を確認する",
                "file": "verify9-1.sh",
                "hint": "指示に従って手順を完了してください。"
              }
            ]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Основы тестирования в Python",
      "description": "Динамическое природа Python делает тестирование крайне важным для большинства приложений. Нет компилятора, который бы выявлял ваши ошибки. Einдинственный способ обнаружить ошибки - запустить код и убедиться, что вы проверили все его функции.",
      "meta": {
        "title": "Тестирование в Python | Утверждения | Основы программирования",
        "description": "Откройте важность тестирования в Python и узнайте о выражении assert для внутренних проверок и инвариантов. Повысьте свои навыки программирования с помощью этого полного руководства.",
        "keywords": "Python, Тестирование, Утверждения, Основы программирования, Дебагинг, Программирование"
      },
      "details": {
        "steps": [
          {
            "title": "Утверждения",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "Проверить наличие 'assert' в истории Python",
                "file": "verify1-1.sh",
                "hint": "Пожалуйста, следуйте инструкциям для завершения шагов."
              }
            ]
          },
          {
            "title": "Контрактное программирование",
            "text": "ru/step2.md",
            "verify": [
              {
                "name": "Проверить наличие 'return' в истории Python",
                "file": "verify2-1.sh",
                "hint": "Пожалуйста, следуйте инструкциям для завершения шагов."
              }
            ]
          },
          {
            "title": "Встроенные тесты",
            "text": "ru/step3.md",
            "verify": [
              {
                "name": "Проверить наличие оператора равенства в истории Python",
                "file": "verify3-1.sh",
                "hint": "Пожалуйста, следуйте инструкциям для завершения шагов."
              }
            ]
          },
          {
            "title": "Модуль unittest",
            "text": "ru/step4.md",
            "verify": [
              {
                "name": "Проверить наличие слова'simple' в test_simple.py",
                "file": "verify4-1.sh",
                "hint": "Пожалуйста, следуйте инструкциям для завершения шагов."
              }
            ]
          },
          {
            "title": "Использование unittest",
            "text": "ru/step5.md",
            "verify": [
              {
                "name": "На данный момент этот шаг не имеет проверки",
                "file": "verify5-1.sh",
                "hint": "На данный момент этот шаг не имеет проверки"
              }
            ]
          },
          {
            "title": "Запуск unittest",
            "text": "ru/step6.md",
            "verify": [
              {
                "name": "Проверить выполнение тестового скрипта и историю команд",
                "file": "verify6-1.sh",
                "hint": "Пожалуйста, следуйте инструкциям для завершения шагов."
              }
            ]
          },
          {
            "title": "Комментарий",
            "text": "ru/step7.md",
            "verify": [
              {
                "name": "На данный момент этот шаг не имеет проверки",
                "file": "verify7-1.sh",
                "hint": "На данный момент этот шаг не имеет проверки"
              }
            ]
          },
          {
            "title": "Инструменты тестирования от третьих лиц",
            "text": "ru/step8.md",
            "verify": [
              {
                "name": "Проверить наличие 'assert simple' в test_simple.py",
                "file": "verify8-1.sh",
                "hint": "Пожалуйста, следуйте инструкциям для завершения шагов."
              }
            ]
          },
          {
            "title": "Упражнение 8.1: Написание юнит-тестов",
            "text": "ru/step9.md",
            "verify": [
              {
                "name": "Проверить реализацию класса Stock",
                "file": "verify9-1.sh",
                "hint": "Пожалуйста, следуйте инструкциям для завершения шагов."
              }
            ]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    },
    {
      "lang": "ko",
      "title": "Python 테스팅 필수 (Python Testing Essentials)",
      "description": "Python 의 동적인 특성으로 인해 대부분의 애플리케이션에서 테스팅은 매우 중요합니다. 버그를 찾을 컴파일러가 없습니다. 버그를 찾는 유일한 방법은 코드를 실행하고 모든 기능을 시도해 보는 것입니다.",
      "meta": {
        "title": "Python 테스팅 | 어서션 (Assertions) | 프로그래밍 기본",
        "description": "Python 에서 테스팅의 중요성을 알아보고 내부 검사 및 불변성을 위한 어서션 문에 대해 알아보세요. 이 포괄적인 가이드로 프로그래밍 기술을 향상시키세요.",
        "keywords": "Python, 테스팅, 어서션, 프로그래밍 기본, 디버깅, 코딩, 파이썬 테스트, 파이썬 테스팅 방법, 파이썬 assert"
      },
      "details": {
        "steps": [
          {
            "title": "어설션 (Assertions)",
            "text": "ko/step1.md",
            "verify": [
              {
                "name": "Python 히스토리에서 'assert'의 존재 확인",
                "file": "verify1-1.sh",
                "hint": "단계 완료를 위해 지침을 따르세요."
              }
            ]
          },
          {
            "title": "계약 프로그래밍 (Contract Programming)",
            "text": "ko/step2.md",
            "verify": [
              {
                "name": "Python 히스토리에서 'return'의 존재 확인",
                "file": "verify2-1.sh",
                "hint": "단계 완료를 위해 지침을 따르세요."
              }
            ]
          },
          {
            "title": "인라인 테스트 (Inline Tests)",
            "text": "ko/step3.md",
            "verify": [
              {
                "name": "Python 히스토리에서 등호 연산자 (Equals Operator) 존재 확인",
                "file": "verify3-1.sh",
                "hint": "단계 완료를 위해 지침을 따르세요."
              }
            ]
          },
          {
            "title": "unittest 모듈",
            "text": "ko/step4.md",
            "verify": [
              {
                "name": "test_simple.py 에서 'simple' 존재 확인",
                "file": "verify4-1.sh",
                "hint": "단계 완료를 위해 지침을 따르세요."
              }
            ]
          },
          {
            "title": "unittest 사용법",
            "text": "ko/step5.md",
            "verify": [
              {
                "name": "현재 이 단계는 검증이 없습니다.",
                "file": "verify5-1.sh",
                "hint": "현재 이 단계는 검증이 없습니다."
              }
            ]
          },
          {
            "title": "unittest 실행",
            "text": "ko/step6.md",
            "verify": [
              {
                "name": "테스트 스크립트 실행 및 명령어 히스토리 확인",
                "file": "verify6-1.sh",
                "hint": "단계 완료를 위해 지침을 따르세요."
              }
            ]
          },
          {
            "title": "해설",
            "text": "ko/step7.md",
            "verify": [
              {
                "name": "현재 이 단계는 검증이 없습니다.",
                "file": "verify7-1.sh",
                "hint": "현재 이 단계는 검증이 없습니다."
              }
            ]
          },
          {
            "title": "서드 파티 테스트 도구",
            "text": "ko/step8.md",
            "verify": [
              {
                "name": "test_simple.py 에서 'assert simple' 존재 여부 확인",
                "file": "verify8-1.sh",
                "hint": "단계 완료를 위해 지침을 따르세요."
              }
            ]
          },
          {
            "title": "연습 8.1: 유닛 테스트 작성",
            "text": "ko/step9.md",
            "verify": [
              {
                "name": "Stock 클래스 구현 검증",
                "file": "verify9-1.sh",
                "hint": "단계 완료를 위해 지침을 따르세요."
              }
            ]
          }
        ],
        "intro": {
          "text": "ko/intro.md",
          "title": "소개"
        },
        "finish": {
          "text": "ko/finish.md",
          "title": "요약"
        }
      }
    },
    {
      "lang": "pt",
      "title": "Fundamentos de Testes em Python",
      "description": "A natureza dinâmica do Python torna os testes criticamente importantes para a maioria das aplicações. Não há um compilador para encontrar seus erros. A única maneira de encontrar erros é executar o código e garantir que você experimente todos os seus recursos.",
      "meta": {
        "title": "Testes em Python: Assertivas e Fundamentos da Programação",
        "description": "Descubra a importância dos testes em Python e aprenda sobre a instrução assert para verificações internas e invariantes. Aprimore suas habilidades de programação com este guia abrangente.",
        "keywords": "Python, Testes, Assertivas, Fundamentos da Programação, Debugging, Codificação, Teste de Software Python"
      },
      "details": {
        "steps": [
          {
            "title": "Assertivas",
            "text": "pt/step1.md",
            "verify": [
              {
                "name": "Verificar a Presença de 'assert' no Histórico do Python",
                "file": "verify1-1.sh",
                "hint": "Por favor, siga as instruções para completar os passos."
              }
            ]
          },
          {
            "title": "Programação por Contrato",
            "text": "pt/step2.md",
            "verify": [
              {
                "name": "Verificar a Presença de 'return' no Histórico do Python",
                "file": "verify2-1.sh",
                "hint": "Por favor, siga as instruções para completar os passos."
              }
            ]
          },
          {
            "title": "Testes Inline",
            "text": "pt/step3.md",
            "verify": [
              {
                "name": "Verificar a Presença do Operador de Igualdade no Histórico do Python",
                "file": "verify3-1.sh",
                "hint": "Por favor, siga as instruções para completar os passos."
              }
            ]
          },
          {
            "title": "Módulo unittest",
            "text": "pt/step4.md",
            "verify": [
              {
                "name": "Verificar a Presença de 'simple' em test_simple.py",
                "file": "verify4-1.sh",
                "hint": "Por favor, siga as instruções para completar os passos."
              }
            ]
          },
          {
            "title": "Usando unittest",
            "text": "pt/step5.md",
            "verify": [
              {
                "name": "Este passo não possui verificação no momento",
                "file": "verify5-1.sh",
                "hint": "Este passo não possui verificação no momento"
              }
            ]
          },
          {
            "title": "Executando unittest",
            "text": "pt/step6.md",
            "verify": [
              {
                "name": "Verificar a Execução do Script de Teste e Histórico de Comandos",
                "file": "verify6-1.sh",
                "hint": "Por favor, siga as instruções para completar os passos."
              }
            ]
          },
          {
            "title": "Comentários",
            "text": "pt/step7.md",
            "verify": [
              {
                "name": "Este passo não possui verificação no momento",
                "file": "verify7-1.sh",
                "hint": "Este passo não possui verificação no momento"
              }
            ]
          },
          {
            "title": "Ferramentas de Teste de Terceiros",
            "text": "pt/step8.md",
            "verify": [
              {
                "name": "Verificar a Presença de 'assert simple' em test_simple.py",
                "file": "verify8-1.sh",
                "hint": "Por favor, siga as instruções para completar os passos."
              }
            ]
          },
          {
            "title": "Exercício 8.1: Escrevendo Testes Unitários",
            "text": "pt/step9.md",
            "verify": [
              {
                "name": "Verificar a Implementação da Classe Stock",
                "file": "verify9-1.sh",
                "hint": "Por favor, siga as instruções para completar os passos."
              }
            ]
          }
        ],
        "intro": {
          "text": "pt/intro.md",
          "title": "Introdução"
        },
        "finish": {
          "text": "pt/finish.md",
          "title": "Resumo"
        }
      }
    }
  ]
}
