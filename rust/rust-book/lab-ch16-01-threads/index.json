{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Using Threads to Run Code Simultaneously",
  "description": "In this lab, we will explore the concept of threads in programming and how they can be used to run code simultaneously, improving performance but adding complexity and potential issues such as race conditions, deadlocks, and hard-to-reproduce bugs.",
  "meta": {
    "title": "Rust Threading | Concurrency | Parallelism",
    "description": "Learn how to use threads in Rust to run code simultaneously, improve performance, and handle potential issues like race conditions and deadlocks.",
    "keywords": "Rust, Threading, Concurrency, Parallelism, Race Conditions, Deadlocks"
  },
  "difficulty": "Beginner",
  "time": 20,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Using Threads to Run Code Simultaneously",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "This step has no verification at the moment",
            "file": "verify1-1.sh",
            "hint": "This step has no verification at the moment",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": []
      },
      {
        "title": "Creating a New Thread with spawn",
        "text": "en/step2.md",
        "verify": [
          {
            "name": "This step has no verification at the moment",
            "file": "verify2-1.sh",
            "hint": "This step has no verification at the moment",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "rust/expressions_statements",
          "rust/for_loop",
          "rust/function_syntax",
          "rust/method_syntax"
        ]
      },
      {
        "title": "Waiting for All Threads to Finish Using join Handles",
        "text": "en/step3.md",
        "verify": [
          {
            "name": "This step has no verification at the moment",
            "file": "verify3-1.sh",
            "hint": "This step has no verification at the moment",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "rust/expressions_statements",
          "rust/for_loop",
          "rust/function_syntax",
          "rust/method_syntax",
          "rust/variable_declarations"
        ]
      },
      {
        "title": "Using move Closures with Threads",
        "text": "en/step4.md",
        "verify": [
          {
            "name": "This step has no verification at the moment",
            "file": "verify4-1.sh",
            "hint": "This step has no verification at the moment",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "rust/expressions_statements",
          "rust/function_syntax",
          "rust/lifetime_specifiers",
          "rust/method_syntax",
          "rust/variable_declarations"
        ]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": [],
  "license": {
    "name": "MIT",
    "url": "https://github.com/rust-lang/book/blob/master/LICENSE-MIT",
    "repo": "https://github.com/rust-lang/book"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "使用线程同时运行代码",
      "description": "在本实验中，我们将探讨编程中线程的概念，以及如何使用线程同时运行代码，这可以提高性能，但也会增加复杂性和潜在问题，如竞态条件、死锁和难以重现的错误。",
      "meta": {
        "title": "Rust 线程 | 并发 | 并行",
        "description": "学习如何在 Rust 中使用线程同时运行代码、提高性能以及处理竞态条件和死锁等潜在问题。",
        "keywords": "Rust, 线程，并发，并行，竞态条件，死锁"
      },
      "details": {
        "steps": [
          {
            "title": "使用线程同时运行代码",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "此步骤目前没有验证",
                "file": "verify1-1.sh",
                "hint": "此步骤目前没有验证"
              }
            ]
          },
          {
            "title": "使用 spawn 创建新线程",
            "text": "zh/step2.md",
            "verify": [
              {
                "name": "此步骤目前没有验证",
                "file": "verify2-1.sh",
                "hint": "此步骤目前没有验证"
              }
            ]
          },
          {
            "title": "使用 join 句柄等待所有线程完成",
            "text": "zh/step3.md",
            "verify": [
              {
                "name": "此步骤目前没有验证",
                "file": "verify3-1.sh",
                "hint": "此步骤目前没有验证"
              }
            ]
          },
          {
            "title": "对线程使用 move 闭包",
            "text": "zh/step4.md",
            "verify": [
              {
                "name": "此步骤目前没有验证",
                "file": "verify4-1.sh",
                "hint": "此步骤目前没有验证"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Usando hilos para ejecutar código simultáneamente",
      "description": "En este laboratorio, exploraremos el concepto de hilos en la programación y cómo se pueden utilizar para ejecutar código simultáneamente, lo que mejora el rendimiento pero agrega complejidad y posibles problemas como condiciones de carrera, bloqueos mortales y errores difíciles de reproducir.",
      "meta": {
        "title": "Hilos de Rust | Concurrencia | Paralelismo",
        "description": "Aprende a usar hilos en Rust para ejecutar código simultáneamente, mejorar el rendimiento y manejar posibles problemas como condiciones de carrera y bloqueos mortales.",
        "keywords": "Rust, Hilos, Concurrencia, Paralelismo, Condiciones de carrera, Bloqueos mortales"
      },
      "details": {
        "steps": [
          {
            "title": "Usando hilos para ejecutar código simultáneamente",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Este paso no tiene verificación en este momento",
                "file": "verify1-1.sh",
                "hint": "Este paso no tiene verificación en este momento"
              }
            ]
          },
          {
            "title": "Creando un nuevo hilo con spawn",
            "text": "es/step2.md",
            "verify": [
              {
                "name": "Este paso no tiene verificación en este momento",
                "file": "verify2-1.sh",
                "hint": "Este paso no tiene verificación en este momento"
              }
            ]
          },
          {
            "title": "Esperando a que todos los hilos terminen usando los manejadores join",
            "text": "es/step3.md",
            "verify": [
              {
                "name": "Este paso no tiene verificación en este momento",
                "file": "verify3-1.sh",
                "hint": "Este paso no tiene verificación en este momento"
              }
            ]
          },
          {
            "title": "Usando closures move con hilos",
            "text": "es/step4.md",
            "verify": [
              {
                "name": "Este paso no tiene verificación en este momento",
                "file": "verify4-1.sh",
                "hint": "Este paso no tiene verificación en este momento"
              }
            ]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Utiliser les threads pour exécuter du code simultanément",
      "description": "Dans ce laboratoire, nous explorerons le concept de threads en programmation et la manière dont ils peuvent être utilisés pour exécuter du code simultanément, améliorant les performances mais ajoutant de la complexité et des problèmes potentiels tels que les conditions de course, les verrous et des bogues difficiles à reproduire.",
      "meta": {
        "title": "Threading Rust | Concurrence | Parallélisme",
        "description": "Découvrez comment utiliser les threads en Rust pour exécuter du code simultanément, améliorer les performances et gérer les problèmes potentiels tels que les conditions de course et les verrous.",
        "keywords": "Rust, Threading, Concurrence, Parallélisme, Conditions de course, Verrous"
      },
      "details": {
        "steps": [
          {
            "title": "Utiliser les threads pour exécuter du code simultanément",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Cette étape n'a pas de vérification pour le moment",
                "file": "verify1-1.sh",
                "hint": "Cette étape n'a pas de vérification pour le moment"
              }
            ]
          },
          {
            "title": "Créer un nouveau thread avec spawn",
            "text": "fr/step2.md",
            "verify": [
              {
                "name": "Cette étape n'a pas de vérification pour le moment",
                "file": "verify2-1.sh",
                "hint": "Cette étape n'a pas de vérification pour le moment"
              }
            ]
          },
          {
            "title": "Attendre que tous les threads se terminent en utilisant les pointeurs de jointure",
            "text": "fr/step3.md",
            "verify": [
              {
                "name": "Cette étape n'a pas de vérification pour le moment",
                "file": "verify3-1.sh",
                "hint": "Cette étape n'a pas de vérification pour le moment"
              }
            ]
          },
          {
            "title": "Utiliser des closures move avec des threads",
            "text": "fr/step4.md",
            "verify": [
              {
                "name": "Cette étape n'a pas de vérification pour le moment",
                "file": "verify4-1.sh",
                "hint": "Cette étape n'a pas de vérification pour le moment"
              }
            ]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Verwenden von Threads, um Code gleichzeitig auszuführen",
      "description": "In diesem Lab werden wir das Konzept von Threads in der Programmierung untersuchen und wie sie verwendet werden können, um Code gleichzeitig auszuführen, was die Leistung verbessert, aber auch Komplexität und potenzielle Probleme wie Wettlaufbedingungen, Deadlocks und schwer zu reproduzierende Fehler hinzufügt.",
      "meta": {
        "title": "Rust Threading | Concurrency | Parallelism",
        "description": "Lernen Sie, wie Sie in Rust Threads verwenden, um Code gleichzeitig auszuführen, die Leistung zu verbessern und potenzielle Probleme wie Wettlaufbedingungen und Deadlocks zu behandeln.",
        "keywords": "Rust, Threading, Concurrency, Parallelism, Race Conditions, Deadlocks"
      },
      "details": {
        "steps": [
          {
            "title": "Verwenden von Threads, um Code gleichzeitig auszuführen",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Dieser Schritt hat momentan keine Verifizierung",
                "file": "verify1-1.sh",
                "hint": "Dieser Schritt hat momentan keine Verifizierung"
              }
            ]
          },
          {
            "title": "Erstellen eines neuen Threads mit spawn",
            "text": "de/step2.md",
            "verify": [
              {
                "name": "Dieser Schritt hat momentan keine Verifizierung",
                "file": "verify2-1.sh",
                "hint": "Dieser Schritt hat momentan keine Verifizierung"
              }
            ]
          },
          {
            "title": "Warten, bis alle Threads mit join-Handles fertig sind",
            "text": "de/step3.md",
            "verify": [
              {
                "name": "Dieser Schritt hat momentan keine Verifizierung",
                "file": "verify3-1.sh",
                "hint": "Dieser Schritt hat momentan keine Verifizierung"
              }
            ]
          },
          {
            "title": "Verwendung von move - Closures mit Threads",
            "text": "de/step4.md",
            "verify": [
              {
                "name": "Dieser Schritt hat momentan keine Verifizierung",
                "file": "verify4-1.sh",
                "hint": "Dieser Schritt hat momentan keine Verifizierung"
              }
            ]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "スレッドを使ってコードを同時実行する",
      "description": "この実験では、プログラミングにおけるスレッドの概念と、コードを同時に実行するためにどのように使用できるかを探ります。これによりパフォーマンスが向上しますが、競合条件、死鎖、再現が困難なバグなど、複雑さと潜在的な問題も追加されます。",
      "meta": {
        "title": "Rust のスレッド処理 | 並列性 | 並列処理",
        "description": "Rust でスレッドを使ってコードを同時に実行し、パフォーマンスを向上させ、競合条件や死鎖などの潜在的な問題を処理する方法を学びましょう。",
        "keywords": "Rust, スレッド処理，並列性，並列処理，競合条件，死鎖"
      },
      "details": {
        "steps": [
          {
            "title": "スレッドを使ってコードを同時実行する",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "このステップでは現在検証はありません",
                "file": "verify1-1.sh",
                "hint": "このステップでは現在検証はありません"
              }
            ]
          },
          {
            "title": "spawn を使って新しいスレッドを作成する",
            "text": "ja/step2.md",
            "verify": [
              {
                "name": "このステップでは現在検証はありません",
                "file": "verify2-1.sh",
                "hint": "このステップでは現在検証はありません"
              }
            ]
          },
          {
            "title": "join ハンドルを使ってすべてのスレッドが終了するのを待つ",
            "text": "ja/step3.md",
            "verify": [
              {
                "name": "このステップでは現在検証はありません",
                "file": "verify3-1.sh",
                "hint": "このステップでは現在検証はありません"
              }
            ]
          },
          {
            "title": "スレッドとともに move クロージャを使用する",
            "text": "ja/step4.md",
            "verify": [
              {
                "name": "このステップでは現在検証はありません",
                "file": "verify4-1.sh",
                "hint": "このステップでは現在検証はありません"
              }
            ]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Использование потоков для параллельного выполнения кода",
      "description": "В этой лабораторной работе мы исследуем концепцию потоков в программировании и то, как их можно использовать для параллельного выполнения кода, улучшая производительность, но добавляя сложность и потенциальные проблемы, такие как гонки данных, deadlock и трудно воспроизводимые ошибки.",
      "meta": {
        "title": "Rust Threading | Concurrency | Parallelism",
        "description": "Изучите, как использовать потоки в Rust для параллельного выполнения кода, улучшения производительности и обработки потенциальных проблем, таких как гонки данных и deadlock.",
        "keywords": "Rust, Threading, Concurrency, Parallelism, Race Conditions, Deadlocks"
      },
      "details": {
        "steps": [
          {
            "title": "Использование потоков для параллельного выполнения кода",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "На данный момент эта стадия не имеет проверки",
                "file": "verify1-1.sh",
                "hint": "На данный момент эта стадия не имеет проверки"
              }
            ]
          },
          {
            "title": "Создание нового потока с помощью spawn",
            "text": "ru/step2.md",
            "verify": [
              {
                "name": "На данный момент эта стадия не имеет проверки",
                "file": "verify2-1.sh",
                "hint": "На данный момент эта стадия не имеет проверки"
              }
            ]
          },
          {
            "title": "Ожидание завершения всех потоков с использованием join - ручек",
            "text": "ru/step3.md",
            "verify": [
              {
                "name": "На данный момент эта стадия не имеет проверки",
                "file": "verify3-1.sh",
                "hint": "На данный момент эта стадия не имеет проверки"
              }
            ]
          },
          {
            "title": "Использование move - замыканий с потоками",
            "text": "ru/step4.md",
            "verify": [
              {
                "name": "На данный момент эта стадия не имеет проверки",
                "file": "verify4-1.sh",
                "hint": "На данный момент эта стадия не имеет проверки"
              }
            ]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    },
    {
      "lang": "ko",
      "title": "스레드를 사용하여 코드 동시 실행하기",
      "description": "이 랩에서는 프로그래밍에서 스레드의 개념과 이를 사용하여 코드를 동시에 실행하는 방법을 살펴봅니다. 이를 통해 성능을 향상시킬 수 있지만, 경쟁 조건 (race condition), 교착 상태 (deadlock), 재현하기 어려운 버그와 같은 복잡성과 잠재적인 문제도 발생할 수 있습니다.",
      "meta": {
        "title": "Rust 스레딩 | 동시성 | 병렬 처리 - Rust 로 코드 성능 향상",
        "description": "Rust 에서 스레드를 사용하여 코드를 동시에 실행하고, 성능을 향상시키며, 경쟁 조건 및 교착 상태와 같은 잠재적인 문제를 처리하는 방법을 알아보세요. Rust 스레딩 튜토리얼.",
        "keywords": "Rust, 스레딩, 동시성, 병렬 처리, 경쟁 조건, 교착 상태, Rust 튜토리얼, Rust 성능"
      },
      "details": {
        "steps": [
          {
            "title": "스레드를 사용하여 코드 동시 실행하기",
            "text": "ko/step1.md",
            "verify": [
              {
                "name": "현재 이 단계에는 검증이 없습니다.",
                "file": "verify1-1.sh",
                "hint": "현재 이 단계에는 검증이 없습니다."
              }
            ]
          },
          {
            "title": "spawn 을 사용하여 새로운 스레드 생성하기",
            "text": "ko/step2.md",
            "verify": [
              {
                "name": "현재 이 단계에는 검증이 없습니다.",
                "file": "verify2-1.sh",
                "hint": "현재 이 단계에는 검증이 없습니다."
              }
            ]
          },
          {
            "title": "join 핸들을 사용하여 모든 스레드가 완료될 때까지 기다리기",
            "text": "ko/step3.md",
            "verify": [
              {
                "name": "현재 이 단계에는 검증이 없습니다.",
                "file": "verify3-1.sh",
                "hint": "현재 이 단계에는 검증이 없습니다."
              }
            ]
          },
          {
            "title": "스레드와 함께 move 클로저 사용하기",
            "text": "ko/step4.md",
            "verify": [
              {
                "name": "현재 이 단계에는 검증이 없습니다.",
                "file": "verify4-1.sh",
                "hint": "현재 이 단계에는 검증이 없습니다."
              }
            ]
          }
        ],
        "intro": {
          "text": "ko/intro.md",
          "title": "소개"
        },
        "finish": {
          "text": "ko/finish.md",
          "title": "요약"
        }
      }
    },
    {
      "lang": "pt",
      "title": "Usando Threads para Executar Código Simultaneamente",
      "description": "Neste laboratório, exploraremos o conceito de threads em programação e como elas podem ser usadas para executar código simultaneamente, melhorando o desempenho, mas adicionando complexidade e possíveis problemas, como condições de corrida (race conditions), deadlocks e bugs difíceis de reproduzir.",
      "meta": {
        "title": "Threads Rust | Concorrência | Paralelismo",
        "description": "Aprenda como usar threads em Rust para executar código simultaneamente, melhorar o desempenho e lidar com possíveis problemas como condições de corrida e deadlocks.",
        "keywords": "Rust, Threads, Concorrência, Paralelismo, Condições de Corrida, Deadlocks"
      },
      "details": {
        "steps": [
          {
            "title": "Usando Threads para Executar Código Simultaneamente",
            "text": "pt/step1.md",
            "verify": [
              {
                "name": "Este passo não possui verificação no momento",
                "file": "verify1-1.sh",
                "hint": "Este passo não possui verificação no momento"
              }
            ]
          },
          {
            "title": "Criando uma Nova Thread com spawn",
            "text": "pt/step2.md",
            "verify": [
              {
                "name": "Este passo não possui verificação no momento",
                "file": "verify2-1.sh",
                "hint": "Este passo não possui verificação no momento"
              }
            ]
          },
          {
            "title": "Aguardando a Conclusão de Todas as Threads Usando Join Handles",
            "text": "pt/step3.md",
            "verify": [
              {
                "name": "Este passo não possui verificação no momento",
                "file": "verify3-1.sh",
                "hint": "Este passo não possui verificação no momento"
              }
            ]
          },
          {
            "title": "Usando Closures move com Threads",
            "text": "pt/step4.md",
            "verify": [
              {
                "name": "Este passo não possui verificação no momento",
                "file": "verify4-1.sh",
                "hint": "Este passo não possui verificação no momento"
              }
            ]
          }
        ],
        "intro": {
          "text": "pt/intro.md",
          "title": "Introdução"
        },
        "finish": {
          "text": "pt/finish.md",
          "title": "Resumo"
        }
      }
    }
  ]
}
