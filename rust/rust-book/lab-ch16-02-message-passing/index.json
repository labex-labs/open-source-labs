{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Concurrent Data Transfer with Rust Channels",
  "description": "In this lab, we explore message passing as a safe concurrency approach, using channels in Rust's standard library to send and receive data between threads.",
  "meta": {
    "title": "Using Message Passing to Transfer Data Between Threads | Rust Programming",
    "description": "Learn how to use message passing and channels in Rust to safely transfer data between threads in this Rust programming tutorial.",
    "keywords": "Rust, Concurrency, Message Passing, Channels, Multithreading, Data Transfer"
  },
  "difficulty": "Beginner",
  "time": 20,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Using Message Passing to Transfer Data Between Threads",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "This step has no verification at the moment",
            "file": "verify1-1.sh",
            "hint": "This step has no verification at the moment",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "rust/expressions_statements",
          "rust/function_syntax",
          "rust/message_passing",
          "rust/method_syntax",
          "rust/string_type",
          "rust/variable_declarations"
        ]
      },
      {
        "title": "Channels and Ownership Transference",
        "text": "en/step2.md",
        "verify": [
          {
            "name": "This step has no verification at the moment",
            "file": "verify2-1.sh",
            "hint": "This step has no verification at the moment",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "rust/expressions_statements",
          "rust/function_syntax",
          "rust/message_passing",
          "rust/method_syntax",
          "rust/string_type",
          "rust/variable_declarations"
        ]
      },
      {
        "title": "Sending Multiple Values and Seeing the Receiver Waiting",
        "text": "en/step3.md",
        "verify": [
          {
            "name": "This step has no verification at the moment",
            "file": "verify3-1.sh",
            "hint": "This step has no verification at the moment",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "rust/expressions_statements",
          "rust/for_loop",
          "rust/function_syntax",
          "rust/message_passing",
          "rust/method_syntax",
          "rust/string_type",
          "rust/variable_declarations"
        ]
      },
      {
        "title": "Creating Multiple Producers by Cloning the Transmitter",
        "text": "en/step4.md",
        "verify": [
          {
            "name": "This step has no verification at the moment",
            "file": "verify4-1.sh",
            "hint": "This step has no verification at the moment",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "rust/expressions_statements",
          "rust/for_loop",
          "rust/message_passing",
          "rust/method_syntax",
          "rust/string_type",
          "rust/variable_declarations"
        ]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": [],
  "license": {
    "name": "MIT",
    "url": "https://github.com/rust-lang/book/blob/master/LICENSE-MIT",
    "repo": "https://github.com/rust-lang/book"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "使用 Rust 通道进行并发数据传输",
      "description": "在本实验中，我们探索消息传递作为一种安全的并发方法，使用 Rust 标准库中的通道在线程之间发送和接收数据。",
      "meta": {
        "title": "使用消息传递在线程间传输数据 | Rust 编程",
        "description": "在本 Rust 编程教程中，学习如何使用 Rust 中的消息传递和通道在线程之间安全地传输数据。",
        "keywords": "Rust, 并发, 消息传递, 通道, 多线程, 数据传输"
      },
      "details": {
        "steps": [
          {
            "title": "使用消息传递在线程间传输数据",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "此步骤目前没有验证",
                "file": "verify1-1.sh",
                "hint": "此步骤目前没有验证"
              }
            ]
          },
          {
            "title": "通道与所有权转移",
            "text": "zh/step2.md",
            "verify": [
              {
                "name": "此步骤目前没有验证",
                "file": "verify2-1.sh",
                "hint": "此步骤目前没有验证"
              }
            ]
          },
          {
            "title": "发送多个值并观察接收者等待",
            "text": "zh/step3.md",
            "verify": [
              {
                "name": "此步骤目前没有验证",
                "file": "verify3-1.sh",
                "hint": "此步骤目前没有验证"
              }
            ]
          },
          {
            "title": "通过克隆发送端创建多个生产者",
            "text": "zh/step4.md",
            "verify": [
              {
                "name": "此步骤目前没有验证",
                "file": "verify4-1.sh",
                "hint": "此步骤目前没有验证"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Transferencia de datos concurrente con canales de Rust",
      "description": "En este laboratorio, exploramos el paso de mensajes como un enfoque de concurrencia seguro, utilizando canales de la biblioteca estándar de Rust para enviar y recibir datos entre hilos.",
      "meta": {
        "title": "Uso del paso de mensajes para transferir datos entre hilos | Programación Rust",
        "description": "Aprende cómo usar el paso de mensajes y canales en Rust para transferir datos entre hilos de manera segura en este tutorial de programación Rust.",
        "keywords": "Rust, Concurrencia, Paso de mensajes, Canales, Multihilo, Transferencia de datos"
      },
      "details": {
        "steps": [
          {
            "title": "Uso del paso de mensajes para transferir datos entre hilos",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Este paso no tiene verificación en este momento",
                "file": "verify1-1.sh",
                "hint": "Este paso no tiene verificación en este momento"
              }
            ]
          },
          {
            "title": "Canales y transferencia de propiedad",
            "text": "es/step2.md",
            "verify": [
              {
                "name": "Este paso no tiene verificación en este momento",
                "file": "verify2-1.sh",
                "hint": "Este paso no tiene verificación en este momento"
              }
            ]
          },
          {
            "title": "Envío de múltiples valores y observación del receptor esperando",
            "text": "es/step3.md",
            "verify": [
              {
                "name": "Este paso no tiene verificación en este momento",
                "file": "verify3-1.sh",
                "hint": "Este paso no tiene verificación en este momento"
              }
            ]
          },
          {
            "title": "Creación de múltiples productores mediante la clonación del transmisor",
            "text": "es/step4.md",
            "verify": [
              {
                "name": "Este paso no tiene verificación en este momento",
                "file": "verify4-1.sh",
                "hint": "Este paso no tiene verificación en este momento"
              }
            ]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Transfert de données concurrentes avec les canaux Rust",
      "description": "Dans ce laboratoire, nous explorons la communication par messages comme une approche de concurrence sécurisée, en utilisant les canaux de la bibliothèque standard de Rust pour envoyer et recevoir des données entre des threads.",
      "meta": {
        "title": "Utiliser la communication par messages pour transférer des données entre des threads | Programmation Rust",
        "description": "Découvrez comment utiliser la communication par messages et les canaux en Rust pour transférer des données entre des threads de manière sécurisée dans ce tutoriel de programmation Rust.",
        "keywords": "Rust, Concurrence, Communication par messages, Canaux, Multithreading, Transfert de données"
      },
      "details": {
        "steps": [
          {
            "title": "Utiliser la communication par messages pour transférer des données entre des threads",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Cette étape n'a pas de vérification pour le moment",
                "file": "verify1-1.sh",
                "hint": "Cette étape n'a pas de vérification pour le moment"
              }
            ]
          },
          {
            "title": "Canaux et transfert de propriété",
            "text": "fr/step2.md",
            "verify": [
              {
                "name": "Cette étape n'a pas de vérification pour le moment",
                "file": "verify2-1.sh",
                "hint": "Cette étape n'a pas de vérification pour le moment"
              }
            ]
          },
          {
            "title": "Envoyer plusieurs valeurs et voir le récepteur en attente",
            "text": "fr/step3.md",
            "verify": [
              {
                "name": "Cette étape n'a pas de vérification pour le moment",
                "file": "verify3-1.sh",
                "hint": "Cette étape n'a pas de vérification pour le moment"
              }
            ]
          },
          {
            "title": "Création de plusieurs producteurs en clonant l'émetteur",
            "text": "fr/step4.md",
            "verify": [
              {
                "name": "Cette étape n'a pas de vérification pour le moment",
                "file": "verify4-1.sh",
                "hint": "Cette étape n'a pas de vérification pour le moment"
              }
            ]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Gleichzeitige Datenübertragung mit Rust-Kanälen",
      "description": "In diesem Lab untersuchen wir die Nachrichtenübertragung als sicheres Konkurrenzanwendungsverfahren und verwenden Kanäle aus der Standardbibliothek von Rust, um Daten zwischen Threads zu senden und zu empfangen.",
      "meta": {
        "title": "Verwenden von Nachrichtenübertragung zum Übertragen von Daten zwischen Threads | Rust-Programmierung",
        "description": "Lernen Sie in diesem Rust-Programmier-Tutorial, wie Sie in Rust Nachrichtenübertragung und Kanäle verwenden, um Daten sicher zwischen Threads zu übertragen.",
        "keywords": "Rust, Konkurrenz, Nachrichtenübertragung, Kanäle, Mehrfachthreading, Datenübertragung"
      },
      "details": {
        "steps": [
          {
            "title": "Verwenden von Nachrichtenübertragung zum Übertragen von Daten zwischen Threads",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Dieser Schritt hat momentan keine Verifizierung",
                "file": "verify1-1.sh",
                "hint": "Dieser Schritt hat momentan keine Verifizierung"
              }
            ]
          },
          {
            "title": "Kanäle und Eigentumsübertragung",
            "text": "de/step2.md",
            "verify": [
              {
                "name": "Dieser Schritt hat momentan keine Verifizierung",
                "file": "verify2-1.sh",
                "hint": "Dieser Schritt hat momentan keine Verifizierung"
              }
            ]
          },
          {
            "title": "Senden mehrerer Werte und Beobachten, wie der Empfänger wartet",
            "text": "de/step3.md",
            "verify": [
              {
                "name": "Dieser Schritt hat momentan keine Verifizierung",
                "file": "verify3-1.sh",
                "hint": "Dieser Schritt hat momentan keine Verifizierung"
              }
            ]
          },
          {
            "title": "Erstellen mehrerer Producer durch Klonen des Senders",
            "text": "de/step4.md",
            "verify": [
              {
                "name": "Dieser Schritt hat momentan keine Verifizierung",
                "file": "verify4-1.sh",
                "hint": "Dieser Schritt hat momentan keine Verifizierung"
              }
            ]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "Rustのチャネルを使った並列データ転送",
      "description": "この実験では、Rustの標準ライブラリにあるチャネルを使ってスレッド間でデータを送受信することで、安全な並列処理手法としてのメッセージパッシングを検討します。",
      "meta": {
        "title": "メッセージパッシングを使ってスレッド間でデータを転送する | Rustプログラミング",
        "description": "このRustプログラミングチュートリアルでは、Rustでメッセージパッシングとチャネルを使ってスレッド間で安全にデータを転送する方法を学びます。",
        "keywords": "Rust, 並列処理, メッセージパッシング, チャネル, マルチスレッド, データ転送"
      },
      "details": {
        "steps": [
          {
            "title": "メッセージパッシングを使ってスレッド間でデータを転送する",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "このステップでは現在検証はありません",
                "file": "verify1-1.sh",
                "hint": "このステップでは現在検証はありません"
              }
            ]
          },
          {
            "title": "チャネルと所有権の移転",
            "text": "ja/step2.md",
            "verify": [
              {
                "name": "このステップでは現在検証はありません",
                "file": "verify2-1.sh",
                "hint": "このステップでは現在検証はありません"
              }
            ]
          },
          {
            "title": "複数の値を送信して受信側が待機する様子を見る",
            "text": "ja/step3.md",
            "verify": [
              {
                "name": "このステップでは現在検証はありません",
                "file": "verify3-1.sh",
                "hint": "このステップでは現在検証はありません"
              }
            ]
          },
          {
            "title": "送信機をクローン化して複数のプロデューサを作成する",
            "text": "ja/step4.md",
            "verify": [
              {
                "name": "このステップでは現在検証はありません",
                "file": "verify4-1.sh",
                "hint": "このステップでは現在検証はありません"
              }
            ]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Передача данных в параллельном режиме с использованием каналов Rust",
      "description": "В этой лабораторной работе мы исследуем передачу сообщений как безопасный подход к параллелизации, используя каналы из стандартной библиотеки Rust для отправки и приема данных между потоками.",
      "meta": {
        "title": "Использование передачи сообщений для передачи данных между потоками | Программирование на Rust",
        "description": "Изучите, как использовать передачу сообщений и каналы в Rust для безопасной передачи данных между потоками в этом руководстве по программированию на Rust.",
        "keywords": "Rust, Параллелизация, Передача сообщений, Каналы, Многопоточность, Передача данных"
      },
      "details": {
        "steps": [
          {
            "title": "Использование передачи сообщений для передачи данных между потоками",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "В настоящий момент эта стадия не имеет проверки",
                "file": "verify1-1.sh",
                "hint": "В настоящий момент эта стадия не имеет проверки"
              }
            ]
          },
          {
            "title": "Каналы и передача владения",
            "text": "ru/step2.md",
            "verify": [
              {
                "name": "В настоящий момент эта стадия не имеет проверки",
                "file": "verify2-1.sh",
                "hint": "В настоящий момент эта стадия не имеет проверки"
              }
            ]
          },
          {
            "title": "Отправка нескольких значений и наблюдение за ожиданием получателя",
            "text": "ru/step3.md",
            "verify": [
              {
                "name": "В настоящий момент эта стадия не имеет проверки",
                "file": "verify3-1.sh",
                "hint": "В настоящий момент эта стадия не имеет проверки"
              }
            ]
          },
          {
            "title": "Создание нескольких производителей путём клонирования отправителя",
            "text": "ru/step4.md",
            "verify": [
              {
                "name": "На данный момент эта стадия не имеет проверки",
                "file": "verify4-1.sh",
                "hint": "На данный момент эта стадия не имеет проверки"
              }
            ]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    }
  ]
}
