{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Rust Error Messages to Standard Error",
  "description": "In this lab, we need to modify our code so that error messages are written to standard error (stderr) instead of standard output (stdout).",
  "meta": {
    "title": "Writing Error Messages to Standard Error | Rust Programming",
    "description": "Learn how to modify your Rust code to write error messages to standard error instead of standard output, a crucial skill for developing robust applications.",
    "keywords": "Rust, error handling, standard error, standard output, programming, coding, lab exercise"
  },
  "difficulty": "Beginner",
  "time": 15,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Writing Error Messages to Standard Error Instead of Standard Output",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "This step has no verification at the moment",
            "file": "verify1-1.sh",
            "hint": "This step has no verification at the moment",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": []
      },
      {
        "title": "Checking Where Errors Are Written",
        "text": "en/step2.md",
        "verify": [
          {
            "name": "This step has no verification at the moment",
            "file": "verify2-1.sh",
            "hint": "This step has no verification at the moment",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": []
      },
      {
        "title": "Printing Errors to Standard Error",
        "text": "en/step3.md",
        "verify": [
          {
            "name": "This step has no verification at the moment",
            "file": "verify3-1.sh",
            "hint": "This step has no verification at the moment",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": []
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": [],
  "license": {
    "name": "MIT",
    "url": "https://github.com/rust-lang/book/blob/master/LICENSE-MIT",
    "repo": "https://github.com/rust-lang/book"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "将 Rust 错误信息输出到标准错误",
      "description": "在本实验中，我们需要修改代码，以便将错误信息写入标准错误（stderr）而非标准输出（stdout）。",
      "meta": {
        "title": "将错误信息写入标准错误 | Rust 编程",
        "description": "学习如何修改 Rust 代码，将错误信息写入标准错误而非标准输出，这是开发健壮应用程序的关键技能。",
        "keywords": "Rust, 错误处理，标准错误，标准输出，编程，编码，实验练习"
      },
      "details": {
        "steps": [
          {
            "title": "将错误信息写入标准错误而非标准输出",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "此步骤目前没有验证",
                "file": "verify1-1.sh",
                "hint": "此步骤目前没有验证"
              }
            ]
          },
          {
            "title": "检查错误输出位置",
            "text": "zh/step2.md",
            "verify": [
              {
                "name": "此步骤目前没有验证",
                "file": "verify2-1.sh",
                "hint": "此步骤目前没有验证"
              }
            ]
          },
          {
            "title": "将错误打印到标准错误",
            "text": "zh/step3.md",
            "verify": [
              {
                "name": "此步骤目前没有验证",
                "file": "verify3-1.sh",
                "hint": "此步骤目前没有验证"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Mensajes de error de Rust al error estándar",
      "description": "En esta práctica, necesitamos modificar nuestro código para que los mensajes de error se escriban en el error estándar (stderr) en lugar de la salida estándar (stdout).",
      "meta": {
        "title": "Escribir mensajes de error al error estándar | Programación Rust",
        "description": "Aprende cómo modificar tu código Rust para escribir mensajes de error en el error estándar en lugar de la salida estándar, una habilidad crucial para desarrollar aplicaciones robustas.",
        "keywords": "Rust, manejo de errores, error estándar, salida estándar, programación, codificación, ejercicio de práctica"
      },
      "details": {
        "steps": [
          {
            "title": "Escribir mensajes de error en el error estándar en lugar de la salida estándar",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Este paso no tiene verificación en este momento",
                "file": "verify1-1.sh",
                "hint": "Este paso no tiene verificación en este momento"
              }
            ]
          },
          {
            "title": "Verificando dónde se escriben los errores",
            "text": "es/step2.md",
            "verify": [
              {
                "name": "Este paso no tiene verificación en este momento",
                "file": "verify2-1.sh",
                "hint": "Este paso no tiene verificación en este momento"
              }
            ]
          },
          {
            "title": "Imprimiendo errores en el error estándar",
            "text": "es/step3.md",
            "verify": [
              {
                "name": "Este paso no tiene verificación en este momento",
                "file": "verify3-1.sh",
                "hint": "Este paso no tiene verificación en este momento"
              }
            ]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Messages d'erreur Rust sur la sortie d'erreur standard",
      "description": "Dans ce laboratoire, nous devons modifier notre code pour que les messages d'erreur soient écrits sur la sortie d'erreur standard (stderr) au lieu de la sortie standard (stdout).",
      "meta": {
        "title": "Écrire des messages d'erreur sur la sortie d'erreur standard | Programmation Rust",
        "description": "Découvrez comment modifier votre code Rust pour écrire des messages d'erreur sur la sortie d'erreur standard au lieu de la sortie standard, une compétence cruciale pour développer des applications robustes.",
        "keywords": "Rust, gestion d'erreurs, sortie d'erreur standard, sortie standard, programmation, codage, exercice de laboratoire"
      },
      "details": {
        "steps": [
          {
            "title": "Écrire des messages d'erreur sur la sortie d'erreur standard au lieu de la sortie standard",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Cette étape n'a pas de vérification pour le moment",
                "file": "verify1-1.sh",
                "hint": "Cette étape n'a pas de vérification pour le moment"
              }
            ]
          },
          {
            "title": "Vérifier où les erreurs sont écrites",
            "text": "fr/step2.md",
            "verify": [
              {
                "name": "Cette étape n'a pas de vérification pour le moment",
                "file": "verify2-1.sh",
                "hint": "Cette étape n'a pas de vérification pour le moment"
              }
            ]
          },
          {
            "title": "Afficher les erreurs sur la sortie d'erreur standard",
            "text": "fr/step3.md",
            "verify": [
              {
                "name": "Cette étape n'a pas de vérification pour le moment",
                "file": "verify3-1.sh",
                "hint": "Cette étape n'a pas de vérification pour le moment"
              }
            ]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Rust-Fehlermeldungen an die Standardfehlerausgabe",
      "description": "In diesem Lab müssen wir unseren Code so ändern, dass Fehlermeldungen an die Standardfehlerausgabe (stderr) statt an die Standardausgabe (stdout) geschrieben werden.",
      "meta": {
        "title": "Fehlermeldungen an die Standardfehlerausgabe | Rust-Programmierung",
        "description": "Lernen Sie, wie Sie Ihren Rust-Code ändern, um Fehlermeldungen an die Standardfehlerausgabe statt an die Standardausgabe zu schreiben, eine entscheidende Fähigkeit für die Entwicklung robuster Anwendungen.",
        "keywords": "Rust, Fehlerbehandlung, Standardfehlerausgabe, Standardausgabe, Programmierung, Codierung, Labübung"
      },
      "details": {
        "steps": [
          {
            "title": "Fehlermeldungen an die Standardfehlerausgabe statt an die Standardausgabe schreiben",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Dieser Schritt hat momentan keine Verifikation",
                "file": "verify1-1.sh",
                "hint": "Dieser Schritt hat momentan keine Verifikation"
              }
            ]
          },
          {
            "title": "Prüfen, wo Fehler geschrieben werden",
            "text": "de/step2.md",
            "verify": [
              {
                "name": "Dieser Schritt hat momentan keine Verifikation",
                "file": "verify2-1.sh",
                "hint": "Dieser Schritt hat momentan keine Verifikation"
              }
            ]
          },
          {
            "title": "Fehler an die Standardfehlerausgabe ausgeben",
            "text": "de/step3.md",
            "verify": [
              {
                "name": "Dieser Schritt hat momentan keine Verifikation",
                "file": "verify3-1.sh",
                "hint": "Dieser Schritt hat momentan keine Verifikation"
              }
            ]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "Rust のエラーメッセージを標準エラーに",
      "description": "この実験では、エラーメッセージが標準出力（stdout）ではなく標準エラー（stderr）に書き込まれるようにコードを修正する必要があります。",
      "meta": {
        "title": "標準エラーにエラーメッセージを書き込む | Rust プログラミング",
        "description": "Rust のコードを修正して、標準出力ではなく標準エラーにエラーメッセージを書き込む方法を学びましょう。これは、堅牢なアプリケーションを開発するための重要なスキルです。",
        "keywords": "Rust, エラーハンドリング，標準エラー, 標準出力，プログラミング，コーディング，実験演習"
      },
      "details": {
        "steps": [
          {
            "title": "標準出力ではなく標準エラーにエラーメッセージを書き込む",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "このステップでは現在検証はありません",
                "file": "verify1-1.sh",
                "hint": "このステップでは現在検証はありません"
              }
            ]
          },
          {
            "title": "エラーが書き込まれる場所を確認する",
            "text": "ja/step2.md",
            "verify": [
              {
                "name": "このステップでは現在検証はありません",
                "file": "verify2-1.sh",
                "hint": "このステップでは現在検証はありません"
              }
            ]
          },
          {
            "title": "標準エラーにエラーを出力する",
            "text": "ja/step3.md",
            "verify": [
              {
                "name": "このステップでは現在検証はありません",
                "file": "verify3-1.sh",
                "hint": "このステップでは現在検証はありません"
              }
            ]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Сообщения об ошибках Rust в стандартный вывод ошибок",
      "description": "В этой лабораторной работе нам нужно изменить наш код так, чтобы сообщения об ошибках записывались в стандартный вывод ошибок (stderr), а не в стандартный вывод (stdout).",
      "meta": {
        "title": "Запись сообщений об ошибках в стандартный вывод ошибок | Программирование на Rust",
        "description": "Изучите, как изменить свой код на Rust для записи сообщений об ошибках в стандартный вывод ошибок вместо стандартного вывода, важный навык для разработки надежных приложений.",
        "keywords": "Rust, обработка ошибок, стандартный вывод ошибок, стандартный вывод, программирование, кодирование, лабораторная работа"
      },
      "details": {
        "steps": [
          {
            "title": "Запись сообщений об ошибках в стандартный вывод ошибок вместо стандартного вывода",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "На данный момент эта стадия не имеет проверки",
                "file": "verify1-1.sh",
                "hint": "На данный момент эта стадия не имеет проверки"
              }
            ]
          },
          {
            "title": "Проверка места записи ошибок",
            "text": "ru/step2.md",
            "verify": [
              {
                "name": "На данный момент эта стадия не имеет проверки",
                "file": "verify2-1.sh",
                "hint": "На данный момент эта стадия не имеет проверки"
              }
            ]
          },
          {
            "title": "Вывод ошибок в стандартный вывод ошибок",
            "text": "ru/step3.md",
            "verify": [
              {
                "name": "На данный момент эта стадия не имеет проверки",
                "file": "verify3-1.sh",
                "hint": "На данный момент эта стадия не имеет проверки"
              }
            ]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    },
    {
      "lang": "ko",
      "title": "Rust 오류 메시지를 표준 오류로 출력하기",
      "description": "이 랩에서는 오류 메시지가 표준 출력 (stdout) 대신 표준 오류 (stderr) 로 기록되도록 코드를 수정해야 합니다.",
      "meta": {
        "title": "Rust: 오류 메시지를 표준 오류로 출력하는 방법 | Rust 프로그래밍",
        "description": "견고한 애플리케이션 개발에 필수적인 기술인, Rust 코드를 수정하여 오류 메시지를 표준 출력 대신 표준 오류로 출력하는 방법을 알아보세요.",
        "keywords": "Rust, 오류 처리, 표준 오류, 표준 출력, 프로그래밍, 코딩, 랩 연습, Rust 오류, Rust 에러, Rust 에러 처리, Rust 표준 오류"
      },
      "details": {
        "steps": [
          {
            "title": "표준 출력 대신 표준 오류에 오류 메시지 쓰기",
            "text": "ko/step1.md",
            "verify": [
              {
                "name": "현재 이 단계에는 검증이 없습니다.",
                "file": "verify1-1.sh",
                "hint": "현재 이 단계에는 검증이 없습니다."
              }
            ]
          },
          {
            "title": "오류가 어디에 기록되는지 확인하기",
            "text": "ko/step2.md",
            "verify": [
              {
                "name": "현재 이 단계에는 검증이 없습니다.",
                "file": "verify2-1.sh",
                "hint": "현재 이 단계에는 검증이 없습니다."
              }
            ]
          },
          {
            "title": "표준 오류로 오류 출력하기",
            "text": "ko/step3.md",
            "verify": [
              {
                "name": "현재 이 단계에는 검증이 없습니다.",
                "file": "verify3-1.sh",
                "hint": "현재 이 단계에는 검증이 없습니다."
              }
            ]
          }
        ],
        "intro": {
          "text": "ko/intro.md",
          "title": "소개"
        },
        "finish": {
          "text": "ko/finish.md",
          "title": "요약"
        }
      }
    },
    {
      "lang": "pt",
      "title": "Mensagens de Erro Rust para Saída de Erro Padrão",
      "description": "Neste laboratório, precisamos modificar nosso código para que as mensagens de erro sejam escritas na saída de erro padrão (stderr) em vez da saída padrão (stdout).",
      "meta": {
        "title": "Escrevendo Mensagens de Erro na Saída de Erro Padrão | Programação Rust",
        "description": "Aprenda como modificar seu código Rust para escrever mensagens de erro na saída de erro padrão em vez da saída padrão, uma habilidade crucial para o desenvolvimento de aplicações robustas.",
        "keywords": "Rust, tratamento de erros, saída de erro padrão, saída padrão, programação, codificação, exercício de laboratório, erros em Rust, stderr, stdout"
      },
      "details": {
        "steps": [
          {
            "title": "Escrevendo Mensagens de Erro na Saída de Erro Padrão em Vez da Saída Padrão",
            "text": "pt/step1.md",
            "verify": [
              {
                "name": "Este passo não possui verificação no momento",
                "file": "verify1-1.sh",
                "hint": "Este passo não possui verificação no momento"
              }
            ]
          },
          {
            "title": "Verificando Onde os Erros São Escritos",
            "text": "pt/step2.md",
            "verify": [
              {
                "name": "Este passo não possui verificação no momento",
                "file": "verify2-1.sh",
                "hint": "Este passo não possui verificação no momento"
              }
            ]
          },
          {
            "title": "Imprimindo Erros na Saída de Erro Padrão",
            "text": "pt/step3.md",
            "verify": [
              {
                "name": "Este passo não possui verificação no momento",
                "file": "verify3-1.sh",
                "hint": "Este passo não possui verificação no momento"
              }
            ]
          }
        ],
        "intro": {
          "text": "pt/intro.md",
          "title": "Introdução"
        },
        "finish": {
          "text": "pt/finish.md",
          "title": "Resumo"
        }
      }
    }
  ]
}
