{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Treating Smart Pointers Like Regular References",
  "description": "In this lab, we will explore how implementing the Deref trait allows smart pointers to be treated like regular references and how Rust's deref coercion feature enables working with either references or smart pointers.",
  "meta": {
    "title": "Rust Smart Pointers | Deref Trait | Reference Handling",
    "description": "Learn how to implement the Deref trait to treat smart pointers like regular references in Rust. Explore Rust's deref coercion feature for seamless reference and smart pointer usage.",
    "keywords": "Rust, Smart Pointers, Deref Trait, Reference Handling, Deref Coercion"
  },
  "difficulty": "Beginner",
  "time": 35,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Treating Smart Pointers Like Regular References with Deref",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "This step has no verification at the moment",
            "file": "verify1-1.sh",
            "hint": "This step has no verification at the moment",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": []
      },
      {
        "title": "Following the Pointer to the Value",
        "text": "en/step2.md",
        "verify": [
          {
            "name": "This step has no verification at the moment",
            "file": "verify2-1.sh",
            "hint": "This step has no verification at the moment",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": []
      },
      {
        "title": "Using Box<T> Like a Reference",
        "text": "en/step3.md",
        "verify": [
          {
            "name": "This step has no verification at the moment",
            "file": "verify3-1.sh",
            "hint": "This step has no verification at the moment",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": []
      },
      {
        "title": "Defining Our Own Smart Pointer",
        "text": "en/step4.md",
        "verify": [
          {
            "name": "This step has no verification at the moment",
            "file": "verify4-1.sh",
            "hint": "This step has no verification at the moment",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": []
      },
      {
        "title": "Implementing the Deref Trait",
        "text": "en/step5.md",
        "verify": [
          {
            "name": "This step has no verification at the moment",
            "file": "verify5-1.sh",
            "hint": "This step has no verification at the moment",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": []
      },
      {
        "title": "Implicit Deref Coercions with Functions and Methods",
        "text": "en/step6.md",
        "verify": [
          {
            "name": "This step has no verification at the moment",
            "file": "verify6-1.sh",
            "hint": "This step has no verification at the moment",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": []
      },
      {
        "title": "How Deref Coercion Interacts with Mutability",
        "text": "en/step7.md",
        "verify": [
          {
            "name": "This step has no verification at the moment",
            "file": "verify7-1.sh",
            "hint": "This step has no verification at the moment",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": []
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": [],
  "license": {
    "name": "MIT",
    "url": "https://github.com/rust-lang/book/blob/master/LICENSE-MIT",
    "repo": "https://github.com/rust-lang/book"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "像对待普通引用一样处理智能指针",
      "description": "在本实验中，我们将探索如何通过实现 Deref 特性使智能指针能够像普通引用一样被处理，以及 Rust 的解引用强制转换特性如何实现对引用或智能指针的灵活运用。",
      "meta": {
        "title": "Rust 智能指针 | Deref 特性 | 引用处理",
        "description": "学习如何在 Rust 中实现 Deref 特性，以便像对待普通引用一样处理智能指针。探索 Rust 的解引用强制转换特性，实现引用和智能指针的无缝使用。",
        "keywords": "Rust, 智能指针，Deref 特性，引用处理，解引用强制转换"
      },
      "details": {
        "steps": [
          {
            "title": "使用 Deref 像对待普通引用一样处理智能指针",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "此步骤目前没有验证",
                "file": "verify1-1.sh",
                "hint": "此步骤目前没有验证"
              }
            ]
          },
          {
            "title": "跟随指针找到值",
            "text": "zh/step2.md",
            "verify": [
              {
                "name": "此步骤目前没有验证",
                "file": "verify2-1.sh",
                "hint": "此步骤目前没有验证"
              }
            ]
          },
          {
            "title": "像使用引用一样使用 Box<T>",
            "text": "zh/step3.md",
            "verify": [
              {
                "name": "此步骤目前没有验证",
                "file": "verify3-1.sh",
                "hint": "此步骤目前没有验证"
              }
            ]
          },
          {
            "title": "定义我们自己的智能指针",
            "text": "zh/step4.md",
            "verify": [
              {
                "name": "此步骤目前没有验证",
                "file": "verify4-1.sh",
                "hint": "此步骤目前没有验证"
              }
            ]
          },
          {
            "title": "实现 Deref 特性",
            "text": "zh/step5.md",
            "verify": [
              {
                "name": "此步骤目前没有验证",
                "file": "verify5-1.sh",
                "hint": "此步骤目前没有验证"
              }
            ]
          },
          {
            "title": "函数和方法中的隐式解引用强制转换",
            "text": "zh/step6.md",
            "verify": [
              {
                "name": "此步骤目前没有验证",
                "file": "verify6-1.sh",
                "hint": "此步骤目前没有验证"
              }
            ]
          },
          {
            "title": "解引用强制转换如何与可变性交互",
            "text": "zh/step7.md",
            "verify": [
              {
                "name": "此步骤目前没有验证",
                "file": "verify7-1.sh",
                "hint": "此步骤目前没有验证"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Tratar Punteros Inteligentes Como Referencias Regulares",
      "description": "En este laboratorio, exploraremos cómo implementar el trato Deref permite tratar punteros inteligentes como referencias regulares y cómo la característica de coerción de Deref de Rust permite trabajar con referencias o punteros inteligentes.",
      "meta": {
        "title": "Punteros Inteligentes de Rust | Trato Deref | Manejo de Referencias",
        "description": "Aprende cómo implementar el trato Deref para tratar punteros inteligentes como referencias regulares en Rust. Explora la característica de coerción de Deref de Rust para un uso sin problemas de referencias y punteros inteligentes.",
        "keywords": "Rust, Punteros Inteligentes, Trato Deref, Manejo de Referencias, Coerción de Deref"
      },
      "details": {
        "steps": [
          {
            "title": "Tratar Punteros Inteligentes Como Referencias Regulares con Deref",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Este paso no tiene verificación en este momento",
                "file": "verify1-1.sh",
                "hint": "Este paso no tiene verificación en este momento"
              }
            ]
          },
          {
            "title": "Seguir el Puntero Hasta el Valor",
            "text": "es/step2.md",
            "verify": [
              {
                "name": "Este paso no tiene verificación en este momento",
                "file": "verify2-1.sh",
                "hint": "Este paso no tiene verificación en este momento"
              }
            ]
          },
          {
            "title": "Usar Box<T> Como una Referencia",
            "text": "es/step3.md",
            "verify": [
              {
                "name": "Este paso no tiene verificación en este momento",
                "file": "verify3-1.sh",
                "hint": "Este paso no tiene verificación en este momento"
              }
            ]
          },
          {
            "title": "Definiendo Nuestro Propio Puntero Inteligente",
            "text": "es/step4.md",
            "verify": [
              {
                "name": "Este paso no tiene verificación en este momento",
                "file": "verify4-1.sh",
                "hint": "Este paso no tiene verificación en este momento"
              }
            ]
          },
          {
            "title": "Implementando el Trato Deref",
            "text": "es/step5.md",
            "verify": [
              {
                "name": "Este paso no tiene verificación en este momento",
                "file": "verify5-1.sh",
                "hint": "Este paso no tiene verificación en este momento"
              }
            ]
          },
          {
            "title": "Coerciones de Deref Implícitas con Funciones y Métodos",
            "text": "es/step6.md",
            "verify": [
              {
                "name": "Este paso no tiene verificación en este momento",
                "file": "verify6-1.sh",
                "hint": "Este paso no tiene verificación en este momento"
              }
            ]
          },
          {
            "title": "Cómo la Coerción de Deref Interactúa con la Mutabilidad",
            "text": "es/step7.md",
            "verify": [
              {
                "name": "Este paso no tiene verificación en este momento",
                "file": "verify7-1.sh",
                "hint": "Este paso no tiene verificación en este momento"
              }
            ]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Traiter les pointeurs intelligents comme des références normales",
      "description": "Dans ce laboratoire, nous explorerons comment l'implémentation du trait Deref permet de traiter les pointeurs intelligents comme des références normales et comment la fonction deref coercion de Rust facilite la manipulation des références ou des pointeurs intelligents.",
      "meta": {
        "title": "Pointeurs intelligents Rust | Trait Deref | Gestion des références",
        "description": "Découvrez comment implémenter le trait Deref pour traiter les pointeurs intelligents comme des références normales en Rust. Explorez la fonction deref coercion de Rust pour une utilisation transparente des références et des pointeurs intelligents.",
        "keywords": "Rust, Pointeurs intelligents, Trait Deref, Gestion des références, Deref coercion"
      },
      "details": {
        "steps": [
          {
            "title": "Traiter les pointeurs intelligents comme des références normales avec Deref",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Cette étape n'a pas de vérification pour le moment",
                "file": "verify1-1.sh",
                "hint": "Cette étape n'a pas de vérification pour le moment"
              }
            ]
          },
          {
            "title": "Suivre le pointeur jusqu'à la valeur",
            "text": "fr/step2.md",
            "verify": [
              {
                "name": "Cette étape n'a pas de vérification pour le moment",
                "file": "verify2-1.sh",
                "hint": "Cette étape n'a pas de vérification pour le moment"
              }
            ]
          },
          {
            "title": "Utiliser Box<T> comme une référence",
            "text": "fr/step3.md",
            "verify": [
              {
                "name": "Cette étape n'a pas de vérification pour le moment",
                "file": "verify3-1.sh",
                "hint": "Cette étape n'a pas de vérification pour le moment"
              }
            ]
          },
          {
            "title": "Définir notre propre pointeur intelligent",
            "text": "fr/step4.md",
            "verify": [
              {
                "name": "Cette étape n'a pas de vérification pour le moment",
                "file": "verify4-1.sh",
                "hint": "Cette étape n'a pas de vérification pour le moment"
              }
            ]
          },
          {
            "title": "Implémenter le trait Deref",
            "text": "fr/step5.md",
            "verify": [
              {
                "name": "Cette étape n'a pas de vérification pour le moment",
                "file": "verify5-1.sh",
                "hint": "Cette étape n'a pas de vérification pour le moment"
              }
            ]
          },
          {
            "title": "Coercitions implicites de Deref avec des fonctions et des méthodes",
            "text": "fr/step6.md",
            "verify": [
              {
                "name": "Cette étape n'a pas de vérification pour le moment",
                "file": "verify6-1.sh",
                "hint": "Cette étape n'a pas de vérification pour le moment"
              }
            ]
          },
          {
            "title": "Comment la coercition de Deref interagit avec la mutabilité",
            "text": "fr/step7.md",
            "verify": [
              {
                "name": "Cette étape n'a pas de vérification pour le moment",
                "file": "verify7-1.sh",
                "hint": "Cette étape n'a pas de vérification pour le moment"
              }
            ]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Smart Pointer behandeln wie reguläre Referenzen",
      "description": "In diesem Lab werden wir untersuchen, wie die Implementierung des Deref-Traits es ermöglicht, Smart Pointer wie reguläre Referenzen zu behandeln, und wie die Deref-Zwangsumwandlungsfunktion in Rust es ermöglicht, mit sowohl Referenzen als auch Smart Pointern zu arbeiten.",
      "meta": {
        "title": "Rust Smart Pointer | Deref-Trait | Referenzhandling",
        "description": "Lernen Sie, wie Sie den Deref-Trait implementieren, um Smart Pointer in Rust wie reguläre Referenzen zu behandeln. Entdecken Sie die Deref-Zwangsumwandlungsfunktion in Rust für ein nahtloses Verwenden von Referenzen und Smart Pointern.",
        "keywords": "Rust, Smart Pointer, Deref-Trait, Referenzhandling, Deref-Zwangsumwandlung"
      },
      "details": {
        "steps": [
          {
            "title": "Smart Pointer mit Deref wie reguläre Referenzen behandeln",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Dieser Schritt hat momentan keine Verifizierung",
                "file": "verify1-1.sh",
                "hint": "Dieser Schritt hat momentan keine Verifizierung"
              }
            ]
          },
          {
            "title": "Den Zeiger zum Wert folgen",
            "text": "de/step2.md",
            "verify": [
              {
                "name": "Dieser Schritt hat momentan keine Verifizierung",
                "file": "verify2-1.sh",
                "hint": "Dieser Schritt hat momentan keine Verifizierung"
              }
            ]
          },
          {
            "title": "Box<T> wie eine Referenz verwenden",
            "text": "de/step3.md",
            "verify": [
              {
                "name": "Dieser Schritt hat momentan keine Verifizierung",
                "file": "verify3-1.sh",
                "hint": "Dieser Schritt hat momentan keine Verifizierung"
              }
            ]
          },
          {
            "title": "Unser eigenes Smart Pointer definieren",
            "text": "de/step4.md",
            "verify": [
              {
                "name": "Dieser Schritt hat momentan keine Verifizierung",
                "file": "verify4-1.sh",
                "hint": "Dieser Schritt hat momentan keine Verifizierung"
              }
            ]
          },
          {
            "title": "Implementierung des Deref-Traits",
            "text": "de/step5.md",
            "verify": [
              {
                "name": "Dieser Schritt hat momentan keine Verifizierung",
                "file": "verify5-1.sh",
                "hint": "Dieser Schritt hat momentan keine Verifizierung"
              }
            ]
          },
          {
            "title": "Implizite Deref-Koerzierungsregeln für Funktionen und Methoden",
            "text": "de/step6.md",
            "verify": [
              {
                "name": "Dieser Schritt hat momentan keine Verifizierung",
                "file": "verify6-1.sh",
                "hint": "Dieser Schritt hat momentan keine Verifizierung"
              }
            ]
          },
          {
            "title": "Wie die Deref-Koerzierung mit der Veränderbarkeit interagiert",
            "text": "de/step7.md",
            "verify": [
              {
                "name": "Dieser Schritt hat momentan keine Verifizierung",
                "file": "verify7-1.sh",
                "hint": "Dieser Schritt hat momentan keine Verifizierung"
              }
            ]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "通常の参照のようにスマートポインタを扱う",
      "description": "この実験では、Deref トレイトを実装することでスマートポインタを通常の参照のように扱う方法と、Rust の参照解除強制機能が参照またはスマートポインタのどちらでも動作するコードを書くことを可能にする方法を探ります。",
      "meta": {
        "title": "Rust のスマートポインタ | Deref トレイト | 参照の処理",
        "description": "Rust で通常の参照のようにスマートポインタを扱うために Deref トレイトをどのように実装するか学びましょう。参照とスマートポインタの使い方を円滑にする Rust の参照解除強制機能を探ります。",
        "keywords": "Rust, スマートポインタ，Deref トレイト，参照の処理，参照解除強制"
      },
      "details": {
        "steps": [
          {
            "title": "Deref を使って通常の参照のようにスマートポインタを扱う",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "このステップでは現在検証はありません",
                "file": "verify1-1.sh",
                "hint": "このステップでは現在検証はありません"
              }
            ]
          },
          {
            "title": "ポインタを辿って値を取得する",
            "text": "ja/step2.md",
            "verify": [
              {
                "name": "このステップでは現在検証はありません",
                "file": "verify2-1.sh",
                "hint": "このステップでは現在検証はありません"
              }
            ]
          },
          {
            "title": "参照のように Box<T>を使う",
            "text": "ja/step3.md",
            "verify": [
              {
                "name": "このステップでは現在検証はありません",
                "file": "verify3-1.sh",
                "hint": "このステップでは現在検証はありません"
              }
            ]
          },
          {
            "title": "独自のスマートポインタを定義する",
            "text": "ja/step4.md",
            "verify": [
              {
                "name": "このステップでは現在検証はありません",
                "file": "verify4-1.sh",
                "hint": "このステップでは現在検証はありません"
              }
            ]
          },
          {
            "title": "Deref トレイトを実装する",
            "text": "ja/step5.md",
            "verify": [
              {
                "name": "このステップでは現在検証はありません",
                "file": "verify5-1.sh",
                "hint": "このステップでは現在検証はありません"
              }
            ]
          },
          {
            "title": "関数とメソッドによる暗黙の Deref 強制",
            "text": "ja/step6.md",
            "verify": [
              {
                "name": "このステップでは現在検証はありません",
                "file": "verify6-1.sh",
                "hint": "このステップでは現在検証はありません"
              }
            ]
          },
          {
            "title": "Deref 強制が不変性とどのように相互作用するか",
            "text": "ja/step7.md",
            "verify": [
              {
                "name": "このステップでは現在検証はありません",
                "file": "verify7-1.sh",
                "hint": "このステップでは現在検証はありません"
              }
            ]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Работа с умными указателями как с обычными ссылками",
      "description": "В этой лабораторной работе мы исследуем, как реализация трейта Deref позволяет работать с умными указателями как с обычными ссылками, и как функция преобразования Deref в Rust позволяет использовать ссылки и умные указатели interchangeably.",
      "meta": {
        "title": "Умные указатели в Rust | Трейт Deref | Обработка ссылок",
        "description": "Изучите, как реализовать трейт Deref для работы с умными указателями как с обычными ссылками в Rust. Исследуйте функцию преобразования Deref для беспрепятственного использования ссылок и умных указателей.",
        "keywords": "Rust, Умные указатели, Трейт Deref, Обработка ссылок, Преобразование Deref"
      },
      "details": {
        "steps": [
          {
            "title": "Работа с умными указателями как с обычными ссылками с использованием Deref",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "На данный момент эта стадия не имеет проверки",
                "file": "verify1-1.sh",
                "hint": "На данный момент эта стадия не имеет проверки"
              }
            ]
          },
          {
            "title": "Следуя указателю до значения",
            "text": "ru/step2.md",
            "verify": [
              {
                "name": "На данный момент эта стадия не имеет проверки",
                "file": "verify2-1.sh",
                "hint": "На данный момент эта стадия не имеет проверки"
              }
            ]
          },
          {
            "title": "Использование Box<T> как ссылки",
            "text": "ru/step3.md",
            "verify": [
              {
                "name": "На данный момент эта стадия не имеет проверки",
                "file": "verify3-1.sh",
                "hint": "На данный момент эта стадия не имеет проверки"
              }
            ]
          },
          {
            "title": "Определение собственного умного указателя",
            "text": "ru/step4.md",
            "verify": [
              {
                "name": "На данный момент эта стадия не имеет проверки",
                "file": "verify4-1.sh",
                "hint": "На данный момент эта стадия не имеет проверки"
              }
            ]
          },
          {
            "title": "Реализация трейта Deref",
            "text": "ru/step5.md",
            "verify": [
              {
                "name": "На данный момент эта стадия не имеет проверки",
                "file": "verify5-1.sh",
                "hint": "На данный момент эта стадия не имеет проверки"
              }
            ]
          },
          {
            "title": "Неявные преобразования Deref для функций и методов",
            "text": "ru/step6.md",
            "verify": [
              {
                "name": "На данный момент эта стадия не имеет проверки",
                "file": "verify6-1.sh",
                "hint": "На данный момент эта стадия не имеет проверки"
              }
            ]
          },
          {
            "title": "Как взаимодействие преобразования Deref с изменяемостью",
            "text": "ru/step7.md",
            "verify": [
              {
                "name": "На данный момент эта стадия не имеет проверки",
                "file": "verify7-1.sh",
                "hint": "На данный момент эта стадия не имеет проверки"
              }
            ]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    },
    {
      "lang": "ko",
      "title": "스마트 포인터를 일반 참조처럼 다루기",
      "description": "이 Lab 에서는 Deref 트레이트를 구현하여 스마트 포인터를 일반 참조처럼 다루는 방법과 Rust 의 Deref 강제 변환 기능을 통해 참조 또는 스마트 포인터로 작업하는 방법을 살펴보겠습니다.",
      "meta": {
        "title": "Rust 스마트 포인터 | Deref 트레이트 | 참조 처리 - Rust 학습",
        "description": "Rust 에서 Deref 트레이트를 구현하여 스마트 포인터를 일반 참조처럼 다루는 방법을 알아보세요. 원활한 참조 및 스마트 포인터 사용을 위한 Rust 의 Deref 강제 변환 기능을 탐구합니다.",
        "keywords": "Rust, 스마트 포인터, Deref 트레이트, 참조 처리, Deref 강제 변환, Rust 프로그래밍, Rust 튜토리얼"
      },
      "details": {
        "steps": [
          {
            "title": "Deref 를 사용하여 스마트 포인터를 일반 참조처럼 다루기",
            "text": "ko/step1.md",
            "verify": [
              {
                "name": "현재 이 단계에는 검증이 없습니다.",
                "file": "verify1-1.sh",
                "hint": "현재 이 단계에는 검증이 없습니다."
              }
            ]
          },
          {
            "title": "포인터를 따라 값에 접근하기",
            "text": "ko/step2.md",
            "verify": [
              {
                "name": "현재 이 단계에는 검증이 없습니다.",
                "file": "verify2-1.sh",
                "hint": "현재 이 단계에는 검증이 없습니다."
              }
            ]
          },
          {
            "title": "Box<T>를 참조처럼 사용하기",
            "text": "ko/step3.md",
            "verify": [
              {
                "name": "현재 이 단계에는 검증이 없습니다.",
                "file": "verify3-1.sh",
                "hint": "현재 이 단계에는 검증이 없습니다."
              }
            ]
          },
          {
            "title": "나만의 스마트 포인터 정의하기",
            "text": "ko/step4.md",
            "verify": [
              {
                "name": "현재 이 단계에는 검증이 없습니다.",
                "file": "verify4-1.sh",
                "hint": "현재 이 단계에는 검증이 없습니다."
              }
            ]
          },
          {
            "title": "Deref 트레이트 구현하기",
            "text": "ko/step5.md",
            "verify": [
              {
                "name": "현재 이 단계에는 검증이 없습니다.",
                "file": "verify5-1.sh",
                "hint": "현재 이 단계에는 검증이 없습니다."
              }
            ]
          },
          {
            "title": "함수 및 메서드와 함께하는 암시적 Deref 강제 변환",
            "text": "ko/step6.md",
            "verify": [
              {
                "name": "현재 이 단계에는 검증이 없습니다.",
                "file": "verify6-1.sh",
                "hint": "현재 이 단계에는 검증이 없습니다."
              }
            ]
          },
          {
            "title": "Deref 강제 변환과 가변성의 상호 작용",
            "text": "ko/step7.md",
            "verify": [
              {
                "name": "현재 이 단계에는 검증이 없습니다.",
                "file": "verify7-1.sh",
                "hint": "현재 이 단계에는 검증이 없습니다."
              }
            ]
          }
        ],
        "intro": {
          "text": "ko/intro.md",
          "title": "소개"
        },
        "finish": {
          "text": "ko/finish.md",
          "title": "요약"
        }
      }
    },
    {
      "lang": "pt",
      "title": "Tratando Ponteiros Inteligentes como Referências Regulares",
      "description": "Neste laboratório, exploraremos como a implementação do trait Deref permite que ponteiros inteligentes sejam tratados como referências regulares e como o recurso de coerção de deref do Rust possibilita trabalhar com referências ou ponteiros inteligentes.",
      "meta": {
        "title": "Ponteiros Inteligentes Rust | Trait Deref | Manipulação de Referências",
        "description": "Aprenda como implementar o trait Deref para tratar ponteiros inteligentes como referências regulares em Rust. Explore o recurso de coerção de deref do Rust para um uso perfeito de referências e ponteiros inteligentes.",
        "keywords": "Rust, Ponteiros Inteligentes, Trait Deref, Manipulação de Referências, Coerção de Deref"
      },
      "details": {
        "steps": [
          {
            "title": "Tratando Ponteiros Inteligentes como Referências Regulares com Deref",
            "text": "pt/step1.md",
            "verify": [
              {
                "name": "Este passo não possui verificação no momento",
                "file": "verify1-1.sh",
                "hint": "Este passo não possui verificação no momento"
              }
            ]
          },
          {
            "title": "Seguindo o Ponteiro para o Valor",
            "text": "pt/step2.md",
            "verify": [
              {
                "name": "Este passo não possui verificação no momento",
                "file": "verify2-1.sh",
                "hint": "Este passo não possui verificação no momento"
              }
            ]
          },
          {
            "title": "Usando Box<T> como uma Referência",
            "text": "pt/step3.md",
            "verify": [
              {
                "name": "Este passo não possui verificação no momento",
                "file": "verify3-1.sh",
                "hint": "Este passo não possui verificação no momento"
              }
            ]
          },
          {
            "title": "Definindo Nosso Próprio Smart Pointer",
            "text": "pt/step4.md",
            "verify": [
              {
                "name": "Este passo não possui verificação no momento",
                "file": "verify4-1.sh",
                "hint": "Este passo não possui verificação no momento"
              }
            ]
          },
          {
            "title": "Implementando a Trait Deref",
            "text": "pt/step5.md",
            "verify": [
              {
                "name": "Este passo não possui verificação no momento",
                "file": "verify5-1.sh",
                "hint": "Este passo não possui verificação no momento"
              }
            ]
          },
          {
            "title": "Coerções Deref Implícitas com Funções e Métodos",
            "text": "pt/step6.md",
            "verify": [
              {
                "name": "Este passo não possui verificação no momento",
                "file": "verify6-1.sh",
                "hint": "Este passo não possui verificação no momento"
              }
            ]
          },
          {
            "title": "Como a Coerção Deref Interage com a Mutabilidade",
            "text": "pt/step7.md",
            "verify": [
              {
                "name": "Este passo não possui verificação no momento",
                "file": "verify7-1.sh",
                "hint": "Este passo não possui verificação no momento"
              }
            ]
          }
        ],
        "intro": {
          "text": "pt/intro.md",
          "title": "Introdução"
        },
        "finish": {
          "text": "pt/finish.md",
          "title": "Resumo"
        }
      }
    }
  ]
}
