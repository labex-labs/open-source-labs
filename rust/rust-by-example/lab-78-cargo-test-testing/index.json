{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Rust Software Testing Fundamentals",
  "description": "In this lab, we will explore the importance of testing in software development using Rust and how to write different types of tests such as unit tests and integration tests. We will also learn about organizing tests in Rust projects and running them using the cargo test command. Additionally, we will discuss the potential issues that can arise from running tests concurrently and provide an example to illustrate this.",
  "meta": {
    "title": "Rust Programming | Testing in Software Development",
    "description": "Explore the importance of testing in Rust software development, learn to write unit and integration tests, and understand the potential issues of running tests concurrently.",
    "keywords": "Rust Programming, Software Testing, Unit Tests, Integration Tests, Concurrent Testing"
  },
  "difficulty": "Beginner",
  "time": 5,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Testing",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "This step has no verification at the moment",
            "file": "verify1-1.sh",
            "hint": "This step has no verification at the moment",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": []
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": [],
  "license": {
    "name": "MIT",
    "url": "https://github.com/rust-lang/rust-by-example/blob/master/LICENSE-MIT",
    "repo": "https://github.com/rust-lang/rust-by-example"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "Rust 软件测试基础",
      "description": "在本实验中，我们将探讨使用 Rust 进行软件开发时测试的重要性，以及如何编写不同类型的测试，如单元测试和集成测试。我们还将学习如何在 Rust 项目中组织测试，并使用 cargo test 命令运行它们。此外，我们将讨论并发运行测试可能出现的潜在问题，并提供一个示例来说明这一点。",
      "meta": {
        "title": "Rust 编程 | 软件开发中的测试",
        "description": "探索 Rust 软件开发中测试的重要性，学习编写单元测试和集成测试，并了解并发运行测试的潜在问题。",
        "keywords": "Rust 编程，软件测试，单元测试，集成测试，并发测试"
      },
      "details": {
        "steps": [
          {
            "title": "测试",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "此步骤目前没有验证",
                "file": "verify1-1.sh",
                "hint": "此步骤目前没有验证"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Fundamentos de Pruebas de Software en Rust",
      "description": "En este laboratorio, exploraremos la importancia de las pruebas en el desarrollo de software utilizando Rust y cómo escribir diferentes tipos de pruebas, como pruebas unitarias e integrales. También aprenderemos sobre la organización de las pruebas en proyectos Rust y cómo ejecutarlas utilizando el comando cargo test. Además, discutiremos los posibles problemas que pueden surgir al ejecutar las pruebas de manera concurrente y proporcionaremos un ejemplo para ilustrarlo.",
      "meta": {
        "title": "Programación en Rust | Pruebas en el Desarrollo de Software",
        "description": "Explora la importancia de las pruebas en el desarrollo de software en Rust, aprende a escribir pruebas unitarias e integrales y entiende los posibles problemas de ejecutar las pruebas de manera concurrente.",
        "keywords": "Programación en Rust, Pruebas de Software, Pruebas Unitarias, Pruebas Integrales, Pruebas Concurrentes"
      },
      "details": {
        "steps": [
          {
            "title": "Pruebas",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Este paso no tiene verificaciones en este momento",
                "file": "verify1-1.sh",
                "hint": "Este paso no tiene verificaciones en este momento"
              }
            ]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Fondamentaux des tests logiciels en Rust",
      "description": "Dans ce laboratoire, nous explorerons l'importance des tests dans le développement logiciel en utilisant Rust et apprendrons à écrire différents types de tests tels que les tests unitaires et les tests d'intégration. Nous apprendrons également à organiser les tests dans les projets Rust et à les exécuter en utilisant la commande cargo test. De plus, nous discuterons des problèmes potentiels qui peuvent survenir lors de l'exécution concurrente de tests et fournirons un exemple pour illustrer cela.",
      "meta": {
        "title": "Programmation Rust | Tests dans le développement logiciel",
        "description": "Explorez l'importance des tests dans le développement logiciel Rust, apprenez à écrire des tests unitaires et d'intégration, et comprenez les problèmes potentiels de l'exécution concurrente de tests.",
        "keywords": "Programmation Rust, Tests logiciels, Tests unitaires, Tests d'intégration, Tests simultanés"
      },
      "details": {
        "steps": [
          {
            "title": "Tests",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Cette étape n'a pas de vérification pour le moment",
                "file": "verify1-1.sh",
                "hint": "Cette étape n'a pas de vérification pour le moment"
              }
            ]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Grundlagen des Softwaretestens in Rust",
      "description": "In diesem Lab werden wir die Wichtigkeit des Testens bei der Softwareentwicklung mit Rust untersuchen und lernen, verschiedene Arten von Tests wie Unit-Tests und Integrationstests zu schreiben. Wir werden auch lernen, wie man Tests in Rust-Projekten organisiert und mithilfe des Befehls cargo test ausführt. Darüber hinaus werden wir die potenziellen Probleme diskutieren, die bei der parallelen Ausführung von Tests auftreten können, und geben ein Beispiel, um dies zu veranschaulichen.",
      "meta": {
        "title": "Rust-Programmierung | Testen in der Softwareentwicklung",
        "description": "Entdecken Sie die Wichtigkeit des Testens bei der Rust-Softwareentwicklung, lernen Sie, Unit- und Integrationstests zu schreiben, und verstehen Sie die potenziellen Probleme der parallelen Ausführung von Tests.",
        "keywords": "Rust-Programmierung, Softwaretest, Unit-Tests, Integrationstests, paralleler Test"
      },
      "details": {
        "steps": [
          {
            "title": "Testen",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Dieser Schritt hat momentan keine Verifizierung",
                "file": "verify1-1.sh",
                "hint": "Dieser Schritt hat momentan keine Verifizierung"
              }
            ]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "Rust によるソフトウェアテストの基本",
      "description": "この実験では、Rust を使ったソフトウェア開発におけるテストの重要性と、ユニットテストや統合テストなどのさまざまな種類のテストを書く方法を探ります。また、Rust プロジェクトでテストを整理し、`cargo test`コマンドを使って実行する方法についても学びます。さらに、同時にテストを実行することで発生する可能性のある問題について議論し、これを示す例を挙げます。",
      "meta": {
        "title": "Rust プログラミング | ソフトウェア開発におけるテスト",
        "description": "Rust ソフトウェア開発におけるテストの重要性を探り、ユニットテストと統合テストの書き方を学び、同時にテストを実行する際の潜在的な問題を理解しましょう。",
        "keywords": "Rust プログラミング，ソフトウェアテスト，ユニットテスト，統合テスト，同時テスト"
      },
      "details": {
        "steps": [
          {
            "title": "テスト",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "このステップには現在、検証はありません",
                "file": "verify1-1.sh",
                "hint": "このステップには現在、検証はありません"
              }
            ]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Основы тестирования программного обеспечения на Rust",
      "description": "В этом лабораторном задании мы исследуем важность тестирования при разработке программного обеспечения на Rust и узнаем, как писать различные виды тестов, такие как модульные тесты и интеграционные тесты. Мы также узнаем, как организовать тесты в проектах на Rust и запускать их с помощью команды cargo test. Кроме того, мы обсудим возможные проблемы, которые могут возникнуть при параллельном запуске тестов, и приведем пример, иллюстрирующий это.",
      "meta": {
        "title": "Программирование на Rust | Тестирование в разработке программного обеспечения",
        "description": "Исследуйте важность тестирования при разработке программного обеспечения на Rust, научитесь писать модульные и интеграционные тесты и понять возможные проблемы при параллельном запуске тестов.",
        "keywords": "Программирование на Rust, Тестирование программного обеспечения, Модульные тесты, Интеграционные тесты, Параллельное тестирование"
      },
      "details": {
        "steps": [
          {
            "title": "Тестирование",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "На данный момент эта стадия не имеет проверки",
                "file": "verify1-1.sh",
                "hint": "На данный момент эта стадия не имеет проверки"
              }
            ]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    },
    {
      "lang": "ko",
      "title": "Rust 소프트웨어 테스트 기초",
      "description": "이 실습에서는 Rust 를 사용하여 소프트웨어 개발에서 테스트의 중요성과 단위 테스트, 통합 테스트와 같은 다양한 유형의 테스트를 작성하는 방법을 탐색합니다. 또한 Rust 프로젝트에서 테스트를 구성하고 cargo test 명령어를 사용하여 테스트를 실행하는 방법을 배우고, 동시에 테스트를 실행할 때 발생할 수 있는 잠재적인 문제점과 이를 보여주는 예제를 다룹니다.",
      "meta": {
        "title": "Rust 프로그래밍 | 소프트웨어 개발의 테스트",
        "description": "Rust 소프트웨어 개발에서 테스트의 중요성을 탐색하고, 단위 및 통합 테스트를 작성하고, 동시 테스트 실행의 잠재적 문제점을 이해하세요.",
        "keywords": "Rust 프로그래밍, 소프트웨어 테스트, 단위 테스트, 통합 테스트, 동시 테스트, Rust 테스트, 테스트 기초, Rust 소프트웨어 개발"
      },
      "details": {
        "steps": [
          {
            "title": "테스트",
            "text": "ko/step1.md",
            "verify": [
              {
                "name": "현재 이 단계에는 검증 항목이 없습니다.",
                "file": "verify1-1.sh",
                "hint": "현재 이 단계에는 검증 항목이 없습니다."
              }
            ]
          }
        ],
        "intro": {
          "text": "ko/intro.md",
          "title": "소개"
        },
        "finish": {
          "text": "ko/finish.md",
          "title": "요약"
        }
      }
    },
    {
      "lang": "pt",
      "title": "Fundamentos de Testes de Software em Rust",
      "description": "Neste laboratório, exploraremos a importância dos testes no desenvolvimento de software usando Rust e como escrever diferentes tipos de testes, como testes unitários e testes de integração. Também aprenderemos sobre a organização de testes em projetos Rust e como executá-los usando o comando cargo test. Além disso, discutiremos os potenciais problemas que podem surgir ao executar testes simultaneamente e forneceremos um exemplo para ilustrar isso.",
      "meta": {
        "title": "Programação em Rust | Testes no Desenvolvimento de Software",
        "description": "Explore a importância dos testes no desenvolvimento de software em Rust, aprenda a escrever testes unitários e de integração e entenda os potenciais problemas de execução de testes simultaneamente.",
        "keywords": "Programação em Rust, Testes de Software, Testes Unitários, Testes de Integração, Testes Concorrentes"
      },
      "details": {
        "steps": [
          {
            "title": "Testes",
            "text": "pt/step1.md",
            "verify": [
              {
                "name": "Este passo não possui verificação no momento",
                "file": "verify1-1.sh",
                "hint": "Este passo não possui verificação no momento"
              }
            ]
          }
        ],
        "intro": {
          "text": "pt/intro.md",
          "title": "Introdução"
        },
        "finish": {
          "text": "pt/finish.md",
          "title": "Resumo"
        }
      }
    }
  ]
}
