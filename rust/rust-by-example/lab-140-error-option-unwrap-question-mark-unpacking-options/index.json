{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Unpacking Options with ?",
  "description": "In this lab, we explore the use of the ? operator in Rust, which allows for easy unpacking of Option values without the need for nested match statements. The ? operator can be used to quickly return the underlying value if the Option is Some, or terminate the function and return None if the Option is None. This operator can be chained together to make code more readable and concise.",
  "meta": {
    "title": "Rust Programming | Option Unpacking with the ? Operator",
    "description": "Explore the use of the ? operator in Rust to easily unpack Option values without nested match statements. Learn how to make your code more readable and concise.",
    "keywords": "Rust, Option, ? operator, programming, tutorial"
  },
  "difficulty": "Beginner",
  "time": 5,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Unpacking options with ?",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "This step has no verification at the moment",
            "file": "verify1-1.sh",
            "hint": "This step has no verification at the moment",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "rust/error_propagation",
          "rust/expressions_statements",
          "rust/function_syntax",
          "rust/integer_types",
          "rust/lifetime_specifiers",
          "rust/method_syntax",
          "rust/operator_overloading",
          "rust/traits",
          "rust/variable_declarations"
        ]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": [],
  "license": {
    "name": "MIT",
    "url": "https://github.com/rust-lang/rust-by-example/blob/master/LICENSE-MIT",
    "repo": "https://github.com/rust-lang/rust-by-example"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "使用？解包 Option",
      "description": "在本实验中，我们探索 Rust 中？运算符的用法，它允许轻松解包 Option 值，而无需使用嵌套的 match 语句。如果 Option 是 Some，? 运算符可用于快速返回其底层值；如果 Option 是 None，则终止函数并返回 None。这个运算符可以链接在一起，使代码更具可读性和简洁性。",
      "meta": {
        "title": "Rust 编程 | 使用？运算符解包 Option",
        "description": "探索 Rust 中？运算符的用法，无需嵌套 match 语句即可轻松解包 Option 值。了解如何使代码更具可读性和简洁性。",
        "keywords": "Rust, Option,? 运算符，编程，教程"
      },
      "details": {
        "steps": [
          {
            "title": "使用？解包 Option",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "此步骤目前没有验证",
                "file": "verify1-1.sh",
                "hint": "此步骤目前没有验证"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Desempaquetar opciones con?",
      "description": "En este laboratorio, exploramos el uso del operador? en Rust, que permite la fácil extracción de valores de Option sin la necesidad de declaraciones match anidadas. El operador? se puede utilizar para devolver rápidamente el valor subyacente si la Option es Some, o terminar la función y devolver None si la Option es None. Este operador se puede encadenar para hacer el código más legible y conciso.",
      "meta": {
        "title": "Programación en Rust | Desempaquetado de Option con el operador?",
        "description": "Explore el uso del operador? en Rust para extraer fácilmente valores de Option sin declaraciones match anidadas. Aprenda a hacer que su código sea más legible y conciso.",
        "keywords": "Rust, Option, operador?, programación, tutorial"
      },
      "details": {
        "steps": [
          {
            "title": "Desempaquetar opciones con?",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Este paso no tiene verificaciones en este momento",
                "file": "verify1-1.sh",
                "hint": "Este paso no tiene verificaciones en este momento"
              }
            ]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Déballez les options avec?",
      "description": "Dans ce laboratoire, nous explorons l'utilisation de l'opérateur? en Rust, qui permet de déballer facilement les valeurs Option sans avoir besoin d'instructions match imbriquées. L'opérateur? peut être utilisé pour retourner rapidement la valeur sous-jacente si l'Option est Some, ou terminer la fonction et retourner None si l'Option est None. Cet opérateur peut être chaîné pour rendre le code plus lisible et concise.",
      "meta": {
        "title": "Programmation Rust | Déballez les options avec l'opérateur?",
        "description": "Explorez l'utilisation de l'opérateur? en Rust pour déballer facilement les valeurs Option sans instructions match imbriquées. Apprenez à rendre votre code plus lisible et concise.",
        "keywords": "Rust, Option, opérateur?, programmation, tutoriel"
      },
      "details": {
        "steps": [
          {
            "title": "Déballez les options avec?",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Cette étape n'a pas de vérification pour le moment",
                "file": "verify1-1.sh",
                "hint": "Cette étape n'a pas de vérification pour le moment"
              }
            ]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Optionen mit? entpacken",
      "description": "In diesem Lab untersuchen wir die Verwendung des?-Operators in Rust, mit dem man Option-Werte einfach entpacken kann, ohne dass geschachtelte match-Anweisungen erforderlich sind. Der?-Operator kann verwendet werden, um den zugrunde liegenden Wert schnell zurückzugeben, wenn die Option Some ist, oder die Funktion zu beenden und None zurückzugeben, wenn die Option None ist. Dieser Operator kann verkettet werden, um den Code lesbarer und präziser zu machen.",
      "meta": {
        "title": "Rust-Programmierung | Optionen mit dem?-Operator entpacken",
        "description": "Entdecken Sie die Verwendung des?-Operators in Rust, um Option-Werte ohne geschachtelte match-Anweisungen einfach zu entpacken. Lernen Sie, wie Sie Ihren Code lesbarer und präziser gestalten können.",
        "keywords": "Rust, Option,?-Operator, Programmierung, Tutorial"
      },
      "details": {
        "steps": [
          {
            "title": "Optionen mit? entpacken",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Dieser Schritt hat momentan keine Verifizierung",
                "file": "verify1-1.sh",
                "hint": "Dieser Schritt hat momentan keine Verifizierung"
              }
            ]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "?を使ったオプションの展開",
      "description": "この実験では、Rust における？演算子の使い方を調べます。これにより、ネストした match 文を必要とせずに、Option 値を簡単に展開できます。Option が Some の場合、?演算子を使って直ちにその値を返すことができます。また、Option が None の場合、関数を終了して None を返します。この演算子を連鎖させることで、コードをより読みやすく簡潔にすることができます。",
      "meta": {
        "title": "Rust プログラミング |？演算子を使ったオプションの展開",
        "description": "Rust における？演算子の使い方を調べ、ネストした match 文なしでオプション値を簡単に展開しましょう。コードをより読みやすく簡潔にする方法を学びましょう。",
        "keywords": "Rust, Option,?演算子，プログラミング，チュートリアル"
      },
      "details": {
        "steps": [
          {
            "title": "?を使ったオプションの展開",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "このステップでは現在検証はありません",
                "file": "verify1-1.sh",
                "hint": "このステップでは現在検証はありません"
              }
            ]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Распаковка вариантов с помощью?",
      "description": "В этом лабораторном задании мы исследуем использование оператора? в Rust, который позволяет легко извлекать значения Option без необходимости вложенных инструкций match. Оператор? можно использовать для быстрого возврата внутреннего значения, если Option имеет значение Some, или завершения функции и возврата None, если Option имеет значение None. Этот оператор можно объединять в цепочки, чтобы сделать код более читаемым и компактным.",
      "meta": {
        "title": "Программирование на Rust | Распаковка Option с помощью оператора?",
        "description": "Изучите использование оператора? в Rust для простой распаковки значений Option без вложенных инструкций match. Найдите, как сделать ваш код более читаемым и компактным.",
        "keywords": "Rust, Option, оператор?, программирование, учебник"
      },
      "details": {
        "steps": [
          {
            "title": "Распаковка вариантов с помощью?",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "На этом этапе проверок нет",
                "file": "verify1-1.sh",
                "hint": "На этом этапе проверок нет"
              }
            ]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    }
  ]
}
