{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Defining Generic Functions in Rust",
  "description": "In this lab, you will learn how to define generic functions in Rust. To make a function generic, you need to prepend the type T with <T>. Sometimes, you may need to explicitly specify type parameters while calling a generic function, which can be done using the syntax fun::<A, B, ...>(). The code provided demonstrates the usage of generic functions in Rust and includes examples of functions that are both generic and non-generic.",
  "meta": {
    "title": "Mastering Generic Functions in Rust | Programming Tutorials",
    "description": "Learn how to define and use generic functions in Rust, a powerful programming language known for its safety and performance.",
    "keywords": "Rust, Generic Functions, Programming Tutorials, Rust Programming, Software Development"
  },
  "difficulty": "Beginner",
  "time": 5,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Functions",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "This step has no verification at the moment",
            "file": "verify1-1.sh",
            "hint": "This step has no verification at the moment",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "rust/expressions_statements",
          "rust/function_syntax",
          "rust/integer_types",
          "rust/lifetime_specifiers",
          "rust/operator_overloading",
          "rust/type_casting"
        ]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": [],
  "license": {
    "name": "MIT",
    "url": "https://github.com/rust-lang/rust-by-example/blob/master/LICENSE-MIT",
    "repo": "https://github.com/rust-lang/rust-by-example"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "在 Rust 中定义泛型函数",
      "description": "在本实验中，你将学习如何在 Rust 中定义泛型函数。要使函数成为泛型函数，你需要在类型 T 前加上 <T>。有时，在调用泛型函数时，你可能需要显式指定类型参数，这可以使用语法 fun::<A, B,...>() 来完成。提供的代码演示了 Rust 中泛型函数的用法，并包括泛型函数和非泛型函数的示例。",
      "meta": {
        "title": "掌握 Rust 中的泛型函数 | 编程教程",
        "description": "学习如何在 Rust 中定义和使用泛型函数，Rust 是一种以安全性和性能著称的强大编程语言。",
        "keywords": "Rust, 泛型函数, 编程教程, Rust 编程, 软件开发"
      },
      "details": {
        "steps": [
          {
            "title": "函数",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "此步骤目前没有验证",
                "file": "verify1-1.sh",
                "hint": "此步骤目前没有验证"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Definir funciones genéricas en Rust",
      "description": "En este laboratorio, aprenderá a definir funciones genéricas en Rust. Para hacer una función genérica, debe agregar el tipo T precedido de <T>. A veces, es posible que tenga que especificar explícitamente los parámetros de tipo al llamar a una función genérica, lo que se puede hacer usando la sintaxis fun::<A, B,...>(). El código proporcionado demuestra el uso de funciones genéricas en Rust y incluye ejemplos de funciones que son tanto genéricas como no genéricas.",
      "meta": {
        "title": "Dominando las funciones genéricas en Rust | Tutoriales de programación",
        "description": "Aprenda a definir y usar funciones genéricas en Rust, un poderoso lenguaje de programación conocido por su seguridad y rendimiento.",
        "keywords": "Rust, Funciones genéricas, Tutoriales de programación, Programación en Rust, Desarrollo de software"
      },
      "details": {
        "steps": [
          {
            "title": "Funciones",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Este paso no tiene verificación en este momento",
                "file": "verify1-1.sh",
                "hint": "Este paso no tiene verificación en este momento"
              }
            ]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Définir des fonctions génériques en Rust",
      "description": "Dans ce laboratoire, vous allez apprendre à définir des fonctions génériques en Rust. Pour rendre une fonction générique, vous devez préfixer le type T avec <T>. Parfois, vous devrez peut-être spécifier explicitement les paramètres de type lors de l'appel d'une fonction générique, ce qui peut être fait en utilisant la syntaxe fun::<A, B,...>(). Le code fourni montre l'utilisation des fonctions génériques en Rust et inclut des exemples de fonctions génériques et non génériques.",
      "meta": {
        "title": "Maîtriser les fonctions génériques en Rust | Didacticiels de programmation",
        "description": "Découvrez comment définir et utiliser des fonctions génériques en Rust, un puissant langage de programmation connu pour sa sécurité et ses performances.",
        "keywords": "Rust, Fonctions génériques, Didacticiels de programmation, Programmation Rust, Développement logiciel"
      },
      "details": {
        "steps": [
          {
            "title": "Fonctions",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Cette étape n'a pas de vérification pour le moment",
                "file": "verify1-1.sh",
                "hint": "Cette étape n'a pas de vérification pour le moment"
              }
            ]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Definieren von generischen Funktionen in Rust",
      "description": "In diesem Lab lernst du, wie du generische Funktionen in Rust definierst. Um eine Funktion generisch zu machen, musst du den Typ T mit <T> voranstellen. Manchmal musst du die Typparameter beim Aufruf einer generischen Funktion explizit angeben, was mit der Syntax fun::<A, B,...>() möglich ist. Der bereitgestellte Code demonstriert die Verwendung generischer Funktionen in Rust und enthält Beispiele für sowohl generische als auch nicht-generische Funktionen.",
      "meta": {
        "title": "Meisterhaftigkeit in generischen Funktionen in Rust | Programmier-Tutorials",
        "description": "Lerne, wie du generische Funktionen in Rust definierst und verwendest, eine leistungsstarke Programmiersprache, die für ihre Sicherheit und Leistung bekannt ist.",
        "keywords": "Rust, Generische Funktionen, Programmier-Tutorials, Rust-Programmierung, Softwareentwicklung"
      },
      "details": {
        "steps": [
          {
            "title": "Funktionen",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Dieser Schritt hat momentan keine Verifizierung",
                "file": "verify1-1.sh",
                "hint": "Dieser Schritt hat momentan keine Verifizierung"
              }
            ]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "Rustにおけるジェネリック関数の定義",
      "description": "この実験では、Rustでジェネリック関数を定義する方法を学びます。関数をジェネリックにするには、型Tの前に<T>を付けます。場合によっては、ジェネリック関数を呼び出す際に型パラメータを明示的に指定する必要があります。これは、fun::<A, B,...>()という構文を使って行うことができます。提供されたコードは、Rustでのジェネリック関数の使用方法を示しており、ジェネリックでない関数の例も含まれています。",
      "meta": {
        "title": "Rustでのジェネリック関数のマスター | プログラミングチュートリアル",
        "description": "安全で高性能なことで知られる強力なプログラミング言語Rustで、ジェネリック関数を定義して使用する方法を学びましょう。",
        "keywords": "Rust, ジェネリック関数, プログラミングチュートリアル, Rustプログラミング, ソフトウェア開発"
      },
      "details": {
        "steps": [
          {
            "title": "関数",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "このステップには現在、検証はありません",
                "file": "verify1-1.sh",
                "hint": "このステップには現在、検証はありません"
              }
            ]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Определение обобщенных функций в Rust",
      "description": "В этом лабе вы научитесь определять обобщенные функции в Rust. Чтобы сделать функцию обобщенной, вам нужно добавить тип T с <T>. Иногда вам может потребоваться явно указать параметры типа при вызове обобщенной функции, что можно сделать с помощью синтаксиса fun::<A, B,...>(). Код, предоставленный в этом документе, демонстрирует использование обобщенных функций в Rust и включает примеры функций, которые являются как обобщенными, так и не обобщенными.",
      "meta": {
        "title": "Мастерство в обобщенных функциях в Rust | Руководства по программированию",
        "description": "Изучите, как определять и использовать обобщенные функции в Rust, мощном языке программирования, известном своей безопасности и производительностью.",
        "keywords": "Rust, Обобщенные функции, Руководства по программированию, Программирование на Rust, Разработка программного обеспечения"
      },
      "details": {
        "steps": [
          {
            "title": "Функции",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "На данный момент эта стадия не имеет проверки",
                "file": "verify1-1.sh",
                "hint": "На данный момент эта стадия не имеет проверки"
              }
            ]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    }
  ]
}
