{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Option & Unwrap",
  "description": "In this lab, we learn about the Option enum in Rust's std library, which is used to handle cases where absence is a possibility. It provides two options: Some(T) for when an element of type T is found, and None for when no element is found. These cases can be explicitly handled using match or implicitly handled using unwrap. Explicit handling allows for greater control and meaningful output, while unwrap can either return the inner element or induce a panic.",
  "meta": {
    "title": "Mastering Rust's Option and Unwrap Concepts",
    "description": "Explore the powerful Option enum and unwrap functionality in Rust, learn to handle absence and prevent program failures.",
    "keywords": "rust playground, error handling, option, rust tutor, rust online compiler, rust commands, unwrap, rust practice, rust online playground, rust online"
  },
  "difficulty": "Beginner",
  "time": 5,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Option & unwrap",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "This step has no verification at the moment",
            "file": "verify1-1.sh",
            "hint": "This step has no verification at the moment",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "rust/expressions_statements",
          "rust/function_syntax",
          "rust/method_syntax",
          "rust/panic_usage",
          "rust/string_type",
          "rust/variable_declarations"
        ]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": [],
  "license": {
    "name": "MIT",
    "url": "https://github.com/rust-lang/rust-by-example/blob/master/LICENSE-MIT",
    "repo": "https://github.com/rust-lang/rust-by-example"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "Option 与 Unwrap",
      "description": "在本实验中，我们学习 Rust 标准库中的 Option 枚举，它用于处理可能不存在值的情况。它提供了两种选项：当找到类型为 T 的元素时为 Some(T)，当未找到元素时为 None。这些情况可以使用 match 进行显式处理，也可以使用 unwrap 进行隐式处理。显式处理允许更大的控制权和有意义的输出，而 unwrap 要么返回内部元素，要么引发恐慌。",
      "meta": {
        "title": "掌握 Rust 的 Option 和 Unwrap 概念",
        "description": "探索 Rust 中强大的 Option 枚举和 unwrap 功能，学习处理值缺失并防止程序失败。",
        "keywords": "Rust 在线游乐场, 错误处理, Option, Rust 教程, Rust 在线编译器, Rust 命令, unwrap, Rust 练习, Rust 在线游乐场, Rust 在线"
      },
      "details": {
        "steps": [
          {
            "title": "Option 与 unwrap",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "此步骤目前没有验证",
                "file": "verify1-1.sh",
                "hint": "此步骤目前没有验证"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Option & Unwrap",
      "description": "En este laboratorio, aprendemos sobre el enum Option de la librería std de Rust, que se utiliza para manejar casos en los que la ausencia es una posibilidad. Proporciona dos opciones: Some(T) cuando se encuentra un elemento de tipo T, y None cuando no se encuentra ningún elemento. Estos casos se pueden manejar explícitamente utilizando match o implícitamente utilizando unwrap. El manejo explícito permite un mayor control y una salida significativa, mientras que unwrap puede devolver el elemento interno o causar un panic.",
      "meta": {
        "title": "Dominando los conceptos de Option y Unwrap en Rust",
        "description": "Explora la poderosa enumeración Option y la funcionalidad unwrap en Rust, aprende a manejar la ausencia y prevenir los fallos del programa.",
        "keywords": "playground de rust, manejo de errores, option, tutor de rust, compilador en línea de rust, comandos de rust, unwrap, práctica de rust, playground en línea de rust, rust en línea"
      },
      "details": {
        "steps": [
          {
            "title": "Option & unwrap",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Este paso no tiene verificación en este momento",
                "file": "verify1-1.sh",
                "hint": "Este paso no tiene verificación en este momento"
              }
            ]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Option & Unwrap",
      "description": "Dans ce laboratoire, nous apprenons à utiliser l'énumération Option de la bibliothèque std de Rust, qui sert à gérer les cas où l'absence est possible. Elle propose deux options : Some(T) lorsqu'un élément de type T est trouvé, et None lorsqu'aucun élément n'est trouvé. Ces cas peuvent être traités explicitement à l'aide de match ou implicitement à l'aide de unwrap. Le traitement explicite permet un contrôle plus fin et des résultats plus significatifs, tandis que unwrap peut soit renvoyer l'élément interne soit entraîner une panique.",
      "meta": {
        "title": "Maîtriser les concepts Option et Unwrap de Rust",
        "description": "Explorez l'énumération Option puissante et la fonctionnalité unwrap en Rust, apprenez à gérer l'absence et à éviter les erreurs dans votre programme.",
        "keywords": "plateforme de pratique Rust, gestion d'erreurs, Option, tuteur Rust, compilateur en ligne Rust, commandes Rust, unwrap, pratique Rust, plateforme de pratique en ligne Rust, Rust en ligne"
      },
      "details": {
        "steps": [
          {
            "title": "Option & unwrap",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Cette étape n'a pas de vérification pour le moment",
                "file": "verify1-1.sh",
                "hint": "Cette étape n'a pas de vérification pour le moment"
              }
            ]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Option & Unwrap",
      "description": "In diesem Lab lernen wir über die Option-Enumeration in der std-Bibliothek von Rust, die verwendet wird, um Fälle zu behandeln, in denen das Fehlen möglich ist. Sie bietet zwei Optionen: Some(T) für den Fall, dass ein Element vom Typ T gefunden wird, und None für den Fall, dass kein Element gefunden wird. Diese Fälle können explizit mit match behandelt oder implizit mit unwrap behandelt werden. Die explizite Behandlung ermöglicht eine größere Kontrolle und sinnvolle Ausgabe, während unwrap entweder das innere Element zurückgeben oder einen Fehler auslösen kann.",
      "meta": {
        "title": "Meisterung der Option- und Unwrap-Konzepte in Rust",
        "description": "Erkunden Sie die leistungsstarke Option-Enumeration und die unwrap-Funktionalität in Rust, lernen Sie, das Fehlen zu behandeln und das Programmabsturz zu vermeiden.",
        "keywords": "rust playground, error handling, option, rust tutor, rust online compiler, rust commands, unwrap, rust practice, rust online playground, rust online"
      },
      "details": {
        "steps": [
          {
            "title": "Option & unwrap",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Dieser Schritt hat momentan keine Verifizierung",
                "file": "verify1-1.sh",
                "hint": "Dieser Schritt hat momentan keine Verifizierung"
              }
            ]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "Option と Unwrap",
      "description": "この実験では、RustのstdライブラリにあるOption列挙型について学びます。これは、存在しない可能性がある場合を処理するために使用されます。これには2つのオプションがあります。型Tの要素が見つかった場合にはSome(T)で、要素が見つからなかった場合にはNoneです。これらのケースは、matchを使って明示的に処理することも、unwrapを使って暗黙的に処理することもできます。明示的な処理は、より大きな制御と意味のある出力を可能にしますが、unwrapは内部要素を返すか、パニックを引き起こす可能性があります。",
      "meta": {
        "title": "RustのOptionとUnwrapの概念をマスターする",
        "description": "Rustにおける強力なOption列挙型とunwrap機能を探り、存在しない場合の処理方法とプログラムの失敗を防ぐ方法を学びましょう。",
        "keywords": "rust playground, エラーハンドリング, option, rust tutor, rustオンラインコンパイラ, rustコマンド, unwrap, rust練習, rustオンラインplayground, rustオンライン"
      },
      "details": {
        "steps": [
          {
            "title": "Option と unwrap",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "このステップには現在、検証はありません",
                "file": "verify1-1.sh",
                "hint": "このステップには現在、検証はありません"
              }
            ]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Option & Unwrap",
      "description": "В этом лабе мы узнаем о перечислении Option из стандартной библиотеки Rust (std), которое используется для обработки случаев, когда отсутствие значения является возможным. Он предоставляет два варианта: Some(T) для случая, когда найден элемент типа T, и None для случая, когда элемент не найден. Эти случаи можно обрабатывать явно с использованием match, или неявно с использованием unwrap. Явная обработка позволяет более тщательно контролировать процесс и получать осмысленный вывод, в то время как unwrap может либо вернуть внутренний элемент, либо вызвать панику.",
      "meta": {
        "title": "Мастерство в концепциях Option и Unwrap Rust",
        "description": "Изучите мощное перечисление Option и функциональность unwrap в Rust, научитесь обрабатывать отсутствие и предотвращать сбои в программе.",
        "keywords": "rust playground, обработка ошибок, option, rust tutor, rust онлайн-компилятор, rust команды, unwrap, практика rust, rust онлайн-плейгрунд, rust онлайн"
      },
      "details": {
        "steps": [
          {
            "title": "Option & unwrap",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "На данный момент эта стадия не имеет проверки",
                "file": "verify1-1.sh",
                "hint": "На данный момент эта стадия не имеет проверки"
              }
            ]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    }
  ]
}
