{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Option & Unwrap",
  "description": "In this lab, we learn about the Option enum in Rust's std library, which is used to handle cases where absence is a possibility. It provides two options: Some(T) for when an element of type T is found, and None for when no element is found. These cases can be explicitly handled using match or implicitly handled using unwrap. Explicit handling allows for greater control and meaningful output, while unwrap can either return the inner element or induce a panic.",
  "meta": {
    "title": "Mastering Rust's Option and Unwrap Concepts",
    "description": "Explore the powerful Option enum and unwrap functionality in Rust, learn to handle absence and prevent program failures.",
    "keywords": "rust playground, error handling, option, rust tutor, rust online compiler, rust commands, unwrap, rust practice, rust online playground, rust online"
  },
  "difficulty": "Beginner",
  "time": 5,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Option & unwrap",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "This step has no verification at the moment",
            "file": "verify1-1.sh",
            "hint": "This step has no verification at the moment",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "rust/expressions_statements",
          "rust/function_syntax",
          "rust/method_syntax",
          "rust/panic_usage",
          "rust/string_type",
          "rust/variable_declarations"
        ]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": [],
  "license": {
    "name": "MIT",
    "url": "https://github.com/rust-lang/rust-by-example/blob/master/LICENSE-MIT",
    "repo": "https://github.com/rust-lang/rust-by-example"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "Option 与 Unwrap",
      "description": "在本实验中，我们学习 Rust 标准库中的 Option 枚举，它用于处理可能不存在值的情况。它提供了两种选项：当找到类型为 T 的元素时为 Some(T)，当未找到元素时为 None。这些情况可以使用 match 进行显式处理，也可以使用 unwrap 进行隐式处理。显式处理允许更大的控制权和有意义的输出，而 unwrap 要么返回内部元素，要么引发恐慌。",
      "meta": {
        "title": "掌握 Rust 的 Option 和 Unwrap 概念",
        "description": "探索 Rust 中强大的 Option 枚举和 unwrap 功能，学习处理值缺失并防止程序失败。",
        "keywords": "Rust 在线游乐场, 错误处理, Option, Rust 教程, Rust 在线编译器, Rust 命令, unwrap, Rust 练习, Rust 在线游乐场, Rust 在线"
      },
      "details": {
        "steps": [
          {
            "title": "Option 与 unwrap",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "此步骤目前没有验证",
                "file": "verify1-1.sh",
                "hint": "此步骤目前没有验证"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    }
  ]
}
