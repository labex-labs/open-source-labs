{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Customizing Rust Struct Output with fmt::Display",
  "description": "In this lab, you will learn how to implement the fmt::Display trait in Rust to customize the output appearance of a structure. You will also explore the difference between fmt::Display and fmt::Debug, as well as the limitations of fmt::Display for generic container types. Finally, you will have an activity to implement the fmt::Display trait for a new Complex struct and print it in a specific format.",
  "meta": {
    "title": "Rust Programming | Implementing fmt::Display Trait",
    "description": "Learn how to implement the fmt::Display trait in Rust to customize the output appearance of a structure, explore the difference between fmt::Display and fmt::Debug, and implement the fmt::Display trait for a new Complex struct.",
    "keywords": "Rust, Programming, fmt::Display, fmt::Debug, Complex, Struct"
  },
  "difficulty": "Beginner",
  "time": 5,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Display",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "This step has no verification at the moment",
            "file": "verify1-1.sh",
            "hint": "This step has no verification at the moment",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "rust/expressions_statements",
          "rust/floating_types",
          "rust/function_syntax",
          "rust/integer_types",
          "rust/traits",
          "rust/variable_declarations"
        ]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": [],
  "license": {
    "name": "MIT",
    "url": "https://github.com/rust-lang/rust-by-example/blob/master/LICENSE-MIT",
    "repo": "https://github.com/rust-lang/rust-by-example"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "使用fmt::Display自定义Rust结构体输出",
      "description": "在本实验中，你将学习如何在Rust中实现fmt::Display特性，以自定义结构体的输出外观。你还将探讨fmt::Display和fmt::Debug之间的区别，以及fmt::Display对通用容器类型的局限性。最后，你将进行一项活动，为新的Complex结构体实现fmt::Display特性，并以特定格式打印它。",
      "meta": {
        "title": "Rust编程 | 实现fmt::Display特性",
        "description": "学习如何在Rust中实现fmt::Display特性，以自定义结构体的输出外观，探讨fmt::Display和fmt::Debug之间的区别，并为新的Complex结构体实现fmt::Display特性。",
        "keywords": "Rust,编程,fmt::Display,fmt::Debug,Complex,结构体"
      },
      "details": {
        "steps": [
          {
            "title": "格式化显示",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "此步骤目前没有验证",
                "file": "verify1-1.sh",
                "hint": "此步骤目前没有验证"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Personalizar la salida de structs en Rust con fmt::Display",
      "description": "En este laboratorio, aprenderás a implementar el trato fmt::Display en Rust para personalizar la apariencia de salida de una estructura. También explorarás la diferencia entre fmt::Display y fmt::Debug, así como las limitaciones de fmt::Display para tipos de contenedores genéricos. Finalmente, tendrás una actividad para implementar el trato fmt::Display para un nuevo struct Complex y mostrarlo en un formato específico.",
      "meta": {
        "title": "Programación en Rust | Implementando el trato fmt::Display",
        "description": "Aprende a implementar el trato fmt::Display en Rust para personalizar la apariencia de salida de una estructura, explora la diferencia entre fmt::Display y fmt::Debug e implementa el trato fmt::Display para un nuevo struct Complex.",
        "keywords": "Rust, Programación, fmt::Display, fmt::Debug, Complex, Struct"
      },
      "details": {
        "steps": [
          {
            "title": "Display",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "En este momento, este paso no tiene verificaciones",
                "file": "verify1-1.sh",
                "hint": "En este momento, este paso no tiene verificaciones"
              }
            ]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Personnaliser la sortie d'une structure Rust avec fmt::Display",
      "description": "Dans ce laboratoire, vous allez apprendre à implémenter le trait fmt::Display en Rust pour personnaliser l'apparence de la sortie d'une structure. Vous allez également explorer la différence entre fmt::Display et fmt::Debug, ainsi que les limites de fmt::Display pour les types de conteneurs génériques. Enfin, vous aurez une activité pour implémenter le trait fmt::Display pour une nouvelle structure Complex et l'afficher dans un format spécifique.",
      "meta": {
        "title": "Programmation Rust | Implémentation du trait fmt::Display",
        "description": "Apprenez à implémenter le trait fmt::Display en Rust pour personnaliser l'apparence de la sortie d'une structure, explorez la différence entre fmt::Display et fmt::Debug, et implémentez le trait fmt::Display pour une nouvelle structure Complex.",
        "keywords": "Rust, Programmation, fmt::Display, fmt::Debug, Complex, Struct"
      },
      "details": {
        "steps": [
          {
            "title": "Affichage",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Cette étape n'a pas de vérification pour le moment",
                "file": "verify1-1.sh",
                "hint": "Cette étape n'a pas de vérification pour le moment"
              }
            ]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Anpassen der Rust-Strukturausgabe mit fmt::Display",
      "description": "In diesem Lab lernst du, wie du das fmt::Display-Trait in Rust implementierst, um das Ausgabeverhalten einer Struktur anzupassen. Du wirst auch untersuchen, was das Unterschied zwischen fmt::Display und fmt::Debug ist, sowie die Einschränkungen von fmt::Display für generische Containertypen. Schließlich wirst du eine Aktivität durchführen, um das fmt::Display-Trait für eine neue Complex-Struktur zu implementieren und sie in einem bestimmten Format auszugeben.",
      "meta": {
        "title": "Rust-Programmierung | Implementierung des fmt::Display-Traits",
        "description": "Lerne, wie du das fmt::Display-Trait in Rust implementierst, um das Ausgabeverhalten einer Struktur anzupassen, untersuche den Unterschied zwischen fmt::Display und fmt::Debug und implementiere das fmt::Display-Trait für eine neue Complex-Struktur.",
        "keywords": "Rust, Programmierung, fmt::Display, fmt::Debug, Complex, Struktur"
      },
      "details": {
        "steps": [
          {
            "title": "Anzeige",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Dieser Schritt hat momentan keine Verifizierung",
                "file": "verify1-1.sh",
                "hint": "Dieser Schritt hat momentan keine Verifizierung"
              }
            ]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "fmt::Displayを使ったRust構造体の出力カスタマイズ",
      "description": "この実験では、Rustでfmt::Displayトレイトを実装して構造体の出力外観をカスタマイズする方法を学びます。また、fmt::Displayとfmt::Debugの違いや、ジェネリックコンテナ型に対するfmt::Displayの制限についても探ります。最後に、新しいComplex構造体に対してfmt::Displayトレイトを実装し、特定の形式で出力するアクティビティを行います。",
      "meta": {
        "title": "Rustプログラミング | fmt::Displayトレイトの実装",
        "description": "Rustでfmt::Displayトレイトを実装して構造体の出力外観をカスタマイズする方法、fmt::Displayとfmt::Debugの違いを学び、新しいComplex構造体に対してfmt::Displayトレイトを実装しましょう。",
        "keywords": "Rust, プログラミング, fmt::Display, fmt::Debug, Complex, 構造体"
      },
      "details": {
        "steps": [
          {
            "title": "表示",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "このステップには現在、検証はありません",
                "file": "verify1-1.sh",
                "hint": "このステップには現在、検証はありません"
              }
            ]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Настройка вывода структуры в Rust с использованием fmt::Display",
      "description": "В этом практическом занятии вы научитесь реализовывать трейт fmt::Display в Rust для настройки внешнего вида вывода структуры. Также вы изучите разницу между fmt::Display и fmt::Debug, а также ограничения fmt::Display для обобщенных типов контейнеров. Наконец, у вас будет задание по реализации трейта fmt::Display для новой структуры Complex и выводу ее в определенном формате.",
      "meta": {
        "title": "Программирование на Rust | Реализация трейта fmt::Display",
        "description": "Изучите, как реализовать трейт fmt::Display в Rust для настройки внешнего вида вывода структуры, изучите разницу между fmt::Display и fmt::Debug, и реализуйте трейт fmt::Display для новой структуры Complex.",
        "keywords": "Rust, Программирование, fmt::Display, fmt::Debug, Complex, Структура"
      },
      "details": {
        "steps": [
          {
            "title": "Display",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "На этом этапе проверок нет в настоящее время",
                "file": "verify1-1.sh",
                "hint": "На этом этапе проверок нет в настоящее время"
              }
            ]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    }
  ]
}
