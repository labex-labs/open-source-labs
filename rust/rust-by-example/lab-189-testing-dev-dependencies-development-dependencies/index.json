{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Cargo Dependency Management in Rust",
  "description": "In this lab, the concept of development dependencies is explained. Development dependencies are added in the [dev-dependencies] section of the Cargo.toml file and are used for tests, examples, or benchmarks. An example of a development dependency is pretty_assertions, which extends standard macros like assert_eq! and assert_ne! to provide colorful diffs.",
  "meta": {
    "title": "Mastering Cargo Dependency Management in Rust",
    "description": "Explore the power of development dependencies in Rust, including the use of the 'pretty_assertions' library for enhanced testing.",
    "keywords": "cargo, rust playground, rust online ide, rust tutor, rust online compiler, rust commands, rust practice, rust online playground, rust online, dependency management"
  },
  "difficulty": "Beginner",
  "time": 5,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Development dependencies",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "This step has no verification at the moment",
            "file": "verify1-1.sh",
            "hint": "This step has no verification at the moment",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "rust/expressions_statements",
          "rust/function_syntax",
          "rust/integer_types",
          "rust/operator_overloading"
        ]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": [],
  "license": {
    "name": "MIT",
    "url": "https://github.com/rust-lang/rust-by-example/blob/master/LICENSE-MIT",
    "repo": "https://github.com/rust-lang/rust-by-example"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "Rust 中的 Cargo 依赖管理",
      "description": "在本实验中，将解释开发依赖项的概念。开发依赖项添加在 Cargo.toml 文件的 [dev-dependencies] 部分中，用于测试、示例或基准测试。开发依赖项的一个示例是 pretty_assertions，它扩展了标准宏，如 assert_eq! 和 assert_ne!，以提供彩色差异。",
      "meta": {
        "title": "精通 Rust 中的 Cargo 依赖管理",
        "description": "探索 Rust 中开发依赖项的强大功能，包括使用 'pretty_assertions' 库进行增强测试。",
        "keywords": "Cargo，Rust 游乐场，Rust 在线 IDE，Rust 教程，Rust 在线编译器，Rust 命令，Rust 练习，Rust 在线游乐场，Rust 在线，依赖管理"
      },
      "details": {
        "steps": [
          {
            "title": "开发依赖项",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "此步骤目前没有验证",
                "file": "verify1-1.sh",
                "hint": "此步骤目前没有验证"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Gestión de dependencias de Cargo en Rust",
      "description": "En este laboratorio, se explica el concepto de dependencias de desarrollo. Las dependencias de desarrollo se agregan en la sección [dev-dependencias] del archivo Cargo.toml y se utilizan para pruebas, ejemplos o benchmarks. Un ejemplo de dependencia de desarrollo es pretty_assertions, que extiende macros estándar como assert_eq! y assert_ne! para proporcionar diferencias en color.",
      "meta": {
        "title": "Dominando la gestión de dependencias de Cargo en Rust",
        "description": "Explora el poder de las dependencias de desarrollo en Rust, incluyendo el uso de la biblioteca 'pretty_assertions' para una prueba mejorada.",
        "keywords": "cargo, playground de rust, IDE en línea de rust, tutor de rust, compilador en línea de rust, comandos de rust, práctica de rust, playground en línea de rust, rust en línea, gestión de dependencias"
      },
      "details": {
        "steps": [
          {
            "title": "Dependencias de desarrollo",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Este paso no tiene verificación en este momento",
                "file": "verify1-1.sh",
                "hint": "Este paso no tiene verificación en este momento"
              }
            ]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Gestion des dépendances Cargo en Rust",
      "description": "Dans ce laboratoire, le concept de dépendances de développement est expliqué. Les dépendances de développement sont ajoutées dans la section [dev-dependencies] du fichier Cargo.toml et sont utilisées pour les tests, les exemples ou les benchmarks. Un exemple de dépendance de développement est pretty_assertions, qui étend les macros standard telles que assert_eq! et assert_ne! pour fournir des différences colorées.",
      "meta": {
        "title": "Maîtriser la gestion des dépendances Cargo en Rust",
        "description": "Explorez le pouvoir des dépendances de développement en Rust, y compris l'utilisation de la bibliothèque 'pretty_assertions' pour un test amélioré.",
        "keywords": "cargo, terrain de jeu rust, IDE en ligne rust, tuteur rust, compilateur en ligne rust, commandes rust, pratique rust, terrain de jeu en ligne rust, rust en ligne, gestion des dépendances"
      },
      "details": {
        "steps": [
          {
            "title": "Dépendances de développement",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Cette étape n'a pas de vérification pour le moment",
                "file": "verify1-1.sh",
                "hint": "Cette étape n'a pas de vérification pour le moment"
              }
            ]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Cargo Abhängigkeitsverwaltung in Rust",
      "description": "In diesem Lab wird das Konzept der Entwicklungsabhängigkeiten erklärt. Entwicklungsabhängigkeiten werden im Abschnitt [dev-dependencies] der Cargo.toml-Datei hinzugefügt und werden für Tests, Beispiele oder Benchmarks verwendet. Ein Beispiel für eine Entwicklungsabhängigkeit ist pretty_assertions, das standardmäßige Makros wie assert_eq! und assert_ne! erweitert, um farbige Differenzen bereitzustellen.",
      "meta": {
        "title": "Meister der Cargo-Abhängigkeitsverwaltung in Rust",
        "description": "Entdecken Sie die Macht der Entwicklungsabhängigkeiten in Rust, einschließlich der Verwendung der Bibliothek 'pretty_assertions' für eine verbesserte Tests.",
        "keywords": "cargo, rust playground, rust online ide, rust tutor, rust online compiler, rust Befehle, rust Übung, rust online playground, rust online, Abhängigkeitsverwaltung"
      },
      "details": {
        "steps": [
          {
            "title": "Entwicklungsabhängigkeiten",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Dieser Schritt hat momentan keine Verifizierung",
                "file": "verify1-1.sh",
                "hint": "Dieser Schritt hat momentan keine Verifizierung"
              }
            ]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "RustにおけるCargo依存関係管理",
      "description": "この実験では、開発依存関係の概念について説明します。開発依存関係は、Cargo.tomlファイルの[dev-dependencies]セクションに追加され、テスト、サンプル、またはベンチマークに使用されます。開発依存関係の例として、pretty_assertionsがあります。これは、assert_eq!やassert_ne!などの標準マクロを拡張して、カラー付きの差分を提供します。",
      "meta": {
        "title": "RustにおけるCargo依存関係管理のマスター",
        "description": "Rustにおける開発依存関係の力を探求し、強化されたテストに対する'pretty_assertions'ライブラリの使用を含めます。",
        "keywords": "cargo, rust playground, rust online ide, rust tutor, rust online compiler, rust commands, rust practice, rust online playground, rust online, 依存関係管理"
      },
      "details": {
        "steps": [
          {
            "title": "開発依存関係",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "このステップには現在検証はありません",
                "file": "verify1-1.sh",
                "hint": "このステップには現在検証はありません"
              }
            ]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Управление зависимостями Cargo в Rust",
      "description": "В этой лабораторной работе объясняется концепция зависимостей разработки. Зависимости разработки добавляются в раздел [dev-dependencies] файла Cargo.toml и используются для тестов, примеров или бенчмарков. Примером зависимости разработки является pretty_assertions, который расширяет стандартные макросы, такие как assert_eq! и assert_ne!, чтобы предоставить цветные различия.",
      "meta": {
        "title": "Мастерство в управлении зависимостями Cargo в Rust",
        "description": "Изучите мощь зависимостей разработки в Rust, включая использование библиотеки 'pretty_assertions' для улучшенного тестирования.",
        "keywords": "cargo, rust playground, rust online ide, rust tutor, rust online compiler, rust commands, rust practice, rust online playground, rust online, управление зависимостями"
      },
      "details": {
        "steps": [
          {
            "title": "Зависимости разработки",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "На данный момент эта стадия не имеет проверки",
                "file": "verify1-1.sh",
                "hint": "На данный момент эта стадия не имеет проверки"
              }
            ]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    }
  ]
}
