{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Executing Child Processes in Rust",
  "description": "In this lab, we learn about child processes in Rust using the process::Output struct to represent the output of a finished child process and the process::Command struct to build processes. The example code demonstrates how to execute the rustc --version command and handle the output accordingly by checking if the process succeeded or failed.",
  "meta": {
    "title": "Rust Child Processes | Process Output | Command Execution",
    "description": "Learn about child processes in Rust using the process::Output struct and process::Command. Discover how to execute commands and handle their output effectively.",
    "keywords": "Rust, child processes, process output, process command, command execution"
  },
  "difficulty": "Beginner",
  "time": 5,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Child processes",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "This step has no verification at the moment",
            "file": "verify1-1.sh",
            "hint": "This step has no verification at the moment",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": []
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": [],
  "license": {
    "name": "MIT",
    "url": "https://github.com/rust-lang/rust-by-example/blob/master/LICENSE-MIT",
    "repo": "https://github.com/rust-lang/rust-by-example"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "在 Rust 中执行子进程",
      "description": "在本实验中，我们学习 Rust 中的子进程，使用 process::Output 结构体来表示已完成的子进程的输出，并使用 process::Command 结构体来构建进程。示例代码展示了如何执行 rustc --version 命令，并通过检查进程是否成功来相应地处理输出。",
      "meta": {
        "title": "Rust 子进程 | 进程输出 | 命令执行",
        "description": "使用 process::Output 结构体和 process::Command 了解 Rust 中的子进程。探索如何有效执行命令并处理其输出。",
        "keywords": "Rust, 子进程，进程输出，进程命令，命令执行"
      },
      "details": {
        "steps": [
          {
            "title": "子进程",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "此步骤目前没有验证",
                "file": "verify1-1.sh",
                "hint": "此步骤目前没有验证"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Ejecución de Procesos Hijos en Rust",
      "description": "En este laboratorio, aprendemos sobre los procesos hijos en Rust utilizando la estructura process::Output para representar la salida de un proceso hijo finalizado y la estructura process::Command para construir procesos. El código de ejemplo demuestra cómo ejecutar el comando rustc --version y manejar la salida en consecuencia comprobando si el proceso tuvo éxito o fracasó.",
      "meta": {
        "title": "Procesos Hijos de Rust | Salida del Proceso | Ejecución del Comando",
        "description": "Aprende sobre los procesos hijos en Rust utilizando la estructura process::Output y process::Command. Descubre cómo ejecutar comandos y manejar su salida de manera efectiva.",
        "keywords": "Rust, procesos hijos, salida del proceso, comando del proceso, ejecución del comando"
      },
      "details": {
        "steps": [
          {
            "title": "Procesos hijos",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Este paso no tiene verificación en este momento",
                "file": "verify1-1.sh",
                "hint": "Este paso no tiene verificación en este momento"
              }
            ]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Exécution de processus enfants en Rust",
      "description": "Dans ce laboratoire, nous apprenons à utiliser les processus enfants en Rust en utilisant la structure process::Output pour représenter la sortie d'un processus enfant terminé et la structure process::Command pour construire des processus. Le code d'exemple montre comment exécuter la commande rustc --version et gérer la sortie en vérifiant si le processus a réussi ou échoué.",
      "meta": {
        "title": "Processus enfants Rust | Sortie du processus | Exécution de commande",
        "description": "Apprenez à utiliser les processus enfants en Rust en utilisant la structure process::Output et process::Command. Découvrez comment exécuter des commandes et gérer leur sortie efficacement.",
        "keywords": "Rust, processus enfants, sortie du processus, commande de processus, exécution de commande"
      },
      "details": {
        "steps": [
          {
            "title": "Processus enfants",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Cette étape n'a pas de vérification pour le moment",
                "file": "verify1-1.sh",
                "hint": "Cette étape n'a pas de vérification pour le moment"
              }
            ]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Ausführen von Kindprozessen in Rust",
      "description": "In diesem Lab lernen wir über die Kindprozesse in Rust, indem wir die process::Output-Struktur verwenden, um die Ausgabe eines abgeschlossenen Kindprozesses darzustellen, und die process::Command-Struktur, um Prozesse zu erstellen. Der Beispielcode zeigt, wie man den Befehl rustc --version ausführt und die Ausgabe entsprechend behandelt, indem man überprüft, ob der Prozess erfolgreich war oder fehlgeschlagen ist.",
      "meta": {
        "title": "Rust Kindprozesse | Prozessausgabe | Befehlsausführung",
        "description": "Lernen Sie über die Kindprozesse in Rust, indem Sie die process::Output-Struktur und process::Command verwenden. Entdecken Sie, wie Sie Befehle ausführen und deren Ausgabe effektiv behandeln.",
        "keywords": "Rust, Kindprozesse, Prozessausgabe, Prozessbefehl, Befehlsausführung"
      },
      "details": {
        "steps": [
          {
            "title": "Kindprozesse",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Dieser Schritt hat momentan keine Verifizierung",
                "file": "verify1-1.sh",
                "hint": "Dieser Schritt hat momentan keine Verifizierung"
              }
            ]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "Rust で子プロセスを実行する",
      "description": "この実験では、完了した子プロセスの出力を表す process::Output 構造体と、プロセスを構築する process::Command 構造体を使って、Rust の子プロセスについて学びます。サンプルコードは、rustc --version コマンドを実行し、プロセスが成功したか失敗したかを確認することで出力を処理する方法を示しています。",
      "meta": {
        "title": "Rust の子プロセス | プロセス出力 | コマンド実行",
        "description": "process::Output 構造体と process::Command を使って、Rust の子プロセスについて学びましょう。コマンドを実行し、その出力を効果的に処理する方法を見つけましょう。",
        "keywords": "Rust, 子プロセス，プロセス出力，プロセスコマンド，コマンド実行"
      },
      "details": {
        "steps": [
          {
            "title": "子プロセス",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "このステップには現在、検証項目がありません",
                "file": "verify1-1.sh",
                "hint": "このステップには現在、検証項目がありません"
              }
            ]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Выполнение дочерних процессов в Rust",
      "description": "В этом лабораторном задании мы изучаем дочерние процессы в Rust, используя структуру process::Output для представления вывода завершенного дочернего процесса и структуру process::Command для построения процессов. Пример кода демонстрирует, как выполнить команду rustc --version и обработать вывод в зависимости от того, завершилась ли команда успешно или с ошибкой.",
      "meta": {
        "title": "Дочерние процессы Rust | Вывод процесса | Выполнение команды",
        "description": "Изучите дочерние процессы в Rust с использованием структуры process::Output и process::Command. Узнать, как выполнять команды и эффективно обрабатывать их вывод.",
        "keywords": "Rust, дочерние процессы, вывод процесса, команда процесса, выполнение команды"
      },
      "details": {
        "steps": [
          {
            "title": "Дочерние процессы",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "На данный момент эта стадия не имеет проверки",
                "file": "verify1-1.sh",
                "hint": "На данный момент эта стадия не имеет проверки"
              }
            ]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    },
    {
      "lang": "ko",
      "title": "Rust 에서 자식 프로세스 실행하기",
      "description": "이 실습에서는 Rust 에서 자식 프로세스에 대해 배우고, process::Output 구조체를 사용하여 완료된 자식 프로세스의 출력을 나타내며, process::Command 구조체를 사용하여 프로세스를 생성합니다. 예제 코드는 rustc --version 명령을 실행하고, 프로세스 성공 여부를 확인하여 출력을 적절하게 처리하는 방법을 보여줍니다.",
      "meta": {
        "title": "Rust 자식 프로세스 | 프로세스 출력 | 명령 실행",
        "description": "Rust 에서 process::Output 구조체와 process::Command 를 사용하여 자식 프로세스에 대해 배우고, 명령을 실행하고 출력을 효과적으로 처리하는 방법을 알아보세요.",
        "keywords": "Rust, 자식 프로세스, 프로세스 출력, 프로세스 명령, 명령 실행, rustc, 명령어 실행, 프로세스 관리, 프로그램 실행"
      },
      "details": {
        "steps": [
          {
            "title": "자식 프로세스",
            "text": "ko/step1.md",
            "verify": [
              {
                "name": "현재 이 단계에는 검증이 없습니다.",
                "file": "verify1-1.sh",
                "hint": "현재 이 단계에는 검증이 없습니다."
              }
            ]
          }
        ],
        "intro": {
          "text": "ko/intro.md",
          "title": "소개"
        },
        "finish": {
          "text": "ko/finish.md",
          "title": "요약"
        }
      }
    },
    {
      "lang": "pt",
      "title": "Executando Processos Filhos em Rust",
      "description": "Neste laboratório, aprendemos sobre processos filhos em Rust utilizando a estrutura process::Output para representar a saída de um processo filho concluído e a estrutura process::Command para construir processos. O código de exemplo demonstra como executar o comando rustc --version e lidar com a saída correspondentemente, verificando se o processo teve sucesso ou falhou.",
      "meta": {
        "title": "Processos Filhos em Rust | Saída de Processo | Execução de Comandos",
        "description": "Aprenda sobre processos filhos em Rust utilizando as estruturas process::Output e process::Command. Descubra como executar comandos e lidar com suas saídas de forma eficaz.",
        "keywords": "Rust, processos filhos, saída de processo, comando de processo, execução de comandos, rustc, comandos, processos, desenvolvimento rust, programação rust"
      },
      "details": {
        "steps": [
          {
            "title": "Processos Filhos",
            "text": "pt/step1.md",
            "verify": [
              {
                "name": "Esta etapa não possui verificação no momento",
                "file": "verify1-1.sh",
                "hint": "Esta etapa não possui verificação no momento"
              }
            ]
          }
        ],
        "intro": {
          "text": "pt/intro.md",
          "title": "Introdução"
        },
        "finish": {
          "text": "pt/finish.md",
          "title": "Resumo"
        }
      }
    }
  ]
}
