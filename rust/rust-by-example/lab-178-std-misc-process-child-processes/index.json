{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Executing Child Processes in Rust",
  "description": "In this lab, we learn about child processes in Rust using the process::Output struct to represent the output of a finished child process and the process::Command struct to build processes. The example code demonstrates how to execute the rustc --version command and handle the output accordingly by checking if the process succeeded or failed.",
  "meta": {
    "title": "Rust Child Processes | Process Output | Command Execution",
    "description": "Learn about child processes in Rust using the process::Output struct and process::Command. Discover how to execute commands and handle their output effectively.",
    "keywords": "Rust, child processes, process output, process command, command execution"
  },
  "difficulty": "Beginner",
  "time": 5,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Child processes",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "This step has no verification at the moment",
            "file": "verify1-1.sh",
            "hint": "This step has no verification at the moment",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "rust/expressions_statements",
          "rust/function_syntax",
          "rust/method_syntax",
          "rust/panic_usage",
          "rust/string_type",
          "rust/variable_declarations"
        ]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": [],
  "license": {
    "name": "MIT",
    "url": "https://github.com/rust-lang/rust-by-example/blob/master/LICENSE-MIT",
    "repo": "https://github.com/rust-lang/rust-by-example"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "在 Rust 中执行子进程",
      "description": "在本实验中，我们学习 Rust 中的子进程，使用 process::Output 结构体来表示已完成的子进程的输出，并使用 process::Command 结构体来构建进程。示例代码展示了如何执行 rustc --version 命令，并通过检查进程是否成功来相应地处理输出。",
      "meta": {
        "title": "Rust 子进程 | 进程输出 | 命令执行",
        "description": "使用 process::Output 结构体和 process::Command 了解 Rust 中的子进程。探索如何有效执行命令并处理其输出。",
        "keywords": "Rust, 子进程, 进程输出, 进程命令, 命令执行"
      },
      "details": {
        "steps": [
          {
            "title": "子进程",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "此步骤目前没有验证",
                "file": "verify1-1.sh",
                "hint": "此步骤目前没有验证"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    }
  ]
}
