{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Pulling Results Out of Options",
  "description": "In this lab, we will learn how to handle mixed error types by embedding them within each other using Option and Result types in Rust.",
  "meta": {
    "title": "Handling Mixed Error Types in Rust",
    "description": "Learn how to use Option and Result types to manage different error scenarios in Rust programming.",
    "keywords": "rust playground, error handling, rust online ide, programming tutorial, option, rust tutor, rust online compiler, rust commands, rust practice, rust online"
  },
  "difficulty": "Beginner",
  "time": 5,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Pulling Results out of Options",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "This step has no verification at the moment",
            "file": "verify1-1.sh",
            "hint": "This step has no verification at the moment",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "rust/expressions_statements",
          "rust/function_syntax",
          "rust/integer_types",
          "rust/lifetime_specifiers",
          "rust/method_syntax",
          "rust/operator_overloading",
          "rust/string_type",
          "rust/variable_declarations"
        ]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": [],
  "license": {
    "name": "MIT",
    "url": "https://github.com/rust-lang/rust-by-example/blob/master/LICENSE-MIT",
    "repo": "https://github.com/rust-lang/rust-by-example"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "从 Option 中提取 Result",
      "description": "在本实验中，我们将学习如何通过在 Rust 中使用 Option 和 Result 类型将混合错误类型相互嵌套来处理它们。",
      "meta": {
        "title": "Rust 中处理混合错误类型",
        "description": "学习如何在 Rust 编程中使用 Option 和 Result 类型来管理不同的错误场景。",
        "keywords": "rust 游乐场, 错误处理, rust 在线 IDE, 编程教程, option, rust 教程, rust 在线编译器, rust 命令, rust 练习, rust 在线"
      },
      "details": {
        "steps": [
          {
            "title": "从 Option 中提取 Result",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "此步骤目前没有验证",
                "file": "verify1-1.sh",
                "hint": "此步骤目前没有验证"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    }
  ]
}
