{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Pulling Results Out of Options",
  "description": "In this lab, we will learn how to handle mixed error types by embedding them within each other using Option and Result types in Rust.",
  "meta": {
    "title": "Handling Mixed Error Types in Rust",
    "description": "Learn how to use Option and Result types to manage different error scenarios in Rust programming.",
    "keywords": "rust playground, error handling, rust online ide, programming tutorial, option, rust tutor, rust online compiler, rust commands, rust practice, rust online"
  },
  "difficulty": "Beginner",
  "time": 5,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Pulling Results out of Options",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "This step has no verification at the moment",
            "file": "verify1-1.sh",
            "hint": "This step has no verification at the moment",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "rust/expressions_statements",
          "rust/function_syntax",
          "rust/integer_types",
          "rust/lifetime_specifiers",
          "rust/method_syntax",
          "rust/operator_overloading",
          "rust/string_type",
          "rust/variable_declarations"
        ]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": [],
  "license": {
    "name": "MIT",
    "url": "https://github.com/rust-lang/rust-by-example/blob/master/LICENSE-MIT",
    "repo": "https://github.com/rust-lang/rust-by-example"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "从 Option 中提取 Result",
      "description": "在本实验中，我们将学习如何通过在 Rust 中使用 Option 和 Result 类型将混合错误类型相互嵌套来处理它们。",
      "meta": {
        "title": "Rust 中处理混合错误类型",
        "description": "学习如何在 Rust 编程中使用 Option 和 Result 类型来管理不同的错误场景。",
        "keywords": "rust 游乐场，错误处理，rust 在线 IDE, 编程教程，option, rust 教程，rust 在线编译器，rust 命令，rust 练习，rust 在线"
      },
      "details": {
        "steps": [
          {
            "title": "从 Option 中提取 Result",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "此步骤目前没有验证",
                "file": "verify1-1.sh",
                "hint": "此步骤目前没有验证"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Sacando Resultados de Opciones",
      "description": "En este laboratorio, aprenderemos a manejar diferentes tipos de errores mediante la incrustación de errores dentro de otros errores utilizando los tipos Option y Result en Rust.",
      "meta": {
        "title": "Manejo de diferentes tipos de errores en Rust",
        "description": "Aprende a utilizar los tipos Option y Result para manejar diferentes escenarios de error en la programación de Rust.",
        "keywords": "playground de rust, manejo de errores, IDE en línea de rust, tutorial de programación, opción, tutor de rust, compilador en línea de rust, comandos de rust, práctica de rust, rust en línea"
      },
      "details": {
        "steps": [
          {
            "title": "Sacando Resultados de Opciones",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Este paso no tiene verificaciones en este momento",
                "file": "verify1-1.sh",
                "hint": "Este paso no tiene verificaciones en este momento"
              }
            ]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Extraire les résultats des options",
      "description": "Dans ce laboratoire, nous allons apprendre à gérer différents types d'erreurs en les emboîtant les uns dans les autres à l'aide des types Option et Result en Rust.",
      "meta": {
        "title": "Gérer différents types d'erreurs en Rust",
        "description": "Découvrez comment utiliser les types Option et Result pour gérer différents scénarios d'erreur en programmation Rust.",
        "keywords": "plateforme de développement Rust, gestion d'erreurs, IDE en ligne Rust, tutoriel de programmation, option, tuteur Rust, compilateur en ligne Rust, commandes Rust, pratique Rust, Rust en ligne"
      },
      "details": {
        "steps": [
          {
            "title": "Extraire les résultats des options",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Cette étape n'a pas de vérification pour le moment",
                "file": "verify1-1.sh",
                "hint": "Cette étape n'a pas de vérification pour le moment"
              }
            ]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Resultate aus Optionen extrahieren",
      "description": "In diesem Lab werden wir lernen, wie wir gemischte Fehlerarten behandeln, indem wir sie mithilfe der Option- und Result-Typen in Rust ineinander einschließen.",
      "meta": {
        "title": "Fehlerbehandlung gemischter Typen in Rust",
        "description": "Lernen Sie, wie Sie Option- und Result-Typen verwenden, um verschiedene Fehler-Szenarien in der Rust-Programmierung zu verwalten.",
        "keywords": "Rust-Spielplatz, Fehlerbehandlung, Rust-Online-IDE, Programmier-Tutorial, Option, Rust-Lehrer, Rust-Online-Compiler, Rust-Befehle, Rust-Praxis, Rust-Online"
      },
      "details": {
        "steps": [
          {
            "title": "Resultate aus Optionen extrahieren",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Dieser Schritt hat momentan keine Verifizierung",
                "file": "verify1-1.sh",
                "hint": "Dieser Schritt hat momentan keine Verifizierung"
              }
            ]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "オプションから結果を抽出する",
      "description": "この実験では、Rust の Option 型と Result 型を使ってエラー型を相互に埋め込むことで、混合エラー型を扱う方法を学びます。",
      "meta": {
        "title": "Rust における混合エラー型の処理",
        "description": "Rust プログラミングにおいて、異なるエラーシナリオを管理するために Option 型と Result 型をどのように使うか学びましょう。",
        "keywords": "rust プレイグラウンド，エラーハンドリング，rust オンライン IDE, プログラミングチュートリアル，オプション，rust チューター, rust オンラインコンパイラ，rust コマンド，rust 練習，rust オンライン"
      },
      "details": {
        "steps": [
          {
            "title": "オプションから結果を抽出する",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "このステップには現在検証がありません",
                "file": "verify1-1.sh",
                "hint": "このステップには現在検証がありません"
              }
            ]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Извлечение результатов из вариантов",
      "description": "В этом лабе мы узнаем, как обрабатывать смешанные типы ошибок, вкладывая их друг в друга с использованием типов Option и Result в Rust.",
      "meta": {
        "title": "Обработка смешанных типов ошибок в Rust",
        "description": "Изучите, как использовать типы Option и Result для управления различными сценариями ошибок в программировании на Rust.",
        "keywords": "игровой площадка Rust, обработка ошибок, онлайн-IDE для Rust, учебник по программированию, вариант, наставник по Rust, онлайн-компилятор для Rust, команды Rust, практика Rust, Rust онлайн"
      },
      "details": {
        "steps": [
          {
            "title": "Извлечение результатов из вариантов",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "В настоящий момент эта стадия не имеет проверки",
                "file": "verify1-1.sh",
                "hint": "В настоящий момент эта стадия не имеет проверки"
              }
            ]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    }
  ]
}
