{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Filesystem Operations in Rust",
  "description": "In this lab, the std::fs module in Rust is introduced, which provides functions for filesystem operations. The lab provides examples of various filesystem operations including creating directories, creating files, reading file contents, creating symbolic links, listing directory contents, removing files, and removing directories. The code snippets demonstrate how to perform these operations using the std::fs module functions, and the expected output for each operation is provided. Additionally, an alternative implementation of the cat function using the ? notation for error handling is mentioned.",
  "meta": {
    "title": "Mastering Filesystem Operations in Rust",
    "description": "Explore the powerful capabilities of the Rust standard library's filesystem module with hands-on examples and practical applications.",
    "keywords": "rust playground, directory management, filesystem, file operations, rust tutor, rust online compiler, rust commands, rust practice, rust online, rust online playground"
  },
  "difficulty": "Beginner",
  "time": 5,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Filesystem Operations",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "This step has no verification at the moment",
            "file": "verify1-1.sh",
            "hint": "This step has no verification at the moment",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": []
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": [],
  "license": {
    "name": "MIT",
    "url": "https://github.com/rust-lang/rust-by-example/blob/master/LICENSE-MIT",
    "repo": "https://github.com/rust-lang/rust-by-example"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "Rust 中的文件系统操作",
      "description": "在本实验中，将介绍 Rust 中的 `std::fs` 模块，该模块提供了用于文件系统操作的函数。本实验提供了各种文件系统操作的示例，包括创建目录、创建文件、读取文件内容、创建符号链接、列出目录内容、删除文件和删除目录。代码片段展示了如何使用 `std::fs` 模块函数执行这些操作，并提供了每个操作的预期输出。此外，还提到了使用 `?` 表示法进行错误处理的 `cat` 函数的替代实现。",
      "meta": {
        "title": "掌握 Rust 中的文件系统操作",
        "description": "通过实际示例和实际应用探索 Rust 标准库文件系统模块的强大功能。",
        "keywords": "Rust 游乐场，目录管理，文件系统，文件操作，Rust 教程，Rust 在线编译器，Rust 命令，Rust 实践，Rust 在线，Rust 在线游乐场"
      },
      "details": {
        "steps": [
          {
            "title": "文件系统操作",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "此步骤目前没有验证",
                "file": "verify1-1.sh",
                "hint": "此步骤目前没有验证"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Operaciones del sistema de archivos en Rust",
      "description": "En este laboratorio, se introduce el módulo std::fs de Rust, que proporciona funciones para las operaciones del sistema de archivos. El laboratorio presenta ejemplos de diversas operaciones del sistema de archivos, incluyendo la creación de directorios, la creación de archivos, la lectura del contenido de archivos, la creación de enlaces simbólicos, la lista del contenido de un directorio, la eliminación de archivos y la eliminación de directorios. Los fragmentos de código demuestran cómo realizar estas operaciones utilizando las funciones del módulo std::fs, y se proporciona la salida esperada para cada operación. Además, se menciona una implementación alternativa de la función cat que utiliza la notación? para el manejo de errores.",
      "meta": {
        "title": "Dominando las Operaciones del sistema de archivos en Rust",
        "description": "Explora las poderosas capacidades del módulo de sistema de archivos de la biblioteca estándar de Rust con ejemplos prácticos y aplicaciones reales.",
        "keywords": "rust playground, gestión de directorios, sistema de archivos, operaciones con archivos, tutor de rust, compilador en línea de rust, comandos de rust, práctica de rust, rust en línea, playground de rust en línea"
      },
      "details": {
        "steps": [
          {
            "title": "Operaciones del sistema de archivos",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "En este momento, este paso no tiene verificaciones",
                "file": "verify1-1.sh",
                "hint": "En este momento, este paso no tiene verificaciones"
              }
            ]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Opérations sur le système de fichiers en Rust",
      "description": "Dans ce laboratoire, le module std::fs de Rust est présenté, qui fournit des fonctions pour les opérations sur le système de fichiers. Le laboratoire fournit des exemples de diverses opérations sur le système de fichiers, notamment la création de répertoires, la création de fichiers, la lecture du contenu des fichiers, la création de liens symboliques, la liste du contenu d'un répertoire, la suppression de fichiers et la suppression de répertoires. Les extraits de code montrent comment effectuer ces opérations à l'aide des fonctions du module std::fs, et la sortie attendue pour chaque opération est fournie. De plus, une implémentation alternative de la fonction cat utilisant la notation? pour la gestion des erreurs est mentionnée.",
      "meta": {
        "title": "Maîtriser les opérations sur le système de fichiers en Rust",
        "description": "Explorez les puissantes capacités du module de système de fichiers de la bibliothèque standard de Rust avec des exemples pratiques et des applications concrètes.",
        "keywords": "plateforme de pratique Rust, gestion de répertoires, système de fichiers, opérations sur les fichiers, tutoriel Rust, compilateur en ligne Rust, commandes Rust, pratique Rust, Rust en ligne, plateforme de pratique Rust en ligne"
      },
      "details": {
        "steps": [
          {
            "title": "Opérations sur le système de fichiers",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Cette étape n'a pas de vérification pour le moment",
                "file": "verify1-1.sh",
                "hint": "Cette étape n'a pas de vérification pour le moment"
              }
            ]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Dateisystemoperationen in Rust",
      "description": "In diesem Lab wird das Modul std::fs in Rust vorgestellt, das Funktionen für Dateisystemoperationen bietet. Im Lab werden Beispiele für verschiedene Dateisystemoperationen gezeigt, darunter das Erstellen von Verzeichnissen, das Erstellen von Dateien, das Lesen von Dateiinhalten, das Erstellen von Symbolischen Links, das Auflisten von Verzeichnisinhalten, das Löschen von Dateien und das Löschen von Verzeichnissen. Die Codeausschnitte zeigen, wie diese Operationen mit den Funktionen des Moduls std::fs durchgeführt werden, und es wird die erwartete Ausgabe für jede Operation bereitgestellt. Darüber hinaus wird eine alternative Implementierung der cat-Funktion mit der?-Notation für die Fehlerbehandlung erwähnt.",
      "meta": {
        "title": "Meisterhaft in den Dateisystemoperationen in Rust",
        "description": "Erkunde die leistungsstarken Möglichkeiten des Dateisystemmoduls der Rust-Standardbibliothek mit praxisnahen Beispielen und praktischen Anwendungen.",
        "keywords": "rust playground, Verzeichnisverwaltung, Dateisystem, Dateioperationen, rust tutor, rust online compiler, rust Befehle, rust Übung, rust online, rust online playground"
      },
      "details": {
        "steps": [
          {
            "title": "Dateisystemoperationen",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Dieser Schritt hat momentan keine Verifizierung",
                "file": "verify1-1.sh",
                "hint": "Dieser Schritt hat momentan keine Verifizierung"
              }
            ]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "Rust におけるファイルシステム操作",
      "description": "この実験では、Rust の std::fs モジュールを紹介します。このモジュールは、ファイルシステム操作に関する関数を提供します。この実験では、ディレクトリの作成、ファイルの作成、ファイルの内容の読み取り、シンボリック リンクの作成、ディレクトリの内容の一覧表示、ファイルの削除、およびディレクトリの削除など、さまざまなファイルシステム操作の例を示します。コード スニペットは、std::fs モジュールの関数を使用してこれらの操作を実行する方法を示しており、各操作の予想される出力も提供されています。また、エラー処理に？表記を使用した cat 関数の代替実装についても言及しています。",
      "meta": {
        "title": "Rust におけるファイルシステム操作のマスター",
        "description": "手を動かした例と実用的なアプリケーションを使って、Rust 標準ライブラリのファイルシステムモジュールの強力な機能を探求しましょう。",
        "keywords": "rust playground, ディレクトリ管理，ファイルシステム，ファイル操作，rust tutor, rust オンラインコンパイラ，rust コマンド，rust 練習，rust オンライン，rust オンライン playground"
      },
      "details": {
        "steps": [
          {
            "title": "ファイルシステム操作",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "このステップは現在、検証項目がありません",
                "file": "verify1-1.sh",
                "hint": "このステップは現在、検証項目がありません"
              }
            ]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Операции с файловой системой в Rust",
      "description": "В этом практическом занятии рассматривается модуль std::fs в Rust, который предоставляет функции для операций с файловой системой. В практическом занятии приводятся примеры различных операций с файловой системой, включая создание директорий, создание файлов, чтение содержимого файлов, создание символических ссылок, перечисление содержимого директории, удаление файлов и удаление директорий. В примерах кода показано, как выполнять эти операции с использованием функций модуля std::fs, и для каждой операции представлен ожидаемый вывод. Кроме того, упоминается альтернативная реализация функции cat с использованием нотации? для обработки ошибок.",
      "meta": {
        "title": "Мастерство в операциях с файловой системой в Rust",
        "description": "Изучите мощные возможности файловой системы стандартной библиотеки Rust с примерами и практическими приложениями.",
        "keywords": "игровая площадка Rust, управление директориями, файловая система, операции с файлами, Руководство по Rust, онлайн-компилятор Rust, команды Rust, практика Rust, онлайн Rust, онлайн-игровая площадка Rust"
      },
      "details": {
        "steps": [
          {
            "title": "Операции с файловой системой",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "В настоящий момент эта стадия не имеет проверки",
                "file": "verify1-1.sh",
                "hint": "В настоящий момент эта стадия не имеет проверки"
              }
            ]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    },
    {
      "lang": "ko",
      "title": "Rust 에서 파일 시스템 작업",
      "description": "이 실습에서는 Rust 의 std::fs 모듈을 소개하여 파일 시스템 작업을 위한 함수를 제공합니다. 이 실습에서는 디렉토리 생성, 파일 생성, 파일 내용 읽기, 심볼릭 링크 생성, 디렉토리 내용 목록화, 파일 삭제 및 디렉토리 삭제 등 다양한 파일 시스템 작업 예제를 제공합니다. 코드 스니펫은 std::fs 모듈 함수를 사용하여 이러한 작업을 수행하는 방법을 보여주며, 각 작업에 대한 예상 출력이 제공됩니다. 또한, 에러 처리를 위한 ? 표기법을 사용하는 cat 함수의 대안 구현이 언급됩니다.",
      "meta": {
        "title": "Rust 에서 파일 시스템 작업 마스터하기",
        "description": "실습 예제와 실제 응용을 통해 Rust 표준 라이브러리의 파일 시스템 모듈의 강력한 기능을 탐색하세요.",
        "keywords": "러스트 플레이그라운드, 디렉토리 관리, 파일 시스템, 파일 작업, 러스트 튜터, 러스트 온라인 컴파일러, 러스트 명령어, 러스트 연습, 러스트 온라인, 러스트 온라인 플레이그라운드, Rust 파일 시스템, 파일 생성, 디렉토리 생성, 심볼릭 링크, 파일 읽기, 디렉토리 목록, 파일 삭제, 디렉토리 삭제"
      },
      "details": {
        "steps": [
          {
            "title": "파일 시스템 작업",
            "text": "ko/step1.md",
            "verify": [
              {
                "name": "현재 이 단계에는 검증이 없습니다.",
                "file": "verify1-1.sh",
                "hint": "현재 이 단계에는 검증이 없습니다."
              }
            ]
          }
        ],
        "intro": {
          "text": "ko/intro.md",
          "title": "소개"
        },
        "finish": {
          "text": "ko/finish.md",
          "title": "요약"
        }
      }
    },
    {
      "lang": "pt",
      "title": "Operações no Sistema de Arquivos em Rust",
      "description": "Neste laboratório, o módulo std::fs em Rust é apresentado, fornecendo funções para operações no sistema de arquivos. O laboratório fornece exemplos de várias operações no sistema de arquivos, incluindo a criação de diretórios, a criação de arquivos, a leitura do conteúdo de arquivos, a criação de links simbólicos, a listagem do conteúdo de diretórios, a remoção de arquivos e a remoção de diretórios. Os trechos de código demonstram como realizar essas operações usando as funções do módulo std::fs, e a saída esperada para cada operação é fornecida. Além disso, é mencionada uma implementação alternativa da função cat usando a notação ? para tratamento de erros.",
      "meta": {
        "title": "Dominando Operações no Sistema de Arquivos em Rust",
        "description": "Explore os poderosos recursos do módulo de sistema de arquivos da biblioteca padrão do Rust com exemplos práticos e aplicações.",
        "keywords": "rust, sistema de arquivos, operações de arquivos, gerenciamento de diretórios, rust online, playground rust, tutorial rust, exemplos rust, código rust, aprendendo rust, programação rust, desenvolvimento rust, rust para iniciantes,  operações no sistema de arquivos rust,  manipulação de arquivos rust"
      },
      "details": {
        "steps": [
          {
            "title": "Operações no Sistema de Arquivos",
            "text": "pt/step1.md",
            "verify": [
              {
                "name": "Esta etapa não possui verificação no momento",
                "file": "verify1-1.sh",
                "hint": "Esta etapa não possui verificação no momento"
              }
            ]
          }
        ],
        "intro": {
          "text": "pt/intro.md",
          "title": "Introdução"
        },
        "finish": {
          "text": "pt/finish.md",
          "title": "Resumo"
        }
      }
    }
  ]
}
