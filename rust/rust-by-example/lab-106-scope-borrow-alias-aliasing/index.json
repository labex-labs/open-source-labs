{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Rust Aliasing Concept Exploration",
  "description": "In this lab, the concept of aliasing is explored in the context of Rust programming language. Aliasing refers to the situation where multiple references are created to the same data, either as immutable or mutable borrows.",
  "meta": {
    "title": "Rust Programming | Aliasing Concepts",
    "description": "Explore the concept of aliasing in Rust programming language, including immutable and mutable borrows. Learn how to manage data references effectively.",
    "keywords": "Rust, Programming, Aliasing, Immutable Borrow, Mutable Borrow, Data References"
  },
  "difficulty": "Beginner",
  "time": 5,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Aliasing",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "This step has no verification at the moment",
            "file": "verify1-1.sh",
            "hint": "This step has no verification at the moment",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "rust/expressions_statements",
          "rust/function_syntax",
          "rust/integer_types",
          "rust/lifetime_specifiers",
          "rust/mutable_variables",
          "rust/type_casting",
          "rust/variable_declarations"
        ]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": [],
  "license": {
    "name": "MIT",
    "url": "https://github.com/rust-lang/rust-by-example/blob/master/LICENSE-MIT",
    "repo": "https://github.com/rust-lang/rust-by-example"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "探索Rust中的别名概念",
      "description": "在本实验中，我们将在Rust编程语言的背景下探讨别名的概念。别名是指对同一数据创建多个引用的情况，这些引用可以是不可变的，也可以是可变的借用。",
      "meta": {
        "title": "Rust编程 | 别名概念",
        "description": "探索Rust编程语言中的别名概念，包括不可变和可变借用。学习如何有效地管理数据引用。",
        "keywords": "Rust,编程,别名,不可变借用,可变借用,数据引用"
      },
      "details": {
        "steps": [
          {
            "title": "别名",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "此步骤目前没有验证",
                "file": "verify1-1.sh",
                "hint": "此步骤目前没有验证"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    }
  ]
}
