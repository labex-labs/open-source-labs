{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Concise Rust Option Iteration with While Let",
  "description": "In this lab, the usage of while let in Rust is demonstrated as a more concise and efficient alternative to using match sequences when incrementing variables or iterating over Option types.",
  "meta": {
    "title": "Rust Programming | Efficient Iteration with while let",
    "description": "Learn how to use the Rust 'while let' construct for more concise and efficient variable incrementation and Option type iteration compared to 'match' sequences.",
    "keywords": "Rust, programming, while let, Option, iteration, variable incrementation"
  },
  "difficulty": "Beginner",
  "time": 5,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "while let",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "This step has no verification at the moment",
            "file": "verify1-1.sh",
            "hint": "This step has no verification at the moment",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "rust/error_propagation",
          "rust/expressions_statements",
          "rust/function_syntax",
          "rust/integer_types",
          "rust/lifetime_specifiers",
          "rust/mutable_variables",
          "rust/operator_overloading",
          "rust/variable_declarations"
        ]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": [],
  "license": {
    "name": "MIT",
    "url": "https://github.com/rust-lang/rust-by-example/blob/master/LICENSE-MIT",
    "repo": "https://github.com/rust-lang/rust-by-example"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "使用 While Let 实现 Rust 简洁的 Option 迭代",
      "description": "在本实验中，展示了 Rust 中 while let 的用法，它是在递增变量或遍历 Option 类型时使用 match 序列的一种更简洁高效的替代方法。",
      "meta": {
        "title": "Rust 编程 | 使用 while let 进行高效迭代",
        "description": "了解如何使用 Rust 的 'while let' 结构，与'match' 序列相比，实现更简洁高效的变量递增和 Option 类型迭代。",
        "keywords": "Rust, 编程，while let, Option, 迭代，变量递增"
      },
      "details": {
        "steps": [
          {
            "title": "while let",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "此步骤目前没有验证",
                "file": "verify1-1.sh",
                "hint": "此步骤目前没有验证"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Iteración concisa de Option en Rust con While Let",
      "description": "En este laboratorio, se demuestra el uso de while let en Rust como una alternativa más concisa y eficiente al uso de secuencias match al incrementar variables o iterar sobre tipos Option.",
      "meta": {
        "title": "Programación en Rust | Iteración eficiente con while let",
        "description": "Aprende cómo usar la construcción 'while let' de Rust para una incrementación de variables y una iteración de tipos Option más concisas y eficientes en comparación con las secuencias'match'.",
        "keywords": "Rust, programación, while let, Option, iteración, incrementación de variables"
      },
      "details": {
        "steps": [
          {
            "title": "while let",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "En este momento, este paso no tiene verificación",
                "file": "verify1-1.sh",
                "hint": "En este momento, este paso no tiene verificación"
              }
            ]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Itération concise des Options Rust avec While Let",
      "description": "Dans ce laboratoire, l'utilisation de while let en Rust est démontrée comme une alternative plus concise et efficace à l'utilisation de séquences match lors de l'incrémentation de variables ou de l'itération sur des types Option.",
      "meta": {
        "title": "Programmation Rust | Itération efficace avec while let",
        "description": "Découvrez comment utiliser la construction Rust 'while let' pour une incrémentation de variables et une itération de types Option plus concises et efficaces par rapport aux séquences'match'.",
        "keywords": "Rust, programmation, while let, Option, itération, incrémentation de variables"
      },
      "details": {
        "steps": [
          {
            "title": "while let",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Cette étape n'a pas de vérification pour le moment",
                "file": "verify1-1.sh",
                "hint": "Cette étape n'a pas de vérification pour le moment"
              }
            ]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Kompakte Rust-Option-Iteration mit while let",
      "description": "In diesem Lab wird die Verwendung von while let in Rust als eine kompaktere und effizientere Alternative zu der Verwendung von match-Sequenzen bei der Inkrementierung von Variablen oder der Iteration über Option-Typen demonstriert.",
      "meta": {
        "title": "Rust-Programmierung | Effiziente Iteration mit while let",
        "description": "Lernen Sie, wie Sie den Rust-'while let'-Konstrukt für eine kompaktere und effizientere Variableninkrementierung und Option-Typ-Iteration im Vergleich zu'match'-Sequenzen verwenden.",
        "keywords": "Rust, Programmierung, while let, Option, Iteration, Variableninkrementierung"
      },
      "details": {
        "steps": [
          {
            "title": "while let",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Dieser Schritt hat momentan keine Verifizierung",
                "file": "verify1-1.sh",
                "hint": "Dieser Schritt hat momentan keine Verifizierung"
              }
            ]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "While Let を使った簡潔な Rust の Option 反復処理",
      "description": "この実験では、Rust における while let の使い方を示します。変数をインクリメントする場合や Option 型を反復処理する際に、match シーケンスを使うよりも、より簡潔で効率的な代替手段としての使い方です。",
      "meta": {
        "title": "Rust プログラミング | while let による効率的な反復処理",
        "description": "match シーケンスと比較して、Rust の'while let'構文を使って、より簡潔で効率的な変数インクリメントと Option 型の反復処理を学びましょう。",
        "keywords": "Rust, プログラミング，while let, Option, 反復処理，変数インクリメント"
      },
      "details": {
        "steps": [
          {
            "title": "while let",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "このステップは現在検証がありません",
                "file": "verify1-1.sh",
                "hint": "このステップは現在検証がありません"
              }
            ]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Концизительная итерация Option в Rust с использованием while let",
      "description": "В этой лабораторной работе демонстрируется использование while let в Rust в качестве более компактного и эффективного альтернативы использованию последовательностей match при инкрементировании переменных или итерировании по типам Option.",
      "meta": {
        "title": "Программирование на Rust | Эффективная итерация с while let",
        "description": "Изучите, как использовать конструкцию Rust 'while let' для более компактной и эффективной инкрементации переменных и итерации по типам Option по сравнению с последовательностями match.",
        "keywords": "Rust, программирование, while let, Option, итерация, инкрементация переменной"
      },
      "details": {
        "steps": [
          {
            "title": "while let",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "На данный момент эта стадия не имеет проверки",
                "file": "verify1-1.sh",
                "hint": "На данный момент эта стадия не имеет проверки"
              }
            ]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    },
    {
      "lang": "ko",
      "title": "Rust while let 을 활용한 간결한 옵션 반복",
      "description": "이 실습에서는 Rust 의 while let 을 사용하여 변수 증가 또는 Option 타입 반복 시 match 문열을 대체하는 더 간결하고 효율적인 방법을 보여줍니다.",
      "meta": {
        "title": "Rust 프로그래밍 | while let 을 활용한 효율적인 반복",
        "description": "Rust 의 'while let' 구문을 사용하여 'match' 문열에 비해 더 간결하고 효율적인 변수 증가 및 Option 타입 반복 방법을 배우세요.",
        "keywords": "Rust, 프로그래밍, while let, Option, 반복, 변수 증가, 루프, 반복문, 옵셔널"
      },
      "details": {
        "steps": [
          {
            "title": "while let 구문",
            "text": "ko/step1.md",
            "verify": [
              {
                "name": "현재 이 단계에는 검증이 없습니다.",
                "file": "verify1-1.sh",
                "hint": "현재 이 단계에는 검증이 없습니다."
              }
            ]
          }
        ],
        "intro": {
          "text": "ko/intro.md",
          "title": "소개"
        },
        "finish": {
          "text": "ko/finish.md",
          "title": "요약"
        }
      }
    },
    {
      "lang": "pt",
      "title": "Iteração Concisa de Opções em Rust com While Let",
      "description": "Neste laboratório, demonstra-se o uso de while let em Rust como uma alternativa mais concisa e eficiente ao uso de sequências match para incrementar variáveis ou iterar sobre tipos Option.",
      "meta": {
        "title": "Programação em Rust | Iteração Eficiente com while let",
        "description": "Aprenda como usar a construção 'while let' em Rust para incrementar variáveis e iterar sobre tipos Option de forma mais concisa e eficiente em comparação com sequências 'match'.",
        "keywords": "Rust, programação, while let, Option, iteração, incremento de variáveis"
      },
      "details": {
        "steps": [
          {
            "title": "while let",
            "text": "pt/step1.md",
            "verify": [
              {
                "name": "Esta etapa não possui verificação no momento",
                "file": "verify1-1.sh",
                "hint": "Esta etapa não possui verificação no momento"
              }
            ]
          }
        ],
        "intro": {
          "text": "pt/intro.md",
          "title": "Introdução"
        },
        "finish": {
          "text": "pt/finish.md",
          "title": "Resumo"
        }
      }
    }
  ]
}
