{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Lifetime Annotation in Rust Traits",
  "description": "In this lab, we explore the annotation of lifetimes in trait methods, which is similar to functions. It involves annotating lifetimes in the impl block as well. The provided code demonstrates an example where a struct Borrowed has a lifetime annotation, and the Default trait is implemented for it using the annotated lifetime. The main function then creates an instance of Borrowed using the Default::default() method, showcasing the usage of lifetimes in trait methods.",
  "meta": {
    "title": "Rust Lifetime Annotations | Trait Methods",
    "description": "Explore the annotation of lifetimes in Rust trait methods, similar to functions. Learn how to implement the Default trait with lifetime annotations.",
    "keywords": "Rust, Lifetime Annotations, Trait Methods, Default Trait, Programming Tutorials"
  },
  "difficulty": "Beginner",
  "time": 5,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Traits",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "This step has no verification at the moment",
            "file": "verify1-1.sh",
            "hint": "This step has no verification at the moment",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": []
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": [],
  "license": {
    "name": "MIT",
    "url": "https://github.com/rust-lang/rust-by-example/blob/master/LICENSE-MIT",
    "repo": "https://github.com/rust-lang/rust-by-example"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "Rust 中 trait 的生命周期标注",
      "description": "在本实验中，我们探讨了 trait 方法中生命周期的标注，这与函数中的情况类似。这还涉及到在 impl 块中对生命周期进行标注。所提供的代码展示了一个示例，其中结构体 Borrowed 具有生命周期标注，并使用该标注的生命周期为其实现了 Default trait。然后，主函数使用 Default::default() 方法创建了一个 Borrowed 实例，展示了 trait 方法中生命周期的用法。",
      "meta": {
        "title": "Rust 生命周期标注 | trait 方法",
        "description": "探索 Rust trait 方法中与函数类似的生命周期标注。学习如何使用生命周期标注来实现 Default trait。",
        "keywords": "Rust, 生命周期标注，trait 方法，Default trait, 编程教程"
      },
      "details": {
        "steps": [
          {
            "title": "Traits",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "此步骤目前没有验证",
                "file": "verify1-1.sh",
                "hint": "此步骤目前没有验证"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "La anotación de períodos de vida en los tratos de Rust",
      "description": "En este laboratorio, exploramos la anotación de los períodos de vida en los métodos de trato, lo cual es similar a las funciones. Esto también implica anotar los períodos de vida en el bloque impl. El código proporcionado demuestra un ejemplo en el que una estructura Borrowed tiene una anotación de período de vida, y se implementa la característica Default para ella utilizando el período de vida anotado. Luego, la función principal crea una instancia de Borrowed utilizando el método Default::default(), mostrando el uso de los períodos de vida en los métodos de trato.",
      "meta": {
        "title": "Anotaciones de períodos de vida de Rust | Métodos de trato",
        "description": "Explore la anotación de los períodos de vida en los métodos de trato de Rust, similares a las funciones. Aprenda cómo implementar la característica Default con anotaciones de períodos de vida.",
        "keywords": "Rust, Anotaciones de períodos de vida, Métodos de trato, Característica Default, Tutoriales de programación"
      },
      "details": {
        "steps": [
          {
            "title": "Traits",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "En este momento, este paso no tiene verificaciones",
                "file": "verify1-1.sh",
                "hint": "En este momento, este paso no tiene verificaciones"
              }
            ]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Annotation de durée de vie dans les traits Rust",
      "description": "Dans ce laboratoire, nous explorons l'annotation des durées de vie dans les méthodes de traits, qui est similaire aux fonctions. Cela implique également d'annoter les durées de vie dans le bloc impl. Le code fourni montre un exemple où une structure Borrowed a une annotation de durée de vie, et le trait Default est implémenté pour elle en utilisant la durée de vie annotée. La fonction principale crée ensuite une instance de Borrowed en utilisant la méthode Default::default(), mettant en évidence l'utilisation des durées de vie dans les méthodes de traits.",
      "meta": {
        "title": "Annotations de durée de vie Rust | Méthodes de traits",
        "description": "Explorez l'annotation des durées de vie dans les méthodes de traits Rust, similaires aux fonctions. Apprenez à implémenter le trait Default avec des annotations de durée de vie.",
        "keywords": "Rust, Annotations de durée de vie, Méthodes de traits, Trait Default, Didacticiels de programmation"
      },
      "details": {
        "steps": [
          {
            "title": "Traits",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Cette étape n'a pas de vérification pour le moment",
                "file": "verify1-1.sh",
                "hint": "Cette étape n'a pas de vérification pour le moment"
              }
            ]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Lebensdauerangabe in Rust Traits",
      "description": "In diesem Lab untersuchen wir die Angabe von Lebensdauern in Trait-Methoden, was ähnlich zu Funktionen ist. Dabei muss auch in der impl-Blöcke die Lebensdauer angegeben werden. Der bereitgestellte Code zeigt ein Beispiel, in dem eine Struktur Borrowed eine Lebensdauerangabe hat, und das Default-Trait für sie mit der annotierten Lebensdauer implementiert wird. Die Hauptfunktion erstellt dann eine Instanz von Borrowed mit der Methode Default::default(), was die Verwendung von Lebensdauern in Trait-Methoden zeigt.",
      "meta": {
        "title": "Rust Lebensdauerangaben | Trait-Methoden",
        "description": "Untersuchen Sie die Angabe von Lebensdauern in Rust-Trait-Methoden, ähnlich wie bei Funktionen. Lernen Sie, wie Sie das Default-Trait mit Lebensdauerangaben implementieren.",
        "keywords": "Rust, Lebensdauerangaben, Trait-Methoden, Default-Trait, Programmierungstutorials"
      },
      "details": {
        "steps": [
          {
            "title": "Traits",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Dieser Schritt hat momentan keine Verifizierung",
                "file": "verify1-1.sh",
                "hint": "Dieser Schritt hat momentan keine Verifizierung"
              }
            ]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "Rust のトレイトにおける寿命注釈",
      "description": "この実験では、関数と同様に、トレイトメソッドにおける寿命注釈を調べます。これには、impl ブロックにおける寿命注釈も含まれます。提供されたコードは、構造体 Borrowed に寿命注釈があり、それを使用して Default トレイトが実装されている例を示しています。その後、メイン関数は Default::default() メソッドを使用して Borrowed のインスタンスを作成し、トレイトメソッドにおける寿命の使用方法を示しています。",
      "meta": {
        "title": "Rust の寿命注釈 | トレイトメソッド",
        "description": "関数と同様に、Rust のトレイトメソッドにおける寿命注釈を調べます。寿命注釈付きで Default トレイトを実装する方法を学びましょう。",
        "keywords": "Rust, 寿命注釈，トレイトメソッド，Default トレイト，プログラミングチュートリアル"
      },
      "details": {
        "steps": [
          {
            "title": "トレイト",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "このステップは現在検証がありません",
                "file": "verify1-1.sh",
                "hint": "このステップは現在検証がありません"
              }
            ]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Аннотация сроков жизни в трейтах Rust",
      "description": "В этом лабораторном задании мы исследуем аннотацию сроков жизни в методах трейтов, которая аналогична функциям. Также она включает в себя аннотацию сроков жизни в блоке impl. Приведенный код демонстрирует пример, в котором структура Borrowed имеет аннотацию срока жизни, и для нее реализуется трейт Default с использованием аннотированного срока жизни. Затем в главной функции создается экземпляр Borrowed с использованием метода Default::default(), демонстрируя использование сроков жизни в методах трейтов.",
      "meta": {
        "title": "Аннотации сроков жизни Rust | Методы трейтов",
        "description": "Исследуйте аннотацию сроков жизни в методах трейтов Rust, аналогичных функциям. Изучите, как реализовать трейт Default с аннотациями сроков жизни.",
        "keywords": "Rust, Аннотации сроков жизни, Методы трейтов, Трейт Default, Руководства по программированию"
      },
      "details": {
        "steps": [
          {
            "title": "Трейты",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "На данный момент эта стадия не имеет проверки",
                "file": "verify1-1.sh",
                "hint": "На данный момент эта стадия не имеет проверки"
              }
            ]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    },
    {
      "lang": "ko",
      "title": "Rust 트레이트 (Trait) 에서의 생명주기 (Lifetime) 주석",
      "description": "이 랩에서는 함수와 유사한 트레이트 메서드에서 생명주기 주석 처리에 대해 알아봅니다. `impl` 블록에서도 생명주기를 주석 처리하는 것을 포함합니다. 제공된 코드는 `Borrowed` 구조체가 생명주기 주석을 가지고, 주석 처리된 생명주기를 사용하여 `Default` 트레이트가 구현되는 예시를 보여줍니다. `main` 함수는 `Default::default()` 메서드를 사용하여 `Borrowed` 의 인스턴스를 생성하여 트레이트 메서드에서 생명주기의 사용법을 보여줍니다.",
      "meta": {
        "title": "Rust 생명주기 주석 | 트레이트 메서드 (Rust 생명주기 어노테이션)",
        "description": "함수와 유사한 Rust 트레이트 메서드에서 생명주기 주석 처리에 대해 알아보세요. 생명주기 주석으로 `Default` 트레이트를 구현하는 방법을 배우세요.",
        "keywords": "Rust, 생명주기 주석, 트레이트 메서드, Default 트레이트, 프로그래밍 튜토리얼, Rust 튜토리얼, Rust 생명주기, Rust 트레이트"
      },
      "details": {
        "steps": [
          {
            "title": "트레이트 (Traits)",
            "text": "ko/step1.md",
            "verify": [
              {
                "name": "현재 이 단계에는 검증이 없습니다.",
                "file": "verify1-1.sh",
                "hint": "현재 이 단계에는 검증이 없습니다."
              }
            ]
          }
        ],
        "intro": {
          "text": "ko/intro.md",
          "title": "소개"
        },
        "finish": {
          "text": "ko/finish.md",
          "title": "요약"
        }
      }
    },
    {
      "lang": "pt",
      "title": "Anotações de Tempo de Vida em Traits (Traços) Rust",
      "description": "Neste laboratório, exploramos a anotação de *lifetimes* (tempo de vida) em métodos de *trait* (traço), que é semelhante às funções. Envolve a anotação de *lifetimes* no bloco `impl` também. O código fornecido demonstra um exemplo onde uma *struct* `Borrowed` possui uma anotação de *lifetime*, e o *trait* `Default` é implementado para ela usando o *lifetime* anotado. A função `main` então cria uma instância de `Borrowed` usando o método `Default::default()`, demonstrando o uso de *lifetimes* em métodos de *trait*.",
      "meta": {
        "title": "Anotações de Tempo de Vida em Rust | Métodos de Trait",
        "description": "Explore a anotação de *lifetimes* (tempo de vida) em métodos de *trait* (traço) Rust, semelhante às funções. Aprenda como implementar o *trait* `Default` com anotações de *lifetime*.",
        "keywords": "Rust, Anotações de Tempo de Vida, Métodos de Trait, Trait Default, Tutoriais de Programação, Programação Rust"
      },
      "details": {
        "steps": [
          {
            "title": "Traits (Traços)",
            "text": "pt/step1.md",
            "verify": [
              {
                "name": "Este passo não possui verificação no momento",
                "file": "verify1-1.sh",
                "hint": "Este passo não possui verificação no momento"
              }
            ]
          }
        ],
        "intro": {
          "text": "pt/intro.md",
          "title": "Introdução"
        },
        "finish": {
          "text": "pt/finish.md",
          "title": "Resumo"
        }
      }
    }
  ]
}
