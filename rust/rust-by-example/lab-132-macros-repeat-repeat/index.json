{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Macro Repetition in Rust",
  "description": "In this lab, you will learn about using macros with the + and * symbols in the argument list to indicate repetition. Specifically, the example provided demonstrates how to use $(...),+ to match one or more expressions separated by commas. The macro, find_min!, calculates the minimum value among a variable number of arguments.",
  "meta": {
    "title": "Rust Macros | Repetition in Argument List",
    "description": "Learn how to use macros with the `+` and `*` symbols in the argument list to indicate repetition in Rust programming. Discover the `find_min!` macro example.",
    "keywords": "Rust, Macros, Repetition, Argument List, Programming, Coding"
  },
  "difficulty": "Beginner",
  "time": 5,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Repeat",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "This step has no verification at the moment",
            "file": "verify1-1.sh",
            "hint": "This step has no verification at the moment",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "rust/expressions_statements",
          "rust/function_syntax",
          "rust/method_syntax"
        ]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": [],
  "license": {
    "name": "MIT",
    "url": "https://github.com/rust-lang/rust-by-example/blob/master/LICENSE-MIT",
    "repo": "https://github.com/rust-lang/rust-by-example"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "Rust 中的宏重复",
      "description": "在本实验中，你将学习如何在参数列表中使用带有 + 和 * 符号的宏来表示重复。具体来说，提供的示例展示了如何使用 $(...),+ 来匹配一个或多个由逗号分隔的表达式。宏 find_min! 计算可变数量参数中的最小值。",
      "meta": {
        "title": "Rust 宏 | 参数列表中的重复",
        "description": "了解如何在 Rust 编程中使用参数列表中的 `+` 和 `*` 符号来表示宏的重复。探索 `find_min!` 宏示例。",
        "keywords": "Rust, 宏，重复，参数列表，编程，编码"
      },
      "details": {
        "steps": [
          {
            "title": "重复",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "此步骤目前没有验证",
                "file": "verify1-1.sh",
                "hint": "此步骤目前没有验证"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Repetición de macros en Rust",
      "description": "En este laboratorio, aprenderá a usar macros con los símbolos + y * en la lista de argumentos para indicar repetición. Específicamente, el ejemplo proporcionado demuestra cómo usar $(...),+ para coincidir con una o más expresiones separadas por comas. La macro, find_min!, calcula el valor mínimo entre un número variable de argumentos.",
      "meta": {
        "title": "Macros de Rust | Repetición en la lista de argumentos",
        "description": "Aprenda a usar macros con los símbolos `+` y `*` en la lista de argumentos para indicar repetición en el programa de Rust. Descubra el ejemplo de la macro `find_min!`.",
        "keywords": "Rust, Macros, Repetición, Lista de argumentos, Programación, Codificación"
      },
      "details": {
        "steps": [
          {
            "title": "Repetir",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "En este momento, este paso no tiene verificaciones",
                "file": "verify1-1.sh",
                "hint": "En este momento, este paso no tiene verificaciones"
              }
            ]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Répétition de macros en Rust",
      "description": "Dans ce laboratoire, vous allez apprendre à utiliser des macros avec les symboles `+` et `*` dans la liste d'arguments pour indiquer une répétition. Plus précisément, l'exemple fourni montre comment utiliser `$(...),+` pour correspondre à une ou plusieurs expressions séparées par des virgules. La macro, `find_min!`, calcule la valeur minimale parmi un nombre variable d'arguments.",
      "meta": {
        "title": "Macros Rust | Répétition dans la liste d'arguments",
        "description": "Découvrez comment utiliser des macros avec les symboles `+` et `*` dans la liste d'arguments pour indiquer une répétition en programmation Rust. Découvrez l'exemple de macro `find_min!`.",
        "keywords": "Rust, Macros, Répétition, Liste d'arguments, Programmation, Codage"
      },
      "details": {
        "steps": [
          {
            "title": "Répéter",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Cette étape n'a pas de vérification pour le moment",
                "file": "verify1-1.sh",
                "hint": "Cette étape n'a pas de vérification pour le moment"
              }
            ]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Makro-Wiederholung in Rust",
      "description": "In diesem Lab lernst du, wie Makros mit den Symbolen `+` und `*` in der Argumentliste verwendet werden, um Wiederholungen anzugeben. Insbesondere zeigt das bereitgestellte Beispiel, wie `$(...),+` verwendet wird, um eine oder mehrere durch Kommata getrennte Ausdrücke zu treffen. Das Makro `find_min!` berechnet den kleinsten Wert unter einer variablen Anzahl von Argumenten.",
      "meta": {
        "title": "Rust-Makros | Wiederholung in der Argumentliste",
        "description": "Lerne, wie Makros mit den Symbolen `+` und `*` in der Argumentliste in der Rust-Programmierung verwendet werden, um Wiederholungen anzugeben. Entdecke das Beispiel für das Makro `find_min!`.",
        "keywords": "Rust, Makros, Wiederholung, Argumentliste, Programmierung, Coding"
      },
      "details": {
        "steps": [
          {
            "title": "Wiederholen",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Dieser Schritt hat momentan keine Verifizierung",
                "file": "verify1-1.sh",
                "hint": "Dieser Schritt hat momentan keine Verifizierung"
              }
            ]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "Rust におけるマクロの繰り返し",
      "description": "この実験では、引数リストにおける `+` と `*` の記号を使用して繰り返しを示すマクロの使い方について学びます。具体的には、提供された例では、コンマで区切られた 1 つ以上の式を一致させるために `$(...),+` をどのように使用するかを示しています。マクロ `find_min!` は、可変個の引数の中で最小値を計算します。",
      "meta": {
        "title": "Rust のマクロ | 引数リストの繰り返し",
        "description": "Rust プログラミングにおいて、引数リストにおける `+` と `*` の記号を使用して繰り返しを示すマクロの使い方を学びましょう。`find_min!` マクロの例を見つけましょう。",
        "keywords": "Rust, マクロ，繰り返し，引数リスト，プログラミング，コーディング"
      },
      "details": {
        "steps": [
          {
            "title": "繰り返し",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "このステップには現在検証はありません",
                "file": "verify1-1.sh",
                "hint": "このステップには現在検証はありません"
              }
            ]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Макросы с повторением в Rust",
      "description": "В этом лабе вы узнаете, как использовать макросы с символами `+` и `*` в списке аргументов для указания повторения. В частности, пример, приведенный ниже, демонстрирует, как использовать `$(...),+` для сопоставления одного или более выражений, разделенных запятыми. Макрос `find_min!` вычисляет минимальное значение среди переменного количества аргументов.",
      "meta": {
        "title": "Макросы Rust | Повторение в списке аргументов",
        "description": "Изучите, как использовать макросы с символами `+` и `*` в списке аргументов для указания повторения в программировании на Rust. Откройте пример макроса `find_min!`.",
        "keywords": "Rust, Макросы, Повторение, Список аргументов, Программирование, Кодирование"
      },
      "details": {
        "steps": [
          {
            "title": "Повторение",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "На данный момент эта стадия не имеет проверки",
                "file": "verify1-1.sh",
                "hint": "На данный момент эта стадия не имеет проверки"
              }
            ]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    }
  ]
}
