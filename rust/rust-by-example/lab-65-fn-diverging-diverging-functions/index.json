{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Diverging Functions in Rust",
  "description": "In this lab, we learn about diverging functions that are marked using ! in Rust. Diverging functions never return and their return type is an empty type. This is different from the () type which has only one possible value. Diverging functions can be useful when casting to any other type is required, such as in match branches. They are also the return type of functions that loop forever or terminate the process.",
  "meta": {
    "title": "Diverging Functions in Rust: Understanding the Power of the Never Type",
    "description": "Explore the concept of diverging functions in Rust, a unique feature that can enhance your programming capabilities.",
    "keywords": "rust playground, coding, diverging functions, rust online compiler, rust tutor, rust commands, never type, rust practice, rust online playground, rust online"
  },
  "difficulty": "Beginner",
  "time": 5,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Diverging functions",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "This step has no verification at the moment",
            "file": "verify1-1.sh",
            "hint": "This step has no verification at the moment",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "rust/boolean_type",
          "rust/expressions_statements",
          "rust/for_loop",
          "rust/function_syntax",
          "rust/integer_types",
          "rust/mutable_variables",
          "rust/operator_overloading",
          "rust/panic_usage",
          "rust/string_type",
          "rust/variable_declarations"
        ]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": [],
  "license": {
    "name": "MIT",
    "url": "https://github.com/rust-lang/rust-by-example/blob/master/LICENSE-MIT",
    "repo": "https://github.com/rust-lang/rust-by-example"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "Rust 中的发散函数",
      "description": "在本实验中，我们将了解 Rust 中使用 `!` 标记的发散函数。发散函数永远不会返回，其返回类型为空类型。这与只有一个可能值的 `()` 类型不同。当需要转换为任何其他类型时，例如在 `match` 分支中，发散函数可能会很有用。它们也是永远循环或终止进程的函数的返回类型。",
      "meta": {
        "title": "Rust 中的发散函数：理解空类型的强大之处",
        "description": "探索 Rust 中发散函数的概念，这是一项独特的功能，可以增强你的编程能力。",
        "keywords": "Rust 在线编译器，Rust 教程，Rust 命令，空类型，Rust 练习，Rust 在线游乐场，Rust 在线，Rust 游乐场，编码，发散函数"
      },
      "details": {
        "steps": [
          {
            "title": "发散函数",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "此步骤目前没有验证",
                "file": "verify1-1.sh",
                "hint": "此步骤目前没有验证"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Funciones Divergentes en Rust",
      "description": "En este laboratorio, aprendemos sobre funciones divergentes que se marcan con! en Rust. Las funciones divergentes nunca devuelven y su tipo de retorno es un tipo vacío. Esto es diferente del tipo () que solo tiene un valor posible. Las funciones divergentes pueden ser útiles cuando se requiere convertir a cualquier otro tipo, como en las ramas match. También son el tipo de retorno de las funciones que bucle indefinidamente o terminan el proceso.",
      "meta": {
        "title": "Funciones Divergentes en Rust: Comprendiendo el Poder del Tipo Never",
        "description": "Explora el concepto de funciones divergentes en Rust, una característica única que puede mejorar tus capacidades de programación.",
        "keywords": "rust playground, codificación, funciones divergentes, compilador en línea de rust, tutor de rust, comandos de rust, tipo never, práctica de rust, playground en línea de rust, rust en línea"
      },
      "details": {
        "steps": [
          {
            "title": "Funciones Divergentes",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Este paso no tiene verificación en este momento",
                "file": "verify1-1.sh",
                "hint": "Este paso no tiene verificación en este momento"
              }
            ]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Fonctions divergentes en Rust",
      "description": "Dans ce laboratoire, nous étudions les fonctions divergentes qui sont marquées avec! en Rust. Les fonctions divergentes ne retournent jamais et leur type de retour est un type vide. Cela est différent du type () qui n'a qu'une seule valeur possible. Les fonctions divergentes peuvent être utiles lorsqu'il est nécessaire de convertir en tout autre type, par exemple dans les branches match. Elles sont également le type de retour des fonctions qui bouclent à l'infini ou qui terminent le processus.",
      "meta": {
        "title": "Fonctions divergentes en Rust: Comprendre le pouvoir du type Never",
        "description": "Explorez le concept de fonctions divergentes en Rust, une fonctionnalité unique qui peut améliorer vos capacités de programmation.",
        "keywords": "plateforme de pratique Rust, codage, fonctions divergentes, compilateur en ligne Rust, tuteur Rust, commandes Rust, type Never, pratique Rust, plateforme de pratique en ligne Rust, Rust en ligne"
      },
      "details": {
        "steps": [
          {
            "title": "Fonctions divergentes",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Cette étape n'a pas de vérification pour le moment",
                "file": "verify1-1.sh",
                "hint": "Cette étape n'a pas de vérification pour le moment"
              }
            ]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Divergierende Funktionen in Rust",
      "description": "In diesem Lab lernen wir über divergierende Funktionen, die in Rust mit! markiert werden. Divergierende Funktionen geben niemals zurück, und ihr Rückgabetyp ist ein leerer Typ. Dies unterscheidet sich vom ()-Typ, der nur einen möglichen Wert hat. Divergierende Funktionen können nützlich sein, wenn eine Umwandlung in einen anderen Typ erforderlich ist, wie in match-Zweigen. Sie sind auch der Rückgabetyp von Funktionen, die für immer in einer Schleife verbleiben oder den Prozess beenden.",
      "meta": {
        "title": "Divergierende Funktionen in Rust: Das Verständnis der Macht des leeren Typs",
        "description": "Erkunde das Konzept divergierender Funktionen in Rust, eine einzigartige Funktion, die Ihre Programmierfähigkeiten verbessern kann.",
        "keywords": "rust spielplatz, programmieren, divergierende Funktionen, rust online-Compiler, rust-Lehrer, rust-Befehle, leerer Typ, rust Übung, rust online-Spielplatz, rust online"
      },
      "details": {
        "steps": [
          {
            "title": "Divergierende Funktionen",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Dieser Schritt hat momentan keine Verifizierung",
                "file": "verify1-1.sh",
                "hint": "Dieser Schritt hat momentan keine Verifizierung"
              }
            ]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "Rust における発散関数",
      "description": "この実験では、Rust で `!` を使ってマークされた発散関数について学びます。発散関数は決して戻りませんし、その戻り値の型は空の型です。これは、ただ 1 つの可能な値しか持たない `()` 型とは異なります。発散関数は、`match` ブランチのように、他の任意の型にキャストする必要がある場合に便利です。また、無限ループまたはプロセスを終了する関数の戻り値の型でもあります。",
      "meta": {
        "title": "Rust における発散関数：空の型の力を理解する",
        "description": "Rust における発散関数の概念を探り、あなたのプログラミング能力を高める独自の機能をご紹介します。",
        "keywords": "rust playground, コーディング，発散関数，rust オンラインコンパイラ，rust チューター, rust コマンド，空の型，rust 練習，rust オンライン playground, rust オンライン"
      },
      "details": {
        "steps": [
          {
            "title": "発散関数",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "このステップには現在検証はありません",
                "file": "verify1-1.sh",
                "hint": "このステップには現在検証はありません"
              }
            ]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Разнонаправленные функции в Rust",
      "description": "В этом лабе мы узнаем о разнонаправленных функциях, которые помечаются с использованием! в Rust. Разнонаправленные функции никогда не возвращают значения, и их тип возврата является пустым типом. Это отличается от типа (), который имеет только одно возможное значение. Разнонаправленные функции могут быть полезны, когда требуется преобразование в любой другой тип, например, в ветках match. Они также являются типом возврата функций, которые бесконечно циклируют или завершают процесс.",
      "meta": {
        "title": "Разнонаправленные функции в Rust: постигаем силу типа Never",
        "description": "Изучите концепцию разнонаправленных функций в Rust, уникальную особенность, которая может повысить ваши编程能力。",
        "keywords": "rust playground, coding, разнонаправленные функции, rust online compiler, rust tutor, rust commands, never type, rust practice, rust online playground, rust online"
      },
      "details": {
        "steps": [
          {
            "title": "Разнонаправленные функции",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "На данный момент эта стадия не имеет проверки",
                "file": "verify1-1.sh",
                "hint": "На данный момент эта стадия не имеет проверки"
              }
            ]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    }
  ]
}
