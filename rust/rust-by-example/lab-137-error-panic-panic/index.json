{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Rust Panic Handling Example",
  "description": "In this lab, we learn about the error handling mechanism panic in Rust. It is a simple mechanism that prints an error message, unwinds the stack, and usually exits the program. The lab provides an example where panic is explicitly called when the beverage is 'lemonade'.",
  "meta": {
    "title": "Rust Panic Handling: Mastering Error Management in Your Code",
    "description": "Explore the power of Rust's panic handling mechanism and learn how to effectively manage errors in your programming projects.",
    "keywords": "rust playground, error management, tutorials, rust tutor, rust online compiler, panic handling, rust commands, rust practice, rust online playground, rust online"
  },
  "difficulty": "Beginner",
  "time": 5,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "panic",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "This step has no verification at the moment",
            "file": "verify1-1.sh",
            "hint": "This step has no verification at the moment",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "rust/expressions_statements",
          "rust/function_syntax",
          "rust/lifetime_specifiers",
          "rust/panic_usage",
          "rust/string_type"
        ]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": [],
  "license": {
    "name": "MIT",
    "url": "https://github.com/rust-lang/rust-by-example/blob/master/LICENSE-MIT",
    "repo": "https://github.com/rust-lang/rust-by-example"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "Rust 恐慌处理示例",
      "description": "在本实验中，我们学习 Rust 中的错误处理机制 panic。它是一种简单的机制，会打印错误信息、展开栈，并通常会退出程序。本实验提供了一个示例，当饮料是「柠檬水」时会显式调用 panic。",
      "meta": {
        "title": "Rust 恐慌处理：掌握代码中的错误管理",
        "description": "探索 Rust 恐慌处理机制的强大功能，并学习如何在编程项目中有效地管理错误。",
        "keywords": "rust 游乐场, 错误管理, 教程, rust 导师, rust 在线编译器, 恐慌处理, rust 命令, rust 练习, rust 在线游乐场, rust 在线"
      },
      "details": {
        "steps": [
          {
            "title": "恐慌",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "此步骤目前没有验证",
                "file": "verify1-1.sh",
                "hint": "此步骤目前没有验证"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    }
  ]
}
