{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "From and Into",
  "description": "In this lab, we explore the concepts of From and Into traits in Rust, which are used for converting between different types. These traits are inherently linked, with Into being the reciprocal of From. The From trait allows a type to define how to create itself from another type, enabling easy conversion between types. The Into trait automatically calls the From implementation when necessary. Both traits can be implemented for custom types, providing flexibility in type conversions.",
  "meta": {
    "title": "Exploring Rust's From and Into Traits",
    "description": "Learn how to use the powerful Rust traits, From and Into, for seamless type conversions.",
    "keywords": "type conversion, rust playground, programming tutorial, rust tutor, rust online compiler, rust commands, from trait, into trait, rust practice, rust online"
  },
  "difficulty": "Beginner",
  "time": 5,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "From and Into",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "This step has no verification at the moment",
            "file": "verify1-1.sh",
            "hint": "This step has no verification at the moment",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "rust/expressions_statements",
          "rust/function_syntax",
          "rust/integer_types",
          "rust/method_syntax",
          "rust/operator_overloading",
          "rust/string_type",
          "rust/traits",
          "rust/variable_declarations"
        ]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": [],
  "license": {
    "name": "MIT",
    "url": "https://github.com/rust-lang/rust-by-example/blob/master/LICENSE-MIT",
    "repo": "https://github.com/rust-lang/rust-by-example"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "From 和 Into",
      "description": "在本实验中，我们探索 Rust 中 From 和 Into 特征的概念，它们用于在不同类型之间进行转换。这些特征本质上是相互关联的，Into 是 From 的反向。From 特征允许一个类型定义如何从另一个类型创建自身，从而实现类型之间的轻松转换。Into 特征在必要时会自动调用 From 的实现。这两个特征都可以为自定义类型实现，为类型转换提供了灵活性。",
      "meta": {
        "title": "探索 Rust 的 From 和 Into 特征",
        "description": "学习如何使用强大的 Rust 特征 From 和 Into 进行无缝类型转换。",
        "keywords": "类型转换，Rust 在线编译器，编程教程，Rust 练习，Rust 命令，From 特征，Into 特征，Rust 在线，Rust 游乐场，Rust 导师"
      },
      "details": {
        "steps": [
          {
            "title": "From 和 Into",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "此步骤目前没有验证",
                "file": "verify1-1.sh",
                "hint": "此步骤目前没有验证"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "From e Into",
      "description": "En este laboratorio, exploramos los conceptos de los tratos From e Into en Rust, que se utilizan para convertir entre diferentes tipos. Estos tratos están inherentemente vinculados, con Into siendo el recíproco de From. El trato From permite que un tipo defina cómo crear sí mismo a partir de otro tipo, lo que facilita la conversión entre tipos. El trato Into llama automáticamente a la implementación de From cuando sea necesario. Ambos tratos se pueden implementar para tipos personalizados, lo que proporciona flexibilidad en las conversiones de tipos.",
      "meta": {
        "title": "Explorando los tratos From e Into de Rust",
        "description": "Aprende a usar los poderosos tratos de Rust, From e Into, para conversiones de tipo sin problemas.",
        "keywords": "conversión de tipo, playground de Rust, tutorial de programación, tutor de Rust, compilador en línea de Rust, comandos de Rust, trato From, trato Into, práctica de Rust, en línea de Rust"
      },
      "details": {
        "steps": [
          {
            "title": "From e Into",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Este paso no tiene verificación en este momento",
                "file": "verify1-1.sh",
                "hint": "Este paso no tiene verificación en este momento"
              }
            ]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "From et Into",
      "description": "Dans ce laboratoire, nous explorons les concepts des traits From et Into en Rust, qui sont utilisés pour convertir entre différents types. Ces traits sont intrinsèquement liés, avec Into étant le réciproque de From. Le trait From permet à un type de définir comment se créer lui-même à partir d'un autre type, permettant une conversion facile entre types. Le trait Into appelle automatiquement l'implémentation de From si nécessaire. Les deux traits peuvent être implémentés pour des types personnalisés, offrant une flexibilité dans les conversions de type.",
      "meta": {
        "title": "Explorer les traits From et Into de Rust",
        "description": "Découvrez comment utiliser les puissants traits Rust, From et Into, pour effectuer des conversions de type sans friction.",
        "keywords": "conversion de type, terrain de jeu Rust, tutoriel de programmation, tuteur Rust, compilateur en ligne Rust, commandes Rust, trait From, trait Into, pratique Rust, en ligne Rust"
      },
      "details": {
        "steps": [
          {
            "title": "From et Into",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Cette étape n'a pas de vérification pour le moment",
                "file": "verify1-1.sh",
                "hint": "Cette étape n'a pas de vérification pour le moment"
              }
            ]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "From und Into",
      "description": "In diesem Lab untersuchen wir die Konzepte der From- und Into-Traits in Rust, die zum Konvertieren zwischen verschiedenen Typen verwendet werden. Diese Traits sind von Natur aus miteinander verknüpft, wobei Into das Gegenteil von From ist. Der From-Trait ermöglicht es einem Typ, festzulegen, wie er sich selbst aus einem anderen Typ erstellt, was die einfache Umwandlung zwischen Typen ermöglicht. Der Into-Trait ruft die From-Implementierung automatisch auf, wenn dies erforderlich ist. Beide Traits können für benutzerdefinierte Typen implementiert werden, was Flexibilität bei der Typumwandlung bietet.",
      "meta": {
        "title": "Das Erkunden von Rusts From- und Into-Traits",
        "description": "Lernen Sie, wie Sie die leistungsfähigen Rust-Traits From und Into für nahtlose Typumwandlungen verwenden.",
        "keywords": "Typumwandlung, Rust-Spielfeld, Programmier-Tutorial, Rust-Lehrer, Rust-Online-Compiler, Rust-Befehle, From-Trait, Into-Trait, Rust-Praxis, Rust-Online"
      },
      "details": {
        "steps": [
          {
            "title": "From und Into",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Dieser Schritt hat momentan keine Verifizierung",
                "file": "verify1-1.sh",
                "hint": "Dieser Schritt hat momentan keine Verifizierung"
              }
            ]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "From と Into",
      "description": "この実験では、Rust における From と Into トレイトの概念を探ります。これらのトレイトは、異なる型間の変換に使用されます。これらのトレイトは本質的に関連付けられており、Into は From の逆です。From トレイトは、型が別の型から自身を作成する方法を定義することを可能にし、型間の変換を容易にします。Into トレイトは、必要に応じて自動的に From の実装を呼び出します。両方のトレイトはカスタム型に対して実装でき、型変換に柔軟性を提供します。",
      "meta": {
        "title": "Rust の From と Into トレイトを探る",
        "description": "強力な Rust のトレイト、From と Into を使って、シームレスな型変換を学びましょう。",
        "keywords": "型変換、Rust のプレイグラウンド、プログラミングチュートリアル、Rust のチューター、Rust のオンラインコンパイラ、Rust のコマンド、From トレイト、Into トレイト、Rust の練習、Rust のオンライン"
      },
      "details": {
        "steps": [
          {
            "title": "From と Into",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "このステップには現在、検証はありません",
                "file": "verify1-1.sh",
                "hint": "このステップには現在、検証はありません"
              }
            ]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "From и Into",
      "description": "В этом лабораторном задании мы исследуем концепции трейтов From и Into в Rust, которые используются для преобразования между различными типами. Эти трейты тесно связаны, при этом Into является обратным отображением для From. Трейт From позволяет типу определить, как создавать себя из другого типа, что обеспечивает простое преобразование между типами. Трейт Into автоматически вызывает реализацию From при необходимости. Оба трейта могут быть реализованы для пользовательских типов, обеспечивая гибкость в преобразованиях типов.",
      "meta": {
        "title": "Исследование трейтов From и Into в Rust",
        "description": "Изучите, как использовать мощные трейты Rust, From и Into, для беспрепятственного преобразования типов.",
        "keywords": "преобразование типов, игровой площадка Rust, учебник по программированию, наставник Rust, онлайн-компилятор Rust, команды Rust, трейт From, трейт Into, практика Rust, Rust онлайн"
      },
      "details": {
        "steps": [
          {
            "title": "From и Into",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "На данный момент эта стадия не имеет проверки",
                "file": "verify1-1.sh",
                "hint": "На данный момент эта стадия не имеет проверки"
              }
            ]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    },
    {
      "lang": "ko",
      "title": "From 및 Into",
      "description": "이 실습에서는 Rust 에서 서로 다른 타입 간 변환에 사용되는 From 및 Into 트레이트의 개념을 탐색합니다. Into 는 From 의 역으로, 이 두 트레이트는 본질적으로 연결되어 있습니다. From 트레이트는 특정 타입이 다른 타입으로부터 자신을 생성하는 방법을 정의할 수 있도록 하여 타입 간 쉬운 변환을 가능하게 합니다. Into 트레이트는 필요할 때 자동으로 From 구현을 호출합니다. 두 트레이트 모두 사용자 정의 타입에 구현될 수 있어 타입 변환의 유연성을 제공합니다.",
      "meta": {
        "title": "Rust 의 From 및 Into 트레이트 탐색",
        "description": "매끄러운 타입 변환을 위해 강력한 Rust 트레이트인 From 및 Into 를 사용하는 방법을 배우세요.",
        "keywords": "타입 변환, Rust 플레이그라운드, 프로그래밍 튜토리얼, Rust 튜터, Rust 온라인 컴파일러, Rust 명령어, From 트레이트, Into 트레이트, Rust 연습, Rust 온라인, Rust From, Rust Into"
      },
      "details": {
        "steps": [
          {
            "title": "From 및 Into",
            "text": "ko/step1.md",
            "verify": [
              {
                "name": "현재 이 단계에는 검증이 없습니다.",
                "file": "verify1-1.sh",
                "hint": "현재 이 단계에는 검증이 없습니다."
              }
            ]
          }
        ],
        "intro": {
          "text": "ko/intro.md",
          "title": "소개"
        },
        "finish": {
          "text": "ko/finish.md",
          "title": "요약"
        }
      }
    },
    {
      "lang": "pt",
      "title": "From e Into",
      "description": "Neste laboratório, exploramos os conceitos dos traits From e Into em Rust, utilizados para conversão entre diferentes tipos. Estes traits estão intrinsecamente ligados, sendo Into o recíproco de From. O trait From permite a um tipo definir como se criar a partir de outro tipo, permitindo uma conversão fácil entre tipos. O trait Into chama automaticamente a implementação de From quando necessário. Ambos os traits podem ser implementados para tipos personalizados, proporcionando flexibilidade nas conversões de tipo.",
      "meta": {
        "title": "Explorando os Traits From e Into do Rust",
        "description": "Aprenda como utilizar os poderosos traits From e Into do Rust para conversões de tipo sem problemas.",
        "keywords": "conversão de tipo, playground rust, tutorial de programação, tutor rust, compilador online rust, comandos rust, trait from, trait into, prática rust, rust online, rust tutorial português, rust para iniciantes"
      },
      "details": {
        "steps": [
          {
            "title": "From e Into",
            "text": "pt/step1.md",
            "verify": [
              {
                "name": "Este passo não possui verificação no momento",
                "file": "verify1-1.sh",
                "hint": "Este passo não possui verificação no momento"
              }
            ]
          }
        ],
        "intro": {
          "text": "pt/intro.md",
          "title": "Introdução"
        },
        "finish": {
          "text": "pt/finish.md",
          "title": "Resumo"
        }
      }
    }
  ]
}
