{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Rust Variable Bindings and Type Inference",
  "description": "In this lab, we learn about variable bindings in Rust, where values can be assigned to variables using the let binding, and how type annotations can be used but are often inferred by the compiler.",
  "meta": {
    "title": "Rust Variable Bindings | Programming Tutorials",
    "description": "Learn about variable bindings in Rust, where values can be assigned to variables using the `let` binding, and how type annotations can be used but are often inferred by the compiler.",
    "keywords": "Rust, Variable Bindings, Programming Tutorials, Static Typing, Type Inference"
  },
  "difficulty": "Beginner",
  "time": 5,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Variable Bindings",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "This step has no verification at the moment",
            "file": "verify1-1.sh",
            "hint": "This step has no verification at the moment",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": []
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": [],
  "license": {
    "name": "MIT",
    "url": "https://github.com/rust-lang/rust-by-example/blob/master/LICENSE-MIT",
    "repo": "https://github.com/rust-lang/rust-by-example"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "Rust 变量绑定与类型推断",
      "description": "在本实验中，我们学习 Rust 中的变量绑定，即如何使用 let 绑定将值赋给变量，以及如何使用类型注释，但编译器通常会推断类型。",
      "meta": {
        "title": "Rust 变量绑定 | 编程教程",
        "description": "了解 Rust 中的变量绑定，即如何使用 `let` 绑定将值赋给变量，以及如何使用类型注释，但编译器通常会推断类型。",
        "keywords": "Rust, 变量绑定，编程教程，静态类型，类型推断"
      },
      "details": {
        "steps": [
          {
            "title": "变量绑定",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "此步骤目前没有验证",
                "file": "verify1-1.sh",
                "hint": "此步骤目前没有验证"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Enlaces de variables y inferencia de tipos en Rust",
      "description": "En este laboratorio, aprendemos sobre los enlaces de variables en Rust, donde se pueden asignar valores a variables utilizando el enlace let, y cómo se pueden utilizar las anotaciones de tipo, pero a menudo son inferidas por el compilador.",
      "meta": {
        "title": "Enlaces de variables en Rust | Tutoriales de programación",
        "description": "Aprende sobre los enlaces de variables en Rust, donde se pueden asignar valores a variables utilizando el enlace `let`, y cómo se pueden utilizar las anotaciones de tipo, pero a menudo son inferidas por el compilador.",
        "keywords": "Rust, Enlaces de variables, Tutoriales de programación, Tipificación estática, Inferencia de tipos"
      },
      "details": {
        "steps": [
          {
            "title": "Enlaces de variables",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Este paso no tiene verificación en este momento",
                "file": "verify1-1.sh",
                "hint": "Este paso no tiene verificación en este momento"
              }
            ]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Liaisons de variables et inférence de type en Rust",
      "description": "Dans ce laboratoire, nous apprenons les liaisons de variables en Rust, où les valeurs peuvent être assignées à des variables en utilisant la liaison let, et comment les annotations de type peuvent être utilisées mais sont souvent inférées par le compilateur.",
      "meta": {
        "title": "Liaisons de variables en Rust | Didacticiels de programmation",
        "description": "Apprenez les liaisons de variables en Rust, où les valeurs peuvent être assignées à des variables en utilisant la liaison `let`, et comment les annotations de type peuvent être utilisées mais sont souvent inférées par le compilateur.",
        "keywords": "Rust, Liaisons de variables, Didacticiels de programmation, Typage statique, Inférence de type"
      },
      "details": {
        "steps": [
          {
            "title": "Liaisons de variables",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Cette étape n'a pas de vérification pour le moment",
                "file": "verify1-1.sh",
                "hint": "Cette étape n'a pas de vérification pour le moment"
              }
            ]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Rust Variable Bindings und Typinferenz",
      "description": "In diesem Lab lernen wir über Variable Bindings in Rust, bei denen Werte an Variablen über die let-Bindung zugewiesen werden können, und darüber, wie Typangaben verwendet werden können, aber oft vom Compiler inferiert werden.",
      "meta": {
        "title": "Rust Variable Bindings | Programmier-Tutorials",
        "description": "Lernen Sie über Variable Bindings in Rust, bei denen Werte an Variablen über die `let`-Bindung zugewiesen werden können, und darüber, wie Typangaben verwendet werden können, aber oft vom Compiler inferiert werden.",
        "keywords": "Rust, Variable Bindings, Programmier-Tutorials, Statische Typisierung, Typinferenz"
      },
      "details": {
        "steps": [
          {
            "title": "Variable Bindings",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Dieser Schritt hat momentan keine Verifizierung",
                "file": "verify1-1.sh",
                "hint": "Dieser Schritt hat momentan keine Verifizierung"
              }
            ]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "Rust の変数束縛と型推論",
      "description": "この実験では、Rust における変数束縛について学びます。ここでは、`let` 束縛を使って値を変数に割り当てることができ、型注釈をどのように使うか、およびコンパイラによって多くの場合推論されるかを学びます。",
      "meta": {
        "title": "Rust の変数束縛 | プログラミングチュートリアル",
        "description": "Rust における変数束縛について学びましょう。ここでは、`let` 束縛を使って値を変数に割り当てることができ、型注釈をどのように使うか、およびコンパイラによって多くの場合推論されるかを学びます。",
        "keywords": "Rust, 変数束縛，プログラミングチュートリアル，静的型付け，型推論"
      },
      "details": {
        "steps": [
          {
            "title": "変数束縛",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "このステップは現在検証がありません",
                "file": "verify1-1.sh",
                "hint": "このステップは現在検証がありません"
              }
            ]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Rust: Связывание переменных и вывод типов",
      "description": "В этом практическом занятии мы изучаем связывание переменных в Rust, где значения могут быть присвоены переменным с использованием связывания let, и как можно использовать аннотации типов, которые часто выводятся компилятором.",
      "meta": {
        "title": "Связывание переменных в Rust | Руководства по программированию",
        "description": "Изучите связывание переменных в Rust, где значения могут быть присвоены переменным с использованием `let`-связывания, и как можно использовать аннотации типов, которые часто выводятся компилятором.",
        "keywords": "Rust, Связывание переменных, Руководства по программированию, Статическая типизация, Вывод типов"
      },
      "details": {
        "steps": [
          {
            "title": "Связывание переменных",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "На данный момент эта стадия не имеет проверки",
                "file": "verify1-1.sh",
                "hint": "На данный момент эта стадия не имеет проверки"
              }
            ]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    },
    {
      "lang": "pt",
      "title": "Ligações de Variáveis e Inferência de Tipos em Rust",
      "description": "Neste laboratório, aprendemos sobre ligações de variáveis em Rust, onde valores podem ser atribuídos a variáveis usando a ligação `let`, e como as anotações de tipo podem ser usadas, mas frequentemente são inferidas pelo compilador.",
      "meta": {
        "title": "Ligações de Variáveis em Rust | Tutoriais de Programação",
        "description": "Aprenda sobre ligações de variáveis em Rust, onde valores podem ser atribuídos a variáveis usando a ligação `let`, e como as anotações de tipo podem ser usadas, mas frequentemente são inferidas pelo compilador.",
        "keywords": "Rust, Ligações de Variáveis, Tutoriais de Programação, Tipagem Estática, Inferência de Tipos"
      },
      "details": {
        "steps": [
          {
            "title": "Ligações de Variáveis",
            "text": "pt/step1.md",
            "verify": [
              {
                "name": "Este passo não tem verificação no momento",
                "file": "verify1-1.sh",
                "hint": "Este passo não tem verificação no momento"
              }
            ]
          }
        ],
        "intro": {
          "text": "pt/intro.md",
          "title": "Introdução"
        },
        "finish": {
          "text": "pt/finish.md",
          "title": "Resumo"
        }
      }
    },
    {
      "lang": "ko",
      "title": "Rust 변수 바인딩 및 타입 추론",
      "description": "이 실습에서는 Rust 에서 변수에 값을 할당하는 방법인 let 바인딩과 타입 주석을 사용하는 방법, 그리고 컴파일러가 종종 타입을 추론하는 방법에 대해 배웁니다.",
      "meta": {
        "title": "Rust 변수 바인딩 | 프로그래밍 튜토리얼",
        "description": "Rust 에서 let 바인딩을 사용하여 변수에 값을 할당하고, 타입 주석을 사용하는 방법과 컴파일러가 종종 타입을 추론하는 방법에 대해 알아보세요.",
        "keywords": "Rust, 변수 바인딩, 프로그래밍 튜토리얼, 정적 타이핑, 타입 추론, Rust 프로그래밍, Rust 학습"
      },
      "details": {
        "steps": [
          {
            "title": "변수 바인딩",
            "text": "ko/step1.md",
            "verify": [
              {
                "name": "현재 이 단계에는 검증이 없습니다.",
                "file": "verify1-1.sh",
                "hint": "현재 이 단계에는 검증이 없습니다."
              }
            ]
          }
        ],
        "intro": {
          "text": "ko/intro.md",
          "title": "소개"
        },
        "finish": {
          "text": "ko/finish.md",
          "title": "요약"
        }
      }
    }
  ]
}
