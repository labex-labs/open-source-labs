{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Implement Generic Double Deallocation Trait",
  "description": "In this lab, a generic DoubleDrop trait is defined, which includes a double_drop method that allows a type to deallocate itself and an input parameter.",
  "meta": {
    "title": "Rust Programming | Generic DoubleDrop Trait",
    "description": "Learn how to define a generic DoubleDrop trait in Rust, which allows types to deallocate themselves and an input parameter.",
    "keywords": "Rust, Programming, Traits, Generic, DoubleDrop, Deallocation"
  },
  "difficulty": "Beginner",
  "time": 5,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Traits",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "This step has no verification at the moment",
            "file": "verify1-1.sh",
            "hint": "This step has no verification at the moment",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "rust/expressions_statements",
          "rust/function_syntax",
          "rust/method_syntax",
          "rust/operator_overloading",
          "rust/traits",
          "rust/variable_declarations"
        ]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": [],
  "license": {
    "name": "MIT",
    "url": "https://github.com/rust-lang/rust-by-example/blob/master/LICENSE-MIT",
    "repo": "https://github.com/rust-lang/rust-by-example"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "实现通用双释放特性",
      "description": "在本实验中，定义了一个通用的 DoubleDrop 特性，其中包含一个 double_drop 方法，该方法允许一个类型释放自身以及一个输入参数。",
      "meta": {
        "title": "Rust 编程 | 通用 DoubleDrop 特性",
        "description": "学习如何在 Rust 中定义一个通用的 DoubleDrop 特性，该特性允许类型释放自身以及一个输入参数。",
        "keywords": "Rust，编程，特性，通用，DoubleDrop，释放"
      },
      "details": {
        "steps": [
          {
            "title": "特性",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "此步骤目前没有验证",
                "file": "verify1-1.sh",
                "hint": "此步骤目前没有验证"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Implementar el trato genérico de doble desasignación",
      "description": "En este laboratorio, se define un trato genérico DoubleDrop, que incluye un método double_drop que permite a un tipo desasignarse a sí mismo y un parámetro de entrada.",
      "meta": {
        "title": "Programación Rust | Trato genérico DoubleDrop",
        "description": "Aprende cómo definir un trato genérico DoubleDrop en Rust, que permite a los tipos desasignarse a sí mismos y un parámetro de entrada.",
        "keywords": "Rust, Programación, Tratos, Genéricos, DoubleDrop, Desasignación"
      },
      "details": {
        "steps": [
          {
            "title": "Tratos",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "En este momento, este paso no tiene verificaciones",
                "file": "verify1-1.sh",
                "hint": "En este momento, este paso no tiene verificaciones"
              }
            ]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Implémenter le trait générique de double désallocation",
      "description": "Dans ce laboratoire, un trait générique DoubleDrop est défini, qui inclut une méthode double_drop qui permet à un type de se désallouer lui-même et d'un paramètre d'entrée.",
      "meta": {
        "title": "Programmation Rust | Trait générique DoubleDrop",
        "description": "Découvrez comment définir un trait générique DoubleDrop en Rust, qui permet aux types de se désallouer eux-mêmes et d'un paramètre d'entrée.",
        "keywords": "Rust, Programmation, Traits, Générique, DoubleDrop, Désallocation"
      },
      "details": {
        "steps": [
          {
            "title": "Traits",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Cette étape n'a pas de vérification pour le moment",
                "file": "verify1-1.sh",
                "hint": "Cette étape n'a pas de vérification pour le moment"
              }
            ]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Implementiere das generische Double Deallocation Trait",
      "description": "In diesem Lab wird ein generisches DoubleDrop-Trait definiert, das eine double_drop-Methode enthält, die einem Typ ermöglicht, sich selbst und einen Eingabeparameter zu deallokieren.",
      "meta": {
        "title": "Rust-Programmierung | Generisches DoubleDrop-Trait",
        "description": "Lernen Sie, wie Sie in Rust ein generisches DoubleDrop-Trait definieren, das es Typen ermöglicht, sich selbst und einen Eingabeparameter zu deallokieren.",
        "keywords": "Rust, Programmierung, Traits, Generisch, DoubleDrop, Deallokation"
      },
      "details": {
        "steps": [
          {
            "title": "Traits",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Dieser Schritt hat momentan keine Verifizierung",
                "file": "verify1-1.sh",
                "hint": "Dieser Schritt hat momentan keine Verifizierung"
              }
            ]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "汎用的な二重解放トレイトを実装する",
      "description": "この実験では、汎用的な DoubleDrop トレイトが定義されており、これには型が自身と入力パラメータを解放できる double_drop メソッドが含まれています。",
      "meta": {
        "title": "Rust プログラミング | 汎用的な DoubleDrop トレイト",
        "description": "Rust で汎用的な DoubleDrop トレイトを定義する方法を学びましょう。これにより、型が自身と入力パラメータを解放できます。",
        "keywords": "Rust, プログラミング，トレイト，汎用的，DoubleDrop, 解放"
      },
      "details": {
        "steps": [
          {
            "title": "トレイト",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "このステップには現在検証はありません",
                "file": "verify1-1.sh",
                "hint": "このステップには現在検証はありません"
              }
            ]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Реализация обобщенного трейта для двойного освобождения памяти",
      "description": "В этой лабораторной работе определяется обобщенный трейт DoubleDrop, который включает метод double_drop, позволяющий типу освобождать сам себя и входной параметр.",
      "meta": {
        "title": "Программирование на Rust | Обобщенный трейт DoubleDrop",
        "description": "Изучите, как определить обобщенный трейт DoubleDrop в Rust, который позволяет типам освобождать сам себя и входной параметр.",
        "keywords": "Rust, Программирование, Трейты, Обобщенные, DoubleDrop, Освобождение памяти"
      },
      "details": {
        "steps": [
          {
            "title": "Трейты",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "На данный момент эта стадия не имеет проверки",
                "file": "verify1-1.sh",
                "hint": "На данный момент эта стадия не имеет проверки"
              }
            ]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    },
    {
      "lang": "ko",
      "title": "제네릭 이중 할당 해제 트레이트 구현",
      "description": "이 실습에서는 DoubleDrop 이라는 제네릭 트레이트를 정의합니다. 이 트레이트는 특정 타입이 자기 자신과 입력 매개변수를 할당 해제할 수 있도록 하는 double_drop 메서드를 포함합니다.",
      "meta": {
        "title": "Rust 프로그래밍 | 제네릭 DoubleDrop 트레이트",
        "description": "Rust 에서 제네릭 DoubleDrop 트레이트를 정의하는 방법을 배우고, 타입이 자기 자신과 입력 매개변수를 할당 해제할 수 있도록 만드는 방법을 알아보세요.",
        "keywords": "Rust, 프로그래밍, 트레이트, 제네릭, DoubleDrop, 할당 해제, Rust 제네릭 트레이트, 이중 할당 해제"
      },
      "details": {
        "steps": [
          {
            "title": "트레이트",
            "text": "ko/step1.md",
            "verify": [
              {
                "name": "현재 이 단계에는 검증이 없습니다.",
                "file": "verify1-1.sh",
                "hint": "현재 이 단계에는 검증이 없습니다."
              }
            ]
          }
        ],
        "intro": {
          "text": "ko/intro.md",
          "title": "소개"
        },
        "finish": {
          "text": "ko/finish.md",
          "title": "요약"
        }
      }
    },
    {
      "lang": "pt",
      "title": "Implementar Trait Genérico de Dupla Desalocação",
      "description": "Neste laboratório, é definido um trait genérico DoubleDrop, que inclui um método double_drop que permite a um tipo desalocar a si próprio e um parâmetro de entrada.",
      "meta": {
        "title": "Programação Rust | Trait Genérico DoubleDrop",
        "description": "Aprenda como definir um trait genérico DoubleDrop em Rust, que permite a tipos desalocar a si próprios e um parâmetro de entrada.",
        "keywords": "Rust, Programação, Traits, Genérico, DoubleDrop, Desalocação, Tipos Genéricos, Métodos Genéricos,  Destruição de Objetos,  Gerenciamento de Memória,  Linguagem de Programação Rust"
      },
      "details": {
        "steps": [
          {
            "title": "Traits",
            "text": "pt/step1.md",
            "verify": [
              {
                "name": "Esta etapa não possui verificação no momento",
                "file": "verify1-1.sh",
                "hint": "Esta etapa não possui verificação no momento"
              }
            ]
          }
        ],
        "intro": {
          "text": "pt/intro.md",
          "title": "Introdução"
        },
        "finish": {
          "text": "pt/finish.md",
          "title": "Resumo"
        }
      }
    }
  ]
}
