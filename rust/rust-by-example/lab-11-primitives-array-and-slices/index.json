{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Arrays and Slices",
  "description": "In this lab, we will explore arrays and slices in Rust. An array is a collection of objects of the same type stored in contiguous memory, and its length is known at compile time. On the other hand, a slice is similar to an array but its length is not known at compile time. Slices can be used to borrow a section of an array. We will also cover how to create arrays, access elements, calculate the length, allocate memory, borrow arrays as slices, and work with empty slices. Additionally, we will discuss how to safely access array elements using .get() method and handle out-of-bounds errors.",
  "meta": {
    "title": "Exploring Arrays and Slices in Rust",
    "description": "Dive into the world of arrays and slices in Rust, learn how to create, access, and manipulate these data structures.",
    "keywords": "data structures, rust playground, arrays, rust tutor, slices, rust online compiler, rust commands, rust practice, rust online playground, rust online"
  },
  "difficulty": "Beginner",
  "time": 5,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Arrays and Slices",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "This step has no verification at the moment",
            "file": "verify1-1.sh",
            "hint": "This step has no verification at the moment",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "rust/expressions_statements",
          "rust/for_loop",
          "rust/function_syntax",
          "rust/integer_types",
          "rust/method_syntax",
          "rust/operator_overloading",
          "rust/string_type",
          "rust/type_casting",
          "rust/variable_declarations"
        ]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": [],
  "license": {
    "name": "MIT",
    "url": "https://github.com/rust-lang/rust-by-example/blob/master/LICENSE-MIT",
    "repo": "https://github.com/rust-lang/rust-by-example"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "数组和切片",
      "description": "在本实验中，我们将探索Rust中的数组和切片。数组是存储在连续内存中且类型相同的对象的集合，其长度在编译时已知。另一方面，切片类似于数组，但其长度在编译时未知。切片可用于借用数组的一部分。我们还将介绍如何创建数组、访问元素、计算长度、分配内存、将数组作为切片借用以及处理空切片。此外，我们将讨论如何使用.get()方法安全地访问数组元素并处理越界错误。",
      "meta": {
        "title": "探索Rust中的数组和切片",
        "description": "深入了解Rust中的数组和切片世界，学习如何创建、访问和操作这些数据结构。",
        "keywords": "数据结构, Rust游乐场, 数组, Rust教程, 切片, Rust在线编译器, Rust命令, Rust练习, Rust在线游乐场, Rust在线"
      },
      "details": {
        "steps": [
          {
            "title": "数组和切片",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "此步骤目前没有验证",
                "file": "verify1-1.sh",
                "hint": "此步骤目前没有验证"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    }
  ]
}
