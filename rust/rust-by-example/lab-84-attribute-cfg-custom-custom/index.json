{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Conditional Rust Function Compilation",
  "description": "In this lab, we have a code snippet that includes a function called conditional_function(), but it will only be compiled and executed if a custom conditional called some_condition is passed to rustc using the --cfg flag.",
  "meta": {
    "title": "Rust Programming | Conditional Functions | Custom Configurations",
    "description": "Learn how to use custom conditional functions in Rust programming, including how to pass custom configuration flags to the compiler.",
    "keywords": "Rust, programming, conditional functions, custom configurations, compiler flags"
  },
  "difficulty": "Beginner",
  "time": 5,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Custom",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "This step has no verification at the moment",
            "file": "verify1-1.sh",
            "hint": "This step has no verification at the moment",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": ["rust/expressions_statements", "rust/function_syntax"]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": [],
  "license": {
    "name": "MIT",
    "url": "https://github.com/rust-lang/rust-by-example/blob/master/LICENSE-MIT",
    "repo": "https://github.com/rust-lang/rust-by-example"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "Rust 条件函数编译",
      "description": "在本实验中，我们有一段代码片段，其中包含一个名为 conditional_function() 的函数，但只有在使用 --cfg 标志将一个名为 some_condition 的自定义条件传递给 rustc 时，它才会被编译和执行。",
      "meta": {
        "title": "Rust 编程 | 条件函数 | 自定义配置",
        "description": "学习如何在 Rust 编程中使用自定义条件函数，包括如何将自定义配置标志传递给编译器。",
        "keywords": "Rust, 编程, 条件函数, 自定义配置, 编译器标志"
      },
      "details": {
        "steps": [
          {
            "title": "自定义",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "此步骤目前没有验证",
                "file": "verify1-1.sh",
                "hint": "此步骤目前没有验证"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Compilación de funciones condicionales en Rust",
      "description": "En este laboratorio, tenemos un fragmento de código que incluye una función llamada conditional_function(), pero solo se compilará y ejecutará si una condición personalizada llamada some_condition se pasa a rustc utilizando la bandera --cfg.",
      "meta": {
        "title": "Programación en Rust | Funciones Condicionales | Configuraciones Personalizadas",
        "description": "Aprende cómo usar funciones condicionales personalizadas en la programación de Rust, incluyendo cómo pasar banderas de configuración personalizadas al compilador.",
        "keywords": "Rust, programación, funciones condicionales, configuraciones personalizadas, banderas del compilador"
      },
      "details": {
        "steps": [
          {
            "title": "Personalizado",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Este paso no tiene verificación en este momento",
                "file": "verify1-1.sh",
                "hint": "Este paso no tiene verificación en este momento"
              }
            ]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Compilation de fonction Rust conditionnelle",
      "description": "Dans ce laboratoire, nous avons un extrait de code qui inclut une fonction appelée conditional_function(), mais elle ne sera compilée et exécutée que si une condition personnalisée appelée some_condition est passée à rustc à l'aide du drapeau --cfg.",
      "meta": {
        "title": "Programmation Rust | Fonctions conditionnelles | Configurations personnalisées",
        "description": "Découvrez comment utiliser des fonctions conditionnelles personnalisées en programmation Rust, y compris la manière de passer des drapeaux de configuration personnalisés au compilateur.",
        "keywords": "Rust, programmation, fonctions conditionnelles, configurations personnalisées, drapeaux du compilateur"
      },
      "details": {
        "steps": [
          {
            "title": "Personnalisé",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Cette étape n'a pas de vérification pour le moment",
                "file": "verify1-1.sh",
                "hint": "Cette étape n'a pas de vérification pour le moment"
              }
            ]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Bedingste Rust-Funktionskompilierung",
      "description": "In diesem Lab haben wir einen Codeausschnitt, der eine Funktion namens conditional_function() enthält, aber diese wird nur kompiliert und ausgeführt, wenn eine benutzerdefinierte Bedingung namens some_condition an rustc über das Flag --cfg übergeben wird.",
      "meta": {
        "title": "Rust-Programmierung | Bedingsfunktionen | Anpassende Konfigurationen",
        "description": "Lernen Sie, wie Sie in der Rust-Programmierung benutzerdefinierte bedingte Funktionen verwenden, einschließlich der Übergabe benutzerdefinierter Konfigurationsflags an den Compiler.",
        "keywords": "Rust, Programmierung, bedingte Funktionen, anpassende Konfigurationen, Compilerflags"
      },
      "details": {
        "steps": [
          {
            "title": "Anpassung",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Dieser Schritt hat momentan keine Verifizierung",
                "file": "verify1-1.sh",
                "hint": "Dieser Schritt hat momentan keine Verifizierung"
              }
            ]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "条件付きRust関数のコンパイル",
      "description": "この実験では、conditional_function()と呼ばれる関数を含むコード スニペットがありますが、some_conditionと呼ばれるカスタム条件が--cfgフラグを使用してrustcに渡された場合にのみコンパイルおよび実行されます。",
      "meta": {
        "title": "Rustプログラミング | 条件付き関数 | カスタム設定",
        "description": "Rustプログラミングでカスタム条件付き関数を使用する方法、およびコンパイラにカスタム設定フラグを渡す方法について学びましょう。",
        "keywords": "Rust, プログラミング, 条件付き関数, カスタム設定, コンパイラフラグ"
      },
      "details": {
        "steps": [
          {
            "title": "カスタム",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "このステップには現在検証はありません",
                "file": "verify1-1.sh",
                "hint": "このステップには現在検証はありません"
              }
            ]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Условная компиляция функций в Rust",
      "description": "В этом лабораторном задании есть фрагмент кода, в котором есть функция с именем conditional_function(), но она будет скомпилирована и выполнена только в том случае, если в rustc будет передано пользовательское условие под названием some_condition с использованием флага --cfg.",
      "meta": {
        "title": "Программирование на Rust | Условные функции | Пользовательские настройки",
        "description": "Изучите, как использовать пользовательские условные функции в программировании на Rust, включая то, как передавать пользовательские флаги конфигурации компилятору.",
        "keywords": "Rust, программирование, условные функции, пользовательские настройки, флаги компилятора"
      },
      "details": {
        "steps": [
          {
            "title": "Пользовательское",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "На данный момент эта стадия не имеет проверки",
                "file": "verify1-1.sh",
                "hint": "На данный момент эта стадия не имеет проверки"
              }
            ]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    }
  ]
}
