{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Printable Types in Rust's Standard Library",
  "description": "In this lab, it is explained that in order to use the std::fmt formatting traits, types must have an implementation to be printable, which can be automatically provided for types in the std library.",
  "meta": {
    "title": "Rust Programming | Formatting Traits | Printable Types",
    "description": "Learn how to use Rust's formatting traits, such as fmt::Debug and fmt::Display, to make your custom types printable. Explore the concepts of automatic and manual implementation for printable types.",
    "keywords": "Rust, programming, formatting, traits, fmt::Debug, fmt::Display, printable types"
  },
  "difficulty": "Beginner",
  "time": 5,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Debug",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "This step has no verification at the moment",
            "file": "verify1-1.sh",
            "hint": "This step has no verification at the moment",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": []
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": [],
  "license": {
    "name": "MIT",
    "url": "https://github.com/rust-lang/rust-by-example/blob/master/LICENSE-MIT",
    "repo": "https://github.com/rust-lang/rust-by-example"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "Rust 标准库中的可打印类型",
      "description": "在本实验中，将解释为了使用 std::fmt 格式化特性，类型必须有一个可打印的实现，对于 std 库中的类型，该实现可以自动提供。",
      "meta": {
        "title": "Rust 编程 | 格式化特性 | 可打印类型",
        "description": "学习如何使用 Rust 的格式化特性，如 fmt::Debug 和 fmt::Display，使自定义类型可打印。探索可打印类型的自动和手动实现概念。",
        "keywords": "Rust, 编程，格式化，特性，fmt::Debug, fmt::Display, 可打印类型"
      },
      "details": {
        "steps": [
          {
            "title": "调试",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "此步骤目前没有验证",
                "file": "verify1-1.sh",
                "hint": "此步骤目前没有验证"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Tipos Imprimibles en la Biblioteca Estándar de Rust",
      "description": "En este laboratorio, se explica que para utilizar las características de formato std::fmt, los tipos deben tener una implementación para ser imprimibles, lo cual puede ser proporcionado automáticamente para los tipos en la biblioteca std. Para otros tipos, se puede derivar la característica fmt::Debug para habilitar la impresión.",
      "meta": {
        "title": "Programación en Rust | Características de Formato | Tipos Imprimibles",
        "description": "Aprende cómo utilizar las características de formato de Rust, como fmt::Debug y fmt::Display, para hacer que tus tipos personalizados sean imprimibles. Explora los conceptos de implementación automática y manual para tipos imprimibles.",
        "keywords": "Rust, programación, formato, características, fmt::Debug, fmt::Display, tipos imprimibles"
      },
      "details": {
        "steps": [
          {
            "title": "Depuración",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Este paso no tiene verificación en este momento",
                "file": "verify1-1.sh",
                "hint": "Este paso no tiene verificación en este momento"
              }
            ]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Types imprimables dans la bibliothèque standard de Rust",
      "description": "Dans ce laboratoire, il est expliqué que pour utiliser les traits de formatage std::fmt, les types doivent avoir une implémentation pour être imprimables, ce qui peut être automatiquement fourni pour les types de la bibliothèque std.",
      "meta": {
        "title": "Programmation Rust | Traits de formatage | Types imprimables",
        "description": "Découvrez comment utiliser les traits de formatage de Rust, tels que fmt::Debug et fmt::Display, pour rendre vos types personnalisés imprimables. Explorez les concepts d'implémentation automatique et manuelle pour les types imprimables.",
        "keywords": "Rust, programmation, formatage, traits, fmt::Debug, fmt::Display, types imprimables"
      },
      "details": {
        "steps": [
          {
            "title": "Débogage",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Cette étape n'a pas de vérification pour le moment",
                "file": "verify1-1.sh",
                "hint": "Cette étape n'a pas de vérification pour le moment"
              }
            ]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Ausdruckbare Typen in der Standardbibliothek von Rust",
      "description": "In diesem Lab wird erklärt, dass um die Formatierungseigenschaften von std::fmt zu verwenden, Typen eine Implementierung für die Ausdruckbarkeit haben müssen, was automatisch für Typen in der std-Bibliothek bereitgestellt werden kann.",
      "meta": {
        "title": "Rust-Programmierung | Formatierungseigenschaften | Ausdruckbare Typen",
        "description": "Lernen Sie, wie Sie die Formatierungseigenschaften von Rust, wie fmt::Debug und fmt::Display, verwenden, um Ihre benutzerdefinierten Typen ausdruckbar zu machen. Erkunden Sie die Konzepte der automatischen und manuellen Implementierung für ausdruckbare Typen.",
        "keywords": "Rust, Programmierung, Formatierung, Attribute, fmt::Debug, fmt::Display, ausdruckbare Typen"
      },
      "details": {
        "steps": [
          {
            "title": "Debug",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Dieser Schritt hat momentan keine Verifizierung",
                "file": "verify1-1.sh",
                "hint": "Dieser Schritt hat momentan keine Verifizierung"
              }
            ]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "Rust の標準ライブラリにおける表示可能な型",
      "description": "この実験では、`std::fmt` のフォーマット特性を使用するには、型が表示可能な実装を持っている必要があることが説明されています。これは、`std` ライブラリ内の型には自動的に提供されます。",
      "meta": {
        "title": "Rust プログラミング | フォーマット特性 | 表示可能な型",
        "description": "Rust のフォーマット特性、たとえば `fmt::Debug` と `fmt::Display` を使って、独自の型を表示可能にする方法を学びましょう。表示可能な型の自動および手動実装の概念を探求しましょう。",
        "keywords": "Rust, プログラミング，フォーマット，特性，fmt::Debug, fmt::Display, 表示可能な型"
      },
      "details": {
        "steps": [
          {
            "title": "Debug",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "このステップは現在検証がありません",
                "file": "verify1-1.sh",
                "hint": "このステップは現在検証がありません"
              }
            ]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Печатные типы в стандартной библиотеке Rust",
      "description": "В этом практическом занятии объясняется, что для использования функциональности форматирования std::fmt типы должны иметь реализацию для печати, которая может быть автоматически предоставлена для типов в библиотеке std. Для других типов можно использовать трейт fmt::Debug, чтобы обеспечить возможность печати.",
      "meta": {
        "title": "Программирование на Rust | Функциональность форматирования | Печатные типы",
        "description": "Изучите, как использовать функциональность форматирования Rust, такие как fmt::Debug и fmt::Display, чтобы сделать свои собственные типы печатаемыми. Исследуйте концепции автоматической и ручной реализации для печатаемых типов.",
        "keywords": "Rust, программирование, форматирование, трейты, fmt::Debug, fmt::Display, печатаемые типы"
      },
      "details": {
        "steps": [
          {
            "title": "Debug",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "На данный момент эта стадия не имеет проверки",
                "file": "verify1-1.sh",
                "hint": "На данный момент эта стадия не имеет проверки"
              }
            ]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    },
    {
      "lang": "ko",
      "title": "Rust 표준 라이브러리의 출력 가능한 타입",
      "description": "이 랩에서는 std::fmt 형식 지정 트레이트를 사용하기 위해 타입이 출력 가능하도록 구현해야 하며, 이는 std 라이브러리의 타입에 대해 자동으로 제공될 수 있음을 설명합니다.",
      "meta": {
        "title": "Rust 프로그래밍 | 형식 지정 트레이트 | 출력 가능한 타입 - Rust 학습",
        "description": "fmt::Debug 및 fmt::Display 와 같은 Rust 의 형식 지정 트레이트를 사용하여 사용자 정의 타입을 출력 가능하게 만드는 방법을 알아보세요. 출력 가능한 타입에 대한 자동 및 수동 구현 개념을 탐구합니다. Rust 프로그래밍 튜토리얼",
        "keywords": "Rust, 프로그래밍, 형식 지정, 트레이트, fmt::Debug, fmt::Display, 출력 가능한 타입, Rust 튜토리얼, Rust 학습"
      },
      "details": {
        "steps": [
          {
            "title": "디버깅 (Debug)",
            "text": "ko/step1.md",
            "verify": [
              {
                "name": "현재 이 단계에는 검증이 없습니다.",
                "file": "verify1-1.sh",
                "hint": "현재 이 단계에는 검증이 없습니다."
              }
            ]
          }
        ],
        "intro": {
          "text": "ko/intro.md",
          "title": "소개"
        },
        "finish": {
          "text": "ko/finish.md",
          "title": "요약"
        }
      }
    },
    {
      "lang": "pt",
      "title": "Tipos Imprimíveis na Biblioteca Padrão do Rust",
      "description": "Neste laboratório, explica-se que, para usar os *traits* de formatação `std::fmt`, os tipos devem ter uma implementação para serem imprimíveis, o que pode ser fornecido automaticamente para tipos na biblioteca `std`.",
      "meta": {
        "title": "Programação Rust | *Traits* de Formatação | Tipos Imprimíveis",
        "description": "Aprenda a usar os *traits* de formatação do Rust, como `fmt::Debug` e `fmt::Display`, para tornar seus tipos personalizados imprimíveis. Explore os conceitos de implementação automática e manual para tipos imprimíveis.",
        "keywords": "Rust, programação, formatação, *traits*, fmt::Debug, fmt::Display, tipos imprimíveis, Rust imprimir, Rust debug, Rust formatar saída"
      },
      "details": {
        "steps": [
          {
            "title": "Debug",
            "text": "pt/step1.md",
            "verify": [
              {
                "name": "Esta etapa não possui verificação no momento",
                "file": "verify1-1.sh",
                "hint": "Esta etapa não possui verificação no momento"
              }
            ]
          }
        ],
        "intro": {
          "text": "pt/intro.md",
          "title": "Introdução"
        },
        "finish": {
          "text": "pt/finish.md",
          "title": "Resumo"
        }
      }
    }
  ]
}
