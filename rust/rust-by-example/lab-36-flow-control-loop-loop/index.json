{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Exploring Rust Infinite Loops",
  "description": "In this lab, we explore the usage of the loop keyword in Rust, which allows us to create an infinite loop. We can exit the loop at any time using the break statement and skip the remaining iterations using the continue statement. The provided example code demonstrates how to increment a counter and print its value until it reaches a certain condition, utilizing continue to skip one iteration and break to exit the loop entirely.",
  "meta": {
    "title": "Rust Programming | Infinite Loops | Control Flow",
    "description": "Explore the usage of the 'loop' keyword in Rust, learn how to create infinite loops, exit them with 'break', and skip iterations with 'continue'. Discover Rust's control flow features.",
    "keywords": "Rust, Programming, Infinite Loops, Control Flow, Break, Continue"
  },
  "difficulty": "Beginner",
  "time": 5,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "loop",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "This step has no verification at the moment",
            "file": "verify1-1.sh",
            "hint": "This step has no verification at the moment",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "rust/expressions_statements",
          "rust/function_syntax",
          "rust/lifetime_specifiers",
          "rust/mutable_variables",
          "rust/variable_declarations"
        ]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": [],
  "license": {
    "name": "MIT",
    "url": "https://github.com/rust-lang/rust-by-example/blob/master/LICENSE-MIT",
    "repo": "https://github.com/rust-lang/rust-by-example"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "探索 Rust 无限循环",
      "description": "在本实验中，我们探索 Rust 中 `loop` 关键字的用法，它能让我们创建一个无限循环。我们可以使用 `break` 语句随时退出循环，并使用 `continue` 语句跳过剩余的迭代。提供的示例代码展示了如何递增一个计数器并打印其值，直到达到某个条件，利用 `continue` 跳过一次迭代，并用 `break` 完全退出循环。",
      "meta": {
        "title": "Rust 编程 | 无限循环 | 控制流",
        "description": "探索 Rust 中 `loop` 关键字的用法，学习如何创建无限循环，使用 `break` 退出循环，以及使用 `continue` 跳过迭代。了解 Rust 的控制流特性。",
        "keywords": "Rust, 编程, 无限循环, 控制流, Break, Continue"
      },
      "details": {
        "steps": [
          {
            "title": "循环",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "此步骤目前没有验证",
                "file": "verify1-1.sh",
                "hint": "此步骤目前没有验证"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Explorando los bucles infinitos en Rust",
      "description": "En este laboratorio, exploramos el uso de la palabra clave 'loop' en Rust, que nos permite crear un bucle infinito. Podemos salir del bucle en cualquier momento utilizando la declaración 'break' y omitir las iteraciones restantes utilizando la declaración 'continue'. El código de ejemplo proporcionado demuestra cómo incrementar un contador e imprimir su valor hasta que alcanza una cierta condición, utilizando 'continue' para omitir una iteración y 'break' para salir del bucle por completo.",
      "meta": {
        "title": "Programación en Rust | Bucle infinito | Flujo de control",
        "description": "Explora el uso de la palabra clave 'loop' en Rust, aprende cómo crear bucles infinitos, salir de ellos con 'break' y omitir iteraciones con 'continue'. Descubre las características de flujo de control de Rust.",
        "keywords": "Rust, Programación, Bucle infinito, Flujo de control, Break, Continue"
      },
      "details": {
        "steps": [
          {
            "title": "bucle",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "En este momento, este paso no tiene verificación",
                "file": "verify1-1.sh",
                "hint": "En este momento, este paso no tiene verificación"
              }
            ]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Explorer les boucles infinies en Rust",
      "description": "Dans ce laboratoire, nous explorons l'utilisation du mot clé 'loop' en Rust, qui nous permet de créer une boucle infinie. Nous pouvons sortir de la boucle à tout moment en utilisant l'instruction 'break' et sauter les itérations restantes en utilisant l'instruction 'continue'. Le code d'exemple fourni montre comment incrémenter un compteur et imprimer sa valeur jusqu'à ce qu'une certaine condition soit atteinte, en utilisant 'continue' pour sauter une itération et 'break' pour sortir complètement de la boucle.",
      "meta": {
        "title": "Programmation Rust | Boucles infinies | Flux de contrôle",
        "description": "Explorez l'utilisation du mot clé 'loop' en Rust, apprenez à créer des boucles infinies, à les quitter avec 'break' et à sauter des itérations avec 'continue'. Découvrez les fonctionnalités de flux de contrôle de Rust.",
        "keywords": "Rust, Programmation, Boucles infinies, Flux de contrôle, Break, Continue"
      },
      "details": {
        "steps": [
          {
            "title": "boucle",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Cette étape n'a pas de vérification pour le moment",
                "file": "verify1-1.sh",
                "hint": "Cette étape n'a pas de vérification pour le moment"
              }
            ]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Das Erkunden von endlichen Schleifen in Rust",
      "description": "In diesem Lab untersuchen wir die Verwendung des Schlüsselworts 'loop' in Rust, mit dem wir eine Endlosschleife erstellen können. Wir können die Schleife jederzeit mit der 'break'-Anweisung verlassen und die verbleibenden Iterationen mit der 'continue'-Anweisung überspringen. Der bereitgestellte Beispielcode zeigt, wie ein Zähler erhöht und dessen Wert ausgegeben wird, bis eine bestimmte Bedingung erreicht ist, wobei 'continue' verwendet wird, um eine Iteration zu überspringen und 'break' verwendet wird, um die Schleife vollständig zu verlassen.",
      "meta": {
        "title": "Rust-Programmierung | Endliche Schleifen | Steuerfluss",
        "description": "Erkunden Sie die Verwendung des Schlüsselworts 'loop' in Rust, lernen Sie, wie Sie Endlosschleifen erstellen, sie mit 'break' beenden und Iterationen mit 'continue' überspringen. Entdecken Sie die Steuerflussfunktionen von Rust.",
        "keywords": "Rust, Programmierung, Endliche Schleifen, Steuerfluss, Break, Continue"
      },
      "details": {
        "steps": [
          {
            "title": "Schleife",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Dieser Schritt hat momentan keine Verifizierung",
                "file": "verify1-1.sh",
                "hint": "Dieser Schritt hat momentan keine Verifizierung"
              }
            ]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "Rustの無限ループを探る",
      "description": "この実験では、Rustにおける`loop`キーワードの使い方を調べます。これにより、無限ループを作成できます。`break`文を使っていつでもループを抜けることができ、`continue`文を使って残りの反復処理をスキップすることができます。提供されたサンプルコードは、カウンターをインクリメントし、特定の条件に達するまでその値を表示する方法を示しており、`continue`を使って1回の反復処理をスキップし、`break`を使ってループ全体を抜けます。",
      "meta": {
        "title": "Rustプログラミング | 無限ループ | 制御フロー",
        "description": "Rustにおける`loop`キーワードの使い方を探り、無限ループを作成する方法、`break`でループを抜ける方法、`continue`で反復処理をスキップする方法を学びましょう。Rustの制御フロー機能を発見しましょう。",
        "keywords": "Rust, プログラミング, 無限ループ, 制御フロー, break, continue"
      },
      "details": {
        "steps": [
          {
            "title": "ループ",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "このステップには現在検証項目がありません",
                "file": "verify1-1.sh",
                "hint": "このステップには現在検証項目がありません"
              }
            ]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Изучение бесконечных циклов в Rust",
      "description": "В этой лабораторной работе мы исследуем использование ключевого слова loop в Rust, которое позволяет создавать бесконечный цикл. Мы можем выйти из цикла в любое время с помощью инструкции break и пропустить оставшиеся итерации с помощью инструкции continue. Пример кода, приведенный в работе, демонстрирует, как увеличивать счетчик и выводить его значение до тех пор, пока не наступит определенное условие, используя continue для пропуска одной итерации и break для полного выхода из цикла.",
      "meta": {
        "title": "Программирование на Rust | Бесконечные циклы | Управление потоком",
        "description": "Изучите использование ключевого слова 'loop' в Rust, научитесь создавать бесконечные циклы, выходить из них с помощью 'break' и пропускать итерации с помощью 'continue'. Откройте для себя возможности управления потоком в Rust.",
        "keywords": "Rust, Программирование, Бесконечные циклы, Управление потоком, Break, Continue"
      },
      "details": {
        "steps": [
          {
            "title": "loop",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "На данный момент эта стадия не имеет проверки",
                "file": "verify1-1.sh",
                "hint": "На данный момент эта стадия не имеет проверки"
              }
            ]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    }
  ]
}
