{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Rust Formatting and Display Trait",
  "description": "In this lab, we learned about formatting in Rust and how to use the format! macro to format variables. We saw that formatting is specified using a format string, and different argument types can be used to format the same variable in different ways. The most common formatting trait is Display, which handles cases where the argument type is left unspecified. We saw an example of implementing the Display trait for a City struct, where we formatted the latitude and longitude values. We also saw an example of a Color struct and were tasked with implementing the Display trait for it to display the RGB values and their hexadecimal representation.",
  "meta": {
    "title": "Rust Formatting Fundamentals | Programming Tutorial",
    "description": "Learn the basics of formatting in Rust, including using the format! macro and implementing the Display trait. Explore examples and activities to enhance your Rust coding skills.",
    "keywords": "Rust, formatting, Display trait, programming tutorial, coding, format macro"
  },
  "difficulty": "Beginner",
  "time": 5,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Formatting",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "This step has no verification at the moment",
            "file": "verify1-1.sh",
            "hint": "This step has no verification at the moment",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "rust/expressions_statements",
          "rust/floating_types",
          "rust/for_loop",
          "rust/function_syntax",
          "rust/integer_types",
          "rust/lifetime_specifiers",
          "rust/method_syntax",
          "rust/string_type",
          "rust/traits",
          "rust/variable_declarations"
        ]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": [],
  "license": {
    "name": "MIT",
    "url": "https://github.com/rust-lang/rust-by-example/blob/master/LICENSE-MIT",
    "repo": "https://github.com/rust-lang/rust-by-example"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "Rust 格式化与 Display 特性",
      "description": "在本实验中，我们学习了 Rust 中的格式化以及如何使用 format! 宏来格式化变量。我们了解到格式化是通过格式字符串指定的，并且可以使用不同的参数类型以不同的方式格式化同一个变量。最常见的格式化特性是 Display，它处理参数类型未指定的情况。我们看到了一个为 City 结构体实现 Display 特性的示例，在该示例中我们格式化了纬度和经度值。我们还看到了一个 Color 结构体的示例，并被要求为其实现 Display 特性以显示 RGB 值及其十六进制表示形式。",
      "meta": {
        "title": "Rust 格式化基础 | 编程教程",
        "description": "学习 Rust 中格式化的基础知识，包括使用 format! 宏和实现 Display 特性。探索示例和活动以提升你的 Rust 编码技能。",
        "keywords": "Rust, 格式化，Display 特性，编程教程，编码，格式宏"
      },
      "details": {
        "steps": [
          {
            "title": "格式化",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "此步骤目前没有验证",
                "file": "verify1-1.sh",
                "hint": "此步骤目前没有验证"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Formateo y rasgo Display en Rust",
      "description": "En este laboratorio, aprendimos sobre el formateo en Rust y cómo usar la macro format! para formatear variables. Vimos que el formateo se especifica utilizando una cadena de formato y que diferentes tipos de argumentos se pueden usar para formatear la misma variable de diferentes maneras. El rasgo de formateo más común es Display, que maneja los casos en los que el tipo de argumento no se especifica. Vimos un ejemplo de implementación del rasgo Display para una estructura City, donde formateamos los valores de latitud y longitud. También vimos un ejemplo de una estructura Color y tuvimos la tarea de implementar el rasgo Display para que muestre los valores RGB y su representación hexadecimal.",
      "meta": {
        "title": "Fundamentos del formateo en Rust | Tutorial de programación",
        "description": "Aprende los conceptos básicos del formateo en Rust, incluyendo el uso de la macro format! y la implementación del rasgo Display. Explora ejemplos y actividades para mejorar tus habilidades de codificación en Rust.",
        "keywords": "Rust, formateo, rasgo Display, tutorial de programación, codificación, macro de formato"
      },
      "details": {
        "steps": [
          {
            "title": "Formateo",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "En este momento, este paso no tiene verificación",
                "file": "verify1-1.sh",
                "hint": "En este momento, este paso no tiene verificación"
              }
            ]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Formatage et trait Display en Rust",
      "description": "Dans ce laboratoire, nous avons appris à formater en Rust et à utiliser la macro format! pour formater des variables. Nous avons vu que la mise en forme est spécifiée à l'aide d'une chaîne de formatage, et différents types d'arguments peuvent être utilisés pour formater la même variable de différentes manières. Le trait de formatage le plus courant est Display, qui gère les cas où le type d'argument n'est pas spécifié. Nous avons vu un exemple d'implémentation du trait Display pour une structure City, où nous avons formatté les valeurs de latitude et de longitude. Nous avons également vu un exemple d'une structure Color et avons eu pour tâche d'implémenter le trait Display pour qu'elle affiche les valeurs RGB et leur représentation hexadécimale.",
      "meta": {
        "title": "Fondamentaux du formatage en Rust | Tutoriel de programmation",
        "description": "Découvrez les bases du formatage en Rust, y compris l'utilisation de la macro format! et l'implémentation du trait Display. Explorez des exemples et des activités pour améliorer vos compétences en codage Rust.",
        "keywords": "Rust, formatage, trait Display, tutoriel de programmation, codage, macro de formatage"
      },
      "details": {
        "steps": [
          {
            "title": "Formatage",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Cette étape n'a pas de vérification pour le moment",
                "file": "verify1-1.sh",
                "hint": "Cette étape n'a pas de vérification pour le moment"
              }
            ]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Rust Formatierung und Display-Trait",
      "description": "In diesem Lab haben wir uns mit der Formatierung in Rust und der Verwendung des format!-Makros zur Formatierung von Variablen beschäftigt. Wir haben gesehen, dass die Formatierung über einen Formatstring angegeben wird und dass verschiedene Argumenttypen verwendet werden können, um die gleiche Variable auf verschiedene Weise zu formatieren. Der am häufigsten verwendete Formatierungs-Trait ist Display, der Fälle behandelt, in denen der Argumenttyp nicht angegeben ist. Wir haben ein Beispiel gesehen, wie der Display-Trait für eine City-Strukt implementiert wird, wobei wir die Breiten- und Längengradwerte formatiert haben. Wir haben auch ein Beispiel einer Color-Strukt gesehen und waren damit betraut, den Display-Trait für sie zu implementieren, um die RGB-Werte und ihre hexadezimale Darstellung anzuzeigen.",
      "meta": {
        "title": "Grundlagen der Rust-Formatierung | Programmier-Tutorial",
        "description": "Lernen Sie die Grundlagen der Formatierung in Rust, einschließlich der Verwendung des format!-Makros und der Implementierung des Display-Traits. Entdecken Sie Beispiele und Aktivitäten, um Ihre Rust-Coding-Fähigkeiten zu verbessern.",
        "keywords": "Rust, Formatierung, Display-Trait, Programmier-Tutorial, Coding, Format-Makro"
      },
      "details": {
        "steps": [
          {
            "title": "Formatierung",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Dieser Schritt hat momentan keine Verifizierung",
                "file": "verify1-1.sh",
                "hint": "Dieser Schritt hat momentan keine Verifizierung"
              }
            ]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "Rust のフォーマットと Display トレイト",
      "description": "この実験では、Rust のフォーマットと、変数をフォーマットするために format! マクロをどのように使用するかについて学びました。フォーマットはフォーマット文字列で指定され、同じ変数を異なる方法でフォーマットするためにさまざまな引数型を使用できることがわかりました。最も一般的なフォーマットトレイトは Display で、引数型が指定されていない場合を処理します。City 構造体に対して Display トレイトを実装する例を見ました。ここでは、緯度と経度の値をフォーマットしました。また、Color 構造体の例も見ました。これに対して Display トレイトを実装して RGB 値とその 16 進数表現を表示するように課題を与えられました。",
      "meta": {
        "title": "Rust のフォーマット基本 | プログラミングチュートリアル",
        "description": "Rust のフォーマットの基本を学びましょう。format! マクロの使用や Display トレイトの実装を含みます。例とアクティビティを探って、あなたの Rust コーディングスキルを向上させましょう。",
        "keywords": "Rust, フォーマット，Display トレイト，プログラミングチュートリアル，コーディング，フォーマットマクロ"
      },
      "details": {
        "steps": [
          {
            "title": "フォーマット",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "このステップは現在検証がありません",
                "file": "verify1-1.sh",
                "hint": "このステップは現在検証がありません"
              }
            ]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Форматирование и трейт Display в Rust",
      "description": "В этой лабе мы узнали о форматировании в Rust и о том, как использовать макрос format! для форматирования переменных. Мы увидели, что форматирование задается с использованием строки формата, и для форматирования одной и той же переменной могут использоваться разные типы аргументов по-разному. Самый распространенный трейт форматирования - Display, который обрабатывает случаи, когда тип аргумента не указан. Мы увидели пример реализации трейта Display для структуры City, где мы отформатировали значения широты и долготы. Мы также увидели пример структуры Color и получили задание реализовать для нее трейт Display, чтобы отобразить значения RGB и их шестнадцатеричное представление.",
      "meta": {
        "title": "Основы форматирования в Rust | Руководство по программированию",
        "description": "Изучите основы форматирования в Rust, включая использование макроса format! и реализацию трейта Display. Изучайте примеры и задачи, чтобы повысить свои навыки программирования на Rust.",
        "keywords": "Rust, форматирование, трейт Display, руководство по программированию, программирование, макрос формата"
      },
      "details": {
        "steps": [
          {
            "title": "Форматирование",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "На данный момент эта стадия не имеет проверки",
                "file": "verify1-1.sh",
                "hint": "На данный момент эта стадия не имеет проверки"
              }
            ]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    }
  ]
}
