{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Writing Rust Functions",
  "description": "In this lab, we learn how to write functions in Rust. Functions are declared using the fn keyword, and their arguments are type annotated. The return type, if applicable, is specified after an arrow ->. The final expression in the function serves as the return value, but the return statement can be used to return a value earlier. The lab provides an example of rewriting the FizzBuzz program using functions, demonstrating the use of functions that return boolean values, functions that return the unit type (), and functions without specified return types.",
  "meta": {
    "title": "Write Efficient Rust Functions with Ease",
    "description": "Learn how to write powerful Rust functions that optimize your code and improve performance.",
    "keywords": "rust playground, coding, functions, optimization, rust online compiler, rust commands, rust tutor, rust practice, rust online playground, rust online"
  },
  "difficulty": "Beginner",
  "time": 5,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Functions",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "This step has no verification at the moment",
            "file": "verify1-1.sh",
            "hint": "This step has no verification at the moment",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "rust/boolean_type",
          "rust/expressions_statements",
          "rust/for_loop",
          "rust/function_syntax",
          "rust/integer_types",
          "rust/lifetime_specifiers",
          "rust/operator_overloading",
          "rust/string_type"
        ]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": [],
  "license": {
    "name": "MIT",
    "url": "https://github.com/rust-lang/rust-by-example/blob/master/LICENSE-MIT",
    "repo": "https://github.com/rust-lang/rust-by-example"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "编写Rust函数",
      "description": "在本实验中，我们学习如何在Rust中编写函数。函数使用fn关键字声明，其参数需进行类型标注。如果有返回类型，则在箭头 -> 之后指定。函数中的最后一个表达式用作返回值，但也可以使用return语句提前返回一个值。本实验提供了一个使用函数重写FizzBuzz程序的示例，展示了返回布尔值的函数、返回单元类型 () 的函数以及未指定返回类型的函数的用法。",
      "meta": {
        "title": "轻松编写高效的Rust函数",
        "description": "学习如何编写强大的Rust函数，优化代码并提高性能。",
        "keywords": "rust游乐场, 编码, 函数, 优化, rust在线编译器, rust命令, rust教程, rust练习, rust在线游乐场, rust在线"
      },
      "details": {
        "steps": [
          {
            "title": "函数",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "此步骤目前没有验证",
                "file": "verify1-1.sh",
                "hint": "此步骤目前没有验证"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    }
  ]
}
