{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Exploring Rust Tuples and Transposing Matrices",
  "description": "In this lab, we explore tuples in Rust. Tuples are collections of values of different types and are constructed using parentheses. They can be used as function arguments and return values, allowing functions to return multiple values. Tuples can also be used as members of other tuples. Rust provides tuple indexing to access values in a tuple. Tuples are printable and can be destructured to create bindings. Additionally, we learn how to add the fmt::Display trait to a struct to customize its printing format. Finally, we are given an activity to implement a transpose function that swaps two elements in a matrix.",
  "meta": {
    "title": "Rust Tuples | Programming Tutorials",
    "description": "Explore the power of tuples in Rust programming language. Learn how to use tuples as function arguments, return values, and matrix operations.",
    "keywords": "Rust, Tuples, Programming, Tutorials, Matrix, Transpose"
  },
  "difficulty": "Beginner",
  "time": 5,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Tuples",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "This step has no verification at the moment",
            "file": "verify1-1.sh",
            "hint": "This step has no verification at the moment",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "rust/boolean_type",
          "rust/expressions_statements",
          "rust/floating_types",
          "rust/function_syntax",
          "rust/integer_types",
          "rust/lifetime_specifiers",
          "rust/type_casting",
          "rust/variable_declarations"
        ]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": [],
  "license": {
    "name": "MIT",
    "url": "https://github.com/rust-lang/rust-by-example/blob/master/LICENSE-MIT",
    "repo": "https://github.com/rust-lang/rust-by-example"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "探索 Rust 元组与矩阵转置",
      "description": "在本实验中，我们探索 Rust 中的元组。元组是不同类型值的集合，使用括号构建。它们可用作函数参数和返回值，使函数能够返回多个值。元组也可用作其他元组的成员。Rust 提供元组索引来访问元组中的值。元组是可打印的，并且可以解构以创建绑定。此外，我们将学习如何向结构体添加 `fmt::Display` 特性以自定义其打印格式。最后，我们有一个活动，要求实现一个 `transpose` 函数，该函数用于交换矩阵中的两个元素。",
      "meta": {
        "title": "Rust 元组 | 编程教程",
        "description": "探索 Rust 编程语言中元组的强大功能。学习如何将元组用作函数参数、返回值以及进行矩阵操作。",
        "keywords": "Rust, 元组, 编程, 教程, 矩阵, 转置"
      },
      "details": {
        "steps": [
          {
            "title": "元组",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "此步骤目前没有验证",
                "file": "verify1-1.sh",
                "hint": "此步骤目前没有验证"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    }
  ]
}
