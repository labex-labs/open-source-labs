{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Implementing Generic Types in Rust",
  "description": "In this lab, we learn how to implement generic types and methods in Rust, allowing us to specify different type parameters when using the struct or calling the methods.",
  "meta": {
    "title": "Rust Generic Types and Methods | Programming Tutorials",
    "description": "Learn how to implement generic types and methods in Rust, allowing you to specify different type parameters for your code.",
    "keywords": "Rust, Generic Types, Generic Methods, Programming Tutorials, Rust Programming"
  },
  "difficulty": "Beginner",
  "time": 5,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Implementation",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "This step has no verification at the moment",
            "file": "verify1-1.sh",
            "hint": "This step has no verification at the moment",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "rust/expressions_statements",
          "rust/floating_types",
          "rust/function_syntax",
          "rust/method_syntax",
          "rust/operator_overloading",
          "rust/traits",
          "rust/type_casting",
          "rust/variable_declarations"
        ]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": [],
  "license": {
    "name": "MIT",
    "url": "https://github.com/rust-lang/rust-by-example/blob/master/LICENSE-MIT",
    "repo": "https://github.com/rust-lang/rust-by-example"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "在 Rust 中实现泛型类型",
      "description": "在本实验中，我们学习如何在 Rust 中实现泛型类型和方法，这使我们在使用结构体或调用方法时能够指定不同的类型参数。",
      "meta": {
        "title": "Rust 泛型类型和方法 | 编程教程",
        "description": "学习如何在 Rust 中实现泛型类型和方法，从而能够为你的代码指定不同的类型参数。",
        "keywords": "Rust, 泛型类型, 泛型方法, 编程教程, Rust 编程"
      },
      "details": {
        "steps": [
          {
            "title": "实现",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "此步骤目前没有验证",
                "file": "verify1-1.sh",
                "hint": "此步骤目前没有验证"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Implementar Tipos Genéricos en Rust",
      "description": "En este laboratorio, aprendemos cómo implementar tipos y métodos genéricos en Rust, lo que nos permite especificar diferentes parámetros de tipo cuando usamos la estructura o llamamos a los métodos.",
      "meta": {
        "title": "Tipos y Métodos Genéricos de Rust | Tutoriales de Programación",
        "description": "Aprende cómo implementar tipos y métodos genéricos en Rust, lo que te permite especificar diferentes parámetros de tipo para tu código.",
        "keywords": "Rust, Tipos Genéricos, Métodos Genéricos, Tutoriales de Programación, Programación en Rust"
      },
      "details": {
        "steps": [
          {
            "title": "Implementación",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Este paso no tiene verificación en este momento",
                "file": "verify1-1.sh",
                "hint": "Este paso no tiene verificación en este momento"
              }
            ]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Implémentation de types génériques en Rust",
      "description": "Dans ce laboratoire, nous apprenons à implémenter des types et des méthodes génériques en Rust, ce qui nous permet de spécifier différents paramètres de type lors de l'utilisation de la structure ou de l'appel des méthodes.",
      "meta": {
        "title": "Types et méthodes génériques Rust | Tutoriels de programmation",
        "description": "Découvrez comment implémenter des types et des méthodes génériques en Rust, vous permettant de spécifier différents paramètres de type pour votre code.",
        "keywords": "Rust, Types génériques, Méthodes génériques, Tutoriels de programmation, Programmation Rust"
      },
      "details": {
        "steps": [
          {
            "title": "Implémentation",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Cette étape n'a pas de vérification pour le moment",
                "file": "verify1-1.sh",
                "hint": "Cette étape n'a pas de vérification pour le moment"
              }
            ]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Implementierung von generischen Typen in Rust",
      "description": "In diesem Lab lernen wir, wie wir generische Typen und Methoden in Rust implementieren, was es uns ermöglicht, unterschiedliche Typparameter anzugeben, wenn wir das Struct verwenden oder die Methoden aufrufen.",
      "meta": {
        "title": "Rust - Generische Typen und Methoden | Programmier-Tutorials",
        "description": "Lernen Sie, wie Sie generische Typen und Methoden in Rust implementieren, um unterschiedliche Typparameter für Ihren Code angeben zu können.",
        "keywords": "Rust, Generische Typen, Generische Methoden, Programmier-Tutorials, Rust-Programmierung"
      },
      "details": {
        "steps": [
          {
            "title": "Implementierung",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Dieser Schritt hat momentan keine Verifizierung",
                "file": "verify1-1.sh",
                "hint": "Dieser Schritt hat momentan keine Verifizierung"
              }
            ]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "Rustにおけるジェネリック型の実装",
      "description": "この実験では、Rustでジェネリック型とメソッドを実装する方法を学びます。これにより、構造体を使用する際やメソッドを呼び出す際に、異なる型パラメータを指定できるようになります。",
      "meta": {
        "title": "Rustのジェネリック型とメソッド | プログラミングチュートリアル",
        "description": "Rustでジェネリック型とメソッドを実装する方法を学びましょう。これにより、コードに対して異なる型パラメータを指定できるようになります。",
        "keywords": "Rust, ジェネリック型, ジェネリックメソッド, プログラミングチュートリアル, Rustプログラミング"
      },
      "details": {
        "steps": [
          {
            "title": "実装",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "このステップには現在、検証はありません",
                "file": "verify1-1.sh",
                "hint": "このステップには現在、検証はありません"
              }
            ]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Реализация обобщенных типов в Rust",
      "description": "В этом лабе мы узнаем, как реализовать обобщенные типы и методы в Rust, что позволяет нам задавать разные параметры типа при использовании структуры или вызове методов.",
      "meta": {
        "title": "Обобщенные типы и методы в Rust | Руководства по программированию",
        "description": "Изучите, как реализовать обобщенные типы и методы в Rust, чтобы можно было задавать разные параметры типа для своего кода.",
        "keywords": "Rust, Обобщенные типы, Обобщенные методы, Руководства по программированию, Программирование на Rust"
      },
      "details": {
        "steps": [
          {
            "title": "Реализация",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "На данный момент эта стадия не имеет проверки",
                "file": "verify1-1.sh",
                "hint": "На данный момент эта стадия не имеет проверки"
              }
            ]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    }
  ]
}
