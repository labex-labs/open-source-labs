{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Rust Borrowing Ownership Fundamentals",
  "description": "In this lab, we learn about borrowing in Rust, which allows accessing data without taking ownership by using references ('&T') instead of passing objects by value ('T'). The borrow checker ensures that references always point to valid objects and prevents destruction of objects that are being borrowed.",
  "meta": {
    "title": "Rust Borrowing Concepts | Programming Tutorial",
    "description": "Learn about borrowing in Rust, which allows accessing data without taking ownership using references. Understand the borrow checker and how it ensures references point to valid objects.",
    "keywords": "Rust, Borrowing, References, Borrow Checker, Programming Tutorial"
  },
  "difficulty": "Beginner",
  "time": 5,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Borrowing",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "This step has no verification at the moment",
            "file": "verify1-1.sh",
            "hint": "This step has no verification at the moment",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": []
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": [],
  "license": {
    "name": "MIT",
    "url": "https://github.com/rust-lang/rust-by-example/blob/master/LICENSE-MIT",
    "repo": "https://github.com/rust-lang/rust-by-example"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "Rust 借用所有权基础",
      "description": "在本实验中，我们学习 Rust 中的借用，它允许通过使用引用（'&T'）而非按值传递对象（'T'）来访问数据而不获取所有权。借用检查器确保引用始终指向有效的对象，并防止正在被借用的对象被销毁。",
      "meta": {
        "title": "Rust 借用概念 | 编程教程",
        "description": "了解 Rust 中的借用，它允许使用引用在不获取所有权的情况下访问数据。理解借用检查器以及它如何确保引用指向有效的对象。",
        "keywords": "Rust, 借用，引用，借用检查器，编程教程"
      },
      "details": {
        "steps": [
          {
            "title": "借用",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "此步骤目前没有验证",
                "file": "verify1-1.sh",
                "hint": "此步骤目前没有验证"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Fundamentos del préstamo de propiedad en Rust",
      "description": "En este laboratorio, aprendemos sobre el préstamo en Rust, que permite acceder a datos sin tomar posesión mediante el uso de referencias ('&T') en lugar de pasar objetos por valor ('T'). El verificador de préstamos asegura que las referencias siempre apunten a objetos válidos y evita la destrucción de objetos que se están prestando.",
      "meta": {
        "title": "Conceptos de préstamo en Rust | Tutorial de programación",
        "description": "Aprende sobre el préstamo en Rust, que te permite acceder a datos sin tomar posesión utilizando referencias. Entiende el verificador de préstamos y cómo asegura que las referencias apunten a objetos válidos.",
        "keywords": "Rust, Préstamo, Referencias, Verificador de préstamos, Tutorial de programación"
      },
      "details": {
        "steps": [
          {
            "title": "Préstamo",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "En este momento, este paso no tiene verificaciones",
                "file": "verify1-1.sh",
                "hint": "En este momento, este paso no tiene verificaciones"
              }
            ]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Fondamentaux de la propriété et de l'emprunt en Rust",
      "description": "Dans ce laboratoire, nous allons apprendre à emprunter en Rust, qui permet d'accéder aux données sans prendre la propriété en utilisant des références ('&T') au lieu de passer les objets par valeur ('T'). Le vérificateur d'emprunt s'assure que les références pointent toujours vers des objets valides et empêche la destruction des objets qui sont empruntés.",
      "meta": {
        "title": "Concepts d'emprunt en Rust | Tutoriel de programmation",
        "description": "Découvrez l'emprunt en Rust, qui vous permet d'accéder aux données sans prendre la propriété en utilisant des références. Comprenez le vérificateur d'emprunt et la manière dont il s'assure que les références pointent vers des objets valides.",
        "keywords": "Rust, Emprunt, Références, Vérificateur d'emprunt, Tutoriel de programmation"
      },
      "details": {
        "steps": [
          {
            "title": "Emprunt",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Cette étape n'a pas de vérification pour le moment",
                "file": "verify1-1.sh",
                "hint": "Cette étape n'a pas de vérification pour le moment"
              }
            ]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Grundlagen der Rust-Entleihungseigentumsverwaltung",
      "description": "In diesem Lab lernen wir über das Entleihen in Rust, das es ermöglicht, auf Daten zuzugreifen, ohne die Eigentumsgewalt zu übernehmen, indem Referenzen ('&T') verwendet werden, anstatt Objekte per Wert ('T') zu übergeben. Der Entleihprüfungsmechanismus gewährleistet, dass Referenzen immer auf gültige Objekte verweisen und verhindert die Zerstörung von Objekten, die entliehen werden.",
      "meta": {
        "title": "Rust-Entleihkonzepte | Programmier-Tutorial",
        "description": "Lernen Sie das Entleihen in Rust kennen, das es ermöglicht, auf Daten zuzugreifen, ohne die Eigentumsgewalt zu übernehmen, indem Referenzen verwendet werden. Verstehen Sie den Entleihprüfungsmechanismus und wie er gewährleistet, dass Referenzen auf gültige Objekte verweisen.",
        "keywords": "Rust, Entleihen, Referenzen, Entleihprüfungsmechanismus, Programmier-Tutorial"
      },
      "details": {
        "steps": [
          {
            "title": "Entleihen",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Dieser Schritt hat momentan keine Verifizierung",
                "file": "verify1-1.sh",
                "hint": "Dieser Schritt hat momentan keine Verifizierung"
              }
            ]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "Rust の所有権とバローイングの基本",
      "description": "この実験では、Rust におけるバローイングについて学びます。これは、値渡し（`T`）ではなく参照（`&T`）を使ってオブジェクトの所有権を取得せずにデータにアクセスできるようにします。バローチェッカーは、参照が常に有効なオブジェクトを指すことを保証し、借用中のオブジェクトの破壊を防止します。",
      "meta": {
        "title": "Rust のバローイング概念 | プログラミングチュートリアル",
        "description": "Rust におけるバローイングについて学びましょう。これは、参照を使って所有権を取得することなくデータにアクセスできるようにします。バローチェッカーと、それが参照が有効なオブジェクトを指すことをどのように保証するかを理解しましょう。",
        "keywords": "Rust, バローイング，参照，バローチェッカー, プログラミングチュートリアル"
      },
      "details": {
        "steps": [
          {
            "title": "バローイング",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "このステップは現在、検証項目がありません",
                "file": "verify1-1.sh",
                "hint": "このステップは現在、検証項目がありません"
              }
            ]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Основы владения и заимствования в Rust",
      "description": "В этом лабе мы узнаем о заимствовании в Rust, которое позволяет получать доступ к данным без передачи владения, используя ссылки ('&T') вместо передачи объектов по значению ('T'). Проверщик заимствований гарантирует, что ссылки всегда указывают на валидные объекты и предотвращает уничтожение объектов, которые используются в качестве заимствования.",
      "meta": {
        "title": "Концепции заимствования в Rust | Руководство по программированию",
        "description": "Изучите заимствование в Rust, которое позволяет получать доступ к данным без передачи владения с использованием ссылок. Разберитесь в проверщике заимствований и том, как он гарантирует, что ссылки указывают на валидные объекты.",
        "keywords": "Rust, Заимствование, Ссылки, Проверщик заимствований, Руководство по программированию"
      },
      "details": {
        "steps": [
          {
            "title": "Заимствование",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "На данный момент эта стадия не имеет проверки",
                "file": "verify1-1.sh",
                "hint": "На данный момент эта стадия не имеет проверки"
              }
            ]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    },
    {
      "lang": "ko",
      "title": "Rust 차용과 소유권 기본 개념",
      "description": "이 랩에서는 Rust 의 차용 (borrowing) 에 대해 배우며, 객체를 값으로 전달하는 대신 ('T') 참조 ('&T') 를 사용하여 소유권을 가져가지 않고 데이터에 접근하는 방법을 배웁니다. 차용 검사기 (borrow checker) 는 참조가 항상 유효한 객체를 가리키도록 보장하고, 차용 중인 객체의 파괴를 방지합니다.",
      "meta": {
        "title": "Rust 차용 개념 | 프로그래밍 튜토리얼",
        "description": "참조를 사용하여 소유권을 가져가지 않고 데이터에 접근하는 Rust 의 차용 (borrowing) 에 대해 알아보세요. 차용 검사기 (borrow checker) 와 참조가 유효한 객체를 가리키도록 하는 방법을 이해하세요.",
        "keywords": "Rust, 차용, 참조, 차용 검사기, 프로그래밍 튜토리얼, 러스트, 러스트 프로그래밍"
      },
      "details": {
        "steps": [
          {
            "title": "차용 (Borrowing)",
            "text": "ko/step1.md",
            "verify": [
              {
                "name": "현재 이 단계에는 검증이 없습니다.",
                "file": "verify1-1.sh",
                "hint": "현재 이 단계에는 검증이 없습니다."
              }
            ]
          }
        ],
        "intro": {
          "text": "ko/intro.md",
          "title": "소개"
        },
        "finish": {
          "text": "ko/finish.md",
          "title": "요약"
        }
      }
    },
    {
      "lang": "pt",
      "title": "Fundamentos de Empréstimo (Borrowing) e Ownership em Rust",
      "description": "Neste laboratório, aprendemos sobre empréstimo (borrowing) em Rust, que permite acessar dados sem tomar posse (ownership) usando referências ('&T') em vez de passar objetos por valor ('T'). O *borrow checker* garante que as referências sempre apontem para objetos válidos e impede a destruição de objetos que estão sendo emprestados.",
      "meta": {
        "title": "Conceitos de Empréstimo (Borrowing) em Rust | Tutorial de Programação",
        "description": "Aprenda sobre empréstimo (borrowing) em Rust, que permite acessar dados sem tomar posse usando referências. Entenda o *borrow checker* e como ele garante que as referências apontem para objetos válidos.",
        "keywords": "Rust, Empréstimo, Borrowing, Referências, Borrow Checker, Tutorial de Programação, Programação Rust"
      },
      "details": {
        "steps": [
          {
            "title": "Empréstimo (Borrowing)",
            "text": "pt/step1.md",
            "verify": [
              {
                "name": "Este passo não possui verificação no momento",
                "file": "verify1-1.sh",
                "hint": "Este passo não possui verificação no momento"
              }
            ]
          }
        ],
        "intro": {
          "text": "pt/intro.md",
          "title": "Introdução"
        },
        "finish": {
          "text": "pt/finish.md",
          "title": "Resumo"
        }
      }
    }
  ]
}
