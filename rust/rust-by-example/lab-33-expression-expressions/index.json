{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Rust Programming Fundamentals: Variable Bindings and Expressions",
  "description": "In this lab, a Rust program is primarily composed of statements which can include variable bindings and expressions. Statements are designated by a ;, while expressions are followed by a ; and can be used as values in assignments. Additionally, blocks are also considered expressions and can be assigned to local variables, with the last expression serving as the assigned value. However, if the last expression within a block ends with a semicolon, the return value will be ().",
  "meta": {
    "title": "Rust Programming Fundamentals | Expressions and Statements",
    "description": "Explore the core concepts of Rust programming, including variable bindings, expressions, and blocks as expressions. Learn how to write efficient and effective Rust code.",
    "keywords": "Rust, Programming, Expressions, Statements, Variable Bindings, Blocks"
  },
  "difficulty": "Beginner",
  "time": 5,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Expressions",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "This step has no verification at the moment",
            "file": "verify1-1.sh",
            "hint": "This step has no verification at the moment",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "rust/expressions_statements",
          "rust/function_syntax",
          "rust/variable_declarations"
        ]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": [],
  "license": {
    "name": "MIT",
    "url": "https://github.com/rust-lang/rust-by-example/blob/master/LICENSE-MIT",
    "repo": "https://github.com/rust-lang/rust-by-example"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "Rust 编程基础：变量绑定与表达式",
      "description": "在本实验中，一个 Rust 程序主要由语句组成，这些语句可以包含变量绑定和表达式。语句由分号（;）标识，而表达式后面跟着分号，并且可以在赋值中用作值。此外，代码块也被视为表达式，可以赋值给局部变量，最后一个表达式用作赋值的值。但是，如果代码块中的最后一个表达式以分号结尾，则返回值将为 ()。",
      "meta": {
        "title": "Rust 编程基础 | 表达式与语句",
        "description": "探索 Rust 编程的核心概念，包括变量绑定、表达式以及作为表达式的代码块。学习如何编写高效且有效的 Rust 代码。",
        "keywords": "Rust, 编程, 表达式, 语句, 变量绑定, 代码块"
      },
      "details": {
        "steps": [
          {
            "title": "表达式",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "此步骤目前没有验证",
                "file": "verify1-1.sh",
                "hint": "此步骤目前没有验证"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Fundamentos de la Programación en Rust: Enlaces de Variables y Expresiones",
      "description": "En este laboratorio, un programa Rust está compuesto principalmente por declaraciones que pueden incluir enlaces de variables y expresiones. Las declaraciones se designan con un ;, mientras que las expresiones se siguen con un ; y se pueden usar como valores en asignaciones. Además, los bloques también se consideran expresiones y se pueden asignar a variables locales, con la última expresión que sirve como el valor asignado. Sin embargo, si la última expresión dentro de un bloque termina con un punto y coma, el valor de retorno será ().",
      "meta": {
        "title": "Fundamentos de la Programación en Rust | Expresiones y Declaraciones",
        "description": "Explora los conceptos básicos de la programación en Rust, incluyendo enlaces de variables, expresiones y bloques como expresiones. Aprende a escribir código en Rust eficiente y efectivo.",
        "keywords": "Rust, Programación, Expresiones, Declaraciones, Enlaces de Variables, Bloques"
      },
      "details": {
        "steps": [
          {
            "title": "Expresiones",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "En este momento, este paso no tiene verificación",
                "file": "verify1-1.sh",
                "hint": "En este momento, este paso no tiene verificación"
              }
            ]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Fondamentaux de la programmation Rust : Liaisons de variables et Expressions",
      "description": "Dans ce laboratoire, un programme Rust est principalement composé d'instructions qui peuvent inclure des liaisons de variables et des expressions. Les instructions sont désignées par un ;, tandis que les expressions sont suivies d'un ; et peuvent être utilisées comme valeurs dans des affectations. De plus, les blocs sont également considérés comme des expressions et peuvent être assignés à des variables locales, avec la dernière expression servant de valeur assignée. Cependant, si la dernière expression à l'intérieur d'un bloc se termine par un point-virgule, la valeur de retour sera ().",
      "meta": {
        "title": "Fondamentaux de la programmation Rust | Expressions et Instructions",
        "description": "Explorez les concepts clés de la programmation Rust, y compris les liaisons de variables, les expressions et les blocs considérés comme des expressions. Apprenez à écrire du code Rust efficace et performant.",
        "keywords": "Rust, Programmation, Expressions, Instructions, Liaisons de variables, Blocs"
      },
      "details": {
        "steps": [
          {
            "title": "Expressions",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Cette étape n'a pas de vérification pour le moment",
                "file": "verify1-1.sh",
                "hint": "Cette étape n'a pas de vérification pour le moment"
              }
            ]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Grundlagen der Rust-Programmierung: Variablebindungen und Ausdrücke",
      "description": "In diesem Lab besteht ein Rust-Programm hauptsächlich aus Anweisungen, die Variablebindungen und Ausdrücke enthalten können. Anweisungen werden durch ein ; gekennzeichnet, während Ausdrücke mit einem ; enden und als Werte in Zuweisungen verwendet werden können. Darüber hinaus werden Blöcke ebenfalls als Ausdrücke betrachtet und können an lokale Variablen zugewiesen werden, wobei der letzte Ausdruck als zugewiesener Wert dient. Wenn jedoch der letzte Ausdruck innerhalb eines Blocks mit einem Semikolon endet, ist der Rückgabewert ().",
      "meta": {
        "title": "Grundlagen der Rust-Programmierung | Ausdrücke und Anweisungen",
        "description": "Erkunden Sie die Kernkonzepte der Rust-Programmierung, einschließlich Variablebindungen, Ausdrücke und Blöcke als Ausdrücke. Lernen Sie, wie effizientes und effektives Rust-Code geschrieben wird.",
        "keywords": "Rust, Programmierung, Ausdrücke, Anweisungen, Variablebindungen, Blöcke"
      },
      "details": {
        "steps": [
          {
            "title": "Ausdrücke",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Dieser Schritt hat momentan keine Verifizierung",
                "file": "verify1-1.sh",
                "hint": "Dieser Schritt hat momentan keine Verifizierung"
              }
            ]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "Rust プログラミングの基礎: 変数束縛と式",
      "description": "この実験では、Rust プログラムは主に文で構成されており、それには変数束縛と式が含まれる場合があります。文は `;` で指定され、式は `;` で終わり、代入で値として使用できます。また、ブロックも式と見なされ、ローカル変数に割り当てることができ、ブロック内の最後の式が割り当てられる値となります。ただし、ブロック内の最後の式がセミコロンで終わる場合、戻り値は `()` になります。",
      "meta": {
        "title": "Rust プログラミングの基礎 | 式と文",
        "description": "Rust プログラミングのコアコンセプトを探り、変数束縛、式、および式としてのブロックを含めます。効率的で有効な Rust コードを書く方法を学びましょう。",
        "keywords": "Rust, プログラミング, 式, 文, 変数束縛, ブロック"
      },
      "details": {
        "steps": [
          {
            "title": "式",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "このステップは現在検証がありません",
                "file": "verify1-1.sh",
                "hint": "このステップは現在検証がありません"
              }
            ]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Основы программирования на Rust: связывание переменных и выражения",
      "description": "В этой лабораторной работе программа на Rust в основном состоит из инструкций, которые могут включать связывание переменных и выражения. Инструкции обозначаются знаком ;, в то время как выражения заканчиваются знаком ; и могут использоваться в качестве значений при присвоении. Кроме того, блоки также рассматриваются как выражения и могут быть присвоены локальным переменным, при этом последнее выражение служит значением, которое присваивается. Однако, если последнее выражение внутри блока заканчивается точкой с запятой, возвращаемое значение будет ().",
      "meta": {
        "title": "Основы программирования на Rust | Выражения и инструкции",
        "description": "Изучите основные концепции программирования на Rust, включая связывание переменных, выражения и блоки как выражения. научитесь писать эффективный и качественный код на Rust.",
        "keywords": "Rust, Программирование, Выражения, Инструкции, Связывание переменных, Блоки"
      },
      "details": {
        "steps": [
          {
            "title": "Выражения",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "На данный момент эта стадия не имеет проверки",
                "file": "verify1-1.sh",
                "hint": "На данный момент эта стадия не имеет проверки"
              }
            ]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    }
  ]
}
