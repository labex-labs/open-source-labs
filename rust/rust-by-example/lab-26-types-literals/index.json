{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Rust Literals and Type Specification",
  "description": "In this lab, we learn about literals in Rust and how to specify their types by adding a suffix. Suffixed literals have their types known at initialization, while unsuffixed literals' types depend on how they are used. The size_of_val function is used to determine the size of a variable in bytes, and it is called with its full path, std::mem::size_of_val. The size_of_val function is defined in the mem module, which is in turn defined in the std crate.",
  "meta": {
    "title": "Rust Literals | Programming Fundamentals",
    "description": "Learn about literals in Rust and how to specify their types using suffixes. Explore unsuffixed literals and the size_of_val function.",
    "keywords": "Rust, Literals, Type Annotation, size_of_val, Programming Fundamentals"
  },
  "difficulty": "Beginner",
  "time": 5,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Literals",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "This step has no verification at the moment",
            "file": "verify1-1.sh",
            "hint": "This step has no verification at the moment",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "rust/expressions_statements",
          "rust/function_syntax",
          "rust/method_syntax",
          "rust/variable_declarations"
        ]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": [],
  "license": {
    "name": "MIT",
    "url": "https://github.com/rust-lang/rust-by-example/blob/master/LICENSE-MIT",
    "repo": "https://github.com/rust-lang/rust-by-example"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "Rust 字面量与类型指定",
      "description": "在本实验中，我们学习 Rust 中的字面量，以及如何通过添加后缀来指定它们的类型。带后缀的字面量在初始化时就已知其类型，而无后缀的字面量的类型则取决于它们的使用方式。`size_of_val` 函数用于确定变量以字节为单位的大小，它通过其完整路径 `std::mem::size_of_val` 来调用。`size_of_val` 函数在 `mem` 模块中定义，而 `mem` 模块又在 `std` 包中定义。",
      "meta": {
        "title": "Rust 字面量 | 编程基础",
        "description": "了解 Rust 中的字面量以及如何使用后缀指定其类型。探索无后缀字面量和 `size_of_val` 函数。",
        "keywords": "Rust, 字面量, 类型注释, size_of_val, 编程基础"
      },
      "details": {
        "steps": [
          {
            "title": "字面量",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "此步骤目前没有验证",
                "file": "verify1-1.sh",
                "hint": "此步骤目前没有验证"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    }
  ]
}
