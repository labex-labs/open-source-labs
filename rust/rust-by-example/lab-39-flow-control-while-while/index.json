{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Rust FizzBuzz Loop Programming",
  "description": "In this lab, we learn about the while keyword, which is used to create a loop that continues executing as long as a specified condition is true. To illustrate its usage, we write a program in Rust called FizzBuzz. The program uses a while loop to iterate through numbers from 1 to 100. Inside the loop, it checks if the current number is divisible by 3 and 5 (i.e., a multiple of 15) and prints 'fizzbuzz' in such cases. If the number is only divisible by 3, it prints 'fizz', and if it is only divisible by 5, it prints 'buzz'. For all other numbers, it simply prints the number itself. The loop continues until the counter variable reaches 101, incrementing it after printing each number or label.",
  "meta": {
    "title": "Master Rust FizzBuzz with While Loops",
    "description": "Learn how to use Rust's while loop to create the classic FizzBuzz program, a popular coding exercise.",
    "keywords": "rust playground, while loop, fizzbuzz, programming tutorial, rust tutor, coding exercise, rust online compiler, rust commands, rust practice, rust online"
  },
  "difficulty": "Beginner",
  "time": 5,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "while",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "This step has no verification at the moment",
            "file": "verify1-1.sh",
            "hint": "This step has no verification at the moment",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "rust/expressions_statements",
          "rust/function_syntax",
          "rust/mutable_variables",
          "rust/string_type",
          "rust/variable_declarations"
        ]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": [],
  "license": {
    "name": "MIT",
    "url": "https://github.com/rust-lang/rust-by-example/blob/master/LICENSE-MIT",
    "repo": "https://github.com/rust-lang/rust-by-example"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "Rust 实现 FizzBuzz 循环编程",
      "description": "在本实验中，我们学习 `while` 关键字，它用于创建一个只要指定条件为真就会持续执行的循环。为了说明其用法，我们用 Rust 编写一个名为 FizzBuzz 的程序。该程序使用 `while` 循环遍历从 1 到 100 的数字。在循环内部，它会检查当前数字是否能被 3 和 5 整除（即 15 的倍数），若是则打印 \"fizzbuzz\"。如果数字仅能被 3 整除，就打印 \"fizz\"，若仅能被 5 整除，则打印 \"buzz\"。对于所有其他数字，它只打印数字本身。循环会持续进行，直到计数器变量达到 101，每次打印完数字或标签后都会递增计数器变量。",
      "meta": {
        "title": "使用 While 循环掌握 Rust FizzBuzz",
        "description": "学习如何使用 Rust 的 while 循环创建经典的 FizzBuzz 程序，这是一个流行的编码练习。",
        "keywords": "Rust 在线编译器, while 循环, FizzBuzz, 编程教程, Rust 练习, 编码练习, Rust 在线, Rust 命令, Rust 游乐场, Rust 导师"
      },
      "details": {
        "steps": [
          {
            "title": "while",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "此步骤目前没有验证",
                "file": "verify1-1.sh",
                "hint": "此步骤目前没有验证"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    }
  ]
}
