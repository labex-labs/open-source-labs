{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Domain Specific Languages ",
  "description": "In this lab, we explore the concept of Domain Specific Languages (DSLs) in Rust, which are mini 'languages' embedded in Rust macros. These macros expand into normal Rust constructs but offer a concise and intuitive syntax for specific functionality. A practical example is demonstrated using a calculator API, where an expression is supplied to the macro, and the output is printed to the console. This allows for the creation of more complex interfaces like the ones found in libraries such as lazy_static or clap.",
  "meta": {
    "title": "Mastering Domain Specific Languages in Rust",
    "description": "Explore the power of Domain Specific Languages (DSLs) in Rust, a concise and intuitive way to create custom functionality.",
    "keywords": "dsl, rust playground, domain specific languages, rust tutor, rust online compiler, rust commands, macros, rust practice, rust online playground, rust online"
  },
  "difficulty": "Beginner",
  "time": 5,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Domain Specific Languages (DSLs)",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "This step has no verification at the moment",
            "file": "verify1-1.sh",
            "hint": "This step has no verification at the moment",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": []
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": [],
  "license": {
    "name": "MIT",
    "url": "https://github.com/rust-lang/rust-by-example/blob/master/LICENSE-MIT",
    "repo": "https://github.com/rust-lang/rust-by-example"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "领域特定语言",
      "description": "在本实验中，我们探索 Rust 中的领域特定语言（DSL）概念，这些 DSL 是嵌入在 Rust 宏中的小型“语言”。这些宏会扩展为普通的 Rust 结构，但为特定功能提供简洁直观的语法。通过计算器 API 展示了一个实际示例，其中将表达式提供给宏，并将输出打印到控制台。这允许创建更复杂的接口，就像在 lazy_static 或 clap 等库中找到的接口一样。",
      "meta": {
        "title": "掌握 Rust 中的领域特定语言",
        "description": "探索 Rust 中领域特定语言（DSL）的强大功能，这是一种创建自定义功能的简洁直观方式。",
        "keywords": "DSL, Rust 游乐场，领域特定语言，Rust 教程，Rust 在线编译器，Rust 命令，宏，Rust 练习，Rust 在线游乐场，Rust 在线"
      },
      "details": {
        "steps": [
          {
            "title": "领域特定语言（DSLs）",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "此步骤目前没有验证",
                "file": "verify1-1.sh",
                "hint": "此步骤目前没有验证"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Lenguajes Específicos de Dominio ",
      "description": "En este laboratorio, exploramos el concepto de Lenguajes Específicos de Dominio (DSLs) en Rust, que son mini 'lenguajes' incrustados en macros de Rust. Estas macros se expanden en constructos normales de Rust, pero ofrecen una sintaxis concisa e intuitiva para una funcionalidad específica. Se demuestra un ejemplo práctico utilizando una API de calculadora, donde se suministra una expresión a la macro y la salida se imprime en la consola. Esto permite la creación de interfaces más complejas como las que se encuentran en bibliotecas como lazy_static o clap.",
      "meta": {
        "title": "Dominando los Lenguajes Específicos de Dominio en Rust",
        "description": "Explora el poder de los Lenguajes Específicos de Dominio (DSLs) en Rust, una forma concisa e intuitiva de crear funcionalidad personalizada.",
        "keywords": "dsl, playground de rust, lenguajes específicos de dominio, tutor de rust, compilador en línea de rust, comandos de rust, macros, práctica de rust, playground en línea de rust, rust en línea"
      },
      "details": {
        "steps": [
          {
            "title": "Lenguajes Específicos de Dominio (DSLs)",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Este paso no tiene verificaciones en este momento",
                "file": "verify1-1.sh",
                "hint": "Este paso no tiene verificaciones en este momento"
              }
            ]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Domain Specific Languages ",
      "description": "Dans ce laboratoire, nous explorons le concept de Domain Specific Languages (DSLs) en Rust, qui sont de mini 'langages' intégrés dans les macros Rust. Ces macros se développent en constructions Rust normales, mais offrent une syntaxe concise et intuitive pour une fonctionnalité spécifique. Un exemple pratique est démontré en utilisant une API de calculatrice, où une expression est fournie à la macro, et la sortie est imprimée dans la console. Cela permet de créer des interfaces plus complexes comme celles trouvées dans des bibliothèques telles que lazy_static ou clap.",
      "meta": {
        "title": "Maîtriser les Domain Specific Languages en Rust",
        "description": "Explorez le pouvoir des Domain Specific Languages (DSLs) en Rust, une manière concise et intuitive de créer une fonctionnalité personnalisée.",
        "keywords": "dsl, terrain de jeu rust, domain specific languages, tuteur rust, compilateur en ligne rust, commandes rust, macros, pratique rust, terrain de jeu en ligne rust, rust en ligne"
      },
      "details": {
        "steps": [
          {
            "title": "Domain Specific Languages (DSLs)",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Cette étape n'a pas de vérification pour le moment",
                "file": "verify1-1.sh",
                "hint": "Cette étape n'a pas de vérification pour le moment"
              }
            ]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Domain Specific Languages ",
      "description": "In diesem Lab untersuchen wir das Konzept von Domain Specific Languages (DSLs) in Rust, die als kleine 'Sprachen' in Rust-Makros eingebettet sind. Diese Makros erweitern sich zu normalen Rust-Konstrukten, bieten jedoch eine präzise und intuitive Syntax für spezifische Funktionen. Ein praktisches Beispiel wird anhand einer Taschenrechner-API demonstriert, bei der ein Ausdruck an das Makro übergeben wird und das Ergebnis auf der Konsole ausgegeben wird. Dies ermöglicht die Erstellung von komplexeren Schnittstellen wie denen in Bibliotheken wie lazy_static oder clap.",
      "meta": {
        "title": "Meisterhaft in Domain Specific Languages in Rust",
        "description": "Entdecken Sie die Macht von Domain Specific Languages (DSLs) in Rust, eine präzise und intuitive Methode, um benutzerdefinierte Funktionen zu erstellen.",
        "keywords": "dsl, rust spielplatz, domain specific languages, rust lehrer, rust online compiler, rust befehle, makros, rust übung, rust online spielplatz, rust online"
      },
      "details": {
        "steps": [
          {
            "title": "Domain Specific Languages (DSLs)",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Dieser Schritt hat momentan keine Verifizierung",
                "file": "verify1-1.sh",
                "hint": "Dieser Schritt hat momentan keine Verifizierung"
              }
            ]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "ドメイン固有言語 ",
      "description": "この実験では、Rust におけるドメイン固有言語 (DSL) の概念を探ります。これらは、Rust マクロに埋め込まれたミニ '言語' です。これらのマクロは通常の Rust 構文に展開されますが、特定の機能に対して簡潔で直感的な構文を提供します。計算機 API を使った実用的な例を示します。ここでは、式をマクロに渡し、出力をコンソールに表示します。これにより、lazy_static や clap などのライブラリにあるような、より複雑なインターフェイスを作成できます。",
      "meta": {
        "title": "Rust におけるドメイン固有言語のマスター",
        "description": "Rust におけるドメイン固有言語 (DSL) の力を探求しましょう。カスタム機能を作成するための簡潔で直感的な方法です。",
        "keywords": "DSL,Rust プレイグラウンド，ドメイン固有言語，Rust チューター,Rust オンラインコンパイラ，Rust コマンド，マクロ，Rust 練習，Rust オンラインプレイグラウンド，Rust オンライン"
      },
      "details": {
        "steps": [
          {
            "title": "ドメイン固有言語 (DSL)",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "このステップは現在検証がありません",
                "file": "verify1-1.sh",
                "hint": "このステップは現在検証がありません"
              }
            ]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Доменные специфические языки ",
      "description": "В этом лабораторном задании мы исследуем концепцию доменных специфических языков (DSL) на Rust, которые представляют собой мини-«языки», встроенные в макросы Rust. Эти макросы расширяются в обычные конструкции Rust, но предлагают простой и интуитивный синтаксис для определенной функциональности. В качестве практического примера демонстрируется использование API калькулятора, где выражение передается в макрос, а результат выводится на консоль. Это позволяет создавать более сложные интерфейсы, подобные тем, которые можно встретить в библиотеках, таких как lazy_static или clap.",
      "meta": {
        "title": "Мастерство в доменных специфических языках на Rust",
        "description": "Исследуйте мощь доменных специфических языков (DSL) на Rust, простой и интуитивный способ создания пользовательской функциональности.",
        "keywords": "dsl, rust playground, доменные специфические языки, rust tutor, rust online compiler, rust команды, макросы, rust практика, rust online playground, rust online"
      },
      "details": {
        "steps": [
          {
            "title": "Доменные специфические языки (DSL)",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "На данный момент эта стадия не имеет проверки",
                "file": "verify1-1.sh",
                "hint": "На данный момент эта стадия не имеет проверки"
              }
            ]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    },
    {
      "lang": "ko",
      "title": "도메인 특화 언어 (DSL)",
      "description": "이 랩에서는 Rust 매크로에 내장된 미니 '언어'인 Rust 의 도메인 특화 언어 (DSL, Domain Specific Languages) 개념을 탐구합니다. 이러한 매크로는 일반적인 Rust 구조로 확장되지만 특정 기능에 대한 간결하고 직관적인 구문을 제공합니다. 계산기 API 를 사용하여 표현식을 매크로에 제공하고 출력을 콘솔에 출력하는 실용적인 예시를 보여줍니다. 이를 통해 lazy_static 또는 clap 과 같은 라이브러리에서 발견되는 것과 같은 더 복잡한 인터페이스를 만들 수 있습니다.",
      "meta": {
        "title": "Rust 에서 도메인 특화 언어 (DSL) 마스터하기",
        "description": "Rust 에서 DSL (Domain Specific Languages) 의 강력함을 탐구하세요. 사용자 정의 기능을 만들 수 있는 간결하고 직관적인 방법입니다.",
        "keywords": "dsl, rust playground, 도메인 특화 언어, rust 튜터, rust 온라인 컴파일러, rust 명령어, 매크로, rust 연습, rust 온라인 플레이그라운드, rust 온라인"
      },
      "details": {
        "steps": [
          {
            "title": "도메인 특화 언어 (DSL)",
            "text": "ko/step1.md",
            "verify": [
              {
                "name": "현재 이 단계에는 검증이 없습니다.",
                "file": "verify1-1.sh",
                "hint": "현재 이 단계에는 검증이 없습니다."
              }
            ]
          }
        ],
        "intro": {
          "text": "ko/intro.md",
          "title": "소개"
        },
        "finish": {
          "text": "ko/finish.md",
          "title": "요약"
        }
      }
    },
    {
      "lang": "pt",
      "title": "Linguagens de Domínio Específico",
      "description": "Neste laboratório, exploramos o conceito de Linguagens de Domínio Específico (DSLs) em Rust, que são mini 'linguagens' embutidas em macros Rust. Essas macros se expandem em construções Rust normais, mas oferecem uma sintaxe concisa e intuitiva para funcionalidades específicas. Um exemplo prático é demonstrado usando uma API de calculadora, onde uma expressão é fornecida à macro, e a saída é impressa no console. Isso permite a criação de interfaces mais complexas, como as encontradas em bibliotecas como lazy_static ou clap.",
      "meta": {
        "title": "Dominando Linguagens de Domínio Específico em Rust",
        "description": "Explore o poder das Linguagens de Domínio Específico (DSLs) em Rust, uma maneira concisa e intuitiva de criar funcionalidades personalizadas.",
        "keywords": "dsl, rust playground, linguagens de domínio específico, tutorial rust, compilador online rust, comandos rust, macros, prática rust, playground online rust, rust online"
      },
      "details": {
        "steps": [
          {
            "title": "Linguagens de Domínio Específico (DSLs)",
            "text": "pt/step1.md",
            "verify": [
              {
                "name": "Este passo não possui verificação no momento",
                "file": "verify1-1.sh",
                "hint": "Este passo não possui verificação no momento"
              }
            ]
          }
        ],
        "intro": {
          "text": "pt/intro.md",
          "title": "Introdução"
        },
        "finish": {
          "text": "pt/finish.md",
          "title": "Resumo"
        }
      }
    }
  ]
}
