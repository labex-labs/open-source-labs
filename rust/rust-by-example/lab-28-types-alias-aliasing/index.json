{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Rust Aliasing: Enhancing Code Readability",
  "description": "In this lab, we learn about aliasing in Rust, which allows us to give a new name to an existing type using the type statement. Aliases must follow certain naming conventions, and can be used to create new names for primitive types or user-defined types. The main purpose of aliases is to reduce code duplication and improve readability.",
  "meta": {
    "title": "Rust Aliasing Fundamentals | Programming Tutorials",
    "description": "Explore the power of aliasing in Rust, a versatile programming language. Learn how to create new names for existing types and improve code readability.",
    "keywords": "Rust, Aliasing, Programming Tutorials, Code Readability, Type Aliases"
  },
  "difficulty": "Beginner",
  "time": 5,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Aliasing",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "This step has no verification at the moment",
            "file": "verify1-1.sh",
            "hint": "This step has no verification at the moment",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": []
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": [],
  "license": {
    "name": "MIT",
    "url": "https://github.com/rust-lang/rust-by-example/blob/master/LICENSE-MIT",
    "repo": "https://github.com/rust-lang/rust-by-example"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "Rust 别名：提升代码可读性",
      "description": "在本实验中，我们学习 Rust 中的别名，它允许我们使用 `type` 语句为现有类型赋予新名称。别名必须遵循特定的命名约定，可用于为原始类型或用户定义类型创建新名称。别名的主要目的是减少代码重复并提高可读性。",
      "meta": {
        "title": "Rust 别名基础 | 编程教程",
        "description": "探索 Rust 这一多功能编程语言中别名的强大功能。学习如何为现有类型创建新名称并提高代码可读性。",
        "keywords": "Rust, 别名，编程教程，代码可读性，类型别名"
      },
      "details": {
        "steps": [
          {
            "title": "别名",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "此步骤目前没有验证",
                "file": "verify1-1.sh",
                "hint": "此步骤目前没有验证"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Alias en Rust: Mejora la legibilidad del código",
      "description": "En este laboratorio, aprendemos sobre el alias en Rust, que nos permite dar un nuevo nombre a un tipo existente utilizando la declaración type. Los alias deben seguir ciertas convenciones de nomenclatura y se pueden utilizar para crear nuevos nombres para tipos primitivos o tipos definidos por el usuario. El principal propósito de los alias es reducir la duplicación de código y mejorar la legibilidad.",
      "meta": {
        "title": "Fundamentos del alias en Rust | Tutoriales de programación",
        "description": "Explora el poder del alias en Rust, un lenguaje de programación versátil. Aprende cómo crear nuevos nombres para tipos existentes y mejorar la legibilidad del código.",
        "keywords": "Rust, Alias, Tutoriales de programación, Legibilidad del código, Alias de tipo"
      },
      "details": {
        "steps": [
          {
            "title": "Aliasing",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Este paso no tiene verificación en este momento",
                "file": "verify1-1.sh",
                "hint": "Este paso no tiene verificación en este momento"
              }
            ]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Aliasage en Rust : Amélioration de la lisibilité du code",
      "description": "Dans ce laboratoire, nous apprenons à utiliser l'aliasage en Rust, qui nous permet de donner un nouveau nom à un type existant en utilisant l'instruction type. Les alias doivent suivre certaines conventions de nommage et peuvent être utilisés pour créer de nouveaux noms pour les types primitifs ou les types définis par l'utilisateur. Le principal but des alias est de réduire la duplication de code et d'améliorer la lisibilité.",
      "meta": {
        "title": "Fondamentals de l'aliasage en Rust | Tutoriels de programmation",
        "description": "Explorez le pouvoir de l'aliasage en Rust, un langage de programmation polyvalent. Apprenez à créer de nouveaux noms pour les types existants et à améliorer la lisibilité du code.",
        "keywords": "Rust, Aliasage, Tutoriels de programmation, Lisibilité du code, Alias de type"
      },
      "details": {
        "steps": [
          {
            "title": "Aliasage",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Cette étape n'a pas de vérification pour le moment",
                "file": "verify1-1.sh",
                "hint": "Cette étape n'a pas de vérification pour le moment"
              }
            ]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Rust Aliasing: Verbesserung der Code-Lesbarkeit",
      "description": "In diesem Lab lernen wir über Aliasing in Rust, das es uns ermöglicht, einem bestehenden Typ einen neuen Namen zu geben, indem wir die type-Anweisung verwenden. Aliase müssen bestimmte Namenskonventionen befolgen und können verwendet werden, um neue Namen für primitive Typen oder benutzerdefinierte Typen zu erstellen. Der Hauptzweck von Aliasen ist es, Code-Duplizierung zu reduzieren und die Lesbarkeit zu verbessern.",
      "meta": {
        "title": "Grundlagen des Rust-Aliasings | Programmier-Tutorials",
        "description": "Entdecken Sie die Macht von Aliasing in Rust, einer vielseitigen Programmiersprache. Lernen Sie, wie Sie neue Namen für vorhandene Typen erstellen und die Code-Lesbarkeit verbessern.",
        "keywords": "Rust, Aliasing, Programmier-Tutorials, Code-Lesbarkeit, Typ-Aliase"
      },
      "details": {
        "steps": [
          {
            "title": "Aliasing",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Dieser Schritt hat momentan keine Verifizierung",
                "file": "verify1-1.sh",
                "hint": "Dieser Schritt hat momentan keine Verifizierung"
              }
            ]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "Rust のエイリアシング：コードの読みやすさを向上させる",
      "description": "この実験では、Rust におけるエイリアシングについて学びます。これにより、type ステートメントを使って既存の型に新しい名前を付けることができます。エイリアスは特定の命名規則に従わなければならず、基本型やユーザー定義型に新しい名前を作成するために使用できます。エイリアスの主な目的は、コードの重複を減らし、読みやすさを向上させることです。",
      "meta": {
        "title": "Rust のエイリアシングの基本 | プログラミングチュートリアル",
        "description": "汎用的なプログラミング言語である Rust におけるエイリアシングの力を探求しましょう。既存の型に新しい名前を作成し、コードの読みやすさを向上させる方法を学びましょう。",
        "keywords": "Rust, エイリアシング，プログラミングチュートリアル，コードの読みやすさ，型エイリアス"
      },
      "details": {
        "steps": [
          {
            "title": "エイリアシング",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "このステップは現在検証がありません",
                "file": "verify1-1.sh",
                "hint": "このステップは現在検証がありません"
              }
            ]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Aliasing в Rust: Повышение Читаемости Код",
      "description": "В этом лабе мы узнаем о псевдонимах в Rust, которые позволяют давать новое имя существующему типу с использованием инструкции type. Псевдонимы должны соответствовать определенным правилам именования и могут использоваться для создания новых имен для примитивных типов или типов, определенных пользователем. Основная цель псевдонимов - уменьшить дублирование кода и повысить читаемость.",
      "meta": {
        "title": "Основы Aliasing в Rust | Руководства по Программированию",
        "description": "Изучите мощь псевдонимов в Rust, универсальном языке программирования. научитесь создавать новые имена для существующих типов и повысить читаемость кода.",
        "keywords": "Rust, Aliasing, Руководства по Программированию, Читаемость Код, Псевдонимы Типов"
      },
      "details": {
        "steps": [
          {
            "title": "Псевдонимы",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "На данный момент эта стадия не имеет проверки",
                "file": "verify1-1.sh",
                "hint": "На данный момент эта стадия не имеет проверки"
              }
            ]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    },
    {
      "lang": "ko",
      "title": "Rust 별칭: 코드 가독성 향상",
      "description": "이 실습에서는 Rust 의 별칭에 대해 배우며, `type` 문을 사용하여 기존 타입에 새로운 이름을 지정할 수 있습니다. 별칭은 특정 명명 규칙을 따라야 하며, 기본 타입 또는 사용자 정의 타입에 대한 새로운 이름을 만들 수 있습니다. 별칭의 주요 목적은 코드 중복을 줄이고 가독성을 높이는 것입니다.",
      "meta": {
        "title": "Rust 별칭 기초 | 프로그래밍 튜토리얼",
        "description": "다재다능한 프로그래밍 언어 Rust 에서 별칭의 힘을 탐험하세요. 기존 타입에 대한 새로운 이름을 만들고 코드 가독성을 높이는 방법을 배우십시오.",
        "keywords": "Rust, 별칭, 프로그래밍 튜토리얼, 코드 가독성, 타입 별칭, Rust 타입 별칭, 별칭 사용법, Rust 프로그래밍"
      },
      "details": {
        "steps": [
          {
            "title": "별칭",
            "text": "ko/step1.md",
            "verify": [
              {
                "name": "현재 이 단계에는 검증이 없습니다.",
                "file": "verify1-1.sh",
                "hint": "현재 이 단계에는 검증이 없습니다."
              }
            ]
          }
        ],
        "intro": {
          "text": "ko/intro.md",
          "title": "소개"
        },
        "finish": {
          "text": "ko/finish.md",
          "title": "요약"
        }
      }
    },
    {
      "lang": "pt",
      "title": "Aliasagem em Rust: Melhorando a Legibilidade do Código",
      "description": "Neste laboratório, aprendemos sobre aliasagem em Rust, que permite dar um novo nome a um tipo existente usando a instrução type. Os aliases devem seguir certas convenções de nomenclatura e podem ser usados para criar novos nomes para tipos primitivos ou tipos definidos pelo utilizador. O principal propósito dos aliases é reduzir a duplicação de código e melhorar a legibilidade.",
      "meta": {
        "title": "Fundamentos de Aliasagem em Rust | Tutoriais de Programação",
        "description": "Explore o poder da aliasagem em Rust, uma linguagem de programação versátil. Aprenda como criar novos nomes para tipos existentes e melhorar a legibilidade do código.",
        "keywords": "Rust, Aliasagem, Tutoriais de Programação, Legibilidade de Código, Alias de Tipo"
      },
      "details": {
        "steps": [
          {
            "title": "Aliasagem",
            "text": "pt/step1.md",
            "verify": [
              {
                "name": "Este passo não possui verificação no momento",
                "file": "verify1-1.sh",
                "hint": "Este passo não possui verificação no momento"
              }
            ]
          }
        ],
        "intro": {
          "text": "pt/intro.md",
          "title": "Introdução"
        },
        "finish": {
          "text": "pt/finish.md",
          "title": "Resumo"
        }
      }
    }
  ]
}
