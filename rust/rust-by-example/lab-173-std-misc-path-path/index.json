{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Exploring Rust's Immutable Path Struct",
  "description": "In this lab, we will explore the Path struct in Rust, which represents file paths in the underlying filesystem. It comes in two flavors: posix::Path for UNIX-like systems and windows::Path for Windows. The Path can be created from an OsStr and provides various methods to retrieve information from the file or directory that the path points to. It is important to note that a Path is immutable, and its owned version is called PathBuf, which can be mutated in-place. The relation between Path and PathBuf is similar to that between str and String.",
  "meta": {
    "title": "Rust Path Struct | File Path Manipulation",
    "description": "Explore the Rust Path struct, which represents file paths in the underlying filesystem. Learn how to create, manipulate, and convert Paths on UNIX-like and Windows systems.",
    "keywords": "Rust, Path, PathBuf, File Path, UNIX, Windows"
  },
  "difficulty": "Beginner",
  "time": 5,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Path",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "This step has no verification at the moment",
            "file": "verify1-1.sh",
            "hint": "This step has no verification at the moment",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "rust/expressions_statements",
          "rust/function_syntax",
          "rust/method_syntax",
          "rust/mutable_variables",
          "rust/operator_overloading",
          "rust/panic_usage",
          "rust/string_type",
          "rust/variable_declarations"
        ]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": [],
  "license": {
    "name": "MIT",
    "url": "https://github.com/rust-lang/rust-by-example/blob/master/LICENSE-MIT",
    "repo": "https://github.com/rust-lang/rust-by-example"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "探索 Rust 的不可变路径结构体",
      "description": "在本实验中，我们将探索 Rust 中的 Path 结构体，它表示底层文件系统中的文件路径。它有两种类型：适用于类 UNIX 系统的 posix::Path 和适用于 Windows 的 windows::Path。Path 可以从 OsStr 创建，并提供各种方法来从路径指向的文件或目录中检索信息。需要注意的是，Path 是不可变的，其拥有的版本称为 PathBuf，可以在原地进行变异。Path 和 PathBuf 之间的关系类似于 str 和 String 之间的关系。",
      "meta": {
        "title": "Rust 路径结构体 | 文件路径操作",
        "description": "探索 Rust 路径结构体，它表示底层文件系统中的文件路径。了解如何在类 UNIX 和 Windows 系统上创建、操作和转换路径。",
        "keywords": "Rust, 路径, PathBuf, 文件路径, UNIX, Windows"
      },
      "details": {
        "steps": [
          {
            "title": "路径",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "此步骤目前没有验证",
                "file": "verify1-1.sh",
                "hint": "此步骤目前没有验证"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Explorando la estructura inmutable Path de Rust",
      "description": "En este laboratorio, exploraremos la estructura Path en Rust, que representa rutas de archivos en el sistema de archivos subyacente. Viene en dos variantes: posix::Path para sistemas UNIX-like y windows::Path para Windows. La Path se puede crear a partir de un OsStr y proporciona varios métodos para recuperar información del archivo o directorio al que apunta la ruta. Es importante destacar que una Path es inmutable, y su versión con propiedad se llama PathBuf, que se puede mutar in situ. La relación entre Path y PathBuf es similar a la entre str y String.",
      "meta": {
        "title": "Estructura Path de Rust | Manipulación de rutas de archivos",
        "description": "Explore la estructura Path de Rust, que representa rutas de archivos en el sistema de archivos subyacente. Aprenda cómo crear, manipular y convertir Paths en sistemas UNIX-like y Windows.",
        "keywords": "Rust, Path, PathBuf, Ruta de archivo, UNIX, Windows"
      },
      "details": {
        "steps": [
          {
            "title": "Path",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Este paso no tiene verificaciones en este momento",
                "file": "verify1-1.sh",
                "hint": "Este paso no tiene verificaciones en este momento"
              }
            ]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Explorer la structure Path immuable de Rust",
      "description": "Dans ce laboratoire, nous allons explorer la structure Path en Rust, qui représente les chemins de fichiers dans le système de fichiers sous-jacent. Elle existe en deux variantes : posix::Path pour les systèmes UNIX et windows::Path pour Windows. Le Path peut être créé à partir d'un OsStr et fournit diverses méthodes pour récupérer des informations sur le fichier ou le répertoire auquel le chemin pointe. Il est important de noter qu'un Path est immuable, et sa version propriétaire est appelée PathBuf, qui peut être modifiée in situ. La relation entre Path et PathBuf est similaire à celle entre str et String.",
      "meta": {
        "title": "Structure Path de Rust | Gestion des chemins de fichiers",
        "description": "Explorez la structure Path de Rust, qui représente les chemins de fichiers dans le système de fichiers sous-jacent. Apprenez à créer, manipuler et convertir des Paths sur des systèmes UNIX et Windows.",
        "keywords": "Rust, Path, PathBuf, Chemin de fichier, UNIX, Windows"
      },
      "details": {
        "steps": [
          {
            "title": "Chemin",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Cette étape n'a pas de vérification pour le moment",
                "file": "verify1-1.sh",
                "hint": "Cette étape n'a pas de vérification pour le moment"
              }
            ]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Das unveränderliche Path-Strukt in Rust erkunden",
      "description": "In diesem Lab werden wir die Path-Struktur in Rust untersuchen, die Dateipfade im zugrunde liegenden Dateisystem repräsentiert. Sie kommt in zwei Varianten: posix::Path für UNIX-ähnliche Systeme und windows::Path für Windows. Ein Path kann aus einem OsStr erstellt werden und bietet verschiedene Methoden, um Informationen aus der Datei oder dem Verzeichnis zu erhalten, auf das der Pfad zeigt. Es ist wichtig zu beachten, dass ein Path unveränderlich ist, und seine eigene Version heißt PathBuf, die in-place verändert werden kann. Die Beziehung zwischen Path und PathBuf ist ähnlich der zwischen str und String.",
      "meta": {
        "title": "Rust Path-Strukt | Dateipfadmanipulation",
        "description": "Erkunden Sie die Rust Path-Strukt, die Dateipfade im zugrunde liegenden Dateisystem repräsentiert. Lernen Sie, wie Sie Pfade auf UNIX-ähnlichen und Windows-Systemen erstellen, manipulieren und konvertieren.",
        "keywords": "Rust, Path, PathBuf, Dateipfad, UNIX, Windows"
      },
      "details": {
        "steps": [
          {
            "title": "Pfad",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Dieser Schritt hat momentan keine Verifizierung",
                "file": "verify1-1.sh",
                "hint": "Dieser Schritt hat momentan keine Verifizierung"
              }
            ]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "Rustの不変なPath構造体を探る",
      "description": "この実験では、RustのPath構造体を調べます。これは、基礎となるファイルシステム内のファイルパスを表します。2種類のバージョンがあります。UNIX系のシステム向けのposix::Pathと、Windows向けのwindows::Pathです。PathはOsStrから作成でき、パスが指すファイルまたはディレクトリから情報を取得するための様々なメソッドを提供します。重要なことは、Pathは不変であり、その所有バージョンはPathBufと呼ばれ、それはインプレースで変更可能です。PathとPathBufの関係は、strとStringの関係に似ています。",
      "meta": {
        "title": "Rust Path構造体 | ファイルパス操作",
        "description": "基礎となるファイルシステム内のファイルパスを表すRust Path構造体を探りましょう。UNIX系およびWindowsシステムでPathを作成、操作、変換する方法を学びましょう。",
        "keywords": "Rust, Path, PathBuf, ファイルパス, UNIX, Windows"
      },
      "details": {
        "steps": [
          {
            "title": "パス",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "このステップには現在、検証はありません",
                "file": "verify1-1.sh",
                "hint": "このステップには現在、検証はありません"
              }
            ]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Изучение неизменяемой структуры Path в Rust",
      "description": "В этом лабораторном задании мы исследуем структуру Path в Rust, которая представляет пути к файлам в underlying файловой системе. Она имеет два вида: posix::Path для UNIX-подобных систем и windows::Path для Windows. Path можно создать из OsStr и предоставляет различные методы для извлечения информации из файла или директории, на которую указывает путь. Следует отметить, что Path является неизменяемым, а его версия с собственным владением называется PathBuf, которая может быть изменена \"на месте\". Отношение между Path и PathBuf аналогично отношению между str и String.",
      "meta": {
        "title": "Структура Path в Rust | Обработка путей к файлам",
        "description": "Изучите структуру Path в Rust, которая представляет пути к файлам в underlying файловой системе. Найдите, как создавать, манипулировать и преобразовывать Path на UNIX-подобных и Windows системах.",
        "keywords": "Rust, Path, PathBuf, Путь к файлу, UNIX, Windows"
      },
      "details": {
        "steps": [
          {
            "title": "Path",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "На данный момент эта стадия не имеет проверки",
                "file": "verify1-1.sh",
                "hint": "На данный момент эта стадия не имеет проверки"
              }
            ]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    }
  ]
}
