{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Rust Macros Designators Introduction",
  "description": "In this lab, we are introduced to the concept of designators in Rust macros. Designators are used to prefix the arguments of a macro and are type annotated. Some examples of designators include ident for variable/function names, expr for expressions, block for blocks of code, and pat for patterns. These designators are used within macro rules to generate code based on the provided arguments.",
  "meta": {
    "title": "Rust Macros | Designators | Programming Tutorials",
    "description": "Explore the concept of designators in Rust macros, including ident, expr, block, and more. Learn how to use these type-annotated arguments to generate dynamic code.",
    "keywords": "Rust, Macros, Designators, Programming, Tutorials"
  },
  "difficulty": "Beginner",
  "time": 5,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Designators",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "This step has no verification at the moment",
            "file": "verify1-1.sh",
            "hint": "This step has no verification at the moment",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "rust/expressions_statements",
          "rust/function_syntax",
          "rust/operator_overloading",
          "rust/type_casting",
          "rust/variable_declarations"
        ]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": [],
  "license": {
    "name": "MIT",
    "url": "https://github.com/rust-lang/rust-by-example/blob/master/LICENSE-MIT",
    "repo": "https://github.com/rust-lang/rust-by-example"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "Rust宏指示符介绍",
      "description": "在本实验中，我们将介绍Rust宏中的指示符概念。指示符用于在宏的参数前加上前缀，并进行类型注释。指示符的一些示例包括用于变量/函数名的ident、用于表达式的expr、用于代码块的block以及用于模式的pat。这些指示符在宏规则中用于根据提供的参数生成代码。",
      "meta": {
        "title": "Rust宏 | 指示符 | 编程教程",
        "description": "探索Rust宏中的指示符概念，包括ident、expr、block等等。学习如何使用这些带类型注释的参数来生成动态代码。",
        "keywords": "Rust, 宏, 指示符, 编程, 教程"
      },
      "details": {
        "steps": [
          {
            "title": "指示符",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "此步骤目前没有验证",
                "file": "verify1-1.sh",
                "hint": "此步骤目前没有验证"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    }
  ]
}
