{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Phantom Type Parameters",
  "description": "In this lab, we explore the concept of phantom type parameters, which are type parameters that are checked statically at compile time and do not have any runtime behavior or values. We demonstrate their usage in Rust by combining std::marker::PhantomData with the concept of phantom type parameters to create tuples and structs that contain different data types.",
  "meta": {
    "title": "Exploring Phantom Type Parameters in Rust",
    "description": "Learn how to use phantom type parameters to create tuples and structs with different data types in Rust.",
    "keywords": "compile time type safety, phantomdata, phantom type parameters, rust playground, rust tutor, rust online compiler, rust commands, static type checking, rust practice, rust online"
  },
  "difficulty": "Beginner",
  "time": 5,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Phantom type parameters",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "This step has no verification at the moment",
            "file": "verify1-1.sh",
            "hint": "This step has no verification at the moment",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": []
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": [],
  "license": {
    "name": "MIT",
    "url": "https://github.com/rust-lang/rust-by-example/blob/master/LICENSE-MIT",
    "repo": "https://github.com/rust-lang/rust-by-example"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "虚类型参数",
      "description": "在本实验中，我们探讨虚类型参数的概念，它是在编译时进行静态检查的类型参数，没有任何运行时行为或值。我们通过将 std::marker::PhantomData 与虚类型参数的概念相结合，在 Rust 中展示它们的用法，以创建包含不同数据类型的元组和结构体。",
      "meta": {
        "title": "在 Rust 中探索虚类型参数",
        "description": "了解如何在 Rust 中使用虚类型参数来创建具有不同数据类型的元组和结构体。",
        "keywords": "编译时类型安全，PhantomData, 虚类型参数，Rust 游乐场，Rust 教程，Rust 在线编译器，Rust 命令，静态类型检查，Rust 实践，Rust 在线"
      },
      "details": {
        "steps": [
          {
            "title": "虚类型参数",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "此步骤目前没有验证",
                "file": "verify1-1.sh",
                "hint": "此步骤目前没有验证"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Parámetros de Tipo Fantasma",
      "description": "En este laboratorio, exploramos el concepto de parámetros de tipo fantasma, que son parámetros de tipo que se comprueban en tiempo de compilación de manera estática y no tienen ningún comportamiento o valores en tiempo de ejecución. Demostramos su uso en Rust combinando std::marker::PhantomData con el concepto de parámetros de tipo fantasma para crear tuplas y structs que contengan diferentes tipos de datos.",
      "meta": {
        "title": "Explorando Parámetros de Tipo Fantasma en Rust",
        "description": "Aprende cómo usar parámetros de tipo fantasma para crear tuplas y structs con diferentes tipos de datos en Rust.",
        "keywords": "seguridad de tipo en tiempo de compilación, phantomdata, parámetros de tipo fantasma, playground de Rust, tutor de Rust, compilador en línea de Rust, comandos de Rust, comprobación de tipo estática, práctica de Rust, Rust en línea"
      },
      "details": {
        "steps": [
          {
            "title": "Parámetros de tipo fantasma",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Este paso no tiene verificaciones en este momento",
                "file": "verify1-1.sh",
                "hint": "Este paso no tiene verificaciones en este momento"
              }
            ]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Paramètres de type fantôme",
      "description": "Dans ce laboratoire, nous explorons le concept de paramètres de type fantôme, qui sont des paramètres de type vérifiés statiquement au moment de la compilation et n'ont aucun comportement ou valeur exécutée au moment de l'exécution. Nous démontrons leur utilisation en Rust en combinant std::marker::PhantomData avec le concept de paramètres de type fantôme pour créer des tuples et des structs qui contiennent différents types de données.",
      "meta": {
        "title": "Explorer les paramètres de type fantôme en Rust",
        "description": "Découvrez comment utiliser les paramètres de type fantôme pour créer des tuples et des structs avec différents types de données en Rust.",
        "keywords": "sécurité de type au moment de la compilation, phantomdata, paramètres de type fantôme, terrain de jeu Rust, tuteur Rust, compilateur en ligne Rust, commandes Rust, vérification de type statique, pratique Rust, en ligne Rust"
      },
      "details": {
        "steps": [
          {
            "title": "Paramètres de type fantôme",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Cette étape n'a pas de vérification pour le moment",
                "file": "verify1-1.sh",
                "hint": "Cette étape n'a pas de vérification pour le moment"
              }
            ]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Phantom-Typ-Parameter",
      "description": "In diesem Lab untersuchen wir das Konzept von Phantom-Typ-Parametern, die Typ-Parameter sind, die statisch zur Compile-Zeit überprüft werden und keine Laufzeit-Behavior oder -Werte haben. Wir demonstrieren ihre Verwendung in Rust, indem wir std::marker::PhantomData mit dem Konzept von Phantom-Typ-Parametern kombinieren, um Tupel und Structs zu erstellen, die verschiedene Datentypen enthalten.",
      "meta": {
        "title": "Das Erkunden von Phantom-Typ-Parametern in Rust",
        "description": "Lernen Sie, wie Sie Phantom-Typ-Parameter verwenden, um Tupel und Structs mit verschiedenen Datentypen in Rust zu erstellen.",
        "keywords": "Compile-Zeit-Typsicherheit, PhantomData, Phantom-Typ-Parameter, Rust-Spielfeld, Rust-Lehrer, Rust-Online-Compiler, Rust-Befehle, statische Typüberprüfung, Rust-Praxis, Rust-Online"
      },
      "details": {
        "steps": [
          {
            "title": "Phantom-Typ-Parameter",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Dieser Schritt hat momentan keine Verifizierung",
                "file": "verify1-1.sh",
                "hint": "Dieser Schritt hat momentan keine Verifizierung"
              }
            ]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "ファントム型パラメータ",
      "description": "この実験では、コンパイル時に静的にチェックされ、ランタイムの動作や値を持たないファントム型パラメータの概念を探ります。Rust では、`std::marker::PhantomData` とファントム型パラメータの概念を組み合わせて、異なるデータ型を含むタプルや構造体を作成することで、その使い方を示します。",
      "meta": {
        "title": "Rust におけるファントム型パラメータの探索",
        "description": "Rust で異なるデータ型を持つタプルと構造体を作成するためのファントム型パラメータの使い方を学びましょう。",
        "keywords": "コンパイル時型安全性，PhantomData, ファントム型パラメータ，Rust プレイグラウンド，Rust チューター, Rust オンラインコンパイラ，Rust コマンド，静的型チェック，Rust 練習，Rust オンライン"
      },
      "details": {
        "steps": [
          {
            "title": "ファントム型パラメータ",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "このステップには現在検証はありません",
                "file": "verify1-1.sh",
                "hint": "このステップには現在検証はありません"
              }
            ]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Фантомные параметры типа",
      "description": "В этом лабораторном задании мы исследуем концепцию фантомных параметров типа, которые являются параметрами типа, проверяемыми статически во время компиляции и не имеющими никакого времени выполнения поведения или значений. Мы демонстрируем их использование в Rust, комбинируя std::marker::PhantomData с концепцией фантомных параметров типа для создания кортежей и структур, содержащих разные типы данных.",
      "meta": {
        "title": "Исследование фантомных параметров типа в Rust",
        "description": "Изучите, как использовать фантомные параметры типа для создания кортежей и структур с разными типами данных в Rust.",
        "keywords": "типобезопасность на этапе компиляции, phantomdata, фантомные параметры типа, rust playground, rust tutor, онлайн-компилятор Rust, команды Rust, статическая проверка типов, практика Rust, онлайн Rust"
      },
      "details": {
        "steps": [
          {
            "title": "Фантомные параметры типа",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "На данный момент эта стадия не имеет проверки",
                "file": "verify1-1.sh",
                "hint": "На данный момент эта стадия не имеет проверки"
              }
            ]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    },
    {
      "lang": "ko",
      "title": "파이썬 타입 매개변수",
      "description": "이 실습에서는 컴파일 시점에 정적으로 검사되고 런타임 동작이나 값이 없는 파이썬 타입 매개변수의 개념을 탐구합니다. Rust 에서 std::marker::PhantomData 를 파이썬 타입 매개변수 개념과 결합하여 서로 다른 데이터 유형을 포함하는 튜플과 구조체를 만드는 방법을 보여줍니다.",
      "meta": {
        "title": "Rust 에서 파이썬 타입 매개변수 탐색",
        "description": "Rust 에서 파이썬 타입 매개변수를 사용하여 서로 다른 데이터 유형을 포함하는 튜플과 구조체를 만드는 방법을 배우세요.",
        "keywords": "컴파일 시 타입 안전성, phantomdata, 파이썬 타입 매개변수, rust 플레이그라운드, rust 튜터, rust 온라인 컴파일러, rust 명령어, 정적 타입 검사, rust 연습, rust 온라인, rust 파이썬 타입, 파이썬 타입 실습, Rust 파이썬 타입 예제"
      },
      "details": {
        "steps": [
          {
            "title": "파이썬 타입 매개변수",
            "text": "ko/step1.md",
            "verify": [
              {
                "name": "현재 이 단계에는 검증이 없습니다.",
                "file": "verify1-1.sh",
                "hint": "현재 이 단계에는 검증이 없습니다."
              }
            ]
          }
        ],
        "intro": {
          "text": "ko/intro.md",
          "title": "소개"
        },
        "finish": {
          "text": "ko/finish.md",
          "title": "요약"
        }
      }
    },
    {
      "lang": "pt",
      "title": "Parâmetros de Tipo Fantasma",
      "description": "Neste laboratório, exploramos o conceito de parâmetros de tipo fantasma, que são parâmetros de tipo verificados estaticamente em tempo de compilação e não possuem nenhum comportamento ou valores em tempo de execução. Demonstramos seu uso em Rust combinando std::marker::PhantomData com o conceito de parâmetros de tipo fantasma para criar tuplas e estruturas que contêm diferentes tipos de dados.",
      "meta": {
        "title": "Explorando Parâmetros de Tipo Fantasma em Rust",
        "description": "Aprenda como usar parâmetros de tipo fantasma para criar tuplas e estruturas com diferentes tipos de dados em Rust.",
        "keywords": "segurança de tipo em tempo de compilação, phantomdata, parâmetros de tipo fantasma, playground Rust, tutor Rust, compilador online Rust, comandos Rust, verificação de tipo estático, prática Rust, compilador online Rust, Rust"
      },
      "details": {
        "steps": [
          {
            "title": "Parâmetros de tipo fantasma",
            "text": "pt/step1.md",
            "verify": [
              {
                "name": "Este passo não possui verificação no momento",
                "file": "verify1-1.sh",
                "hint": "Este passo não possui verificação no momento"
              }
            ]
          }
        ],
        "intro": {
          "text": "pt/intro.md",
          "title": "Introdução"
        },
        "finish": {
          "text": "pt/finish.md",
          "title": "Resumo"
        }
      }
    }
  ]
}
