{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Phantom Type Parameters",
  "description": "In this lab, we explore the concept of phantom type parameters, which are type parameters that are checked statically at compile time and do not have any runtime behavior or values. We demonstrate their usage in Rust by combining std::marker::PhantomData with the concept of phantom type parameters to create tuples and structs that contain different data types.",
  "meta": {
    "title": "Exploring Phantom Type Parameters in Rust",
    "description": "Learn how to use phantom type parameters to create tuples and structs with different data types in Rust.",
    "keywords": "compile time type safety, phantomdata, phantom type parameters, rust playground, rust tutor, rust online compiler, rust commands, static type checking, rust practice, rust online"
  },
  "difficulty": "Beginner",
  "time": 5,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Phantom type parameters",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "This step has no verification at the moment",
            "file": "verify1-1.sh",
            "hint": "This step has no verification at the moment",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "rust/expressions_statements",
          "rust/floating_types",
          "rust/function_syntax",
          "rust/lifetime_specifiers",
          "rust/operator_overloading",
          "rust/type_casting",
          "rust/variable_declarations"
        ]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": [],
  "license": {
    "name": "MIT",
    "url": "https://github.com/rust-lang/rust-by-example/blob/master/LICENSE-MIT",
    "repo": "https://github.com/rust-lang/rust-by-example"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "虚类型参数",
      "description": "在本实验中，我们探讨虚类型参数的概念，它是在编译时进行静态检查的类型参数，没有任何运行时行为或值。我们通过将std::marker::PhantomData与虚类型参数的概念相结合，在Rust中展示它们的用法，以创建包含不同数据类型的元组和结构体。",
      "meta": {
        "title": "在Rust中探索虚类型参数",
        "description": "了解如何在Rust中使用虚类型参数来创建具有不同数据类型的元组和结构体。",
        "keywords": "编译时类型安全, PhantomData, 虚类型参数, Rust游乐场, Rust教程, Rust在线编译器, Rust命令, 静态类型检查, Rust实践, Rust在线"
      },
      "details": {
        "steps": [
          {
            "title": "虚类型参数",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "此步骤目前没有验证",
                "file": "verify1-1.sh",
                "hint": "此步骤目前没有验证"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    }
  ]
}
