{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Literals and Operators",
  "description": "In this lab, we explore the use of literals and operators in Rust. Literals such as integers, floats, characters, strings, booleans, and the unit type can be expressed using their literal forms. Integers can also be expressed in hexadecimal, octal, or binary notation. Underscores can be used to improve readability in numeric literals. Rust supports scientific E-notation for float literals. Operators such as addition, subtraction, logical operations, bitwise operations, and shift operations are available in Rust.",
  "meta": {
    "title": "Exploring Literals and Operators in Rust",
    "description": "Dive into the world of Rust's literals and operators, from integers and floats to logical and bitwise operations.",
    "keywords": "rust, rust playground, coding, rust online compiler, rust tutor, rust commands, rust practice, rust online playground, literals, rust online"
  },
  "difficulty": "Beginner",
  "time": 5,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Literals and operators",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "This step has no verification at the moment",
            "file": "verify1-1.sh",
            "hint": "This step has no verification at the moment",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "rust/boolean_type",
          "rust/expressions_statements",
          "rust/function_syntax",
          "rust/operator_overloading",
          "rust/type_casting"
        ]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": [],
  "license": {
    "name": "MIT",
    "url": "https://github.com/rust-lang/rust-by-example/blob/master/LICENSE-MIT",
    "repo": "https://github.com/rust-lang/rust-by-example"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "字面量和运算符",
      "description": "在本实验中，我们探索Rust中字面量和运算符的使用。诸如整数、浮点数、字符、字符串、布尔值和单元类型等字面量可以使用它们的字面形式来表示。整数也可以用十六进制、八进制或二进制表示法来表示。下划线可用于提高数字字面量的可读性。Rust支持浮点数的科学E表示法。Rust中提供了加法、减法、逻辑运算、位运算和移位运算等运算符。",
      "meta": {
        "title": "探索Rust中的字面量和运算符",
        "description": "深入了解Rust的字面量和运算符世界，从整数和浮点数到逻辑和位运算。",
        "keywords": "Rust，Rust游乐场，编码，Rust在线编译器，Rust教程，Rust命令，Rust练习，Rust在线游乐场，字面量，Rust在线"
      },
      "details": {
        "steps": [
          {
            "title": "字面量和运算符",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "此步骤目前没有验证",
                "file": "verify1-1.sh",
                "hint": "此步骤目前没有验证"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    }
  ]
}
