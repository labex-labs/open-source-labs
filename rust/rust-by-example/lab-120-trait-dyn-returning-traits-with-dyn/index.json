{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Returning Traits with Dyn",
  "description": "In this lab, we learn how to workaround the limitation of returning traits directly in Rust by using the Box<dyn Animal> type, which allows functions to return a reference to a heap-allocated object that implements the Animal trait.",
  "meta": {
    "title": "Returning Traits with Dyn in Rust",
    "description": "Learn how to use the Box",
    "keywords": "rust playground, rust tutor, rust online compiler, rust commands, tutorial, traits, dyn, rust online playground, rust practice, rust online"
  },
  "difficulty": "Beginner",
  "time": 5,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Returning Traits with dyn",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "This step has no verification at the moment",
            "file": "verify1-1.sh",
            "hint": "This step has no verification at the moment",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "rust/expressions_statements",
          "rust/floating_types",
          "rust/function_syntax",
          "rust/lifetime_specifiers",
          "rust/method_syntax",
          "rust/operator_overloading",
          "rust/traits",
          "rust/variable_declarations"
        ]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": [],
  "license": {
    "name": "MIT",
    "url": "https://github.com/rust-lang/rust-by-example/blob/master/LICENSE-MIT",
    "repo": "https://github.com/rust-lang/rust-by-example"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "使用 Dyn 返回 trait",
      "description": "在本实验中，我们学习如何通过使用 Box<dyn Animal> 类型来解决 Rust 中直接返回 trait 的限制，该类型允许函数返回对实现 Animal trait 的堆分配对象的引用。",
      "meta": {
        "title": "在 Rust 中使用 Dyn 返回 trait",
        "description": "学习如何使用 Box",
        "keywords": "rust 游乐场，rust 教程，rust 在线编译器，rust 命令，教程，trait, dyn, rust 在线游乐场，rust 练习，rust 在线"
      },
      "details": {
        "steps": [
          {
            "title": "使用 dyn 返回 trait",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "此步骤目前没有验证",
                "file": "verify1-1.sh",
                "hint": "此步骤目前没有验证"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Devolviendo traits con Dyn",
      "description": "En este laboratorio, aprendemos a evitar la limitación de devolver directamente traits en Rust mediante el uso del tipo Box<dyn Animal>, que permite que las funciones devuelvan una referencia a un objeto asignado en el montón que implementa el trait Animal.",
      "meta": {
        "title": "Devolviendo traits con Dyn en Rust",
        "description": "Aprende a usar el Box",
        "keywords": "rust playground, rust tutor, rust online compiler, rust commands, tutorial, traits, dyn, rust online playground, rust practice, rust online"
      },
      "details": {
        "steps": [
          {
            "title": "Devolviendo traits con dyn",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Este paso no tiene verificación en este momento",
                "file": "verify1-1.sh",
                "hint": "Este paso no tiene verificación en este momento"
              }
            ]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Retourner des traits avec Dyn",
      "description": "Dans ce laboratoire, nous apprenons comment contourner la limitation de retourner directement des traits en Rust en utilisant le type Box<dyn Animal>, qui permet à des fonctions de retourner une référence à un objet alloué sur le tas qui implémente le trait Animal.",
      "meta": {
        "title": "Retourner des traits avec Dyn en Rust",
        "description": "Apprenez à utiliser le Box",
        "keywords": "plateforme de pratique Rust, tuteur Rust, compilateur en ligne Rust, commandes Rust, tutoriel, traits, dyn, plateforme de pratique en ligne Rust, pratique Rust, en ligne Rust"
      },
      "details": {
        "steps": [
          {
            "title": "Retourner des traits avec dyn",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Cette étape n'a pas de vérification pour le moment",
                "file": "verify1-1.sh",
                "hint": "Cette étape n'a pas de vérification pour le moment"
              }
            ]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Rückgabe von Traits mit Dyn",
      "description": "In diesem Lab lernen wir, wie wir die Beschränkung umgehen, direkt Traits in Rust zurückzugeben, indem wir den Typ Box<dyn Animal> verwenden, der es Funktionen ermöglicht, einen Verweis auf ein auf dem Heap zugewiesenes Objekt zurückzugeben, das das Animal-Trait implementiert.",
      "meta": {
        "title": "Rückgabe von Traits mit Dyn in Rust",
        "description": "Lernen Sie, wie Sie die Box verwenden",
        "keywords": "Rust-Spielfeld, Rust-Lehrer, Rust-Online-Compiler, Rust-Befehle, Tutorial, Traits, Dyn, Rust-Online-Spielfeld, Rust-Praxis, Rust-Online"
      },
      "details": {
        "steps": [
          {
            "title": "Rückgabe von Traits mit dyn",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Dieser Schritt hat momentan keine Verifizierung",
                "file": "verify1-1.sh",
                "hint": "Dieser Schritt hat momentan keine Verifizierung"
              }
            ]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "Dyn を使ったトレイトの返却",
      "description": "この実験では、`Box<dyn Animal>` 型を使用して、Rust で直接トレイトを返す制限を回避する方法を学びます。これにより、関数が `Animal` トレイトを実装するヒープ割り当てオブジェクトへの参照を返すことができます。",
      "meta": {
        "title": "Rust における Dyn を使ったトレイトの返却",
        "description": "Box の使い方を学ぶ",
        "keywords": "rust playground, rust tutor, rust online compiler, rust commands, tutorial, traits, dyn, rust online playground, rust practice, rust online"
      },
      "details": {
        "steps": [
          {
            "title": "dyn を使ったトレイトの返却",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "このステップでは現在検証はありません",
                "file": "verify1-1.sh",
                "hint": "このステップでは現在検証はありません"
              }
            ]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Возвращение трейтов с использованием Dyn",
      "description": "В этом лабе мы узнаем, как обойти ограничение прямого возврата трейтов в Rust, используя тип Box<dyn Animal>, который позволяет функциям возвращать ссылку на объект, выделенный в куче, реализующий трейт Animal.",
      "meta": {
        "title": "Возвращение трейтов с использованием Dyn в Rust",
        "description": "Изучите, как использовать Box",
        "keywords": "игровой площадка Rust, Руководство по Rust, Онлайн-компилятор Rust, команды Rust, учебник, трейты, dyn, Онлайн-игровая площадка Rust, практика Rust, Rust онлайн"
      },
      "details": {
        "steps": [
          {
            "title": "Возвращение трейтов с использованием dyn",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "На данный момент эта стадия не имеет проверки",
                "file": "verify1-1.sh",
                "hint": "На данный момент эта стадия не имеет проверки"
              }
            ]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    },
    {
      "lang": "ko",
      "title": "Dyn 을 사용한 트레이트 반환",
      "description": "이 랩에서는 Rust 에서 트레이트를 직접 반환하는 제한을 해결하기 위해 `Box<dyn Animal>` 타입을 사용하는 방법을 배웁니다. 이를 통해 함수는 `Animal` 트레이트를 구현하는 힙 할당 객체에 대한 참조를 반환할 수 있습니다.",
      "meta": {
        "title": "Rust 에서 Dyn 을 사용한 트레이트 반환 방법",
        "description": "Box 를 사용하는 방법을 배우세요.",
        "keywords": "러스트 플레이그라운드, 러스트 튜터, 러스트 온라인 컴파일러, 러스트 명령어, 튜토리얼, 트레이트, dyn, 러스트 온라인 플레이그라운드, 러스트 연습, 러스트 온라인"
      },
      "details": {
        "steps": [
          {
            "title": "dyn 을 사용한 트레이트 반환",
            "text": "ko/step1.md",
            "verify": [
              {
                "name": "현재 이 단계에는 검증이 없습니다.",
                "file": "verify1-1.sh",
                "hint": "현재 이 단계에는 검증이 없습니다."
              }
            ]
          }
        ],
        "intro": {
          "text": "ko/intro.md",
          "title": "소개"
        },
        "finish": {
          "text": "ko/finish.md",
          "title": "요약"
        }
      }
    },
    {
      "lang": "pt",
      "title": "Retornando Traits com Dyn",
      "description": "Neste laboratório, aprendemos como contornar a limitação de retornar traits diretamente em Rust, usando o tipo Box<dyn Animal>, que permite que funções retornem uma referência a um objeto alocado no heap que implementa a trait Animal.",
      "meta": {
        "title": "Retornando Traits com Dyn em Rust - Tutorial e Prática",
        "description": "Aprenda a usar Box<dyn Animal> em Rust para retornar traits de forma eficiente. Tutorial prático e exemplos de código.",
        "keywords": "rust playground, tutorial rust, compilador rust online, comandos rust, tutorial, traits, dyn, rust online playground, prática rust, rust online, Box<dyn Animal>, Rust para iniciantes, Rust exemplos"
      },
      "details": {
        "steps": [
          {
            "title": "Retornando Traits com dyn",
            "text": "pt/step1.md",
            "verify": [
              {
                "name": "Este passo não possui verificação no momento",
                "file": "verify1-1.sh",
                "hint": "Este passo não possui verificação no momento"
              }
            ]
          }
        ],
        "intro": {
          "text": "pt/intro.md",
          "title": "Introdução"
        },
        "finish": {
          "text": "pt/finish.md",
          "title": "Resumo"
        }
      }
    }
  ]
}
