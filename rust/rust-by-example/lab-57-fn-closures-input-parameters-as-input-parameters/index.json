{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "As Input Parameters",
  "description": "In this lab, we learn that when writing functions in Rust that take a closure as an input parameter, the closure's complete type must be annotated using one of the traits: Fn, FnMut, or FnOnce, which determine how the closure uses the captured value, either by reference, mutable reference, or value. The compiler captures variables in the least restrictive manner possible based on the chosen trait for the closure.",
  "meta": {
    "title": "Mastering Rust Closures: Unlock the Power of Functional Programming",
    "description": "Explore the intricacies of using closures as input parameters in Rust and learn how to leverage the Fn, FnMut, and FnOnce traits for optimal performance.",
    "keywords": "rust playground, fnmut, closures, rust tutor, rust online compiler, rust commands, fn, rust practice, rust online playground, rust online"
  },
  "difficulty": "Beginner",
  "time": 5,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "As input parameters",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "This step has no verification at the moment",
            "file": "verify1-1.sh",
            "hint": "This step has no verification at the moment",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "rust/expressions_statements",
          "rust/function_syntax",
          "rust/integer_types",
          "rust/method_syntax",
          "rust/mutable_variables",
          "rust/operator_overloading",
          "rust/string_type",
          "rust/traits",
          "rust/type_casting",
          "rust/variable_declarations"
        ]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": [],
  "license": {
    "name": "MIT",
    "url": "https://github.com/rust-lang/rust-by-example/blob/master/LICENSE-MIT",
    "repo": "https://github.com/rust-lang/rust-by-example"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "作为输入参数",
      "description": "在本实验中，我们了解到在Rust中编写以闭包作为输入参数的函数时，必须使用以下trait之一来注释闭包的完整类型：Fn、FnMut或FnOnce，它们决定了闭包如何使用捕获的值，是通过引用、可变引用还是值。编译器会根据为闭包选择的trait，以尽可能宽松的方式捕获变量。",
      "meta": {
        "title": "掌握Rust闭包：释放函数式编程的力量",
        "description": "探索在Rust中使用闭包作为输入参数的复杂性，并学习如何利用Fn、FnMut和FnOnce trait实现最佳性能。",
        "keywords": "rust游乐场, fnmut, 闭包, rust教程, rust在线编译器, rust命令, fn, rust练习, rust在线游乐场, rust在线"
      },
      "details": {
        "steps": [
          {
            "title": "作为输入参数",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "此步骤目前没有验证",
                "file": "verify1-1.sh",
                "hint": "此步骤目前没有验证"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    }
  ]
}
