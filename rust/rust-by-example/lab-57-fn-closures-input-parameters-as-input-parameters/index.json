{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "As Input Parameters",
  "description": "In this lab, we learn that when writing functions in Rust that take a closure as an input parameter, the closure's complete type must be annotated using one of the traits: Fn, FnMut, or FnOnce, which determine how the closure uses the captured value, either by reference, mutable reference, or value. The compiler captures variables in the least restrictive manner possible based on the chosen trait for the closure.",
  "meta": {
    "title": "Mastering Rust Closures: Unlock the Power of Functional Programming",
    "description": "Explore the intricacies of using closures as input parameters in Rust and learn how to leverage the Fn, FnMut, and FnOnce traits for optimal performance.",
    "keywords": "rust playground, fnmut, closures, rust tutor, rust online compiler, rust commands, fn, rust practice, rust online playground, rust online"
  },
  "difficulty": "Beginner",
  "time": 5,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "As input parameters",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "This step has no verification at the moment",
            "file": "verify1-1.sh",
            "hint": "This step has no verification at the moment",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "rust/expressions_statements",
          "rust/function_syntax",
          "rust/integer_types",
          "rust/method_syntax",
          "rust/mutable_variables",
          "rust/operator_overloading",
          "rust/string_type",
          "rust/traits",
          "rust/type_casting",
          "rust/variable_declarations"
        ]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": [],
  "license": {
    "name": "MIT",
    "url": "https://github.com/rust-lang/rust-by-example/blob/master/LICENSE-MIT",
    "repo": "https://github.com/rust-lang/rust-by-example"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "作为输入参数",
      "description": "在本实验中，我们了解到在 Rust 中编写以闭包作为输入参数的函数时，必须使用以下 trait 之一来注释闭包的完整类型：Fn、FnMut 或 FnOnce，它们决定了闭包如何使用捕获的值，是通过引用、可变引用还是值。编译器会根据为闭包选择的 trait，以尽可能宽松的方式捕获变量。",
      "meta": {
        "title": "掌握 Rust 闭包：释放函数式编程的力量",
        "description": "探索在 Rust 中使用闭包作为输入参数的复杂性，并学习如何利用 Fn、FnMut 和 FnOnce trait 实现最佳性能。",
        "keywords": "rust 游乐场，fnmut, 闭包，rust 教程，rust 在线编译器，rust 命令，fn, rust 练习，rust 在线游乐场，rust 在线"
      },
      "details": {
        "steps": [
          {
            "title": "作为输入参数",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "此步骤目前没有验证",
                "file": "verify1-1.sh",
                "hint": "此步骤目前没有验证"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Como parámetros de entrada",
      "description": "En este laboratorio, aprendemos que al escribir funciones en Rust que toman una clausura como parámetro de entrada, el tipo completo de la clausura debe ser anotado utilizando uno de los traits: Fn, FnMut o FnOnce, que determinan cómo la clausura utiliza el valor capturado, ya sea por referencia, referencia mutable o valor. El compilador captura las variables de la manera menos restrictiva posible basado en el trait elegido para la clausura.",
      "meta": {
        "title": "Dominando las Clausuras de Rust: Desbloquea el Poder de la Programación Funcional",
        "description": "Explora las complejidades de usar clausuras como parámetros de entrada en Rust y aprende cómo aprovechar los traits Fn, FnMut y FnOnce para un rendimiento óptimo.",
        "keywords": "playground de rust, fnmut, clausuras, tutor de rust, compilador en línea de rust, comandos de rust, fn, práctica de rust, playground en línea de rust, rust en línea"
      },
      "details": {
        "steps": [
          {
            "title": "Como parámetros de entrada",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Este paso no tiene verificación en este momento",
                "file": "verify1-1.sh",
                "hint": "Este paso no tiene verificación en este momento"
              }
            ]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "En tant que paramètres d'entrée",
      "description": "Dans ce laboratoire, nous apprenons qu'en écrivant des fonctions en Rust qui prennent une closure en tant que paramètre d'entrée, le type complet de la closure doit être annoté à l'aide d'un des traits : Fn, FnMut ou FnOnce, qui déterminent comment la closure utilise la valeur capturée, soit par référence, référence mutable ou valeur. Le compilateur capture les variables de la manière la moins restrictive possible en fonction du trait choisi pour la closure.",
      "meta": {
        "title": "Maîtriser les closures Rust : Découvrez le pouvoir de la programmation fonctionnelle",
        "description": "Explorez les subtilités de l'utilisation de closures en tant que paramètres d'entrée en Rust et apprenez à exploiter les traits Fn, FnMut et FnOnce pour une performance optimale.",
        "keywords": "plateforme de pratique Rust, FnMut, closures, tuteur Rust, compilateur en ligne Rust, commandes Rust, Fn, pratique Rust, plateforme de pratique en ligne Rust, Rust en ligne"
      },
      "details": {
        "steps": [
          {
            "title": "En tant que paramètres d'entrée",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Cette étape n'a pas de vérification pour le moment",
                "file": "verify1-1.sh",
                "hint": "Cette étape n'a pas de vérification pour le moment"
              }
            ]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Als Eingabeparameter",
      "description": "In diesem Lab lernen wir, dass wenn wir in Rust Funktionen schreiben, die eine Closure als Eingabeparameter akzeptieren, der vollständige Typ der Closure mithilfe eines der Traits: Fn, FnMut oder FnOnce annotiert werden muss. Diese Traits bestimmen, wie die Closure den eingefangenen Wert verwendet, entweder per Referenz, mutabler Referenz oder Wert. Der Compiler fängt Variablen in der am wenigsten restriktiven Weise möglich basierend auf dem gewählten Trait für die Closure.",
      "meta": {
        "title": "Meisterung von Rust-Closures: Entschlüsseln Sie die Macht der funktionalen Programmierung",
        "description": "Erkunden Sie die Feinheiten des Einsatzes von Closures als Eingabeparameter in Rust und lernen Sie, wie Sie die Traits Fn, FnMut und FnOnce für optimale Leistung nutzen.",
        "keywords": "rust playground, fnmut, closures, rust tutor, rust online compiler, rust commands, fn, rust practice, rust online playground, rust online"
      },
      "details": {
        "steps": [
          {
            "title": "Als Eingabeparameter",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Dieser Schritt hat momentan keine Verifizierung",
                "file": "verify1-1.sh",
                "hint": "Dieser Schritt hat momentan keine Verifizierung"
              }
            ]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "入力パラメータとして",
      "description": "この実験では、クロージャを入力パラメータとして受け取る Rust の関数を書く際、クロージャの完全な型を、クロージャがキャプチャされた値を参照、可変参照、または値でどのように使用するかを決定する `Fn`、`FnMut`、または `FnOnce` のいずれかの `トレイト` を使用して注釈付けする必要があることを学びます。コンパイラは、クロージャに選択されたトレイトに基づいて、可能な限り制限の少ない方法で変数をキャプチャします。",
      "meta": {
        "title": "Rust クロージャをマスターする：関数型プログラミングの力を解き放つ",
        "description": "Rust でクロージャを入力パラメータとして使用する複雑さを探り、最適なパフォーマンスのために `Fn`、`FnMut`、および `FnOnce` トレイトをどのように活用するか学びましょう。",
        "keywords": "rust playground, fnmut, クロージャ，rust tutor, rust オンラインコンパイラ，rust コマンド，fn, rust 練習，rust オンライン playground, rust オンライン"
      },
      "details": {
        "steps": [
          {
            "title": "入力パラメータとして",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "このステップには現在、検証はありません",
                "file": "verify1-1.sh",
                "hint": "このステップには現在、検証はありません"
              }
            ]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "В качестве входных параметров",
      "description": "В этом практическом занятии мы узнаем, что при написании функций на Rust, которые принимают замыкание в качестве входного параметра, полный тип замыкания должен быть аннотирован с использованием одного из трейтов: Fn, FnMut или FnOnce, которые определяют, как замыкание использует захваченное значение, по ссылке, по изменяемой ссылке или по значению. Компилятор захватывает переменные в наименее ограничивающем порядке, исходя из выбранного для замыкания трейта.",
      "meta": {
        "title": "Мастерство в замыканиях Rust: раскройте мощь функционального программирования",
        "description": "Изучите сложности использования замыканий в качестве входных параметров в Rust и узнайте, как использовать трейты Fn, FnMut и FnOnce для оптимальной производительности.",
        "keywords": "игровая площадка Rust, FnMut, замыкания, преподаватель Rust, онлайн-компилятор Rust, команды Rust, Fn, практика Rust, онлайн-игровая площадка Rust, Rust онлайн"
      },
      "details": {
        "steps": [
          {
            "title": "В качестве входных параметров",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "На данный момент эта стадия не имеет проверки",
                "file": "verify1-1.sh",
                "hint": "На данный момент эта стадия не имеет проверки"
              }
            ]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    },
    {
      "lang": "ko",
      "title": "입력 매개변수로서의 클로저",
      "description": "이 실습에서는 Rust 함수에서 클로저를 입력 매개변수로 사용할 때, 클로저의 전체 타입을 Fn, FnMut, 또는 FnOnce 와 같은 트레이트를 사용하여 주석으로 표시해야 함을 배우게 됩니다. 이 트레이트는 클로저가 캡처한 값을 참조, 가변 참조 또는 값으로 사용하는 방식을 결정합니다. 컴파일러는 클로저에 선택된 트레이트에 따라 가능한 가장 제약이 적은 방식으로 변수를 캡처합니다.",
      "meta": {
        "title": "Rust 클로저 마스터하기: 함수형 프로그래밍의 힘을 풀어보세요",
        "description": "Rust 에서 클로저를 입력 매개변수로 사용하는 복잡성을 탐구하고 Fn, FnMut, FnOnce 트레이트를 활용하여 최적의 성능을 얻는 방법을 배워보세요.",
        "keywords": "rust, 클로저, 입력 매개변수, 함수형 프로그래밍, rust 실습, rust 온라인 컴파일러, rust 코딩 연습, rust 예제, rust 가이드, rust 학습, rust 튜토리얼, rust playground, fn, fnmut, rust 온라인 컴파일러, rust 온라인 플레이그라운드"
      },
      "details": {
        "steps": [
          {
            "title": "입력 매개변수로서의 사용",
            "text": "ko/step1.md",
            "verify": [
              {
                "name": "현재 이 단계에는 검증이 없습니다.",
                "file": "verify1-1.sh",
                "hint": "현재 이 단계에는 검증이 없습니다."
              }
            ]
          }
        ],
        "intro": {
          "text": "ko/intro.md",
          "title": "소개"
        },
        "finish": {
          "text": "ko/finish.md",
          "title": "요약"
        }
      }
    },
    {
      "lang": "pt",
      "title": "Parâmetros de Entrada",
      "description": "Neste laboratório, aprendemos que, ao escrever funções em Rust que recebem um closure como parâmetro de entrada, o tipo completo do closure deve ser anotado usando um dos traits: Fn, FnMut ou FnOnce. Esses traits determinam como o closure utiliza o valor capturado, seja por referência, referência mutável ou valor. O compilador captura variáveis da maneira menos restritiva possível, com base no trait escolhido para o closure.",
      "meta": {
        "title": "Domine Closures em Rust: Desbloqueie o Poder da Programação Funcional",
        "description": "Explore os detalhes de usar closures como parâmetros de entrada em Rust e aprenda como aproveitar os traits Fn, FnMut e FnOnce para um desempenho ideal.",
        "keywords": "playground rust, fnmut, closures rust, tutorial rust, compilador online rust, comandos rust, fn rust, prática rust, playground online rust, compilador online rust"
      },
      "details": {
        "steps": [
          {
            "title": "Parâmetros de entrada",
            "text": "pt/step1.md",
            "verify": [
              {
                "name": "Esta etapa não possui verificação no momento",
                "file": "verify1-1.sh",
                "hint": "Esta etapa não possui verificação no momento"
              }
            ]
          }
        ],
        "intro": {
          "text": "pt/intro.md",
          "title": "Introdução"
        },
        "finish": {
          "text": "pt/finish.md",
          "title": "Resumo"
        }
      }
    }
  ]
}
