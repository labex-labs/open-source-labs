{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Exploring Rust's Drop Trait",
  "description": "In this lab, we explore the use of the Drop trait in Rust, which is called automatically when an object goes out of scope and is used to free the resources that the object owns.",
  "meta": {
    "title": "Rust Programming | Drop Trait | Resource Management",
    "description": "Explore the Rust Drop trait, which is used to free resources owned by an object when it goes out of scope. Learn how to implement the Drop trait for custom data types.",
    "keywords": "Rust, Drop Trait, Resource Management, Programming, Tutorial"
  },
  "difficulty": "Beginner",
  "time": 5,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Drop",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "This step has no verification at the moment",
            "file": "verify1-1.sh",
            "hint": "This step has no verification at the moment",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": []
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": [],
  "license": {
    "name": "MIT",
    "url": "https://github.com/rust-lang/rust-by-example/blob/master/LICENSE-MIT",
    "repo": "https://github.com/rust-lang/rust-by-example"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "探索 Rust 的 Drop 特性",
      "description": "在本实验中，我们探索 Rust 中 Drop 特性的用法，当对象超出作用域时，该特性会自动调用，用于释放对象所拥有的资源。",
      "meta": {
        "title": "Rust 编程 | Drop 特性 | 资源管理",
        "description": "探索 Rust 的 Drop 特性，该特性用于在对象超出作用域时释放其拥有的资源。了解如何为自定义数据类型实现 Drop 特性。",
        "keywords": "Rust, Drop 特性，资源管理，编程，教程"
      },
      "details": {
        "steps": [
          {
            "title": "Drop",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "此步骤目前没有验证",
                "file": "verify1-1.sh",
                "hint": "此步骤目前没有验证"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Explorando el trato Drop de Rust",
      "description": "En este laboratorio, exploramos el uso del trato Drop en Rust, que se llama automáticamente cuando un objeto sale del ámbito y se utiliza para liberar los recursos que posee el objeto.",
      "meta": {
        "title": "Programación en Rust | Trato Drop | Gestión de recursos",
        "description": "Explore el trato Drop de Rust, que se utiliza para liberar los recursos propiedad de un objeto cuando sale del ámbito. Aprenda cómo implementar el trato Drop para tipos de datos personalizados.",
        "keywords": "Rust, Trato Drop, Gestión de recursos, Programación, Tutorial"
      },
      "details": {
        "steps": [
          {
            "title": "Drop",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "En este momento, este paso no tiene verificación",
                "file": "verify1-1.sh",
                "hint": "En este momento, este paso no tiene verificación"
              }
            ]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Explorer le trait Drop de Rust",
      "description": "Dans ce laboratoire, nous explorons l'utilisation du trait Drop en Rust, qui est appelé automatiquement lorsqu'un objet sort de portée et est utilisé pour libérer les ressources que l'objet possède.",
      "meta": {
        "title": "Programmation Rust | Trait Drop | Gestion des ressources",
        "description": "Explorez le trait Drop de Rust, qui est utilisé pour libérer les ressources appartenant à un objet lorsqu'il sort de portée. Découvrez comment implémenter le trait Drop pour les types de données personnalisés.",
        "keywords": "Rust, Trait Drop, Gestion des ressources, Programmation, Tutoriel"
      },
      "details": {
        "steps": [
          {
            "title": "Drop",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Cette étape n'a pas de vérification pour le moment",
                "file": "verify1-1.sh",
                "hint": "Cette étape n'a pas de vérification pour le moment"
              }
            ]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Das Drop-Trait in Rust erkunden",
      "description": "In diesem Lab untersuchen wir die Verwendung des Drop-Traits in Rust, der automatisch aufgerufen wird, wenn ein Objekt außer Gültigkeitsbereich gelangt und der dazu verwendet wird, die Ressourcen freizugeben, die das Objekt besitzt.",
      "meta": {
        "title": "Rust-Programmierung | Drop-Trait | Ressourcenverwaltung",
        "description": "Erkunden Sie das Rust Drop-Trait, das verwendet wird, um die Ressourcen freizugeben, die einem Objekt gehören, wenn es außer Gültigkeitsbereich gelangt. Lernen Sie, wie Sie das Drop-Trait für benutzerdefinierte Datentypen implementieren.",
        "keywords": "Rust, Drop-Trait, Ressourcenverwaltung, Programmierung, Tutorial"
      },
      "details": {
        "steps": [
          {
            "title": "Drop",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Dieser Schritt hat momentan keine Verifizierung",
                "file": "verify1-1.sh",
                "hint": "Dieser Schritt hat momentan keine Verifizierung"
              }
            ]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "Rust の Drop トレイトを探る",
      "description": "この実験では、Rust における Drop トレイトの使用方法を調べます。このトレイトは、オブジェクトがスコープ外になると自動的に呼び出され、オブジェクトが所有するリソースを解放するために使用されます。",
      "meta": {
        "title": "Rust プログラミング | Drop トレイト | リソース管理",
        "description": "オブジェクトがスコープ外になるときにそのオブジェクトが所有するリソースを解放するために使用される Rust の Drop トレイトを探ります。カスタムデータ型に対して Drop トレイトを実装する方法を学びましょう。",
        "keywords": "Rust, Drop トレイト，リソース管理，プログラミング，チュートリアル"
      },
      "details": {
        "steps": [
          {
            "title": "Drop",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "このステップには現在検証はありません",
                "file": "verify1-1.sh",
                "hint": "このステップには現在検証はありません"
              }
            ]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Изучение трейта Drop в Rust",
      "description": "В этом лабораторном задании мы исследуем использование трейта Drop в Rust, который вызывается автоматически, когда объект выходит из области видимости, и используется для освобождения ресурсов, принадлежащих объекту.",
      "meta": {
        "title": "Программирование на Rust | Трейт Drop | Управление ресурсами",
        "description": "Изучите трейт Drop в Rust, который используется для освобождения ресурсов, принадлежащих объекту, когда он выходит из области видимости. Найдите out, как реализовать трейт Drop для пользовательских типов данных.",
        "keywords": "Rust, Трейт Drop, Управление ресурсами, Программирование, Руководство"
      },
      "details": {
        "steps": [
          {
            "title": "Drop",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "На данный момент эта стадия не имеет проверки",
                "file": "verify1-1.sh",
                "hint": "На данный момент эта стадия не имеет проверки"
              }
            ]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    },
    {
      "lang": "ko",
      "title": "Rust 의 Drop 트레이트 탐구",
      "description": "이 랩에서는 Rust 에서 객체가 스코프 밖으로 벗어날 때 자동으로 호출되어 객체가 소유한 리소스를 해제하는 데 사용되는 Drop 트레이트의 사용법을 살펴봅니다.",
      "meta": {
        "title": "Rust 프로그래밍 | Drop 트레이트 | 리소스 관리",
        "description": "객체가 스코프 밖으로 벗어날 때 객체가 소유한 리소스를 해제하는 데 사용되는 Rust Drop 트레이트를 탐구합니다. 사용자 정의 데이터 타입에 Drop 트레이트를 구현하는 방법을 알아보세요.",
        "keywords": "Rust, Drop 트레이트, 리소스 관리, 프로그래밍, 튜토리얼, 러스트, Drop"
      },
      "details": {
        "steps": [
          {
            "title": "Drop",
            "text": "ko/step1.md",
            "verify": [
              {
                "name": "현재 이 단계에는 검증이 없습니다.",
                "file": "verify1-1.sh",
                "hint": "현재 이 단계에는 검증이 없습니다."
              }
            ]
          }
        ],
        "intro": {
          "text": "ko/intro.md",
          "title": "소개"
        },
        "finish": {
          "text": "ko/finish.md",
          "title": "요약"
        }
      }
    },
    {
      "lang": "pt",
      "title": "Explorando o Trait Drop do Rust",
      "description": "Neste laboratório, exploramos o uso do trait Drop em Rust, que é chamado automaticamente quando um objeto sai do escopo e é usado para liberar os recursos que o objeto possui.",
      "meta": {
        "title": "Programação Rust | Trait Drop | Gerenciamento de Recursos",
        "description": "Explore o trait Drop do Rust, usado para liberar recursos pertencentes a um objeto quando ele sai do escopo. Aprenda como implementar o trait Drop para tipos de dados personalizados.",
        "keywords": "Rust, Trait Drop, Gerenciamento de Recursos, Programação, Tutorial, Rust Drop"
      },
      "details": {
        "steps": [
          {
            "title": "Drop",
            "text": "pt/step1.md",
            "verify": [
              {
                "name": "Esta etapa não possui verificação no momento",
                "file": "verify1-1.sh",
                "hint": "Esta etapa não possui verificação no momento"
              }
            ]
          }
        ],
        "intro": {
          "text": "pt/intro.md",
          "title": "Introdução"
        },
        "finish": {
          "text": "pt/finish.md",
          "title": "Resumo"
        }
      }
    }
  ]
}
