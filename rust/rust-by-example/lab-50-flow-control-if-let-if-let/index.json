{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Exploring Rust's if let Construct",
  "description": "In this lab, we explore the usage of the if let construct in Rust, which allows for cleaner code when matching enums and provides the ability to specify failure options. We also demonstrate how if let can be used to match any enum value, including non-parameterized variants. Additionally, we provide an example of fixing code that attempts to compare two enum values by using if let instead.",
  "meta": {
    "title": "Exploring Rust's Powerful if let Construct",
    "description": "Learn how to use the powerful if let construct in Rust to write cleaner code and handle enum matching with ease.",
    "keywords": "matching, rust playground, enum, rust online compiler, rust tutor, rust commands, rust practice, rust online playground, rust online, programming"
  },
  "difficulty": "Beginner",
  "time": 5,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "if let",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "This step has no verification at the moment",
            "file": "verify1-1.sh",
            "hint": "This step has no verification at the moment",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": []
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": [],
  "license": {
    "name": "MIT",
    "url": "https://github.com/rust-lang/rust-by-example/blob/master/LICENSE-MIT",
    "repo": "https://github.com/rust-lang/rust-by-example"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "探索 Rust 的 if let 结构",
      "description": "在本实验中，我们探索 Rust 中 if let 结构的用法，它在匹配枚举时能让代码更简洁，并提供指定失败选项的能力。我们还展示了如何使用 if let 来匹配任何枚举值，包括非参数化变体。此外，我们提供了一个修复代码的示例，该代码尝试通过使用 if let 来比较两个枚举值。",
      "meta": {
        "title": "探索 Rust 强大的 if let 结构",
        "description": "学习如何在 Rust 中使用强大的 if let 结构编写更简洁的代码，并轻松处理枚举匹配。",
        "keywords": "匹配，Rust 在线编译器，枚举，Rust 在线游乐场，Rust 教程，Rust 命令，Rust 练习，Rust 在线，编程，Rust 游乐场"
      },
      "details": {
        "steps": [
          {
            "title": "if let",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "此步骤目前没有验证",
                "file": "verify1-1.sh",
                "hint": "此步骤目前没有验证"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Explorando la construcción if let de Rust",
      "description": "En este laboratorio, exploramos el uso de la construcción if let en Rust, que permite un código más limpio al coincidir con enums y proporciona la capacidad de especificar opciones de error. También demostramos cómo if let se puede utilizar para coincidir con cualquier valor de enum, incluyendo variantes no parametrizadas. Además, proporcionamos un ejemplo de cómo corregir código que intenta comparar dos valores de enum utilizando if let en su lugar.",
      "meta": {
        "title": "Explorando la poderosa construcción if let de Rust",
        "description": "Aprende a usar la poderosa construcción if let en Rust para escribir un código más limpio y manejar la coincidencia de enums con facilidad.",
        "keywords": "coincidencia, playground de Rust, enum, compilador en línea de Rust, tutor de Rust, comandos de Rust, práctica de Rust, playground en línea de Rust, Rust en línea, programación"
      },
      "details": {
        "steps": [
          {
            "title": "if let",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Este paso no tiene verificación en este momento",
                "file": "verify1-1.sh",
                "hint": "Este paso no tiene verificación en este momento"
              }
            ]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Explorer la construction if let de Rust",
      "description": "Dans ce laboratoire, nous explorons l'utilisation de la construction if let en Rust, qui permet d'avoir un code plus propre lors de la correspondance d'enumérations et offre la possibilité de spécifier des options de défaillance. Nous montrons également comment if let peut être utilisé pour correspondre n'importe quelle valeur d'enumération, y compris des variantes non paramétrées. De plus, nous donnons un exemple de correction de code qui tente de comparer deux valeurs d'enumération en utilisant if let à la place.",
      "meta": {
        "title": "Explorer la puissante construction if let de Rust",
        "description": "Découvrez comment utiliser la puissante construction if let en Rust pour écrire un code plus propre et gérer facilement la correspondance d'enumérations.",
        "keywords": "correspondance, terrain de jeu Rust, enumération, compilateur en ligne Rust, tuteur Rust, commandes Rust, pratique Rust, terrain de jeu en ligne Rust, Rust en ligne, programmation"
      },
      "details": {
        "steps": [
          {
            "title": "if let",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Cette étape n'a pas de vérification pour le moment",
                "file": "verify1-1.sh",
                "hint": "Cette étape n'a pas de vérification pour le moment"
              }
            ]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Das if let-Konstrukt in Rust erkunden",
      "description": "In diesem Lab untersuchen wir die Verwendung des if let-Konstrukts in Rust, das für einen saubereren Code sorgt, wenn Enums abgeglichen werden, und die Möglichkeit bietet, Fehlermöglichkeiten anzugeben. Wir demonstrieren auch, wie if let verwendet werden kann, um jeden Enum-Wert abzugleichen, einschließlich nicht parametrisierter Varianten. Darüber hinaus geben wir ein Beispiel dafür, wie Code repariert werden kann, der versucht, zwei Enum-Werte miteinander zu vergleichen, indem stattdessen if let verwendet wird.",
      "meta": {
        "title": "Das leistungsstarke if let-Konstrukt in Rust erkunden",
        "description": "Lernen Sie, wie Sie das leistungsstarke if let-Konstrukt in Rust verwenden, um saubereren Code zu schreiben und die Enum-Abgleichung problemlos zu behandeln.",
        "keywords": "Abgleich, Rust-Spielfeld, Enum, Online-Compiler für Rust, Rust-Tutor, Rust-Befehle, Rust-Praxis, Online-Spielfeld für Rust, Online-Rust, Programmierung"
      },
      "details": {
        "steps": [
          {
            "title": "if let",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Dieser Schritt hat momentan keine Verifizierung",
                "file": "verify1-1.sh",
                "hint": "Dieser Schritt hat momentan keine Verifizierung"
              }
            ]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "Rust の if let 構文を探る",
      "description": "この実験では、Rust の if let 構文の使い方を調べます。これは、列挙型をマッチングする際にクリーンなコードを書くことができ、失敗オプションを指定することができます。また、if let を使って任意の列挙型値、パラメータなしのバリアントを含むものをマッチングする方法を示します。さらに、列挙型の 2 つの値を比較しようとするコードを修正する例を示します。この修正では if let を使っています。",
      "meta": {
        "title": "強力な Rust の if let 構文を探る",
        "description": "Rust の強力な if let 構文を使って、クリーンなコードを書き、列挙型のマッチングを簡単に処理する方法を学びましょう。",
        "keywords": "マッチング，Rust プレイグラウンド，列挙型，Rust オンラインコンパイラ，Rust チューター, Rust コマンド，Rust 練習，Rust オンラインプレイグラウンド，Rust オンライン，プログラミング"
      },
      "details": {
        "steps": [
          {
            "title": "if let",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "このステップは現在検証がありません",
                "file": "verify1-1.sh",
                "hint": "このステップは現在検証がありません"
              }
            ]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Изучение конструкции if let в Rust",
      "description": "В этой лабораторной работе мы исследуем использование конструкции if let в Rust, которая позволяет писать более чистый код при сопоставлении перечислений и дает возможность указать варианты неудачи. Также мы демонстрируем, как if let можно использовать для сопоставления любого значения перечисления, включая варианты без параметров. Кроме того, мы приводим пример исправления кода, который пытается сравнить два значения перечисления, используя if let вместо этого.",
      "meta": {
        "title": "Изучение мощной конструкции if let в Rust",
        "description": "Изучите, как использовать мощную конструкцию if let в Rust для написания более чистого кода и простой обработки сопоставления перечислений.",
        "keywords": "сопоставление, игровой полигон Rust, перечисление, онлайн-компилятор Rust, преподаватель Rust, команды Rust, практика Rust, онлайн-игровой полигон Rust, онлайн Rust, программирование"
      },
      "details": {
        "steps": [
          {
            "title": "if let",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "На данный момент эта стадия не имеет проверки",
                "file": "verify1-1.sh",
                "hint": "На данный момент эта стадия не имеет проверки"
              }
            ]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    },
    {
      "lang": "ko",
      "title": "Rust 의 if let 구문 탐색",
      "description": "이 실습에서는 Rust 의 if let 구문을 사용하여 열거형 (enum) 과 일치할 때 코드를 더욱 간결하게 작성하고 실패 옵션을 지정하는 방법을 살펴봅니다. 또한, 매개변수가 없는 변형을 포함한 모든 열거형 값과 일치하는 방법을 보여주고, 두 열거형 값을 비교하려는 코드를 if let 을 사용하여 수정하는 예제를 제공합니다.",
      "meta": {
        "title": "Rust 의 강력한 if let 구문 탐색",
        "description": "Rust 의 강력한 if let 구문을 사용하여 더욱 깨끗하고 효율적인 코드를 작성하고 열거형 일치를 쉽게 처리하는 방법을 배우세요.",
        "keywords": "일치, rust, playground, 열거형, rust 온라인 컴파일러, rust 튜터, rust 명령어, rust 연습, rust 온라인 플레이그라운드, rust 온라인, 프로그래밍, rust if let, if let 예제, rust 열거형 처리"
      },
      "details": {
        "steps": [
          {
            "title": "if let 구문",
            "text": "ko/step1.md",
            "verify": [
              {
                "name": "현재 이 단계에는 검증이 없습니다.",
                "file": "verify1-1.sh",
                "hint": "현재 이 단계에는 검증이 없습니다."
              }
            ]
          }
        ],
        "intro": {
          "text": "ko/intro.md",
          "title": "소개"
        },
        "finish": {
          "text": "ko/finish.md",
          "title": "요약"
        }
      }
    },
    {
      "lang": "pt",
      "title": "Explorando a Construção if let do Rust",
      "description": "Neste laboratório, exploramos o uso da construção if let em Rust, que permite código mais limpo ao corresponder a enumerações e fornece a capacidade de especificar opções de falha. Também demonstramos como if let pode ser usado para corresponder a qualquer valor de enumeração, incluindo variantes não parametrizadas. Além disso, fornecemos um exemplo de correção de código que tenta comparar dois valores de enumeração usando if let em vez disso.",
      "meta": {
        "title": "Explorando a Poderoso Construção if let do Rust",
        "description": "Aprenda a usar a poderosa construção if let em Rust para escrever código mais limpo e lidar com correspondências de enumerações com facilidade.",
        "keywords": "correspondência, playground rust, enumeração, compilador online rust, tutor rust, comandos rust, prática rust, playground online rust, rust online, programação, rust, if let, enums rust"
      },
      "details": {
        "steps": [
          {
            "title": "if let",
            "text": "pt/step1.md",
            "verify": [
              {
                "name": "Esta etapa não possui verificação no momento",
                "file": "verify1-1.sh",
                "hint": "Esta etapa não possui verificação no momento"
              }
            ]
          }
        ],
        "intro": {
          "text": "pt/intro.md",
          "title": "Introdução"
        },
        "finish": {
          "text": "pt/finish.md",
          "title": "Resumo"
        }
      }
    }
  ]
}
