{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Check if Arrays Have Same Contents",
  "description": "In this lab, we will explore how to check if two arrays have the same contents in JavaScript. We will create a function that takes in two arrays and returns true if they contain the same elements, regardless of order, and false otherwise. We will use a combination of Set, for...of loop, and Array.prototype.filter() to achieve this functionality.",
  "meta": {
    "title": "Checking Array Contents in JavaScript",
    "description": "Learn how to check if two arrays have the same contents in JavaScript using Set, for...of loop, and Array.prototype.filter().",
    "keywords": "javascript, javascript practice, javascript practice online, set, comparison, javascript lab, javascript tutor, array, contents"
  },
  "difficulty": "Beginner",
  "time": 5,
  "hidden": true,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Check if Arrays Have Same Contents",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify Node Command Usage",
            "file": "verify1-1.sh",
            "hint": "JavaScript can be run in the Terminal/SSH by typing 'node' and pressing Enter.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "javascript/arith_ops",
          "javascript/comp_ops",
          "javascript/cond_stmts",
          "javascript/data_types",
          "javascript/higher_funcs",
          "javascript/loops",
          "javascript/variables"
        ]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["Lotus-7"],
  "license": {
    "name": "CC-BY-4.0",
    "url": "https://github.com/30-seconds/30-seconds-of-code/blob/master/LICENSE",
    "repo": "https://github.com/30-seconds/30-seconds-of-code"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "检查数组是否具有相同内容",
      "description": "在本实验中，我们将探索如何在 JavaScript 中检查两个数组是否具有相同的内容。我们将创建一个函数，该函数接受两个数组，如果它们包含相同的元素（无论顺序如何），则返回 true，否则返回 false。我们将结合使用 Set、for...of 循环和 Array.prototype.filter() 来实现此功能。",
      "meta": {
        "title": "在 JavaScript 中检查数组内容",
        "description": "学习如何使用 Set、for...of 循环和 Array.prototype.filter() 在 JavaScript 中检查两个数组是否具有相同的内容。",
        "keywords": "javascript, javascript 实践，在线 javascript 实践，set, 比较，javascript 实验，javascript 教程，数组，内容"
      },
      "details": {
        "steps": [
          {
            "title": "检查数组是否具有相同内容",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "验证 Node 命令的用法",
                "file": "verify1-1.sh",
                "hint": "通过在终端/SSH 中输入'node'并按回车键，可以运行 JavaScript。"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Comprobar si los arrays tienen el mismo contenido",
      "description": "En este laboratorio, exploraremos cómo comprobar si dos arrays tienen el mismo contenido en JavaScript. Crearemos una función que tome dos arrays y devuelva true si contienen los mismos elementos, independientemente del orden, y false en caso contrario. Utilizaremos una combinación de Set, bucle for...of y Array.prototype.filter() para lograr esta funcionalidad.",
      "meta": {
        "title": "Comprobando el contenido de arrays en JavaScript",
        "description": "Aprende cómo comprobar si dos arrays tienen el mismo contenido en JavaScript utilizando Set, bucle for...of y Array.prototype.filter().",
        "keywords": "javascript, práctica de javascript, práctica de javascript en línea, set, comparación, laboratorio de javascript, tutor de javascript, array, contenido"
      },
      "details": {
        "steps": [
          {
            "title": "Comprobar si los arrays tienen el mismo contenido",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Verificar el uso del comando Node",
                "file": "verify1-1.sh",
                "hint": "Se puede ejecutar JavaScript en la Terminal/SSH escribiendo 'node' y presionando Enter."
              }
            ]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Vérifier si deux tableaux ont le même contenu",
      "description": "Dans ce laboratoire, nous allons explorer la manière de vérifier si deux tableaux ont le même contenu en JavaScript. Nous allons créer une fonction qui prend deux tableaux en entrée et renvoie true s'ils contiennent les mêmes éléments, quelle que soit l'ordre, et false dans le cas contraire. Nous allons utiliser une combinaison de Set, de boucle for...of et de Array.prototype.filter() pour obtenir cette fonctionnalité.",
      "meta": {
        "title": "Vérification du contenu des tableaux en JavaScript",
        "description": "Découvrez comment vérifier si deux tableaux ont le même contenu en JavaScript en utilisant Set, la boucle for...of et Array.prototype.filter().",
        "keywords": "javascript, pratique javascript, pratique javascript en ligne, set, comparaison, laboratoire javascript, tuteur javascript, tableau, contenu"
      },
      "details": {
        "steps": [
          {
            "title": "Vérifier si deux tableaux ont le même contenu",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Vérifier l'utilisation de la commande Node",
                "file": "verify1-1.sh",
                "hint": "JavaScript peut être exécuté dans le Terminal/SSH en tapant 'node' et en appuyant sur Entrée."
              }
            ]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Prüfen, ob Arrays die gleichen Inhalte haben",
      "description": "In diesem Lab werden wir untersuchen, wie man in JavaScript überprüft, ob zwei Arrays die gleichen Inhalte haben. Wir werden eine Funktion erstellen, die zwei Arrays als Parameter nimmt und true zurückgibt, wenn sie die gleichen Elemente enthalten, unabhängig von der Reihenfolge, und false sonst. Wir werden eine Kombination aus Set, for...of-Schleife und Array.prototype.filter() verwenden, um diese Funktionalität zu erreichen.",
      "meta": {
        "title": "Prüfen von Arrayinhalten in JavaScript",
        "description": "Lernen Sie, wie man in JavaScript überprüft, ob zwei Arrays die gleichen Inhalte haben, indem Sie Set, for...of-Schleife und Array.prototype.filter() verwenden.",
        "keywords": "javascript, javascript Übung, online javascript Übung, set, Vergleich, javascript Lab, javascript Tutor, Array, Inhalte"
      },
      "details": {
        "steps": [
          {
            "title": "Prüfen, ob Arrays die gleichen Inhalte haben",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Verifizieren der Verwendung des Node-Befehls",
                "file": "verify1-1.sh",
                "hint": "JavaScript kann im Terminal/SSH ausgeführt werden, indem man 'node' eingibt und die Enter-Taste drückt."
              }
            ]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "配列が同じ内容を持っているかどうかを確認する",
      "description": "この実験では、JavaScript において 2 つの配列が同じ内容を持っているかどうかを確認する方法を探ります。2 つの配列を引数に取り、順序に関係なく同じ要素を含んでいれば true を返し、そうでなければ false を返す関数を作成します。Set、for...of ループ、および Array.prototype.filter() を組み合わせてこの機能を実現します。",
      "meta": {
        "title": "JavaScript で配列の内容を確認する",
        "description": "Set、for...of ループ、および Array.prototype.filter() を使用して、JavaScript で 2 つの配列が同じ内容を持っているかどうかを確認する方法を学びましょう。",
        "keywords": "javascript, javascript の練習，オンラインでの javascript の練習，set, 比較，javascript の実験，javascript のチュートリアル，配列，内容"
      },
      "details": {
        "steps": [
          {
            "title": "配列が同じ内容を持っているかどうかを確認する",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "Node コマンドの使用を確認する",
                "file": "verify1-1.sh",
                "hint": "ターミナル/SSH で 'node' と入力して Enter キーを押すことで、JavaScript を実行できます。"
              }
            ]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Проверить, содержат ли массивы одинаковые элементы",
      "description": "В этом практическом занятии мы изучим, как проверить, содержат ли два массива одинаковые элементы в JavaScript. Мы создадим функцию, которая принимает два массива и возвращает true, если они содержат одинаковые элементы, независимо от порядка, и false в противном случае. Мы используем комбинацию Set, цикла for...of и Array.prototype.filter(), чтобы реализовать эту функциональность.",
      "meta": {
        "title": "Проверка содержимого массива в JavaScript",
        "description": "Изучите, как проверить, содержат ли два массива одинаковые элементы в JavaScript с использованием Set, цикла for...of и Array.prototype.filter().",
        "keywords": "javascript, практика javascript, онлайн практика javascript, set, сравнение, практическое занятие javascript, преподаватель javascript, массив, содержимое"
      },
      "details": {
        "steps": [
          {
            "title": "Проверить, содержат ли массивы одинаковые элементы",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "Проверить использование команды Node",
                "file": "verify1-1.sh",
                "hint": "JavaScript можно запустить в Терминале/SSH, введя 'node' и нажав Enter."
              }
            ]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    },
    {
      "lang": "ko",
      "title": "배열 내용 동일성 확인",
      "description": "이 랩에서는 JavaScript 에서 두 배열이 동일한 내용을 가지고 있는지 확인하는 방법을 살펴봅니다. 두 개의 배열을 입력으로 받아 순서에 관계없이 동일한 요소를 포함하는 경우 true 를, 그렇지 않은 경우 false 를 반환하는 함수를 만들 것입니다. Set, for...of 루프, Array.prototype.filter() 를 조합하여 이 기능을 구현합니다.",
      "meta": {
        "title": "JavaScript 에서 배열 내용 확인 방법",
        "description": "Set, for...of 루프, Array.prototype.filter() 를 사용하여 JavaScript 에서 두 배열이 동일한 내용을 가지고 있는지 확인하는 방법을 알아보세요.",
        "keywords": "자바스크립트, 자바스크립트 연습, 자바스크립트 온라인 연습, set, 비교, 자바스크립트 랩, 자바스크립트 튜터, 배열, 내용, 배열 비교"
      },
      "details": {
        "steps": [
          {
            "title": "배열 내용 동일성 확인",
            "text": "ko/step1.md",
            "verify": [
              {
                "name": "Node 명령어 사용 확인",
                "file": "verify1-1.sh",
                "hint": "터미널/SSH 에서 'node'를 입력하고 Enter 키를 눌러 JavaScript 를 실행할 수 있습니다."
              }
            ]
          }
        ],
        "intro": {
          "text": "ko/intro.md",
          "title": "소개"
        },
        "finish": {
          "text": "ko/finish.md",
          "title": "요약"
        }
      }
    },
    {
      "lang": "pt",
      "title": "Verificar se Arrays Possuem o Mesmo Conteúdo",
      "description": "Neste laboratório, exploraremos como verificar se dois arrays possuem o mesmo conteúdo em JavaScript. Criaremos uma função que recebe dois arrays e retorna true se eles contiverem os mesmos elementos, independentemente da ordem, e false caso contrário. Usaremos uma combinação de Set, loop for...of e Array.prototype.filter() para alcançar essa funcionalidade.",
      "meta": {
        "title": "Verificação de Conteúdo de Array em JavaScript",
        "description": "Aprenda como verificar se dois arrays possuem o mesmo conteúdo em JavaScript usando Set, loop for...of e Array.prototype.filter().",
        "keywords": "javascript, prática javascript, exercícios javascript online, set, comparação, laboratório javascript, tutorial javascript, array, conteúdo"
      },
      "details": {
        "steps": [
          {
            "title": "Verificar se Arrays Possuem o Mesmo Conteúdo",
            "text": "pt/step1.md",
            "verify": [
              {
                "name": "Verificar Uso do Comando Node",
                "file": "verify1-1.sh",
                "hint": "JavaScript pode ser executado no Terminal/SSH digitando 'node' e pressionando Enter."
              }
            ]
          }
        ],
        "intro": {
          "text": "pt/intro.md",
          "title": "Introdução"
        },
        "finish": {
          "text": "pt/finish.md",
          "title": "Resumo"
        }
      }
    }
  ]
}
