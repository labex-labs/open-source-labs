{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Flatten JavaScript Object with Recursion",
  "description": "In this lab, we will explore a JavaScript function that flattens an object with the paths for keys. The function uses recursion and Object.keys() combined with Array.prototype.reduce() to convert every leaf node to a flattened path node. By the end of this lab, you will have a better understanding of how to manipulate JavaScript objects and flatten them for easier data processing.",
  "meta": {
    "title": "JavaScript Object Flattening | Recursion and Object Manipulation",
    "description": "Learn how to flatten complex JavaScript objects using recursion and Object.keys() combined with Array.reduce() for easier data processing.",
    "keywords": "JavaScript, object flattening, recursion, Object.keys, Array.reduce"
  },
  "difficulty": "Beginner",
  "time": 5,
  "hidden": true,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Flatten Object",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify Node Command History",
            "file": "verify1-1.sh",
            "hint": "JavaScript can be run in the Terminal/SSH by typing 'node' and pressing Enter.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "javascript/arith_ops",
          "javascript/array_methods",
          "javascript/comp_ops",
          "javascript/cond_stmts",
          "javascript/data_types",
          "javascript/destr_assign",
          "javascript/higher_funcs",
          "javascript/template_lit",
          "javascript/variables"
        ]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["Lotus-7"],
  "license": {
    "name": "CC-BY-4.0",
    "url": "https://github.com/30-seconds/30-seconds-of-code/blob/master/LICENSE",
    "repo": "https://github.com/30-seconds/30-seconds-of-code"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "使用递归扁平化 JavaScript 对象",
      "description": "在本实验中，我们将探索一个 JavaScript 函数，该函数会使用键的路径来扁平化一个对象。该函数使用递归以及 Object.keys() 并结合 Array.prototype.reduce()，将每个叶节点转换为扁平化路径节点。完成本实验后，你将更好地理解如何操作 JavaScript 对象并将其扁平化，以便更轻松地进行数据处理。",
      "meta": {
        "title": "JavaScript 对象扁平化 | 递归与对象操作",
        "description": "学习如何使用递归以及 Object.keys() 并结合 Array.reduce() 来扁平化复杂的 JavaScript 对象，以便更轻松地进行数据处理。",
        "keywords": "JavaScript, 对象扁平化，递归，Object.keys, Array.reduce"
      },
      "details": {
        "steps": [
          {
            "title": "扁平化对象",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "验证 Node 命令历史记录",
                "file": "verify1-1.sh",
                "hint": "在终端/SSH 中，通过输入'node'并按回车键可以运行 JavaScript。"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Aplanar objeto de JavaScript con recursividad",
      "description": "En este laboratorio, exploraremos una función de JavaScript que aplanará un objeto con las rutas para las claves. La función utiliza recursividad y Object.keys() combinado con Array.prototype.reduce() para convertir cada nodo hoja en un nodo de ruta aplanada. Al final de este laboratorio, tendrás una mejor comprensión de cómo manipular objetos de JavaScript y aplanarlos para un procesamiento de datos más fácil.",
      "meta": {
        "title": "Aplanamiento de objetos de JavaScript | Recursividad y manipulación de objetos",
        "description": "Aprende a aplanar objetos complejos de JavaScript utilizando recursividad y Object.keys() combinado con Array.reduce() para un procesamiento de datos más fácil.",
        "keywords": "JavaScript, aplanamiento de objetos, recursividad, Object.keys, Array.reduce"
      },
      "details": {
        "steps": [
          {
            "title": "Aplanar objeto",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Verificar el historial del comando de Node",
                "file": "verify1-1.sh",
                "hint": "JavaScript se puede ejecutar en la Terminal/SSH escribiendo 'node' y presionando Enter."
              }
            ]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Aplatir un objet JavaScript avec récursion",
      "description": "Dans ce laboratoire, nous allons explorer une fonction JavaScript qui aplatit un objet en ajoutant les chemins pour les clés. La fonction utilise la récursion et Object.keys() combinée avec Array.prototype.reduce() pour convertir chaque nœud feuille en un nœud de chemin aplati. À la fin de ce laboratoire, vous aurez une meilleure compréhension de la manière de manipuler les objets JavaScript et de les aplatir pour un traitement de données plus facile.",
      "meta": {
        "title": "Aplatissement d'objets JavaScript | Récursion et manipulation d'objets",
        "description": "Découvrez comment aplatir des objets JavaScript complexes en utilisant la récursion et Object.keys() combiné avec Array.reduce() pour un traitement de données plus facile.",
        "keywords": "JavaScript, aplatissement d'objets, récursion, Object.keys, Array.reduce"
      },
      "details": {
        "steps": [
          {
            "title": "Aplatir un objet",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Vérifier l'historique de la commande Node",
                "file": "verify1-1.sh",
                "hint": "JavaScript peut être exécuté dans le Terminal/SSH en tapant 'node' et en appuyant sur Entrée."
              }
            ]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "JavaScript-Objekt mit Rekursion flachstellen",
      "description": "In diesem Lab werden wir eine JavaScript-Funktion untersuchen, die ein Objekt mit den Pfaden für die Schlüssel flachstellt. Die Funktion verwendet Rekursion und Object.keys(), kombiniert mit Array.prototype.reduce(), um jeden Blattknoten in einen flachen Pfadknoten umzuwandeln. Am Ende dieses Labs werden Sie ein besseres Verständnis dafür haben, wie Sie JavaScript-Objekte manipulieren und sie flachstellen, um die Datenverarbeitung zu erleichtern.",
      "meta": {
        "title": "JavaScript-Objektflachstellung | Rekursion und Objektmanipulation",
        "description": "Lernen Sie, wie Sie komplexe JavaScript-Objekte mit Rekursion und Object.keys(), kombiniert mit Array.reduce(), für eine einfachere Datenverarbeitung flachstellen.",
        "keywords": "JavaScript, Objektflachstellung, Rekursion, Object.keys, Array.reduce"
      },
      "details": {
        "steps": [
          {
            "title": "Objekt flachstellen",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Verifizieren Sie die Node-Befehlsgeschichte",
                "file": "verify1-1.sh",
                "hint": "JavaScript kann im Terminal/SSH ausgeführt werden, indem Sie 'node' eingeben und die Eingabetaste drücken."
              }
            ]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "再帰を使った JavaScript オブジェクトのフラット化",
      "description": "この実験では、キーのパス付きでオブジェクトをフラット化する JavaScript 関数を調べます。この関数は再帰と Object.keys() を Array.prototype.reduce() と組み合わせて、すべてのリーフノードをフラット化されたパスノードに変換します。この実験が終了するまでに、JavaScript オブジェクトを操作して、データ処理を簡単にするためにフラット化する方法をより深く理解するようになります。",
      "meta": {
        "title": "JavaScript オブジェクトのフラット化 | 再帰とオブジェクト操作",
        "description": "再帰と Object.keys() を Array.reduce() と組み合わせて、複雑な JavaScript オブジェクトをフラット化して、データ処理を簡単にする方法を学びましょう。",
        "keywords": "JavaScript, オブジェクトフラット化，再帰，Object.keys, Array.reduce"
      },
      "details": {
        "steps": [
          {
            "title": "オブジェクトをフラット化する",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "Node コマンド履歴を確認する",
                "file": "verify1-1.sh",
                "hint": "ターミナル/SSH で'node'と入力して Enter キーを押すことで、JavaScript を実行できます。"
              }
            ]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Развёртывание объекта JavaScript с использованием рекурсии",
      "description": "В этом практическом занятии мы изучим функцию JavaScript, которая сглаживает объект, добавляя пути для ключей. Функция использует рекурсию и Object.keys(), комбинированные с Array.prototype.reduce(), чтобы преобразовать каждый лист в узел с сглаженным путём. В конце этого практического занятия вы будете лучше понимать, как манипулировать объектами JavaScript и сглаживать их для более простой обработки данных.",
      "meta": {
        "title": "Сглаживание объекта JavaScript | Рекурсия и манипуляция объектами",
        "description": "Изучите, как сгладить сложные объекты JavaScript с использованием рекурсии и Object.keys(), комбинированных с Array.reduce(), для более простой обработки данных.",
        "keywords": "JavaScript, сглаживание объекта, рекурсия, Object.keys, Array.reduce"
      },
      "details": {
        "steps": [
          {
            "title": "Сглаживание объекта",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "Проверить историю команд Node",
                "file": "verify1-1.sh",
                "hint": "JavaScript можно запускать в Терминале/SSH, введя 'node' и нажав Enter."
              }
            ]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    },
    {
      "lang": "ko",
      "title": "JavaScript 객체 평탄화: 재귀 활용",
      "description": "이 랩에서는 키 경로를 사용하여 객체를 평탄화하는 JavaScript 함수를 살펴봅니다. 이 함수는 재귀와 Object.keys() 를 Array.prototype.reduce() 와 결합하여 모든 리프 노드를 평탄화된 경로 노드로 변환합니다. 이 랩을 통해 JavaScript 객체를 조작하고 더 쉬운 데이터 처리를 위해 평탄화하는 방법에 대한 이해를 높일 수 있습니다.",
      "meta": {
        "title": "JavaScript 객체 평탄화 | 재귀 및 객체 조작",
        "description": "더 쉬운 데이터 처리를 위해 재귀와 Object.keys() 를 Array.reduce() 와 결합하여 복잡한 JavaScript 객체를 평탄화하는 방법을 알아보세요.",
        "keywords": "JavaScript, 객체 평탄화, 재귀, Object.keys, Array.reduce, 자바스크립트 객체 평탄화"
      },
      "details": {
        "steps": [
          {
            "title": "객체 평탄화",
            "text": "ko/step1.md",
            "verify": [
              {
                "name": "노드 명령어 히스토리 확인",
                "file": "verify1-1.sh",
                "hint": "터미널/SSH 에서 'node'를 입력하고 Enter 키를 눌러 JavaScript 를 실행할 수 있습니다."
              }
            ]
          }
        ],
        "intro": {
          "text": "ko/intro.md",
          "title": "소개"
        },
        "finish": {
          "text": "ko/finish.md",
          "title": "요약"
        }
      }
    },
    {
      "lang": "pt",
      "title": "Achatando Objetos JavaScript com Recursão",
      "description": "Neste laboratório, exploraremos uma função JavaScript que achata um objeto com os caminhos para as chaves. A função utiliza recursão e Object.keys() combinado com Array.prototype.reduce() para converter cada nó folha em um nó de caminho achatado. Ao final deste laboratório, você terá uma melhor compreensão de como manipular objetos JavaScript e achatá-los para facilitar o processamento de dados.",
      "meta": {
        "title": "Achatamento de Objetos JavaScript | Recursão e Manipulação de Objetos",
        "description": "Aprenda como achatar objetos JavaScript complexos usando recursão e Object.keys() combinado com Array.reduce() para facilitar o processamento de dados. Domine a técnica de achatar objetos em JavaScript para otimizar seus projetos.",
        "keywords": "JavaScript, achatamento de objetos, recursão, Object.keys, Array.reduce, achatar objeto javascript"
      },
      "details": {
        "steps": [
          {
            "title": "Achatando Objeto",
            "text": "pt/step1.md",
            "verify": [
              {
                "name": "Verificar Histórico de Comandos do Node",
                "file": "verify1-1.sh",
                "hint": "JavaScript pode ser executado no Terminal/SSH digitando 'node' e pressionando Enter."
              }
            ]
          }
        ],
        "intro": {
          "text": "pt/intro.md",
          "title": "Introdução"
        },
        "finish": {
          "text": "pt/finish.md",
          "title": "Resumo"
        }
      }
    }
  ]
}
