{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Flatten JavaScript Object with Recursion",
  "description": "In this lab, we will explore a JavaScript function that flattens an object with the paths for keys. The function uses recursion and Object.keys() combined with Array.prototype.reduce() to convert every leaf node to a flattened path node. By the end of this lab, you will have a better understanding of how to manipulate JavaScript objects and flatten them for easier data processing.",
  "meta": {
    "title": "JavaScript Object Flattening | Recursion and Object Manipulation",
    "description": "Learn how to flatten complex JavaScript objects using recursion and Object.keys() combined with Array.reduce() for easier data processing.",
    "keywords": "JavaScript, object flattening, recursion, Object.keys, Array.reduce"
  },
  "difficulty": "Beginner",
  "time": 10,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Flatten Object",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify Node Command History",
            "file": "verify1-1.sh",
            "hint": "JavaScript can be run in the Terminal/SSH by typing 'node' and pressing Enter.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "javascript/arith_ops",
          "javascript/array_methods",
          "javascript/comp_ops",
          "javascript/cond_stmts",
          "javascript/data_types",
          "javascript/destr_assign",
          "javascript/higher_funcs",
          "javascript/template_lit",
          "javascript/variables"
        ]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["Lotus-7"],
  "license": {
    "name": "CC-BY-4.0",
    "url": "https://github.com/30-seconds/30-seconds-of-code/blob/master/LICENSE",
    "repo": "https://github.com/30-seconds/30-seconds-of-code"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "使用递归扁平化JavaScript对象",
      "description": "在本实验中，我们将探索一个JavaScript函数，该函数会使用键的路径来扁平化一个对象。该函数使用递归以及Object.keys()并结合Array.prototype.reduce()，将每个叶节点转换为扁平化路径节点。完成本实验后，你将更好地理解如何操作JavaScript对象并将其扁平化，以便更轻松地进行数据处理。",
      "meta": {
        "title": "JavaScript对象扁平化 | 递归与对象操作",
        "description": "学习如何使用递归以及Object.keys()并结合Array.reduce()来扁平化复杂的JavaScript对象，以便更轻松地进行数据处理。",
        "keywords": "JavaScript, 对象扁平化, 递归, Object.keys, Array.reduce"
      },
      "details": {
        "steps": [
          {
            "title": "扁平化对象",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "验证Node命令历史记录",
                "file": "verify1-1.sh",
                "hint": "在终端/SSH中，通过输入'node'并按回车键可以运行JavaScript。"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    }
  ]
}
