{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Generating UUID in Node.js",
  "description": "In this lab, we will learn how to generate a UUID in Node.js. UUIDs are unique identifiers that are commonly used in distributed systems to uniquely identify entities without requiring centralized coordination. We will use the crypto module in Node.js to generate a UUID that is compliant with RFC4122 version 4.",
  "meta": {
    "title": "Generating Unique IDs in Node.js",
    "description": "Learn how to generate UUIDs in Node.js using the built-in crypto module and create unique identifiers for your distributed systems.",
    "keywords": "javascript, node js, javascript practice, crypto, unique identifier, javascript practice online, javascript playground, javascript lab, uuid, distributed systems"
  },
  "difficulty": "Beginner",
  "time": 10,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Generate UUID (Node.js)",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify Node Commands In Zsh History",
            "file": "verify1-1.sh",
            "hint": "JavaScript can be run in the Terminal/SSH by typing 'node' and pressing Enter.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "javascript/arith_ops",
          "javascript/comp_ops",
          "javascript/data_types",
          "javascript/variables"
        ]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["Lotus-7"],
  "license": {
    "name": "CC-BY-4.0",
    "url": "https://github.com/30-seconds/30-seconds-of-code/blob/master/LICENSE",
    "repo": "https://github.com/30-seconds/30-seconds-of-code"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "在 Node.js 中生成 UUID",
      "description": "在本实验中，我们将学习如何在 Node.js 中生成 UUID。UUID 是唯一标识符，常用于分布式系统中，无需集中协调即可唯一标识实体。我们将使用 Node.js 中的 crypto 模块来生成符合 RFC4122 第 4 版的 UUID。",
      "meta": {
        "title": "在 Node.js 中生成唯一 ID",
        "description": "学习如何使用 Node.js 中的内置 crypto 模块生成 UUID，并为你的分布式系统创建唯一标识符。",
        "keywords": "JavaScript, Node.js, JavaScript 实践，crypto, 唯一标识符，在线 JavaScript 实践，JavaScript 游乐场，JavaScript 实验，UUID, 分布式系统"
      },
      "details": {
        "steps": [
          {
            "title": "生成 UUID（Node.js）",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "在 Zsh 历史记录中验证 Node 命令",
                "file": "verify1-1.sh",
                "hint": "通过输入'node'并按 Enter 键，可以在终端/SSH 中运行 JavaScript。"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Generando UUID en Node.js",
      "description": "En este laboratorio, aprenderemos cómo generar un UUID en Node.js. Los UUID son identificadores únicos que se utilizan comúnmente en sistemas distribuidos para identificar de manera única entidades sin necesidad de coordinación centralizada. Utilizaremos el módulo crypto en Node.js para generar un UUID que sea compatible con la versión 4 de RFC4122.",
      "meta": {
        "title": "Generando IDs Únicos en Node.js",
        "description": "Aprende cómo generar UUIDs en Node.js utilizando el módulo crypto integrado y crea identificadores únicos para tus sistemas distribuidos.",
        "keywords": "javascript, node js, práctica de javascript, crypto, identificador único, práctica de javascript en línea, playground de javascript, laboratorio de javascript, uuid, sistemas distribuidos"
      },
      "details": {
        "steps": [
          {
            "title": "Generar UUID (Node.js)",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Verificar los comandos de Node en el historial de Zsh",
                "file": "verify1-1.sh",
                "hint": "Se puede ejecutar JavaScript en la Terminal/SSH escribiendo 'node' y presionando Enter."
              }
            ]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Générer un UUID en Node.js",
      "description": "Dans ce laboratoire, nous allons apprendre à générer un UUID en Node.js. Les UUID sont des identifiants uniques qui sont couramment utilisés dans les systèmes distribués pour identifier de manière unique des entités sans nécessiter de coordination centralisée. Nous allons utiliser le module crypto de Node.js pour générer un UUID conforme à la version 4 de la RFC4122.",
      "meta": {
        "title": "Générer des identifiants uniques en Node.js",
        "description": "Découvrez comment générer des UUID en Node.js à l'aide du module crypto intégré et créez des identifiants uniques pour vos systèmes distribués.",
        "keywords": "javascript, node js, pratique javascript, crypto, identifiant unique, pratique javascript en ligne, terrain de jeu javascript, laboratoire javascript, uuid, systèmes distribués"
      },
      "details": {
        "steps": [
          {
            "title": "Générer un UUID (Node.js)",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Vérifier les commandes Node dans l'historique Zsh",
                "file": "verify1-1.sh",
                "hint": "JavaScript peut être exécuté dans le Terminal/SSH en tapant 'node' et en appuyant sur Entrée."
              }
            ]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "UUIDs in Node.js generieren",
      "description": "In diesem Lab werden wir lernen, wie man in Node.js eine UUID generiert. UUIDs sind eindeutige Bezeichner, die in verteilten Systemen häufig verwendet werden, um Entitäten eindeutig zu identifizieren, ohne dass eine zentrale Koordination erforderlich ist. Wir werden das crypto-Modul in Node.js verwenden, um eine UUID zu generieren, die der RFC4122 Version 4 entspricht.",
      "meta": {
        "title": "Eindeutige IDs in Node.js generieren",
        "description": "Lernen Sie, wie Sie in Node.js UUIDs mit dem integrierten crypto-Modul generieren und eindeutige Bezeichner für Ihre verteilten Systeme erstellen.",
        "keywords": "javascript, node js, javascript Übung, crypto, eindeutiger Bezeichner, online javascript Übung, javascript Spielplatz, javascript Lab, uuid, verteilte Systeme"
      },
      "details": {
        "steps": [
          {
            "title": "UUID generieren (Node.js)",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Node-Befehle in der Zsh-Geschichte überprüfen",
                "file": "verify1-1.sh",
                "hint": "JavaScript kann im Terminal/SSH ausgeführt werden, indem man 'node' eingibt und die Enter-Taste drückt."
              }
            ]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "Node.js で UUID を生成する",
      "description": "この実験では、Node.js で UUID を生成する方法を学びます。UUID は、分散システムで一般的に使用される一意の識別子であり、集中的な調整を必要とせずにエンティティを一意に識別します。Node.js の crypto モジュールを使用して、RFC4122 バージョン 4 に準拠した UUID を生成します。",
      "meta": {
        "title": "Node.js で一意の ID を生成する",
        "description": "Node.js で組み込みの crypto モジュールを使用して UUID を生成する方法を学び、分散システム用の一意の識別子を作成しましょう。",
        "keywords": "javascript, node js, javascript の練習，crypto, 一意の識別子，オンラインでの javascript の練習，javascript の遊び場，javascript の実験，uuid, 分散システム"
      },
      "details": {
        "steps": [
          {
            "title": "UUID を生成する（Node.js）",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "Zsh 履歴における Node コマンドを確認する",
                "file": "verify1-1.sh",
                "hint": "ターミナル/SSH で 'node' と入力して Enter キーを押すことで、JavaScript を実行できます。"
              }
            ]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Генерация UUID в Node.js",
      "description": "В этом практическом занятии мы узнаем, как генерировать UUID в Node.js. UUID - это уникальные идентификаторы, которые широко используются в распределенных системах для уникального идентификации сущностей без необходимости централизованной координации. Мы будем использовать модуль crypto в Node.js для генерации UUID, соответствующего стандарту RFC4122 версии 4.",
      "meta": {
        "title": "Генерация уникальных идентификаторов в Node.js",
        "description": "Изучите, как генерировать UUID в Node.js с использованием встроенного модуля crypto и создавать уникальные идентификаторы для ваших распределенных систем.",
        "keywords": "javascript, node js, практика javascript, crypto, уникальный идентификатор, онлайн практика javascript, javascript playground, javascript практическое занятие, uuid, распределенные системы"
      },
      "details": {
        "steps": [
          {
            "title": "Генерация UUID (Node.js)",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "Проверить команды Node в истории Zsh",
                "file": "verify1-1.sh",
                "hint": "JavaScript можно запустить в Терминале/SSH, введя 'node' и нажав Enter."
              }
            ]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    }
  ]
}
