{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Generating Powerset with JavaScript",
  "description": "In this lab, we will explore the concept of powerset in JavaScript. You will learn how to create a function that generates all possible combinations of a given array of numbers, including the empty set. By using the Array.prototype.reduce() and Array.prototype.map() methods, you will be able to create a powerful tool that can be used in various scenarios. Join us in this lab to enhance your JavaScript skills and become more proficient in solving complex problems.",
  "meta": {
    "title": "Powerset Generation | JavaScript Coding Lab",
    "description": "Explore the concept of powerset in JavaScript. Learn how to create a function that generates all possible combinations of a given array of numbers.",
    "keywords": "JavaScript, Powerset, Array Manipulation, Coding Lab, Problem Solving"
  },
  "difficulty": "Beginner",
  "time": 5,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Powerset",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify Node Commands History",
            "file": "verify1-1.sh",
            "hint": "JavaScript can be run in the Terminal/SSH by typing 'node' and pressing Enter.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": []
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["Lotus-7"],
  "license": {
    "name": "CC-BY-4.0",
    "url": "https://github.com/30-seconds/30-seconds-of-code/blob/master/LICENSE",
    "repo": "https://github.com/30-seconds/30-seconds-of-code"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "使用 JavaScript 生成幂集",
      "description": "在这个实验中，我们将探索 JavaScript 中幂集的概念。你将学习如何创建一个函数，该函数生成给定数字数组的所有可能组合，包括空集。通过使用 Array.prototype.reduce() 和 Array.prototype.map() 方法，你将能够创建一个强大的工具，可用于各种场景。加入我们这个实验，提升你的 JavaScript 技能，更熟练地解决复杂问题。",
      "meta": {
        "title": "幂集生成 | JavaScript 编码实验",
        "description": "探索 JavaScript 中幂集的概念。学习如何创建一个函数，该函数生成给定数字数组的所有可能组合。",
        "keywords": "JavaScript, 幂集，数组操作，编码实验，问题解决"
      },
      "details": {
        "steps": [
          {
            "title": "幂集",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "验证 Node 命令历史记录",
                "file": "verify1-1.sh",
                "hint": "在终端/SSH 中，通过输入'node'并按回车键可以运行 JavaScript。"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Generando el Conjunto Potencia con JavaScript",
      "description": "En este laboratorio, exploraremos el concepto de conjunto potencia en JavaScript. Aprenderás cómo crear una función que genere todas las combinaciones posibles de una matriz dada de números, incluyendo el conjunto vacío. Al utilizar los métodos Array.prototype.reduce() y Array.prototype.map(), podrás crear una herramienta poderosa que se puede utilizar en varios escenarios. Únete a nosotros en este laboratorio para mejorar tus habilidades de JavaScript y ser más hábil en la resolución de problemas complejos.",
      "meta": {
        "title": "Generación de Conjunto Potencia | Laboratorio de Codificación de JavaScript",
        "description": "Explora el concepto de conjunto potencia en JavaScript. Aprende cómo crear una función que genere todas las combinaciones posibles de una matriz dada de números.",
        "keywords": "JavaScript, Conjunto Potencia, Manipulación de Arrays, Laboratorio de Codificación, Resolución de Problemas"
      },
      "details": {
        "steps": [
          {
            "title": "Conjunto Potencia",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Verificar el historial de comandos de Node",
                "file": "verify1-1.sh",
                "hint": "JavaScript se puede ejecutar en la Terminal/SSH escribiendo 'node' y presionando Enter."
              }
            ]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Générer la puissance d'un ensemble avec JavaScript",
      "description": "Dans ce laboratoire, nous allons explorer le concept de puissance d'un ensemble en JavaScript. Vous allez apprendre à créer une fonction qui génère toutes les combinaisons possibles d'un tableau donné de nombres, y compris l'ensemble vide. En utilisant les méthodes Array.prototype.reduce() et Array.prototype.map(), vous serez capable de créer un outil puissant qui peut être utilisé dans diverses situations. Rejoignez-nous dans ce laboratoire pour améliorer vos compétences en JavaScript et devenir plus compétent dans la résolution de problèmes complexes.",
      "meta": {
        "title": "Génération de la puissance d'un ensemble | Laboratoire de codage JavaScript",
        "description": "Explorez le concept de puissance d'un ensemble en JavaScript. Apprenez à créer une fonction qui génère toutes les combinaisons possibles d'un tableau donné de nombres.",
        "keywords": "JavaScript, Puissance d'un ensemble, Manipulation de tableaux, Laboratoire de codage, Résolution de problèmes"
      },
      "details": {
        "steps": [
          {
            "title": "Puissance d'un ensemble",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Vérifier l'historique des commandes Node",
                "file": "verify1-1.sh",
                "hint": "JavaScript peut être exécuté dans le Terminal/SSH en tapant 'node' et en appuyant sur Entrée."
              }
            ]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Das Generieren von Potenzmengen mit JavaScript",
      "description": "In diesem Lab werden wir das Konzept der Potenzmenge in JavaScript erkunden. Sie werden lernen, wie Sie eine Funktion erstellen, die alle möglichen Kombinationen eines gegebenen Arrays von Zahlen generiert, einschließlich der leeren Menge. Mit Hilfe der Methoden Array.prototype.reduce() und Array.prototype.map() können Sie ein leistungsstarkes Tool erstellen, das in verschiedenen Szenarien eingesetzt werden kann. Machen Sie mit uns in diesem Lab mit, um Ihre JavaScript-Fähigkeiten zu verbessern und sich bei der Lösung komplexer Probleme zu qualifizieren.",
      "meta": {
        "title": "Potenzmengenerierung | JavaScript-Coding-Lab",
        "description": "Erkunden Sie das Konzept der Potenzmenge in JavaScript. Lernen Sie, wie Sie eine Funktion erstellen, die alle möglichen Kombinationen eines gegebenen Arrays von Zahlen generiert.",
        "keywords": "JavaScript, Potenzmenge, Array-Manipulation, Coding-Lab, Problemlösung"
      },
      "details": {
        "steps": [
          {
            "title": "Potenzmenge",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Verifizieren Sie die Node-Befehlsgeschichte",
                "file": "verify1-1.sh",
                "hint": "JavaScript kann im Terminal/SSH ausgeführt werden, indem Sie 'node' eingeben und die Eingabetaste drücken."
              }
            ]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "JavaScript でパワーセットを生成する",
      "description": "この実験では、JavaScript におけるパワーセットの概念を探ります。与えられた数値の配列のすべての可能な組み合わせ、空集合を含めて生成する関数を作成する方法を学びます。`Array.prototype.reduce()` と `Array.prototype.map()` メソッドを使用することで、さまざまなシナリオで使用できる強力なツールを作成できます。この実験に参加して、JavaScript のスキルを向上させ、複雑な問題を解決する際の熟練度を高めましょう。",
      "meta": {
        "title": "パワーセット生成 | JavaScript コーディング実験",
        "description": "JavaScript におけるパワーセットの概念を探る。与えられた数値の配列のすべての可能な組み合わせを生成する関数を作成する方法を学ぶ。",
        "keywords": "JavaScript, パワーセット，配列操作，コーディング実験，問題解決"
      },
      "details": {
        "steps": [
          {
            "title": "パワーセット",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "Node コマンド履歴を確認する",
                "file": "verify1-1.sh",
                "hint": "ターミナル/SSH で 'node' と入力して Enter キーを押すことで、JavaScript を実行できます。"
              }
            ]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Генерация powerset с использованием JavaScript",
      "description": "В этом практическом занятии мы изучим концепцию powerset в JavaScript. Вы научитесь создавать функцию, которая генерирует все возможные комбинации заданного массива чисел, включая пустое множество. Используя методы Array.prototype.reduce() и Array.prototype.map(), вы сможете создать мощный инструмент, который можно использовать в различных сценариях. Присоединяйтесь к нам в этом практическом занятии, чтобы повысить свои навыки в JavaScript и стать более компетентным в решении сложных задач.",
      "meta": {
        "title": "Генерация powerset | Практическое занятие по JavaScript",
        "description": "Изучите концепцию powerset в JavaScript. Найдите, как создать функцию, которая генерирует все возможные комбинации заданного массива чисел.",
        "keywords": "JavaScript, Powerset, Обработка массивов, Практическое занятие по программированию, Решение задач"
      },
      "details": {
        "steps": [
          {
            "title": "Powerset",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "Проверить историю команд Node",
                "file": "verify1-1.sh",
                "hint": "JavaScript можно запустить в Терминале/SSH, введя 'node' и нажав Enter."
              }
            ]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    },
    {
      "lang": "ko",
      "title": "JavaScript 를 이용한 Powerset 생성",
      "description": "이 랩에서는 JavaScript 에서 powerset 의 개념을 탐구합니다. 빈 집합을 포함하여 주어진 숫자 배열의 모든 가능한 조합을 생성하는 함수를 만드는 방법을 배우게 됩니다. Array.prototype.reduce() 및 Array.prototype.map() 메서드를 사용하여 다양한 시나리오에서 사용할 수 있는 강력한 도구를 만들 수 있습니다. 이 랩에 참여하여 JavaScript 기술을 향상시키고 복잡한 문제를 해결하는 데 더 능숙해지세요.",
      "meta": {
        "title": "Powerset 생성 | JavaScript 코딩 랩",
        "description": "JavaScript 에서 powerset 의 개념을 탐구하세요. 주어진 숫자 배열의 모든 가능한 조합을 생성하는 함수를 만드는 방법을 배우세요.",
        "keywords": "JavaScript, Powerset, 배열 조작, 코딩 랩, 문제 해결, 자바스크립트 powerset, powerset 구현, 자바스크립트 조합"
      },
      "details": {
        "steps": [
          {
            "title": "Powerset",
            "text": "ko/step1.md",
            "verify": [
              {
                "name": "Node 명령어 히스토리 확인",
                "file": "verify1-1.sh",
                "hint": "JavaScript 는 터미널/SSH 에서 'node'를 입력하고 Enter 키를 눌러 실행할 수 있습니다."
              }
            ]
          }
        ],
        "intro": {
          "text": "ko/intro.md",
          "title": "소개"
        },
        "finish": {
          "text": "ko/finish.md",
          "title": "요약"
        }
      }
    },
    {
      "lang": "pt",
      "title": "Gerando o Powerset com JavaScript",
      "description": "Neste laboratório, exploraremos o conceito de powerset (conjunto das partes) em JavaScript. Você aprenderá como criar uma função que gera todas as combinações possíveis de um array de números fornecido, incluindo o conjunto vazio. Ao usar os métodos Array.prototype.reduce() e Array.prototype.map(), você poderá criar uma ferramenta poderosa que pode ser usada em vários cenários. Junte-se a nós neste laboratório para aprimorar suas habilidades em JavaScript e se tornar mais proficiente na resolução de problemas complexos.",
      "meta": {
        "title": "Geração de Powerset | Laboratório de Codificação JavaScript",
        "description": "Explore o conceito de powerset em JavaScript. Aprenda como criar uma função que gera todas as combinações possíveis de um array de números.",
        "keywords": "JavaScript, Powerset, Manipulação de Arrays, Laboratório de Codificação, Resolução de Problemas"
      },
      "details": {
        "steps": [
          {
            "title": "Powerset",
            "text": "pt/step1.md",
            "verify": [
              {
                "name": "Verificar Histórico de Comandos Node",
                "file": "verify1-1.sh",
                "hint": "JavaScript pode ser executado no Terminal/SSH digitando 'node' e pressionando Enter."
              }
            ]
          }
        ],
        "intro": {
          "text": "pt/intro.md",
          "title": "Introdução"
        },
        "finish": {
          "text": "pt/finish.md",
          "title": "Resumo"
        }
      }
    }
  ]
}
