{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Generating Powerset with JavaScript",
  "description": "In this lab, we will explore the concept of powerset in JavaScript. You will learn how to create a function that generates all possible combinations of a given array of numbers, including the empty set. By using the Array.prototype.reduce() and Array.prototype.map() methods, you will be able to create a powerful tool that can be used in various scenarios. Join us in this lab to enhance your JavaScript skills and become more proficient in solving complex problems.",
  "meta": {
    "title": "Powerset Generation | JavaScript Coding Lab",
    "description": "Explore the concept of powerset in JavaScript. Learn how to create a function that generates all possible combinations of a given array of numbers.",
    "keywords": "JavaScript, Powerset, Array Manipulation, Coding Lab, Problem Solving"
  },
  "difficulty": "Beginner",
  "time": 10,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Powerset",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify Node Commands History",
            "file": "verify1-1.sh",
            "hint": "JavaScript can be run in the Terminal/SSH by typing 'node' and pressing Enter.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "javascript/arith_ops",
          "javascript/comp_ops",
          "javascript/data_types",
          "javascript/higher_funcs",
          "javascript/variables"
        ]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["Lotus-7"],
  "license": {
    "name": "CC-BY-4.0",
    "url": "https://github.com/30-seconds/30-seconds-of-code/blob/master/LICENSE",
    "repo": "https://github.com/30-seconds/30-seconds-of-code"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "使用JavaScript生成幂集",
      "description": "在这个实验中，我们将探索JavaScript中幂集的概念。你将学习如何创建一个函数，该函数生成给定数字数组的所有可能组合，包括空集。通过使用Array.prototype.reduce()和Array.prototype.map()方法，你将能够创建一个强大的工具，可用于各种场景。加入我们这个实验，提升你的JavaScript技能，更熟练地解决复杂问题。",
      "meta": {
        "title": "幂集生成 | JavaScript编码实验",
        "description": "探索JavaScript中幂集的概念。学习如何创建一个函数，该函数生成给定数字数组的所有可能组合。",
        "keywords": "JavaScript, 幂集, 数组操作, 编码实验, 问题解决"
      },
      "details": {
        "steps": [
          {
            "title": "幂集",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "验证Node命令历史记录",
                "file": "verify1-1.sh",
                "hint": "在终端/SSH中，通过输入'node'并按回车键可以运行JavaScript。"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    }
  ]
}
