{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Most Performant Function",
  "description": "In this lab, we will explore and practice how to write a performant function that returns the index of the fastest executing function from an array of functions. The lab focuses on using performance.now() and Array.prototype.map() to measure the execution time of functions accurately and compare them. By the end of the lab, you will have a better understanding of how to optimize your code for maximum performance.",
  "meta": {
    "title": "Discover the Most Performant Function in JavaScript",
    "description": "Learn how to write a performant function that returns the index of the fastest executing function from an array of functions.",
    "keywords": "javascript, javascript practice, execution time, javascript practice online, javascript lab, optimization, performance, function, javascript tutor"
  },
  "difficulty": "Beginner",
  "time": 10,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Most Performant Function",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify Node Command Usage",
            "file": "verify1-1.sh",
            "hint": "JavaScript can be run in the Terminal/SSH by typing 'node' and pressing Enter.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "javascript/arith_ops",
          "javascript/comp_ops",
          "javascript/data_types",
          "javascript/higher_funcs",
          "javascript/loops",
          "javascript/spread_rest",
          "javascript/variables"
        ]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["Lotus-7"],
  "license": {
    "name": "CC-BY-4.0",
    "url": "https://github.com/30-seconds/30-seconds-of-code/blob/master/LICENSE",
    "repo": "https://github.com/30-seconds/30-seconds-of-code"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "性能最佳的函数",
      "description": "在这个实验中，我们将探索并实践如何编写一个高性能函数，该函数从一个函数数组中返回执行速度最快的函数的索引。本实验重点在于使用performance.now()和Array.prototype.map()来准确测量函数的执行时间并进行比较。在实验结束时，你将对如何优化代码以实现最佳性能有更深入的理解。",
      "meta": {
        "title": "探索JavaScript中性能最佳的函数",
        "description": "学习如何编写一个高性能函数，该函数从一个函数数组中返回执行速度最快的函数的索引。",
        "keywords": "JavaScript, JavaScript实践, 执行时间, 在线JavaScript实践, JavaScript实验, 优化, 性能, 函数, JavaScript教程"
      },
      "details": {
        "steps": [
          {
            "title": "性能最佳的函数",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "验证Node命令的用法",
                "file": "verify1-1.sh",
                "hint": "在终端/SSH中，通过输入'node'并按下回车键，可以运行JavaScript。"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    }
  ]
}
