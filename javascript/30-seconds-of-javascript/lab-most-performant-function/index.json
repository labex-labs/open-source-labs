{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Most Performant Function",
  "description": "In this lab, we will explore and practice how to write a performant function that returns the index of the fastest executing function from an array of functions. The lab focuses on using performance.now() and Array.prototype.map() to measure the execution time of functions accurately and compare them. By the end of the lab, you will have a better understanding of how to optimize your code for maximum performance.",
  "meta": {
    "title": "Discover the Most Performant Function in JavaScript",
    "description": "Learn how to write a performant function that returns the index of the fastest executing function from an array of functions.",
    "keywords": "javascript, javascript practice, execution time, javascript practice online, javascript lab, optimization, performance, function, javascript tutor"
  },
  "difficulty": "Beginner",
  "time": 5,
  "hidden": true,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Most Performant Function",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify Node Command Usage",
            "file": "verify1-1.sh",
            "hint": "JavaScript can be run in the Terminal/SSH by typing 'node' and pressing Enter.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "javascript/arith_ops",
          "javascript/comp_ops",
          "javascript/data_types",
          "javascript/higher_funcs",
          "javascript/loops",
          "javascript/variables"
        ]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["Lotus-7"],
  "license": {
    "name": "CC-BY-4.0",
    "url": "https://github.com/30-seconds/30-seconds-of-code/blob/master/LICENSE",
    "repo": "https://github.com/30-seconds/30-seconds-of-code"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "性能最佳的函数",
      "description": "在这个实验中，我们将探索并实践如何编写一个高性能函数，该函数从一个函数数组中返回执行速度最快的函数的索引。本实验重点在于使用 performance.now() 和 Array.prototype.map() 来准确测量函数的执行时间并进行比较。在实验结束时，你将对如何优化代码以实现最佳性能有更深入的理解。",
      "meta": {
        "title": "探索 JavaScript 中性能最佳的函数",
        "description": "学习如何编写一个高性能函数，该函数从一个函数数组中返回执行速度最快的函数的索引。",
        "keywords": "JavaScript, JavaScript 实践，执行时间，在线 JavaScript 实践，JavaScript 实验，优化，性能，函数，JavaScript 教程"
      },
      "details": {
        "steps": [
          {
            "title": "性能最佳的函数",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "验证 Node 命令的用法",
                "file": "verify1-1.sh",
                "hint": "在终端/SSH 中，通过输入'node'并按下回车键，可以运行 JavaScript。"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Función más eficiente",
      "description": "En este laboratorio, exploraremos y practicaremos cómo escribir una función eficiente que devuelva el índice de la función que se ejecuta más rápidamente de una matriz de funciones. El laboratorio se centra en utilizar performance.now() y Array.prototype.map() para medir con precisión el tiempo de ejecución de las funciones y compararlas. Al final del laboratorio, tendrás una mejor comprensión de cómo optimizar tu código para obtener el mejor rendimiento.",
      "meta": {
        "title": "Descubre la función más eficiente en JavaScript",
        "description": "Aprende cómo escribir una función eficiente que devuelva el índice de la función que se ejecuta más rápidamente de una matriz de funciones.",
        "keywords": "javascript, práctica de javascript, tiempo de ejecución, práctica de javascript en línea, laboratorio de javascript, optimización, rendimiento, función, tutor de javascript"
      },
      "details": {
        "steps": [
          {
            "title": "Función más eficiente",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Verificar el uso del comando Node",
                "file": "verify1-1.sh",
                "hint": "JavaScript se puede ejecutar en la Terminal/SSH escribiendo 'node' y presionando Enter."
              }
            ]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Fonction la plus performante",
      "description": "Dans ce laboratoire, nous allons explorer et pratiquer la manière d'écrire une fonction performante qui renvoie l'index de la fonction s'exécutant le plus rapidement à partir d'un tableau de fonctions. Le laboratoire se concentre sur l'utilisation de performance.now() et de Array.prototype.map() pour mesurer précisément le temps d'exécution des fonctions et les comparer. À la fin du laboratoire, vous aurez une meilleure compréhension de la manière d'optimiser votre code pour obtenir les meilleures performances.",
      "meta": {
        "title": "Découvrez la fonction la plus performante en JavaScript",
        "description": "Apprenez à écrire une fonction performante qui renvoie l'index de la fonction s'exécutant le plus rapidement à partir d'un tableau de fonctions.",
        "keywords": "javascript, pratique javascript, temps d'exécution, pratique javascript en ligne, laboratoire javascript, optimisation, performance, fonction, tuteur javascript"
      },
      "details": {
        "steps": [
          {
            "title": "Fonction la plus performante",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Vérifiez l'utilisation de la commande Node",
                "file": "verify1-1.sh",
                "hint": "JavaScript peut être exécuté dans le Terminal/SSH en tapant 'node' et en appuyant sur Entrée."
              }
            ]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Die leistungsfähigste Funktion",
      "description": "In diesem Lab werden wir untersuchen und üben, wie man eine leistungsfähige Funktion schreibt, die den Index der am schnellsten ausführenden Funktion aus einem Array von Funktionen zurückgibt. Das Lab konzentriert sich auf die Verwendung von performance.now() und Array.prototype.map() zur genauen Messung der Ausführungszeit von Funktionen und zum Vergleich dieser. Am Ende des Labs werden Sie ein besseres Verständnis dafür haben, wie Sie Ihren Code für die maximale Leistung optimieren können.",
      "meta": {
        "title": "Entdecken Sie die leistungsfähigste Funktion in JavaScript",
        "description": "Lernen Sie, wie man eine leistungsfähige Funktion schreibt, die den Index der am schnellsten ausführenden Funktion aus einem Array von Funktionen zurückgibt.",
        "keywords": "javascript, javascript Übung, Ausführungszeit, Online-JavaScript-Übung, JavaScript-Lab, Optimierung, Leistung, Funktion, JavaScript-Tutor"
      },
      "details": {
        "steps": [
          {
            "title": "Die leistungsfähigste Funktion",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Überprüfen der Verwendung des Node-Befehls",
                "file": "verify1-1.sh",
                "hint": "JavaScript kann im Terminal/SSH ausgeführt werden, indem man 'node' eingibt und die Enter-Taste drückt."
              }
            ]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "最も高性能な関数",
      "description": "この実験では、関数の配列から最も高速に実行される関数のインデックスを返す高性能な関数を書く方法を探求し、練習します。この実験では、performance.now() と Array.prototype.map() を使用して関数の実行時間を正確に測定し、比較することに焦点が当てられています。実験が終了するまでに、コードを最大限のパフォーマンスに最適化する方法をより深く理解するようになります。",
      "meta": {
        "title": "JavaScript で最も高性能な関数を見つける",
        "description": "関数の配列から最も高速に実行される関数のインデックスを返す高性能な関数を書く方法を学びましょう。",
        "keywords": "javascript, javascript 練習，実行時間，オンライン javascript 練習，javascript 実験，最適化，パフォーマンス，関数，javascript 講師"
      },
      "details": {
        "steps": [
          {
            "title": "最も高性能な関数",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "Node コマンドの使用を確認する",
                "file": "verify1-1.sh",
                "hint": "ターミナル/SSH で 'node' と入力して Enter キーを押すことで、JavaScript を実行できます。"
              }
            ]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Самая производительная функция",
      "description": "В этой лабораторной работе мы будем исследовать и практиковать, как писать производительную функцию, которая возвращает индекс самой быстрой исполняющейся функции из массива функций. Лабораторная работа сосредоточена на использовании performance.now() и Array.prototype.map() для точного измерения времени выполнения функций и их сравнения. В конце лабораторной работы вы будете лучше понимать, как оптимизировать свой код для максимальной производительности.",
      "meta": {
        "title": "Откройте самую производительную функцию в JavaScript",
        "description": "Изучите, как написать производительную функцию, которая возвращает индекс самой быстрой исполняющейся функции из массива функций.",
        "keywords": "javascript, практика javascript, время выполнения, онлайн практика javascript, лабораторная работа javascript, оптимизация, производительность, функция, преподаватель javascript"
      },
      "details": {
        "steps": [
          {
            "title": "Самая производительная функция",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "Проверить использование команды Node",
                "file": "verify1-1.sh",
                "hint": "JavaScript можно запустить в Терминале/SSH, введя 'node' и нажав Enter."
              }
            ]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    },
    {
      "lang": "ko",
      "title": "가장 성능 좋은 함수",
      "description": "이 랩에서는 함수 배열에서 가장 빠르게 실행되는 함수의 인덱스를 반환하는 성능 좋은 함수를 작성하는 방법을 탐구하고 연습합니다. 이 랩은 performance.now() 와 Array.prototype.map() 을 사용하여 함수의 실행 시간을 정확하게 측정하고 비교하는 데 중점을 둡니다. 랩을 마치면 최대 성능을 위해 코드를 최적화하는 방법에 대한 이해도가 높아질 것입니다.",
      "meta": {
        "title": "JavaScript 에서 가장 성능 좋은 함수 찾기",
        "description": "함수 배열에서 가장 빠르게 실행되는 함수의 인덱스를 반환하는 성능 좋은 함수를 작성하는 방법을 알아보세요.",
        "keywords": "javascript, 자바스크립트 연습, 실행 시간, 자바스크립트 온라인 연습, 자바스크립트 랩, 최적화, 성능, 함수, 자바스크립트 튜터"
      },
      "details": {
        "steps": [
          {
            "title": "가장 성능 좋은 함수",
            "text": "ko/step1.md",
            "verify": [
              {
                "name": "Node 명령어 사용 확인",
                "file": "verify1-1.sh",
                "hint": "터미널/SSH 에서 'node'를 입력하고 Enter 키를 눌러 JavaScript 를 실행할 수 있습니다."
              }
            ]
          }
        ],
        "intro": {
          "text": "ko/intro.md",
          "title": "소개"
        },
        "finish": {
          "text": "ko/finish.md",
          "title": "요약"
        }
      }
    },
    {
      "lang": "pt",
      "title": "Função Mais Performática",
      "description": "Neste laboratório, exploraremos e praticaremos como escrever uma função performática que retorna o índice da função de execução mais rápida a partir de um array de funções. O laboratório se concentra em usar performance.now() e Array.prototype.map() para medir o tempo de execução das funções com precisão e compará-las. Ao final do laboratório, você terá uma melhor compreensão de como otimizar seu código para o máximo desempenho.",
      "meta": {
        "title": "Descubra a Função Mais Performática em JavaScript",
        "description": "Aprenda a escrever uma função performática que retorna o índice da função de execução mais rápida a partir de um array de funções. Otimize seu código JavaScript para máximo desempenho.",
        "keywords": "javascript, prática javascript, tempo de execução, prática javascript online, laboratório javascript, otimização, desempenho, função, tutorial javascript"
      },
      "details": {
        "steps": [
          {
            "title": "Função Mais Performática",
            "text": "pt/step1.md",
            "verify": [
              {
                "name": "Verificar Uso do Comando Node",
                "file": "verify1-1.sh",
                "hint": "JavaScript pode ser executado no Terminal/SSH digitando 'node' e pressionando Enter."
              }
            ]
          }
        ],
        "intro": {
          "text": "pt/intro.md",
          "title": "Introdução"
        },
        "finish": {
          "text": "pt/finish.md",
          "title": "Resumo"
        }
      }
    }
  ]
}
