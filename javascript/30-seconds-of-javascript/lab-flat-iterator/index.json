{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Flattening Nested Data Structures with JavaScript Iterators",
  "description": "In this lab, we will be exploring the concept of iterators and generators in JavaScript. Specifically, we will be focusing on creating a flat iterator that can iterate over nested arrays and sets, and flatten them into a single iterable. This will allow us to efficiently access and manipulate nested data structures in a more streamlined manner. By the end of the lab, you will have a deeper understanding of how generators and iterators work, and how they can be applied to solve real-world problems.",
  "meta": {
    "title": "Mastering JavaScript Iterators and Generators | Nested Data Structures",
    "description": "Explore the power of iterators and generators in JavaScript. Learn to create a flat iterator that can efficiently navigate and flatten nested arrays and sets.",
    "keywords": "JavaScript, Iterators, Generators, Nested Data Structures, Flattening, Programming Tutorials"
  },
  "difficulty": "Beginner",
  "time": 5,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Flat Iterator",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify Node Command History",
            "file": "verify1-1.sh",
            "hint": "JavaScript can be run in the Terminal/SSH by typing 'node' and pressing Enter.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "javascript/arith_ops",
          "javascript/cond_stmts",
          "javascript/data_types",
          "javascript/loops",
          "javascript/spread_rest",
          "javascript/variables"
        ]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["Lotus-7"],
  "license": {
    "name": "CC-BY-4.0",
    "url": "https://github.com/30-seconds/30-seconds-of-code/blob/master/LICENSE",
    "repo": "https://github.com/30-seconds/30-seconds-of-code"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "使用 JavaScript 迭代器展平嵌套数据结构",
      "description": "在本实验中，我们将探索 JavaScript 中的迭代器和生成器概念。具体来说，我们将专注于创建一个扁平迭代器，它可以遍历嵌套数组和集合，并将它们展平为单个可迭代对象。这将使我们能够以更简化的方式高效地访问和操作嵌套数据结构。在实验结束时，你将对生成器和迭代器的工作原理以及它们如何应用于解决实际问题有更深入的理解。",
      "meta": {
        "title": "掌握 JavaScript 迭代器和生成器 | 嵌套数据结构",
        "description": "探索 JavaScript 中迭代器和生成器的强大功能。学习创建一个扁平迭代器，它可以有效地遍历和展平嵌套数组和集合。",
        "keywords": "JavaScript, 迭代器，生成器，嵌套数据结构，展平，编程教程"
      },
      "details": {
        "steps": [
          {
            "title": "扁平迭代器",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "验证 Node 命令历史记录",
                "file": "verify1-1.sh",
                "hint": "在终端/SSH 中，通过输入 'node' 并按下回车键可以运行 JavaScript。"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Aplanando estructuras de datos anidadas con iteradores de JavaScript",
      "description": "En este laboratorio, exploraremos el concepto de iteradores y generadores en JavaScript. En particular, nos centraremos en crear un iterador plano que pueda iterar sobre arrays y conjuntos anidados y aplanaarlos en un solo iterable. Esto nos permitirá acceder y manipular de manera eficiente estructuras de datos anidadas de manera más sencilla. Al final del laboratorio, tendrás una comprensión más profunda de cómo funcionan los generadores e iteradores y cómo se pueden aplicar para resolver problemas del mundo real.",
      "meta": {
        "title": "Dominando los iteradores y generadores de JavaScript | Estructuras de datos anidadas",
        "description": "Explora el poder de los iteradores y generadores en JavaScript. Aprende a crear un iterador plano que pueda navegar y aplanar eficientemente arrays y conjuntos anidados.",
        "keywords": "JavaScript, Iteradores, Generadores, Estructuras de datos anidadas, Aplanado, Tutoriales de programación"
      },
      "details": {
        "steps": [
          {
            "title": "Iterador plano",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Verificar el historial del comando de Node",
                "file": "verify1-1.sh",
                "hint": "JavaScript se puede ejecutar en la Terminal/SSH escribiendo 'node' y presionando Enter."
              }
            ]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Aplatir les structures de données imbriquées avec les itérateurs JavaScript",
      "description": "Dans ce laboratoire, nous allons explorer le concept d'itérateurs et de générateurs en JavaScript. Plus précisément, nous allons nous concentrer sur la création d'un itérateur plat qui peut itérer sur des tableaux et des ensembles imbriqués, et les aplatir en un seul itérable. Cela nous permettra d'accéder et de manipuler efficacement les structures de données imbriquées de manière plus fluide. À la fin du laboratoire, vous aurez une compréhension plus approfondie de la manière dont les générateurs et les itérateurs fonctionnent, et de la manière dont ils peuvent être appliqués pour résoudre des problèmes du monde réel.",
      "meta": {
        "title": "Maîtriser les itérateurs et les générateurs JavaScript | Structures de données imbriquées",
        "description": "Explorez le pouvoir des itérateurs et des générateurs en JavaScript. Apprenez à créer un itérateur plat qui peut naviguer et aplatir efficacement des tableaux et des ensembles imbriqués.",
        "keywords": "JavaScript, Itérateurs, Générateurs, Structures de données imbriquées, Aplatissement, Didacticiels de programmation"
      },
      "details": {
        "steps": [
          {
            "title": "Itérateur plat",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Vérifier l'historique de la commande Node",
                "file": "verify1-1.sh",
                "hint": "JavaScript peut être exécuté dans le Terminal/SSH en tapant 'node' et en appuyant sur Entrée."
              }
            ]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Das Entschachteln geschachtelter Datenstrukturen mit JavaScript-Iteratoren",
      "description": "In diesem Lab werden wir das Konzept von Iteratoren und Generatoren in JavaScript erkunden. Insbesondere werden wir uns auf die Erstellung eines flachen Iterators konzentrieren, der über geschachtelte Arrays und Mengen iterieren kann und sie in eine einzelne iterierbare Struktur zusammenflacht. Dies wird es uns ermöglichen, geschachtelte Datenstrukturen effizienter zuzugreifen und auf eine einfachere Weise zu manipulieren. Am Ende des Labs werden Sie ein tieferes Verständnis dafür haben, wie Generatoren und Iteratoren funktionieren und wie sie auf reale Probleme angewendet werden können.",
      "meta": {
        "title": "Meisterung von JavaScript-Iteratoren und -Generatoren | Geschachtelte Datenstrukturen",
        "description": "Entdecken Sie die Macht von Iteratoren und Generatoren in JavaScript. Lernen Sie, einen flachen Iterator zu erstellen, der effizient durch geschachtelte Arrays und Mengen navigieren und zusammenflachen kann.",
        "keywords": "JavaScript, Iteratoren, Generatoren, Geschachtelte Datenstrukturen, Entschachtelung, Programmier-Tutorials"
      },
      "details": {
        "steps": [
          {
            "title": "Flacher Iterator",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Verifizieren der Node-Befehlsgeschichte",
                "file": "verify1-1.sh",
                "hint": "JavaScript kann im Terminal/SSH ausgeführt werden, indem man 'node' eingibt und die Enter-Taste drückt."
              }
            ]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "JavaScript の反復子とジェネレータを使ったネストされたデータ構造のフラット化",
      "description": "この実験では、JavaScript における反復子とジェネレータの概念を探ります。具体的には、ネストされた配列やセットを反復処理し、それらを単一の反復可能オブジェクトにフラット化することができるフラットな反復子を作成することに焦点を当てます。これにより、よりスマートな方法でネストされたデータ構造に効率的にアクセスして操作することができます。実験が終了するまでに、ジェネレータと反復子がどのように機能するか、また現実の問題を解決するためにどのように適用できるかについて、より深い理解を得ることができるようになります。",
      "meta": {
        "title": "JavaScript の反復子とジェネレータをマスターする | ネストされたデータ構造",
        "description": "JavaScript における反復子とジェネレータの力を探求しましょう。ネストされた配列やセットを効率的にナビゲートしてフラット化するフラットな反復子を作成する方法を学びましょう。",
        "keywords": "JavaScript, 反復子，ジェネレータ，ネストされたデータ構造，フラット化，プログラミングチュートリアル"
      },
      "details": {
        "steps": [
          {
            "title": "フラットな反復子",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "Node コマンド履歴を確認する",
                "file": "verify1-1.sh",
                "hint": "ターミナル/SSH で 'node' と入力して Enter キーを押すことで、JavaScript を実行できます。"
              }
            ]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Раскрытие вложенных структур данных с использованием итераторов JavaScript",
      "description": "В этом практическом занятии мы будем изучать концепцию итераторов и генераторов в JavaScript. В частности, мы сосредоточимся на создании плоского итератора, который может проходить по вложенным массивам и множествам и сглаживать их в единый итерируемый объект. Это позволит нам эффективно получать доступ к и манипулировать вложенными структурами данных более упорядоченным способом. В конце практического занятия вы будете иметь более глубокое понимание того, как работают генераторы и итераторы, и как они могут быть применены для решения реальных задач.",
      "meta": {
        "title": "Мастерство в использовании итераторов и генераторов JavaScript | Вложенные структуры данных",
        "description": "Изучите мощь итераторов и генераторов в JavaScript. научитесь создавать плоский итератор, который может эффективно обходить и сглаживать вложенные массивы и множества.",
        "keywords": "JavaScript, Итераторы, Генераторы, Вложенные структуры данных, Сглаживание, Руководства по программированию"
      },
      "details": {
        "steps": [
          {
            "title": "Плоский итератор",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "Проверить историю команд Node",
                "file": "verify1-1.sh",
                "hint": "JavaScript можно запустить в Терминале/SSH, введя 'node' и нажав Enter."
              }
            ]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    }
  ]
}
