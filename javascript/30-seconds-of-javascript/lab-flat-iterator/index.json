{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Flattening Nested Data Structures with JavaScript Iterators",
  "description": "In this lab, we will be exploring the concept of iterators and generators in JavaScript. Specifically, we will be focusing on creating a flat iterator that can iterate over nested arrays and sets, and flatten them into a single iterable. This will allow us to efficiently access and manipulate nested data structures in a more streamlined manner. By the end of the lab, you will have a deeper understanding of how generators and iterators work, and how they can be applied to solve real-world problems.",
  "meta": {
    "title": "Mastering JavaScript Iterators and Generators | Nested Data Structures",
    "description": "Explore the power of iterators and generators in JavaScript. Learn to create a flat iterator that can efficiently navigate and flatten nested arrays and sets.",
    "keywords": "JavaScript, Iterators, Generators, Nested Data Structures, Flattening, Programming Tutorials"
  },
  "difficulty": "Beginner",
  "time": 10,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Flat Iterator",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify Node Command History",
            "file": "verify1-1.sh",
            "hint": "JavaScript can be run in the Terminal/SSH by typing 'node' and pressing Enter.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "javascript/arith_ops",
          "javascript/cond_stmts",
          "javascript/data_types",
          "javascript/loops",
          "javascript/spread_rest",
          "javascript/variables"
        ]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["Lotus-7"],
  "license": {
    "name": "CC-BY-4.0",
    "url": "https://github.com/30-seconds/30-seconds-of-code/blob/master/LICENSE",
    "repo": "https://github.com/30-seconds/30-seconds-of-code"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "使用 JavaScript 迭代器展平嵌套数据结构",
      "description": "在本实验中，我们将探索 JavaScript 中的迭代器和生成器概念。具体来说，我们将专注于创建一个扁平迭代器，它可以遍历嵌套数组和集合，并将它们展平为单个可迭代对象。这将使我们能够以更简化的方式高效地访问和操作嵌套数据结构。在实验结束时，你将对生成器和迭代器的工作原理以及它们如何应用于解决实际问题有更深入的理解。",
      "meta": {
        "title": "掌握 JavaScript 迭代器和生成器 | 嵌套数据结构",
        "description": "探索 JavaScript 中迭代器和生成器的强大功能。学习创建一个扁平迭代器，它可以有效地遍历和展平嵌套数组和集合。",
        "keywords": "JavaScript, 迭代器, 生成器, 嵌套数据结构, 展平, 编程教程"
      },
      "details": {
        "steps": [
          {
            "title": "扁平迭代器",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "验证 Node 命令历史记录",
                "file": "verify1-1.sh",
                "hint": "在终端/SSH 中，通过输入 'node' 并按下回车键可以运行 JavaScript。"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    }
  ]
}
