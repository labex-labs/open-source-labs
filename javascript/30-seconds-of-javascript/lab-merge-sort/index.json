{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Merge Sort in JavaScript",
  "description": "In this lab, we will be exploring the Merge Sort algorithm in JavaScript. Merge Sort is a popular divide-and-conquer sorting algorithm that is efficient and commonly used in practice. By the end of this lab, you will have a solid understanding of how Merge Sort works and how to implement it in your own JavaScript projects.",
  "meta": {
    "title": "Merge Sort Algorithm | JavaScript Coding Tutorial",
    "description": "Learn the Merge Sort algorithm and how to implement it in JavaScript. Explore a step-by-step guide to master this efficient divide-and-conquer sorting technique.",
    "keywords": "Merge Sort, JavaScript, Coding Tutorial, Sorting Algorithm, Divide-and-Conquer"
  },
  "difficulty": "Beginner",
  "time": 10,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Merge Sort",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify Node Commands Executed",
            "file": "verify1-1.sh",
            "hint": "JavaScript can be run in the Terminal/SSH by typing 'node' and pressing Enter.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "javascript/arith_ops",
          "javascript/array_methods",
          "javascript/comp_ops",
          "javascript/cond_stmts",
          "javascript/data_types",
          "javascript/variables"
        ]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["Lotus-7"],
  "license": {
    "name": "CC-BY-4.0",
    "url": "https://github.com/30-seconds/30-seconds-of-code/blob/master/LICENSE",
    "repo": "https://github.com/30-seconds/30-seconds-of-code"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "JavaScript 中的归并排序",
      "description": "在本实验中，我们将探索 JavaScript 中的归并排序算法。归并排序是一种流行的分治排序算法，高效且在实际中常用。完成本实验后，你将对归并排序的工作原理以及如何在自己的 JavaScript 项目中实现它有扎实的理解。",
      "meta": {
        "title": "归并排序算法 | JavaScript 编码教程",
        "description": "学习归并排序算法以及如何在 JavaScript 中实现它。探索逐步指南，掌握这种高效的分治排序技术。",
        "keywords": "归并排序, JavaScript, 编码教程, 排序算法, 分治"
      },
      "details": {
        "steps": [
          {
            "title": "归并排序",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "验证已执行的 Node 命令",
                "file": "verify1-1.sh",
                "hint": "在终端/SSH 中，通过输入 'node' 并按下回车键可以运行 JavaScript。"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    }
  ]
}
