{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Merge Sort in JavaScript",
  "description": "In this lab, we will be exploring the Merge Sort algorithm in JavaScript. Merge Sort is a popular divide-and-conquer sorting algorithm that is efficient and commonly used in practice. By the end of this lab, you will have a solid understanding of how Merge Sort works and how to implement it in your own JavaScript projects.",
  "meta": {
    "title": "Merge Sort Algorithm | JavaScript Coding Tutorial",
    "description": "Learn the Merge Sort algorithm and how to implement it in JavaScript. Explore a step-by-step guide to master this efficient divide-and-conquer sorting technique.",
    "keywords": "Merge Sort, JavaScript, Coding Tutorial, Sorting Algorithm, Divide-and-Conquer"
  },
  "difficulty": "Beginner",
  "time": 5,
  "hidden": true,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Merge Sort",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify Node Commands Executed",
            "file": "verify1-1.sh",
            "hint": "JavaScript can be run in the Terminal/SSH by typing 'node' and pressing Enter.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "javascript/arith_ops",
          "javascript/array_methods",
          "javascript/comp_ops",
          "javascript/cond_stmts",
          "javascript/data_types",
          "javascript/variables"
        ]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["Lotus-7"],
  "license": {
    "name": "CC-BY-4.0",
    "url": "https://github.com/30-seconds/30-seconds-of-code/blob/master/LICENSE",
    "repo": "https://github.com/30-seconds/30-seconds-of-code"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "JavaScript 中的归并排序",
      "description": "在本实验中，我们将探索 JavaScript 中的归并排序算法。归并排序是一种流行的分治排序算法，高效且在实际中常用。完成本实验后，你将对归并排序的工作原理以及如何在自己的 JavaScript 项目中实现它有扎实的理解。",
      "meta": {
        "title": "归并排序算法 | JavaScript 编码教程",
        "description": "学习归并排序算法以及如何在 JavaScript 中实现它。探索逐步指南，掌握这种高效的分治排序技术。",
        "keywords": "归并排序，JavaScript, 编码教程，排序算法，分治"
      },
      "details": {
        "steps": [
          {
            "title": "归并排序",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "验证已执行的 Node 命令",
                "file": "verify1-1.sh",
                "hint": "在终端/SSH 中，通过输入 'node' 并按下回车键可以运行 JavaScript。"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Clasificación Merge en JavaScript",
      "description": "En este laboratorio, exploraremos el algoritmo de clasificación Merge en JavaScript. Merge Sort es un algoritmo de clasificación popular basado en la técnica divide y vencerás que es eficiente y comúnmente utilizado en la práctica. Al final de este laboratorio, tendrás una comprensión sólida de cómo funciona Merge Sort y cómo implementarlo en tus propios proyectos de JavaScript.",
      "meta": {
        "title": "Algoritmo de clasificación Merge | Tutorial de codificación en JavaScript",
        "description": "Aprende el algoritmo de clasificación Merge y cómo implementarlo en JavaScript. Explora una guía paso a paso para dominar esta técnica de clasificación eficiente basada en la técnica divide y vencerás.",
        "keywords": "Clasificación Merge, JavaScript, Tutorial de codificación, Algoritmo de clasificación, Divide y vencerás"
      },
      "details": {
        "steps": [
          {
            "title": "Clasificación Merge",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Verificar comandos de Node ejecutados",
                "file": "verify1-1.sh",
                "hint": "JavaScript se puede ejecutar en la Terminal/SSH escribiendo 'node' y presionando Enter."
              }
            ]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Tri Fusion en JavaScript",
      "description": "Dans ce laboratoire, nous allons explorer l'algorithme de tri Fusion en JavaScript. Le tri Fusion est un algorithme de tri récursif de type Diviser pour Régner qui est efficace et couramment utilisé en pratique. À la fin de ce laboratoire, vous aurez une compréhension solide de la manière dont le tri Fusion fonctionne et de la manière de l'implémenter dans vos propres projets JavaScript.",
      "meta": {
        "title": "Algorithme de tri Fusion | Tutoriel de codage JavaScript",
        "description": "Découvrez l'algorithme de tri Fusion et la manière de l'implémenter en JavaScript. Explorez un guide étape par étape pour maîtriser cette technique de tri efficace de type Diviser pour Régner.",
        "keywords": "Tri Fusion, JavaScript, Tutoriel de codage, Algorithme de tri, Diviser pour Régner"
      },
      "details": {
        "steps": [
          {
            "title": "Tri Fusion",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Vérifier que les commandes Node ont été exécutées",
                "file": "verify1-1.sh",
                "hint": "JavaScript peut être exécuté dans le Terminal/SSH en tapant 'node' et en appuyant sur Entrée."
              }
            ]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Merge Sort in JavaScript",
      "description": "In diesem Lab werden wir den Merge Sort-Algorithmus in JavaScript erkunden. Merge Sort ist ein populärer Divide-and-Conquer-Sortieralgorithmus, der effizient und in der Praxis häufig verwendet wird. Am Ende dieses Labs werden Sie einen soliden Überblick über die Funktionsweise von Merge Sort und dessen Implementierung in Ihren eigenen JavaScript-Projekten haben.",
      "meta": {
        "title": "Merge Sort-Algorithmus | JavaScript-Coding-Tutorial",
        "description": "Lernen Sie den Merge Sort-Algorithmus und seine Implementierung in JavaScript. Entdecken Sie einen schrittweisen Leitfaden, um diese effiziente Divide-and-Conquer-Sortiertechnik zu meistern.",
        "keywords": "Merge Sort, JavaScript, Coding-Tutorial, Sortieralgorithmus, Divide-and-Conquer"
      },
      "details": {
        "steps": [
          {
            "title": "Merge Sort",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Verifizieren Sie, dass die Node-Befehle ausgeführt wurden",
                "file": "verify1-1.sh",
                "hint": "JavaScript kann in der Konsole/SSH ausgeführt werden, indem Sie 'node' eingeben und die Eingabetaste drücken."
              }
            ]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "JavaScript におけるマージソート",
      "description": "この実験では、JavaScript でマージソートアルゴリズムを調べます。マージソートは、分割統治法の人気のあるソートアルゴリズムで、効率的で実際によく使われています。この実験が終わるとき、マージソートがどのように機能するか、および独自の JavaScript プロジェクトでそれを実装する方法をしっかりと理解しているでしょう。",
      "meta": {
        "title": "マージソートアルゴリズム | JavaScript コーディングチュートリアル",
        "description": "マージソートアルゴリズムとそれを JavaScript で実装する方法を学びましょう。この効率的な分割統治法のソート技術を習得するためのステップバイステップガイドをご覧ください。",
        "keywords": "マージソート，JavaScript, コーディングチュートリアル，ソートアルゴリズム，分割統治法"
      },
      "details": {
        "steps": [
          {
            "title": "マージソート",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "実行された Node コマンドを確認する",
                "file": "verify1-1.sh",
                "hint": "ターミナル/SSH で 'node' と入力して Enter キーを押すことで、JavaScript を実行できます。"
              }
            ]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Сортировка слиянием на JavaScript",
      "description": "В этом практическом занятии мы изучим алгоритм сортировки слиянием на JavaScript. Алгоритм сортировки слиянием - это популярный алгоритм сортировки, основанный на методе «разделяй и властвуй», который эффективен и широко используется на практике. В конце этого практического занятия вы глубоко поймете, как работает алгоритм сортировки слиянием и как реализовать его в своих собственных проектах на JavaScript.",
      "meta": {
        "title": "Алгоритм сортировки слиянием | Руководство по программированию на JavaScript",
        "description": "Изучите алгоритм сортировки слиянием и как реализовать его на JavaScript. Изучите пошаговое руководство, чтобы овладеть этой эффективной сортировочной техникой, основанной на методе «разделяй и властвуй».",
        "keywords": "Сортировка слиянием, JavaScript, Руководство по программированию, Алгоритм сортировки, Разделяй и властвуй"
      },
      "details": {
        "steps": [
          {
            "title": "Сортировка слиянием",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "Проверить выполнение команд Node",
                "file": "verify1-1.sh",
                "hint": "JavaScript можно запустить в Терминале/SSH, введя 'node' и нажав Enter."
              }
            ]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    },
    {
      "lang": "ko",
      "title": "JavaScript 에서의 병합 정렬",
      "description": "이 랩에서는 JavaScript 에서 병합 정렬 (Merge Sort) 알고리즘을 탐구합니다. 병합 정렬은 효율적이며 실제로 널리 사용되는 분할 정복 (divide-and-conquer) 정렬 알고리즘입니다. 이 랩을 마치면 병합 정렬의 작동 방식과 자체 JavaScript 프로젝트에서 구현하는 방법에 대한 확실한 이해를 얻게 될 것입니다.",
      "meta": {
        "title": "병합 정렬 알고리즘 | JavaScript 코딩 튜토리얼",
        "description": "병합 정렬 알고리즘을 배우고 JavaScript 에서 구현하는 방법을 알아보세요. 이 효율적인 분할 정복 정렬 기술을 마스터하기 위한 단계별 가이드를 살펴보세요.",
        "keywords": "병합 정렬, JavaScript, 코딩 튜토리얼, 정렬 알고리즘, 분할 정복"
      },
      "details": {
        "steps": [
          {
            "title": "병합 정렬",
            "text": "ko/step1.md",
            "verify": [
              {
                "name": "Node 명령어 실행 확인",
                "file": "verify1-1.sh",
                "hint": "JavaScript 는 터미널/SSH 에서 'node'를 입력하고 Enter 키를 눌러 실행할 수 있습니다."
              }
            ]
          }
        ],
        "intro": {
          "text": "ko/intro.md",
          "title": "소개"
        },
        "finish": {
          "text": "ko/finish.md",
          "title": "요약"
        }
      }
    },
    {
      "lang": "pt",
      "title": "Merge Sort em JavaScript",
      "description": "Neste laboratório, exploraremos o algoritmo Merge Sort em JavaScript. Merge Sort é um algoritmo de ordenação popular do tipo dividir e conquistar (divide-and-conquer) que é eficiente e comumente usado na prática. Ao final deste laboratório, você terá uma sólida compreensão de como o Merge Sort funciona e como implementá-lo em seus próprios projetos JavaScript.",
      "meta": {
        "title": "Algoritmo Merge Sort | Tutorial de Codificação JavaScript",
        "description": "Aprenda o algoritmo Merge Sort e como implementá-lo em JavaScript. Explore um guia passo a passo para dominar esta técnica eficiente de ordenação dividir e conquistar.",
        "keywords": "Merge Sort, JavaScript, Tutorial de Codificação, Algoritmo de Ordenação, Dividir e Conquistar, Ordenação por Mistura"
      },
      "details": {
        "steps": [
          {
            "title": "Merge Sort",
            "text": "pt/step1.md",
            "verify": [
              {
                "name": "Verificar Comandos Node Executados",
                "file": "verify1-1.sh",
                "hint": "JavaScript pode ser executado no Terminal/SSH digitando 'node' e pressionando Enter."
              }
            ]
          }
        ],
        "intro": {
          "text": "pt/intro.md",
          "title": "Introdução"
        },
        "finish": {
          "text": "pt/finish.md",
          "title": "Resumo"
        }
      }
    }
  ]
}
