{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Resolve Promise After Given Amount of Time",
  "description": "In this lab, we will learn how to create a promise that resolves to a given value after a specified amount of time using JavaScript. We will use the Promise constructor to create a new promise and the setTimeout() method to delay the resolution of the promise. This skill is essential when working with asynchronous operations in JavaScript.",
  "meta": {
    "title": "JavaScript Promise | Asynchronous Programming",
    "description": "Learn how to create a promise that resolves to a given value after a specified amount of time using JavaScript. Mastering this skill is essential for working with asynchronous operations.",
    "keywords": "JavaScript, Promise, Asynchronous, Delay, Resolve, Timeout"
  },
  "difficulty": "Beginner",
  "time": 5,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Resolve Promise After Given Amount of Time",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify Node Commands Executed",
            "file": "verify1-1.sh",
            "hint": "JavaScript can be run in the Terminal/SSH by typing 'node' and pressing Enter.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "javascript/arith_ops",
          "javascript/async_prog",
          "javascript/comp_ops",
          "javascript/data_types",
          "javascript/variables"
        ]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["Lotus-7"],
  "license": {
    "name": "CC-BY-4.0",
    "url": "https://github.com/30-seconds/30-seconds-of-code/blob/master/LICENSE",
    "repo": "https://github.com/30-seconds/30-seconds-of-code"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "在给定时间后解析 Promise",
      "description": "在本实验中，我们将学习如何使用 JavaScript 创建一个在指定时间后解析为给定值的 Promise。我们将使用 Promise 构造函数创建一个新的 Promise，并使用 setTimeout() 方法延迟 Promise 的解析。在处理 JavaScript 中的异步操作时，这项技能至关重要。",
      "meta": {
        "title": "JavaScript Promise | 异步编程",
        "description": "学习如何使用 JavaScript 创建一个在指定时间后解析为给定值的 Promise。掌握此技能对于处理异步操作至关重要。",
        "keywords": "JavaScript, Promise, 异步，延迟，解析，超时"
      },
      "details": {
        "steps": [
          {
            "title": "在给定时间后解析 Promise",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "验证已执行的 Node 命令",
                "file": "verify1-1.sh",
                "hint": "通过在终端/SSH 中输入'node'并按回车键，可以运行 JavaScript。"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Resolver Promesa Después de una Cantidad Determinada de Tiempo",
      "description": "En este laboratorio, aprenderemos a crear una promesa que se resuelva a un valor dado después de un tiempo determinado utilizando JavaScript. Utilizaremos el constructor Promise para crear una nueva promesa y el método setTimeout() para retrasar la resolución de la promesa. Esta habilidad es esencial cuando se trabajan con operaciones asíncronas en JavaScript.",
      "meta": {
        "title": "Promesa de JavaScript | Programación Asíncrona",
        "description": "Aprende a crear una promesa que se resuelva a un valor dado después de un tiempo determinado utilizando JavaScript. Dominar esta habilidad es esencial para trabajar con operaciones asíncronas.",
        "keywords": "JavaScript, Promesa, Asíncrona, Retraso, Resolver, Tiempo de espera"
      },
      "details": {
        "steps": [
          {
            "title": "Resolver Promesa Después de una Cantidad Determinada de Tiempo",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Verificar que se ejecutaron los comandos de Node",
                "file": "verify1-1.sh",
                "hint": "Se puede ejecutar JavaScript en la Terminal/SSH escribiendo 'node' y presionando Enter."
              }
            ]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Résolution d'une promesse après un délai donné",
      "description": "Dans ce laboratoire, nous allons apprendre à créer une promesse qui est résolue avec une valeur donnée après un délai spécifié en utilisant JavaScript. Nous allons utiliser le constructeur Promise pour créer une nouvelle promesse et la méthode setTimeout() pour retarder la résolution de la promesse. Cette compétence est essentielle lorsqu'on travaille avec des opérations asynchrones en JavaScript.",
      "meta": {
        "title": "Promesse JavaScript | Programmation asynchrone",
        "description": "Apprenez à créer une promesse qui est résolue avec une valeur donnée après un délai spécifié en utilisant JavaScript. Maîtriser cette compétence est essentielle pour travailler avec des opérations asynchrones.",
        "keywords": "JavaScript, Promesse, Asynchrone, Retard, Résolution, Délai d'attente"
      },
      "details": {
        "steps": [
          {
            "title": "Résolution d'une promesse après un délai donné",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Vérifier que les commandes Node ont été exécutées",
                "file": "verify1-1.sh",
                "hint": "JavaScript peut être exécuté dans le Terminal/SSH en tapant 'node' et en appuyant sur Entrée."
              }
            ]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Promise nach einer bestimmten Zeit auflösen",
      "description": "In diesem Lab werden wir lernen, wie man in JavaScript eine Promise erstellt, die nach einer bestimmten Zeitspanne auf einen angegebenen Wert aufgelöst wird. Wir werden den Promise-Konstruktor verwenden, um eine neue Promise zu erstellen, und die setTimeout()-Methode, um die Auflösung der Promise zu verzögern. Diese Fähigkeit ist von entscheidender Bedeutung, wenn es um asynchrone Operationen in JavaScript geht.",
      "meta": {
        "title": "JavaScript Promise | Asynchrone Programmierung",
        "description": "Lernen Sie, wie man in JavaScript eine Promise erstellt, die nach einer bestimmten Zeitspanne auf einen angegebenen Wert aufgelöst wird. Das Beherrschen dieser Fähigkeit ist unerlässlich für die Arbeit mit asynchronen Operationen.",
        "keywords": "JavaScript, Promise, Asynchron, Verzögerung, Auflösung, Timeout"
      },
      "details": {
        "steps": [
          {
            "title": "Promise nach einer bestimmten Zeit auflösen",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Überprüfen, ob die Node-Befehle ausgeführt wurden",
                "file": "verify1-1.sh",
                "hint": "JavaScript kann im Terminal/SSH ausgeführt werden, indem man 'node' eingibt und die Eingabetaste drückt."
              }
            ]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "指定された時間の後に Promise を解決する",
      "description": "この実験では、JavaScript を使って指定された時間の後に指定された値に解決する Promise を作成する方法を学びます。Promise コンストラクタを使って新しい Promise を作成し、Promise の解決を遅らせるために setTimeout() メソッドを使います。このスキルは、JavaScript の非同期操作を扱う際に欠かせないものです。",
      "meta": {
        "title": "JavaScript Promise | 非同期プログラミング",
        "description": "JavaScript を使って指定された時間の後に指定された値に解決する Promise を作成する方法を学びます。このスキルを習得することは、非同期操作を扱う際に不可欠です。",
        "keywords": "JavaScript, Promise, 非同期，遅延，解決，タイムアウト"
      },
      "details": {
        "steps": [
          {
            "title": "指定された時間の後に Promise を解決する",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "実行された Node コマンドを確認する",
                "file": "verify1-1.sh",
                "hint": "ターミナル/SSH で'node'と入力して Enter キーを押すことで JavaScript を実行できます。"
              }
            ]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Разрешение промиса после заданного времени",
      "description": "В этом практическом занятии мы научимся создавать промис, который будет разрешаться с заданным значением через определенное время, используя JavaScript. Мы будем использовать конструктор Promise для создания нового промиса и метод setTimeout() для задержки разрешения промиса. Это умение является важным при работе с асинхронными операциями в JavaScript.",
      "meta": {
        "title": "JavaScript Promise | Асинхронное программирование",
        "description": "Изучите, как создать промис, который будет разрешаться с заданным значением через определенное время, используя JavaScript. Мастерство в этом навыке необходимо для работы с асинхронными операциями.",
        "keywords": "JavaScript, Promise, Асинхронность, Задержка, Разрешение, Таймаут"
      },
      "details": {
        "steps": [
          {
            "title": "Разрешение промиса после заданного времени",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "Проверить выполнение команд Node",
                "file": "verify1-1.sh",
                "hint": "JavaScript можно запустить в Терминале/SSH, введя 'node' и нажав Enter."
              }
            ]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    },
    {
      "lang": "ko",
      "title": "지정된 시간 후 Promise Resolve",
      "description": "이 랩에서는 JavaScript 를 사용하여 지정된 시간 후에 주어진 값으로 resolve 되는 promise 를 만드는 방법을 배웁니다. Promise 생성자를 사용하여 새로운 promise 를 생성하고, setTimeout() 메서드를 사용하여 promise 의 resolve 를 지연시킵니다. 이 기술은 JavaScript 에서 비동기 작업을 처리할 때 필수적입니다.",
      "meta": {
        "title": "JavaScript Promise | 비동기 프로그래밍 (비동기 처리)",
        "description": "JavaScript 를 사용하여 지정된 시간 후에 주어진 값으로 resolve 되는 promise 를 만드는 방법을 알아보세요. 이 기술을 마스터하는 것은 비동기 작업 처리에 필수적입니다.",
        "keywords": "JavaScript, Promise, 비동기, 지연, Resolve, Timeout, 자바스크립트, 프로미스, 비동기 처리"
      },
      "details": {
        "steps": [
          {
            "title": "지정된 시간 후 Promise Resolve",
            "text": "ko/step1.md",
            "verify": [
              {
                "name": "Node 명령어 실행 확인",
                "file": "verify1-1.sh",
                "hint": "터미널/SSH 에서 'node'를 입력하고 Enter 키를 눌러 JavaScript 를 실행할 수 있습니다."
              }
            ]
          }
        ],
        "intro": {
          "text": "ko/intro.md",
          "title": "소개"
        },
        "finish": {
          "text": "ko/finish.md",
          "title": "요약"
        }
      }
    },
    {
      "lang": "pt",
      "title": "Resolver Promise Após um Período de Tempo Específico",
      "description": "Neste laboratório, aprenderemos como criar uma *promise* que resolve para um valor dado após um período de tempo especificado usando JavaScript. Usaremos o construtor *Promise* para criar uma nova *promise* e o método `setTimeout()` para atrasar a resolução da *promise*. Esta habilidade é essencial ao trabalhar com operações assíncronas em JavaScript.",
      "meta": {
        "title": "Promise JavaScript | Programação Assíncrona - Aprenda a Resolver Promises",
        "description": "Aprenda a criar uma *promise* que resolve para um valor dado após um período de tempo especificado em JavaScript. Dominar esta habilidade é essencial para trabalhar com operações assíncronas. Melhore suas habilidades de programação com este tutorial.",
        "keywords": "JavaScript, Promise, Assíncrono, Atraso, Resolver, Timeout, Programação Assíncrona, Tutorial JavaScript"
      },
      "details": {
        "steps": [
          {
            "title": "Resolver Promise Após um Período de Tempo Específico",
            "text": "pt/step1.md",
            "verify": [
              {
                "name": "Verificar Comandos Node Executados",
                "file": "verify1-1.sh",
                "hint": "JavaScript pode ser executado no Terminal/SSH digitando 'node' e pressionando Enter."
              }
            ]
          }
        ],
        "intro": {
          "text": "pt/intro.md",
          "title": "Introdução"
        },
        "finish": {
          "text": "pt/finish.md",
          "title": "Resumo"
        }
      }
    }
  ]
}
