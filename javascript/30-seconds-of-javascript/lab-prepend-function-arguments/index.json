{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Prepend Function Arguments",
  "description": "In this lab, we will explore the concept of function partials in JavaScript and learn how to create a higher-order function that allows us to easily prepend arguments to a given function. Through practical examples and exercises, we will understand how partial functions work and how they can be used to simplify our code and make it more modular.",
  "meta": {
    "title": "Prepend Function Arguments in JavaScript",
    "description": "Learn how to create a higher-order function that prepends arguments to a given function using partial functions in JavaScript.",
    "keywords": "javascript, javascript practice, javascript practice online, partial, javascript lab, function, javascript tutor, prepend, higher order"
  },
  "difficulty": "Beginner",
  "time": 5,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Prepend Function Arguments",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify Node Command Usage",
            "file": "verify1-1.sh",
            "hint": "JavaScript can be run in the Terminal/SSH by typing 'node' and pressing Enter.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "javascript/arith_ops",
          "javascript/comp_ops",
          "javascript/data_types",
          "javascript/spread_rest",
          "javascript/str_manip",
          "javascript/variables"
        ]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["Lotus-7"],
  "license": {
    "name": "CC-BY-4.0",
    "url": "https://github.com/30-seconds/30-seconds-of-code/blob/master/LICENSE",
    "repo": "https://github.com/30-seconds/30-seconds-of-code"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "前置函数参数",
      "description": "在本实验中，我们将探索 JavaScript 中函数偏应用的概念，并学习如何创建一个高阶函数，使我们能够轻松地将参数前置到给定函数。通过实际示例和练习，我们将理解偏函数的工作原理，以及它们如何用于简化代码并使其更具模块化。",
      "meta": {
        "title": "JavaScript 中的前置函数参数",
        "description": "学习如何使用 JavaScript 中的偏函数创建一个高阶函数，该函数将参数前置到给定函数。",
        "keywords": "JavaScript, JavaScript 练习，在线 JavaScript 练习，偏应用，JavaScript 实验，函数，JavaScript 教程，前置，高阶"
      },
      "details": {
        "steps": [
          {
            "title": "前置函数参数",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "验证 Node 命令的用法",
                "file": "verify1-1.sh",
                "hint": "通过在终端/SSH 中输入'node'并按回车键，可以运行 JavaScript。"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Prependir Argumentos de Función",
      "description": "En este laboratorio, exploraremos el concepto de funciones parciales en JavaScript y aprenderemos cómo crear una función de orden superior que nos permita agregar fácilmente argumentos a una función dada. A través de ejemplos prácticos y ejercicios, entenderemos cómo funcionan las funciones parciales y cómo se pueden utilizar para simplificar nuestro código y hacerlo más modular.",
      "meta": {
        "title": "Prependir Argumentos de Función en JavaScript",
        "description": "Aprende cómo crear una función de orden superior que agrega argumentos a una función dada utilizando funciones parciales en JavaScript.",
        "keywords": "javascript, práctica de javascript, práctica de javascript en línea, parcial, laboratorio de javascript, función, tutor de javascript, prepender, orden superior"
      },
      "details": {
        "steps": [
          {
            "title": "Prependir Argumentos de Función",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Verificar el Uso del Comando Node",
                "file": "verify1-1.sh",
                "hint": "JavaScript se puede ejecutar en la Terminal/SSH escribiendo 'node' y presionando Enter."
              }
            ]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Ajouter des arguments à une fonction",
      "description": "Dans ce laboratoire, nous allons explorer le concept de fonctions partielles en JavaScript et apprendre à créer une fonction de haut niveau qui nous permet d'ajouter facilement des arguments à une fonction donnée. Par des exemples pratiques et des exercices, nous comprendrons comment les fonctions partielles fonctionnent et comment elles peuvent être utilisées pour simplifier notre code et le rendre plus modulaire.",
      "meta": {
        "title": "Ajouter des arguments à une fonction en JavaScript",
        "description": "Apprenez à créer une fonction de haut niveau qui ajoute des arguments à une fonction donnée en utilisant des fonctions partielles en JavaScript.",
        "keywords": "javascript, pratique javascript, pratique javascript en ligne, partiel, laboratoire javascript, fonction, tuteur javascript, ajouter, de haut niveau"
      },
      "details": {
        "steps": [
          {
            "title": "Ajouter des arguments à une fonction",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Vérifier l'utilisation de la commande Node",
                "file": "verify1-1.sh",
                "hint": "JavaScript peut être exécuté dans le Terminal/SSH en tapant 'node' et en appuyant sur Entrée."
              }
            ]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Funktionsargumente voranstellen",
      "description": "In diesem Lab werden wir das Konzept partieller Funktionen in JavaScript erkunden und lernen, wie wir eine Higher-Order-Funktion erstellen, die es uns ermöglicht, Argumente einfach vorangestellt einem gegebenen Funktionsaufruf zu setzen. Anhand von praktischen Beispielen und Übungen werden wir verstehen, wie partielle Funktionen funktionieren und wie sie verwendet werden können, um unseren Code zu vereinfachen und modularer zu gestalten.",
      "meta": {
        "title": "Funktionsargumente in JavaScript voranstellen",
        "description": "Lernen Sie, wie Sie eine Higher-Order-Funktion erstellen, die Argumente vorangestellt einem gegebenen Funktionsaufruf mit partiellen Funktionen in JavaScript setzt.",
        "keywords": "javascript, javascript Übung, online javascript Übung, partiell, javascript Lab, Funktion, javascript Tutor, voranstellen, Higher Order"
      },
      "details": {
        "steps": [
          {
            "title": "Funktionsargumente voranstellen",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Überprüfen der Verwendung des Node-Befehls",
                "file": "verify1-1.sh",
                "hint": "JavaScript kann im Terminal/SSH ausgeführt werden, indem man 'node' eingibt und die Enter-Taste drückt."
              }
            ]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "関数の引数を前置する",
      "description": "この実験では、JavaScript における関数の部分関数の概念を探り、与えられた関数に引数を簡単に前置することができる高階関数を作成する方法を学びます。実際の例と演習を通じて、部分関数がどのように機能するか、およびコードを簡素化してよりモジュール化するためにどのように使用できるかを理解します。",
      "meta": {
        "title": "JavaScript における関数の引数を前置する",
        "description": "JavaScript で部分関数を使用して、与えられた関数に引数を前置する高階関数を作成する方法を学びましょう。",
        "keywords": "javascript, javascript 練習，オンライン javascript 練習，部分関数，javascript 実験，関数，javascript チューター, 前置する，高階"
      },
      "details": {
        "steps": [
          {
            "title": "関数の引数を前置する",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "Node コマンドの使用を確認する",
                "file": "verify1-1.sh",
                "hint": "ターミナル/SSH で'node'と入力して Enter キーを押すことで、JavaScript を実行できます。"
              }
            ]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Добавление аргументов в функцию",
      "description": "В этом практическом занятии мы изучим концепцию частичных функций в JavaScript и научимся создавать высшего порядка функцию, которая позволит нам легко добавлять аргументы в начало заданной функции. С помощью практических примеров и упражнений мы поймем, как работают частичные функции и как их можно использовать для упрощения нашего кода и его более модульного оформления.",
      "meta": {
        "title": "Добавление аргументов в функцию в JavaScript",
        "description": "Изучите, как создать высшего порядка функцию, которая добавляет аргументы в начало заданной функции с использованием частичных функций в JavaScript.",
        "keywords": "javascript, практика javascript, онлайн практика javascript, частичная функция, практическое занятие javascript, функция, преподаватель javascript, добавить в начало, высший порядок"
      },
      "details": {
        "steps": [
          {
            "title": "Добавление аргументов в функцию",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "Проверить использование команды Node",
                "file": "verify1-1.sh",
                "hint": "JavaScript можно запустить в Терминале/SSH, введя 'node' и нажав Enter."
              }
            ]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    }
  ]
}
