{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Unflatten Nested JavaScript Objects",
  "description": "In this lab, we will explore how to unflatten an object with paths for keys in JavaScript. We will use nested Array.prototype.reduce() and String.prototype.split() methods to split each key with a dot delimiter and add objects against the keys. By the end of this lab, you will have a solid understanding of how to efficiently convert a flat object to a nested one.",
  "meta": {
    "title": "Unflatten Objects with Paths in JavaScript | Nested Reduce & Split",
    "description": "Learn how to efficiently convert flat objects to nested ones in JavaScript using Array.prototype.reduce() and String.prototype.split().",
    "keywords": "JavaScript, Object Manipulation, Nested Data Structures, Unflatten Object, Reduce, Split"
  },
  "difficulty": "Beginner",
  "time": 5,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Unflatten Object",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify Node Commands in ZSH History",
            "file": "verify1-1.sh",
            "hint": "JavaScript can be run in the Terminal/SSH by typing 'node' and pressing Enter.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "javascript/arith_ops",
          "javascript/array_methods",
          "javascript/comp_ops",
          "javascript/data_types",
          "javascript/destr_assign",
          "javascript/higher_funcs",
          "javascript/variables"
        ]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["Lotus-7"],
  "license": {
    "name": "CC-BY-4.0",
    "url": "https://github.com/30-seconds/30-seconds-of-code/blob/master/LICENSE",
    "repo": "https://github.com/30-seconds/30-seconds-of-code"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "将 JavaScript 对象扁平化",
      "description": "在本实验中，我们将探索如何在 JavaScript 中使用带键路径的对象来实现对象的扁平化。我们将使用嵌套的 Array.prototype.reduce() 和 String.prototype.split() 方法，以点号作为分隔符来拆分每个键，并根据这些键添加对象。完成本实验后，你将对如何有效地将扁平对象转换为嵌套对象有深入的理解。",
      "meta": {
        "title": "在 JavaScript 中使用路径扁平化对象 | 嵌套归约与拆分",
        "description": "学习如何使用 Array.prototype.reduce() 和 String.prototype.split() 在 JavaScript 中有效地将扁平对象转换为嵌套对象。",
        "keywords": "JavaScript, 对象操作，嵌套数据结构，扁平化对象，归约，拆分"
      },
      "details": {
        "steps": [
          {
            "title": "扁平化对象",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "在 ZSH 历史记录中验证 Node 命令",
                "file": "verify1-1.sh",
                "hint": "通过在终端/SSH 中输入'node'并按回车键，可以运行 JavaScript。"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Desaplanar objetos anidados en JavaScript",
      "description": "En este laboratorio, exploraremos cómo desaplanar un objeto con rutas para las claves en JavaScript. Utilizaremos los métodos anidados Array.prototype.reduce() y String.prototype.split() para dividir cada clave con un delimitador de puntos y agregar objetos en función de las claves. Al final de este laboratorio, tendrás una comprensión sólida de cómo convertir eficientemente un objeto plano en uno anidado.",
      "meta": {
        "title": "Desaplanar objetos con rutas en JavaScript | Reduce y Dividir anidados",
        "description": "Aprende cómo convertir eficientemente objetos planos en objetos anidados en JavaScript utilizando Array.prototype.reduce() y String.prototype.split().",
        "keywords": "JavaScript, Manipulación de objetos, Estructuras de datos anidadas, Desaplanar objeto, Reducir, Dividir"
      },
      "details": {
        "steps": [
          {
            "title": "Desaplanar objeto",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Verificar comandos de Node en el historial de ZSH",
                "file": "verify1-1.sh",
                "hint": "Se puede ejecutar JavaScript en la Terminal/SSH escribiendo 'node' y presionando Enter."
              }
            ]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Développer des objets imbriqués JavaScript",
      "description": "Dans ce laboratoire, nous allons explorer comment développer un objet avec des chemins pour les clés en JavaScript. Nous utiliserons les méthodes imbriquées Array.prototype.reduce() et String.prototype.split() pour diviser chaque clé avec un délimiteur de point et ajouter des objets contre les clés. À la fin de ce laboratoire, vous aurez une compréhension solide de la manière d'efficiemment convertir un objet plat en un objet imbriqué.",
      "meta": {
        "title": "Développer des objets avec des chemins en JavaScript | Réduction imbriquée & Découpage",
        "description": "Apprenez à convertir efficacement les objets plats en objets imbriqués en JavaScript en utilisant Array.prototype.reduce() et String.prototype.split().",
        "keywords": "JavaScript, Manipulation d'objets, Structures de données imbriquées, Objet déplié, Réduction, Découpage"
      },
      "details": {
        "steps": [
          {
            "title": "Développer un objet",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Vérifier les commandes Node dans l'historique ZSH",
                "file": "verify1-1.sh",
                "hint": "JavaScript peut être exécuté dans le Terminal/SSH en tapant 'node' et en appuyant sur Entrée."
              }
            ]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Entflache geschachtelte JavaScript-Objekte",
      "description": "In diesem Lab werden wir untersuchen, wie man in JavaScript ein Objekt mit Pfaden für Schlüssel entflacht. Wir werden die geschachtelten Methoden Array.prototype.reduce() und String.prototype.split() verwenden, um jeden Schlüssel mit einem Punkt als Trennzeichen zu teilen und gegen die Schlüssel Objekte hinzuzufügen. Am Ende dieses Labs werden Sie eine solide Vorstellung davon haben, wie man effizient ein flaches Objekt in ein geschachteltes umwandelt.",
      "meta": {
        "title": "Entflache Objekte mit Pfaden in JavaScript | Geschachteltes Reduce & Split",
        "description": "Lernen Sie, wie man in JavaScript effizient flache Objekte in geschachtelte umwandelt, indem Sie Array.prototype.reduce() und String.prototype.split() verwenden.",
        "keywords": "JavaScript, Objektmanipulation, Geschachtelte Datenstrukturen, Entflache Objekt, Reduce, Split"
      },
      "details": {
        "steps": [
          {
            "title": "Entflache Objekt",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Verifiziere Node-Befehle in der ZSH-Geschichte",
                "file": "verify1-1.sh",
                "hint": "JavaScript kann im Terminal/SSH ausgeführt werden, indem man 'node' eingibt und die Enter-Taste drückt."
              }
            ]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "JavaScript のネストされたオブジェクトを展開する",
      "description": "この実験では、JavaScript でキーにパスがあるオブジェクトを展開する方法を探ります。ネストされた Array.prototype.reduce() と String.prototype.split() メソッドを使って、各キーをドット区切り文字で分割し、キーに対してオブジェクトを追加します。この実験が終了するとき、フラットなオブジェクトを効率的にネストされたオブジェクトに変換する方法を十分に理解しているでしょう。",
      "meta": {
        "title": "JavaScript でパス付きのオブジェクトを展開する | ネストされた Reduce と Split",
        "description": "Array.prototype.reduce() と String.prototype.split() を使って、JavaScript でフラットなオブジェクトを効率的にネストされたオブジェクトに変換する方法を学びましょう。",
        "keywords": "JavaScript, オブジェクト操作，ネストされたデータ構造，オブジェクトを展開する，Reduce, Split"
      },
      "details": {
        "steps": [
          {
            "title": "オブジェクトを展開する",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "ZSH 履歴の Node コマンドを確認する",
                "file": "verify1-1.sh",
                "hint": "ターミナル/SSH で'node'と入力して Enter キーを押すことで JavaScript を実行できます。"
              }
            ]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Преобразование плоских объектов JavaScript в вложенные",
      "description": "В этом практическом занятии мы изучим, как преобразовать плоский объект в вложенный объект с использованием путей для ключей в JavaScript. Мы будем использовать вложенные методы Array.prototype.reduce() и String.prototype.split(), чтобы разбить каждый ключ по разделителю точки и добавить объекты по ключам. В конце этого практического занятия вы глубоко освоите методы эффективного преобразования плоского объекта в вложенный.",
      "meta": {
        "title": "Преобразование объектов с путями в JavaScript | Вложенные методы reduce и split",
        "description": "Изучите, как эффективно преобразовать плоские объекты в вложенные в JavaScript с использованием Array.prototype.reduce() и String.prototype.split().",
        "keywords": "JavaScript, Обработка объектов, Вложенные структуры данных, Преобразование плоского объекта, reduce, split"
      },
      "details": {
        "steps": [
          {
            "title": "Преобразовать плоский объект в вложенный",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "Проверить команды Node в истории ZSH",
                "file": "verify1-1.sh",
                "hint": "JavaScript можно запустить в Терминале/SSH, введя 'node' и нажав Enter."
              }
            ]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    }
  ]
}
