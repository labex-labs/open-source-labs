{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Date Difference in Seconds",
  "description": "In this lab, we will explore how to calculate the difference between two dates in seconds using JavaScript. The lab will provide a function that takes two Date objects as input and returns the difference between them in seconds. This can be useful in various applications, such as measuring time intervals or calculating the duration between two events. By the end of this lab, you will have a better understanding of how to work with dates in JavaScript and how to perform time calculations using built-in methods.",
  "meta": {
    "title": "Calculate Date Difference in Seconds with JavaScript",
    "description": "Learn how to calculate the difference between two dates in seconds using JavaScript.",
    "keywords": "javascript, javascript practice, date difference, javascript practice online, date manipulation, seconds, javascript lab, time calculation, javascript tutor"
  },
  "difficulty": "Beginner",
  "time": 20,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "verified": true,
  "details": {
    "steps": [
      {
        "title": "Getting Started with JavaScript Date Objects",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify Node Usage In Zsh History",
            "file": "verify1-1.sh",
            "hint": "Make sure you have started the Node.js environment by typing 'node' in the terminal.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": []
      },
      {
        "title": "Understanding Date Calculations in JavaScript",
        "text": "en/step2.md",
        "verify": [
          {
            "name": "Verify Date Calculation",
            "file": "verify2-1.sh",
            "hint": "Make sure you have practiced date calculations in the Node.js environment."
          }
        ],
        "skills": []
      },
      {
        "title": "Implementing the Date Difference Function Using Arrow Functions",
        "text": "en/step3.md",
        "verify": [
          {
            "name": "Verify JavaScript File Creation",
            "file": "verify3-1.sh",
            "hint": "Make sure you have created the dateDifference.js file in the project directory."
          }
        ],
        "skills": []
      },
      {
        "title": "Creating a Practical Application",
        "text": "en/step4.md",
        "verify": [
          {
            "name": "Verify Timer Application",
            "file": "verify4-1.sh",
            "hint": "Make sure you have created the timer.js file in the project directory."
          }
        ],
        "skills": []
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["Lotus-7"],
  "license": {
    "name": "CC-BY-4.0",
    "url": "https://github.com/30-seconds/30-seconds-of-code/blob/master/LICENSE",
    "repo": "https://github.com/30-seconds/30-seconds-of-code"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "计算日期差值（以秒为单位）",
      "description": "在本次实验中，我们将探讨如何使用 JavaScript 计算两个日期之间的差值（以秒为单位）。实验将提供一个函数，该函数接受两个 Date 对象作为输入，并返回它们之间的秒数差值。这在各种应用场景中都很有用，例如测量时间间隔或计算两个事件之间的持续时间。通过本次实验，你将更好地理解如何在 JavaScript 中处理日期，以及如何使用内置方法进行时间计算。",
      "meta": {
        "title": "使用 JavaScript 计算日期差值（以秒为单位）",
        "description": "学习如何使用 JavaScript 计算两个日期之间的差值（以秒为单位）。",
        "keywords": "JavaScript, JavaScript 实践，日期差值，在线 JavaScript 实践，日期操作，秒，JavaScript 实验，时间计算，JavaScript 教程"
      },
      "details": {
        "steps": [
          {
            "title": "JavaScript Date 对象入门",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "验证 Zsh 历史记录中 Node 的使用情况",
                "file": "verify1-1.sh",
                "hint": "确保你已在终端中输入 'node' 启动了 Node.js 环境。"
              }
            ]
          },
          {
            "title": "理解 JavaScript 中的日期计算",
            "text": "zh/step2.md",
            "verify": [
              {
                "name": "验证日期计算",
                "file": "verify2-1.sh",
                "hint": "确保你已经在 Node.js 环境中练习过日期计算。"
              }
            ]
          },
          {
            "title": "使用箭头函数实现日期差值计算函数",
            "text": "zh/step3.md",
            "verify": [
              {
                "name": "验证 JavaScript 文件是否创建",
                "file": "verify3-1.sh",
                "hint": "确保你已在项目目录下创建了 dateDifference.js 文件。"
              }
            ]
          },
          {
            "title": "创建实用应用程序",
            "text": "zh/step4.md",
            "verify": [
              {
                "name": "验证计时器应用程序",
                "file": "verify4-1.sh",
                "hint": "确保你已在项目目录中创建了 timer.js 文件。"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Diferencia de fechas en segundos",
      "description": "En este laboratorio, exploraremos cómo calcular la diferencia entre dos fechas en segundos utilizando JavaScript. El laboratorio proporcionará una función que toma dos objetos Date como entrada y devuelve la diferencia entre ellos en segundos. Esto puede ser útil en diversas aplicaciones, como medir intervalos de tiempo o calcular la duración entre dos eventos. Al final de este laboratorio, tendrás una mejor comprensión de cómo trabajar con fechas en JavaScript y cómo realizar cálculos de tiempo utilizando métodos incorporados.",
      "meta": {
        "title": "Calcular la diferencia de fechas en segundos con JavaScript",
        "description": "Aprende cómo calcular la diferencia entre dos fechas en segundos utilizando JavaScript.",
        "keywords": "javascript, práctica de javascript, diferencia de fechas, práctica de javascript en línea, manipulación de fechas, segundos, laboratorio de javascript, cálculo de tiempo, tutor de javascript"
      },
      "details": {
        "steps": [
          {
            "title": "Empezando con objetos Date de JavaScript",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Verificar el uso de Node en el historial de Zsh",
                "file": "verify1-1.sh",
                "hint": "Asegúrate de haber iniciado el entorno de Node.js escribiendo 'node' en la terminal."
              }
            ]
          },
          {
            "title": "Comprendiendo los cálculos de fechas en JavaScript",
            "text": "es/step2.md",
            "verify": [
              {
                "name": "Verificar el cálculo de fechas",
                "file": "verify2-1.sh",
                "hint": "Asegúrate de haber practicado cálculos de fechas en el entorno de Node.js."
              }
            ]
          },
          {
            "title": "Implementando la función de diferencia de fechas utilizando funciones flecha",
            "text": "es/step3.md",
            "verify": [
              {
                "name": "Verificar la creación del archivo JavaScript",
                "file": "verify3-1.sh",
                "hint": "Asegúrate de haber creado el archivo dateDifference.js en el directorio del proyecto."
              }
            ]
          },
          {
            "title": "Creando una aplicación práctica",
            "text": "es/step4.md",
            "verify": [
              {
                "name": "Verificar la aplicación de temporizador",
                "file": "verify4-1.sh",
                "hint": "Asegúrate de haber creado el archivo timer.js en el directorio del proyecto."
              }
            ]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Différence de dates en secondes",
      "description": "Dans ce laboratoire, nous allons explorer comment calculer la différence entre deux dates en secondes en utilisant JavaScript. Le laboratoire fournira une fonction qui prend deux objets Date en entrée et renvoie la différence entre eux en secondes. Cela peut être utile dans diverses applications, telles que la mesure d'intervalles de temps ou le calcul de la durée entre deux événements. À la fin de ce laboratoire, vous aurez une meilleure compréhension de la manipulation des dates en JavaScript et de la réalisation de calculs temporels à l'aide de méthodes intégrées.",
      "meta": {
        "title": "Calculer la différence de dates en secondes avec JavaScript",
        "description": "Apprenez à calculer la différence entre deux dates en secondes en utilisant JavaScript.",
        "keywords": "javascript, pratique JavaScript, différence de dates, pratique JavaScript en ligne, manipulation de dates, secondes, laboratoire JavaScript, calcul temporel, tutoriel JavaScript"
      },
      "details": {
        "steps": [
          {
            "title": "Prise en main des objets Date en JavaScript",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Vérifier l'utilisation de Node dans l'historique Zsh",
                "file": "verify1-1.sh",
                "hint": "Assurez-vous d'avoir démarré l'environnement Node.js en tapant 'node' dans le terminal."
              }
            ]
          },
          {
            "title": "Comprendre les calculs de dates en JavaScript",
            "text": "fr/step2.md",
            "verify": [
              {
                "name": "Vérifier le calcul de dates",
                "file": "verify2-1.sh",
                "hint": "Assurez-vous d'avoir pratiqué les calculs de dates dans l'environnement Node.js."
              }
            ]
          },
          {
            "title": "Implémentation de la fonction de différence de dates à l'aide de fonctions fléchées",
            "text": "fr/step3.md",
            "verify": [
              {
                "name": "Vérifier la création du fichier JavaScript",
                "file": "verify3-1.sh",
                "hint": "Assurez-vous d'avoir créé le fichier dateDifference.js dans le répertoire du projet."
              }
            ]
          },
          {
            "title": "Création d'une application pratique",
            "text": "fr/step4.md",
            "verify": [
              {
                "name": "Vérifier l'application de minuteur",
                "file": "verify4-1.sh",
                "hint": "Assurez-vous d'avoir créé le fichier timer.js dans le répertoire du projet."
              }
            ]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Datumsdifferenz in Sekunden",
      "description": "In diesem Lab werden wir untersuchen, wie man die Differenz zwischen zwei Daten in Sekunden mit JavaScript berechnet. Das Lab bietet eine Funktion, die zwei Date-Objekte als Eingabe nimmt und die Differenz zwischen ihnen in Sekunden zurückgibt. Dies kann in verschiedenen Anwendungen nützlich sein, wie z. B. beim Messen von Zeitintervallen oder beim Berechnen der Dauer zwischen zwei Ereignissen. Am Ende dieses Labs werden Sie besser verstehen, wie man mit Daten in JavaScript arbeitet und wie man Zeitberechnungen mit integrierten Methoden durchführt.",
      "meta": {
        "title": "Berechnen Sie die Datumsdifferenz in Sekunden mit JavaScript",
        "description": "Lernen Sie, wie Sie die Differenz zwischen zwei Daten in Sekunden mit JavaScript berechnen.",
        "keywords": "javascript, JavaScript Übung, Datumsdifferenz, Online-JavaScript-Übung, Datumsmanipulation, Sekunden, JavaScript-Lab, Zeitberechnung, JavaScript-Tutor"
      },
      "details": {
        "steps": [
          {
            "title": "Erste Schritte mit JavaScript-Date-Objekten",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Überprüfen Sie die Verwendung von Node im Zsh-Verlauf",
                "file": "verify1-1.sh",
                "hint": "Stellen Sie sicher, dass Sie die Node.js-Umgebung gestartet haben, indem Sie 'node' im Terminal eingegeben haben."
              }
            ]
          },
          {
            "title": "Grundlagen der Datumsberechnungen in JavaScript",
            "text": "de/step2.md",
            "verify": [
              {
                "name": "Überprüfen Sie die Datumsberechnung",
                "file": "verify2-1.sh",
                "hint": "Stellen Sie sicher, dass Sie Datumsberechnungen in der Node.js-Umgebung geübt haben."
              }
            ]
          },
          {
            "title": "Implementierung der Datumsdifferenz-Funktion mit Pfeilfunktionen",
            "text": "de/step3.md",
            "verify": [
              {
                "name": "Überprüfen Sie die Erstellung der JavaScript-Datei",
                "file": "verify3-1.sh",
                "hint": "Stellen Sie sicher, dass Sie die dateDifference.js-Datei im Projektverzeichnis erstellt haben."
              }
            ]
          },
          {
            "title": "Erstellung einer praktischen Anwendung",
            "text": "de/step4.md",
            "verify": [
              {
                "name": "Überprüfen Sie die Timer-Anwendung",
                "file": "verify4-1.sh",
                "hint": "Stellen Sie sicher, dass Sie die timer.js-Datei im Projektverzeichnis erstellt haben."
              }
            ]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "日付の差を秒単位で計算する",
      "description": "この実験では、JavaScript を使って 2 つの日付の差を秒単位で計算する方法を探ります。この実験では、2 つの Date オブジェクトを入力として受け取り、それらの差を秒単位で返す関数を提供します。これは、時間間隔の測定や 2 つのイベント間の期間の計算など、様々なアプリケーションで役立ちます。この実験の終わりまでに、JavaScript で日付を扱う方法や、組み込みメソッドを使って時間計算を行う方法をより深く理解するようになります。",
      "meta": {
        "title": "JavaScript で日付の差を秒単位で計算する",
        "description": "JavaScript を使って 2 つの日付の差を秒単位で計算する方法を学びましょう。",
        "keywords": "JavaScript, JavaScript の練習，日付の差，オンラインでの JavaScript 練習，日付操作，秒，JavaScript 実験，時間計算，JavaScript チューター"
      },
      "details": {
        "steps": [
          {
            "title": "JavaScript の Date オブジェクトの始め方",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "Zsh 履歴で Node の使用を確認する",
                "file": "verify1-1.sh",
                "hint": "ターミナルで 'node' と入力して Node.js 環境を起動していることを確認してください。"
              }
            ]
          },
          {
            "title": "JavaScript での日付計算の理解",
            "text": "ja/step2.md",
            "verify": [
              {
                "name": "日付計算の確認",
                "file": "verify2-1.sh",
                "hint": "Node.js 環境で日付計算の練習を行ったことを確認してください。"
              }
            ]
          },
          {
            "title": "アロー関数を使用した日付差関数の実装",
            "text": "ja/step3.md",
            "verify": [
              {
                "name": "JavaScript ファイル作成の確認",
                "file": "verify3-1.sh",
                "hint": "プロジェクトディレクトリに dateDifference.js ファイルを作成したことを確認してください。"
              }
            ]
          },
          {
            "title": "実用的なアプリケーションの作成",
            "text": "ja/step4.md",
            "verify": [
              {
                "name": "タイマーアプリケーションの確認",
                "file": "verify4-1.sh",
                "hint": "プロジェクトディレクトリに timer.js ファイルを作成したことを確認してください。"
              }
            ]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Разница между датами в секундах",
      "description": "В этом практическом занятии (лабораторной работе) мы рассмотрим, как вычислять разницу между двумя датами в секундах с использованием JavaScript. В рамках практики будет представлена функция, которая принимает два объекта Date в качестве входных данных и возвращает разницу между ними в секундах. Это может быть полезно в различных приложениях, например, для измерения временных интервалов или вычисления продолжительности между двумя событиями. По завершении этого практического занятия вы лучше поймете, как работать с датами в JavaScript и как выполнять расчеты времени с использованием встроенных методов.",
      "meta": {
        "title": "Вычислить разницу между датами в секундах с помощью JavaScript",
        "description": "Узнайте, как вычислять разницу между двумя датами в секундах с использованием JavaScript.",
        "keywords": "javascript, практика JavaScript, разница между датами, онлайн - практика JavaScript, манипуляция с датами, секунды, практика JavaScript, расчет времени, обучение JavaScript"
      },
      "details": {
        "steps": [
          {
            "title": "Начало работы с объектами Date в JavaScript",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "Проверить использование Node в истории Zsh",
                "file": "verify1-1.sh",
                "hint": "Убедитесь, что вы запустили среду Node.js, введя 'node' в терминале."
              }
            ]
          },
          {
            "title": "Понимание расчетов дат в JavaScript",
            "text": "ru/step2.md",
            "verify": [
              {
                "name": "Проверить расчет дат",
                "file": "verify2-1.sh",
                "hint": "Убедитесь, что вы потренировались в расчетах дат в среде Node.js."
              }
            ]
          },
          {
            "title": "Реализация функции вычисления разницы между датами с использованием стрелочных функций",
            "text": "ru/step3.md",
            "verify": [
              {
                "name": "Проверить создание JavaScript-файла",
                "file": "verify3-1.sh",
                "hint": "Убедитесь, что вы создали файл dateDifference.js в директории проекта."
              }
            ]
          },
          {
            "title": "Создание практического приложения",
            "text": "ru/step4.md",
            "verify": [
              {
                "name": "Проверить приложение - таймер",
                "file": "verify4-1.sh",
                "hint": "Убедитесь, что вы создали файл timer.js в директории проекта."
              }
            ]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    },
    {
      "lang": "ko",
      "title": "JavaScript 로 날짜 차이 계산하기 (초)",
      "description": "이 랩에서는 JavaScript 를 사용하여 두 날짜 간의 차이를 초 단위로 계산하는 방법을 살펴봅니다. 랩에서는 두 개의 Date 객체를 입력으로 받아 초 단위의 차이를 반환하는 함수를 제공합니다. 이는 시간 간격을 측정하거나 두 이벤트 간의 기간을 계산하는 등 다양한 애플리케이션에서 유용할 수 있습니다. 이 랩을 마치면 JavaScript 에서 날짜를 사용하는 방법과 내장 메서드를 사용하여 시간 계산을 수행하는 방법에 대한 이해도가 높아질 것입니다.",
      "meta": {
        "title": "JavaScript 로 날짜 차이 (초) 계산 방법 - 튜토리얼",
        "description": "JavaScript 를 사용하여 두 날짜 간의 차이를 초 단위로 계산하는 방법을 알아보세요.",
        "keywords": "자바스크립트, 자바스크립트 연습, 날짜 차이, 자바스크립트 연습 온라인, 날짜 조작, 초, 자바스크립트 랩, 시간 계산, 자바스크립트 튜터"
      },
      "details": {
        "steps": [
          {
            "title": "JavaScript Date 객체 시작하기",
            "text": "ko/step1.md",
            "verify": [
              {
                "name": "Zsh 히스토리에서 Node 사용 확인",
                "file": "verify1-1.sh",
                "hint": "터미널에 'node'를 입력하여 Node.js 환경을 시작했는지 확인하세요."
              }
            ]
          },
          {
            "title": "JavaScript 날짜 계산 이해하기",
            "text": "ko/step2.md",
            "verify": [
              {
                "name": "날짜 계산 확인",
                "file": "verify2-1.sh",
                "hint": "Node.js 환경에서 날짜 계산을 연습했는지 확인하세요."
              }
            ]
          },
          {
            "title": "화살표 함수를 사용한 날짜 차이 함수 구현",
            "text": "ko/step3.md",
            "verify": [
              {
                "name": "JavaScript 파일 생성 확인",
                "file": "verify3-1.sh",
                "hint": "프로젝트 디렉토리에 dateDifference.js 파일을 생성했는지 확인하세요."
              }
            ]
          },
          {
            "title": "실용적인 애플리케이션 생성",
            "text": "ko/step4.md",
            "verify": [
              {
                "name": "타이머 애플리케이션 확인",
                "file": "verify4-1.sh",
                "hint": "프로젝트 디렉토리에 timer.js 파일을 생성했는지 확인하세요."
              }
            ]
          }
        ],
        "intro": {
          "text": "ko/intro.md",
          "title": "소개"
        },
        "finish": {
          "text": "ko/finish.md",
          "title": "요약"
        }
      }
    },
    {
      "lang": "pt",
      "title": "Diferença de Datas em Segundos",
      "description": "Neste laboratório, exploraremos como calcular a diferença entre duas datas em segundos usando JavaScript. O laboratório fornecerá uma função que recebe dois objetos Date como entrada e retorna a diferença entre eles em segundos. Isso pode ser útil em várias aplicações, como medir intervalos de tempo ou calcular a duração entre dois eventos. Ao final deste laboratório, você terá uma melhor compreensão de como trabalhar com datas em JavaScript e como realizar cálculos de tempo usando métodos integrados.",
      "meta": {
        "title": "Calcular Diferença de Datas em Segundos com JavaScript - Tutorial",
        "description": "Aprenda a calcular a diferença entre duas datas em segundos usando JavaScript. Tutorial prático e fácil de seguir.",
        "keywords": "javascript, javascript tutorial, diferença de datas, cálculo de tempo, datas em javascript, segundos, tutorial javascript, manipulação de datas, javascript online, programação javascript"
      },
      "details": {
        "steps": [
          {
            "title": "Começando com Objetos Date em JavaScript",
            "text": "pt/step1.md",
            "verify": [
              {
                "name": "Verificar Uso do Node no Histórico Zsh",
                "file": "verify1-1.sh",
                "hint": "Certifique-se de ter iniciado o ambiente Node.js digitando 'node' no terminal."
              }
            ]
          },
          {
            "title": "Entendendo Cálculos de Data em JavaScript",
            "text": "pt/step2.md",
            "verify": [
              {
                "name": "Verificar Cálculo de Data",
                "file": "verify2-1.sh",
                "hint": "Certifique-se de ter praticado cálculos de data no ambiente Node.js."
              }
            ]
          },
          {
            "title": "Implementando a Função de Diferença de Data Usando Arrow Functions",
            "text": "pt/step3.md",
            "verify": [
              {
                "name": "Verificar Criação do Arquivo JavaScript",
                "file": "verify3-1.sh",
                "hint": "Certifique-se de ter criado o arquivo dateDifference.js no diretório do projeto."
              }
            ]
          },
          {
            "title": "Criando uma Aplicação Prática",
            "text": "pt/step4.md",
            "verify": [
              {
                "name": "Verificar Aplicação Timer",
                "file": "verify4-1.sh",
                "hint": "Certifique-se de ter criado o arquivo timer.js no diretório do projeto."
              }
            ]
          }
        ],
        "intro": {
          "text": "pt/intro.md",
          "title": "Introdução"
        },
        "finish": {
          "text": "pt/finish.md",
          "title": "Resumo"
        }
      }
    }
  ]
}
