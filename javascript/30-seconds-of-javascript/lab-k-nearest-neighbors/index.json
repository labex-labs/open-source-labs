{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Implementing K-Nearest Neighbors in JavaScript",
  "description": "In this lab, we will explore the K-Nearest Neighbors algorithm, a powerful tool for classification of data points. By implementing this algorithm in JavaScript, we will be able to classify new data points based on their proximity to existing labeled data points, making it a valuable tool for a variety of applications, such as recommendation systems and image recognition. Through this lab, we will gain a deeper understanding of how machine learning algorithms work and how they can be implemented in real-world scenarios.",
  "meta": {
    "title": "K-Nearest Neighbors Algorithm | JavaScript Machine Learning",
    "description": "Explore the K-Nearest Neighbors algorithm, a powerful tool for data classification, and learn how to implement it in JavaScript for real-world applications.",
    "keywords": "K-Nearest Neighbors, JavaScript, Machine Learning, Data Classification, Recommendation Systems, Image Recognition"
  },
  "difficulty": "Beginner",
  "time": 10,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "K-Nearest Neighbors",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify Node Commands In Zsh History",
            "file": "verify1-1.sh",
            "hint": "JavaScript can be run in the Terminal/SSH by typing 'node' and pressing Enter.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "javascript/arith_ops",
          "javascript/array_methods",
          "javascript/comp_ops",
          "javascript/cond_stmts",
          "javascript/data_types",
          "javascript/higher_funcs",
          "javascript/obj_manip",
          "javascript/spread_rest",
          "javascript/variables"
        ]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["Lotus-7"],
  "license": {
    "name": "CC-BY-4.0",
    "url": "https://github.com/30-seconds/30-seconds-of-code/blob/master/LICENSE",
    "repo": "https://github.com/30-seconds/30-seconds-of-code"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "在JavaScript中实现K近邻算法",
      "description": "在本实验中，我们将探索K近邻算法，这是一种用于对数据点进行分类的强大工具。通过在JavaScript中实现此算法，我们将能够根据新数据点与现有标记数据点的接近程度对其进行分类，使其成为各种应用（如推荐系统和图像识别）的宝贵工具。通过本实验，我们将更深入地了解机器学习算法的工作原理以及它们如何在实际场景中实现。",
      "meta": {
        "title": "K近邻算法 | JavaScript机器学习",
        "description": "探索K近邻算法，这是一种用于数据分类的强大工具，并学习如何在JavaScript中为实际应用实现它。",
        "keywords": "K近邻算法, JavaScript, 机器学习, 数据分类, 推荐系统, 图像识别"
      },
      "details": {
        "steps": [
          {
            "title": "K近邻算法",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "在Zsh历史记录中验证Node命令",
                "file": "verify1-1.sh",
                "hint": "通过在终端/SSH中输入'node'并按回车键，可以运行JavaScript。"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    }
  ]
}
