{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Split Strings Into Line Array",
  "description": "In this lab, we will explore how to split a multiline string into an array of lines using JavaScript. We will use the String.prototype.split() method and a regular expression to match line breaks and create an array of individual lines. This will be a useful skill for parsing and manipulating text data in web development projects.",
  "meta": {
    "title": "Mastering Multiline String Manipulation | JavaScript Coding",
    "description": "Learn how to split multiline strings into arrays of lines using JavaScript. Useful for parsing and manipulating text data in web development projects.",
    "keywords": "JavaScript, Coding, Multiline String, String Manipulation, Text Parsing, Web Development"
  },
  "difficulty": "Beginner",
  "time": 5,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Split Into Lines",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify Node Commands in Zsh History",
            "file": "verify1-1.sh",
            "hint": "JavaScript can be run in the Terminal/SSH by typing 'node' and pressing Enter.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": []
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["Lotus-7"],
  "license": {
    "name": "CC-BY-4.0",
    "url": "https://github.com/30-seconds/30-seconds-of-code/blob/master/LICENSE",
    "repo": "https://github.com/30-seconds/30-seconds-of-code"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "将字符串拆分为行数组",
      "description": "在本实验中，我们将探索如何使用 JavaScript 将多行字符串拆分为行数组。我们将使用 String.prototype.split() 方法和正则表达式来匹配换行符并创建一个包含各行的数组。这对于在 Web 开发项目中解析和处理文本数据将是一项有用的技能。",
      "meta": {
        "title": "掌握多行字符串操作 | JavaScript 编码",
        "description": "学习如何使用 JavaScript 将多行字符串拆分为行数组。对 Web 开发项目中的文本数据解析和操作很有用。",
        "keywords": "JavaScript, 编码，多行字符串，字符串操作，文本解析，Web 开发"
      },
      "details": {
        "steps": [
          {
            "title": "拆分为行",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "在 Zsh 历史记录中验证 Node 命令",
                "file": "verify1-1.sh",
                "hint": "通过输入'node'并按 Enter 键，可以在终端/SSH 中运行 JavaScript。"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Dividir cadenas en una matriz de líneas",
      "description": "En este laboratorio, exploraremos cómo dividir una cadena de texto de varias líneas en una matriz de líneas utilizando JavaScript. Utilizaremos el método String.prototype.split() y una expresión regular para coincidir con los saltos de línea y crear una matriz de líneas individuales. Esta será una habilidad útil para analizar y manipular datos de texto en proyectos de desarrollo web.",
      "meta": {
        "title": "Dominando la manipulación de cadenas de texto de varias líneas | Codificación en JavaScript",
        "description": "Aprende cómo dividir cadenas de texto de varias líneas en matrices de líneas utilizando JavaScript. Útil para analizar y manipular datos de texto en proyectos de desarrollo web.",
        "keywords": "JavaScript, Codificación, Cadena de texto de varias líneas, Manipulación de cadenas, Análisis de texto, Desarrollo web"
      },
      "details": {
        "steps": [
          {
            "title": "Dividir en Líneas",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Verificar los comandos de Node en el historial de Zsh",
                "file": "verify1-1.sh",
                "hint": "Se puede ejecutar JavaScript en la Terminal/SSH escribiendo 'node' y presionando Enter."
              }
            ]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Diviser les chaînes de caractères en tableau de lignes",
      "description": "Dans ce laboratoire, nous allons explorer la manière de diviser une chaîne de caractères multiligne en un tableau de lignes à l'aide de JavaScript. Nous utiliserons la méthode String.prototype.split() et une expression régulière pour correspondre aux sauts de ligne et créer un tableau de lignes individuelles. Cela sera une compétence utile pour analyser et manipuler les données textuelles dans les projets de développement web.",
      "meta": {
        "title": "Maîtriser la manipulation des chaînes de caractères multilignes | Codage JavaScript",
        "description": "Découvrez comment diviser les chaînes de caractères multilignes en tableaux de lignes à l'aide de JavaScript. Utile pour analyser et manipuler les données textuelles dans les projets de développement web.",
        "keywords": "JavaScript, Codage, Chaîne de caractères multiligne, Manipulation de chaînes de caractères, Analyse de texte, Développement web"
      },
      "details": {
        "steps": [
          {
            "title": "Diviser en lignes",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Vérifier les commandes Node dans l'historique Zsh",
                "file": "verify1-1.sh",
                "hint": "JavaScript peut être exécuté dans le Terminal/SSH en tapant 'node' et en appuyant sur Entrée."
              }
            ]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Zeichenfolgen in Zeilenarray aufteilen",
      "description": "In diesem Lab werden wir untersuchen, wie man eine mehrzeilige Zeichenfolge in ein Array von Zeilen mit JavaScript aufteilt. Wir werden die String.prototype.split()-Methode und eine reguläre Ausdrucksmuster verwenden, um Zeilenumbrüche zu finden und ein Array von einzelnen Zeilen zu erstellen. Dies wird eine nützliche Technik für die Analyse und Bearbeitung von Textdaten in Webbasierte Projekte sein.",
      "meta": {
        "title": "Meisterung der Manipulation von mehrzeiligen Zeichenfolgen | JavaScript-Coding",
        "description": "Lernen Sie, wie Sie mehrzeilige Zeichenfolgen in Arrays von Zeilen mit JavaScript aufteilen. Nützlich für die Analyse und Bearbeitung von Textdaten in Webbasierte Projekte.",
        "keywords": "JavaScript, Coding, Mehrzeilige Zeichenfolge, Zeichenfolgenmanipulation, Textanalyse, Webbasierte Entwicklung"
      },
      "details": {
        "steps": [
          {
            "title": "In Zeilen aufteilen",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Überprüfen von Node-Befehlen in der Zsh-Geschichte",
                "file": "verify1-1.sh",
                "hint": "JavaScript kann im Terminal/SSH ausgeführt werden, indem man 'node' eingibt und die Eingabetaste drückt."
              }
            ]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "文字列を行の配列に分割する",
      "description": "この実験では、JavaScript を使って複数行の文字列を行の配列に分割する方法を探ります。`String.prototype.split()` メソッドと正規表現を使って、改行をマッチさせて個々の行の配列を作成します。これは、Web 開発プロジェクトにおけるテキストデータの解析と操作に役立つスキルになります。",
      "meta": {
        "title": "複数行文字列操作のマスター | JavaScript コーディング",
        "description": "JavaScript を使って複数行文字列を行の配列に分割する方法を学びましょう。Web 開発プロジェクトにおけるテキストデータの解析と操作に役立ちます。",
        "keywords": "JavaScript, コーディング，複数行文字列，文字列操作，テキスト解析，Web 開発"
      },
      "details": {
        "steps": [
          {
            "title": "行に分割する",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "Zsh 履歴の Node コマンドを確認する",
                "file": "verify1-1.sh",
                "hint": "ターミナル/SSH では、'node'と入力して Enter キーを押すことで JavaScript を実行できます。"
              }
            ]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Разделение строк на массив строк",
      "description": "В этом практическом занятии мы изучим, как разбить многострочную строку на массив строк с помощью JavaScript. Мы будем использовать метод String.prototype.split() и регулярное выражение для сопоставления символов конца строки и создания массива отдельных строк. Это будет полезным навыком при разборе и обработке текстовых данных в веб-разработке.",
      "meta": {
        "title": "Мастерство в манипуляции с многострочными строками | JavaScript-программирование",
        "description": "Изучите, как разбивать многострочные строки на массивы строк с помощью JavaScript. Полезно для разбора и обработки текстовых данных в веб-разработке.",
        "keywords": "JavaScript, Программирование, Многострочная строка, Обработка строк, Разбор текста, Веб-разработка"
      },
      "details": {
        "steps": [
          {
            "title": "Разбить на строки",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "Проверить команды Node в истории Zsh",
                "file": "verify1-1.sh",
                "hint": "JavaScript можно запустить в Терминале/SSH, введя 'node' и нажав Enter."
              }
            ]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    },
    {
      "lang": "ko",
      "title": "문자열을 줄 배열로 분할하기",
      "description": "이 랩에서는 JavaScript 를 사용하여 여러 줄 문자열을 줄 배열로 분할하는 방법을 살펴봅니다. String.prototype.split() 메서드와 정규 표현식 (regular expression) 을 사용하여 줄 바꿈을 일치시키고 개별 줄의 배열을 생성합니다. 이는 웹 개발 프로젝트에서 텍스트 데이터를 구문 분석하고 조작하는 데 유용한 기술이 될 것입니다.",
      "meta": {
        "title": "JavaScript 코딩: 여러 줄 문자열 조작 마스터하기",
        "description": "JavaScript 를 사용하여 여러 줄 문자열을 줄 배열로 분할하는 방법을 배우세요. 웹 개발 프로젝트에서 텍스트 데이터를 구문 분석하고 조작하는 데 유용합니다.",
        "keywords": "JavaScript, 코딩, 여러 줄 문자열, 문자열 조작, 텍스트 파싱, 웹 개발"
      },
      "details": {
        "steps": [
          {
            "title": "줄로 분할",
            "text": "ko/step1.md",
            "verify": [
              {
                "name": "Zsh 히스토리에서 Node 명령어 확인",
                "file": "verify1-1.sh",
                "hint": "'node'를 입력하고 Enter 키를 눌러 터미널/SSH 에서 JavaScript 를 실행할 수 있습니다."
              }
            ]
          }
        ],
        "intro": {
          "text": "ko/intro.md",
          "title": "소개"
        },
        "finish": {
          "text": "ko/finish.md",
          "title": "요약"
        }
      }
    },
    {
      "lang": "pt",
      "title": "Dividir Strings em Array de Linhas",
      "description": "Neste laboratório, exploraremos como dividir uma string de múltiplas linhas em um array de linhas usando JavaScript. Usaremos o método String.prototype.split() e uma expressão regular para corresponder a quebras de linha e criar um array de linhas individuais. Esta será uma habilidade útil para analisar e manipular dados de texto em projetos de desenvolvimento web.",
      "meta": {
        "title": "Dominando a Manipulação de Strings Multilinhas | Codificação JavaScript",
        "description": "Aprenda a dividir strings multilinhas em arrays de linhas usando JavaScript. Útil para analisar e manipular dados de texto em projetos de desenvolvimento web.",
        "keywords": "JavaScript, Codificação, String Multilinha, Manipulação de Strings, Análise de Texto, Desenvolvimento Web"
      },
      "details": {
        "steps": [
          {
            "title": "Dividir em Linhas",
            "text": "pt/step1.md",
            "verify": [
              {
                "name": "Verificar Comandos Node no Histórico Zsh",
                "file": "verify1-1.sh",
                "hint": "JavaScript pode ser executado no Terminal/SSH digitando 'node' e pressionando Enter."
              }
            ]
          }
        ],
        "intro": {
          "text": "pt/intro.md",
          "title": "Introdução"
        },
        "finish": {
          "text": "pt/finish.md",
          "title": "Resumo"
        }
      }
    }
  ]
}
