{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Weighted Random Sampling in JavaScript",
  "description": "In this lab, we will explore a practical implementation of a weighted sample function in JavaScript. The function returns a random element from an array, with probabilities assigned to each element based on the provided weights. Through this lab, we will learn how to use Array methods such as reduce() and findIndex() along with Math.random() to generate the desired outcome.",
  "meta": {
    "title": "Weighted Sample | JavaScript | Programming Tutorial",
    "description": "Learn how to implement a weighted sample function in JavaScript, using Array methods and Math.random() to generate random elements based on provided weights.",
    "keywords": "JavaScript, Programming, Weighted Sample, Random, Array Methods"
  },
  "difficulty": "Beginner",
  "time": 10,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Weighted Sample",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify Node Command Usage",
            "file": "verify1-1.sh",
            "hint": "JavaScript can be run in the Terminal/SSH by typing 'node' and pressing Enter.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "javascript/arith_ops",
          "javascript/comp_ops",
          "javascript/data_types",
          "javascript/higher_funcs",
          "javascript/spread_rest",
          "javascript/variables"
        ]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["Lotus-7"],
  "license": {
    "name": "CC-BY-4.0",
    "url": "https://github.com/30-seconds/30-seconds-of-code/blob/master/LICENSE",
    "repo": "https://github.com/30-seconds/30-seconds-of-code"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "JavaScript 中的加权随机采样",
      "description": "在本实验中，我们将探索如何在 JavaScript 中实际实现一个加权采样函数。该函数从一个数组中返回一个随机元素，并根据提供的权重为每个元素分配概率。通过本实验，我们将学习如何使用诸如 reduce() 和 findIndex() 等数组方法，以及 Math.random() 来生成预期的结果。",
      "meta": {
        "title": "加权采样 | JavaScript | 编程教程",
        "description": "学习如何在 JavaScript 中实现一个加权采样函数，使用数组方法和 Math.random() 根据提供的权重生成随机元素。",
        "keywords": "JavaScript, 编程，加权采样，随机，数组方法"
      },
      "details": {
        "steps": [
          {
            "title": "加权采样",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "验证 Node 命令的用法",
                "file": "verify1-1.sh",
                "hint": "在终端/SSH 中，通过输入'node'并按下回车键，可以运行 JavaScript。"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Muestreo Aleatorio Ponderado en JavaScript",
      "description": "En este laboratorio, exploraremos una implementación práctica de una función de muestra ponderada en JavaScript. La función devuelve un elemento aleatorio de una matriz, con probabilidades asignadas a cada elemento según los pesos proporcionados. A través de este laboratorio, aprenderemos a usar métodos de matriz como reduce() y findIndex() junto con Math.random() para generar el resultado deseado.",
      "meta": {
        "title": "Muestra Ponderada | JavaScript | Tutorial de Programación",
        "description": "Aprende cómo implementar una función de muestra ponderada en JavaScript, usando métodos de matriz y Math.random() para generar elementos aleatorios basados en los pesos proporcionados.",
        "keywords": "JavaScript, Programación, Muestra Ponderada, Aleatorio, Métodos de Matriz"
      },
      "details": {
        "steps": [
          {
            "title": "Muestra Ponderada",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Verificar el Uso del Comando Node",
                "file": "verify1-1.sh",
                "hint": "JavaScript se puede ejecutar en la Terminal/SSH escribiendo 'node' y presionando Enter."
              }
            ]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Échantillonnage aléatoire pondéré en JavaScript",
      "description": "Dans ce laboratoire, nous allons explorer une implémentation pratique d'une fonction d'échantillonnage pondéré en JavaScript. La fonction renvoie un élément aléatoire d'un tableau, avec des probabilités attribuées à chaque élément sur la base des poids fournis. Grâce à ce laboratoire, nous apprendrons à utiliser des méthodes de tableau telles que reduce() et findIndex() ainsi que Math.random() pour générer le résultat souhaité.",
      "meta": {
        "title": "Échantillonnage pondéré | JavaScript | Tutoriel de programmation",
        "description": "Découvrez comment implémenter une fonction d'échantillonnage pondéré en JavaScript, en utilisant des méthodes de tableau et Math.random() pour générer des éléments aléatoires sur la base de poids fournis.",
        "keywords": "JavaScript, Programmation, Échantillonnage pondéré, Aléatoire, Méthodes de tableau"
      },
      "details": {
        "steps": [
          {
            "title": "Échantillonnage pondéré",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Vérifier l'utilisation de la commande Node",
                "file": "verify1-1.sh",
                "hint": "JavaScript peut être exécuté dans le Terminal/SSH en tapant 'node' et en appuyant sur Entrée."
              }
            ]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Gewichtetes Zufallsausprobieren in JavaScript",
      "description": "In diesem Lab werden wir eine praktische Implementierung einer gewichteten Stichprobe-Funktion in JavaScript untersuchen. Die Funktion gibt ein zufälliges Element aus einem Array zurück, wobei jedem Element Gewichte zugewiesen werden, basierend auf den bereitgestellten Werten. Durch dieses Lab werden wir lernen, wie Array-Methoden wie reduce() und findIndex() zusammen mit Math.random() verwendet werden, um das gewünschte Ergebnis zu generieren.",
      "meta": {
        "title": "Gewichtete Stichprobe | JavaScript | Programmier-Tutorial",
        "description": "Lernen Sie, wie Sie eine gewichtete Stichprobe-Funktion in JavaScript implementieren, indem Sie Array-Methoden und Math.random() verwenden, um zufällige Elemente basierend auf bereitgestellten Gewichten zu generieren.",
        "keywords": "JavaScript, Programmierung, Gewichtete Stichprobe, Zufall, Array-Methoden"
      },
      "details": {
        "steps": [
          {
            "title": "Gewichtete Stichprobe",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Überprüfen der Verwendung des Node-Befehls",
                "file": "verify1-1.sh",
                "hint": "JavaScript kann im Terminal/SSH ausgeführt werden, indem man 'node' eingibt und die Eingabetaste drückt."
              }
            ]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "JavaScript における重み付きランダムサンプリング",
      "description": "この実験では、JavaScript における重み付きサンプル関数の実際の実装を検討します。この関数は、配列からランダムな要素を返し、各要素には提供された重みに基づいて確率が割り当てられます。この実験を通じて、reduce() や findIndex() などの配列メソッドと Math.random() を使って、目的の結果を生成する方法を学びます。",
      "meta": {
        "title": "重み付きサンプル | JavaScript | プログラミングチュートリアル",
        "description": "提供された重みに基づいてランダムな要素を生成するために、配列メソッドと Math.random() を使って JavaScript における重み付きサンプル関数を実装する方法を学びます。",
        "keywords": "JavaScript, プログラミング，重み付きサンプル，ランダム，配列メソッド"
      },
      "details": {
        "steps": [
          {
            "title": "重み付きサンプル",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "Node コマンドの使用を確認する",
                "file": "verify1-1.sh",
                "hint": "ターミナル/SSH で 'node' と入力して Enter キーを押すことで、JavaScript を実行できます。"
              }
            ]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Взвешенная случайная выборка в JavaScript",
      "description": "В этом лабе мы исследуем практическую реализацию функции взвешенной выборки в JavaScript. Функция возвращает случайный элемент из массива, при этом каждому элементу назначаются вероятности на основе предоставленных весов. С помощью этого лабы мы узнаем, как использовать методы массива, такие как reduce() и findIndex(), вместе с Math.random(), чтобы получить желаемый результат.",
      "meta": {
        "title": "Взвешенная выборка | JavaScript | Руководство по программированию",
        "description": "Изучите, как реализовать функцию взвешенной выборки в JavaScript, используя методы массива и Math.random(), чтобы генерировать случайные элементы на основе предоставленных весов.",
        "keywords": "JavaScript, Программирование, Взвешенная выборка, Случайная, Методы массива"
      },
      "details": {
        "steps": [
          {
            "title": "Взвешенная выборка",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "Проверить использование команды Node",
                "file": "verify1-1.sh",
                "hint": "JavaScript можно запустить в Терминале/SSH, введя 'node' и нажав Enter."
              }
            ]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    }
  ]
}
