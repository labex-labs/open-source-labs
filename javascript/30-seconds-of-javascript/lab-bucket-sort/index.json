{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Implementing Bucket Sort in JavaScript",
  "description": "In this lab, we will explore the bucket sort algorithm in JavaScript. Bucket sort is a sorting algorithm that works by distributing the elements of an array into a number of buckets. Each bucket is then sorted individually, either using a different sorting algorithm or by recursively applying the bucket sorting algorithm. This lab will provide you with an opportunity to implement this algorithm and gain a deeper understanding of how it works.",
  "meta": {
    "title": "Bucket Sort Algorithm | JavaScript Coding Lab",
    "description": "Explore the bucket sort algorithm in JavaScript and learn how to implement it step-by-step. Gain a deeper understanding of this sorting technique.",
    "keywords": "bucket sort, JavaScript, sorting algorithm, coding lab, programming tutorial"
  },
  "difficulty": "Beginner",
  "time": 10,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Bucket Sort",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify Node Commands In Zsh History",
            "file": "verify1-1.sh",
            "hint": "JavaScript can be run in the Terminal/SSH by typing 'node' and pressing Enter.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "javascript/arith_ops",
          "javascript/comp_ops",
          "javascript/data_types",
          "javascript/higher_funcs",
          "javascript/spread_rest",
          "javascript/variables"
        ]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["Lotus-7"],
  "license": {
    "name": "CC-BY-4.0",
    "url": "https://github.com/30-seconds/30-seconds-of-code/blob/master/LICENSE",
    "repo": "https://github.com/30-seconds/30-seconds-of-code"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "在 JavaScript 中实现桶排序",
      "description": "在本实验中，我们将探索 JavaScript 中的桶排序算法。桶排序是一种排序算法，其工作原理是将数组中的元素分配到多个桶中。然后，每个桶单独进行排序，可以使用不同的排序算法，也可以通过递归应用桶排序算法。本实验将为你提供一个实现此算法的机会，并让你更深入地了解它的工作原理。",
      "meta": {
        "title": "桶排序算法 | JavaScript 编码实验",
        "description": "探索 JavaScript 中的桶排序算法，并学习如何逐步实现它。深入了解这种排序技术。",
        "keywords": "桶排序, JavaScript, 排序算法, 编码实验, 编程教程"
      },
      "details": {
        "steps": [
          {
            "title": "桶排序",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "在 Zsh 历史记录中验证 Node 命令",
                "file": "verify1-1.sh",
                "hint": "在终端/SSH 中，可以通过输入 'node' 并按回车键来运行 JavaScript。"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    }
  ]
}
