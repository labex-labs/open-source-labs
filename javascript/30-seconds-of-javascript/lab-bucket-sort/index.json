{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Implementing Bucket Sort in JavaScript",
  "description": "In this lab, we will explore the bucket sort algorithm in JavaScript. Bucket sort is a sorting algorithm that works by distributing the elements of an array into a number of buckets. Each bucket is then sorted individually, either using a different sorting algorithm or by recursively applying the bucket sorting algorithm. This lab will provide you with an opportunity to implement this algorithm and gain a deeper understanding of how it works.",
  "meta": {
    "title": "Bucket Sort Algorithm | JavaScript Coding Lab",
    "description": "Explore the bucket sort algorithm in JavaScript and learn how to implement it step-by-step. Gain a deeper understanding of this sorting technique.",
    "keywords": "bucket sort, JavaScript, sorting algorithm, coding lab, programming tutorial"
  },
  "difficulty": "Beginner",
  "time": 10,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Bucket Sort",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify Node Commands In Zsh History",
            "file": "verify1-1.sh",
            "hint": "JavaScript can be run in the Terminal/SSH by typing 'node' and pressing Enter.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "javascript/arith_ops",
          "javascript/comp_ops",
          "javascript/data_types",
          "javascript/higher_funcs",
          "javascript/spread_rest",
          "javascript/variables"
        ]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["Lotus-7"],
  "license": {
    "name": "CC-BY-4.0",
    "url": "https://github.com/30-seconds/30-seconds-of-code/blob/master/LICENSE",
    "repo": "https://github.com/30-seconds/30-seconds-of-code"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "在 JavaScript 中实现桶排序",
      "description": "在本实验中，我们将探索 JavaScript 中的桶排序算法。桶排序是一种排序算法，其工作原理是将数组中的元素分配到多个桶中。然后，每个桶单独进行排序，可以使用不同的排序算法，也可以通过递归应用桶排序算法。本实验将为你提供一个实现此算法的机会，并让你更深入地了解它的工作原理。",
      "meta": {
        "title": "桶排序算法 | JavaScript 编码实验",
        "description": "探索 JavaScript 中的桶排序算法，并学习如何逐步实现它。深入了解这种排序技术。",
        "keywords": "桶排序，JavaScript, 排序算法，编码实验，编程教程"
      },
      "details": {
        "steps": [
          {
            "title": "桶排序",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "在 Zsh 历史记录中验证 Node 命令",
                "file": "verify1-1.sh",
                "hint": "在终端/SSH 中，可以通过输入 'node' 并按回车键来运行 JavaScript。"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Implementando el bucket sort en JavaScript",
      "description": "En este laboratorio, exploraremos el algoritmo de bucket sort en JavaScript. El bucket sort es un algoritmo de clasificación que funciona distribuyendo los elementos de una matriz en una serie de cubetas. Cada cubeta se ordena por separado, ya sea utilizando un algoritmo de clasificación diferente o aplicando recursivamente el algoritmo de bucket sort. Este laboratorio te brindará la oportunidad de implementar este algoritmo y adquirir una comprensión más profunda de cómo funciona.",
      "meta": {
        "title": "Algoritmo de bucket sort | Laboratorio de codificación de JavaScript",
        "description": "Explore el algoritmo de bucket sort en JavaScript y aprenda cómo implementarlo paso a paso. Adquiera una comprensión más profunda de esta técnica de clasificación.",
        "keywords": "bucket sort, JavaScript, algoritmo de clasificación, laboratorio de codificación, tutorial de programación"
      },
      "details": {
        "steps": [
          {
            "title": "Bucket Sort",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Verificar comandos de Node en el historial de Zsh",
                "file": "verify1-1.sh",
                "hint": "JavaScript se puede ejecutar en la Terminal/SSH escribiendo 'node' y presionando Enter."
              }
            ]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Implémentation du tri par bac en JavaScript",
      "description": "Dans ce laboratoire, nous allons explorer l'algorithme de tri par bac en JavaScript. Le tri par bac est un algorithme de tri qui fonctionne en distribuant les éléments d'un tableau dans un certain nombre de bac. Chaque bac est ensuite trié individuellement, soit en utilisant un autre algorithme de tri, soit en appliquant récursivement l'algorithme de tri par bac. Ce laboratoire vous donnera l'occasion de mettre en œuvre cet algorithme et de mieux comprendre comment il fonctionne.",
      "meta": {
        "title": "Algorithme de tri par bac | Laboratoire de codage JavaScript",
        "description": "Explorez l'algorithme de tri par bac en JavaScript et apprenez à le mettre en œuvre étape par étape. Améliorez votre compréhension de cette technique de tri.",
        "keywords": "tri par bac, JavaScript, algorithme de tri, laboratoire de codage, tutoriel de programmation"
      },
      "details": {
        "steps": [
          {
            "title": "Tri par bac",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Vérifier les commandes Node dans l'historique Zsh",
                "file": "verify1-1.sh",
                "hint": "JavaScript peut être exécuté dans le Terminal/SSH en tapant 'node' et en appuyant sur Entrée."
              }
            ]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Das Implementieren von Bucket Sort in JavaScript",
      "description": "In diesem Lab werden wir den Bucket-Sort-Algorithmus in JavaScript erkunden. Bucket Sort ist ein Sortieralgorithmus, der funktioniert, indem er die Elemente eines Arrays in eine Anzahl von Buckets verteilt. Anschließend wird jedes Bucket einzeln sortiert, entweder mit einem anderen Sortieralgorithmus oder indem der Bucket-Sortieralgorithmus rekursiv angewendet wird. In diesem Lab wird Ihnen die Möglichkeit geboten, diesen Algorithmus zu implementieren und einen tieferen Einblick in dessen Funktionsweise zu erhalten.",
      "meta": {
        "title": "Bucket-Sort-Algorithmus | JavaScript Coding Lab",
        "description": "Erkunden Sie den Bucket-Sort-Algorithmus in JavaScript und lernen Sie, wie Sie ihn schrittweise implementieren. Erlangen Sie einen tieferen Einblick in diese Sortiertechnik.",
        "keywords": "Bucket Sort, JavaScript, Sortieralgorithmus, Coding Lab, Programmier-Tutorial"
      },
      "details": {
        "steps": [
          {
            "title": "Bucket Sort",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Verifiziere Node-Befehle in der Zsh-Historie",
                "file": "verify1-1.sh",
                "hint": "JavaScript kann im Terminal/SSH ausgeführt werden, indem man 'node' eingibt und die Enter-Taste drückt."
              }
            ]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "JavaScript でのバケットソートの実装",
      "description": "この実験では、JavaScript でバケットソートアルゴリズムを調べます。バケットソートは、配列の要素を複数のバケットに分散させることで動作するソートアルゴリズムです。次に、それぞれのバケットを、別のソートアルゴリズムを使って、または再帰的にバケットソートアルゴリズムを適用することで個別にソートします。この実験では、このアルゴリズムを実装し、その動作原理を深く理解する機会を提供します。",
      "meta": {
        "title": "バケットソートアルゴリズム | JavaScript コーディング実験",
        "description": "JavaScript でバケットソートアルゴリズムを調べ、それを手順を追って実装する方法を学びましょう。このソート技術の深い理解を得ましょう。",
        "keywords": "バケットソート，JavaScript, ソートアルゴリズム，コーディング実験，プログラミングチュートリアル"
      },
      "details": {
        "steps": [
          {
            "title": "バケットソート",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "Zsh 履歴における Node コマンドを確認する",
                "file": "verify1-1.sh",
                "hint": "ターミナル/SSH で 'node' と入力して Enter キーを押すことで、JavaScript を実行できます。"
              }
            ]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Реализация сортировки \"корзинка\" на JavaScript",
      "description": "В этом лабе мы будем изучать алгоритм сортировки \"корзинка\" на JavaScript. Алгоритм сортировки \"корзинка\" работает путём распределения элементов массива по нескольким \"корзинам\". Затем каждая \"корзина\" сортируется отдельно, либо с использованием другого алгоритма сортировки, либо путём рекурсивного применения алгоритма сортировки \"корзинка\". В этом лабе вам будет предоставлено возможность реализовать этот алгоритм и получить более глубокое понимание того, как он работает.",
      "meta": {
        "title": "Алгоритм сортировки \"корзинка\" | Лаборатория по программированию на JavaScript",
        "description": "Изучите алгоритм сортировки \"корзинка\" на JavaScript и научитесь реализовывать его пошагово. Получите более глубокое понимание этой сортировочной техники.",
        "keywords": "сортировка \"корзинка\", JavaScript, алгоритм сортировки, лаборатория по программированию, учебник по программированию"
      },
      "details": {
        "steps": [
          {
            "title": "Сортировка \"корзинка\"",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "Проверить команды Node в истории Zsh",
                "file": "verify1-1.sh",
                "hint": "JavaScript можно запускать в Терминале/SSH, введя 'node' и нажав Enter."
              }
            ]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    }
  ]
}
