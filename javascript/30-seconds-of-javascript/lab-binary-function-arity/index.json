{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Binary Function Arity",
  "description": "In this lab, we will explore the concept of Binary Function Arity in JavaScript. We will learn how to create a function that accepts up to two arguments and ignores any additional arguments. Through practical examples, we will see how this technique can be used to simplify our code and make it more efficient.",
  "meta": {
    "title": "Mastering Binary Function Arity in JavaScript",
    "description": "Explore the concept of Binary Function Arity and learn how to create efficient functions that accept up to two arguments in JavaScript.",
    "keywords": "javascript, javascript practice, javascript practice online, binary function, javascript lab, tutorial, arity, javascript tutor, programming"
  },
  "difficulty": "Beginner",
  "time": 5,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Binary Function Arity",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify Node Commands Executed",
            "file": "verify1-1.sh",
            "hint": "JavaScript can be run in the Terminal/SSH by typing 'node' and pressing Enter.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "javascript/arith_ops",
          "javascript/comp_ops",
          "javascript/data_types",
          "javascript/higher_funcs",
          "javascript/variables"
        ]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["Lotus-7"],
  "license": {
    "name": "CC-BY-4.0",
    "url": "https://github.com/30-seconds/30-seconds-of-code/blob/master/LICENSE",
    "repo": "https://github.com/30-seconds/30-seconds-of-code"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "二元函数元数",
      "description": "在本实验中，我们将探讨 JavaScript 中二元函数元数的概念。我们将学习如何创建一个最多接受两个参数并忽略任何其他参数的函数。通过实际示例，我们将了解如何使用此技术简化代码并提高其效率。",
      "meta": {
        "title": "掌握 JavaScript 中的二元函数元数",
        "description": "探索二元函数元数的概念，并学习如何在 JavaScript 中创建最多接受两个参数的高效函数。",
        "keywords": "JavaScript, JavaScript 实践，在线 JavaScript 实践，二元函数，JavaScript 实验，教程，元数，JavaScript 导师，编程"
      },
      "details": {
        "steps": [
          {
            "title": "二元函数元数",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "验证已执行的 Node 命令",
                "file": "verify1-1.sh",
                "hint": "通过在终端/SSH 中输入'node'并按回车键，可以运行 JavaScript。"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Aridad de Función Binaria",
      "description": "En este laboratorio, exploraremos el concepto de Aridad de Función Binaria en JavaScript. Aprenderemos cómo crear una función que acepte hasta dos argumentos y ignore cualquier argumento adicional. A través de ejemplos prácticos, veremos cómo esta técnica se puede utilizar para simplificar nuestro código y hacerlo más eficiente.",
      "meta": {
        "title": "Dominando la Aridad de Función Binaria en JavaScript",
        "description": "Explora el concepto de Aridad de Función Binaria y aprende cómo crear funciones eficientes que acepten hasta dos argumentos en JavaScript.",
        "keywords": "javascript, práctica de javascript, práctica de javascript en línea, función binaria, laboratorio de javascript, tutorial, aridad, tutor de javascript, programación"
      },
      "details": {
        "steps": [
          {
            "title": "Aridad de Función Binaria",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Verificar que se ejecutaron los comandos de Node",
                "file": "verify1-1.sh",
                "hint": "Se puede ejecutar JavaScript en la Terminal/SSH escribiendo 'node' y presionando Enter."
              }
            ]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Arité des fonctions binaires",
      "description": "Dans ce laboratoire, nous allons explorer le concept d'arité des fonctions binaires en JavaScript. Nous allons apprendre à créer une fonction qui accepte jusqu'à deux arguments et ignore tout argument supplémentaire. Par des exemples pratiques, nous verrons comment cette technique peut être utilisée pour simplifier notre code et le rendre plus efficace.",
      "meta": {
        "title": "Maîtriser l'arité des fonctions binaires en JavaScript",
        "description": "Explorez le concept d'arité des fonctions binaires et apprenez à créer des fonctions efficaces qui acceptent jusqu'à deux arguments en JavaScript.",
        "keywords": "javascript, pratique javascript, pratique javascript en ligne, fonction binaire, laboratoire javascript, tutoriel, arité, tuteur javascript, programmation"
      },
      "details": {
        "steps": [
          {
            "title": "Arité des fonctions binaires",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Vérifier que les commandes Node ont été exécutées",
                "file": "verify1-1.sh",
                "hint": "JavaScript peut être exécuté dans le Terminal/SSH en tapant 'node' et en appuyant sur Entrée."
              }
            ]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Binäre Funktionsarität",
      "description": "In diesem Lab werden wir das Konzept der binären Funktionsarität in JavaScript erkunden. Wir werden lernen, wie man eine Funktion erstellt, die bis zu zwei Argumente akzeptiert und alle zusätzlichen Argumente ignoriert. Anhand von praktischen Beispielen werden wir sehen, wie diese Technik verwendet werden kann, um unseren Code zu vereinfachen und effizienter zu gestalten.",
      "meta": {
        "title": "Das Beherrschen der binären Funktionsarität in JavaScript",
        "description": "Erkunde das Konzept der binären Funktionsarität und lerne, wie man in JavaScript effiziente Funktionen erstellt, die bis zu zwei Argumente akzeptieren.",
        "keywords": "javascript, javascript Übung, online javascript Übung, binäre Funktion, javascript Lab, Tutorial, Arität, javascript Lehrer, Programmierung"
      },
      "details": {
        "steps": [
          {
            "title": "Binäre Funktionsarität",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Verifizieren, dass die Node-Befehle ausgeführt wurden",
                "file": "verify1-1.sh",
                "hint": "JavaScript kann im Terminal/SSH ausgeführt werden, indem man 'node' eingibt und die Enter-Taste drückt."
              }
            ]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "二項関数の引数の個数",
      "description": "この実験では、JavaScript における二項関数の引数の個数の概念を探ります。最大 2 つの引数を受け付け、それ以降の引数は無視する関数を作成する方法を学びます。実際の例を通じて、この技術がコードを簡略化し、効率的にするためにどのように使用できるかを見ていきます。",
      "meta": {
        "title": "JavaScript での二項関数の引数の個数の習得",
        "description": "二項関数の引数の個数の概念を探り、JavaScript で最大 2 つの引数を受け付ける効率的な関数を作成する方法を学びましょう。",
        "keywords": "javascript, javascript の練習，オンラインでの javascript の練習，二項関数，javascript の実験，チュートリアル，引数の個数，javascript の講師，プログラミング"
      },
      "details": {
        "steps": [
          {
            "title": "二項関数の引数の個数",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "Node コマンドの実行を確認する",
                "file": "verify1-1.sh",
                "hint": "ターミナル/SSH で 'node' と入力して Enter キーを押すことで、JavaScript を実行できます。"
              }
            ]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Арность бинарных функций",
      "description": "В этом практическом занятии мы изучим концепцию арности бинарных функций в JavaScript. Мы узнаем, как создать функцию, которая принимает не более двух аргументов и игнорирует любые дополнительные аргументы. С помощью практических примеров мы увидим, как эта техника может быть использована для упрощения нашего кода и повышения его эффективности.",
      "meta": {
        "title": "Мастерство в арности бинарных функций в JavaScript",
        "description": "Изучите концепцию арности бинарных функций и узнайте, как создавать эффективные функции, которые принимают не более двух аргументов в JavaScript.",
        "keywords": "javascript, практика javascript, онлайн практика javascript, бинарная функция, практическое занятие javascript, руководство, арность, преподаватель javascript, программирование"
      },
      "details": {
        "steps": [
          {
            "title": "Арность бинарных функций",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "Проверить выполнение команд Node",
                "file": "verify1-1.sh",
                "hint": "JavaScript можно запустить в Терминале/SSH, введя 'node' и нажав Enter."
              }
            ]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    },
    {
      "lang": "ko",
      "title": "이진 함수 아리티 (Binary Function Arity)",
      "description": "이 랩에서는 JavaScript 에서 이진 함수 아리티 (Binary Function Arity) 의 개념을 탐구합니다. 최대 두 개의 인수를 허용하고 추가 인수를 무시하는 함수를 만드는 방법을 배웁니다. 실용적인 예제를 통해 이 기술이 코드를 단순화하고 효율성을 높이는 데 어떻게 사용될 수 있는지 살펴보겠습니다.",
      "meta": {
        "title": "JavaScript 에서 이진 함수 아리티 (Binary Function Arity) 마스터하기",
        "description": "이진 함수 아리티 (Binary Function Arity) 의 개념을 탐구하고 JavaScript 에서 최대 두 개의 인수를 허용하는 효율적인 함수를 만드는 방법을 알아보세요.",
        "keywords": "javascript, javascript 연습, javascript 온라인 연습, 이진 함수, javascript 랩, 튜토리얼, 아리티, javascript 튜터, 프로그래밍, 자바스크립트, 자바스크립트 연습문제, 함수, 인자"
      },
      "details": {
        "steps": [
          {
            "title": "이진 함수 아리티 (Binary Function Arity)",
            "text": "ko/step1.md",
            "verify": [
              {
                "name": "Node 명령어 실행 확인",
                "file": "verify1-1.sh",
                "hint": "'node'를 입력하고 Enter 키를 눌러 터미널/SSH 에서 JavaScript 를 실행할 수 있습니다."
              }
            ]
          }
        ],
        "intro": {
          "text": "ko/intro.md",
          "title": "소개"
        },
        "finish": {
          "text": "ko/finish.md",
          "title": "요약"
        }
      }
    },
    {
      "lang": "pt",
      "title": "Aridade de Função Binária",
      "description": "Neste laboratório, exploraremos o conceito de Aridade de Função Binária em JavaScript. Aprenderemos como criar uma função que aceita até dois argumentos e ignora quaisquer argumentos adicionais. Através de exemplos práticos, veremos como essa técnica pode ser usada para simplificar nosso código e torná-lo mais eficiente.",
      "meta": {
        "title": "Dominando a Aridade de Função Binária em JavaScript",
        "description": "Explore o conceito de Aridade de Função Binária e aprenda a criar funções eficientes que aceitam até dois argumentos em JavaScript. Melhore suas habilidades de programação com exemplos práticos.",
        "keywords": "javascript, prática javascript, exercícios javascript, função binária, laboratório javascript, tutorial, aridade, tutor javascript, programação"
      },
      "details": {
        "steps": [
          {
            "title": "Aridade de Função Binária",
            "text": "pt/step1.md",
            "verify": [
              {
                "name": "Verificar Comandos Node Executados",
                "file": "verify1-1.sh",
                "hint": "JavaScript pode ser executado no Terminal/SSH digitando 'node' e pressionando Enter."
              }
            ]
          }
        ],
        "intro": {
          "text": "pt/intro.md",
          "title": "Introdução"
        },
        "finish": {
          "text": "pt/finish.md",
          "title": "Resumo"
        }
      }
    }
  ]
}
