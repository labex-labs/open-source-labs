{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Check if Object Is Deep Frozen",
  "description": "In this lab, we will learn how to check if an object is deeply frozen in JavaScript. The lab will guide us through a recursive function that uses Object.isFrozen() to determine if an object is frozen and Object.keys() with Array.prototype.every() to check all keys for deep freezing. By the end of this lab, we will have a better understanding of how to determine the deep freezing status of an object in JavaScript.",
  "meta": {
    "title": "Mastering Deep Object Freezing in JavaScript",
    "description": "Discover the secrets of deeply freezing objects in JavaScript with our comprehensive tutorial.",
    "keywords": "javascript, javascript practice, recursion, object freezing, javascript practice online, javascript lab, deep freeze, javascript tutor, object properties"
  },
  "difficulty": "Beginner",
  "time": 5,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Check if Object Is Deep Frozen",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify Node Command Usage",
            "file": "verify1-1.sh",
            "hint": "JavaScript can be run in the Terminal/SSH by typing 'node' and pressing Enter.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "javascript/arith_ops",
          "javascript/array_methods",
          "javascript/comp_ops",
          "javascript/data_types",
          "javascript/destr_assign",
          "javascript/variables"
        ]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["Lotus-7"],
  "license": {
    "name": "CC-BY-4.0",
    "url": "https://github.com/30-seconds/30-seconds-of-code/blob/master/LICENSE",
    "repo": "https://github.com/30-seconds/30-seconds-of-code"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "检查对象是否被深度冻结",
      "description": "在本实验中，我们将学习如何在 JavaScript 中检查一个对象是否被深度冻结。本实验将引导我们完成一个递归函数，该函数使用 Object.isFrozen() 来确定一个对象是否被冻结，并使用 Object.keys() 和 Array.prototype.every() 来检查所有键是否被深度冻结。在本实验结束时，我们将更好地理解如何确定 JavaScript 中对象的深度冻结状态。",
      "meta": {
        "title": "掌握 JavaScript 中的深度对象冻结",
        "description": "通过我们全面的教程，探索 JavaScript 中深度冻结对象的秘密。",
        "keywords": "JavaScript, JavaScript 练习，递归，对象冻结，在线 JavaScript 练习，JavaScript 实验，深度冻结，JavaScript 教程，对象属性"
      },
      "details": {
        "steps": [
          {
            "title": "检查对象是否被深度冻结",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "验证 Node 命令的用法",
                "file": "verify1-1.sh",
                "hint": "在终端/SSH 中，通过输入'node'并按回车键可以运行 JavaScript。"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Comprobar si un objeto está congelado profundamente",
      "description": "En este laboratorio, aprenderemos a comprobar si un objeto está congelado profundamente en JavaScript. El laboratorio nos guiará a través de una función recursiva que utiliza Object.isFrozen() para determinar si un objeto está congelado y Object.keys() con Array.prototype.every() para comprobar todas las claves para el congelamiento profundo. Al final de este laboratorio, tendremos una mejor comprensión de cómo determinar el estado de congelamiento profundo de un objeto en JavaScript.",
      "meta": {
        "title": "Dominando el congelamiento profundo de objetos en JavaScript",
        "description": "Descubre los secretos del congelamiento profundo de objetos en JavaScript con nuestro tutorial completo.",
        "keywords": "javascript, práctica de javascript, recursividad, congelamiento de objetos, práctica de javascript en línea, laboratorio de javascript, congelamiento profundo, tutor de javascript, propiedades de objetos"
      },
      "details": {
        "steps": [
          {
            "title": "Comprobar si un objeto está congelado profundamente",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Verificar el uso del comando Node",
                "file": "verify1-1.sh",
                "hint": "JavaScript se puede ejecutar en la Terminal/SSH escribiendo 'node' y presionando Enter."
              }
            ]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Vérifier si un objet est profondément congelé",
      "description": "Dans ce laboratoire, nous allons apprendre à vérifier si un objet est profondément congelé en JavaScript. Le laboratoire nous guidera à travers une fonction récursive qui utilise Object.isFrozen() pour déterminer si un objet est congelé et Object.keys() avec Array.prototype.every() pour vérifier toutes les clés pour la congélation profonde. À la fin de ce laboratoire, nous aurons une meilleure compréhension de la manière de déterminer l'état de congélation profonde d'un objet en JavaScript.",
      "meta": {
        "title": "Maîtriser la congélation profonde d'objets en JavaScript",
        "description": "Découvrez les secrets de la congélation profonde d'objets en JavaScript avec notre tutoriel complet.",
        "keywords": "javascript, pratique javascript, récursion, congélation d'objets, pratique javascript en ligne, laboratoire javascript, congélation profonde, tuteur javascript, propriétés d'objets"
      },
      "details": {
        "steps": [
          {
            "title": "Vérifier si un objet est profondément congelé",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Vérifier l'utilisation de la commande Node",
                "file": "verify1-1.sh",
                "hint": "JavaScript peut être exécuté dans le Terminal/SSH en tapant 'node' et en appuyant sur Entrée."
              }
            ]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Überprüfen, ob ein Objekt tief eingefroren ist",
      "description": "In diesem Lab werden wir lernen, wie man in JavaScript überprüft, ob ein Objekt tief eingefroren ist. Das Lab wird uns durch eine rekursive Funktion führen, die Object.isFrozen() verwendet, um zu bestimmen, ob ein Objekt eingefroren ist, und Object.keys() zusammen mit Array.prototype.every() verwendet, um alle Schlüssel auf Tiefeinfrierung zu überprüfen. Am Ende dieses Labs werden wir ein besseres Verständnis dafür haben, wie man den Tiefeinfrierstatus eines Objekts in JavaScript bestimmt.",
      "meta": {
        "title": "Das Erlernen der tiefen Objekteinfrierung in JavaScript",
        "description": "Entdecken Sie die Geheimnisse der tiefen Objekteinfrierung in JavaScript mit unserem umfassenden Tutorial.",
        "keywords": "javascript, javascript Übung, Rekursion, Objekteinfrierung, Online-JavaScript-Übung, JavaScript-Lab, Tiefeinfrierung, JavaScript-Lehrer, Objekteigenschaften"
      },
      "details": {
        "steps": [
          {
            "title": "Überprüfen, ob ein Objekt tief eingefroren ist",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Überprüfen der Verwendung des Node-Befehls",
                "file": "verify1-1.sh",
                "hint": "JavaScript kann im Terminal/SSH ausgeführt werden, indem man 'node' eingibt und die Eingabetaste drückt."
              }
            ]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "オブジェクトが深く凍結されているかどうかを確認する",
      "description": "この実験では、JavaScript でオブジェクトが深く凍結されているかどうかを確認する方法を学びます。この実験では、Object.isFrozen() を使用してオブジェクトが凍結されているかどうかを判断する再帰関数と、深い凍結を確認するために Object.keys() と Array.prototype.every() を使用します。この実験が終了するまでに、JavaScript でオブジェクトの深い凍結状態を判断する方法をより深く理解するようになります。",
      "meta": {
        "title": "JavaScript におけるオブジェクトの深い凍結のマスター",
        "description": "私たちの包括的なチュートリアルで、JavaScript でオブジェクトを深く凍結する秘密を解明しましょう。",
        "keywords": "javascript, javascript の練習，再帰，オブジェクトの凍結，オンラインでの javascript の練習，javascript の実験，深い凍結，javascript の講師，オブジェクトのプロパティ"
      },
      "details": {
        "steps": [
          {
            "title": "オブジェクトが深く凍結されているかどうかを確認する",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "Node コマンドの使用を確認する",
                "file": "verify1-1.sh",
                "hint": "ターミナル/SSH で 'node' と入力して Enter キーを押すことで、JavaScript を実行できます。"
              }
            ]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Проверить, является ли объект глубоко замороженным",
      "description": "В этом практическом занятии мы узнаем, как проверить, является ли объект глубоко замороженным в JavaScript. Практическое занятие проведет нас через рекурсивную функцию, которая использует Object.isFrozen() для определения, заморожен ли объект, и Object.keys() с Array.prototype.every() для проверки всех ключей на глубокую \"заморозку\". В конце этого практического занятия мы лучше поймем, как определить статус глубокой \"заморозки\" объекта в JavaScript.",
      "meta": {
        "title": "Мастерство в глубоком замораживании объектов в JavaScript",
        "description": "Откройте секреты глубокого замораживания объектов в JavaScript с нашим полным руководством.",
        "keywords": "javascript, практика javascript, рекурсия, замораживание объекта, онлайн практика javascript, практическое занятие javascript, глубокий заморозка, преподаватель javascript, свойства объекта"
      },
      "details": {
        "steps": [
          {
            "title": "Проверить, является ли объект глубоко замороженным",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "Проверить использование команды Node",
                "file": "verify1-1.sh",
                "hint": "JavaScript можно запустить в Терминале/SSH, введя 'node' и нажав Enter."
              }
            ]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    },
    {
      "lang": "ko",
      "title": "객체가 깊이 동결되었는지 확인하기",
      "description": "이 랩에서는 JavaScript 에서 객체가 깊이 동결되었는지 확인하는 방법을 배웁니다. 랩은 Object.isFrozen() 을 사용하여 객체가 동결되었는지 확인하고, Object.keys() 와 Array.prototype.every() 를 사용하여 모든 키가 깊이 동결되었는지 확인하는 재귀 함수를 안내합니다. 이 랩을 마치면 JavaScript 에서 객체의 깊이 동결 상태를 결정하는 방법에 대한 이해를 높일 수 있습니다.",
      "meta": {
        "title": "JavaScript 에서 객체 깊이 동결 마스터하기 - 튜토리얼",
        "description": "종합적인 튜토리얼을 통해 JavaScript 에서 객체를 깊이 동결하는 비법을 알아보세요.",
        "keywords": "javascript, javascript 연습, 재귀, 객체 동결, javascript 온라인 연습, javascript 랩, 깊은 동결, javascript 튜터, 객체 속성, 자바스크립트 객체 동결"
      },
      "details": {
        "steps": [
          {
            "title": "객체가 깊이 동결되었는지 확인하기",
            "text": "ko/step1.md",
            "verify": [
              {
                "name": "Node 명령어 사용 확인",
                "file": "verify1-1.sh",
                "hint": "'node'를 입력하고 Enter 키를 눌러 터미널/SSH 에서 JavaScript 를 실행할 수 있습니다."
              }
            ]
          }
        ],
        "intro": {
          "text": "ko/intro.md",
          "title": "소개"
        },
        "finish": {
          "text": "ko/finish.md",
          "title": "요약"
        }
      }
    },
    {
      "lang": "pt",
      "title": "Verificar se um Objeto Está Profundamente Congelado",
      "description": "Neste laboratório, aprenderemos como verificar se um objeto está profundamente congelado em JavaScript. O laboratório nos guiará por uma função recursiva que usa Object.isFrozen() para determinar se um objeto está congelado e Object.keys() com Array.prototype.every() para verificar todas as chaves em busca de congelamento profundo. Ao final deste laboratório, teremos uma melhor compreensão de como determinar o status de congelamento profundo de um objeto em JavaScript.",
      "meta": {
        "title": "Dominando o Congelamento Profundo de Objetos em JavaScript",
        "description": "Descubra os segredos do congelamento profundo de objetos em JavaScript com nosso tutorial abrangente.",
        "keywords": "javascript, prática javascript, recursão, congelamento de objetos, prática javascript online, laboratório javascript, deep freeze (congelamento profundo), tutor javascript, propriedades de objetos"
      },
      "details": {
        "steps": [
          {
            "title": "Verificar se um Objeto Está Profundamente Congelado",
            "text": "pt/step1.md",
            "verify": [
              {
                "name": "Verificar o Uso do Comando Node",
                "file": "verify1-1.sh",
                "hint": "JavaScript pode ser executado no Terminal/SSH digitando 'node' e pressionando Enter."
              }
            ]
          }
        ],
        "intro": {
          "text": "pt/intro.md",
          "title": "Introdução"
        },
        "finish": {
          "text": "pt/finish.md",
          "title": "Resumo"
        }
      }
    }
  ]
}
