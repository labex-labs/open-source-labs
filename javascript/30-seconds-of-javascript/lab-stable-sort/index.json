{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Stable Sorting with JavaScript Arrays",
  "description": "In this lab, we will explore the concept of stable sorting in JavaScript. Stable sorting is a technique that preserves the order of items in an array when their values are the same. We will use a function that utilizes the Array.prototype.map() and Array.prototype.sort() methods to implement stable sorting of an array.",
  "meta": {
    "title": "Stable Sorting in JavaScript | Programming Tutorials",
    "description": "Explore the concept of stable sorting in JavaScript. Learn how to implement a stable sorting function using Array.prototype.map() and Array.prototype.sort().",
    "keywords": "stable sorting, JavaScript, programming tutorials, sorting algorithms, array manipulation"
  },
  "difficulty": "Beginner",
  "time": 10,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Stable Sort",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify Node Command Usage",
            "file": "verify1-1.sh",
            "hint": "JavaScript can be run in the Terminal/SSH by typing 'node' and pressing Enter.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "javascript/arith_ops",
          "javascript/comp_ops",
          "javascript/data_types",
          "javascript/higher_funcs",
          "javascript/variables"
        ]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["Lotus-7"],
  "license": {
    "name": "CC-BY-4.0",
    "url": "https://github.com/30-seconds/30-seconds-of-code/blob/master/LICENSE",
    "repo": "https://github.com/30-seconds/30-seconds-of-code"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "使用 JavaScript 数组进行稳定排序",
      "description": "在本实验中，我们将探讨 JavaScript 中稳定排序的概念。稳定排序是一种在数组中元素值相同时保留其顺序的技术。我们将使用一个利用 Array.prototype.map() 和 Array.prototype.sort() 方法的函数来实现数组的稳定排序。",
      "meta": {
        "title": "JavaScript 中的稳定排序 | 编程教程",
        "description": "探索 JavaScript 中稳定排序的概念。学习如何使用 Array.prototype.map() 和 Array.prototype.sort() 实现稳定排序函数。",
        "keywords": "稳定排序，JavaScript, 编程教程，排序算法，数组操作"
      },
      "details": {
        "steps": [
          {
            "title": "稳定排序",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "验证 Node 命令用法",
                "file": "verify1-1.sh",
                "hint": "在终端/SSH 中输入 'node' 并回车即可运行 JavaScript。"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Clasificación estable con matrices de JavaScript",
      "description": "En este laboratorio, exploraremos el concepto de clasificación estable en JavaScript. La clasificación estable es una técnica que conserva el orden de los elementos en una matriz cuando sus valores son iguales. Utilizaremos una función que utiliza los métodos Array.prototype.map() y Array.prototype.sort() para implementar la clasificación estable de una matriz.",
      "meta": {
        "title": "Clasificación estable en JavaScript | Tutoriales de programación",
        "description": "Explore el concepto de clasificación estable en JavaScript. Aprenda cómo implementar una función de clasificación estable utilizando Array.prototype.map() y Array.prototype.sort().",
        "keywords": "clasificación estable, JavaScript, tutoriales de programación, algoritmos de clasificación, manipulación de matrices"
      },
      "details": {
        "steps": [
          {
            "title": "Clasificación estable",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Verificar el uso del comando Node",
                "file": "verify1-1.sh",
                "hint": "JavaScript se puede ejecutar en la Terminal/SSH escribiendo 'node' y presionando Enter."
              }
            ]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Tri stable avec des tableaux JavaScript",
      "description": "Dans ce laboratoire, nous allons explorer le concept de tri stable en JavaScript. Le tri stable est une technique qui conserve l'ordre des éléments dans un tableau lorsque leurs valeurs sont identiques. Nous allons utiliser une fonction qui utilise les méthodes Array.prototype.map() et Array.prototype.sort() pour implémenter le tri stable d'un tableau.",
      "meta": {
        "title": "Tri stable en JavaScript | Tutoriels de programmation",
        "description": "Explorez le concept de tri stable en JavaScript. Apprenez à implémenter une fonction de tri stable en utilisant Array.prototype.map() et Array.prototype.sort().",
        "keywords": "tri stable, JavaScript, tutoriels de programmation, algorithmes de tri, manipulation de tableaux"
      },
      "details": {
        "steps": [
          {
            "title": "Tri stable",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Vérifier l'utilisation de la commande Node",
                "file": "verify1-1.sh",
                "hint": "JavaScript peut être exécuté dans le Terminal/SSH en tapant 'node' et en appuyant sur Entrée."
              }
            ]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Stables Sortieren mit JavaScript-Arrays",
      "description": "In diesem Lab werden wir das Konzept des stabilen Sortierens in JavaScript erkunden. Stables Sortieren ist eine Technik, die die Reihenfolge von Elementen in einem Array beibehält, wenn ihre Werte gleich sind. Wir werden eine Funktion verwenden, die die Methoden Array.prototype.map() und Array.prototype.sort() nutzt, um das stabile Sortieren eines Arrays zu implementieren.",
      "meta": {
        "title": "Stables Sortieren in JavaScript | Programmier-Tutorials",
        "description": "Erkunde das Konzept des stabilen Sortierens in JavaScript. Lerne, wie man eine Funktion zum stabilen Sortieren mit Array.prototype.map() und Array.prototype.sort() implementiert.",
        "keywords": "stables Sortieren, JavaScript, Programmier-Tutorials, Sortieralgorithmen, Array-Manipulation"
      },
      "details": {
        "steps": [
          {
            "title": "Stables Sortieren",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Verifizieren der Verwendung des Node-Befehls",
                "file": "verify1-1.sh",
                "hint": "JavaScript kann im Terminal/SSH ausgeführt werden, indem man 'node' eingibt und die Enter-Taste drückt."
              }
            ]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "JavaScript 配列を使った安定ソート",
      "description": "この実験では、JavaScript における安定ソートの概念を探ります。安定ソートは、値が同じ場合でも配列内の要素の順序を保つ技術です。配列の安定ソートを実装するために、Array.prototype.map() と Array.prototype.sort() メソッドを利用する関数を使用します。",
      "meta": {
        "title": "JavaScript における安定ソート | プログラミングチュートリアル",
        "description": "JavaScript における安定ソートの概念を探りましょう。Array.prototype.map() と Array.prototype.sort() を使って安定ソート関数を実装する方法を学びましょう。",
        "keywords": "安定ソート，JavaScript, プログラミングチュートリアル，ソートアルゴリズム，配列操作"
      },
      "details": {
        "steps": [
          {
            "title": "安定ソート",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "Node コマンドの使用を確認する",
                "file": "verify1-1.sh",
                "hint": "ターミナル/SSH で'node'と入力して Enter キーを押すことで、JavaScript を実行できます。"
              }
            ]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Стабильная сортировка с использованием массивов JavaScript",
      "description": "В этом лабе мы будем изучать концепцию стабильной сортировки в JavaScript. Стабильная сортировка - это техника, которая сохраняет порядок элементов в массиве, когда их значения совпадают. Мы будем использовать функцию, которая использует методы Array.prototype.map() и Array.prototype.sort(), чтобы реализовать стабильную сортировку массива.",
      "meta": {
        "title": "Стабильная сортировка в JavaScript | Руководства по программированию",
        "description": "Изучите концепцию стабильной сортировки в JavaScript. Найдите, как реализовать функцию стабильной сортировки с использованием Array.prototype.map() и Array.prototype.sort().",
        "keywords": "стабильная сортировка, JavaScript, руководства по программированию, алгоритмы сортировки, манипуляция массивами"
      },
      "details": {
        "steps": [
          {
            "title": "Стабильная сортировка",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "Проверить использование команды Node",
                "file": "verify1-1.sh",
                "hint": "JavaScript можно запустить в Терминале/SSH, введя 'node' и нажав Enter."
              }
            ]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    }
  ]
}
