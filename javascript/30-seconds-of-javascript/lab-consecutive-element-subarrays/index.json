{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Consecutive Element Subarrays",
  "description": "In this lab, we will explore the concept of creating consecutive element subarrays using JavaScript. The goal of this lab is to learn how to create an array of n-tuples of consecutive elements using the Array.prototype.slice() and Array.prototype.map() methods in JavaScript. Through practical examples, we will understand how to populate the array with n-tuples of consecutive elements from an input array and return an empty array if n is greater than the length of the input array.",
  "meta": {
    "title": "Consecutive Element Subarrays: Mastering JavaScript Array Manipulation",
    "description": "Explore the art of creating consecutive element subarrays using JavaScript's powerful array methods.",
    "keywords": "javascript, subarrays, javascript practice, array slicing, array manipulation, javascript practice online, consecutive elements, javascript lab, javascript tutor"
  },
  "difficulty": "Beginner",
  "time": 10,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Consecutive Element Subarrays",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify Node Command Usage",
            "file": "verify1-1.sh",
            "hint": "JavaScript can be run in the Terminal/SSH by typing 'node' and pressing Enter.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "javascript/arith_ops",
          "javascript/comp_ops",
          "javascript/data_types",
          "javascript/higher_funcs",
          "javascript/variables"
        ]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["Lotus-7"],
  "license": {
    "name": "CC-BY-4.0",
    "url": "https://github.com/30-seconds/30-seconds-of-code/blob/master/LICENSE",
    "repo": "https://github.com/30-seconds/30-seconds-of-code"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "连续元素子数组",
      "description": "在本实验中，我们将探索使用JavaScript创建连续元素子数组的概念。本实验的目标是学习如何使用JavaScript中的Array.prototype.slice()和Array.prototype.map()方法创建一个由连续元素的n元组组成的数组。通过实际示例，我们将了解如何用输入数组中的连续元素n元组填充数组，并在n大于输入数组的长度时返回一个空数组。",
      "meta": {
        "title": "连续元素子数组：掌握JavaScript数组操作",
        "description": "探索使用JavaScript强大的数组方法创建连续元素子数组的技巧。",
        "keywords": "JavaScript, 子数组, JavaScript练习, 数组切片, 数组操作, 在线JavaScript练习, 连续元素, JavaScript实验, JavaScript教程"
      },
      "details": {
        "steps": [
          {
            "title": "连续元素子数组",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "验证Node命令的用法",
                "file": "verify1-1.sh",
                "hint": "在终端/SSH中，通过输入'node'并按下回车键，可以运行JavaScript。"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    }
  ]
}
