{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Checking Number Within Specified Range",
  "description": "In this lab, we will explore the concept of checking whether a given number falls within a specified range. We will use arithmetic comparison to check if the number is in the range and handle cases where the end of the range is not specified. By the end of the lab, you will have a better understanding of how to check if a number is within a given range in JavaScript.",
  "meta": {
    "title": "JavaScript | Number Range Checking",
    "description": "Learn how to check if a number is within a specified range using JavaScript. Explore arithmetic comparison and handle cases with or without an end value.",
    "keywords": "JavaScript, number range, arithmetic comparison, programming tutorial"
  },
  "difficulty": "Beginner",
  "time": 5,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Number in Range",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify Node Commands In Zsh History",
            "file": "verify1-1.sh",
            "hint": "JavaScript can be run in the Terminal/SSH by typing 'node' and pressing Enter.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": []
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["Lotus-7"],
  "license": {
    "name": "CC-BY-4.0",
    "url": "https://github.com/30-seconds/30-seconds-of-code/blob/master/LICENSE",
    "repo": "https://github.com/30-seconds/30-seconds-of-code"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "检查指定范围内的数字",
      "description": "在本实验中，我们将探讨检查给定数字是否落在指定范围内的概念。我们将使用算术比较来检查数字是否在该范围内，并处理范围末尾未指定的情况。在实验结束时，你将更好地理解如何在 JavaScript 中检查一个数字是否在给定范围内。",
      "meta": {
        "title": "JavaScript | 数字范围检查",
        "description": "学习如何使用 JavaScript 检查数字是否在指定范围内。探索算术比较并处理有或没有结束值的情况。",
        "keywords": "JavaScript, 数字范围，算术比较，编程教程"
      },
      "details": {
        "steps": [
          {
            "title": "范围内的数字",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "验证 Zsh 历史记录中的 Node 命令",
                "file": "verify1-1.sh",
                "hint": "通过在终端/SSH 中输入'node'并按 Enter 键，可以运行 JavaScript。"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Verificación de Número dentro de un Rango Especificado",
      "description": "En este laboratorio, exploraremos el concepto de comprobar si un número dado se encuentra dentro de un rango especificado. Utilizaremos comparaciones aritméticas para comprobar si el número está en el rango y manejaremos casos en los que el final del rango no está especificado. Al final del laboratorio, tendrás una mejor comprensión de cómo comprobar si un número está dentro de un rango dado en JavaScript.",
      "meta": {
        "title": "JavaScript | Verificación de Rango de Números",
        "description": "Aprende cómo comprobar si un número está dentro de un rango especificado utilizando JavaScript. Explora las comparaciones aritméticas y maneja casos con o sin un valor final.",
        "keywords": "JavaScript, rango de números, comparación aritmética, tutorial de programación"
      },
      "details": {
        "steps": [
          {
            "title": "Número en Rango",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Verificar Comandos de Node en el Historial de Zsh",
                "file": "verify1-1.sh",
                "hint": "JavaScript se puede ejecutar en la Terminal/SSH escribiendo 'node' y presionando Enter."
              }
            ]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Vérification du nombre dans une plage spécifiée",
      "description": "Dans ce laboratoire, nous allons explorer le concept de vérification pour savoir si un nombre donné se situe dans une plage spécifiée. Nous utiliserons des comparaisons arithmétiques pour vérifier si le nombre est dans la plage et gérer les cas où la fin de la plage n'est pas spécifiée. À la fin du laboratoire, vous aurez une meilleure compréhension de la manière de vérifier si un nombre est dans une plage donnée en JavaScript.",
      "meta": {
        "title": "JavaScript | Vérification de la plage de nombres",
        "description": "Découvrez comment vérifier si un nombre est dans une plage spécifiée à l'aide de JavaScript. Explorez les comparaisons arithmétiques et gérez les cas avec ou sans une valeur de fin.",
        "keywords": "JavaScript, plage de nombres, comparaison arithmétique, tutoriel de programmation"
      },
      "details": {
        "steps": [
          {
            "title": "Nombre dans une plage",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Vérifier les commandes Node dans l'historique Zsh",
                "file": "verify1-1.sh",
                "hint": "JavaScript peut être exécuté dans le Terminal/SSH en tapant 'node' et en appuyant sur Entrée."
              }
            ]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Überprüfen von Zahlen innerhalb eines angegebenen Bereichs",
      "description": "In diesem Lab werden wir das Konzept des Überprüfens, ob eine gegebene Zahl innerhalb eines bestimmten Bereichs liegt, erkunden. Wir werden arithmetische Vergleiche verwenden, um zu überprüfen, ob die Zahl im Bereich liegt, und Fälle behandeln, in denen das Ende des Bereichs nicht angegeben ist. Am Ende des Labs werden Sie ein besseres Verständnis dafür haben, wie Sie in JavaScript überprüfen, ob eine Zahl innerhalb eines angegebenen Bereichs liegt.",
      "meta": {
        "title": "JavaScript | Überprüfung von Zahlenbereichen",
        "description": "Lernen Sie, wie Sie mit JavaScript überprüfen, ob eine Zahl innerhalb eines angegebenen Bereichs liegt. Entdecken Sie arithmetische Vergleiche und behandeln Sie Fälle mit oder ohne Endwert.",
        "keywords": "JavaScript, Zahlenbereich, arithmetischer Vergleich, Programmier-Tutorial"
      },
      "details": {
        "steps": [
          {
            "title": "Zahl im Bereich",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Überprüfen von Node-Befehlen in der Zsh-Geschichte",
                "file": "verify1-1.sh",
                "hint": "JavaScript kann im Terminal/SSH ausgeführt werden, indem man 'node' eingibt und die Enter-Taste drückt."
              }
            ]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "指定された範囲内の数値をチェックする",
      "description": "この実験では、与えられた数値が指定された範囲内にあるかどうかをチェックする概念を探ります。数値が範囲内にあるかどうかをチェックするために算術比較を使用し、範囲の終端が指定されていない場合のケースを処理します。この実験が終了するまでに、JavaScript で数値が与えられた範囲内にあるかどうかをチェックする方法をより深く理解するようになります。",
      "meta": {
        "title": "JavaScript | 数値範囲のチェック",
        "description": "JavaScript を使って数値が指定された範囲内にあるかどうかをチェックする方法を学びましょう。算術比較を調べ、終了値の有無に関係なくケースを処理します。",
        "keywords": "JavaScript, 数値範囲，算術比較，プログラミングチュートリアル"
      },
      "details": {
        "steps": [
          {
            "title": "範囲内の数値",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "Zsh 履歴の Node コマンドを検証する",
                "file": "verify1-1.sh",
                "hint": "ターミナル/SSH で'node'と入力して Enter キーを押すことで JavaScript を実行できます。"
              }
            ]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Проверка числа в заданном диапазоне",
      "description": "В этом лабе мы будем изучать концепцию проверки, попадает ли заданное число в заданный диапазон. Мы будем использовать арифметическое сравнение для проверки, находится ли число в диапазоне, и обрабатывать случаи, когда конец диапазона не указан. В конце лабы вы будете лучше понимать, как проверить, находится ли число в заданном диапазоне в JavaScript.",
      "meta": {
        "title": "JavaScript | Проверка диапазона числа",
        "description": "Изучите, как проверить, находится ли число в заданном диапазоне с использованием JavaScript. Исследуйте арифметическое сравнение и обрабатывайте случаи с конечным значением или без него.",
        "keywords": "JavaScript, диапазон числа, арифметическое сравнение, учебник по программированию"
      },
      "details": {
        "steps": [
          {
            "title": "Число в диапазоне",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "Проверить команды Node в истории Zsh",
                "file": "verify1-1.sh",
                "hint": "JavaScript можно запустить в Терминале/SSH, введя 'node' и нажав Enter."
              }
            ]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    },
    {
      "lang": "ko",
      "title": "지정된 범위 내 숫자 확인",
      "description": "이 랩에서는 주어진 숫자가 지정된 범위 내에 속하는지 확인하는 개념을 탐구합니다. 산술 비교를 사용하여 숫자가 범위 내에 있는지 확인하고, 범위의 끝이 지정되지 않은 경우를 처리합니다. 랩을 마치면 JavaScript 에서 숫자가 주어진 범위 내에 있는지 확인하는 방법에 대한 이해를 높일 수 있습니다.",
      "meta": {
        "title": "JavaScript | 숫자 범위 확인 방법 (예제 포함)",
        "description": "JavaScript 를 사용하여 숫자가 지정된 범위 내에 있는지 확인하는 방법을 알아보세요. 산술 비교를 살펴보고, 끝 값이 있거나 없는 경우를 처리하는 방법을 배우세요. JavaScript 숫자 범위, 조건문 활용 튜토리얼.",
        "keywords": "JavaScript, 숫자 범위, 산술 비교, 프로그래밍 튜토리얼, 숫자 범위 확인, JavaScript 예제"
      },
      "details": {
        "steps": [
          {
            "title": "범위 내 숫자",
            "text": "ko/step1.md",
            "verify": [
              {
                "name": "Zsh 히스토리에서 Node 명령어 확인",
                "file": "verify1-1.sh",
                "hint": "터미널/SSH 에서 'node'를 입력하고 Enter 키를 눌러 JavaScript 를 실행할 수 있습니다."
              }
            ]
          }
        ],
        "intro": {
          "text": "ko/intro.md",
          "title": "소개"
        },
        "finish": {
          "text": "ko/finish.md",
          "title": "요약"
        }
      }
    },
    {
      "lang": "pt",
      "title": "Verificando Números Dentro de um Intervalo Específico",
      "description": "Neste laboratório, exploraremos o conceito de verificar se um determinado número se enquadra em um intervalo especificado. Usaremos a comparação aritmética para verificar se o número está no intervalo e lidaremos com casos em que o final do intervalo não é especificado. Ao final do laboratório, você terá uma melhor compreensão de como verificar se um número está dentro de um determinado intervalo em JavaScript.",
      "meta": {
        "title": "JavaScript | Verificação de Intervalo de Números",
        "description": "Aprenda como verificar se um número está dentro de um intervalo especificado usando JavaScript. Explore a comparação aritmética e lide com casos com ou sem um valor final. #JavaScript #IntervaloDeNumeros #Programação",
        "keywords": "JavaScript, intervalo de números, comparação aritmética, tutorial de programação, verificar número no intervalo, números em javascript"
      },
      "details": {
        "steps": [
          {
            "title": "Número no Intervalo",
            "text": "pt/step1.md",
            "verify": [
              {
                "name": "Verificar Comandos Node no Histórico Zsh",
                "file": "verify1-1.sh",
                "hint": "JavaScript pode ser executado no Terminal/SSH digitando 'node' e pressionando Enter."
              }
            ]
          }
        ],
        "intro": {
          "text": "pt/intro.md",
          "title": "Introdução"
        },
        "finish": {
          "text": "pt/finish.md",
          "title": "Resumo"
        }
      }
    }
  ]
}
