{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Format Numbers Locally in JavaScript",
  "description": "In this lab, we will explore how to format numbers using the local number format order in JavaScript. We will use the Number.prototype.toLocaleString() method to convert a given number to the local number format using separators such as commas and periods. By the end of this lab, you will have a clear understanding of how to format numbers in different locales.",
  "meta": {
    "title": "JavaScript Number Formatting | Local Number Format",
    "description": "Learn how to format numbers using the local number format order in JavaScript. Explore the toLocaleString() method and understand number formatting in different locales.",
    "keywords": "JavaScript, number formatting, local number format, toLocaleString, number formatting in different locales"
  },
  "difficulty": "Beginner",
  "time": 10,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Format Number",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify Node Commands in ZSH History",
            "file": "verify1-1.sh",
            "hint": "JavaScript can be run in the Terminal/SSH by typing 'node' and pressing Enter.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "javascript/arith_ops",
          "javascript/comp_ops",
          "javascript/data_types",
          "javascript/variables"
        ]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["Lotus-7"],
  "license": {
    "name": "CC-BY-4.0",
    "url": "https://github.com/30-seconds/30-seconds-of-code/blob/master/LICENSE",
    "repo": "https://github.com/30-seconds/30-seconds-of-code"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "在JavaScript中进行本地数字格式化",
      "description": "在本实验中，我们将探索如何在JavaScript中使用本地数字格式顺序来格式化数字。我们将使用Number.prototype.toLocaleString()方法，通过逗号和句号等分隔符将给定数字转换为本地数字格式。完成本实验后，你将清楚地了解如何在不同地区格式化数字。",
      "meta": {
        "title": "JavaScript数字格式化 | 本地数字格式",
        "description": "学习如何在JavaScript中使用本地数字格式顺序来格式化数字。探索toLocaleString()方法，并了解不同地区的数字格式化。",
        "keywords": "JavaScript, 数字格式化, 本地数字格式, toLocaleString, 不同地区的数字格式化"
      },
      "details": {
        "steps": [
          {
            "title": "格式化数字",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "在ZSH历史记录中验证Node命令",
                "file": "verify1-1.sh",
                "hint": "通过在终端/SSH中输入'node'并按回车键，可以运行JavaScript。"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Formatear números localmente en JavaScript",
      "description": "En este laboratorio, exploraremos cómo formatear números utilizando el orden de formato numérico local en JavaScript. Utilizaremos el método Number.prototype.toLocaleString() para convertir un número dado al formato numérico local utilizando separadores como comas y puntos. Al final de este laboratorio, tendrás una comprensión clara de cómo formatear números en diferentes locales.",
      "meta": {
        "title": "Formateo de números en JavaScript | Formato numérico local",
        "description": "Aprende cómo formatear números utilizando el orden de formato numérico local en JavaScript. Explora el método toLocaleString() y comprende el formateo de números en diferentes locales.",
        "keywords": "JavaScript, formateo de números, formato numérico local, toLocaleString, formateo de números en diferentes locales"
      },
      "details": {
        "steps": [
          {
            "title": "Formatear número",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Verificar comandos de Node en el historial de ZSH",
                "file": "verify1-1.sh",
                "hint": "Se puede ejecutar JavaScript en la Terminal/SSH escribiendo 'node' y presionando Enter."
              }
            ]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Formater des nombres localement en JavaScript",
      "description": "Dans ce laboratoire, nous allons explorer la manière de formater des nombres en utilisant l'ordre de formatage des nombres locaux en JavaScript. Nous utiliserons la méthode Number.prototype.toLocaleString() pour convertir un nombre donné au format de nombre local en utilisant des séparateurs tels que des virgules et des points. À la fin de ce laboratoire, vous aurez une compréhension claire de la manière de formater des nombres dans différents pays et régions.",
      "meta": {
        "title": "Formatage de nombres JavaScript | Format de nombre local",
        "description": "Découvrez comment formater des nombres en utilisant l'ordre de formatage des nombres locaux en JavaScript. Explorez la méthode toLocaleString() et comprenez le formatage de nombres dans différents pays et régions.",
        "keywords": "JavaScript, formatage de nombres, format de nombre local, toLocaleString, formatage de nombres dans différents pays et régions"
      },
      "details": {
        "steps": [
          {
            "title": "Formater un nombre",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Vérifier les commandes Node dans l'historique ZSH",
                "file": "verify1-1.sh",
                "hint": "JavaScript peut être exécuté dans le Terminal/SSH en tapant 'node' et en appuyant sur Entrée."
              }
            ]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Zahlen lokal in JavaScript formatieren",
      "description": "In diesem Lab werden wir untersuchen, wie man in JavaScript Zahlen mit der lokalen Zahlenformatierung formatiert. Wir werden die Number.prototype.toLocaleString()-Methode verwenden, um eine gegebene Zahl in das lokale Zahlenformat mit Separatoren wie Kommas und Punkten zu konvertieren. Am Ende dieses Labs werden Sie einen klaren Überblick darüber haben, wie man Zahlen in verschiedenen Gebietsschemata formatiert.",
      "meta": {
        "title": "JavaScript-Zahlenformatierung | Lokales Zahlenformat",
        "description": "Lernen Sie, wie man in JavaScript Zahlen mit der lokalen Zahlenformatierung formatiert. Entdecken Sie die toLocaleString()-Methode und verstehen Sie die Zahlenformatierung in verschiedenen Gebietsschemata.",
        "keywords": "JavaScript, Zahlenformatierung, lokales Zahlenformat, toLocaleString, Zahlenformatierung in verschiedenen Gebietsschemata"
      },
      "details": {
        "steps": [
          {
            "title": "Zahl formatieren",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Überprüfen von Node-Befehlen in der ZSH-Geschichte",
                "file": "verify1-1.sh",
                "hint": "JavaScript kann im Terminal/SSH ausgeführt werden, indem man 'node' eingibt und die Eingabetaste drückt."
              }
            ]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "JavaScript でローカルな数値をフォーマットする",
      "description": "この実験では、JavaScript でローカルな数値形式の順序を使用して数値をフォーマットする方法を探ります。コンマやピリオドなどの区切り記号を使用して、与えられた数値をローカルな数値形式に変換するために、Number.prototype.toLocaleString() メソッドを使用します。この実験が終了するとき、異なるロケールで数値をフォーマットする方法を明確に理解しているでしょう。",
      "meta": {
        "title": "JavaScript の数値フォーマット | ローカルな数値形式",
        "description": "JavaScript でローカルな数値形式の順序を使用して数値をフォーマットする方法を学びましょう。toLocaleString() メソッドを調べ、異なるロケールでの数値フォーマットを理解しましょう。",
        "keywords": "JavaScript, 数値フォーマット, ローカルな数値形式, toLocaleString, 異なるロケールでの数値フォーマット"
      },
      "details": {
        "steps": [
          {
            "title": "数値をフォーマットする",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "ZSH 履歴における Node コマンドを確認する",
                "file": "verify1-1.sh",
                "hint": "ターミナル/SSH で 'node' と入力して Enter キーを押すことで JavaScript を実行できます。"
              }
            ]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Форматирование чисел локально в JavaScript",
      "description": "В этом практическом занятии мы изучим, как форматировать числа с использованием местного формата чисел в JavaScript. Мы будем использовать метод Number.prototype.toLocaleString(), чтобы преобразовать заданное число в местный формат чисел с использованием разделителей, таких как запятые и точки. В конце этого практического занятия вы четко поймете, как форматировать числа в различных локалях.",
      "meta": {
        "title": "Форматирование чисел в JavaScript | Местный формат чисел",
        "description": "Изучите, как форматировать числа с использованием местного формата чисел в JavaScript. Исследуйте метод toLocaleString() и понять форматирование чисел в различных локалях.",
        "keywords": "JavaScript, форматирование чисел, местный формат чисел, toLocaleString, форматирование чисел в различных локалях"
      },
      "details": {
        "steps": [
          {
            "title": "Форматировать число",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "Проверить команды Node в истории ZSH",
                "file": "verify1-1.sh",
                "hint": "JavaScript можно запустить в Терминале/SSH, введя 'node' и нажав Enter."
              }
            ]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    }
  ]
}
