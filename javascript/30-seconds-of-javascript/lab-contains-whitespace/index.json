{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Check if String Contains Whitespace",
  "description": "In this lab, we will explore how to check if a given string contains any whitespace characters using regular expressions in JavaScript. The lab will provide a step-by-step guide on how to use the RegExp.prototype.test() method to check if a string contains any whitespace characters. By the end of this lab, you will have a better understanding of how to check for whitespace characters in JavaScript strings.",
  "meta": {
    "title": "Whitespace Checking in JavaScript | Regular Expressions",
    "description": "Learn how to check if a string contains whitespace characters using regular expressions in JavaScript. Improve your coding skills with this step-by-step guide.",
    "keywords": "JavaScript, Regular Expressions, Whitespace, String Manipulation, Coding Tutorial"
  },
  "difficulty": "Beginner",
  "time": 10,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Check if String Contains Whitespace",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify Node Commands in ZSH History",
            "file": "verify1-1.sh",
            "hint": "JavaScript can be run in the Terminal/SSH by typing 'node' and pressing Enter.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "javascript/arith_ops",
          "javascript/comp_ops",
          "javascript/data_types",
          "javascript/variables"
        ]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["Lotus-7"],
  "license": {
    "name": "CC-BY-4.0",
    "url": "https://github.com/30-seconds/30-seconds-of-code/blob/master/LICENSE",
    "repo": "https://github.com/30-seconds/30-seconds-of-code"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "检查字符串是否包含空白字符",
      "description": "在本实验中，我们将探索如何使用JavaScript中的正则表达式检查给定字符串是否包含任何空白字符。本实验将提供一份关于如何使用RegExp.prototype.test()方法检查字符串是否包含任何空白字符的分步指南。在本实验结束时，你将对如何在JavaScript字符串中检查空白字符有更深入的理解。",
      "meta": {
        "title": "JavaScript中的空白字符检查 | 正则表达式",
        "description": "学习如何使用JavaScript中的正则表达式检查字符串是否包含空白字符。通过本分步指南提升你的编码技能。",
        "keywords": "JavaScript, 正则表达式, 空白字符, 字符串操作, 编码教程"
      },
      "details": {
        "steps": [
          {
            "title": "检查字符串是否包含空白字符",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "验证ZSH历史记录中的Node命令",
                "file": "verify1-1.sh",
                "hint": "通过输入'node'并按Enter键，可以在终端/SSH中运行JavaScript。"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Comprobar si una cadena contiene espacios en blanco",
      "description": "En este laboratorio, exploraremos cómo comprobar si una cadena dada contiene caracteres en blanco utilizando expresiones regulares en JavaScript. El laboratorio proporcionará una guía paso a paso sobre cómo utilizar el método RegExp.prototype.test() para comprobar si una cadena contiene caracteres en blanco. Al final de este laboratorio, tendrás una mejor comprensión de cómo comprobar los caracteres en blanco en cadenas de JavaScript.",
      "meta": {
        "title": "Comprobación de espacios en blanco en JavaScript | Expresiones regulares",
        "description": "Aprende cómo comprobar si una cadena contiene caracteres en blanco utilizando expresiones regulares en JavaScript. Mejora tus habilidades de codificación con esta guía paso a paso.",
        "keywords": "JavaScript, Expresiones regulares, Espacios en blanco, Manipulación de cadenas, Tutorial de codificación"
      },
      "details": {
        "steps": [
          {
            "title": "Comprobar si una cadena contiene espacios en blanco",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Verificar comandos de Node en el historial de ZSH",
                "file": "verify1-1.sh",
                "hint": "Se puede ejecutar JavaScript en la Terminal/SSH escribiendo 'node' y presionando Enter."
              }
            ]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Vérifier si une chaîne contient des espaces blancs",
      "description": "Dans ce laboratoire, nous allons explorer la manière de vérifier si une chaîne de caractères donnée contient des caractères d'espacement à l'aide d'expressions régulières en JavaScript. Le laboratoire fournira un guide étape par étape sur la manière d'utiliser la méthode RegExp.prototype.test() pour vérifier si une chaîne contient des caractères d'espacement. À la fin de ce laboratoire, vous aurez une meilleure compréhension de la manière de vérifier les caractères d'espacement dans les chaînes de caractères JavaScript.",
      "meta": {
        "title": "Vérification d'espaces blancs en JavaScript | Expressions régulières",
        "description": "Découvrez comment vérifier si une chaîne contient des caractères d'espacement à l'aide d'expressions régulières en JavaScript. Améliorez vos compétences de codage avec ce guide étape par étape.",
        "keywords": "JavaScript, Expressions régulières, Espaces blancs, Manipulation de chaînes, Tutoriel de codage"
      },
      "details": {
        "steps": [
          {
            "title": "Vérifier si une chaîne contient des espaces blancs",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Vérifier les commandes Node dans l'historique ZSH",
                "file": "verify1-1.sh",
                "hint": "JavaScript peut être exécuté dans le Terminal/SSH en tapant 'node' et en appuyant sur Entrée."
              }
            ]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Prüfen, ob ein String Leerzeichen enthält",
      "description": "In diesem Lab werden wir untersuchen, wie man mithilfe von regulären Ausdrücken in JavaScript überprüft, ob ein gegebener String Leerzeichen enthält. Das Lab bietet einen Schritt-für-Schritt-Leitfaden darüber, wie man die RegExp.prototype.test()-Methode verwendet, um zu überprüfen, ob ein String Leerzeichen enthält. Am Ende dieses Labs werden Sie ein besseres Verständnis dafür haben, wie man in JavaScript-Strings nach Leerzeichen sucht.",
      "meta": {
        "title": "Leerzeichenprüfung in JavaScript | Reguläre Ausdrücke",
        "description": "Lernen Sie, wie man mithilfe von regulären Ausdrücken in JavaScript überprüft, ob ein String Leerzeichen enthält. Verbessern Sie Ihre Programmierkenntnisse mit diesem Schritt-für-Schritt-Leitfaden.",
        "keywords": "JavaScript, Reguläre Ausdrücke, Leerzeichen, Zeichenkettenmanipulation, Code-Tutorial"
      },
      "details": {
        "steps": [
          {
            "title": "Prüfen, ob ein String Leerzeichen enthält",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Überprüfen von Node-Befehlen in der ZSH-Historie",
                "file": "verify1-1.sh",
                "hint": "JavaScript kann im Terminal/SSH ausgeführt werden, indem man 'node' eingibt und die Enter-Taste drückt."
              }
            ]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "文字列に空白文字が含まれているかどうかを確認する",
      "description": "この実験では、JavaScript で正規表現を使って与えられた文字列に空白文字が含まれているかどうかを確認する方法を探ります。この実験では、文字列に空白文字が含まれているかどうかを確認するために RegExp.prototype.test() メソッドをどのように使うかについての手順を示します。この実験が終わるとき、JavaScript の文字列における空白文字の確認方法をより深く理解しているでしょう。",
      "meta": {
        "title": "JavaScript における空白文字の確認 | 正規表現",
        "description": "JavaScript で正規表現を使って文字列に空白文字が含まれているかどうかを確認する方法を学びましょう。この手順に従ってコーディング技術を向上させましょう。",
        "keywords": "JavaScript, 正規表現, 空白文字, 文字列操作, コーディングチュートリアル"
      },
      "details": {
        "steps": [
          {
            "title": "文字列に空白文字が含まれているかどうかを確認する",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "ZSH履歴におけるNodeコマンドを確認する",
                "file": "verify1-1.sh",
                "hint": "ターミナル/SSHで 'node' と入力してEnterキーを押すことでJavaScriptを実行できます。"
              }
            ]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Проверить, содержит ли строка пробельные символы",
      "description": "В этом практическом занятии мы изучим, как с помощью регулярных выражений в JavaScript проверить, содержит ли заданная строка какие-либо пробельные символы. Практическое занятие предоставит пошаговое руководство по использованию метода RegExp.prototype.test() для проверки, содержит ли строка какие-либо пробельные символы. В конце этого практического занятия вы будете лучше понимать, как проверять пробельные символы в строках JavaScript.",
      "meta": {
        "title": "Проверка пробельных символов в JavaScript | Регулярные выражения",
        "description": "Изучите, как проверить, содержит ли строка пробельные символы, используя регулярные выражения в JavaScript. Улучшите свои навыки в написании кода с помощью этого пошагового руководства.",
        "keywords": "JavaScript, Регулярные выражения, Пробельные символы, Обработка строк, Руководство по программированию"
      },
      "details": {
        "steps": [
          {
            "title": "Проверить, содержит ли строка пробельные символы",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "Проверить команды Node в истории ZSH",
                "file": "verify1-1.sh",
                "hint": "JavaScript можно запустить в Терминале/SSH, введя 'node' и нажав Enter."
              }
            ]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    }
  ]
}
