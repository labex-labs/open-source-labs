{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Hash String Into Number",
  "description": "In this lab, we will explore how to hash a string into a whole number using the SDBM algorithm. We will use String.prototype.split() and Array.prototype.reduce() to create a hash of the input string, utilizing bit shifting. The purpose of this lab is to introduce you to the concept of hashing and how it can be used to generate unique identifiers for data.",
  "meta": {
    "title": "JavaScript String Hashing | SDBM Algorithm",
    "description": "Learn how to hash a string into a whole number using the SDBM algorithm in JavaScript. Explore the concepts of hashing and generating unique identifiers for data.",
    "keywords": "JavaScript, String Hashing, SDBM Algorithm, Hashing, Unique Identifiers"
  },
  "difficulty": "Beginner",
  "time": 10,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Hash String Into Number",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify Node Command Usage",
            "file": "verify1-1.sh",
            "hint": "JavaScript can be run in the Terminal/SSH by typing 'node' and pressing Enter.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "javascript/arith_ops",
          "javascript/comp_ops",
          "javascript/data_types",
          "javascript/higher_funcs",
          "javascript/variables"
        ]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["Lotus-7"],
  "license": {
    "name": "CC-BY-4.0",
    "url": "https://github.com/30-seconds/30-seconds-of-code/blob/master/LICENSE",
    "repo": "https://github.com/30-seconds/30-seconds-of-code"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "将字符串哈希为数字",
      "description": "在本实验中，我们将探索如何使用SDBM算法将字符串哈希为一个整数。我们将使用String.prototype.split()和Array.prototype.reduce()来创建输入字符串的哈希值，并利用位运算。本实验的目的是向你介绍哈希的概念，以及如何使用它为数据生成唯一标识符。",
      "meta": {
        "title": "JavaScript字符串哈希 | SDBM算法",
        "description": "学习如何使用JavaScript中的SDBM算法将字符串哈希为一个整数。探索哈希的概念以及为数据生成唯一标识符的方法。",
        "keywords": "JavaScript, 字符串哈希, SDBM算法, 哈希, 唯一标识符"
      },
      "details": {
        "steps": [
          {
            "title": "将字符串哈希为数字",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "验证Node命令的用法",
                "file": "verify1-1.sh",
                "hint": "在终端/SSH中，通过输入'node'并按回车键可以运行JavaScript。"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Hash de cadena en número",
      "description": "En este laboratorio, exploraremos cómo hashear una cadena en un número entero utilizando el algoritmo SDBM. Utilizaremos String.prototype.split() y Array.prototype.reduce() para crear un hash de la cadena de entrada, utilizando desplazamiento de bits. El propósito de este laboratorio es introducirte al concepto de hash y cómo se puede utilizar para generar identificadores únicos para los datos.",
      "meta": {
        "title": "Hash de cadenas de JavaScript | Algoritmo SDBM",
        "description": "Aprende cómo hashear una cadena en un número entero utilizando el algoritmo SDBM en JavaScript. Explora los conceptos de hash y generación de identificadores únicos para los datos.",
        "keywords": "JavaScript, Hash de cadenas, Algoritmo SDBM, Hash, Identificadores únicos"
      },
      "details": {
        "steps": [
          {
            "title": "Hash de cadena en número",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Verificar el uso del comando Node",
                "file": "verify1-1.sh",
                "hint": "JavaScript se puede ejecutar en la Terminal/SSH escribiendo 'node' y presionando Enter."
              }
            ]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Hacher une chaîne de caractères en un nombre",
      "description": "Dans ce laboratoire, nous allons explorer la manière de hacher une chaîne de caractères en un nombre entier à l'aide de l'algorithme SDBM. Nous utiliserons String.prototype.split() et Array.prototype.reduce() pour créer un hachage de la chaîne d'entrée, en utilisant le décalage binaire. Le but de ce laboratoire est de vous présenter le concept de hachage et de montrer comment il peut être utilisé pour générer des identifiants uniques pour les données.",
      "meta": {
        "title": "Hachage de chaînes de caractères en JavaScript | Algorithme SDBM",
        "description": "Découvrez comment hacher une chaîne de caractères en un nombre entier à l'aide de l'algorithme SDBM en JavaScript. Explorez les concepts de hachage et de génération d'identifiants uniques pour les données.",
        "keywords": "JavaScript, Hachage de chaînes de caractères, Algorithme SDBM, Hachage, Identifiants uniques"
      },
      "details": {
        "steps": [
          {
            "title": "Hacher une chaîne de caractères en un nombre",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Vérifier l'utilisation de la commande Node",
                "file": "verify1-1.sh",
                "hint": "JavaScript peut être exécuté dans le Terminal/SSH en tapant 'node' et en appuyant sur Entrée."
              }
            ]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Einen String in eine Zahl hashen",
      "description": "In diesem Lab werden wir untersuchen, wie man einen String mithilfe des SDBM-Algorithmus in eine Ganzzahl hashen kann. Wir werden String.prototype.split() und Array.prototype.reduce() verwenden, um einen Hash des Eingabestrings zu erstellen, wobei wir Bitverschiebungen nutzen. Ziel dieses Labs ist es, Ihnen das Konzept des Hashing vorzustellen und zu zeigen, wie es verwendet werden kann, um eindeutige Bezeichner für Daten zu generieren.",
      "meta": {
        "title": "JavaScript-String-Hashing | SDBM-Algorithmus",
        "description": "Lernen Sie, wie man in JavaScript einen String mithilfe des SDBM-Algorithmus in eine Ganzzahl hashen kann. Erkunden Sie die Konzepte des Hashing und das Generieren eindeutiger Bezeichner für Daten.",
        "keywords": "JavaScript, String-Hashing, SDBM-Algorithmus, Hashing, Eindeutige Bezeichner"
      },
      "details": {
        "steps": [
          {
            "title": "Einen String in eine Zahl hashen",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Verifizieren der Verwendung des Node-Befehls",
                "file": "verify1-1.sh",
                "hint": "JavaScript kann im Terminal/SSH ausgeführt werden, indem man 'node' eingibt und die Eingabetaste drückt."
              }
            ]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "文字列を数値にハッシュ化する",
      "description": "この実験では、SDBM アルゴリズムを使用して文字列を整数にハッシュ化する方法を検討します。String.prototype.split() と Array.prototype.reduce() を使用して、ビットシフトを利用して入力文字列のハッシュを作成します。この実験の目的は、ハッシュ化の概念と、データに固有の識別子を生成するためにどのように使用できるかを紹介することです。",
      "meta": {
        "title": "JavaScript 文字列ハッシュ化 | SDBM アルゴリズム",
        "description": "JavaScript で SDBM アルゴリズムを使用して文字列を整数にハッシュ化する方法を学びましょう。ハッシュ化の概念と、データに固有の識別子を生成する方法を探求しましょう。",
        "keywords": "JavaScript, 文字列ハッシュ化, SDBM アルゴリズム, ハッシュ化, 固有識別子"
      },
      "details": {
        "steps": [
          {
            "title": "文字列を数値にハッシュ化する",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "Node コマンドの使用を確認する",
                "file": "verify1-1.sh",
                "hint": "ターミナル/SSH で 'node' と入力して Enter キーを押すことで、JavaScript を実行できます。"
              }
            ]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Хеширование строки в число",
      "description": "В этой лабораторной работе мы изучим, как хешировать строку в целое число с использованием алгоритма SDBM. Мы будем использовать String.prototype.split() и Array.prototype.reduce() для создания хеша входной строки, используя битовые сдвиги. Цель этой лабораторной работы - познакомить вас с концепцией хеширования и с тем, как его можно использовать для генерации уникальных идентификаторов для данных.",
      "meta": {
        "title": "Хеширование строк в JavaScript | Алгоритм SDBM",
        "description": "Изучите, как хешировать строку в целое число с использованием алгоритма SDBM в JavaScript. Исследуйте концепции хеширования и генерации уникальных идентификаторов для данных.",
        "keywords": "JavaScript, Хеширование строк, Алгоритм SDBM, Хеширование, Уникальные идентификаторы"
      },
      "details": {
        "steps": [
          {
            "title": "Хеширование строки в число",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "Проверить использование команды Node",
                "file": "verify1-1.sh",
                "hint": "JavaScript можно запустить в Терминале/SSH, введя 'node' и нажав Enter."
              }
            ]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    }
  ]
}
