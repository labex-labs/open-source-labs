{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Retrieve Function Arguments with nthArg",
  "description": "In this lab, we will explore the implementation of a JavaScript function called nthArg, which allows us to retrieve the nth argument of a function. We will learn how to use Array.prototype.slice() method to retrieve the desired argument, and also how to handle negative values for n. By the end of this lab, we will have a solid understanding of how to use nthArg to retrieve arguments from a function.",
  "meta": {
    "title": "JavaScript Function | Retrieve Nth Argument",
    "description": "Learn how to implement a JavaScript function called `nthArg` to retrieve the nth argument of a function. Explore the use of `Array.prototype.slice()` and handling negative values for `n`.",
    "keywords": "JavaScript, Function, Argument, nthArg, Array.prototype.slice"
  },
  "difficulty": "Beginner",
  "time": 5,
  "hidden": true,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "NTH Argument",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify Node Commands Usage",
            "file": "verify1-1.sh",
            "hint": "JavaScript can be run in the Terminal/SSH by typing 'node' and pressing Enter.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "javascript/arith_ops",
          "javascript/comp_ops",
          "javascript/data_types",
          "javascript/debugging",
          "javascript/spread_rest",
          "javascript/variables"
        ]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["Lotus-7"],
  "license": {
    "name": "CC-BY-4.0",
    "url": "https://github.com/30-seconds/30-seconds-of-code/blob/master/LICENSE",
    "repo": "https://github.com/30-seconds/30-seconds-of-code"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "使用 nthArg 获取函数参数",
      "description": "在本实验中，我们将探索一个名为 nthArg 的 JavaScript 函数的实现，该函数允许我们获取函数的第 n 个参数。我们将学习如何使用 Array.prototype.slice() 方法来获取所需的参数，以及如何处理 n 的负值。在本实验结束时，我们将对如何使用 nthArg 从函数中获取参数有深入的理解。",
      "meta": {
        "title": "JavaScript 函数 | 获取第 N 个参数",
        "description": "学习如何实现一个名为 `nthArg` 的 JavaScript 函数来获取函数的第 n 个参数。探索 `Array.prototype.slice()` 的使用以及处理 `n` 的负值。",
        "keywords": "JavaScript, 函数，参数，nthArg, Array.prototype.slice"
      },
      "details": {
        "steps": [
          {
            "title": "第 N 个参数",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "验证 Node 命令的用法",
                "file": "verify1-1.sh",
                "hint": "在终端/SSH 中，通过输入 'node' 并按下回车键，可以运行 JavaScript。"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Recuperar argumentos de función con nthArg",
      "description": "En este laboratorio, exploraremos la implementación de una función de JavaScript llamada nthArg, que nos permite recuperar el n-ésimo argumento de una función. Aprenderemos a usar el método Array.prototype.slice() para recuperar el argumento deseado y también a manejar valores negativos para n. Al final de este laboratorio, tendremos una comprensión sólida de cómo usar nthArg para recuperar argumentos de una función.",
      "meta": {
        "title": "Función de JavaScript | Recuperar el n-ésimo argumento",
        "description": "Aprende cómo implementar una función de JavaScript llamada `nthArg` para recuperar el n-ésimo argumento de una función. Explora el uso de `Array.prototype.slice()` y el manejo de valores negativos para `n`.",
        "keywords": "JavaScript, Función, Argumento, nthArg, Array.prototype.slice"
      },
      "details": {
        "steps": [
          {
            "title": "Argumento N-ésimo",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Verificar el uso de comandos de Node",
                "file": "verify1-1.sh",
                "hint": "JavaScript se puede ejecutar en la Terminal/SSH escribiendo 'node' y presionando Enter."
              }
            ]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Récupérer les arguments d'une fonction avec nthArg",
      "description": "Dans ce laboratoire, nous allons explorer la mise en œuvre d'une fonction JavaScript appelée nthArg, qui nous permet de récupérer le n-ième argument d'une fonction. Nous allons apprendre à utiliser la méthode Array.prototype.slice() pour récupérer l'argument souhaité, ainsi qu'à gérer les valeurs négatives pour n. À la fin de ce laboratoire, nous aurons une compréhension solide de la manière d'utiliser nthArg pour récupérer des arguments d'une fonction.",
      "meta": {
        "title": "Fonction JavaScript | Récupérer le n-ième argument",
        "description": "Apprenez à implémenter une fonction JavaScript appelée `nthArg` pour récupérer le n-ième argument d'une fonction. Explorez l'utilisation de `Array.prototype.slice()` et la gestion des valeurs négatives pour `n`.",
        "keywords": "JavaScript, Fonction, Argument, nthArg, Array.prototype.slice"
      },
      "details": {
        "steps": [
          {
            "title": "Argument N-ième",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Vérifier l'utilisation des commandes Node",
                "file": "verify1-1.sh",
                "hint": "JavaScript peut être exécuté dans le Terminal/SSH en tapant 'node' et en appuyant sur Entrée."
              }
            ]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Argumente von Funktionen mit nthArg abrufen",
      "description": "In diesem Lab werden wir die Implementierung einer JavaScript-Funktion namens nthArg untersuchen, die uns ermöglicht, das n-te Argument einer Funktion abzurufen. Wir werden lernen, wie die Array.prototype.slice()-Methode verwendet wird, um das gewünschte Argument abzurufen, und auch, wie negative Werte für n behandelt werden. Am Ende dieses Labs werden wir eine solide Vorstellung davon haben, wie nthArg verwendet wird, um Argumente aus einer Funktion abzurufen.",
      "meta": {
        "title": "JavaScript-Funktion | Ntes Argument abrufen",
        "description": "Lernen Sie, wie Sie eine JavaScript-Funktion namens `nthArg` implementieren, um das n-te Argument einer Funktion abzurufen. Entdecken Sie die Verwendung von `Array.prototype.slice()` und die Behandlung von negativen Werten für `n`.",
        "keywords": "JavaScript, Funktion, Argument, nthArg, Array.prototype.slice"
      },
      "details": {
        "steps": [
          {
            "title": "Ntes Argument",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Verifizieren der Verwendung von Node-Befehlen",
                "file": "verify1-1.sh",
                "hint": "JavaScript kann im Terminal/SSH ausgeführt werden, indem Sie 'node' eingeben und die Eingabetaste drücken."
              }
            ]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "nthArg を使って関数の引数を取得する",
      "description": "この実験では、`nthArg` と呼ばれる JavaScript 関数の実装を検討します。この関数を使うと、関数の n 番目の引数を取得できます。`Array.prototype.slice()` メソッドを使って目的の引数を取得する方法と、`n` に対する負の値を処理する方法を学びます。この実験が終了するとき、`nthArg` を使って関数から引数を取得する方法を十分に理解していることになります。",
      "meta": {
        "title": "JavaScript 関数 | n 番目の引数を取得する",
        "description": "`nthArg` と呼ばれる JavaScript 関数を実装して、関数の n 番目の引数を取得する方法を学びましょう。`Array.prototype.slice()` の使い方と、`n` に対する負の値の処理についても検討します。",
        "keywords": "JavaScript，関数，引数，nthArg,Array.prototype.slice"
      },
      "details": {
        "steps": [
          {
            "title": "NTH 引数",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "Node コマンドの使用を確認する",
                "file": "verify1-1.sh",
                "hint": "ターミナル/SSH で'node'と入力して Enter キーを押すことで、JavaScript を実行できます。"
              }
            ]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Получение аргументов функции с помощью nthArg",
      "description": "В этом практическом занятии мы изучим реализацию JavaScript-функции под названием nthArg, которая позволяет нам получать n-й аргумент функции. Мы узнаем, как использовать метод Array.prototype.slice() для получения нужного аргумента, а также как обрабатывать отрицательные значения для n. В конце этого практического занятия мы четко поймем, как использовать nthArg для извлечения аргументов из функции.",
      "meta": {
        "title": "JavaScript-функция | Получение n-го аргумента",
        "description": "Изучите, как реализовать JavaScript-функцию под названием `nthArg` для получения n-го аргумента функции. Исследуйте использование `Array.prototype.slice()` и обработку отрицательных значений для `n`.",
        "keywords": "JavaScript, Функция, Аргумент, nthArg, Array.prototype.slice"
      },
      "details": {
        "steps": [
          {
            "title": "n-й аргумент",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "Проверить использование команд Node",
                "file": "verify1-1.sh",
                "hint": "JavaScript можно запустить в Терминале/SSH, введя 'node' и нажав Enter."
              }
            ]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    },
    {
      "lang": "ko",
      "title": "nthArg 로 함수 인수 가져오기",
      "description": "이 랩에서는 함수의 n 번째 인수를 가져오는 JavaScript 함수인 nthArg 의 구현을 살펴봅니다. Array.prototype.slice() 메서드를 사용하여 원하는 인수를 가져오는 방법과 n 에 대한 음수 값을 처리하는 방법을 배웁니다. 이 랩을 마치면 nthArg 를 사용하여 함수에서 인수를 가져오는 방법에 대한 확실한 이해를 갖게 될 것입니다.",
      "meta": {
        "title": "JavaScript 함수 | n 번째 인수 가져오기 (nthArg)",
        "description": "함수의 n 번째 인수를 가져오는 `nthArg` 라는 JavaScript 함수를 구현하는 방법을 알아보세요. `Array.prototype.slice()` 사용법과 `n` 에 대한 음수 값 처리를 살펴보세요.",
        "keywords": "JavaScript, 함수, 인수, nthArg, Array.prototype.slice, 자바스크립트, 함수 인수, nthArg 사용법"
      },
      "details": {
        "steps": [
          {
            "title": "NTH Argument",
            "text": "ko/step1.md",
            "verify": [
              {
                "name": "Node 명령어 사용 확인",
                "file": "verify1-1.sh",
                "hint": "터미널/SSH 에서 'node'를 입력하고 Enter 키를 눌러 JavaScript 를 실행할 수 있습니다."
              }
            ]
          }
        ],
        "intro": {
          "text": "ko/intro.md",
          "title": "소개"
        },
        "finish": {
          "text": "ko/finish.md",
          "title": "요약"
        }
      }
    },
    {
      "lang": "pt",
      "title": "Recuperar Argumentos de Funções com nthArg",
      "description": "Neste laboratório, exploraremos a implementação de uma função JavaScript chamada nthArg, que nos permite recuperar o n-ésimo argumento de uma função. Aprenderemos como usar o método Array.prototype.slice() para recuperar o argumento desejado e também como lidar com valores negativos para n. Ao final deste laboratório, teremos uma sólida compreensão de como usar nthArg para recuperar argumentos de uma função.",
      "meta": {
        "title": "Função JavaScript | Recuperar o N-ésimo Argumento",
        "description": "Aprenda a implementar uma função JavaScript chamada `nthArg` para recuperar o n-ésimo argumento de uma função. Explore o uso de `Array.prototype.slice()` e o tratamento de valores negativos para `n`.",
        "keywords": "JavaScript, Função, Argumento, nthArg, Array.prototype.slice, obter argumento, função javascript"
      },
      "details": {
        "steps": [
          {
            "title": "NTH Argument",
            "text": "pt/step1.md",
            "verify": [
              {
                "name": "Verificar Uso de Comandos Node",
                "file": "verify1-1.sh",
                "hint": "JavaScript pode ser executado no Terminal/SSH digitando 'node' e pressionando Enter."
              }
            ]
          }
        ],
        "intro": {
          "text": "pt/intro.md",
          "title": "Introdução"
        },
        "finish": {
          "text": "pt/finish.md",
          "title": "Resumo"
        }
      }
    }
  ]
}
