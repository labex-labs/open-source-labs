{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Calculating Euclidean Vector Distance in JavaScript",
  "description": "In this lab, we will dive into the world of JavaScript programming and explore the concept of vector distance. The purpose of the lab is to help you understand how to use Array.prototype.reduce(), Math.pow(), and Math.sqrt() to calculate the Euclidean distance between two vectors. By the end of the lab, you will have gained practical experience in implementing this useful function in JavaScript.",
  "meta": {
    "title": "JavaScript Programming | Vector Distance Calculation",
    "description": "Learn how to use JavaScript's Array.prototype.reduce(), Math.pow(), and Math.sqrt() to calculate the Euclidean distance between two vectors.",
    "keywords": "JavaScript, Programming, Vector Distance, Euclidean Distance, Array.prototype.reduce, Math.pow, Math.sqrt"
  },
  "difficulty": "Beginner",
  "time": 10,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Vector Distance",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify Node Commands In Zsh History",
            "file": "verify1-1.sh",
            "hint": "JavaScript can be run in the Terminal/SSH by typing 'node' and pressing Enter.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "javascript/arith_ops",
          "javascript/array_methods",
          "javascript/comp_ops",
          "javascript/data_types",
          "javascript/higher_funcs",
          "javascript/variables"
        ]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["Lotus-7"],
  "license": {
    "name": "CC-BY-4.0",
    "url": "https://github.com/30-seconds/30-seconds-of-code/blob/master/LICENSE",
    "repo": "https://github.com/30-seconds/30-seconds-of-code"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "用 JavaScript 计算欧几里得向量距离",
      "description": "在本实验中，我们将深入探索 JavaScript 编程的世界，并探究向量距离的概念。本实验的目的是帮助你理解如何使用 Array.prototype.reduce()、Math.pow() 和 Math.sqrt() 来计算两个向量之间的欧几里得距离。在实验结束时，你将在 JavaScript 中实现这个有用的函数方面获得实践经验。",
      "meta": {
        "title": "JavaScript 编程 | 向量距离计算",
        "description": "学习如何使用 JavaScript 的 Array.prototype.reduce()、Math.pow() 和 Math.sqrt() 来计算两个向量之间的欧几里得距离。",
        "keywords": "JavaScript，编程，向量距离，欧几里得距离，Array.prototype.reduce,Math.pow,Math.sqrt"
      },
      "details": {
        "steps": [
          {
            "title": "向量距离",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "在 Zsh 历史记录中验证 Node 命令",
                "file": "verify1-1.sh",
                "hint": "通过输入'node'并按回车键，可以在终端/SSH 中运行 JavaScript。"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Cálculo de la Distancia Euclidiana de Vectores en JavaScript",
      "description": "En este laboratorio, profundizaremos en el mundo de la programación de JavaScript y exploraremos el concepto de distancia vectorial. El objetivo del laboratorio es ayudarte a entender cómo utilizar Array.prototype.reduce(), Math.pow() y Math.sqrt() para calcular la distancia euclidiana entre dos vectores. Al final del laboratorio, habrás adquirido experiencia práctica en la implementación de esta función útil en JavaScript.",
      "meta": {
        "title": "Programación de JavaScript | Cálculo de Distancia Vectorial",
        "description": "Aprende cómo utilizar Array.prototype.reduce(), Math.pow() y Math.sqrt() de JavaScript para calcular la distancia euclidiana entre dos vectores.",
        "keywords": "JavaScript, Programación, Distancia Vectorial, Distancia Euclidiana, Array.prototype.reduce, Math.pow, Math.sqrt"
      },
      "details": {
        "steps": [
          {
            "title": "Distancia Vectorial",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Verificar los comandos de Node en el historial de Zsh",
                "file": "verify1-1.sh",
                "hint": "Se puede ejecutar JavaScript en la Terminal/SSH escribiendo 'node' y presionando Enter."
              }
            ]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Calcul de la distance vectorielle euclidienne en JavaScript",
      "description": "Dans ce laboratoire, nous allons plonger dans le monde de la programmation JavaScript et explorer le concept de distance vectorielle. Le but du laboratoire est de vous aider à comprendre comment utiliser Array.prototype.reduce(), Math.pow() et Math.sqrt() pour calculer la distance euclidienne entre deux vecteurs. À la fin du laboratoire, vous aurez acquis une expérience pratique dans la mise en œuvre de cette fonction utile en JavaScript.",
      "meta": {
        "title": "Programmation JavaScript | Calcul de la distance vectorielle",
        "description": "Découvrez comment utiliser Array.prototype.reduce(), Math.pow() et Math.sqrt() de JavaScript pour calculer la distance euclidienne entre deux vecteurs.",
        "keywords": "JavaScript, Programmation, Distance vectorielle, Distance euclidienne, Array.prototype.reduce, Math.pow, Math.sqrt"
      },
      "details": {
        "steps": [
          {
            "title": "Distance vectorielle",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Vérifier les commandes Node dans l'historique Zsh",
                "file": "verify1-1.sh",
                "hint": "JavaScript peut être exécuté dans le Terminal/SSH en tapant 'node' et en appuyant sur Entrée."
              }
            ]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Berechnung der euklidischen Vektordistanz in JavaScript",
      "description": "In diesem Lab werden wir in die Welt der JavaScript-Programmierung eintauchen und das Konzept der Vektordistanz erkunden. Ziel des Labs ist es, Ihnen zu helfen, zu verstehen, wie Sie Array.prototype.reduce(), Math.pow() und Math.sqrt() verwenden, um die euklidische Distanz zwischen zwei Vektoren zu berechnen. Am Ende des Labs werden Sie praktische Erfahrungen bei der Implementierung dieser nützlichen Funktion in JavaScript gesammelt haben.",
      "meta": {
        "title": "JavaScript-Programmierung | Vektordistanzberechnung",
        "description": "Lernen Sie, wie Sie JavaScripts Array.prototype.reduce(), Math.pow() und Math.sqrt() verwenden, um die euklidische Distanz zwischen zwei Vektoren zu berechnen.",
        "keywords": "JavaScript, Programmierung, Vektordistanz, euklidische Distanz, Array.prototype.reduce, Math.pow, Math.sqrt"
      },
      "details": {
        "steps": [
          {
            "title": "Vektordistanz",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Verifiziere Node-Befehle in der Zsh-Geschichte",
                "file": "verify1-1.sh",
                "hint": "JavaScript kann im Terminal/SSH ausgeführt werden, indem man 'node' eingibt und die Enter-Taste drückt."
              }
            ]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "JavaScript でのユークリッドベクトル距離の計算",
      "description": "この実験では、JavaScript プログラミングの世界に突入し、ベクトル距離の概念を探求します。この実験の目的は、2 つのベクトル間のユークリッド距離を計算するために `Array.prototype.reduce()`、`Math.pow()`、および `Math.sqrt()` をどのように使用するかを理解することです。実験が終了するまでに、JavaScript でこの便利な関数を実装する実際の経験を得ることができます。",
      "meta": {
        "title": "JavaScript プログラミング | ベクトル距離の計算",
        "description": "JavaScript の `Array.prototype.reduce()`、`Math.pow()`、および `Math.sqrt()` を使って 2 つのベクトル間のユークリッド距離を計算する方法を学びましょう。",
        "keywords": "JavaScript, プログラミング，ベクトル距離，ユークリッド距離，Array.prototype.reduce, Math.pow, Math.sqrt"
      },
      "details": {
        "steps": [
          {
            "title": "ベクトル距離",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "Zsh 履歴における Node コマンドを確認する",
                "file": "verify1-1.sh",
                "hint": "ターミナル/SSH で 'node' と入力して Enter キーを押すことで JavaScript を実行できます。"
              }
            ]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Вычисление евклидового расстояния между векторами на JavaScript",
      "description": "В этом лабе мы углубимся в мир программирования на JavaScript и исследуем концепцию расстояния между векторами. Цель лабы - помочь вам понять, как использовать Array.prototype.reduce(), Math.pow() и Math.sqrt() для вычисления евклидового расстояния между двумя векторами. В конце лабы вы получите практический опыт в реализации этой полезной функции на JavaScript.",
      "meta": {
        "title": "Программирование на JavaScript | Вычисление расстояния между векторами",
        "description": "Изучите, как использовать Array.prototype.reduce(), Math.pow() и Math.sqrt() JavaScript для вычисления евклидового расстояния между двумя векторами.",
        "keywords": "JavaScript, Программирование, Расстояние между векторами, Евклидово расстояние, Array.prototype.reduce, Math.pow, Math.sqrt"
      },
      "details": {
        "steps": [
          {
            "title": "Расстояние между векторами",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "Проверить команды Node в истории Zsh",
                "file": "verify1-1.sh",
                "hint": "JavaScript можно запустить в Терминале/SSH, введя 'node' и нажав Enter."
              }
            ]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    }
  ]
}
