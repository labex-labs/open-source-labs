{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Toggle Element in Array",
  "description": "In this lab, we will explore how to toggle an element in an array using JavaScript. The toggleElement() function allows you to remove an element from an array if it's already included in it or add the element to the array if it's not already present. This lab will help you understand how to use the includes() and filter() methods in combination with the spread operator to efficiently toggle array elements.",
  "meta": {
    "title": "Toggle Array Elements | JavaScript Coding Tutorial",
    "description": "Learn how to efficiently toggle elements in an array using JavaScript's includes() and filter() methods, along with the spread operator.",
    "keywords": "JavaScript, array, toggle, includes, filter, spread operator, programming tutorial"
  },
  "difficulty": "Beginner",
  "time": 5,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Toggle Element in Array",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify Node Commands in ZSH History",
            "file": "verify1-1.sh",
            "hint": "JavaScript can be run in the Terminal/SSH by typing 'node' and pressing Enter.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "javascript/arith_ops",
          "javascript/comp_ops",
          "javascript/data_types",
          "javascript/higher_funcs",
          "javascript/spread_rest",
          "javascript/variables"
        ]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["Lotus-7"],
  "license": {
    "name": "CC-BY-4.0",
    "url": "https://github.com/30-seconds/30-seconds-of-code/blob/master/LICENSE",
    "repo": "https://github.com/30-seconds/30-seconds-of-code"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "数组中切换元素",
      "description": "在本实验中，我们将探索如何使用 JavaScript 切换数组中的元素。toggleElement() 函数可让你在元素已包含在数组中时将其从数组中移除，或者在元素不存在时将其添加到数组中。本实验将帮助你理解如何结合使用 includes() 和 filter() 方法以及展开运算符来高效地切换数组元素。",
      "meta": {
        "title": "切换数组元素 | JavaScript 编码教程",
        "description": "学习如何使用 JavaScript 的 includes() 和 filter() 方法以及展开运算符高效地切换数组中的元素。",
        "keywords": "JavaScript, 数组，切换，includes, filter, 展开运算符，编程教程"
      },
      "details": {
        "steps": [
          {
            "title": "数组中切换元素",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "在 ZSH 历史记录中验证 Node 命令",
                "file": "verify1-1.sh",
                "hint": "通过输入'node'并按 Enter 键，可以在终端/SSH 中运行 JavaScript。"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Alternar Elemento en Matriz",
      "description": "En este laboratorio, exploraremos cómo alternar un elemento en una matriz utilizando JavaScript. La función toggleElement() te permite eliminar un elemento de una matriz si ya está incluido en ella o agregar el elemento a la matriz si no está presente. Este laboratorio te ayudará a entender cómo utilizar los métodos includes() y filter() en combinación con el operador de propagación para alternar eficientemente los elementos de una matriz.",
      "meta": {
        "title": "Alternar Elementos de Matriz | Tutorial de Codificación de JavaScript",
        "description": "Aprende cómo alternar eficientemente elementos en una matriz utilizando los métodos includes() y filter() de JavaScript, junto con el operador de propagación.",
        "keywords": "JavaScript, matriz, alternar, includes, filter, operador de propagación, tutorial de programación"
      },
      "details": {
        "steps": [
          {
            "title": "Alternar Elemento en Matriz",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Verificar Comandos de Node en el Historial de ZSH",
                "file": "verify1-1.sh",
                "hint": "JavaScript se puede ejecutar en la Terminal/SSH escribiendo 'node' y presionando Enter."
              }
            ]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Basculement d'un élément dans un tableau",
      "description": "Dans ce laboratoire, nous allons explorer comment basculer un élément dans un tableau à l'aide de JavaScript. La fonction toggleElement() vous permet de supprimer un élément d'un tableau s'il est déjà inclus dans celui-ci ou d'ajouter l'élément au tableau s'il n'est pas déjà présent. Ce laboratoire vous aidera à comprendre comment utiliser les méthodes includes() et filter() en combinaison avec l'opérateur de propagation pour basculer efficacement les éléments du tableau.",
      "meta": {
        "title": "Basculement d'éléments de tableau | Tutoriel de codage JavaScript",
        "description": "Découvrez comment basculer efficacement des éléments dans un tableau à l'aide des méthodes includes() et filter() de JavaScript, ainsi que de l'opérateur de propagation.",
        "keywords": "JavaScript, tableau, basculement, includes, filter, opérateur de propagation, tutoriel de programmation"
      },
      "details": {
        "steps": [
          {
            "title": "Basculement d'un élément dans un tableau",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Vérifier les commandes Node dans l'historique ZSH",
                "file": "verify1-1.sh",
                "hint": "JavaScript peut être exécuté dans le Terminal/SSH en tapant 'node' et en appuyant sur Entrée."
              }
            ]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Element in einem Array umschalten",
      "description": "In diesem Lab werden wir untersuchen, wie man mithilfe von JavaScript ein Element in einem Array umschaltet. Die toggleElement()-Funktion ermöglicht es Ihnen, ein Element aus einem Array zu entfernen, wenn es bereits darin enthalten ist, oder das Element zum Array hinzuzufügen, wenn es noch nicht vorhanden ist. Dieses Lab wird Ihnen helfen, zu verstehen, wie die includes()- und filter()-Methoden in Kombination mit dem Spread-Operator effizient Arrayelemente umschalten.",
      "meta": {
        "title": "Arrayelemente umschalten | JavaScript-Coding-Tutorial",
        "description": "Lernen Sie, wie Sie mit JavaScripts includes()- und filter()-Methoden zusammen mit dem Spread-Operator Elemente in einem Array effizient umschalten.",
        "keywords": "JavaScript, Array, Umschalten, includes, filter, Spread-Operator, Programmier-Tutorial"
      },
      "details": {
        "steps": [
          {
            "title": "Element in einem Array umschalten",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Überprüfen von Node-Befehlen in der ZSH-Historie",
                "file": "verify1-1.sh",
                "hint": "JavaScript kann im Terminal/SSH ausgeführt werden, indem man 'node' eingibt und die Enter-Taste drückt."
              }
            ]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "配列内の要素をトグルする",
      "description": "この実験では、JavaScript を使って配列内の要素をトグルする方法を探ります。toggleElement() 関数を使うと、配列に既に含まれている要素を削除したり、まだ存在していない場合は要素を配列に追加したりできます。この実験では、includes() メソッドと filter() メソッドをスプレッド演算子と組み合わせて効率的に配列要素をトグルする方法を理解するのに役立ちます。",
      "meta": {
        "title": "配列要素をトグルする | JavaScript コーディング チュートリアル",
        "description": "JavaScript の includes() メソッドと filter() メソッドとスプレッド演算子を使って、配列内の要素を効率的にトグルする方法を学びましょう。",
        "keywords": "JavaScript, 配列，トグル，includes, filter, スプレッド演算子，プログラミング チュートリアル"
      },
      "details": {
        "steps": [
          {
            "title": "配列内の要素をトグルする",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "ZSH 履歴における Node コマンドを確認する",
                "file": "verify1-1.sh",
                "hint": "ターミナル/SSH で 'node' と入力して Enter キーを押すことで JavaScript を実行できます。"
              }
            ]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Переключение элемента в массиве",
      "description": "В этом практическом занятии мы изучим, как переключать элемент в массиве с использованием JavaScript. Функция toggleElement() позволяет удалить элемент из массива, если он уже включен в него, или добавить элемент в массив, если он отсутствует. Это практическое занятие поможет вам понять, как использовать методы includes() и filter() в сочетании с оператором расширения для эффективного переключения элементов массива.",
      "meta": {
        "title": "Переключение элементов массива | Руководство по программированию на JavaScript",
        "description": "Изучите, как эффективно переключать элементы в массиве с использованием методов includes() и filter() JavaScript, а также оператора расширения.",
        "keywords": "JavaScript, массив, переключение, includes, filter, оператор расширения, учебник по программированию"
      },
      "details": {
        "steps": [
          {
            "title": "Переключение элемента в массиве",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "Проверить команды Node в истории ZSH",
                "file": "verify1-1.sh",
                "hint": "JavaScript можно запустить в Терминале/SSH, введя 'node' и нажав Enter."
              }
            ]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    }
  ]
}
