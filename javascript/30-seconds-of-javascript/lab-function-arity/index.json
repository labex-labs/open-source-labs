{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Limiting Function Arguments in JavaScript",
  "description": "In this lab, we will explore the Function Arity concept in JavaScript. The purpose of this lab is to create a higher-order function that accepts a function and a number n as arguments and returns a new function that only accepts up to n arguments, ignoring any additional ones. This will help us understand how to limit the number of arguments passed to a function in JavaScript.",
  "meta": {
    "title": "JavaScript Function Arity | Limit Arguments",
    "description": "Explore the Function Arity concept in JavaScript. Create a higher-order function to limit the number of arguments accepted by any function.",
    "keywords": "JavaScript, Function Arity, Higher-Order Function, Limit Arguments"
  },
  "difficulty": "Beginner",
  "time": 10,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Function Arity",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify Node Command Usage",
            "file": "verify1-1.sh",
            "hint": "JavaScript can be run in the Terminal/SSH by typing 'node' and pressing Enter.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "javascript/arith_ops",
          "javascript/comp_ops",
          "javascript/data_types",
          "javascript/higher_funcs",
          "javascript/spread_rest",
          "javascript/variables"
        ]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["Lotus-7"],
  "license": {
    "name": "CC-BY-4.0",
    "url": "https://github.com/30-seconds/30-seconds-of-code/blob/master/LICENSE",
    "repo": "https://github.com/30-seconds/30-seconds-of-code"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "在JavaScript中限制函数参数",
      "description": "在本实验中，我们将探索JavaScript中的函数元数概念。本实验的目的是创建一个高阶函数，该函数接受一个函数和一个数字n作为参数，并返回一个新函数，该新函数最多只接受n个参数，忽略任何额外的参数。这将帮助我们理解如何在JavaScript中限制传递给函数的参数数量。",
      "meta": {
        "title": "JavaScript函数元数 | 限制参数",
        "description": "探索JavaScript中的函数元数概念。创建一个高阶函数以限制任何函数接受的参数数量。",
        "keywords": "JavaScript, 函数元数, 高阶函数, 限制参数"
      },
      "details": {
        "steps": [
          {
            "title": "函数元数",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "验证Node命令的用法",
                "file": "verify1-1.sh",
                "hint": "在终端/SSH中，通过输入'node'并按回车键可以运行JavaScript。"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    }
  ]
}
