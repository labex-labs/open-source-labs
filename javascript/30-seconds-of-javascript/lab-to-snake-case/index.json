{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Converting Strings to Snake Case with JavaScript",
  "description": "In this lab, we will delve into the world of JavaScript programming to learn how to convert a given string into snake case. We will use regular expressions and various array methods such as map(), slice(), and join() to break down the string and reconstruct it with underscores as separators. By the end of this lab, you will have a good understanding of how to manipulate strings in JavaScript and apply these concepts to other programming projects.",
  "meta": {
    "title": "Convert Strings to Snake Case with JavaScript",
    "description": "Learn how to convert strings to snake case using JavaScript's regular expressions and array methods.",
    "keywords": "string manipulation, javascript, javascript practice, regular expressions, snake case, javascript practice online, programming tutorial, javascript lab, javascript tutor"
  },
  "difficulty": "Beginner",
  "time": 5,
  "hidden": true,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Snakecase String",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify Node Commands In Bash History",
            "file": "verify1-1.sh",
            "hint": "JavaScript can be run in the Terminal/SSH by typing 'node' and pressing Enter.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "javascript/arith_ops",
          "javascript/comp_ops",
          "javascript/cond_stmts",
          "javascript/data_types",
          "javascript/higher_funcs",
          "javascript/variables"
        ]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["Lotus-7"],
  "license": {
    "name": "CC-BY-4.0",
    "url": "https://github.com/30-seconds/30-seconds-of-code/blob/master/LICENSE",
    "repo": "https://github.com/30-seconds/30-seconds-of-code"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "使用 JavaScript 将字符串转换为蛇形命名法",
      "description": "在本实验中，我们将深入探讨 JavaScript 编程的世界，学习如何将给定的字符串转换为蛇形命名法。我们将使用正则表达式和各种数组方法，如 map()、slice() 和 join()，来分解字符串并使用下划线作为分隔符重新构建它。在本实验结束时，你将很好地理解如何在 JavaScript 中操作字符串，并将这些概念应用于其他编程项目。",
      "meta": {
        "title": "使用 JavaScript 将字符串转换为蛇形命名法",
        "description": "学习如何使用 JavaScript 的正则表达式和数组方法将字符串转换为蛇形命名法。",
        "keywords": "字符串操作，JavaScript, JavaScript 实践，正则表达式，蛇形命名法，在线 JavaScript 实践，编程教程，JavaScript 实验，JavaScript 教程"
      },
      "details": {
        "steps": [
          {
            "title": "蛇形命名法字符串",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "在 Bash 历史记录中验证 Node 命令",
                "file": "verify1-1.sh",
                "hint": "通过在终端/SSH 中输入 'node' 并按回车键，可以运行 JavaScript。"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Convertir cadenas a formato snake case con JavaScript",
      "description": "En este laboratorio, profundizaremos en el mundo de la programación de JavaScript para aprender cómo convertir una cadena dada en formato snake case. Utilizaremos expresiones regulares y varios métodos de matriz como map(), slice() y join() para descomponer la cadena y reconstruirla con guiones bajos como separadores. Al final de este laboratorio, tendrás una buena comprensión de cómo manipular cadenas en JavaScript y aplicar estos conceptos a otros proyectos de programación.",
      "meta": {
        "title": "Convertir cadenas a formato snake case con JavaScript",
        "description": "Aprende cómo convertir cadenas a formato snake case utilizando las expresiones regulares y los métodos de matriz de JavaScript.",
        "keywords": "manipulación de cadenas, javascript, práctica de javascript, expresiones regulares, formato snake case, práctica de javascript en línea, tutorial de programación, laboratorio de javascript, tutor de javascript"
      },
      "details": {
        "steps": [
          {
            "title": "Cadena en formato snake case",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Verificar comandos de Node en el historial de Bash",
                "file": "verify1-1.sh",
                "hint": "Se puede ejecutar JavaScript en la Terminal/SSH escribiendo 'node' y presionando Enter."
              }
            ]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Convertir des chaînes en snake case avec JavaScript",
      "description": "Dans ce laboratoire, nous allons plonger dans le monde de la programmation JavaScript pour apprendre à convertir une chaîne de caractères donnée en snake case. Nous utiliserons des expressions régulières et diverses méthodes d'itération telles que map(), slice() et join() pour découper la chaîne et la reconstruire avec des tirets bas comme séparateurs. À la fin de ce laboratoire, vous aurez une bonne compréhension de la manière de manipuler les chaînes de caractères en JavaScript et d'appliquer ces concepts à d'autres projets de programmation.",
      "meta": {
        "title": "Convertir des chaînes en snake case avec JavaScript",
        "description": "Apprenez à convertir des chaînes en snake case en utilisant les expressions régulières et les méthodes d'itération de JavaScript.",
        "keywords": "manipulation de chaînes, javascript, pratique javascript, expressions régulières, snake case, pratique javascript en ligne, tutoriel de programmation, laboratoire javascript, tuteur javascript"
      },
      "details": {
        "steps": [
          {
            "title": "Chaîne en snake case",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Vérifier les commandes Node dans l'historique Bash",
                "file": "verify1-1.sh",
                "hint": "JavaScript peut être exécuté dans le Terminal/SSH en tapant 'node' et en appuyant sur Entrée."
              }
            ]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Strings in Snake Case mit JavaScript umwandeln",
      "description": "In diesem Lab werden wir uns in die Welt der JavaScript-Programmierung stürzen, um zu lernen, wie man einen gegebenen String in snake case umwandelt. Wir werden reguläre Ausdrücke und verschiedene Array-Methoden wie map(), slice() und join() verwenden, um den String aufzuteilen und ihn mit Unterstrichen als Trennzeichen neu zu konstruieren. Am Ende dieses Labs werden Sie gut verstehen, wie man Strings in JavaScript manipuliert und diese Konzepte auf andere Programmierprojekte anwenden kann.",
      "meta": {
        "title": "Strings in Snake Case mit JavaScript umwandeln",
        "description": "Lernen Sie, wie Sie Strings in snake case mit Hilfe von regulären Ausdrücken und Array-Methoden in JavaScript umwandeln.",
        "keywords": "Stringmanipulation, JavaScript, JavaScript Übung, reguläre Ausdrücke, snake case, Online-JavaScript-Übung, Programmier-Tutorial, JavaScript-Lab, JavaScript-Tutor"
      },
      "details": {
        "steps": [
          {
            "title": "Snakecase String",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Verify Node Commands In Bash History",
                "file": "verify1-1.sh",
                "hint": "JavaScript kann im Terminal/SSH ausgeführt werden, indem man 'node' eingibt und die Enter-Taste drückt."
              }
            ]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "JavaScript を使って文字列をスネークケースに変換する",
      "description": "この実験では、JavaScript プログラミングの世界に入り、与えられた文字列をスネークケースに変換する方法を学びます。正規表現と map()、slice()、join() などのさまざまな配列メソッドを使って、文字列を分解し、アンダースコアを区切り文字として再構築します。この実験が終わるとき、JavaScript で文字列を操作する方法を十分に理解し、これらの概念を他のプログラミング プロジェクトに適用できるようになります。",
      "meta": {
        "title": "JavaScript を使って文字列をスネークケースに変換する",
        "description": "JavaScript の正規表現と配列メソッドを使って文字列をスネークケースに変換する方法を学びましょう。",
        "keywords": "文字列操作，JavaScript,JavaScript の練習，正規表現，スネークケース，オンラインでの JavaScript の練習，プログラミングチュートリアル，JavaScript の実験，JavaScript の講師"
      },
      "details": {
        "steps": [
          {
            "title": "スネークケース文字列",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "Bash 履歴の Node コマンドを確認する",
                "file": "verify1-1.sh",
                "hint": "ターミナル/SSH で'node'と入力して Enter キーを押すことで JavaScript を実行できます。"
              }
            ]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Преобразование строк в snake case с использованием JavaScript",
      "description": "В этом практическом занятии мы углубимся в мир программирования на JavaScript, чтобы научиться преобразовывать заданную строку в snake case. Мы будем использовать регулярные выражения и различные методы массивов, такие как map(), slice() и join(), чтобы разбить строку и реконструировать ее с использованием нижних подчеркиваний в качестве разделителей. В конце этого практического занятия вы хорошо освоите методы манипуляции со строками в JavaScript и сможете применить эти концепции в других проектах программирования.",
      "meta": {
        "title": "Преобразование строк в snake case с использованием JavaScript",
        "description": "Изучите, как преобразовать строки в snake case с использованием регулярных выражений и методов массивов JavaScript.",
        "keywords": "манипуляция строками, javascript, практика javascript, регулярные выражения, snake case, онлайн практика javascript, учебник по программированию, практическое занятие по javascript, наставник по javascript"
      },
      "details": {
        "steps": [
          {
            "title": "Строка в snake case",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "Проверить команды Node в истории Bash",
                "file": "verify1-1.sh",
                "hint": "JavaScript можно запустить в Терминале/SSH, введя 'node' и нажав Enter."
              }
            ]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    },
    {
      "lang": "ko",
      "title": "JavaScript 를 사용하여 문자열을 Snake Case 로 변환하기",
      "description": "이 랩에서는 주어진 문자열을 snake case 로 변환하는 방법을 배우기 위해 JavaScript 프로그래밍의 세계를 탐구합니다. 정규 표현식과 map(), slice(), join() 과 같은 다양한 배열 메서드를 사용하여 문자열을 분해하고 밑줄을 구분 기호로 사용하여 재구성합니다. 이 랩을 마치면 JavaScript 에서 문자열을 조작하고 이러한 개념을 다른 프로그래밍 프로젝트에 적용하는 방법에 대한 훌륭한 이해를 얻게 될 것입니다.",
      "meta": {
        "title": "JavaScript 로 문자열을 Snake Case 로 변환하는 방법",
        "description": "JavaScript 의 정규 표현식과 배열 메서드를 사용하여 문자열을 snake case 로 변환하는 방법을 알아보세요.",
        "keywords": "문자열 조작, 자바스크립트, 자바스크립트 연습, 정규 표현식, snake case, 자바스크립트 연습 온라인, 프로그래밍 튜토리얼, 자바스크립트 랩, 자바스크립트 튜터"
      },
      "details": {
        "steps": [
          {
            "title": "Snakecase String",
            "text": "ko/step1.md",
            "verify": [
              {
                "name": "Bash History 에서 Node 명령어 확인",
                "file": "verify1-1.sh",
                "hint": "JavaScript 는 터미널/SSH 에서 'node'를 입력하고 Enter 키를 눌러 실행할 수 있습니다."
              }
            ]
          }
        ],
        "intro": {
          "text": "ko/intro.md",
          "title": "소개"
        },
        "finish": {
          "text": "ko/finish.md",
          "title": "요약"
        }
      }
    },
    {
      "lang": "pt",
      "title": "Convertendo Strings para Snake Case com JavaScript",
      "description": "Neste laboratório, vamos mergulhar no mundo da programação JavaScript para aprender como converter uma string em snake case. Usaremos expressões regulares e vários métodos de array como map(), slice() e join() para quebrar a string e reconstruí-la com underscores como separadores. Ao final deste laboratório, você terá uma boa compreensão de como manipular strings em JavaScript e aplicar esses conceitos a outros projetos de programação.",
      "meta": {
        "title": "Converter Strings para Snake Case com JavaScript - Tutorial e Prática",
        "description": "Aprenda a converter strings para snake case usando expressões regulares e métodos de array do JavaScript. Melhore suas habilidades de programação com este tutorial prático.",
        "keywords": "manipulação de strings, javascript, prática javascript, expressões regulares, snake case, tutorial javascript, laboratório javascript, aprender javascript, programação online"
      },
      "details": {
        "steps": [
          {
            "title": "Snakecase String",
            "text": "pt/step1.md",
            "verify": [
              {
                "name": "Verificar Comandos Node no Histórico do Bash",
                "file": "verify1-1.sh",
                "hint": "JavaScript pode ser executado no Terminal/SSH digitando 'node' e pressionando Enter."
              }
            ]
          }
        ],
        "intro": {
          "text": "pt/intro.md",
          "title": "Introdução"
        },
        "finish": {
          "text": "pt/finish.md",
          "title": "Resumo"
        }
      }
    }
  ]
}
