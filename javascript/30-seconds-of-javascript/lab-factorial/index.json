{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Factorial of Number",
  "description": "In this lab, we will be learning how to calculate the factorial of a number using recursion in JavaScript. We will also learn how to throw a TypeError if the input is a negative number. By the end of this lab, you will have a better understanding of recursion and how it can be used to solve mathematical problems.",
  "meta": {
    "title": "Factorial of Number: Recursion in JavaScript",
    "description": "Learn how to calculate the factorial of a number using recursion in JavaScript, including handling negative numbers with TypeError.",
    "keywords": "javascript, mathematical problem, javascript practice, recursion, javascript practice online, programming tutorial, javascript lab, javascript tutor, factorial"
  },
  "difficulty": "Beginner",
  "time": 10,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Factorial of Number",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify Node Commands In Zsh History",
            "file": "verify1-1.sh",
            "hint": "JavaScript can be run in the Terminal/SSH by typing 'node' and pressing Enter.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "javascript/arith_ops",
          "javascript/comp_ops",
          "javascript/data_types",
          "javascript/error_handle",
          "javascript/variables"
        ]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["Lotus-7"],
  "license": {
    "name": "CC-BY-4.0",
    "url": "https://github.com/30-seconds/30-seconds-of-code/blob/master/LICENSE",
    "repo": "https://github.com/30-seconds/30-seconds-of-code"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "数字阶乘",
      "description": "在本实验中，我们将学习如何使用 JavaScript 中的递归计算一个数的阶乘。我们还将学习如何在输入为负数时抛出 `TypeError`。在本实验结束时，你将对递归以及如何使用它来解决数学问题有更深入的理解。",
      "meta": {
        "title": "数字阶乘：JavaScript 中的递归",
        "description": "学习如何使用 JavaScript 中的递归计算一个数的阶乘，包括使用 `TypeError` 处理负数。",
        "keywords": "JavaScript, 数学问题, JavaScript 练习, 递归, 在线 JavaScript 练习, 编程教程, JavaScript 实验, JavaScript 教程, 阶乘"
      },
      "details": {
        "steps": [
          {
            "title": "数字阶乘",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "在 Zsh 历史记录中验证 Node 命令",
                "file": "verify1-1.sh",
                "hint": "通过在终端/SSH 中输入 'node' 并按回车键，可以运行 JavaScript。"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Factorial de un Número",
      "description": "En este laboratorio, aprenderemos a calcular el factorial de un número utilizando la recursividad en JavaScript. También aprenderemos a lanzar un TypeError si la entrada es un número negativo. Al final de este laboratorio, tendrás una mejor comprensión de la recursividad y cómo se puede utilizar para resolver problemas matemáticos.",
      "meta": {
        "title": "Factorial de un Número: Recursividad en JavaScript",
        "description": "Aprende a calcular el factorial de un número utilizando la recursividad en JavaScript, incluyendo el manejo de números negativos con TypeError.",
        "keywords": "javascript, problema matemático, práctica de javascript, recursividad, práctica de javascript en línea, tutorial de programación, laboratorio de javascript, tutor de javascript, factorial"
      },
      "details": {
        "steps": [
          {
            "title": "Factorial de un Número",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Verificar los comandos de Node en el historial de Zsh",
                "file": "verify1-1.sh",
                "hint": "Se puede ejecutar JavaScript en la Terminal/SSH escribiendo 'node' y presionando Enter."
              }
            ]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Factorielle d'un nombre",
      "description": "Dans ce laboratoire, nous allons apprendre à calculer la factorielle d'un nombre en utilisant la récursivité en JavaScript. Nous allons également apprendre à lever une TypeError si l'entrée est un nombre négatif. À la fin de ce laboratoire, vous aurez une meilleure compréhension de la récursivité et de la manière dont elle peut être utilisée pour résoudre des problèmes mathématiques.",
      "meta": {
        "title": "Factorielle d'un nombre : Récursivité en JavaScript",
        "description": "Apprenez à calculer la factorielle d'un nombre en utilisant la récursivité en JavaScript, y compris la gestion des nombres négatifs avec TypeError.",
        "keywords": "javascript, problème mathématique, pratique javascript, récursivité, pratique javascript en ligne, tutoriel de programmation, laboratoire javascript, tuteur javascript, factorielle"
      },
      "details": {
        "steps": [
          {
            "title": "Factorielle d'un nombre",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Vérifier les commandes Node dans l'historique Zsh",
                "file": "verify1-1.sh",
                "hint": "JavaScript peut être exécuté dans le Terminal/SSH en tapant 'node' et en appuyant sur Entrée."
              }
            ]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Fakultät einer Zahl",
      "description": "In diesem Lab werden wir lernen, wie man die Fakultät einer Zahl mit Hilfe der Rekursion in JavaScript berechnet. Wir werden auch lernen, wie man einen TypeError wirft, wenn die Eingabe eine negative Zahl ist. Am Ende dieses Labs werdet ihr ein besseres Verständnis von Rekursion haben und wie diese zur Lösung mathematischer Probleme eingesetzt werden kann.",
      "meta": {
        "title": "Fakultät einer Zahl: Rekursion in JavaScript",
        "description": "Lernen Sie, wie man die Fakultät einer Zahl mit Hilfe der Rekursion in JavaScript berechnet, einschließlich der Behandlung negativer Zahlen mit TypeError.",
        "keywords": "javascript, mathematisches Problem, JavaScript Übung, Rekursion, Online-JavaScript-Übung, Programmierungstutorial, JavaScript-Lab, JavaScript-Tutor, Fakultät"
      },
      "details": {
        "steps": [
          {
            "title": "Fakultät einer Zahl",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Überprüfen von Node-Befehlen in der Zsh-Historie",
                "file": "verify1-1.sh",
                "hint": "JavaScript kann im Terminal/SSH ausgeführt werden, indem man 'node' eingibt und die Enter-Taste drückt."
              }
            ]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "数値の階乗",
      "description": "この実験では、JavaScript で再帰を使って数値の階乗を計算する方法を学びます。また、入力が負の数の場合に TypeError をスローする方法も学びます。この実験が終わるとき、再帰とそれがどのように数学的な問題を解くために使われるかをより深く理解しているでしょう。",
      "meta": {
        "title": "数値の階乗：JavaScript での再帰",
        "description": "JavaScript で再帰を使って数値の階乗を計算する方法を学びます。TypeError を使った負の数の処理も含めて。",
        "keywords": "javascript, 数学的問題, javascript 練習, 再帰, オンライン javascript 練習, プログラミング チュートリアル, javascript 実験, javascript チューター, 階乗"
      },
      "details": {
        "steps": [
          {
            "title": "数値の階乗",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "Zsh 履歴における Node コマンドの検証",
                "file": "verify1-1.sh",
                "hint": "ターミナル/SSH で 'node' と入力して Enter キーを押すことで JavaScript を実行できます。"
              }
            ]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Факториал числа",
      "description": "В этом практическом занятии мы научимся вычислять факториал числа с использованием рекурсии в JavaScript. Также узнаем, как бросить TypeError, если входное значение является отрицательным числом. В конце практического занятия у вас будет лучше понимание рекурсии и того, как ее можно использовать для решения математических задач.",
      "meta": {
        "title": "Факториал числа: Рекурсия в JavaScript",
        "description": "Изучите, как вычислять факториал числа с использованием рекурсии в JavaScript, включая обработку отрицательных чисел с использованием TypeError.",
        "keywords": "javascript, математическая задача, практика javascript, рекурсия, онлайн практика javascript, учебник по программированию, лабораторная работа javascript, наставник по javascript, факториал"
      },
      "details": {
        "steps": [
          {
            "title": "Факториал числа",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "Проверить команды Node в истории Zsh",
                "file": "verify1-1.sh",
                "hint": "JavaScript можно запустить в Терминале/SSH, введя 'node' и нажав Enter."
              }
            ]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    }
  ]
}
