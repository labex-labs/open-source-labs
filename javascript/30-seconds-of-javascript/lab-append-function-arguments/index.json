{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Append Function Arguments",
  "description": "In this lab, we will explore how to use the partialRight() function in JavaScript to create new functions with pre-specified arguments. This powerful function allows us to easily append arguments to existing functions, enabling us to create new functions with specific behaviors without having to redefine the original function. We'll see examples of how to use partialRight() to streamline our code and make it more modular.",
  "meta": {
    "title": "Append Function Arguments in JavaScript",
    "description": "Learn how to use the partialRight() function to create new functions with pre-specified arguments in JavaScript.",
    "keywords": "javascript, javascript practice, partialright, javascript practice online, javascript lab, arguments, function, javascript tutor, programming"
  },
  "difficulty": "Beginner",
  "time": 5,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Append Function Arguments",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify Node Command Usage",
            "file": "verify1-1.sh",
            "hint": "JavaScript can be run in the Terminal/SSH by typing 'node' and pressing Enter.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": []
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["Lotus-7"],
  "license": {
    "name": "CC-BY-4.0",
    "url": "https://github.com/30-seconds/30-seconds-of-code/blob/master/LICENSE",
    "repo": "https://github.com/30-seconds/30-seconds-of-code"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "追加函数参数",
      "description": "在本实验中，我们将探索如何在 JavaScript 中使用 partialRight() 函数来创建带有预先指定参数的新函数。这个强大的函数使我们能够轻松地将参数附加到现有函数上，从而在无需重新定义原始函数的情况下创建具有特定行为的新函数。我们将看到如何使用 partialRight() 来简化代码并使其更具模块化的示例。",
      "meta": {
        "title": "JavaScript 中的追加函数参数",
        "description": "学习如何在 JavaScript 中使用 partialRight() 函数来创建带有预先指定参数的新函数。",
        "keywords": "JavaScript, JavaScript 练习，partialright, 在线 JavaScript 练习，JavaScript 实验，参数，函数，JavaScript 教程，编程"
      },
      "details": {
        "steps": [
          {
            "title": "追加函数参数",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "验证 Node 命令的用法",
                "file": "verify1-1.sh",
                "hint": "通过在终端/SSH 中输入'node'并按回车键，可以运行 JavaScript。"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Agregar Argumentos a una Función",
      "description": "En este laboratorio, exploraremos cómo utilizar la función partialRight() en JavaScript para crear nuevas funciones con argumentos preespecificados. Esta función poderosa nos permite adjuntar fácilmente argumentos a funciones existentes, lo que nos permite crear nuevas funciones con comportamientos específicos sin tener que redefinir la función original. Veremos ejemplos de cómo utilizar partialRight() para racionalizar nuestro código y hacerlo más modular.",
      "meta": {
        "title": "Agregar Argumentos a una Función en JavaScript",
        "description": "Aprende cómo utilizar la función partialRight() para crear nuevas funciones con argumentos preespecificados en JavaScript.",
        "keywords": "javascript, práctica de javascript, partialright, práctica de javascript en línea, laboratorio de javascript, argumentos, función, tutor de javascript, programación"
      },
      "details": {
        "steps": [
          {
            "title": "Agregar Argumentos a una Función",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Verificar el uso del comando Node",
                "file": "verify1-1.sh",
                "hint": "JavaScript se puede ejecutar en la Terminal/SSH escribiendo 'node' y presionando Enter."
              }
            ]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Ajouter des arguments à une fonction",
      "description": "Dans ce laboratoire, nous allons explorer comment utiliser la fonction partialRight() en JavaScript pour créer de nouvelles fonctions avec des arguments prédéfinis. Cette fonction puissante nous permet d'ajouter facilement des arguments à des fonctions existantes, ce qui nous permet de créer de nouvelles fonctions avec des comportements spécifiques sans avoir à redéfinir la fonction d'origine. Nous verrons des exemples de manière à utiliser partialRight() pour rationaliser notre code et le rendre plus modulaire.",
      "meta": {
        "title": "Ajouter des arguments à une fonction en JavaScript",
        "description": "Découvrez comment utiliser la fonction partialRight() pour créer de nouvelles fonctions avec des arguments prédéfinis en JavaScript.",
        "keywords": "javascript, pratique javascript, partialright, pratique javascript en ligne, laboratoire javascript, arguments, fonction, tuteur javascript, programmation"
      },
      "details": {
        "steps": [
          {
            "title": "Ajouter des arguments à une fonction",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Vérifier l'utilisation de la commande Node",
                "file": "verify1-1.sh",
                "hint": "JavaScript peut être exécuté dans le Terminal/SSH en tapant 'node' et en appuyant sur Entrée."
              }
            ]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Funktion Argumente anhängen",
      "description": "In diesem Lab werden wir untersuchen, wie man in JavaScript die partialRight()-Funktion verwendet, um neue Funktionen mit vorgegebenen Argumenten zu erstellen. Diese leistungsstarke Funktion ermöglicht es uns, Argumente einfach an vorhandene Funktionen anzuhängen, sodass wir neue Funktionen mit bestimmten Verhaltensweisen erstellen können, ohne die ursprüngliche Funktion neu definieren zu müssen. Wir werden Beispiele sehen, wie man partialRight() verwendet, um unseren Code zu vereinfachen und modularer zu gestalten.",
      "meta": {
        "title": "Funktion Argumente in JavaScript anhängen",
        "description": "Lernen Sie, wie man die partialRight()-Funktion verwendet, um neue Funktionen mit vorgegebenen Argumenten in JavaScript zu erstellen.",
        "keywords": "javascript, javascript Übung, partialright, online javascript Übung, javascript Lab, Argumente, Funktion, javascript Tutor, Programmierung"
      },
      "details": {
        "steps": [
          {
            "title": "Funktion Argumente anhängen",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Überprüfen der Verwendung des Node-Befehls",
                "file": "verify1-1.sh",
                "hint": "JavaScript kann im Terminal/SSH ausgeführt werden, indem man 'node' eingibt und die Enter-Taste drückt."
              }
            ]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "関数に引数を追加する",
      "description": "この実験では、JavaScript の partialRight() 関数を使って事前に指定された引数で新しい関数を作成する方法を探ります。この強力な関数を使うと、既存の関数に引数を簡単に追加でき、元の関数を再定義することなく特定の動作を持つ新しい関数を作成できます。partialRight() を使ってコードを簡略化し、よりモジュール化する方法の例を見ていきましょう。",
      "meta": {
        "title": "JavaScript で関数に引数を追加する",
        "description": "JavaScript で partialRight() 関数を使って事前に指定された引数で新しい関数を作成する方法を学びましょう。",
        "keywords": "javascript, javascript の練習，partialright, オンラインでの javascript の練習，javascript の実験，引数，関数，javascript の講師，プログラミング"
      },
      "details": {
        "steps": [
          {
            "title": "関数に引数を追加する",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "Node コマンドの使用を確認する",
                "file": "verify1-1.sh",
                "hint": "ターミナル/SSH で 'node' と入力して Enter キーを押すことで、JavaScript を実行できます。"
              }
            ]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Добавление аргументов к функции",
      "description": "В этом практическом занятии мы изучим, как использовать функцию partialRight() в JavaScript для создания новых функций с предварительно заданными аргументами. Эта мощная функция позволяет легко добавлять аргументы к существующим функциям, тем самым позволяя создавать новые функции с определенным поведением, не нужно переписывать исходную функцию. Мы рассмотрим примеры использования partialRight() для упрощения кода и его более модульного оформления.",
      "meta": {
        "title": "Добавление аргументов к функции в JavaScript",
        "description": "Изучите, как использовать функцию partialRight() для создания новых функций с предварительно заданными аргументами в JavaScript.",
        "keywords": "javascript, практика javascript, partialright, онлайн практика javascript, практическое занятие javascript, аргументы, функция, преподаватель javascript, программирование"
      },
      "details": {
        "steps": [
          {
            "title": "Добавление аргументов к функции",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "Проверить использование команды Node",
                "file": "verify1-1.sh",
                "hint": "JavaScript можно запустить в Терминале/SSH, введя 'node' и нажав Enter."
              }
            ]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    },
    {
      "lang": "ko",
      "title": "함수 인수 추가하기",
      "description": "이 랩에서는 JavaScript 에서 `partialRight()` 함수를 사용하여 미리 지정된 인수를 가진 새로운 함수를 만드는 방법을 살펴봅니다. 이 강력한 함수를 사용하면 기존 함수에 인수를 쉽게 추가하여 원래 함수를 다시 정의하지 않고도 특정 동작을 가진 새로운 함수를 만들 수 있습니다. `partialRight()` 를 사용하여 코드를 간소화하고 모듈식으로 만드는 예제를 살펴보겠습니다.",
      "meta": {
        "title": "JavaScript 에서 함수 인수 추가하는 방법",
        "description": "JavaScript 에서 `partialRight()` 함수를 사용하여 미리 지정된 인수를 가진 새로운 함수를 만드는 방법을 알아보세요.",
        "keywords": "자바스크립트, 자바스크립트 연습, partialRight, 자바스크립트 온라인 연습, 자바스크립트 랩, 인수, 함수, 자바스크립트 튜터, 프로그래밍, JavaScript 함수 인수 추가, JavaScript 부분 적용"
      },
      "details": {
        "steps": [
          {
            "title": "함수 인수 추가하기",
            "text": "ko/step1.md",
            "verify": [
              {
                "name": "Node 명령어 사용 확인",
                "file": "verify1-1.sh",
                "hint": "터미널/SSH 에서 'node'를 입력하고 Enter 키를 눌러 JavaScript 를 실행할 수 있습니다."
              }
            ]
          }
        ],
        "intro": {
          "text": "ko/intro.md",
          "title": "소개"
        },
        "finish": {
          "text": "ko/finish.md",
          "title": "요약"
        }
      }
    },
    {
      "lang": "pt",
      "title": "Anexar Argumentos à Função",
      "description": "Neste laboratório, exploraremos como usar a função `partialRight()` em JavaScript para criar novas funções com argumentos pré-especificados. Esta poderosa função nos permite anexar facilmente argumentos a funções existentes, permitindo-nos criar novas funções com comportamentos específicos sem ter que redefinir a função original. Veremos exemplos de como usar `partialRight()` para otimizar nosso código e torná-lo mais modular.",
      "meta": {
        "title": "Anexar Argumentos à Função em JavaScript - Aprenda na Prática",
        "description": "Aprenda a usar a função `partialRight()` para criar novas funções com argumentos pré-especificados em JavaScript. Melhore suas habilidades de programação com exemplos práticos e exercícios.",
        "keywords": "javascript, prática javascript, partialright, exercícios javascript online, laboratório javascript, argumentos, função, tutorial javascript, programação, aprender javascript"
      },
      "details": {
        "steps": [
          {
            "title": "Anexar Argumentos à Função",
            "text": "pt/step1.md",
            "verify": [
              {
                "name": "Verificar Uso do Comando Node",
                "file": "verify1-1.sh",
                "hint": "JavaScript pode ser executado no Terminal/SSH digitando 'node' e pressionando Enter."
              }
            ]
          }
        ],
        "intro": {
          "text": "pt/intro.md",
          "title": "Introdução"
        },
        "finish": {
          "text": "pt/finish.md",
          "title": "Resumo"
        }
      }
    }
  ]
}
