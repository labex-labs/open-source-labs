{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Exploring JavaScript Logical OR Operator",
  "description": "In this lab, we will explore the logical or (||) operator in JavaScript. The purpose of this lab is to understand how the logical or operator works and how it can be used to check if at least one of the given arguments is true. Through practical examples, we will learn how to implement the logical or operator in our code.",
  "meta": {
    "title": "JavaScript Logical OR Operator | Coding Practice",
    "description": "Explore the logical or operator in JavaScript and learn how to implement it in your code through practical examples.",
    "keywords": "JavaScript, Logical OR Operator, Coding Practice, Programming Tutorials, Web Development"
  },
  "difficulty": "Beginner",
  "time": 5,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Logical Or",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify Node Command Usage",
            "file": "verify1-1.sh",
            "hint": "JavaScript can be run in the Terminal/SSH by typing 'node' and pressing Enter.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": []
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["Lotus-7"],
  "license": {
    "name": "CC-BY-4.0",
    "url": "https://github.com/30-seconds/30-seconds-of-code/blob/master/LICENSE",
    "repo": "https://github.com/30-seconds/30-seconds-of-code"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "探索 JavaScript 逻辑或运算符",
      "description": "在本实验中，我们将探索 JavaScript 中的逻辑或 (||) 运算符。本实验的目的是了解逻辑或运算符的工作原理，以及如何使用它来检查给定参数中是否至少有一个为 true。通过实际示例，我们将学习如何在代码中实现逻辑或运算符。",
      "meta": {
        "title": "JavaScript 逻辑或运算符 | 编码练习",
        "description": "探索 JavaScript 中的逻辑或运算符，并通过实际示例学习如何在代码中实现它。",
        "keywords": "JavaScript, 逻辑或运算符，编码练习，编程教程，网页开发"
      },
      "details": {
        "steps": [
          {
            "title": "逻辑或",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "验证 Node 命令的用法",
                "file": "verify1-1.sh",
                "hint": "在终端/SSH 中输入 'node' 并回车即可运行 JavaScript。"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Explorando el operador lógico O en JavaScript",
      "description": "En este laboratorio, exploraremos el operador lógico o (||) en JavaScript. El objetivo de este laboratorio es entender cómo funciona el operador lógico o y cómo se puede utilizar para comprobar si al menos uno de los argumentos dados es true. A través de ejemplos prácticos, aprenderemos cómo implementar el operador lógico o en nuestro código.",
      "meta": {
        "title": "Operador lógico O de JavaScript | Práctica de codificación",
        "description": "Explore el operador lógico o en JavaScript y aprenda cómo implementarlo en su código a través de ejemplos prácticos.",
        "keywords": "JavaScript, Operador lógico O, Práctica de codificación, Tutoriales de programación, Desarrollo web"
      },
      "details": {
        "steps": [
          {
            "title": "O Lógico",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Verificar el uso del comando Node",
                "file": "verify1-1.sh",
                "hint": "JavaScript se puede ejecutar en la Terminal/SSH escribiendo 'node' y presionando Enter."
              }
            ]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Explorer l'opérateur logique OU en JavaScript",
      "description": "Dans ce laboratoire, nous allons explorer l'opérateur logique ou (||) en JavaScript. Le but de ce laboratoire est de comprendre comment fonctionne l'opérateur logique ou et comment il peut être utilisé pour vérifier si au moins l'un des arguments donnés est vrai. Par des exemples pratiques, nous allons apprendre à implémenter l'opérateur logique ou dans notre code.",
      "meta": {
        "title": "Opérateur logique OU en JavaScript | Pratique de codage",
        "description": "Explorez l'opérateur logique ou en JavaScript et apprenez à l'implémenter dans votre code grâce à des exemples pratiques.",
        "keywords": "JavaScript, Opérateur logique OU, Pratique de codage, Didacticiels de programmation, Développement web"
      },
      "details": {
        "steps": [
          {
            "title": "Ou logique",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Vérifier l'utilisation de la commande Node",
                "file": "verify1-1.sh",
                "hint": "JavaScript peut être exécuté dans le Terminal/SSH en tapant 'node' et en appuyant sur Entrée."
              }
            ]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Das Erkunden des logischen Oder -Operators in JavaScript",
      "description": "In diesem Lab werden wir den logischen Oder (`||`)-Operator in JavaScript erkunden. Ziel dieses Labs ist es, zu verstehen, wie der logische Oder -Operator funktioniert und wie er verwendet werden kann, um zu überprüfen, ob mindestens eines der angegebenen Argumente `true` ist. Anhand von praktischen Beispielen lernen wir, wie wir den logischen Oder -Operator in unserem Code implementieren.",
      "meta": {
        "title": "Logischer Oder -Operator in JavaScript | Code - Praxis",
        "description": "Erkunden Sie den logischen Oder -Operator in JavaScript und lernen Sie, wie Sie ihn in Ihrem Code durch praktische Beispiele implementieren.",
        "keywords": "JavaScript, logischer Oder -Operator, Code - Praxis, Programmier - Tutorials, Web - Entwicklung"
      },
      "details": {
        "steps": [
          {
            "title": "Logischer Oder",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Überprüfen der Verwendung des Node - Befehls",
                "file": "verify1-1.sh",
                "hint": "JavaScript kann im Terminal/SSH ausgeführt werden, indem man 'node' eingibt und die Enter - Taste drückt."
              }
            ]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "JavaScript の論理和演算子を探る",
      "description": "この実験では、JavaScript の論理和 (||) 演算子を調べます。この実験の目的は、論理和演算子がどのように機能するか、および与えられた引数の少なくとも 1 つが true であるかどうかをチェックするためにどのように使用できるかを理解することです。実際の例を通じて、コードで論理和演算子を実装する方法を学びます。",
      "meta": {
        "title": "JavaScript の論理和演算子 | コーディング練習",
        "description": "JavaScript の論理和演算子を調べ、実際の例を通じてコードに実装する方法を学びましょう。",
        "keywords": "JavaScript, 論理和演算子，コーディング練習，プログラミングチュートリアル，ウェブ開発"
      },
      "details": {
        "steps": [
          {
            "title": "論理和",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "Node コマンドの使用を確認する",
                "file": "verify1-1.sh",
                "hint": "ターミナル/SSH で'node'と入力して Enter キーを押すことで、JavaScript を実行できます。"
              }
            ]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Изучение логического оператора \"или\" в JavaScript",
      "description": "В этой лабораторной работе мы исследуем логический оператор \"или\" (||) в JavaScript. Целью данной лабораторной работы является понимание того, как работает логический оператор \"или\" и как его можно использовать для проверки, является ли хотя бы один из заданных аргументов истинным. С помощью практических примеров мы научимся реализовывать логический оператор \"или\" в нашем коде.",
      "meta": {
        "title": "Логический оператор \"или\" в JavaScript | Практика программирования",
        "description": "Изучите логический оператор \"или\" в JavaScript и научитесь реализовывать его в своем коде с помощью практических примеров.",
        "keywords": "JavaScript, Логический оператор \"или\", Практика программирования, Руководства по программированию, Разработка веб-приложений"
      },
      "details": {
        "steps": [
          {
            "title": "Логический оператор \"или\"",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "Проверить использование команды Node",
                "file": "verify1-1.sh",
                "hint": "JavaScript можно запустить в Терминале/SSH, введя 'node' и нажав Enter."
              }
            ]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    },
    {
      "lang": "ko",
      "title": "JavaScript 논리 OR 연산자 탐구",
      "description": "이 랩에서는 JavaScript 에서 논리 OR 연산자 (||) 를 탐구합니다. 이 랩의 목적은 논리 OR 연산자가 어떻게 작동하는지, 그리고 주어진 인자 중 적어도 하나가 참인지 확인하는 데 어떻게 사용될 수 있는지 이해하는 것입니다. 실용적인 예제를 통해 코드에서 논리 OR 연산자를 구현하는 방법을 배우게 됩니다.",
      "meta": {
        "title": "JavaScript 논리 OR 연산자 | 코딩 연습",
        "description": "JavaScript 에서 논리 OR 연산자를 탐구하고, 실용적인 예제를 통해 코드에서 이를 구현하는 방법을 알아보세요.",
        "keywords": "JavaScript, 논리 OR 연산자, 코딩 연습, 프로그래밍 튜토리얼, 웹 개발"
      },
      "details": {
        "steps": [
          {
            "title": "논리 OR",
            "text": "ko/step1.md",
            "verify": [
              {
                "name": "Node 명령어 사용 확인",
                "file": "verify1-1.sh",
                "hint": "터미널/SSH 에서 'node'를 입력하고 Enter 키를 눌러 JavaScript 를 실행할 수 있습니다."
              }
            ]
          }
        ],
        "intro": {
          "text": "ko/intro.md",
          "title": "소개"
        },
        "finish": {
          "text": "ko/finish.md",
          "title": "요약"
        }
      }
    },
    {
      "lang": "pt",
      "title": "Explorando o Operador Lógico OR em JavaScript",
      "description": "Neste laboratório, exploraremos o operador lógico OR (||) em JavaScript. O objetivo deste laboratório é entender como o operador lógico OR funciona e como ele pode ser usado para verificar se pelo menos um dos argumentos fornecidos é verdadeiro. Através de exemplos práticos, aprenderemos como implementar o operador lógico OR em nosso código.",
      "meta": {
        "title": "Operador Lógico OR em JavaScript | Prática de Codificação",
        "description": "Explore o operador lógico OR em JavaScript e aprenda como implementá-lo em seu código através de exemplos práticos. Melhore suas habilidades de programação com este tutorial.",
        "keywords": "JavaScript, Operador Lógico OR, Prática de Codificação, Tutoriais de Programação, Desenvolvimento Web, OR em JavaScript, Operador ||"
      },
      "details": {
        "steps": [
          {
            "title": "Operador Lógico OR",
            "text": "pt/step1.md",
            "verify": [
              {
                "name": "Verificar Uso do Comando Node",
                "file": "verify1-1.sh",
                "hint": "JavaScript pode ser executado no Terminal/SSH digitando 'node' e pressionando Enter."
              }
            ]
          }
        ],
        "intro": {
          "text": "pt/intro.md",
          "title": "Introdução"
        },
        "finish": {
          "text": "pt/finish.md",
          "title": "Resumo"
        }
      }
    }
  ]
}
