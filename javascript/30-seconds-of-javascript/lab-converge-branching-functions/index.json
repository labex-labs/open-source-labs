{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Converge Branching Functions",
  "description": "In this lab, we will explore the concept of converge branching functions in JavaScript. The purpose of this lab is to help you understand how to create a higher-order function that accepts a list of branching functions and a converging function as arguments and returns a new function that applies each branching function to the arguments and passes the results to the converging function. This technique can be useful in many scenarios where you need to combine multiple functions to produce a final result.",
  "meta": {
    "title": "Converge Branching Functions in JavaScript",
    "description": "Learn how to create a higher-order function that combines multiple branching functions to produce a final result in JavaScript.",
    "keywords": "javascript, branching functions, javascript practice, javascript tutor, javascript practice online, higher order functions, javascript lab, converging functions, programming"
  },
  "difficulty": "Beginner",
  "time": 10,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Converge Branching Functions",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify Student's Node Usage",
            "file": "verify1-1.sh",
            "hint": "JavaScript can be run in the Terminal/SSH by typing 'node' and pressing Enter.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "javascript/arith_ops",
          "javascript/comp_ops",
          "javascript/data_types",
          "javascript/higher_funcs",
          "javascript/spread_rest",
          "javascript/variables"
        ]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["Lotus-7"],
  "license": {
    "name": "CC-BY-4.0",
    "url": "https://github.com/30-seconds/30-seconds-of-code/blob/master/LICENSE",
    "repo": "https://github.com/30-seconds/30-seconds-of-code"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "收敛分支函数",
      "description": "在本实验中，我们将探讨JavaScript中收敛分支函数的概念。本实验的目的是帮助你理解如何创建一个高阶函数，该函数接受一系列分支函数和一个收敛函数作为参数，并返回一个新函数，该新函数将每个分支函数应用于参数，并将结果传递给收敛函数。这种技术在许多需要组合多个函数以产生最终结果的场景中都很有用。",
      "meta": {
        "title": "JavaScript中的收敛分支函数",
        "description": "学习如何在JavaScript中创建一个高阶函数，该函数组合多个分支函数以产生最终结果。",
        "keywords": "JavaScript, 分支函数, JavaScript练习, JavaScript教程, 在线JavaScript练习, 高阶函数, JavaScript实验, 收敛函数, 编程"
      },
      "details": {
        "steps": [
          {
            "title": "收敛分支函数",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "验证学生对Node的使用",
                "file": "verify1-1.sh",
                "hint": "在终端/SSH中输入'node'并回车，即可运行JavaScript。"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Funciones de bifurcación convergente",
      "description": "En este laboratorio, exploraremos el concepto de funciones de bifurcación convergente en JavaScript. El propósito de este laboratorio es ayudarte a entender cómo crear una función de orden superior que acepte una lista de funciones de bifurcación y una función convergente como argumentos y devuelva una nueva función que aplique cada función de bifurcación a los argumentos y pase los resultados a la función convergente. Esta técnica puede ser útil en muchos escenarios donde necesites combinar múltiples funciones para producir un resultado final.",
      "meta": {
        "title": "Funciones de bifurcación convergente en JavaScript",
        "description": "Aprende cómo crear una función de orden superior que combina múltiples funciones de bifurcación para producir un resultado final en JavaScript.",
        "keywords": "javascript, funciones de bifurcación, práctica de javascript, tutor de javascript, práctica de javascript en línea, funciones de orden superior, laboratorio de javascript, funciones convergentes, programación"
      },
      "details": {
        "steps": [
          {
            "title": "Funciones de bifurcación convergente",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Verificar el uso de Node por parte del estudiante",
                "file": "verify1-1.sh",
                "hint": "JavaScript se puede ejecutar en la Terminal/SSH escribiendo 'node' y presionando Enter."
              }
            ]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Fonctions de branchement convergentes",
      "description": "Dans ce laboratoire, nous allons explorer le concept de fonctions de branchement convergentes en JavaScript. Le but de ce laboratoire est de vous aider à comprendre comment créer une fonction de haut niveau qui accepte une liste de fonctions de branchement et une fonction de convergence en tant qu'arguments et renvoie une nouvelle fonction qui applique chaque fonction de branchement aux arguments et passe les résultats à la fonction de convergence. Cette technique peut être utile dans de nombreux scénarios où vous devez combiner plusieurs fonctions pour produire un résultat final.",
      "meta": {
        "title": "Fonctions de branchement convergentes en JavaScript",
        "description": "Apprenez à créer une fonction de haut niveau qui combine plusieurs fonctions de branchement pour produire un résultat final en JavaScript.",
        "keywords": "javascript, fonctions de branchement, pratique javascript, tuteur javascript, pratique javascript en ligne, fonctions de haut niveau, laboratoire javascript, fonctions de convergence, programmation"
      },
      "details": {
        "steps": [
          {
            "title": "Fonctions de branchement convergentes",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Vérifier l'utilisation de Node par l'étudiant",
                "file": "verify1-1.sh",
                "hint": "JavaScript peut être exécuté dans le Terminal/SSH en tapant 'node' et en appuyant sur Entrée."
              }
            ]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Konvergierende Verzweigungsfunktionen",
      "description": "In diesem Lab werden wir das Konzept der konvergierenden Verzweigungsfunktionen in JavaScript erkunden. Ziel dieses Labs ist es, Ihnen zu helfen, zu verstehen, wie man eine Higher-Order-Funktion erstellt, die eine Liste von Verzweigungsfunktionen und eine konvergierende Funktion als Argumente akzeptiert und eine neue Funktion zurückgibt, die jede Verzweigungsfunktion auf die Argumente anwendet und die Ergebnisse an die konvergierende Funktion übergibt. Diese Technik kann in vielen Szenarien nützlich sein, in denen Sie mehrere Funktionen kombinieren müssen, um ein endgültiges Ergebnis zu erhalten.",
      "meta": {
        "title": "Konvergierende Verzweigungsfunktionen in JavaScript",
        "description": "Lernen Sie, wie man eine Higher-Order-Funktion erstellt, die mehrere Verzweigungsfunktionen kombiniert, um ein endgültiges Ergebnis in JavaScript zu erhalten.",
        "keywords": "javascript, Verzweigungsfunktionen, JavaScript Übung, JavaScript Tutor, Online JavaScript Übung, Higher-Order-Funktionen, JavaScript Lab, konvergierende Funktionen, Programmierung"
      },
      "details": {
        "steps": [
          {
            "title": "Konvergierende Verzweigungsfunktionen",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Überprüfen der Verwendung von Node durch den Schüler",
                "file": "verify1-1.sh",
                "hint": "JavaScript kann im Terminal/SSH ausgeführt werden, indem man 'node' eingibt und die Enter-Taste drückt."
              }
            ]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "収束分岐関数",
      "description": "この実験では、JavaScript における収束分岐関数の概念を探ります。この実験の目的は、分岐関数のリストと収束関数を引数として受け取り、各分岐関数を引数に適用し、結果を収束関数に渡す新しい関数を作成する方法を理解することです。この技術は、最終結果を生成するために複数の関数を組み合わせる必要がある多くのシナリオで役立つ場合があります。",
      "meta": {
        "title": "JavaScript における収束分岐関数",
        "description": "JavaScript で、複数の分岐関数を組み合わせて最終結果を生成する高階関数を作成する方法を学びましょう。",
        "keywords": "javascript, 分岐関数, javascript 練習, javascript チューター, オンライン javascript 練習, 高階関数, javascript 実験, 収束関数, プログラミング"
      },
      "details": {
        "steps": [
          {
            "title": "収束分岐関数",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "学生の Node の使用を確認する",
                "file": "verify1-1.sh",
                "hint": "ターミナル/SSH で 'node' と入力して Enter キーを押すことで、JavaScript を実行できます。"
              }
            ]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Функции ветвления с конвергенцией",
      "description": "В этом практическом занятии мы изучим концепцию функций ветвления с конвергенцией в JavaScript. Цель этого практического занятия - помочь вам понять, как создать высшего порядка функцию, которая принимает список функций ветвления и функцию конвергенции в качестве аргументов и возвращает новую функцию, которая применяет каждую функцию ветвления к аргументам и передает результаты в функцию конвергенции. Эта техника может быть полезна в многих сценариях, где вам нужно комбинировать несколько функций, чтобы получить окончательный результат.",
      "meta": {
        "title": "Функции ветвления с конвергенцией в JavaScript",
        "description": "Изучите, как создать высшего порядка функцию, которая комбинирует несколько функций ветвления, чтобы получить окончательный результат в JavaScript.",
        "keywords": "javascript, функции ветвления, практика javascript, преподавание javascript, онлайн практика javascript, высшие порядковые функции, лабораторная работа javascript, функции конвергенции, программирование"
      },
      "details": {
        "steps": [
          {
            "title": "Функции ветвления с конвергенцией",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "Проверить использование Node студентом",
                "file": "verify1-1.sh",
                "hint": "JavaScript можно запустить в Терминале/SSH, введя 'node' и нажав Enter."
              }
            ]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    }
  ]
}
