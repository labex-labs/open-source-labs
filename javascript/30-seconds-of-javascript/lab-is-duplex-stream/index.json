{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Stream Is Duplex",
  "description": "In this lab, we will explore how to determine whether a given argument is a duplex (readable and writable) stream in JavaScript. We will use a combination of typeof checks and property validations to create a function that can accurately identify duplex streams. By the end of this lab, you will have a better understanding of how streams work in JavaScript and how to work with them in your own code.",
  "meta": {
    "title": "Mastering Duplex Streams in JavaScript",
    "description": "Explore how to determine if a given argument is a duplex (readable and writable) stream in JavaScript.",
    "keywords": "javascript, javascript practice, javascript practice online, duplex, writable, javascript lab, javascript tutor, readable, streams"
  },
  "difficulty": "Beginner",
  "time": 5,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Stream Is Duplex",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify Node Command Usage",
            "file": "verify1-1.sh",
            "hint": "JavaScript can be run in the Terminal/SSH by typing 'node' and pressing Enter.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "javascript/arith_ops",
          "javascript/comp_ops",
          "javascript/data_types",
          "javascript/obj_manip",
          "javascript/variables"
        ]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["Lotus-7"],
  "license": {
    "name": "CC-BY-4.0",
    "url": "https://github.com/30-seconds/30-seconds-of-code/blob/master/LICENSE",
    "repo": "https://github.com/30-seconds/30-seconds-of-code"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "流是否为双工流",
      "description": "在本实验中，我们将探索如何在 JavaScript 中确定给定的参数是否为双工（可读且可写）流。我们将结合使用 typeof 检查和属性验证来创建一个能够准确识别双工流的函数。在本实验结束时，你将对 JavaScript 中的流如何工作以及如何在自己的代码中使用它们有更深入的理解。",
      "meta": {
        "title": "掌握 JavaScript 中的双工流",
        "description": "探索如何在 JavaScript 中确定给定的参数是否为双工（可读且可写）流。",
        "keywords": "JavaScript, JavaScript 练习，在线 JavaScript 练习，双工，可写，JavaScript 实验，JavaScript 教程，可读，流"
      },
      "details": {
        "steps": [
          {
            "title": "流是否为双工流",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "验证 Node 命令的用法",
                "file": "verify1-1.sh",
                "hint": "在终端/SSH 中，通过输入'node'并按回车键可以运行 JavaScript。"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Stream Is Duplex",
      "description": "En este laboratorio, exploraremos cómo determinar si un argumento dado es un flujo duplex (leíble y escribible) en JavaScript. Utilizaremos una combinación de comprobaciones de typeof y validaciones de propiedades para crear una función que pueda identificar con precisión los flujos duplex. Al final de este laboratorio, tendrás una mejor comprensión de cómo funcionan los flujos en JavaScript y cómo trabajar con ellos en tu propio código.",
      "meta": {
        "title": "Dominando los flujos duplex en JavaScript",
        "description": "Explora cómo determinar si un argumento dado es un flujo duplex (leíble y escribible) en JavaScript.",
        "keywords": "javascript, práctica de javascript, práctica de javascript en línea, duplex, escribible, laboratorio de javascript, tutor de javascript, leíble, flujos"
      },
      "details": {
        "steps": [
          {
            "title": "Stream Is Duplex",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Verificar el uso del comando Node",
                "file": "verify1-1.sh",
                "hint": "Se puede ejecutar JavaScript en la Terminal/SSH escribiendo 'node' y presionando Enter."
              }
            ]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Le flux est duplex",
      "description": "Dans ce laboratoire, nous allons explorer la manière de déterminer si un argument donné est un flux duplex (lisible et écrivable) en JavaScript. Nous utiliserons une combinaison de vérifications typeof et de validations de propriétés pour créer une fonction qui peut identifier précisément les flux duplex. À la fin de ce laboratoire, vous aurez une meilleure compréhension de la manière dont les flux fonctionnent en JavaScript et de la manière de les utiliser dans votre propre code.",
      "meta": {
        "title": "Maîtriser les flux duplex en JavaScript",
        "description": "Explorez la manière de déterminer si un argument donné est un flux duplex (lisible et écrivable) en JavaScript.",
        "keywords": "javascript, pratique javascript, pratique javascript en ligne, duplex, écrivable, laboratoire javascript, tuteur javascript, lisible, flux"
      },
      "details": {
        "steps": [
          {
            "title": "Le flux est duplex",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Vérifier l'utilisation de la commande Node",
                "file": "verify1-1.sh",
                "hint": "JavaScript peut être exécuté dans le Terminal/SSH en tapant 'node' et en appuyant sur Entrée."
              }
            ]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Stream ist duplex",
      "description": "In diesem Lab werden wir untersuchen, wie man in JavaScript feststellt, ob ein gegebener Argument ein duplex (lesbar und beschreibbar) Stream ist. Wir werden eine Kombination aus typeof-Prüfungen und Eigenschaftsvalidierungen verwenden, um eine Funktion zu erstellen, die duplex Streams genau identifizieren kann. Am Ende dieses Labs werden Sie ein besseres Verständnis dafür haben, wie Streams in JavaScript funktionieren und wie Sie mit ihnen in Ihrem eigenen Code umgehen können.",
      "meta": {
        "title": "Meisterhaft mit duplex Streams in JavaScript umgehen",
        "description": "Erfahren Sie, wie Sie feststellen können, ob ein gegebener Argument ein duplex (lesbar und beschreibbar) Stream in JavaScript ist.",
        "keywords": "javascript, javascript Übung, online javascript Übung, duplex, beschreibbar, javascript Lab, javascript Tutor, lesbar, Streams"
      },
      "details": {
        "steps": [
          {
            "title": "Stream ist duplex",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Verifiziere die Verwendung des Node-Befehls",
                "file": "verify1-1.sh",
                "hint": "JavaScript kann im Terminal/SSH ausgeführt werden, indem Sie 'node' eingeben und die Eingabetaste drücken."
              }
            ]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "ストリームが双方向であるかどうか",
      "description": "この実験では、JavaScript において与えられた引数が双方向（読み書き可能）ストリームであるかどうかを判断する方法を探ります。`typeof` チェックとプロパティ検証を組み合わせて、双方向ストリームを正確に識別できる関数を作成します。この実験が終わるとき、JavaScript におけるストリームの仕組みと、自分自身のコードでそれらを扱う方法をより深く理解するようになります。",
      "meta": {
        "title": "JavaScript での双方向ストリームのマスター",
        "description": "JavaScript において与えられた引数が双方向（読み書き可能）ストリームであるかどうかを判断する方法を探ります。",
        "keywords": "javascript, javascript 練習，オンライン javascript 練習，双方向，書き込み可能，javascript 実験，javascript 講師，読み取り可能，ストリーム"
      },
      "details": {
        "steps": [
          {
            "title": "ストリームが双方向であるかどうか",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "Node コマンドの使用を確認する",
                "file": "verify1-1.sh",
                "hint": "ターミナル/SSH で 'node' と入力して Enter キーを押すことで、JavaScript を実行できます。"
              }
            ]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Двусторонние потоки в JavaScript",
      "description": "В этом практическом занятии мы изучим, как определить, является ли заданный аргумент двусторонним (читаемым и записываемым) потоком в JavaScript. Мы будем использовать комбинацию проверок typeof и проверок свойств, чтобы создать функцию, которая может точно определить двусторонние потоки. В конце этого практического занятия вы будете лучше понимать, как работают потоки в JavaScript и как работать с ними в своем коде.",
      "meta": {
        "title": "Мастерство в использовании двусторонних потоков в JavaScript",
        "description": "Изучите, как определить, является ли заданный аргумент двусторонним (читаемым и записываемым) потоком в JavaScript.",
        "keywords": "javascript, практика javascript, онлайн практика javascript, двусторонний, записываемый, практическое занятие javascript, преподавание javascript, читаемый, потоки"
      },
      "details": {
        "steps": [
          {
            "title": "Двусторонние потоки в JavaScript",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "Проверить использование команды Node",
                "file": "verify1-1.sh",
                "hint": "JavaScript можно запустить в Терминале/SSH, введя 'node' и нажав Enter."
              }
            ]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    },
    {
      "lang": "ko",
      "title": "스트림이 듀플렉스인지 확인하기",
      "description": "이 랩에서는 JavaScript 에서 주어진 인수가 듀플렉스 (읽기 및 쓰기 가능) 스트림인지 확인하는 방법을 살펴봅니다. `typeof` 검사와 속성 유효성 검사를 결합하여 듀플렉스 스트림을 정확하게 식별할 수 있는 함수를 만들 것입니다. 이 랩을 마치면 JavaScript 에서 스트림이 어떻게 작동하는지, 그리고 자신의 코드에서 어떻게 작업하는지에 대한 이해를 높일 수 있습니다.",
      "meta": {
        "title": "JavaScript 듀플렉스 스트림 마스터하기 - 읽기/쓰기 스트림 확인",
        "description": "JavaScript 에서 주어진 인수가 듀플렉스 (읽기 및 쓰기 가능) 스트림인지 확인하는 방법을 알아보세요. 듀플렉스 스트림 식별, JavaScript 스트림, 읽기/쓰기 스트림",
        "keywords": "javascript, javascript 연습, javascript 온라인 연습, 듀플렉스 (duplex), 쓰기 가능 (writable), javascript 랩, javascript 튜터, 읽기 가능 (readable), 스트림 (streams), 듀플렉스 스트림 확인"
      },
      "details": {
        "steps": [
          {
            "title": "스트림이 듀플렉스인지 확인하기",
            "text": "ko/step1.md",
            "verify": [
              {
                "name": "Node 명령어 사용 확인",
                "file": "verify1-1.sh",
                "hint": "'node'를 입력하고 Enter 키를 눌러 터미널/SSH 에서 JavaScript 를 실행할 수 있습니다."
              }
            ]
          }
        ],
        "intro": {
          "text": "ko/intro.md",
          "title": "소개"
        },
        "finish": {
          "text": "ko/finish.md",
          "title": "요약"
        }
      }
    },
    {
      "lang": "pt",
      "title": "Stream é Duplex",
      "description": "Neste laboratório, exploraremos como determinar se um determinado argumento é um stream duplex (legível e gravável) em JavaScript. Usaremos uma combinação de verificações `typeof` e validações de propriedades para criar uma função que possa identificar com precisão streams duplex. Ao final deste laboratório, você terá uma melhor compreensão de como os streams funcionam em JavaScript e como trabalhar com eles em seu próprio código.",
      "meta": {
        "title": "Dominando Streams Duplex em JavaScript",
        "description": "Explore como determinar se um determinado argumento é um stream duplex (legível e gravável) em JavaScript.",
        "keywords": "javascript, prática javascript, prática javascript online, duplex, gravável, laboratório javascript, tutor javascript, legível, streams"
      },
      "details": {
        "steps": [
          {
            "title": "Stream é Duplex",
            "text": "pt/step1.md",
            "verify": [
              {
                "name": "Verificar Uso do Comando Node",
                "file": "verify1-1.sh",
                "hint": "JavaScript pode ser executado no Terminal/SSH digitando 'node' e pressionando Enter."
              }
            ]
          }
        ],
        "intro": {
          "text": "pt/intro.md",
          "title": "Introdução"
        },
        "finish": {
          "text": "pt/finish.md",
          "title": "Resumo"
        }
      }
    }
  ]
}
