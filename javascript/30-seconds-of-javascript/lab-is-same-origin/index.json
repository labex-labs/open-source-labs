{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Checking Same-Origin URLs with JavaScript",
  "description": "In this lab, we will explore how to check if two URLs are on the same origin using JavaScript. We will use the URL.protocol and URL.host properties to compare the protocol and host of the URLs and determine whether they belong to the same origin or not. This is a useful skill for web developers who need to ensure the security of their web applications and prevent cross-site scripting attacks.",
  "meta": {
    "title": "Check Same Origin URLs | JavaScript Coding Tutorial",
    "description": "Learn how to check if two URLs are on the same origin using JavaScript. Useful for web developers to ensure security and prevent cross-site scripting attacks.",
    "keywords": "JavaScript, URL, Same Origin, Security, Cross-site Scripting"
  },
  "difficulty": "Beginner",
  "time": 5,
  "hidden": true,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Same-Origin URLs",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify Node Commands Executed",
            "file": "verify1-1.sh",
            "hint": "JavaScript can be run in the Terminal/SSH by typing 'node' and pressing Enter.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "javascript/arith_ops",
          "javascript/comp_ops",
          "javascript/data_types",
          "javascript/obj_manip",
          "javascript/variables",
          "javascript/web_sec"
        ]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["Lotus-7"],
  "license": {
    "name": "CC-BY-4.0",
    "url": "https://github.com/30-seconds/30-seconds-of-code/blob/master/LICENSE",
    "repo": "https://github.com/30-seconds/30-seconds-of-code"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "使用 JavaScript 检查同源 URL",
      "description": "在本实验中，我们将探索如何使用 JavaScript 检查两个 URL 是否同源。我们将使用 URL.protocol 和 URL.host 属性来比较 URL 的协议和主机，并确定它们是否属于同一来源。对于需要确保其 Web 应用程序安全性并防止跨站脚本攻击的 Web 开发人员来说，这是一项有用的技能。",
      "meta": {
        "title": "检查同源 URL | JavaScript 编码教程",
        "description": "学习如何使用 JavaScript 检查两个 URL 是否同源。对 Web 开发人员确保安全性和防止跨站脚本攻击很有用。",
        "keywords": "JavaScript, URL, 同源，安全性，跨站脚本"
      },
      "details": {
        "steps": [
          {
            "title": "同源 URL",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "验证已执行的 Node 命令",
                "file": "verify1-1.sh",
                "hint": "通过在终端/SSH 中输入'node'并按回车键，可以运行 JavaScript。"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Verificar URLs con el mismo origen con JavaScript",
      "description": "En este laboratorio, exploraremos cómo comprobar si dos URLs pertenecen al mismo origen utilizando JavaScript. Utilizaremos las propiedades URL.protocol y URL.host para comparar el protocolo y el host de las URLs y determinar si pertenecen al mismo origen o no. Esta es una habilidad útil para los desarrolladores web que necesitan garantizar la seguridad de sus aplicaciones web y prevenir ataques de scripting cruzado.",
      "meta": {
        "title": "Verificar URLs con el mismo origen | Tutorial de codificación de JavaScript",
        "description": "Aprende cómo comprobar si dos URLs pertenecen al mismo origen utilizando JavaScript. Útil para los desarrolladores web para garantizar la seguridad y prevenir ataques de scripting cruzado.",
        "keywords": "JavaScript, URL, Mismo origen, Seguridad, Scripting cruzado"
      },
      "details": {
        "steps": [
          {
            "title": "URLs con el mismo origen",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Verificar que se ejecutaron los comandos de Node",
                "file": "verify1-1.sh",
                "hint": "Se puede ejecutar JavaScript en la Terminal/SSH escribiendo 'node' y presionando Enter."
              }
            ]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Vérifier les URL de même origine avec JavaScript",
      "description": "Dans ce laboratoire, nous allons explorer la manière de vérifier si deux URL sont de la même origine à l'aide de JavaScript. Nous utiliserons les propriétés URL.protocol et URL.host pour comparer le protocole et l'hôte des URL et déterminer s'ils appartiennent à la même origine ou non. C'est une compétence utile pour les développeurs web qui doivent assurer la sécurité de leurs applications web et prévenir les attaques de type cross-site scripting.",
      "meta": {
        "title": "Vérifier les URL de même origine | Tutoriel de codage JavaScript",
        "description": "Découvrez comment vérifier si deux URL sont de la même origine à l'aide de JavaScript. Utile pour les développeurs web pour assurer la sécurité et prévenir les attaques de type cross-site scripting.",
        "keywords": "JavaScript, URL, Même origine, Sécurité, Cross-site scripting"
      },
      "details": {
        "steps": [
          {
            "title": "URL de même origine",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Vérifiez que les commandes Node ont été exécutées",
                "file": "verify1-1.sh",
                "hint": "JavaScript peut être exécuté dans le Terminal/SSH en tapant 'node' et en appuyant sur Entrée."
              }
            ]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Das Überprüfen von URLs von derselben Quelle mit JavaScript",
      "description": "In diesem Lab werden wir untersuchen, wie man mithilfe von JavaScript überprüft, ob zwei URLs von derselben Quelle stammen. Wir werden die Eigenschaften URL.protocol und URL.host verwenden, um das Protokoll und den Host der URLs zu vergleichen und zu bestimmen, ob sie von derselben Quelle stammen oder nicht. Dies ist eine nützliche Fähigkeit für Web-Entwickler, die die Sicherheit ihrer Webanwendungen gewährleisten und Angriffe durch Cross-Site-Scripting verhindern müssen.",
      "meta": {
        "title": "URLs von derselben Quelle überprüfen | JavaScript-Coding-Tutorial",
        "description": "Lernen Sie, wie Sie mithilfe von JavaScript überprüfen, ob zwei URLs von derselben Quelle stammen. Nützlich für Web-Entwickler, um die Sicherheit zu gewährleisten und Angriffe durch Cross-Site-Scripting zu verhindern.",
        "keywords": "JavaScript, URL, Dieselbe Quelle, Sicherheit, Cross-Site-Scripting"
      },
      "details": {
        "steps": [
          {
            "title": "URLs von derselben Quelle",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Überprüfen, ob die Node-Befehle ausgeführt wurden",
                "file": "verify1-1.sh",
                "hint": "JavaScript kann im Terminal/SSH ausgeführt werden, indem man 'node' eingibt und die Eingabetaste drückt."
              }
            ]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "JavaScript を使って同じオリジンの URL を確認する",
      "description": "この実験では、JavaScript を使って 2 つの URL が同じオリジンにあるかどうかを確認する方法を探ります。URL のプロトコルとホストを比較し、同じオリジンに属するかどうかを判断するために、URL.protocol と URL.host プロパティを使用します。これは、Web アプリケーションのセキュリティを確保し、クロスサイトスクリプティング攻撃を防止する必要がある Web 開発者にとって役立つスキルです。",
      "meta": {
        "title": "同じオリジンの URL を確認する | JavaScript コーディングチュートリアル",
        "description": "JavaScript を使って 2 つの URL が同じオリジンにあるかどうかを確認する方法を学びましょう。Web 開発者にとって、セキュリティを確保し、クロスサイトスクリプティング攻撃を防止するのに役立ちます。",
        "keywords": "JavaScript, URL, 同じオリジン，セキュリティ，クロスサイトスクリプティング"
      },
      "details": {
        "steps": [
          {
            "title": "同じオリジンの URL",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "Node コマンドの実行を確認する",
                "file": "verify1-1.sh",
                "hint": "ターミナル/SSH で'node'と入力して Enter キーを押すことで JavaScript を実行できます。"
              }
            ]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Проверка URL-адресов из одного источника с использованием JavaScript",
      "description": "В этом лабораторном задании мы изучим, как проверить, находятся ли два URL-адреса в одном источнике с использованием JavaScript. Мы будем использовать свойства URL.protocol и URL.host для сравнения протокола и хоста URL-адресов и определения, принадлежат ли они одному и тому же источнику или нет. Это полезный навык для веб-разработчиков, которые должны обеспечить безопасность своих веб-приложений и предотвратить атаки с использованием кросс-страничного сценария.",
      "meta": {
        "title": "Проверить URL-адреса из одного источника | Руководство по программированию на JavaScript",
        "description": "Изучите, как проверить, находятся ли два URL-адреса в одном источнике с использованием JavaScript. Полезно для веб-разработчиков для обеспечения безопасности и предотвращения атаки с использованием кросс-страничного сценария.",
        "keywords": "JavaScript, URL, Источник, Безопасность, Кросс-страничный сценарий"
      },
      "details": {
        "steps": [
          {
            "title": "URL-адреса из одного источника",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "Проверить выполнение команд Node",
                "file": "verify1-1.sh",
                "hint": "JavaScript можно запустить в Терминале/SSH, введя 'node' и нажав Enter."
              }
            ]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    },
    {
      "lang": "ko",
      "title": "JavaScript 를 사용하여 동일 오리진 URL 확인하기",
      "description": "이 랩에서는 JavaScript 를 사용하여 두 URL 이 동일한 오리진에 있는지 확인하는 방법을 살펴봅니다. URL 의 프로토콜과 호스트를 비교하고 동일한 오리진에 속하는지 여부를 결정하기 위해 URL.protocol 및 URL.host 속성을 사용합니다. 이는 웹 애플리케이션의 보안을 보장하고 크로스 사이트 스크립팅 공격을 방지해야 하는 웹 개발자에게 유용한 기술입니다.",
      "meta": {
        "title": "동일 오리진 URL 확인 | JavaScript 코딩 튜토리얼",
        "description": "JavaScript 를 사용하여 두 URL 이 동일한 오리진에 있는지 확인하는 방법을 알아보세요. 웹 개발자가 보안을 보장하고 크로스 사이트 스크립팅 공격을 방지하는 데 유용합니다.",
        "keywords": "JavaScript, URL, 동일 오리진, 보안, 크로스 사이트 스크립팅, 자바스크립트 URL, URL 오리진 확인"
      },
      "details": {
        "steps": [
          {
            "title": "동일 오리진 URL",
            "text": "ko/step1.md",
            "verify": [
              {
                "name": "Node 명령어 실행 확인",
                "file": "verify1-1.sh",
                "hint": "터미널/SSH 에서 'node'를 입력하고 Enter 키를 눌러 JavaScript 를 실행할 수 있습니다."
              }
            ]
          }
        ],
        "intro": {
          "text": "ko/intro.md",
          "title": "소개"
        },
        "finish": {
          "text": "ko/finish.md",
          "title": "요약"
        }
      }
    },
    {
      "lang": "pt",
      "title": "Verificando URLs de Mesma Origem com JavaScript",
      "description": "Neste laboratório, exploraremos como verificar se duas URLs estão na mesma origem usando JavaScript. Usaremos as propriedades URL.protocol e URL.host para comparar o protocolo e o host das URLs e determinar se elas pertencem à mesma origem ou não. Esta é uma habilidade útil para desenvolvedores web que precisam garantir a segurança de suas aplicações web e prevenir ataques de cross-site scripting.",
      "meta": {
        "title": "Verificar URLs de Mesma Origem | Tutorial de Codificação JavaScript",
        "description": "Aprenda como verificar se duas URLs estão na mesma origem usando JavaScript. Útil para desenvolvedores web garantirem a segurança e prevenir ataques de cross-site scripting.",
        "keywords": "JavaScript, URL, Mesma Origem, Segurança, Cross-site Scripting"
      },
      "details": {
        "steps": [
          {
            "title": "URLs de Mesma Origem",
            "text": "pt/step1.md",
            "verify": [
              {
                "name": "Verificar Comandos Node Executados",
                "file": "verify1-1.sh",
                "hint": "JavaScript pode ser executado no Terminal/SSH digitando 'node' e pressionando Enter."
              }
            ]
          }
        ],
        "intro": {
          "text": "pt/intro.md",
          "title": "Introdução"
        },
        "finish": {
          "text": "pt/finish.md",
          "title": "Resumo"
        }
      }
    }
  ]
}
