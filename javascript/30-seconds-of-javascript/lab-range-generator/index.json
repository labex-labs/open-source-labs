{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Generating Range Values with JavaScript Generators",
  "description": "In this lab, we will explore how to create a rangeGenerator function in JavaScript that generates all values in a given range using a specified step. We will use a while loop and the yield keyword to return each value and increment by the specified step. By the end of this lab, you will have a better understanding of how to create custom generators in JavaScript and their practical applications.",
  "meta": {
    "title": "JavaScript Range Generator | Custom Generators",
    "description": "Learn how to create a JavaScript range generator function using a while loop and the yield keyword. Explore practical applications of custom generators.",
    "keywords": "JavaScript, range generator, custom generators, while loop, yield, programming tutorial"
  },
  "difficulty": "Beginner",
  "time": 10,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Range Generator",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify Node Commands in Zsh History",
            "file": "verify1-1.sh",
            "hint": "JavaScript can be run in the Terminal/SSH by typing 'node' and pressing Enter.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "javascript/arith_ops",
          "javascript/comp_ops",
          "javascript/data_types",
          "javascript/debugging",
          "javascript/loops",
          "javascript/variables"
        ]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["Lotus-7"],
  "license": {
    "name": "CC-BY-4.0",
    "url": "https://github.com/30-seconds/30-seconds-of-code/blob/master/LICENSE",
    "repo": "https://github.com/30-seconds/30-seconds-of-code"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "使用JavaScript生成器生成范围值",
      "description": "在本实验中，我们将探索如何在JavaScript中创建一个rangeGenerator函数，该函数使用指定的步长生成给定范围内的所有值。我们将使用while循环和yield关键字来返回每个值，并按指定的步长递增。在本实验结束时，你将更好地理解如何在JavaScript中创建自定义生成器及其实际应用。",
      "meta": {
        "title": "JavaScript范围生成器 | 自定义生成器",
        "description": "学习如何使用while循环和yield关键字创建JavaScript范围生成器函数。探索自定义生成器的实际应用。",
        "keywords": "JavaScript, 范围生成器, 自定义生成器, while循环, yield, 编程教程"
      },
      "details": {
        "steps": [
          {
            "title": "范围生成器",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "在Zsh历史记录中验证Node命令",
                "file": "verify1-1.sh",
                "hint": "通过在终端/SSH中输入'node'并按回车键，可以运行JavaScript。"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    }
  ]
}
