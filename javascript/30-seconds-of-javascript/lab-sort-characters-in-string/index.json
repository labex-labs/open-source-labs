{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Sort Characters in String",
  "description": "In this lab, we will explore how to sort characters in a string in alphabetical order using JavaScript. We will use the spread operator, Array.prototype.sort(), and String.prototype.localeCompare() to achieve this. By the end of the lab, you will have a good understanding of how to manipulate strings in JavaScript using these methods.",
  "meta": {
    "title": "JavaScript String Sorting | Alphabetical Order",
    "description": "Learn how to sort characters in a string alphabetically using JavaScript's spread operator, Array.sort(), and String.localeCompare().",
    "keywords": "javascript, string, sorting, alphabetical order, sort, string manipulation"
  },
  "difficulty": "Beginner",
  "time": 5,
  "hidden": true,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Sort Characters in String",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify Node Commands in Zsh History",
            "file": "verify1-1.sh",
            "hint": "JavaScript can be run in the Terminal/SSH by typing 'node' and pressing Enter.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "javascript/arith_ops",
          "javascript/comp_ops",
          "javascript/data_types",
          "javascript/spread_rest",
          "javascript/variables"
        ]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["Lotus-7"],
  "license": {
    "name": "CC-BY-4.0",
    "url": "https://github.com/30-seconds/30-seconds-of-code/blob/master/LICENSE",
    "repo": "https://github.com/30-seconds/30-seconds-of-code"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "对字符串中的字符进行排序",
      "description": "在本实验中，我们将探索如何使用 JavaScript 将字符串中的字符按字母顺序排序。我们将使用展开运算符、Array.prototype.sort() 和 String.prototype.localeCompare() 来实现这一点。在实验结束时，你将很好地理解如何使用这些方法在 JavaScript 中操作字符串。",
      "meta": {
        "title": "JavaScript 字符串排序 | 字母顺序",
        "description": "学习如何使用 JavaScript 的展开运算符、Array.sort() 和 String.localeCompare() 按字母顺序对字符串中的字符进行排序。",
        "keywords": "javascript, 字符串，排序，字母顺序，排序，字符串操作"
      },
      "details": {
        "steps": [
          {
            "title": "对字符串中的字符进行排序",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "在 Zsh 历史记录中验证 Node 命令",
                "file": "verify1-1.sh",
                "hint": "通过输入'node'并按 Enter 键，可以在终端/SSH 中运行 JavaScript。"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Ordenar Caracteres en una Cadena",
      "description": "En este laboratorio, exploraremos cómo ordenar los caracteres de una cadena en orden alfabético utilizando JavaScript. Utilizaremos el operador de propagación, Array.prototype.sort() y String.prototype.localeCompare() para lograr esto. Al final del laboratorio, tendrás una buena comprensión de cómo manipular cadenas en JavaScript utilizando estos métodos.",
      "meta": {
        "title": "Ordenamiento de Cadenas en JavaScript | Orden Alfabético",
        "description": "Aprende cómo ordenar los caracteres de una cadena en orden alfabético utilizando el operador de propagación de JavaScript, Array.sort() y String.localeCompare().",
        "keywords": "javascript, cadena, ordenamiento, orden alfabético, ordenar, manipulación de cadenas"
      },
      "details": {
        "steps": [
          {
            "title": "Ordenar Caracteres en una Cadena",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Verificar Comandos de Node en el Historial de Zsh",
                "file": "verify1-1.sh",
                "hint": "JavaScript se puede ejecutar en la Terminal/SSH escribiendo 'node' y presionando Enter."
              }
            ]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Trier les caractères dans une chaîne de caractères",
      "description": "Dans ce laboratoire, nous allons explorer la manière de trier les caractères d'une chaîne de caractères par ordre alphabétique à l'aide de JavaScript. Nous utiliserons l'opérateur de propagation, Array.prototype.sort() et String.prototype.localeCompare() pour y parvenir. À la fin du laboratoire, vous aurez une bonne compréhension de la manière de manipuler les chaînes de caractères en JavaScript à l'aide de ces méthodes.",
      "meta": {
        "title": "Tri de chaînes de caractères JavaScript | Ordre alphabétique",
        "description": "Découvrez comment trier les caractères d'une chaîne de caractères par ordre alphabétique à l'aide de l'opérateur de propagation, Array.sort() et String.localeCompare() de JavaScript.",
        "keywords": "javascript, chaîne de caractères, tri, ordre alphabétique, trier, manipulation de chaînes de caractères"
      },
      "details": {
        "steps": [
          {
            "title": "Trier les caractères dans une chaîne de caractères",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Vérifier les commandes Node dans l'historique Zsh",
                "file": "verify1-1.sh",
                "hint": "JavaScript peut être exécuté dans le Terminal/SSH en tapant 'node' et en appuyant sur Entrée."
              }
            ]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Zeichen in einer Zeichenkette sortieren",
      "description": "In diesem Lab werden wir untersuchen, wie man Zeichen in einer Zeichenkette alphabetisch sortiert mit JavaScript. Wir werden den Spread-Operator, Array.prototype.sort() und String.prototype.localeCompare() verwenden, um dies zu erreichen. Am Ende des Labs werden Sie gut verstehen, wie man Zeichenketten in JavaScript mit diesen Methoden manipulieren kann.",
      "meta": {
        "title": "JavaScript-Zeichenketten-Sortierung | Alphabetische Reihenfolge",
        "description": "Lernen Sie, wie Sie Zeichen in einer Zeichenkette alphabetisch sortieren, indem Sie den Spread-Operator von JavaScript, Array.sort() und String.localeCompare() verwenden.",
        "keywords": "javascript, zeichenkette, sortierung, alphabetische reihenfolge, sortieren, zeichenkettenmanipulation"
      },
      "details": {
        "steps": [
          {
            "title": "Zeichen in einer Zeichenkette sortieren",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Überprüfen von Node-Befehlen in der Zsh-Geschichte",
                "file": "verify1-1.sh",
                "hint": "JavaScript kann im Terminal/SSH ausgeführt werden, indem man 'node' eingibt und die Enter-Taste drückt."
              }
            ]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "文字列を構成する文字をソートする",
      "description": "この実験では、JavaScript を使って文字列をアルファベット順にソートする方法を探ります。これを達成するために、スプレッド演算子、`Array.prototype.sort()`、および `String.prototype.localeCompare()` を使用します。実験が終了するとき、これらのメソッドを使って JavaScript で文字列を操作する方法を十分に理解しているでしょう。",
      "meta": {
        "title": "JavaScript による文字列のソート | アルファベット順",
        "description": "JavaScript のスプレッド演算子、`Array.sort()`、および `String.localeCompare()` を使って、文字列をアルファベット順にソートする方法を学びましょう。",
        "keywords": "javascript, 文字列，ソート，アルファベット順，ソート，文字列操作"
      },
      "details": {
        "steps": [
          {
            "title": "文字列を構成する文字をソートする",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "Zsh 履歴の Node コマンドを確認する",
                "file": "verify1-1.sh",
                "hint": "ターミナル/SSH で 'node' と入力して Enter キーを押すことで、JavaScript を実行できます。"
              }
            ]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Сортировка символов в строке",
      "description": "В этом практическом занятии мы изучим, как сортировать символы в строке в алфавитном порядке с использованием JavaScript. Для этого мы будем использовать оператор расширения, Array.prototype.sort() и String.prototype.localeCompare(). В конце практического занятия вы хорошо освоите методы манипуляции строками в JavaScript.",
      "meta": {
        "title": "Сортировка строк в JavaScript | Алфавитный порядок",
        "description": "Изучите, как сортировать символы в строке в алфавитном порядке с использованием оператора расширения JavaScript, Array.sort() и String.localeCompare().",
        "keywords": "javascript, строка, сортировка, алфавитный порядок, сортировать, манипуляция со строками"
      },
      "details": {
        "steps": [
          {
            "title": "Сортировка символов в строке",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "Проверить команды Node в истории Zsh",
                "file": "verify1-1.sh",
                "hint": "JavaScript можно запускать в Терминале/SSH, введя 'node' и нажав Enter."
              }
            ]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    },
    {
      "lang": "ko",
      "title": "문자열 내 문자 정렬",
      "description": "이 랩에서는 JavaScript 를 사용하여 문자열 내 문자를 알파벳 순으로 정렬하는 방법을 살펴봅니다. 스프레드 연산자 (spread operator), Array.prototype.sort(), String.prototype.localeCompare() 를 사용하여 이를 수행합니다. 랩을 마치면 이러한 메서드를 사용하여 JavaScript 에서 문자열을 조작하는 방법에 대한 이해를 높일 수 있습니다.",
      "meta": {
        "title": "JavaScript 문자열 정렬 | 알파벳 순",
        "description": "JavaScript 의 스프레드 연산자, Array.sort(), String.localeCompare() 를 사용하여 문자열 내 문자를 알파벳 순으로 정렬하는 방법을 알아보세요.",
        "keywords": "자바스크립트, 문자열, 정렬, 알파벳 순, sort, 문자열 조작"
      },
      "details": {
        "steps": [
          {
            "title": "문자열 내 문자 정렬",
            "text": "ko/step1.md",
            "verify": [
              {
                "name": "Zsh 히스토리에서 Node 명령어 확인",
                "file": "verify1-1.sh",
                "hint": "터미널/SSH 에서 'node'를 입력하고 Enter 키를 눌러 JavaScript 를 실행할 수 있습니다."
              }
            ]
          }
        ],
        "intro": {
          "text": "ko/intro.md",
          "title": "소개"
        },
        "finish": {
          "text": "ko/finish.md",
          "title": "요약"
        }
      }
    },
    {
      "lang": "pt",
      "title": "Ordenar Caracteres em String",
      "description": "Neste laboratório, exploraremos como ordenar caracteres em uma string em ordem alfabética usando JavaScript. Usaremos o operador spread, Array.prototype.sort() e String.prototype.localeCompare() para conseguir isso. Ao final do laboratório, você terá uma boa compreensão de como manipular strings em JavaScript usando esses métodos.",
      "meta": {
        "title": "Ordenação de Strings em JavaScript | Ordem Alfabética",
        "description": "Aprenda a ordenar caracteres em uma string alfabeticamente usando o operador spread do JavaScript, Array.sort() e String.localeCompare().",
        "keywords": "javascript, string, ordenação, ordem alfabética, sort, manipulação de strings"
      },
      "details": {
        "steps": [
          {
            "title": "Ordenar Caracteres em String",
            "text": "pt/step1.md",
            "verify": [
              {
                "name": "Verificar Comandos Node no Histórico Zsh",
                "file": "verify1-1.sh",
                "hint": "JavaScript pode ser executado no Terminal/SSH digitando 'node' e pressionando Enter."
              }
            ]
          }
        ],
        "intro": {
          "text": "pt/intro.md",
          "title": "Introdução"
        },
        "finish": {
          "text": "pt/finish.md",
          "title": "Resumo"
        }
      }
    }
  ]
}
