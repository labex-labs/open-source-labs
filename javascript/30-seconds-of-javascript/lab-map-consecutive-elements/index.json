{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Map Consecutive Elements",
  "description": "In this lab, we will explore the mapConsecutive function in JavaScript. This function allows us to map consecutive elements of an array using a given function. We will learn how to use this function to manipulate arrays in a concise and efficient way.",
  "meta": {
    "title": "Mastering Consecutive Element Mapping in JavaScript",
    "description": "Learn how to use the mapConsecutive function to efficiently manipulate arrays in JavaScript.",
    "keywords": "javascript, javascript practice, array manipulation, javascript practice online, programming tutorial, consecutive elements, mapping, javascript lab, javascript tutor"
  },
  "difficulty": "Beginner",
  "time": 5,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Map Consecutive Elements",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify Node Commands Executed",
            "file": "verify1-1.sh",
            "hint": "JavaScript can be run in the Terminal/SSH by typing 'node' and pressing Enter.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": []
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["Lotus-7"],
  "license": {
    "name": "CC-BY-4.0",
    "url": "https://github.com/30-seconds/30-seconds-of-code/blob/master/LICENSE",
    "repo": "https://github.com/30-seconds/30-seconds-of-code"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "映射连续元素",
      "description": "在本实验中，我们将探索 JavaScript 中的 mapConsecutive 函数。该函数允许我们使用给定函数对数组的连续元素进行映射。我们将学习如何使用此函数以简洁高效的方式操作数组。",
      "meta": {
        "title": "精通 JavaScript 中的连续元素映射",
        "description": "学习如何使用 mapConsecutive 函数在 JavaScript 中高效地操作数组。",
        "keywords": "JavaScript, JavaScript 练习，数组操作，在线 JavaScript 练习，编程教程，连续元素，映射，JavaScript 实验，JavaScript 教程"
      },
      "details": {
        "steps": [
          {
            "title": "映射连续元素",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "验证已执行的 Node 命令",
                "file": "verify1-1.sh",
                "hint": "通过在终端/SSH 中输入 'node' 并按回车键，可以运行 JavaScript。"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Mapeo de Elementos Consecutivos",
      "description": "En este laboratorio, exploraremos la función mapConsecutive en JavaScript. Esta función nos permite aplicar una función dada a elementos consecutivos de un array. Aprenderemos a utilizar esta función para manipular arrays de manera concisa y eficiente.",
      "meta": {
        "title": "Dominando el Mapeo de Elementos Consecutivos en JavaScript",
        "description": "Aprende a utilizar la función mapConsecutive para manipular eficientemente arrays en JavaScript.",
        "keywords": "javascript, práctica de javascript, manipulación de arrays, práctica de javascript en línea, tutorial de programación, elementos consecutivos, mapeo, laboratorio de javascript, tutor de javascript"
      },
      "details": {
        "steps": [
          {
            "title": "Mapeo de Elementos Consecutivos",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Verificar que se ejecutaron los comandos de Node",
                "file": "verify1-1.sh",
                "hint": "Se puede ejecutar JavaScript en la Terminal/SSH escribiendo 'node' y presionando Enter."
              }
            ]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Mapper des éléments consécutifs",
      "description": "Dans ce laboratoire, nous allons explorer la fonction mapConsecutive en JavaScript. Cette fonction nous permet de mapper des éléments consécutifs d'un tableau à l'aide d'une fonction donnée. Nous allons apprendre à utiliser cette fonction pour manipuler les tableaux de manière concise et efficace.",
      "meta": {
        "title": "Maîtriser la mise en correspondance d'éléments consécutifs en JavaScript",
        "description": "Découvrez comment utiliser la fonction mapConsecutive pour manipuler efficacement les tableaux en JavaScript.",
        "keywords": "javascript, pratique javascript, manipulation de tableaux, pratique javascript en ligne, tutoriel de programmation, éléments consécutifs, mise en correspondance, laboratoire javascript, tuteur javascript"
      },
      "details": {
        "steps": [
          {
            "title": "Mapper des éléments consécutifs",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Vérifier que les commandes Node ont été exécutées",
                "file": "verify1-1.sh",
                "hint": "JavaScript peut être exécuté dans le Terminal/SSH en tapant 'node' et en appuyant sur Entrée."
              }
            ]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Map aufeinanderfolgende Elemente",
      "description": "In diesem Lab werden wir die mapConsecutive-Funktion in JavaScript erkunden. Diese Funktion ermöglicht es uns, aufeinanderfolgende Elemente eines Arrays mit einer angegebenen Funktion abzubilden. Wir werden lernen, wie diese Funktion verwendet werden kann, um Arrays auf eine präzise und effiziente Weise zu manipulieren.",
      "meta": {
        "title": "Das Erlernen des Abbildens aufeinanderfolgender Elemente in JavaScript",
        "description": "Lernen Sie, wie Sie die mapConsecutive-Funktion verwenden, um Arrays in JavaScript effizient zu manipulieren.",
        "keywords": "javascript, javascript Übung, Arraymanipulation, Online-JavaScript-Übung, Programmier-Tutorial, aufeinanderfolgende Elemente, Abbildung, JavaScript-Lab, JavaScript-Tutor"
      },
      "details": {
        "steps": [
          {
            "title": "Map aufeinanderfolgende Elemente",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Verifizieren Sie, dass die Node-Befehle ausgeführt wurden",
                "file": "verify1-1.sh",
                "hint": "JavaScript kann im Terminal/SSH ausgeführt werden, indem Sie 'node' eingeben und die Eingabetaste drücken."
              }
            ]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "連続する要素をマッピングする",
      "description": "この実験では、JavaScript の mapConsecutive 関数を調べます。この関数を使うと、与えられた関数を使って配列の連続する要素をマッピングできます。この関数を使って配列を簡潔かつ効率的に操作する方法を学びます。",
      "meta": {
        "title": "JavaScript における連続要素のマッピングのマスター",
        "description": "JavaScript で mapConsecutive 関数を使って効率的に配列を操作する方法を学びましょう。",
        "keywords": "javascript, javascript の練習，配列操作，オンラインでの javascript の練習，プログラミングチュートリアル，連続要素，マッピング，javascript 実験，javascript チューター"
      },
      "details": {
        "steps": [
          {
            "title": "連続する要素をマッピングする",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "Node コマンドの実行を確認する",
                "file": "verify1-1.sh",
                "hint": "ターミナル/SSH で 'node' と入力して Enter キーを押すことで、JavaScript を実行できます。"
              }
            ]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Отображение последовательных элементов",
      "description": "В этом лабе мы исследуем функцию mapConsecutive в JavaScript. Эта функция позволяет нам применять заданную функцию к последовательным элементам массива. Мы узнаем, как использовать эту функцию для манипуляции массивами кратко и эффективно.",
      "meta": {
        "title": "Мастерство в отображении последовательных элементов в JavaScript",
        "description": "Изучите, как использовать функцию mapConsecutive для эффективной манипуляции массивами в JavaScript.",
        "keywords": "javascript, практика javascript, манипуляция массивами, онлайн практика javascript, учебник по программированию, последовательные элементы, отображение, javascript лаб, javascript учитель"
      },
      "details": {
        "steps": [
          {
            "title": "Отображение последовательных элементов",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "Проверить выполнение команд Node",
                "file": "verify1-1.sh",
                "hint": "JavaScript можно запустить в Терминале/SSH, введя 'node' и нажав Enter."
              }
            ]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    },
    {
      "lang": "ko",
      "title": "연속 요소 매핑",
      "description": "이 랩에서는 JavaScript 의 mapConsecutive 함수를 살펴보겠습니다. 이 함수를 사용하면 주어진 함수를 사용하여 배열의 연속된 요소를 매핑할 수 있습니다. 이 함수를 사용하여 간결하고 효율적인 방식으로 배열을 조작하는 방법을 배우게 됩니다.",
      "meta": {
        "title": "JavaScript 에서 연속 요소 매핑 마스터하기",
        "description": "mapConsecutive 함수를 사용하여 JavaScript 에서 배열을 효율적으로 조작하는 방법을 알아보세요.",
        "keywords": "javascript, 자바스크립트 연습, 배열 조작, 자바스크립트 온라인 연습, 프로그래밍 튜토리얼, 연속 요소, 매핑, 자바스크립트 랩, 자바스크립트 튜터"
      },
      "details": {
        "steps": [
          {
            "title": "연속 요소 매핑",
            "text": "ko/step1.md",
            "verify": [
              {
                "name": "노드 명령어 실행 확인",
                "file": "verify1-1.sh",
                "hint": "터미널/SSH 에서 'node'를 입력하고 Enter 키를 눌러 JavaScript 를 실행할 수 있습니다."
              }
            ]
          }
        ],
        "intro": {
          "text": "ko/intro.md",
          "title": "소개"
        },
        "finish": {
          "text": "ko/finish.md",
          "title": "요약"
        }
      }
    },
    {
      "lang": "pt",
      "title": "Mapear Elementos Consecutivos",
      "description": "Neste laboratório, exploraremos a função `mapConsecutive` em JavaScript. Esta função nos permite mapear elementos consecutivos de um array usando uma função fornecida. Aprenderemos como usar esta função para manipular arrays de forma concisa e eficiente.",
      "meta": {
        "title": "Dominando o Mapeamento de Elementos Consecutivos em JavaScript",
        "description": "Aprenda a usar a função `mapConsecutive` para manipular arrays de forma eficiente em JavaScript. Melhore suas habilidades de programação com este tutorial prático.",
        "keywords": "javascript, prática javascript, manipulação de arrays, exercícios javascript online, tutorial de programação, elementos consecutivos, mapeamento, laboratório javascript, tutor javascript"
      },
      "details": {
        "steps": [
          {
            "title": "Mapear Elementos Consecutivos",
            "text": "pt/step1.md",
            "verify": [
              {
                "name": "Verificar Comandos Node Executados",
                "file": "verify1-1.sh",
                "hint": "JavaScript pode ser executado no Terminal/SSH digitando 'node' e pressionando Enter."
              }
            ]
          }
        ],
        "intro": {
          "text": "pt/intro.md",
          "title": "Introdução"
        },
        "finish": {
          "text": "pt/finish.md",
          "title": "Resumo"
        }
      }
    }
  ]
}
