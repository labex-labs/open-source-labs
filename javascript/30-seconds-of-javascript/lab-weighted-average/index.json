{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Calculating Weighted Averages in JavaScript",
  "description": "In this lab, we will explore how to calculate the weighted average of two or more numbers using JavaScript. We will be using the Array.prototype.reduce() method to create the weighted sum of the values and the sum of the weights, and then divide them with each other to get the weighted average. This lab will help you understand the concept of a weighted average and how to implement it in JavaScript.",
  "meta": {
    "title": "Calculating Weighted Average in JavaScript | Programming Tutorial",
    "description": "Learn how to calculate the weighted average of two or more numbers using JavaScript and the Array.prototype.reduce() method. Improve your coding skills with this comprehensive tutorial.",
    "keywords": "weighted average, JavaScript, programming, tutorial, Array.prototype.reduce"
  },
  "difficulty": "Beginner",
  "time": 10,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Weighted Average",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify Node Commands History",
            "file": "verify1-1.sh",
            "hint": "JavaScript can be run in the Terminal/SSH by typing 'node' and pressing Enter.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "javascript/arith_ops",
          "javascript/array_methods",
          "javascript/comp_ops",
          "javascript/data_types",
          "javascript/higher_funcs",
          "javascript/variables"
        ]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["Lotus-7"],
  "license": {
    "name": "CC-BY-4.0",
    "url": "https://github.com/30-seconds/30-seconds-of-code/blob/master/LICENSE",
    "repo": "https://github.com/30-seconds/30-seconds-of-code"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "用 JavaScript 计算加权平均值",
      "description": "在本实验中，我们将探索如何使用 JavaScript 计算两个或多个数字的加权平均值。我们将使用 Array.prototype.reduce() 方法来创建值的加权和与权重的总和，然后将它们相除得到加权平均值。本实验将帮助你理解加权平均值的概念以及如何在 JavaScript 中实现它。",
      "meta": {
        "title": "用 JavaScript 计算加权平均值 | 编程教程",
        "description": "学习如何使用 JavaScript 和 Array.prototype.reduce() 方法计算两个或多个数字的加权平均值。通过本综合教程提升你的编码技能。",
        "keywords": "加权平均值, JavaScript, 编程, 教程, Array.prototype.reduce"
      },
      "details": {
        "steps": [
          {
            "title": "加权平均值",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "验证 Node 命令历史记录",
                "file": "verify1-1.sh",
                "hint": "通过在终端/SSH 中输入 'node' 并按回车键，可以运行 JavaScript。"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Cálculo de Promedios Ponderados en JavaScript",
      "description": "En este laboratorio, exploraremos cómo calcular el promedio ponderado de dos o más números utilizando JavaScript. Utilizaremos el método Array.prototype.reduce() para crear la suma ponderada de los valores y la suma de los pesos, y luego los dividiremos entre sí para obtener el promedio ponderado. Este laboratorio te ayudará a entender el concepto de un promedio ponderado y cómo implementarlo en JavaScript.",
      "meta": {
        "title": "Cálculo de Promedio Ponderado en JavaScript | Tutorial de Programación",
        "description": "Aprende cómo calcular el promedio ponderado de dos o más números utilizando JavaScript y el método Array.prototype.reduce(). Mejora tus habilidades de codificación con este tutorial completo.",
        "keywords": "promedio ponderado, JavaScript, programación, tutorial, Array.prototype.reduce"
      },
      "details": {
        "steps": [
          {
            "title": "Promedio Ponderado",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Verificar el historial de comandos de Node",
                "file": "verify1-1.sh",
                "hint": "JavaScript se puede ejecutar en la Terminal/SSH escribiendo 'node' y presionando Enter."
              }
            ]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Calculer les moyennes pondérées en JavaScript",
      "description": "Dans ce laboratoire, nous allons explorer la manière de calculer la moyenne pondérée de deux ou plusieurs nombres à l'aide de JavaScript. Nous utiliserons la méthode Array.prototype.reduce() pour créer la somme pondérée des valeurs et la somme des poids, puis les diviser l'une par l'autre pour obtenir la moyenne pondérée. Ce laboratoire vous aidera à comprendre le concept de moyenne pondérée et à le mettre en œuvre en JavaScript.",
      "meta": {
        "title": "Calculer la moyenne pondérée en JavaScript | Tutoriel de programmation",
        "description": "Découvrez comment calculer la moyenne pondérée de deux ou plusieurs nombres à l'aide de JavaScript et de la méthode Array.prototype.reduce(). Améliorez vos compétences en programmation avec ce tutoriel complet.",
        "keywords": "moyenne pondérée, JavaScript, programmation, tutoriel, Array.prototype.reduce"
      },
      "details": {
        "steps": [
          {
            "title": "Moyenne pondérée",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Vérifier l'historique des commandes Node",
                "file": "verify1-1.sh",
                "hint": "JavaScript peut être exécuté dans le Terminal/SSH en tapant 'node' et en appuyant sur Entrée."
              }
            ]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Das Berechnen von gewichteten Mitteln in JavaScript",
      "description": "In diesem Lab werden wir untersuchen, wie man mithilfe von JavaScript das gewichtete Mittel von zwei oder mehr Zahlen berechnet. Wir werden die Array.prototype.reduce()-Methode verwenden, um die gewichtete Summe der Werte und die Summe der Gewichte zu berechnen und dann die beiden miteinander zu dividieren, um das gewichtete Mittel zu erhalten. Dieses Lab wird Ihnen helfen, das Konzept des gewichteten Mittels zu verstehen und wie man es in JavaScript implementiert.",
      "meta": {
        "title": "Das Berechnen von gewichteten Mitteln in JavaScript | Programmier-Tutorial",
        "description": "Lernen Sie, wie man das gewichtete Mittel von zwei oder mehr Zahlen mithilfe von JavaScript und der Array.prototype.reduce()-Methode berechnet. Verbessern Sie Ihre Programmierkenntnisse mit diesem umfassenden Tutorial.",
        "keywords": "gewichtetes Mittel, JavaScript, Programmierung, Tutorial, Array.prototype.reduce"
      },
      "details": {
        "steps": [
          {
            "title": "Gewichtetes Mittel",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Verifizieren Sie die Node-Befehlsgeschichte",
                "file": "verify1-1.sh",
                "hint": "JavaScript kann im Terminal/SSH ausgeführt werden, indem Sie 'node' eingeben und die Eingabetaste drücken."
              }
            ]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "JavaScriptにおける加重平均の計算",
      "description": "この実験では、JavaScriptを使って2つ以上の数値の加重平均をどのように計算するかを探ります。値の加重和と重みの和を作成するために、Array.prototype.reduce()メソッドを使用し、その後、それらを互いに割って加重平均を求めます。この実験は、加重平均の概念とそれをJavaScriptでどのように実装するかを理解するのに役立ちます。",
      "meta": {
        "title": "JavaScriptにおける加重平均の計算 | プログラミングチュートリアル",
        "description": "JavaScriptとArray.prototype.reduce()メソッドを使って2つ以上の数値の加重平均をどのように計算するか学びましょう。この包括的なチュートリアルでコーディング技術を向上させましょう。",
        "keywords": "加重平均, JavaScript, プログラミング, チュートリアル, Array.prototype.reduce"
      },
      "details": {
        "steps": [
          {
            "title": "加重平均",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "ノードコマンド履歴を確認する",
                "file": "verify1-1.sh",
                "hint": "ターミナル/SSHで 'node' と入力してEnterキーを押すことで、JavaScriptを実行できます。"
              }
            ]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Вычисление взвешенных средних в JavaScript",
      "description": "В этом практическом занятии мы изучим, как вычислять взвешенное среднее двух или более чисел с использованием JavaScript. Мы будем использовать метод Array.prototype.reduce(), чтобы создать взвешенную сумму значений и сумму весов, а затем разделить их друг на друга, чтобы получить взвешенное среднее. Это практическое занятие поможет вам понять концепцию взвешенного среднего и как реализовать ее в JavaScript.",
      "meta": {
        "title": "Вычисление взвешенного среднего в JavaScript | Руководство по программированию",
        "description": "Изучите, как вычислять взвешенное среднее двух или более чисел с использованием JavaScript и метода Array.prototype.reduce(). Повысьте свои навыки в программировании с помощью этого полноценного руководства.",
        "keywords": "взвешенное среднее, JavaScript, программирование, руководство, Array.prototype.reduce"
      },
      "details": {
        "steps": [
          {
            "title": "Взвешенное среднее",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "Проверить историю команд Node",
                "file": "verify1-1.sh",
                "hint": "JavaScript можно запускать в Терминале/SSH, введя 'node' и нажав Enter."
              }
            ]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    }
  ]
}
