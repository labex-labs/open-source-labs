{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Argument Coalescing in JavaScript",
  "description": "In this lab, we will explore the concept of argument coalescing in JavaScript. Argument coalescing is a technique used to return the first defined, non-null argument out of a list of arguments. Through practical examples, we will learn how to implement this technique using JavaScript's built-in methods such as Array.prototype.find() and Array.prototype.includes().",
  "meta": {
    "title": "Argument Coalescing | JavaScript Techniques",
    "description": "Explore the concept of argument coalescing in JavaScript through practical examples and learn how to implement it using built-in methods.",
    "keywords": "argument coalescing, JavaScript, Array.prototype.find(), Array.prototype.includes(), programming techniques"
  },
  "difficulty": "Beginner",
  "time": 10,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Argument Coalescing",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify Node Commands Executed",
            "file": "verify1-1.sh",
            "hint": "JavaScript can be run in the Terminal/SSH by typing 'node' and pressing Enter.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "javascript/arith_ops",
          "javascript/comp_ops",
          "javascript/data_types",
          "javascript/spread_rest",
          "javascript/variables"
        ]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["Lotus-7"],
  "license": {
    "name": "CC-BY-4.0",
    "url": "https://github.com/30-seconds/30-seconds-of-code/blob/master/LICENSE",
    "repo": "https://github.com/30-seconds/30-seconds-of-code"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "JavaScript 中的参数合并",
      "description": "在本实验中，我们将探讨 JavaScript 中的参数合并概念。参数合并是一种用于从参数列表中返回第一个已定义且非空参数的技术。通过实际示例，我们将学习如何使用 JavaScript 的内置方法（如 Array.prototype.find() 和 Array.prototype.includes()）来实现此技术。",
      "meta": {
        "title": "参数合并 | JavaScript 技术",
        "description": "通过实际示例探索 JavaScript 中的参数合并概念，并学习如何使用内置方法来实现它。",
        "keywords": "参数合并, JavaScript, Array.prototype.find(), Array.prototype.includes(), 编程技术"
      },
      "details": {
        "steps": [
          {
            "title": "参数合并",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "验证是否执行了 Node 命令",
                "file": "verify1-1.sh",
                "hint": "在终端/SSH 中输入 'node' 并按回车键即可运行 JavaScript。"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    }
  ]
}
