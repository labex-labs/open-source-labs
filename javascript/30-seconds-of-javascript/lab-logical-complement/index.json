{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Exploring Logical Complement in JavaScript",
  "description": "In this lab, we will be exploring the concept of logical complement in JavaScript. We will learn how to use the complement function to generate a new function that returns the opposite of the original function. This lab will help us better understand the logic and functional programming concepts in JavaScript.",
  "meta": {
    "title": "Logical Complement in JavaScript | Functional Programming",
    "description": "Learn how to use the 'complement' function to generate a new function that returns the opposite of the original function in JavaScript.",
    "keywords": "JavaScript, Logical Complement, Functional Programming, Predicate Functions, Coding Tutorials"
  },
  "difficulty": "Beginner",
  "time": 10,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Logical Complement",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify Node Command Usage",
            "file": "verify1-1.sh",
            "hint": "JavaScript can be run in the Terminal/SSH by typing 'node' and pressing Enter.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "javascript/arith_ops",
          "javascript/comp_ops",
          "javascript/data_types",
          "javascript/spread_rest",
          "javascript/variables"
        ]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["Lotus-7"],
  "license": {
    "name": "CC-BY-4.0",
    "url": "https://github.com/30-seconds/30-seconds-of-code/blob/master/LICENSE",
    "repo": "https://github.com/30-seconds/30-seconds-of-code"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "探索 JavaScript 中的逻辑补码",
      "description": "在本实验中，我们将探索 JavaScript 中逻辑补码的概念。我们将学习如何使用 complement 函数来生成一个新函数，该函数返回原始函数的相反值。本实验将帮助我们更好地理解 JavaScript 中的逻辑和函数式编程概念。",
      "meta": {
        "title": "JavaScript 中的逻辑补码 | 函数式编程",
        "description": "学习如何使用“complement”函数在 JavaScript 中生成一个新函数，该函数返回原始函数的相反值。",
        "keywords": "JavaScript, 逻辑补码，函数式编程，谓词函数，编码教程"
      },
      "details": {
        "steps": [
          {
            "title": "逻辑补码",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "验证 Node 命令的用法",
                "file": "verify1-1.sh",
                "hint": "通过在终端/SSH 中输入'node'并按回车键，可以运行 JavaScript。"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Explorando el Complemento Lógico en JavaScript",
      "description": "En este laboratorio, exploraremos el concepto de complemento lógico en JavaScript. Aprenderemos cómo usar la función complemento para generar una nueva función que devuelva lo contrario de la función original. Este laboratorio nos ayudará a entender mejor la lógica y los conceptos de programación funcional en JavaScript.",
      "meta": {
        "title": "Complemento Lógico en JavaScript | Programación Funcional",
        "description": "Aprende cómo usar la función 'complemento' para generar una nueva función que devuelva lo contrario de la función original en JavaScript.",
        "keywords": "JavaScript, Complemento Lógico, Programación Funcional, Funciones Predicado, Tutoriales de Codificación"
      },
      "details": {
        "steps": [
          {
            "title": "Complemento Lógico",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Verificar el Uso del Comando Node",
                "file": "verify1-1.sh",
                "hint": "JavaScript se puede ejecutar en la Terminal/SSH escribiendo 'node' y presionando Enter."
              }
            ]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Explorer le complément logique en JavaScript",
      "description": "Dans ce laboratoire, nous allons explorer le concept de complément logique en JavaScript. Nous apprendrons à utiliser la fonction de complément pour générer une nouvelle fonction qui renvoie l'opposé de la fonction d'origine. Ce laboratoire nous aidera à mieux comprendre la logique et les concepts de programmation fonctionnelle en JavaScript.",
      "meta": {
        "title": "Complément logique en JavaScript | Programmation fonctionnelle",
        "description": "Apprenez à utiliser la fonction 'complement' pour générer une nouvelle fonction qui renvoie l'opposé de la fonction d'origine en JavaScript.",
        "keywords": "JavaScript, Complément logique, Programmation fonctionnelle, Fonctions prédicat, Didacticiels de codage"
      },
      "details": {
        "steps": [
          {
            "title": "Complément logique",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Vérifier l'utilisation de la commande Node",
                "file": "verify1-1.sh",
                "hint": "JavaScript peut être exécuté dans le Terminal/SSH en tapant 'node' et en appuyant sur Entrée."
              }
            ]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Das logische Komplement in JavaScript erkunden",
      "description": "In diesem Lab werden wir das Konzept des logischen Komplements in JavaScript erkunden. Wir werden lernen, wie die Komplementfunktion verwendet wird, um eine neue Funktion zu generieren, die das Gegenteil der ursprünglichen Funktion zurückgibt. Dieses Lab wird uns helfen, die Logik und die Konzepte der funktionalen Programmierung in JavaScript besser zu verstehen.",
      "meta": {
        "title": "Logisches Komplement in JavaScript | Funktionale Programmierung",
        "description": "Lernen Sie, wie die 'Komplement'-Funktion verwendet wird, um eine neue Funktion zu generieren, die das Gegenteil der ursprünglichen Funktion in JavaScript zurückgibt.",
        "keywords": "JavaScript, logisches Komplement, funktionale Programmierung, Prädikatsfunktionen, Codierungstutorials"
      },
      "details": {
        "steps": [
          {
            "title": "Logisches Komplement",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Überprüfen der Verwendung des Node-Befehls",
                "file": "verify1-1.sh",
                "hint": "JavaScript kann im Terminal/SSH ausgeführt werden, indem man 'node' eingibt und die Enter-Taste drückt."
              }
            ]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "JavaScript における論理的補数の探求",
      "description": "この実験では、JavaScript における論理的補数の概念を探求します。元の関数とは逆の値を返す新しい関数を生成するために補数関数をどのように使用するかを学びます。この実験により、JavaScript の論理と関数型プログラミングの概念をより深く理解することができます。",
      "meta": {
        "title": "JavaScript における論理的補数 | 関数型プログラミング",
        "description": "JavaScript で元の関数とは逆の値を返す新しい関数を生成するために 'complement' 関数をどのように使用するかを学びましょう。",
        "keywords": "JavaScript, 論理的補数，関数型プログラミング，述語関数，コーディングチュートリアル"
      },
      "details": {
        "steps": [
          {
            "title": "論理的補数",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "Node コマンドの使用を確認する",
                "file": "verify1-1.sh",
                "hint": "ターミナル/SSH で 'node' と入力して Enter キーを押すことで、JavaScript を実行できます。"
              }
            ]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Изучение логического дополнения в JavaScript",
      "description": "В этом лабе мы будем изучать концепцию логического дополнения в JavaScript. Мы узнаем, как использовать функцию дополнения для генерации новой функции, которая возвращает противоположное значение от исходной функции. Этот лаб поможет нам лучше понять логические и концепции функционального программирования в JavaScript.",
      "meta": {
        "title": "Логическое дополнение в JavaScript | Функциональное программирование",
        "description": "Изучите, как использовать функцию 'дополнения' для генерации новой функции, которая возвращает противоположное значение от исходной функции в JavaScript.",
        "keywords": "JavaScript, Логическое дополнение, Функциональное программирование, Предикат-функции, Руководства по программированию"
      },
      "details": {
        "steps": [
          {
            "title": "Логическое дополнение",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "Проверить использование команды Node",
                "file": "verify1-1.sh",
                "hint": "JavaScript можно запустить в Терминале/SSH, введя 'node' и нажав Enter."
              }
            ]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    }
  ]
}
