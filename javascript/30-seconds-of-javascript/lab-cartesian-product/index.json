{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Calculating Cartesian Product with JavaScript",
  "description": "In this lab, we will explore the concept of Cartesian Product and how to calculate it using JavaScript. We will learn how to use the Array.prototype.reduce(), Array.prototype.map() and the spread operator (...) to generate all possible element pairs from two arrays. By the end of the lab, you will have a better understanding of how to use these methods to calculate the Cartesian Product of two arrays.",
  "meta": {
    "title": "Cartesian Product | JavaScript | Array Manipulation",
    "description": "Learn how to calculate the Cartesian Product of two arrays using JavaScript techniques like Array.prototype.reduce(), Array.prototype.map(), and the spread operator.",
    "keywords": "Cartesian Product, JavaScript, Array Manipulation, Array.prototype.reduce, Array.prototype.map, Spread Operator"
  },
  "difficulty": "Beginner",
  "time": 10,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Cartesian Product",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify Node Commands History",
            "file": "verify1-1.sh",
            "hint": "JavaScript can be run in the Terminal/SSH by typing 'node' and pressing Enter.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "javascript/arith_ops",
          "javascript/comp_ops",
          "javascript/data_types",
          "javascript/higher_funcs",
          "javascript/spread_rest",
          "javascript/variables"
        ]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["Lotus-7"],
  "license": {
    "name": "CC-BY-4.0",
    "url": "https://github.com/30-seconds/30-seconds-of-code/blob/master/LICENSE",
    "repo": "https://github.com/30-seconds/30-seconds-of-code"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "使用 JavaScript 计算笛卡尔积",
      "description": "在本实验中，我们将探讨笛卡尔积的概念，以及如何使用 JavaScript 计算它。我们将学习如何使用 Array.prototype.reduce()、Array.prototype.map() 和展开运算符（...）从两个数组生成所有可能的元素对。在实验结束时，你将更好地理解如何使用这些方法来计算两个数组的笛卡尔积。",
      "meta": {
        "title": "笛卡尔积 | JavaScript | 数组操作",
        "description": "学习如何使用 JavaScript 技术，如 Array.prototype.reduce()、Array.prototype.map() 和展开运算符，计算两个数组的笛卡尔积。",
        "keywords": "笛卡尔积, JavaScript, 数组操作, Array.prototype.reduce, Array.prototype.map, 展开运算符"
      },
      "details": {
        "steps": [
          {
            "title": "笛卡尔积",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "验证 Node 命令历史记录",
                "file": "verify1-1.sh",
                "hint": "在终端/SSH 中，通过输入 'node' 并按回车键可以运行 JavaScript。"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    }
  ]
}
