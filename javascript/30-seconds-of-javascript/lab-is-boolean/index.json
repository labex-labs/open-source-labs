{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Value Is Boolean",
  "description": "In this lab, we will dive into the concept of boolean values in JavaScript. We will explore how to check whether a given value is a boolean primitive or not using the typeof operator. By the end of this lab, you will have a solid understanding of how to identify boolean values in JavaScript.",
  "meta": {
    "title": "Mastering Boolean Values in JavaScript",
    "description": "Dive into the world of boolean values and learn how to identify them in your JavaScript code.",
    "keywords": "javascript, javascript practice, boolean, javascript practice online, javascript lab, value, type, javascript tutor, programming"
  },
  "difficulty": "Beginner",
  "time": 5,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Value Is Boolean",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify Node Commands In Zsh History",
            "file": "verify1-1.sh",
            "hint": "JavaScript can be run in the Terminal/SSH by typing 'node' and pressing Enter.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "javascript/arith_ops",
          "javascript/comp_ops",
          "javascript/data_types",
          "javascript/variables"
        ]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["Lotus-7"],
  "license": {
    "name": "CC-BY-4.0",
    "url": "https://github.com/30-seconds/30-seconds-of-code/blob/master/LICENSE",
    "repo": "https://github.com/30-seconds/30-seconds-of-code"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "值是否为布尔值",
      "description": "在本实验中，我们将深入探讨 JavaScript 中布尔值的概念。我们将探索如何使用 typeof 运算符检查给定值是否为布尔原始值。在本实验结束时，你将对如何在 JavaScript 中识别布尔值有扎实的理解。",
      "meta": {
        "title": "掌握 JavaScript 中的布尔值",
        "description": "深入了解布尔值的世界，并学习如何在你的 JavaScript 代码中识别它们。",
        "keywords": "JavaScript, JavaScript 练习，布尔值，在线 JavaScript 练习，JavaScript 实验，值，类型，JavaScript 导师，编程"
      },
      "details": {
        "steps": [
          {
            "title": "值是否为布尔值",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "在 Zsh 历史记录中验证 Node 命令",
                "file": "verify1-1.sh",
                "hint": "通过输入'node'并按 Enter 键，可以在终端/SSH 中运行 JavaScript。"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Valor es Booleano",
      "description": "En este laboratorio, profundizaremos en el concepto de valores booleanos en JavaScript. Exploraremos cómo comprobar si un valor dado es un primitivo booleano o no utilizando el operador typeof. Al final de este laboratorio, tendrás una comprensión sólida de cómo identificar valores booleanos en JavaScript.",
      "meta": {
        "title": "Dominando los Valores Booleanos en JavaScript",
        "description": "Sumérgete en el mundo de los valores booleanos y aprende a identificarlos en tu código JavaScript.",
        "keywords": "javascript, práctica de javascript, booleano, práctica de javascript en línea, laboratorio de javascript, valor, tipo, tutor de javascript, programación"
      },
      "details": {
        "steps": [
          {
            "title": "Valor es Booleano",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Verificar comandos de Node en el historial de Zsh",
                "file": "verify1-1.sh",
                "hint": "JavaScript se puede ejecutar en la Terminal/SSH escribiendo 'node' y presionando Enter."
              }
            ]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Valeur est booléenne",
      "description": "Dans ce laboratoire, nous allons plonger dans le concept de valeurs booléennes en JavaScript. Nous allons explorer la manière de vérifier si une valeur donnée est un primitif booléen ou non en utilisant l'opérateur typeof. À la fin de ce laboratoire, vous aurez une compréhension solide de la manière d'identifier les valeurs booléennes en JavaScript.",
      "meta": {
        "title": "Maîtriser les valeurs booléennes en JavaScript",
        "description": "Plongez dans le monde des valeurs booléennes et apprenez à les identifier dans votre code JavaScript.",
        "keywords": "javascript, pratique javascript, booléen, pratique javascript en ligne, laboratoire javascript, valeur, type, tuteur javascript, programmation"
      },
      "details": {
        "steps": [
          {
            "title": "Valeur est booléenne",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Vérifier les commandes Node dans l'historique Zsh",
                "file": "verify1-1.sh",
                "hint": "JavaScript peut être exécuté dans le Terminal/SSH en tapant 'node' et en appuyant sur Entrée."
              }
            ]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Wert ist Boolean",
      "description": "In diesem Lab werden wir uns mit dem Konzept von booleschen Werten in JavaScript befassen. Wir werden untersuchen, wie man mithilfe des typeof-Operators überprüft, ob ein gegebenen Wert ein boolescher primitiver Wert ist oder nicht. Am Ende dieses Labs werden Sie eine solide Vorstellung davon haben, wie man boolesche Werte in JavaScript identifiziert.",
      "meta": {
        "title": "Das Beherrschen von booleschen Werten in JavaScript",
        "description": "Taucht in die Welt der booleschen Werte ein und lernen Sie, wie Sie sie in Ihrem JavaScript-Code identifizieren.",
        "keywords": "javascript, javascript Übung, boolean, Online-JavaScript-Übung, JavaScript-Lab, Wert, Typ, JavaScript-Tutor, Programmierung"
      },
      "details": {
        "steps": [
          {
            "title": "Wert ist Boolean",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Verifiziere Node-Befehle in der Zsh-Geschichte",
                "file": "verify1-1.sh",
                "hint": "JavaScript kann im Terminal/SSH ausgeführt werden, indem man 'node' eingibt und die Enter-Taste drückt."
              }
            ]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "値が論理値であるかどうか",
      "description": "この実験では、JavaScript における論理値の概念を深く掘り下げます。`typeof` 演算子を使って、与えられた値が論理値のプリミティブかどうかを確認する方法を探ります。この実験が終わるとき、JavaScript における論理値を識別する方法をしっかりと理解しているでしょう。",
      "meta": {
        "title": "JavaScript における論理値のマスター",
        "description": "論理値の世界に没頭し、JavaScript コードでそれらを識別する方法を学びましょう。",
        "keywords": "javascript, javascript の練習，論理値，オンラインでの javascript の練習，javascript の実験，値，型，javascript のチューター, プログラミング"
      },
      "details": {
        "steps": [
          {
            "title": "値が論理値であるかどうか",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "Zsh 履歴の Node コマンドを確認する",
                "file": "verify1-1.sh",
                "hint": "ターミナル/SSH で 'node' と入力して Enter キーを押すことで、JavaScript を実行できます。"
              }
            ]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Значение является булевым",
      "description": "В этом практическом занятии мы углубимся в концепцию булевых значений в JavaScript. Мы изучим, как проверить, является ли заданное значение примитивным булевым значением, используя оператор typeof. В конце этого практического занятия вы глубоко поймете, как определить булевые значения в JavaScript.",
      "meta": {
        "title": "Мастерство в работе с булевыми значениями в JavaScript",
        "description": "Погрузитесь в мир булевых значений и научитесь определять их в своем коде на JavaScript.",
        "keywords": "javascript, практика javascript, boolean, онлайн практика javascript, практическое занятие javascript, значение, тип, преподаватель javascript, программирование"
      },
      "details": {
        "steps": [
          {
            "title": "Значение является булевым",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "Проверить команды Node в истории Zsh",
                "file": "verify1-1.sh",
                "hint": "JavaScript можно запустить в Терминале/SSH, введя 'node' и нажав Enter."
              }
            ]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    },
    {
      "lang": "ko",
      "title": "값이 부울인지 확인하기",
      "description": "이 랩에서는 JavaScript 의 부울 값 개념에 대해 자세히 알아보겠습니다. `typeof` 연산자를 사용하여 주어진 값이 부울 기본형인지 확인하는 방법을 살펴봅니다. 이 랩을 마치면 JavaScript 에서 부울 값을 식별하는 방법에 대한 확실한 이해를 갖게 될 것입니다.",
      "meta": {
        "title": "JavaScript 에서 부울 값 마스터하기",
        "description": "부울 값의 세계로 들어가 JavaScript 코드에서 부울 값을 식별하는 방법을 배우세요.",
        "keywords": "javascript, javascript 연습, 부울, javascript 온라인 연습, javascript 랩, 값, 타입, javascript 튜터, 프로그래밍"
      },
      "details": {
        "steps": [
          {
            "title": "값이 부울인지 확인하기",
            "text": "ko/step1.md",
            "verify": [
              {
                "name": "Zsh 히스토리에서 Node 명령어 확인",
                "file": "verify1-1.sh",
                "hint": "'node'를 입력하고 Enter 키를 눌러 터미널/SSH 에서 JavaScript 를 실행할 수 있습니다."
              }
            ]
          }
        ],
        "intro": {
          "text": "ko/intro.md",
          "title": "소개"
        },
        "finish": {
          "text": "ko/finish.md",
          "title": "요약"
        }
      }
    },
    {
      "lang": "pt",
      "title": "Valor é Booleano",
      "description": "Neste laboratório, mergulharemos no conceito de valores booleanos em JavaScript. Exploraremos como verificar se um determinado valor é um primitivo booleano ou não, usando o operador `typeof`. Ao final deste laboratório, você terá uma sólida compreensão de como identificar valores booleanos em JavaScript.",
      "meta": {
        "title": "Dominando Valores Booleanos em JavaScript",
        "description": "Mergulhe no mundo dos valores booleanos e aprenda a identificá-los em seu código JavaScript. Pratique e aprimore suas habilidades de programação!",
        "keywords": "javascript, prática javascript, booleano, exercícios javascript, laboratório javascript, valor, tipo, tutorial javascript, programação"
      },
      "details": {
        "steps": [
          {
            "title": "Valor é Booleano",
            "text": "pt/step1.md",
            "verify": [
              {
                "name": "Verificar Comandos Node no Histórico Zsh",
                "file": "verify1-1.sh",
                "hint": "JavaScript pode ser executado no Terminal/SSH digitando 'node' e pressionando Enter."
              }
            ]
          }
        ],
        "intro": {
          "text": "pt/intro.md",
          "title": "Introdução"
        },
        "finish": {
          "text": "pt/finish.md",
          "title": "Resumo"
        }
      }
    }
  ]
}
