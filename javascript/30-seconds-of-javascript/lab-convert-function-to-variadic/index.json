{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Convert Function to Variadic",
  "description": "In this lab, we will explore how to convert a function that accepts an array into a variadic function using JavaScript. We will achieve this by creating a closure that collects all inputs into an array-accepting function. By the end of the lab, you will have a better understanding of how to manipulate functions in JavaScript to make them more versatile and adaptable to different use cases.",
  "meta": {
    "title": "Convert Function to Variadic Function | JavaScript Tutorials",
    "description": "Learn how to convert a function that accepts an array into a variadic function using JavaScript. Explore function manipulation techniques to make your code more versatile.",
    "keywords": "JavaScript, Variadic Function, Function Manipulation, Array, Closure"
  },
  "difficulty": "Beginner",
  "time": 10,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Convert Function to Variadic",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify Node Commands In Zsh History",
            "file": "verify1-1.sh",
            "hint": "JavaScript can be run in the Terminal/SSH by typing 'node' and pressing Enter.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "javascript/arith_ops",
          "javascript/async_prog",
          "javascript/comp_ops",
          "javascript/data_types",
          "javascript/debugging",
          "javascript/spread_rest",
          "javascript/variables"
        ]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["Lotus-7"],
  "license": {
    "name": "CC-BY-4.0",
    "url": "https://github.com/30-seconds/30-seconds-of-code/blob/master/LICENSE",
    "repo": "https://github.com/30-seconds/30-seconds-of-code"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "将函数转换为可变参数函数",
      "description": "在本实验中，我们将探索如何使用JavaScript将一个接受数组的函数转换为可变参数函数。我们将通过创建一个闭包来实现这一点，该闭包将所有输入收集到一个接受数组的函数中。在实验结束时，你将更好地理解如何在JavaScript中操作函数，使其更通用并适应不同的用例。",
      "meta": {
        "title": "将函数转换为可变参数函数 | JavaScript教程",
        "description": "学习如何使用JavaScript将一个接受数组的函数转换为可变参数函数。探索函数操作技巧，使你的代码更通用。",
        "keywords": "JavaScript, 可变参数函数, 函数操作, 数组, 闭包"
      },
      "details": {
        "steps": [
          {
            "title": "将函数转换为可变参数函数",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "在Zsh历史记录中验证Node命令",
                "file": "verify1-1.sh",
                "hint": "通过输入'node'并按Enter键，可以在终端/SSH中运行JavaScript。"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    }
  ]
}
