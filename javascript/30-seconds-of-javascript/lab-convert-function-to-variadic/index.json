{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Convert Function to Variadic",
  "description": "In this lab, we will explore how to convert a function that accepts an array into a variadic function using JavaScript. We will achieve this by creating a closure that collects all inputs into an array-accepting function. By the end of the lab, you will have a better understanding of how to manipulate functions in JavaScript to make them more versatile and adaptable to different use cases.",
  "meta": {
    "title": "Convert Function to Variadic Function | JavaScript Tutorials",
    "description": "Learn how to convert a function that accepts an array into a variadic function using JavaScript. Explore function manipulation techniques to make your code more versatile.",
    "keywords": "JavaScript, Variadic Function, Function Manipulation, Array, Closure"
  },
  "difficulty": "Beginner",
  "time": 5,
  "hidden": true,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Convert Function to Variadic",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify Node Commands In Zsh History",
            "file": "verify1-1.sh",
            "hint": "JavaScript can be run in the Terminal/SSH by typing 'node' and pressing Enter.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "javascript/arith_ops",
          "javascript/async_prog",
          "javascript/comp_ops",
          "javascript/data_types",
          "javascript/debugging",
          "javascript/spread_rest",
          "javascript/variables"
        ]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["Lotus-7"],
  "license": {
    "name": "CC-BY-4.0",
    "url": "https://github.com/30-seconds/30-seconds-of-code/blob/master/LICENSE",
    "repo": "https://github.com/30-seconds/30-seconds-of-code"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "将函数转换为可变参数函数",
      "description": "在本实验中，我们将探索如何使用 JavaScript 将一个接受数组的函数转换为可变参数函数。我们将通过创建一个闭包来实现这一点，该闭包将所有输入收集到一个接受数组的函数中。在实验结束时，你将更好地理解如何在 JavaScript 中操作函数，使其更通用并适应不同的用例。",
      "meta": {
        "title": "将函数转换为可变参数函数 | JavaScript 教程",
        "description": "学习如何使用 JavaScript 将一个接受数组的函数转换为可变参数函数。探索函数操作技巧，使你的代码更通用。",
        "keywords": "JavaScript, 可变参数函数，函数操作，数组，闭包"
      },
      "details": {
        "steps": [
          {
            "title": "将函数转换为可变参数函数",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "在 Zsh 历史记录中验证 Node 命令",
                "file": "verify1-1.sh",
                "hint": "通过输入'node'并按 Enter 键，可以在终端/SSH 中运行 JavaScript。"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Convertir una función en variádica",
      "description": "En este laboratorio, exploraremos cómo convertir una función que acepta un arreglo en una función variádica utilizando JavaScript. Lo haremos creando una clausura que recopile todas las entradas en una función que acepta arreglos. Al final del laboratorio, tendrás una mejor comprensión de cómo manipular funciones en JavaScript para que sean más versátiles y adaptables a diferentes casos de uso.",
      "meta": {
        "title": "Convertir una función en función variádica | Tutoriales de JavaScript",
        "description": "Aprende cómo convertir una función que acepta un arreglo en una función variádica utilizando JavaScript. Explora técnicas de manipulación de funciones para hacer que tu código sea más versátil.",
        "keywords": "JavaScript, Función variádica, Manipulación de funciones, Arreglo, Clausura"
      },
      "details": {
        "steps": [
          {
            "title": "Convertir una función en variádica",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Verificar comandos de Node en el historial de Zsh",
                "file": "verify1-1.sh",
                "hint": "Se puede ejecutar JavaScript en la Terminal/SSH escribiendo 'node' y presionando Enter."
              }
            ]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Convertir une fonction en fonction variadique",
      "description": "Dans ce laboratoire, nous allons explorer la manière de convertir une fonction qui accepte un tableau en une fonction variadique à l'aide de JavaScript. Nous allons y arriver en créant une fermeture qui collecte toutes les entrées dans une fonction acceptant un tableau. À la fin du laboratoire, vous aurez une meilleure compréhension de la manière de manipuler les fonctions en JavaScript pour les rendre plus polyvalentes et adaptées à différents cas d'utilisation.",
      "meta": {
        "title": "Convertir une fonction en fonction variadique | Tutoriels JavaScript",
        "description": "Découvrez comment convertir une fonction qui accepte un tableau en une fonction variadique à l'aide de JavaScript. Explorez les techniques de manipulation de fonctions pour rendre votre code plus polyvalent.",
        "keywords": "JavaScript, Fonction variadique, Manipulation de fonctions, Tableau, Fermeture"
      },
      "details": {
        "steps": [
          {
            "title": "Convertir une fonction en fonction variadique",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Vérifier les commandes Node dans l'historique Zsh",
                "file": "verify1-1.sh",
                "hint": "JavaScript peut être exécuté dans le Terminal/SSH en tapant 'node' et en appuyant sur Entrée."
              }
            ]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Funktion in variadische Funktion umwandeln",
      "description": "In diesem Lab werden wir untersuchen, wie man eine Funktion, die ein Array akzeptiert, in eine variadische Funktion mit JavaScript umwandeln kann. Wir werden dies erreichen, indem wir eine Closure erstellen, die alle Eingaben in eine array-akzeptierende Funktion sammelt. Am Ende des Labs werden Sie ein besseres Verständnis dafür haben, wie man in JavaScript Funktionen manipulieren kann, um sie flexibler und an verschiedene Anwendungsfälle anzupassen.",
      "meta": {
        "title": "Funktion in variadische Funktion umwandeln | JavaScript Tutorials",
        "description": "Lernen Sie, wie man eine Funktion, die ein Array akzeptiert, in eine variadische Funktion mit JavaScript umwandeln kann. Entdecken Sie Techniken zur Funktionsmanipulation, um Ihren Code flexibler zu gestalten.",
        "keywords": "JavaScript, Variadische Funktion, Funktionsmanipulation, Array, Closure"
      },
      "details": {
        "steps": [
          {
            "title": "Funktion in variadische Funktion umwandeln",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Überprüfen von Node-Befehlen in der Zsh-Geschichte",
                "file": "verify1-1.sh",
                "hint": "Mit JavaScript kann im Terminal/SSH 'node' eingegeben und Enter gedrückt werden, um es auszuführen."
              }
            ]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "関数を可変長関数に変換する",
      "description": "この実験では、JavaScript を使って配列を受け取る関数を可変長関数に変換する方法を探ります。これは、配列を受け取る関数にすべての入力を収集するクロージャを作成することで達成されます。実験が終了するまでに、JavaScript の関数をどのように操作するかを理解し、それらをより多用途で様々な使用ケースに適応可能にする方法を学ぶことができます。",
      "meta": {
        "title": "関数を可変長関数に変換する | JavaScript チュートリアル",
        "description": "JavaScript を使って配列を受け取る関数を可変長関数に変換する方法を学びましょう。コードをより多用途にするための関数操作技術を探求しましょう。",
        "keywords": "JavaScript, 可変長関数，関数操作，配列，クロージャ"
      },
      "details": {
        "steps": [
          {
            "title": "関数を可変長関数に変換する",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "Zsh 履歴における Node コマンドを確認する",
                "file": "verify1-1.sh",
                "hint": "ターミナル/SSH で'node'と入力して Enter キーを押すことで JavaScript を実行できます。"
              }
            ]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Преобразование функции в вариативную",
      "description": "В этом практическом занятии мы изучим, как превратить функцию, которая принимает массив, в вариативную функцию с использованием JavaScript. Мы добьемся этого, создав замыкание, которое собирает все входные данные в функцию, которая принимает массив. В конце практического занятия вы будете лучше понимать, как манипулировать функциями в JavaScript, чтобы сделать их более гибкими и адаптируемыми к различным сценариям использования.",
      "meta": {
        "title": "Преобразование функции в вариативную функцию | Руководства по JavaScript",
        "description": "Изучите, как превратить функцию, которая принимает массив, в вариативную функцию с использованием JavaScript. Исследуйте методы манипуляции функциями, чтобы сделать ваш код более гибким.",
        "keywords": "JavaScript, вариативная функция, манипуляция функциями, массив, замыкание"
      },
      "details": {
        "steps": [
          {
            "title": "Преобразование функции в вариативную",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "Проверить команды Node в истории Zsh",
                "file": "verify1-1.sh",
                "hint": "JavaScript можно запустить в Терминале/SSH, введя 'node' и нажав Enter."
              }
            ]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    },
    {
      "lang": "ko",
      "title": "가변 인자 함수로 변환하기",
      "description": "이 랩에서는 JavaScript 를 사용하여 배열을 인수로 받는 함수를 가변 인자 함수로 변환하는 방법을 살펴봅니다. 모든 입력을 배열을 인수로 받는 함수로 수집하는 클로저를 생성하여 이를 수행합니다. 랩이 끝나면 JavaScript 에서 함수를 조작하여 다양한 사용 사례에 더 다양하고 적응할 수 있도록 하는 방법에 대한 이해도가 높아질 것입니다.",
      "meta": {
        "title": "가변 인자 함수로 변환하기 | JavaScript 튜토리얼",
        "description": "JavaScript 를 사용하여 배열을 인수로 받는 함수를 가변 인자 함수로 변환하는 방법을 알아보세요. 코드를 더 다양하게 만들기 위한 함수 조작 기술을 살펴보세요.",
        "keywords": "JavaScript, 가변 인자 함수 (Variadic Function), 함수 조작, 배열, 클로저 (Closure)"
      },
      "details": {
        "steps": [
          {
            "title": "가변 인자 함수로 변환하기",
            "text": "ko/step1.md",
            "verify": [
              {
                "name": "Zsh 히스토리에서 Node 명령어 확인",
                "file": "verify1-1.sh",
                "hint": "'node'를 입력하고 Enter 키를 눌러 터미널/SSH 에서 JavaScript 를 실행할 수 있습니다."
              }
            ]
          }
        ],
        "intro": {
          "text": "ko/intro.md",
          "title": "소개"
        },
        "finish": {
          "text": "ko/finish.md",
          "title": "요약"
        }
      }
    },
    {
      "lang": "pt",
      "title": "Converter Função para Variádica",
      "description": "Neste laboratório, exploraremos como converter uma função que aceita um array em uma função variádica usando JavaScript. Faremos isso criando um closure (fechamento) que coleta todas as entradas em uma função que aceita um array. Ao final do laboratório, você terá uma melhor compreensão de como manipular funções em JavaScript para torná-las mais versáteis e adaptáveis a diferentes casos de uso.",
      "meta": {
        "title": "Converter Função Variádica em JavaScript | Tutoriais",
        "description": "Aprenda como converter uma função que aceita um array em uma função variádica usando JavaScript. Explore técnicas de manipulação de funções para tornar seu código mais versátil.",
        "keywords": "JavaScript, Função Variádica, Manipulação de Funções, Array, Closure (Fechamento)"
      },
      "details": {
        "steps": [
          {
            "title": "Converter Função para Variádica",
            "text": "pt/step1.md",
            "verify": [
              {
                "name": "Verificar Comandos Node no Histórico Zsh",
                "file": "verify1-1.sh",
                "hint": "JavaScript pode ser executado no Terminal/SSH digitando 'node' e pressionando Enter."
              }
            ]
          }
        ],
        "intro": {
          "text": "pt/intro.md",
          "title": "Introdução"
        },
        "finish": {
          "text": "pt/finish.md",
          "title": "Resumo"
        }
      }
    }
  ]
}
