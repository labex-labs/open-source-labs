{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Argument Coalescing Factory",
  "description": "In this lab, we will explore how to customize a coalesce function that returns the first argument which is true based on the given validator. We will learn to use Array.prototype.find() to return the first argument that returns true from the provided argument validation function, valid. By the end of this lab, you will be able to create a custom coalesce function that can be used to return the first valid argument from a list of arguments.",
  "meta": {
    "title": "Customizing Coalesce Function with Argument Validation",
    "description": "Learn how to create a custom coalesce function that returns the first valid argument from a list of arguments using Array.prototype.find().",
    "keywords": "javascript, javascript practice, javascript tutor, argument validation, javascript practice online, programming tutorial, javascript lab, array prototype find, coalesce function"
  },
  "difficulty": "Beginner",
  "time": 10,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Argument Coalescing Factory",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify Node Command Usage",
            "file": "verify1-1.sh",
            "hint": "JavaScript can be run in the Terminal/SSH by typing 'node' and pressing Enter.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "javascript/arith_ops",
          "javascript/comp_ops",
          "javascript/data_types",
          "javascript/spread_rest",
          "javascript/variables"
        ]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["Lotus-7"],
  "license": {
    "name": "CC-BY-4.0",
    "url": "https://github.com/30-seconds/30-seconds-of-code/blob/master/LICENSE",
    "repo": "https://github.com/30-seconds/30-seconds-of-code"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "参数合并工厂",
      "description": "在本实验中，我们将探索如何自定义一个合并函数，该函数根据给定的验证器返回第一个为 true 的参数。我们将学习使用 Array.prototype.find() 从提供的参数验证函数 valid 中返回第一个返回 true 的参数。在本实验结束时，你将能够创建一个自定义合并函数，该函数可用于从参数列表中返回第一个有效参数。",
      "meta": {
        "title": "通过参数验证自定义合并函数",
        "description": "学习如何使用 Array.prototype.find() 创建一个自定义合并函数，该函数从参数列表中返回第一个有效参数。",
        "keywords": "javascript, javascript 实践, javascript 教程, 参数验证, 在线 javascript 实践, 编程教程, javascript 实验, 数组原型查找, 合并函数"
      },
      "details": {
        "steps": [
          {
            "title": "参数合并工厂",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "验证 Node 命令的使用",
                "file": "verify1-1.sh",
                "hint": "通过在终端/SSH 中输入 'node' 并按回车键，可以运行 JavaScript。"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    }
  ]
}
