{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Argument Coalescing Factory",
  "description": "In this lab, we will explore how to customize a coalesce function that returns the first argument which is true based on the given validator. We will learn to use Array.prototype.find() to return the first argument that returns true from the provided argument validation function, valid. By the end of this lab, you will be able to create a custom coalesce function that can be used to return the first valid argument from a list of arguments.",
  "meta": {
    "title": "Customizing Coalesce Function with Argument Validation",
    "description": "Learn how to create a custom coalesce function that returns the first valid argument from a list of arguments using Array.prototype.find().",
    "keywords": "javascript, javascript practice, javascript tutor, argument validation, javascript practice online, programming tutorial, javascript lab, array prototype find, coalesce function"
  },
  "difficulty": "Beginner",
  "time": 10,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Argument Coalescing Factory",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify Node Command Usage",
            "file": "verify1-1.sh",
            "hint": "JavaScript can be run in the Terminal/SSH by typing 'node' and pressing Enter.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "javascript/arith_ops",
          "javascript/comp_ops",
          "javascript/data_types",
          "javascript/spread_rest",
          "javascript/variables"
        ]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["Lotus-7"],
  "license": {
    "name": "CC-BY-4.0",
    "url": "https://github.com/30-seconds/30-seconds-of-code/blob/master/LICENSE",
    "repo": "https://github.com/30-seconds/30-seconds-of-code"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "参数合并工厂",
      "description": "在本实验中，我们将探索如何自定义一个合并函数，该函数根据给定的验证器返回第一个为 true 的参数。我们将学习使用 Array.prototype.find() 从提供的参数验证函数 valid 中返回第一个返回 true 的参数。在本实验结束时，你将能够创建一个自定义合并函数，该函数可用于从参数列表中返回第一个有效参数。",
      "meta": {
        "title": "通过参数验证自定义合并函数",
        "description": "学习如何使用 Array.prototype.find() 创建一个自定义合并函数，该函数从参数列表中返回第一个有效参数。",
        "keywords": "javascript, javascript 实践，javascript 教程，参数验证，在线 javascript 实践，编程教程，javascript 实验，数组原型查找，合并函数"
      },
      "details": {
        "steps": [
          {
            "title": "参数合并工厂",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "验证 Node 命令的使用",
                "file": "verify1-1.sh",
                "hint": "通过在终端/SSH 中输入 'node' 并按回车键，可以运行 JavaScript。"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Fábrica de coalescencia de argumentos",
      "description": "En este laboratorio, exploraremos cómo personalizar una función de coalescencia que devuelva el primer argumento que es verdadero según el validador dado. Aprenderemos a usar Array.prototype.find() para devolver el primer argumento que devuelva verdadero de la función de validación de argumentos proporcionada, valid. Al final de este laboratorio, serás capaz de crear una función de coalescencia personalizada que se puede usar para devolver el primer argumento válido de una lista de argumentos.",
      "meta": {
        "title": "Personalizar la función de coalescencia con validación de argumentos",
        "description": "Aprende cómo crear una función de coalescencia personalizada que devuelva el primer argumento válido de una lista de argumentos usando Array.prototype.find().",
        "keywords": "javascript, práctica de javascript, tutor de javascript, validación de argumentos, práctica de javascript en línea, tutorial de programación, laboratorio de javascript, búsqueda de prototipo de matriz, función de coalescencia"
      },
      "details": {
        "steps": [
          {
            "title": "Fábrica de coalescencia de argumentos",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Verificar el uso del comando Node",
                "file": "verify1-1.sh",
                "hint": "Se puede ejecutar JavaScript en la Terminal/SSH escribiendo 'node' y presionando Enter."
              }
            ]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Fabrique de coalescence d'arguments",
      "description": "Dans ce laboratoire, nous allons explorer la manière de personnaliser une fonction de coalescence qui renvoie le premier argument qui est vrai sur la base du validateur donné. Nous allons apprendre à utiliser Array.prototype.find() pour renvoyer le premier argument qui renvoie vrai à partir de la fonction de validation d'arguments fournie, valid. À la fin de ce laboratoire, vous serez capable de créer une fonction de coalescence personnalisée qui peut être utilisée pour renvoyer le premier argument valide d'une liste d'arguments.",
      "meta": {
        "title": "Personnalisation de la fonction de coalescence avec la validation d'arguments",
        "description": "Découvrez comment créer une fonction de coalescence personnalisée qui renvoie le premier argument valide d'une liste d'arguments en utilisant Array.prototype.find().",
        "keywords": "javascript, pratique javascript, tuteur javascript, validation d'arguments, pratique javascript en ligne, tutoriel de programmation, laboratoire javascript, recherche de prototype d'array, fonction de coalescence"
      },
      "details": {
        "steps": [
          {
            "title": "Fabrique de coalescence d'arguments",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Vérifier l'utilisation de la commande Node",
                "file": "verify1-1.sh",
                "hint": "JavaScript peut être exécuté dans le Terminal/SSH en tapant 'node' et en appuyant sur Entrée."
              }
            ]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Argument Coalescing Factory",
      "description": "In diesem Lab werden wir untersuchen, wie wir eine coalesce-Funktion anpassen können, die das erste Argument zurückgibt, das auf Grundlage des angegebenen Validators als wahr erkannt wird. Wir werden lernen, Array.prototype.find() zu verwenden, um das erste Argument zurückzugeben, das von der bereitgestellten Argument-Validierungsfunktion als wahr erkannt wird. Am Ende dieses Labs werden Sie in der Lage sein, eine benutzerdefinierte coalesce-Funktion zu erstellen, die verwendet werden kann, um das erste gültige Argument aus einer Liste von Argumenten zurückzugeben.",
      "meta": {
        "title": "Anpassen der Coalesce-Funktion mit Argumentvalidierung",
        "description": "Lernen Sie, wie Sie eine benutzerdefinierte coalesce-Funktion erstellen, die das erste gültige Argument aus einer Liste von Argumenten zurückgibt, indem Sie Array.prototype.find() verwenden.",
        "keywords": "javascript, javascript Übung, javascript Tutorium, Argumentvalidierung, Online-Javascript-Übung, Programmierungstutorial, Javascript-Lab, Arrayprototype-Find, Coalesce-Funktion"
      },
      "details": {
        "steps": [
          {
            "title": "Argument Coalescing Factory",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Verifiziere die Verwendung des Node-Befehls",
                "file": "verify1-1.sh",
                "hint": "JavaScript kann im Terminal/SSH ausgeführt werden, indem Sie 'node' eingeben und die Enter-Taste drücken."
              }
            ]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "引数のコアレス（coalesce）ファクトリ",
      "description": "この実験では、与えられた検証関数に基づいて最初の `true` となる引数を返すコアレス（coalesce）関数をカスタマイズする方法を探ります。提供された引数検証関数 `valid` から最初の `true` を返す引数を返すために、`Array.prototype.find()` を使用する方法を学びます。この実験が終了すると、引数のリストから最初の有効な引数を返すために使用できるカスタムコアレス関数を作成できるようになります。",
      "meta": {
        "title": "引数検証を使ったコアレス（coalesce）関数のカスタマイズ",
        "description": "`Array.prototype.find()` を使って、引数のリストから最初の有効な引数を返すカスタムコアレス関数を作成する方法を学びましょう。",
        "keywords": "javascript, javascript 練習，javascript 講師，引数検証，オンライン javascript 練習，プログラミングチュートリアル，javascript 実験，配列プロトタイプ find, コアレス（coalesce）関数"
      },
      "details": {
        "steps": [
          {
            "title": "引数のコアレス（coalesce）ファクトリ",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "Node コマンドの使用を確認する",
                "file": "verify1-1.sh",
                "hint": "ターミナル/SSH で 'node' と入力して Enter キーを押すことで、JavaScript を実行できます。"
              }
            ]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Фабрика слияния аргументов",
      "description": "В этом практическом занятии мы изучим, как настроить функцию слияния, которая возвращает первый аргумент, который истинен на основе заданного валидатора. Мы научимся использовать Array.prototype.find(), чтобы вернуть первый аргумент, который возвращает истину из предоставленной функции проверки аргументов valid. В конце этого практического занятия вы сможете создать настраиваемую функцию слияния, которая может быть использована для возврата первого допустимого аргумента из списка аргументов.",
      "meta": {
        "title": "Настройка функции слияния с использованием проверки аргументов",
        "description": "Изучите, как создать настраиваемую функцию слияния, которая возвращает первый допустимый аргумент из списка аргументов с использованием Array.prototype.find().",
        "keywords": "javascript, практика javascript, преподаватель javascript, проверка аргументов, онлайн практика javascript, учебник по программированию, практическое занятие javascript, поиск по прототипу массива, функция слияния"
      },
      "details": {
        "steps": [
          {
            "title": "Фабрика слияния аргументов",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "Проверить использование команды Node",
                "file": "verify1-1.sh",
                "hint": "JavaScript можно запустить в Терминале/SSH, введя 'node' и нажав Enter."
              }
            ]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    }
  ]
}
