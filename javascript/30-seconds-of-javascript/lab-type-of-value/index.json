{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Type of Value",
  "description": "In this lab, we will explore the concept of data types in JavaScript. We will learn how to use the getType function to determine the native type of any given value, whether it is undefined, null, or an instance of a constructor. By the end of the lab, you will have a solid understanding of how to work with different data types in JavaScript.",
  "meta": {
    "title": "Explore JavaScript Data Types with getType Function",
    "description": "Learn how to determine the native type of any given value in JavaScript using the getType function.",
    "keywords": "javascript, null, undefined, javascript practice, gettype function, javascript practice online, javascript lab, data types, javascript tutor"
  },
  "difficulty": "Beginner",
  "time": 10,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Type of Value",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify Node Commands in ZSH History",
            "file": "verify1-1.sh",
            "hint": "JavaScript can be run in the Terminal/SSH by typing 'node' and pressing Enter.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "javascript/arith_ops",
          "javascript/comp_ops",
          "javascript/cond_stmts",
          "javascript/data_types",
          "javascript/variables"
        ]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["Lotus-7"],
  "license": {
    "name": "CC-BY-4.0",
    "url": "https://github.com/30-seconds/30-seconds-of-code/blob/master/LICENSE",
    "repo": "https://github.com/30-seconds/30-seconds-of-code"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "值的类型",
      "description": "在本实验中，我们将探索JavaScript中的数据类型概念。我们将学习如何使用getType函数来确定任何给定值的原生类型，无论它是undefined、null还是某个构造函数的实例。在本实验结束时，你将对如何在JavaScript中处理不同的数据类型有扎实的理解。",
      "meta": {
        "title": "使用getType函数探索JavaScript数据类型",
        "description": "学习如何使用getType函数确定JavaScript中任何给定值的原生类型。",
        "keywords": "javascript, null, undefined, javascript实践, gettype函数, 在线javascript实践, javascript实验, 数据类型, javascript教程"
      },
      "details": {
        "steps": [
          {
            "title": "值的类型",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "在ZSH历史记录中验证Node命令",
                "file": "verify1-1.sh",
                "hint": "通过输入'node'并按Enter键，可以在终端/SSH中运行JavaScript。"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Tipo de Valor",
      "description": "En este laboratorio, exploraremos el concepto de tipos de datos en JavaScript. Aprenderemos cómo usar la función getType para determinar el tipo nativo de cualquier valor dado, ya sea undefined, null o una instancia de un constructor. Al final del laboratorio, tendrás una comprensión sólida de cómo trabajar con diferentes tipos de datos en JavaScript.",
      "meta": {
        "title": "Explora los Tipos de Datos de JavaScript con la Función getType",
        "description": "Aprende cómo determinar el tipo nativo de cualquier valor dado en JavaScript usando la función getType.",
        "keywords": "javascript, null, undefined, práctica de javascript, función gettype, práctica de javascript en línea, laboratorio de javascript, tipos de datos, tutor de javascript"
      },
      "details": {
        "steps": [
          {
            "title": "Tipo de Valor",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Verifica los Comandos de Node en el Historial de ZSH",
                "file": "verify1-1.sh",
                "hint": "JavaScript se puede ejecutar en la Terminal/SSH escribiendo 'node' y presionando Enter."
              }
            ]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Type de valeur",
      "description": "Dans ce laboratoire, nous allons explorer le concept de types de données en JavaScript. Nous apprendrons à utiliser la fonction getType pour déterminer le type natif de n'importe quelle valeur donnée, qu'il s'agisse de undefined, null ou d'une instance d'un constructeur. À la fin du laboratoire, vous aurez une compréhension solide de la manière de travailler avec différents types de données en JavaScript.",
      "meta": {
        "title": "Explorez les types de données JavaScript avec la fonction getType",
        "description": "Apprenez à déterminer le type natif de n'importe quelle valeur donnée en JavaScript en utilisant la fonction getType.",
        "keywords": "javascript, null, undefined, pratique javascript, fonction gettype, pratique javascript en ligne, laboratoire javascript, types de données, tuteur javascript"
      },
      "details": {
        "steps": [
          {
            "title": "Type de valeur",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Vérifiez les commandes Node dans l'historique ZSH",
                "file": "verify1-1.sh",
                "hint": "JavaScript peut être exécuté dans le Terminal/SSH en tapant 'node' et en appuyant sur Entrée."
              }
            ]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Typ von Wert",
      "description": "In diesem Lab werden wir das Konzept der Datentypen in JavaScript erkunden. Wir werden lernen, wie die getType-Funktion verwendet wird, um den nativen Typ eines beliebigen gegebenen Werts zu bestimmen, ob es undefined, null oder eine Instanz eines Konstruktors ist. Am Ende des Labs werden Sie eine solide Vorstellung davon haben, wie Sie mit verschiedenen Datentypen in JavaScript umgehen.",
      "meta": {
        "title": "Erkunden Sie die JavaScript-Datentypen mit der getType-Funktion",
        "description": "Lernen Sie, wie Sie den nativen Typ eines beliebigen gegebenen Werts in JavaScript mit der getType-Funktion bestimmen.",
        "keywords": "javascript, null, undefined, javascript Übung, gettype-Funktion, Online-JavaScript-Übung, JavaScript-Lab, Datentypen, JavaScript-Tutor"
      },
      "details": {
        "steps": [
          {
            "title": "Typ von Wert",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Überprüfen von Node-Befehlen in der ZSH-Geschichte",
                "file": "verify1-1.sh",
                "hint": "JavaScript kann im Terminal/SSH ausgeführt werden, indem man 'node' eingibt und die Eingabetaste drückt."
              }
            ]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "値の型",
      "description": "この実験では、JavaScriptにおけるデータ型の概念を探ります。`getType`関数を使って、任意の値が`undefined`、`null`であるか、コンストラクタのインスタンスであるかを判断する方法を学びます。実験が終了するとき、JavaScriptでさまざまなデータ型を扱う方法を十分に理解していることになります。",
      "meta": {
        "title": "getType関数を使ってJavaScriptのデータ型を探る",
        "description": "JavaScriptで`getType`関数を使って任意の値のネイティブ型を判断する方法を学びましょう。",
        "keywords": "javascript, null, undefined, javascript練習, gettype関数, オンラインjavascript練習, javascript実験, データ型, javascript講師"
      },
      "details": {
        "steps": [
          {
            "title": "値の型",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "ZSH履歴におけるNodeコマンドを確認する",
                "file": "verify1-1.sh",
                "hint": "ターミナル/SSHで'node'と入力してEnterキーを押すことでJavaScriptを実行できます。"
              }
            ]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Тип значения",
      "description": "В этом лабе мы будем изучать концепцию типов данных в JavaScript. Мы узнаем, как использовать функцию getType для определения внутреннего типа любого заданного значения, будь оно undefined, null или экземпляр конструктора. В конце лабы вы будете четко понимать, как работать с разными типами данных в JavaScript.",
      "meta": {
        "title": "Изучите типы данных JavaScript с помощью функции getType",
        "description": "Изучите, как определить внутренний тип любого заданного значения в JavaScript с использованием функции getType.",
        "keywords": "javascript, null, undefined, практика javascript, функция gettype, онлайн практика javascript, лаб javascript, типы данных, преподаватель javascript"
      },
      "details": {
        "steps": [
          {
            "title": "Тип значения",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "Проверить команды Node в истории ZSH",
                "file": "verify1-1.sh",
                "hint": "JavaScript можно запускать в Терминале/SSH, введя 'node' и нажав Enter."
              }
            ]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    }
  ]
}
