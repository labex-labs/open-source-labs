{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Rearrange Function Arguments",
  "description": "In this lab, we will explore the rearg function in JavaScript, which allows us to rearrange the order of arguments passed to a function based on specified indexes. We will learn how to use the Array.prototype.map() method and spread operator to transform the arguments and invoke the original function with the rearranged arguments. By the end of this lab, you will have a good understanding of how to use the rearg function to manipulate function arguments in JavaScript.",
  "meta": {
    "title": "Rearrange Function Arguments in JavaScript",
    "description": "Explore the rearg function to rearrange the order of arguments passed to a function in JavaScript.",
    "keywords": "javascript, javascript practice, array prototype map, javascript practice online, javascript lab, rearg, function arguments, javascript tutor, rearrange"
  },
  "difficulty": "Beginner",
  "time": 10,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Rearrange Function Arguments",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify Node Usage In ZSH History",
            "file": "verify1-1.sh",
            "hint": "JavaScript can be run in the Terminal/SSH by typing 'node' and pressing Enter.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "javascript/arith_ops",
          "javascript/array_methods",
          "javascript/closures",
          "javascript/comp_ops",
          "javascript/data_types",
          "javascript/functions",
          "javascript/higher_funcs",
          "javascript/spread_rest",
          "javascript/variables"
        ]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["Lotus-7"],
  "license": {
    "name": "CC-BY-4.0",
    "url": "https://github.com/30-seconds/30-seconds-of-code/blob/master/LICENSE",
    "repo": "https://github.com/30-seconds/30-seconds-of-code"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "重新排列函数参数",
      "description": "在本实验中，我们将探索 JavaScript 中的 rearg 函数，它使我们能够根据指定索引重新排列传递给函数的参数顺序。我们将学习如何使用 Array.prototype.map() 方法和展开运算符来转换参数，并使用重新排列后的参数调用原始函数。在本实验结束时，你将很好地理解如何使用 rearg 函数来操作 JavaScript 中的函数参数。",
      "meta": {
        "title": "在 JavaScript 中重新排列函数参数",
        "description": "探索 rearg 函数以重新排列传递给 JavaScript 函数的参数顺序。",
        "keywords": "javascript, javascript 实践，数组原型映射，在线 javascript 实践，javascript 实验，rearg, 函数参数，javascript 教程，重新排列"
      },
      "details": {
        "steps": [
          {
            "title": "重新排列函数参数",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "验证 ZSH 历史记录中的 Node 使用情况",
                "file": "verify1-1.sh",
                "hint": "通过输入 'node' 并按 Enter 键，可以在终端/SSH 中运行 JavaScript。"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Reordenar Argumentos de Función",
      "description": "En este laboratorio, exploraremos la función rearg en JavaScript, que nos permite reordenar el orden de los argumentos pasados a una función basados en índices especificados. Aprenderemos cómo utilizar el método Array.prototype.map() y el operador de propagación para transformar los argumentos e invocar la función original con los argumentos reordenados. Al final de este laboratorio, tendrás una buena comprensión de cómo utilizar la función rearg para manipular los argumentos de una función en JavaScript.",
      "meta": {
        "title": "Reordenar Argumentos de Función en JavaScript",
        "description": "Explora la función rearg para reordenar el orden de los argumentos pasados a una función en JavaScript.",
        "keywords": "javascript, práctica de javascript, mapa de prototipo de matriz, práctica de javascript en línea, laboratorio de javascript, rearg, argumentos de función, tutor de javascript, reordenar"
      },
      "details": {
        "steps": [
          {
            "title": "Reordenar Argumentos de Función",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Verificar el uso de Node en el historial de ZSH",
                "file": "verify1-1.sh",
                "hint": "JavaScript se puede ejecutar en la Terminal/SSH escribiendo 'node' y presionando Enter."
              }
            ]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Réordonner les arguments de fonction",
      "description": "Dans ce laboratoire, nous allons explorer la fonction rearg en JavaScript, qui nous permet de réordonner l'ordre des arguments passés à une fonction en fonction d'index spécifiés. Nous allons apprendre à utiliser la méthode Array.prototype.map() et l'opérateur de propagation pour transformer les arguments et invoquer la fonction d'origine avec les arguments réarrangés. À la fin de ce laboratoire, vous aurez une bonne compréhension de la manière d'utiliser la fonction rearg pour manipuler les arguments de fonction en JavaScript.",
      "meta": {
        "title": "Réordonner les arguments de fonction en JavaScript",
        "description": "Explorez la fonction rearg pour réordonner l'ordre des arguments passés à une fonction en JavaScript.",
        "keywords": "javascript, pratique javascript, itération de tableau, pratique javascript en ligne, laboratoire javascript, rearg, arguments de fonction, tuteur javascript, réordonner"
      },
      "details": {
        "steps": [
          {
            "title": "Réordonner les arguments de fonction",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Vérifier l'utilisation de Node dans l'historique ZSH",
                "file": "verify1-1.sh",
                "hint": "JavaScript peut être exécuté dans le Terminal/SSH en tapant 'node' et en appuyant sur Entrée."
              }
            ]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Funktionsargumente neu anordnen",
      "description": "In diesem Lab werden wir die rearg-Funktion in JavaScript erkunden, mit der wir die Reihenfolge der an eine Funktion übergebenen Argumente basierend auf angegebenen Indizes umordnen können. Wir werden lernen, wie wir die Array.prototype.map()-Methode und den Spread-Operator verwenden, um die Argumente zu transformieren und die ursprüngliche Funktion mit den umgeordneten Argumenten aufzurufen. Am Ende dieses Labs werden Sie gut verstehen, wie Sie die rearg-Funktion verwenden, um Funktionsargumente in JavaScript zu manipulieren.",
      "meta": {
        "title": "Funktionsargumente in JavaScript neu anordnen",
        "description": "Erkunden Sie die rearg-Funktion, um die Reihenfolge der an eine Funktion in JavaScript übergebenen Argumente zu ändern.",
        "keywords": "javascript, javascript Übung, Array Prototype Map, Online-JavaScript-Übung, JavaScript-Lab, rearg, Funktionsargumente, JavaScript-Tutor, neu anordnen"
      },
      "details": {
        "steps": [
          {
            "title": "Funktionsargumente neu anordnen",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Überprüfen der Verwendung von Node in der ZSH-Historie",
                "file": "verify1-1.sh",
                "hint": "JavaScript kann im Terminal/SSH ausgeführt werden, indem man 'node' eingibt und die Enter-Taste drückt."
              }
            ]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "関数の引数を並び替える",
      "description": "この実験では、JavaScript の rearg 関数を調べます。この関数を使うと、指定されたインデックスに基づいて関数に渡される引数の順序を並び替えることができます。Array.prototype.map() メソッドとスプレッド演算子を使って引数を変換し、並び替えられた引数で元の関数を呼び出す方法を学びます。この実験が終わるとき、JavaScript で rearg 関数を使って関数の引数を操作する方法を十分に理解しているようになります。",
      "meta": {
        "title": "JavaScript で関数の引数を並び替える",
        "description": "JavaScript で関数に渡される引数の順序を並び替えるために rearg 関数を調べます。",
        "keywords": "javascript, javascript の練習，配列プロトタイプマップ，オンラインでの javascript の練習，javascript の実験，rearg, 関数の引数，javascript の講師，並び替える"
      },
      "details": {
        "steps": [
          {
            "title": "関数の引数を並び替える",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "ZSH 履歴における Node の使用を確認する",
                "file": "verify1-1.sh",
                "hint": "ターミナル/SSH で 'node' と入力して Enter キーを押すことで、JavaScript を実行できます。"
              }
            ]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Переупорядочить аргументы функции",
      "description": "В этом практическом занятии мы изучим функцию rearg в JavaScript, которая позволяет нам изменить порядок аргументов, передаваемых в функцию, на основе указанных индексов. Мы узнаем, как использовать метод Array.prototype.map() и оператор расширения для преобразования аргументов и вызова исходной функции с переупорядоченными аргументами. В конце этого практического занятия вы хорошо освоите, как использовать функцию rearg для манипуляции аргументами функций в JavaScript.",
      "meta": {
        "title": "Переупорядочить аргументы функции в JavaScript",
        "description": "Изучите функцию rearg для переупорядочивания порядка аргументов, передаваемых в функцию в JavaScript.",
        "keywords": "javascript, практика javascript, array prototype map, онлайн практика javascript, практическое занятие javascript, rearg, аргументы функции, преподаватель javascript, переупорядочить"
      },
      "details": {
        "steps": [
          {
            "title": "Переупорядочить аргументы функции",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "Проверить использование Node в истории ZSH",
                "file": "verify1-1.sh",
                "hint": "JavaScript можно запускать в Терминале/SSH, введя 'node' и нажав Enter."
              }
            ]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    }
  ]
}
