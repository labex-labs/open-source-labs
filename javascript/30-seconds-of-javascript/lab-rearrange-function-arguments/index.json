{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Rearrange Function Arguments",
  "description": "In this lab, we will explore the rearg function in JavaScript, which allows us to rearrange the order of arguments passed to a function based on specified indexes. We will learn how to use the Array.prototype.map() method and spread operator to transform the arguments and invoke the original function with the rearranged arguments. By the end of this lab, you will have a good understanding of how to use the rearg function to manipulate function arguments in JavaScript.",
  "meta": {
    "title": "Rearrange Function Arguments in JavaScript",
    "description": "Explore the rearg function to rearrange the order of arguments passed to a function in JavaScript.",
    "keywords": "javascript, javascript practice, array prototype map, javascript practice online, javascript lab, rearg, function arguments, javascript tutor, rearrange"
  },
  "difficulty": "Beginner",
  "time": 10,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Rearrange Function Arguments",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify Node Usage In ZSH History",
            "file": "verify1-1.sh",
            "hint": "JavaScript can be run in the Terminal/SSH by typing 'node' and pressing Enter.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "javascript/arith_ops",
          "javascript/array_methods",
          "javascript/closures",
          "javascript/comp_ops",
          "javascript/data_types",
          "javascript/functions",
          "javascript/higher_funcs",
          "javascript/spread_rest",
          "javascript/variables"
        ]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["Lotus-7"],
  "license": {
    "name": "CC-BY-4.0",
    "url": "https://github.com/30-seconds/30-seconds-of-code/blob/master/LICENSE",
    "repo": "https://github.com/30-seconds/30-seconds-of-code"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "重新排列函数参数",
      "description": "在本实验中，我们将探索 JavaScript 中的 rearg 函数，它使我们能够根据指定索引重新排列传递给函数的参数顺序。我们将学习如何使用 Array.prototype.map() 方法和展开运算符来转换参数，并使用重新排列后的参数调用原始函数。在本实验结束时，你将很好地理解如何使用 rearg 函数来操作 JavaScript 中的函数参数。",
      "meta": {
        "title": "在 JavaScript 中重新排列函数参数",
        "description": "探索 rearg 函数以重新排列传递给 JavaScript 函数的参数顺序。",
        "keywords": "javascript, javascript 实践, 数组原型映射, 在线 javascript 实践, javascript 实验, rearg, 函数参数, javascript 教程, 重新排列"
      },
      "details": {
        "steps": [
          {
            "title": "重新排列函数参数",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "验证 ZSH 历史记录中的 Node 使用情况",
                "file": "verify1-1.sh",
                "hint": "通过输入 'node' 并按 Enter 键，可以在终端/SSH 中运行 JavaScript。"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    }
  ]
}
