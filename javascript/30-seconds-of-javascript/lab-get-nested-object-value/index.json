{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Get Nested Object Property From Path String",
  "description": "In this lab, we will explore how to retrieve nested object properties using a given path string in JavaScript. We will learn how to use various array methods such as map(), filter(), and reduce() to extract specific values from complex objects. This skill is essential for working with large datasets and APIs that return nested JSON objects.",
  "meta": {
    "title": "Retrieve Nested Object Properties with Path Strings",
    "description": "Learn how to extract values from complex JSON objects using path strings in JavaScript.",
    "keywords": "javascript, javascript practice, javascript practice online, object, path, javascript lab, nested, property, javascript tutor"
  },
  "difficulty": "Beginner",
  "time": 5,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Get Nested Object Property From Path String",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify Node Command Usage",
            "file": "verify1-1.sh",
            "hint": "JavaScript can be run in the Terminal/SSH by typing 'node' and pressing Enter.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": []
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["Lotus-7"],
  "license": {
    "name": "CC-BY-4.0",
    "url": "https://github.com/30-seconds/30-seconds-of-code/blob/master/LICENSE",
    "repo": "https://github.com/30-seconds/30-seconds-of-code"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "从路径字符串获取嵌套对象属性",
      "description": "在本实验中，我们将探索如何在 JavaScript 中使用给定的路径字符串来检索嵌套对象的属性。我们将学习如何使用各种数组方法，如 map()、filter() 和 reduce()，从复杂对象中提取特定值。这项技能对于处理大型数据集和返回嵌套 JSON 对象的 API 至关重要。",
      "meta": {
        "title": "使用路径字符串检索嵌套对象属性",
        "description": "学习如何在 JavaScript 中使用路径字符串从复杂 JSON 对象中提取值。",
        "keywords": "JavaScript, JavaScript 练习，在线 JavaScript 练习，对象，路径，JavaScript 实验，嵌套，属性，JavaScript 教程"
      },
      "details": {
        "steps": [
          {
            "title": "从路径字符串获取嵌套对象属性",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "验证 Node 命令的用法",
                "file": "verify1-1.sh",
                "hint": "在终端/SSH 中，通过输入'node'并按回车键可以运行 JavaScript。"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Obtener propiedades de objetos anidados a partir de una cadena de ruta",
      "description": "En este laboratorio, exploraremos cómo recuperar propiedades de objetos anidados utilizando una cadena de ruta dada en JavaScript. Aprenderemos cómo utilizar varios métodos de arrays, como map(), filter() y reduce(), para extraer valores específicos de objetos complejos. Esta habilidad es esencial para trabajar con grandes conjuntos de datos y APIs que devuelven objetos JSON anidados.",
      "meta": {
        "title": "Recuperar propiedades de objetos anidados con cadenas de ruta",
        "description": "Aprende cómo extraer valores de objetos JSON complejos utilizando cadenas de ruta en JavaScript.",
        "keywords": "javascript, práctica de javascript, práctica de javascript en línea, objeto, ruta, laboratorio de javascript, anidado, propiedad, tutor de javascript"
      },
      "details": {
        "steps": [
          {
            "title": "Obtener propiedades de objetos anidados a partir de una cadena de ruta",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Verificar el uso del comando Node",
                "file": "verify1-1.sh",
                "hint": "Se puede ejecutar JavaScript en la Terminal/SSH escribiendo 'node' y presionando Enter."
              }
            ]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Récupérer les propriétés d'objets imbriqués à partir d'une chaîne de caractères représentant un chemin",
      "description": "Dans ce laboratoire (lab), nous explorerons comment récupérer les propriétés d'objets imbriqués à l'aide d'une chaîne de caractères représentant un chemin donné en JavaScript. Nous apprendrons à utiliser diverses méthodes de tableau telles que map(), filter() et reduce() pour extraire des valeurs spécifiques d'objets complexes. Cette compétence est essentielle pour travailler avec de grands ensembles de données et des API qui renvoient des objets JSON imbriqués.",
      "meta": {
        "title": "Récupérer les propriétés d'objets imbriqués avec des chaînes de caractères représentant des chemins",
        "description": "Apprenez à extraire des valeurs d'objets JSON complexes à l'aide de chaînes de caractères représentant des chemins en JavaScript.",
        "keywords": "javascript, pratique JavaScript, pratique JavaScript en ligne, objet, chemin, laboratoire JavaScript, imbriqué, propriété, tutoriel JavaScript"
      },
      "details": {
        "steps": [
          {
            "title": "Récupérer les propriétés d'objets imbriqués à partir d'une chaîne de caractères représentant un chemin",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Vérifier l'utilisation de la commande Node",
                "file": "verify1-1.sh",
                "hint": "JavaScript peut être exécuté dans le Terminal/SSH en tapant 'node' puis en appuyant sur Entrée."
              }
            ]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Verschachtelte Objekteigenschaften aus Pfadzeichenfolgen abrufen",
      "description": "In diesem Lab werden wir untersuchen, wie man verschachtelte Objekteigenschaften in JavaScript mithilfe einer gegebenen Pfadzeichenfolge abruft. Wir werden lernen, wie man verschiedene Array-Methoden wie map(), filter() und reduce() verwendet, um bestimmte Werte aus komplexen Objekten zu extrahieren. Diese Fähigkeit ist unerlässlich für die Arbeit mit großen Datensätzen und APIs, die verschachtelte JSON-Objekte zurückgeben.",
      "meta": {
        "title": "Verschachtelte Objekteigenschaften mit Pfadzeichenfolgen abrufen",
        "description": "Lernen Sie, wie Sie in JavaScript Werte aus komplexen JSON-Objekten mithilfe von Pfadzeichenfolgen extrahieren.",
        "keywords": "javascript, javascript Übung, Online-Javascript-Übung, Objekt, Pfad, Javascript-Lab, verschachtelt, Eigenschaft, Javascript-Tutor"
      },
      "details": {
        "steps": [
          {
            "title": "Verschachtelte Objekteigenschaften aus Pfadzeichenfolgen abrufen",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Verifizieren Sie die Verwendung des Node-Befehls",
                "file": "verify1-1.sh",
                "hint": "JavaScript kann im Terminal/SSH ausgeführt werden, indem Sie 'node' eingeben und die Eingabetaste drücken."
              }
            ]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "パス文字列からネストされたオブジェクトのプロパティを取得する",
      "description": "この実験では、JavaScript で与えられたパス文字列を使用してネストされたオブジェクトのプロパティを取得する方法を探ります。map()、filter()、reduce() などのさまざまな配列メソッドを使用して、複雑なオブジェクトから特定の値を抽出する方法を学びます。このスキルは、大規模なデータセットやネストされた JSON オブジェクトを返す API を扱う際に不可欠です。",
      "meta": {
        "title": "パス文字列でネストされたオブジェクトのプロパティを取得する",
        "description": "JavaScript でパス文字列を使用して複雑な JSON オブジェクトから値を抽出する方法を学びましょう。",
        "keywords": "JavaScript, JavaScript の練習，JavaScript のオンライン練習，オブジェクト，パス，JavaScript 実験，ネスト，プロパティ，JavaScript チューター"
      },
      "details": {
        "steps": [
          {
            "title": "パス文字列からネストされたオブジェクトのプロパティを取得する",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "Node コマンドの使用を検証する",
                "file": "verify1-1.sh",
                "hint": "ターミナル/SSH で 'node' と入力して Enter キーを押すことで、JavaScript を実行できます。"
              }
            ]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Получение свойства вложенного объекта из строки пути",
      "description": "В этом лабораторном занятии мы рассмотрим, как получать свойства вложенных объектов с использованием заданной строки пути в JavaScript. Мы научимся использовать различные методы массивов, такие как map(), filter() и reduce(), чтобы извлекать определенные значения из сложных объектов. Этот навык важен для работы с большими наборами данных и API, которые возвращают вложенные JSON-объекты.",
      "meta": {
        "title": "Извлечение свойств вложенных объектов с использованием строк пути",
        "description": "Узнайте, как извлекать значения из сложных JSON-объектов с использованием строк пути в JavaScript.",
        "keywords": "javascript, практика javascript, онлайн-практика javascript, объект, путь, лабораторное занятие по javascript, вложенный, свойство, онлайн-курс javascript"
      },
      "details": {
        "steps": [
          {
            "title": "Получение свойства вложенного объекта из строки пути",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "Проверка использования команды Node",
                "file": "verify1-1.sh",
                "hint": "JavaScript можно запустить в Терминале/SSH, введя 'node' и нажав Enter."
              }
            ]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    },
    {
      "lang": "ko",
      "title": "경로 문자열로 중첩된 객체 속성 가져오기",
      "description": "이 랩에서는 JavaScript 에서 주어진 경로 문자열을 사용하여 중첩된 객체 속성을 검색하는 방법을 살펴봅니다. map(), filter(), reduce() 와 같은 다양한 배열 메서드를 사용하여 복잡한 객체에서 특정 값을 추출하는 방법을 배우게 됩니다. 이 기술은 대규모 데이터 세트 및 중첩된 JSON 객체를 반환하는 API 를 사용하는 데 필수적입니다.",
      "meta": {
        "title": "경로 문자열을 사용하여 중첩된 객체 속성 검색 방법",
        "description": "JavaScript 에서 경로 문자열을 사용하여 복잡한 JSON 객체에서 값을 추출하는 방법을 알아보세요.",
        "keywords": "javascript, javascript 연습, javascript 온라인 연습, 객체, 경로, javascript 랩, 중첩, 속성, javascript 튜터"
      },
      "details": {
        "steps": [
          {
            "title": "경로 문자열에서 중첩된 객체 속성 가져오기",
            "text": "ko/step1.md",
            "verify": [
              {
                "name": "Node 명령어 사용 확인",
                "file": "verify1-1.sh",
                "hint": "JavaScript 는 터미널/SSH 에서 'node'를 입력하고 Enter 키를 눌러 실행할 수 있습니다."
              }
            ]
          }
        ],
        "intro": {
          "text": "ko/intro.md",
          "title": "소개"
        },
        "finish": {
          "text": "ko/finish.md",
          "title": "요약"
        }
      }
    },
    {
      "lang": "pt",
      "title": "Obter Propriedade de Objeto Aninhado a partir de String de Caminho",
      "description": "Neste laboratório, exploraremos como recuperar propriedades de objetos aninhados usando uma string de caminho fornecida em JavaScript. Aprenderemos a usar vários métodos de array, como map(), filter() e reduce(), para extrair valores específicos de objetos complexos. Essa habilidade é essencial para trabalhar com grandes conjuntos de dados e APIs que retornam objetos JSON aninhados.",
      "meta": {
        "title": "Recuperar Propriedades de Objetos Aninhados com Strings de Caminho em JavaScript",
        "description": "Aprenda a extrair valores de objetos JSON complexos usando strings de caminho em JavaScript. Domine a manipulação de dados aninhados e otimize seu código.",
        "keywords": "javascript, prática javascript, exercícios javascript, objeto, caminho, laboratório javascript, aninhado, propriedade, tutorial javascript"
      },
      "details": {
        "steps": [
          {
            "title": "Obter Propriedade de Objeto Aninhado a partir de String de Caminho",
            "text": "pt/step1.md",
            "verify": [
              {
                "name": "Verificar Uso do Comando Node",
                "file": "verify1-1.sh",
                "hint": "JavaScript pode ser executado no Terminal/SSH digitando 'node' e pressionando Enter."
              }
            ]
          }
        ],
        "intro": {
          "text": "pt/intro.md",
          "title": "Introdução"
        },
        "finish": {
          "text": "pt/finish.md",
          "title": "Resumo"
        }
      }
    }
  ]
}
