{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Flattening Arrays with JavaScript Recursion",
  "description": "In this lab, we will explore the concept of flattening an array up to a specified depth using JavaScript. We will learn how to use recursion, reduce, and concat methods to merge elements or arrays. By the end of this lab, you will be able to efficiently flatten arrays and manipulate nested data structures in JavaScript.",
  "meta": {
    "title": "Flatten Arrays in JavaScript | Recursion, Reduce, Concat",
    "description": "Learn how to efficiently flatten arrays up to a specified depth using JavaScript. Explore recursion, reduce, and concat methods to manipulate nested data structures.",
    "keywords": "JavaScript, array flattening, recursion, reduce, concat, nested data structures"
  },
  "difficulty": "Beginner",
  "time": 5,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Flatten Array",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify Node Usage In Zsh History",
            "file": "verify1-1.sh",
            "hint": "JavaScript can be run in the Terminal/SSH by typing 'node' and pressing Enter.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": []
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["Lotus-7"],
  "license": {
    "name": "CC-BY-4.0",
    "url": "https://github.com/30-seconds/30-seconds-of-code/blob/master/LICENSE",
    "repo": "https://github.com/30-seconds/30-seconds-of-code"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "使用 JavaScript 递归扁平化数组",
      "description": "在本实验中，我们将探索如何使用 JavaScript 将数组扁平化至指定深度。我们将学习如何使用递归、reduce 和 concat 方法来合并元素或数组。完成本实验后，你将能够有效地扁平化数组并处理 JavaScript 中的嵌套数据结构。",
      "meta": {
        "title": "JavaScript 中扁平化数组 | 递归、Reduce、Concat",
        "description": "学习如何使用 JavaScript 有效地将数组扁平化至指定深度。探索递归、reduce 和 concat 方法以处理嵌套数据结构。",
        "keywords": "JavaScript、数组扁平化、递归、reduce、concat、嵌套数据结构"
      },
      "details": {
        "steps": [
          {
            "title": "扁平化数组",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "在 Zsh 历史记录中验证 Node 的使用",
                "file": "verify1-1.sh",
                "hint": "通过输入 'node' 并按 Enter 键，可以在终端/SSH 中运行 JavaScript。"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Aplanamiento de matrices con recursión en JavaScript",
      "description": "En este laboratorio, exploraremos el concepto de aplanar una matriz hasta una profundidad especificada utilizando JavaScript. Aprenderemos cómo utilizar los métodos de recursión, reduce y concat para fusionar elementos o matrices. Al final de este laboratorio, serás capaz de aplanar eficientemente matrices y manipular estructuras de datos anidadas en JavaScript.",
      "meta": {
        "title": "Aplanar matrices en JavaScript | Recursión, Reduce, Concat",
        "description": "Aprende cómo aplanar eficientemente matrices hasta una profundidad especificada utilizando JavaScript. Explora los métodos de recursión, reduce y concat para manipular estructuras de datos anidadas.",
        "keywords": "JavaScript, aplanamiento de matrices, recursión, reduce, concat, estructuras de datos anidadas"
      },
      "details": {
        "steps": [
          {
            "title": "Aplanar matriz",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Verificar el uso de Node en el historial de Zsh",
                "file": "verify1-1.sh",
                "hint": "JavaScript se puede ejecutar en la Terminal/SSH escribiendo 'node' y presionando Enter."
              }
            ]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Aplatir des tableaux avec la récursion en JavaScript",
      "description": "Dans ce laboratoire, nous allons explorer le concept d'aplatissement d'un tableau jusqu'à une profondeur spécifiée en utilisant JavaScript. Nous allons apprendre à utiliser les méthodes de récursion, de réduction et de concaténation pour fusionner des éléments ou des tableaux. À la fin de ce laboratoire, vous serez capable d'aplatir efficacement les tableaux et de manipuler des structures de données imbriquées en JavaScript.",
      "meta": {
        "title": "Aplatir des tableaux en JavaScript | Récursion, Réduction, Concaténation",
        "description": "Apprenez à aplatir efficacement les tableaux jusqu'à une profondeur spécifiée en utilisant JavaScript. Explorez les méthodes de récursion, de réduction et de concaténation pour manipuler les structures de données imbriquées.",
        "keywords": "JavaScript, aplatissement de tableau, récursion, réduction, concaténation, structures de données imbriquées"
      },
      "details": {
        "steps": [
          {
            "title": "Aplatir un tableau",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Vérifier l'utilisation de Node dans l'historique de Zsh",
                "file": "verify1-1.sh",
                "hint": "JavaScript peut être exécuté dans le Terminal/SSH en tapant 'node' et en appuyant sur Entrée."
              }
            ]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Das Flachmachen von Arrays mit JavaScript-Rekursion",
      "description": "In diesem Lab werden wir das Konzept des Flachmachens eines Arrays bis zu einer bestimmten Tiefe mit JavaScript erkunden. Wir werden lernen, wie man Rekursion, reduce- und concat-Methoden verwendet, um Elemente oder Arrays zu kombinieren. Am Ende dieses Labs werden Sie in der Lage sein, Arrays effizient zu flachmachen und verschachtelte Datenstrukturen in JavaScript zu manipulieren.",
      "meta": {
        "title": "Arrays in JavaScript flachmachen | Rekursion, Reduce, Concat",
        "description": "Lernen Sie, wie Sie Arrays bis zu einer bestimmten Tiefe effizient mit JavaScript flachmachen. Erkunden Sie Rekursion, reduce- und concat-Methoden, um verschachtelte Datenstrukturen zu manipulieren.",
        "keywords": "JavaScript, Array-Flachmacher, Rekursion, Reduce, Concat, verschachtelte Datenstrukturen"
      },
      "details": {
        "steps": [
          {
            "title": "Array flachmachen",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Überprüfen der Verwendung von Node in der Zsh-Geschichte",
                "file": "verify1-1.sh",
                "hint": "JavaScript kann im Terminal/SSH ausgeführt werden, indem man 'node' eingibt und die Eingabetaste drückt."
              }
            ]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "JavaScript 再帰を使った配列のフラット化",
      "description": "この実験では、JavaScript を使って配列を指定された深さまでフラット化する概念を探ります。要素や配列をマージするために再帰、reduce、concat メソッドをどのように使うか学びます。この実験が終わるとき、あなたは JavaScript で配列を効率的にフラット化し、ネストされたデータ構造を操作できるようになります。",
      "meta": {
        "title": "JavaScript で配列をフラット化する | 再帰、Reduce、Concat",
        "description": "JavaScript を使って指定された深さまで配列を効率的にフラット化する方法を学びましょう。ネストされたデータ構造を操作するための再帰、reduce、concat メソッドを探りましょう。",
        "keywords": "JavaScript、配列のフラット化、再帰、reduce、concat、ネストされたデータ構造"
      },
      "details": {
        "steps": [
          {
            "title": "配列をフラット化する",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "Zsh 履歴における Node の使用を確認する",
                "file": "verify1-1.sh",
                "hint": "ターミナル/SSH で 'node' と入力して Enter キーを押すことで JavaScript を実行できます。"
              }
            ]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Сглаживание массивов с использованием рекурсии в JavaScript",
      "description": "В этом практическом занятии мы изучим концепцию сглаживания массива до заданной глубины с использованием JavaScript. Мы узнаем, как использовать методы рекурсии, reduce и concat для объединения элементов или массивов. В конце этого практического занятия вы сможете эффективно сглаживать массивы и манипулировать вложенными структурами данных в JavaScript.",
      "meta": {
        "title": "Сглаживание массивов в JavaScript | Рекурсия, Reduce, Concat",
        "description": "Изучите, как эффективно сгладить массивы до заданной глубины с использованием JavaScript. Исследуйте методы рекурсии, reduce и concat для манипуляции вложенными структурами данных.",
        "keywords": "JavaScript, сглаживание массива, рекурсия, reduce, concat, вложенные структуры данных"
      },
      "details": {
        "steps": [
          {
            "title": "Сгладить массив",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "Проверить использование Node в истории Zsh",
                "file": "verify1-1.sh",
                "hint": "JavaScript можно запустить в Терминале/SSH, введя 'node' и нажав Enter."
              }
            ]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    },
    {
      "lang": "ko",
      "title": "JavaScript 재귀를 이용한 배열 평탄화",
      "description": "이 랩에서는 JavaScript 를 사용하여 지정된 깊이까지 배열을 평탄화하는 개념을 탐구합니다. 재귀 (recursion), reduce, concat 메서드를 사용하여 요소 또는 배열을 병합하는 방법을 배웁니다. 이 랩을 마치면 JavaScript 에서 배열을 효율적으로 평탄화하고 중첩된 데이터 구조를 조작할 수 있게 됩니다.",
      "meta": {
        "title": "JavaScript 에서 배열 평탄화하기 | 재귀, Reduce, Concat - JavaScript 배열 평탄화 방법",
        "description": "JavaScript 를 사용하여 지정된 깊이까지 배열을 효율적으로 평탄화하는 방법을 알아보세요. 재귀, reduce, concat 메서드를 활용하여 중첩된 데이터 구조를 조작하는 방법을 탐구합니다. - JavaScript 배열 평탄화 튜토리얼",
        "keywords": "JavaScript, 배열 평탄화, 재귀, reduce, concat, 중첩 데이터 구조, JavaScript 배열, 배열 평탄화 튜토리얼"
      },
      "details": {
        "steps": [
          {
            "title": "배열 평탄화",
            "text": "ko/step1.md",
            "verify": [
              {
                "name": "Zsh 히스토리에서 Node 사용 확인",
                "file": "verify1-1.sh",
                "hint": "터미널/SSH 에서 'node'를 입력하고 Enter 키를 눌러 JavaScript 를 실행할 수 있습니다."
              }
            ]
          }
        ],
        "intro": {
          "text": "ko/intro.md",
          "title": "소개"
        },
        "finish": {
          "text": "ko/finish.md",
          "title": "요약"
        }
      }
    },
    {
      "lang": "pt",
      "title": "Achatando Arrays com Recursão em JavaScript",
      "description": "Neste laboratório, exploraremos o conceito de achatar um array até uma profundidade especificada usando JavaScript. Aprenderemos como usar recursão, os métodos reduce e concat para mesclar elementos ou arrays. Ao final deste laboratório, você será capaz de achatar arrays de forma eficiente e manipular estruturas de dados aninhadas em JavaScript.",
      "meta": {
        "title": "Achatamento de Arrays em JavaScript | Recursão, Reduce, Concat",
        "description": "Aprenda como achatar arrays de forma eficiente até uma profundidade especificada usando JavaScript. Explore recursão, os métodos reduce e concat para manipular estruturas de dados aninhadas.",
        "keywords": "JavaScript, achatamento de array, recursão, reduce, concat, estruturas de dados aninhadas"
      },
      "details": {
        "steps": [
          {
            "title": "Achatamento de Array",
            "text": "pt/step1.md",
            "verify": [
              {
                "name": "Verificar Uso do Node no Histórico do Zsh",
                "file": "verify1-1.sh",
                "hint": "JavaScript pode ser executado no Terminal/SSH digitando 'node' e pressionando Enter."
              }
            ]
          }
        ],
        "intro": {
          "text": "pt/intro.md",
          "title": "Introdução"
        },
        "finish": {
          "text": "pt/finish.md",
          "title": "Resumo"
        }
      }
    }
  ]
}
