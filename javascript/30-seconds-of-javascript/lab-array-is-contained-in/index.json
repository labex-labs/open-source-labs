{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Array Is Contained in Other Array",
  "description": "In this lab, we will explore how to check if one array is contained in another array in JavaScript. We will use various array methods such as for...of, Set, some(), and filter() to write a function that can determine if the elements of the first array are present in the second array, regardless of their order. This lab will help you understand how to manipulate arrays in JavaScript and write efficient code to solve common programming problems.",
  "meta": {
    "title": "JavaScript Array Manipulation | Programming Tutorials | Lab",
    "description": "Learn how to check if one array is contained in another array in JavaScript using various array methods like for...of, Set, some(), and filter(). Improve your coding skills with this efficient programming tutorial.",
    "keywords": "JavaScript, Array, Array Manipulation, Programming Tutorials, Coding, Algorithms"
  },
  "difficulty": "Beginner",
  "time": 10,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Array Is Contained in Other Array",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify Node Command Usage",
            "file": "verify1-1.sh",
            "hint": "JavaScript can be run in the Terminal/SSH by typing 'node' and pressing Enter.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "javascript/arith_ops",
          "javascript/comp_ops",
          "javascript/cond_stmts",
          "javascript/data_types",
          "javascript/higher_funcs",
          "javascript/loops",
          "javascript/variables"
        ]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["Lotus-7"],
  "license": {
    "name": "CC-BY-4.0",
    "url": "https://github.com/30-seconds/30-seconds-of-code/blob/master/LICENSE",
    "repo": "https://github.com/30-seconds/30-seconds-of-code"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "一个数组是否包含在另一个数组中",
      "description": "在本实验中，我们将探索如何在 JavaScript 中检查一个数组是否包含在另一个数组中。我们将使用各种数组方法，如 for...of、Set、some() 和 filter() 来编写一个函数，该函数可以确定第一个数组的元素是否存在于第二个数组中，而不管它们的顺序如何。本实验将帮助你理解如何在 JavaScript 中操作数组，并编写高效的代码来解决常见的编程问题。",
      "meta": {
        "title": "JavaScript 数组操作 | 编程教程 | 实验",
        "description": "学习如何使用 for...of、Set、some() 和 filter() 等各种数组方法在 JavaScript 中检查一个数组是否包含在另一个数组中。通过这个高效的编程教程提升你的编码技能。",
        "keywords": "JavaScript，数组，数组操作，编程教程，编码，算法"
      },
      "details": {
        "steps": [
          {
            "title": "一个数组是否包含在另一个数组中",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "验证 Node 命令的用法",
                "file": "verify1-1.sh",
                "hint": "在终端/SSH 中，通过输入'node'并按回车键可以运行 JavaScript。"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Matriz Contenida en Otra Matriz",
      "description": "En este laboratorio, exploraremos cómo comprobar si una matriz está contenida en otra matriz en JavaScript. Utilizaremos varios métodos de matriz, como for...of, Set, some() y filter(), para escribir una función que pueda determinar si los elementos de la primera matriz están presentes en la segunda matriz, independientemente de su orden. Este laboratorio te ayudará a entender cómo manipular matrices en JavaScript y escribir código eficiente para resolver problemas de programación comunes.",
      "meta": {
        "title": "Manipulación de matrices de JavaScript | Tutoriales de programación | Laboratorio",
        "description": "Aprende cómo comprobar si una matriz está contenida en otra matriz en JavaScript utilizando varios métodos de matriz como for...of, Set, some() y filter(). Mejora tus habilidades de codificación con este tutorial de programación eficiente.",
        "keywords": "JavaScript, Matriz, Manipulación de matrices, Tutoriales de programación, Codificación, Algoritmos"
      },
      "details": {
        "steps": [
          {
            "title": "Matriz Contenida en Otra Matriz",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Verificar el uso del comando Node",
                "file": "verify1-1.sh",
                "hint": "Se puede ejecutar JavaScript en la Terminal/SSH escribiendo 'node' y presionando Enter."
              }
            ]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Tableau contenu dans un autre tableau",
      "description": "Dans ce laboratoire, nous allons explorer la manière de vérifier si un tableau est contenu dans un autre tableau en JavaScript. Nous utiliserons diverses méthodes de tableau telles que for...of, Set, some() et filter() pour écrire une fonction qui peut déterminer si les éléments du premier tableau sont présents dans le second tableau, quelle que soit leur ordre. Ce laboratoire vous aidera à comprendre comment manipuler les tableaux en JavaScript et à écrire du code efficace pour résoudre des problèmes de programmation courants.",
      "meta": {
        "title": "Manipulation de tableaux JavaScript | Didacticiels de programmation | Laboratoire",
        "description": "Découvrez comment vérifier si un tableau est contenu dans un autre tableau en JavaScript en utilisant diverses méthodes de tableau telles que for...of, Set, some() et filter(). Améliorez vos compétences de codage avec ce didacticiel de programmation efficace.",
        "keywords": "JavaScript, Tableau, Manipulation de tableaux, Didacticiels de programmation, Codage, Algorithmes"
      },
      "details": {
        "steps": [
          {
            "title": "Tableau contenu dans un autre tableau",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Vérifier l'utilisation de la commande Node",
                "file": "verify1-1.sh",
                "hint": "JavaScript peut être exécuté dans le Terminal/SSH en tapant 'node' et en appuyant sur Entrée."
              }
            ]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Array ist in einem anderen Array enthalten",
      "description": "In diesem Lab werden wir untersuchen, wie man in JavaScript überprüft, ob ein Array in einem anderen Array enthalten ist. Wir werden verschiedene Array-Methoden wie for...of, Set, some() und filter() verwenden, um eine Funktion zu schreiben, die bestimmen kann, ob die Elemente des ersten Arrays im zweiten Array vorhanden sind, unabhängig von ihrer Reihenfolge. Dieses Lab wird Ihnen helfen, zu verstehen, wie man Arrays in JavaScript manipuliert und effiziente Code schreibt, um häufige Programmierprobleme zu lösen.",
      "meta": {
        "title": "JavaScript-Array-Manipulation | Programmier-Tutorials | Lab",
        "description": "Lernen Sie, wie man in JavaScript überprüft, ob ein Array in einem anderen Array enthalten ist, indem Sie verschiedene Array-Methoden wie for...of, Set, some() und filter() verwenden. Verbessern Sie Ihre Programmierkenntnisse mit diesem effizienten Programmier-Tutorial.",
        "keywords": "JavaScript, Array, Array-Manipulation, Programmier-Tutorials, Programmierung, Algorithmen"
      },
      "details": {
        "steps": [
          {
            "title": "Array ist in einem anderen Array enthalten",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Überprüfen der Verwendung des Node-Befehls",
                "file": "verify1-1.sh",
                "hint": "JavaScript kann im Terminal/SSH ausgeführt werden, indem man 'node' eingibt und die Enter-Taste drückt."
              }
            ]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "ある配列が別の配列に含まれているかどうか",
      "description": "この実験では、JavaScript において、ある配列が別の配列に含まれているかどうかを確認する方法を探ります。`for...of`、`Set`、`some()`、`filter()` などのさまざまな配列メソッドを使って、第 1 の配列の要素が第 2 の配列に存在するかどうかを、その順序に関係なく判定できる関数を書きます。この実験は、JavaScript における配列の操作方法や、一般的なプログラミング問題を解くための効率的なコードの書き方を理解するのに役立ちます。",
      "meta": {
        "title": "JavaScript の配列操作 | プログラミング チュートリアル | 実験",
        "description": "`for...of`、`Set`、`some()`、`filter()` などのさまざまな配列メソッドを使って、JavaScript においてある配列が別の配列に含まれているかどうかを確認する方法を学びましょう。この効率的なプログラミング チュートリアルでコーディング技術を向上させましょう。",
        "keywords": "JavaScript, 配列，配列操作，プログラミング チュートリアル，コーディング，アルゴリズム"
      },
      "details": {
        "steps": [
          {
            "title": "ある配列が別の配列に含まれているかどうか",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "Node コマンドの使用を確認する",
                "file": "verify1-1.sh",
                "hint": "ターミナル/SSH で 'node' と入力して Enter キーを押すことで、JavaScript を実行できます。"
              }
            ]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Массив содержится в другом массиве",
      "description": "В этом практическом занятии мы изучим, как проверить, содержится ли один массив в другом массиве на JavaScript. Мы будем использовать различные методы массивов, такие как for...of, Set, some() и filter(), чтобы написать функцию, которая сможет определить, присутствуют ли элементы первого массива во втором массиве, независимо от их порядка. Это практическое занятие поможет вам понять, как манипулировать массивами на JavaScript и писать эффективный код для решения общих задач программирования.",
      "meta": {
        "title": "Обработка массивов на JavaScript | Руководства по программированию | Практическое занятие",
        "description": "Изучите, как проверить, содержится ли один массив в другом массиве на JavaScript, используя различные методы массивов, такие как for...of, Set, some() и filter(). Повысьте свои навыки в программировании с помощью этого эффективного руководства по программированию.",
        "keywords": "JavaScript, Массив, Обработка массивов, Руководства по программированию, Программирование, Алгоритмы"
      },
      "details": {
        "steps": [
          {
            "title": "Массив содержится в другом массиве",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "Проверить использование команды Node",
                "file": "verify1-1.sh",
                "hint": "JavaScript можно запустить в Терминале/SSH, введя 'node' и нажав Enter."
              }
            ]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    }
  ]
}
