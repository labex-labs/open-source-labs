{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Array Is Sorted",
  "description": "In this lab, we will be working with the isSorted function in JavaScript to determine whether a numeric array is sorted in ascending or descending order. We will use the Math.sign() method to convert the final direction value to -1 for descending order and 1 for ascending order. We will also handle cases where the array is empty, has only one element, or the direction changes for any pair of adjacent array elements.",
  "meta": {
    "title": "JavaScript Array Sorting | Coding Practice",
    "description": "Learn how to use the isSorted function in JavaScript to determine if a numeric array is sorted in ascending or descending order. Practice coding with examples.",
    "keywords": "JavaScript, Array, Sorting, Ascending, Descending, Coding Practice"
  },
  "difficulty": "Beginner",
  "time": 5,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Array Is Sorted",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify Node Commands In ZSH History",
            "file": "verify1-1.sh",
            "hint": "JavaScript can be run in the Terminal/SSH by typing 'node' and pressing Enter.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "javascript/arith_ops",
          "javascript/array_methods",
          "javascript/comp_ops",
          "javascript/cond_stmts",
          "javascript/data_types",
          "javascript/loops",
          "javascript/variables"
        ]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["Lotus-7"],
  "license": {
    "name": "CC-BY-4.0",
    "url": "https://github.com/30-seconds/30-seconds-of-code/blob/master/LICENSE",
    "repo": "https://github.com/30-seconds/30-seconds-of-code"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "数组是否已排序",
      "description": "在本实验中，我们将使用 JavaScript 中的 isSorted 函数来确定一个数字数组是按升序还是降序排序。我们将使用 Math.sign() 方法将最终的方向值转换为 -1 表示降序，1 表示升序。我们还将处理数组为空、只有一个元素或任意一对相邻数组元素的方向发生变化的情况。",
      "meta": {
        "title": "JavaScript 数组排序 | 编码练习",
        "description": "学习如何使用 JavaScript 中的 isSorted 函数来确定一个数字数组是按升序还是降序排序。通过示例进行编码练习。",
        "keywords": "JavaScript, 数组，排序，升序，降序，编码练习"
      },
      "details": {
        "steps": [
          {
            "title": "数组是否已排序",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "在 ZSH 历史记录中验证 Node 命令",
                "file": "verify1-1.sh",
                "hint": "通过输入 'node' 并按 Enter 键，可以在终端/SSH 中运行 JavaScript。"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "La matriz está ordenada",
      "description": "En este laboratorio, trabajaremos con la función isSorted en JavaScript para determinar si una matriz numérica está ordenada en orden ascendente o descendente. Utilizaremos el método Math.sign() para convertir el valor final de dirección en -1 para el orden descendente y 1 para el orden ascendente. También manejaremos casos en los que la matriz está vacía, tiene solo un elemento o la dirección cambia para cualquier par de elementos adyacentes de la matriz.",
      "meta": {
        "title": "Clasificación de matrices de JavaScript | Práctica de codificación",
        "description": "Aprende cómo usar la función isSorted en JavaScript para determinar si una matriz numérica está ordenada en orden ascendente o descendente. Practica la codificación con ejemplos.",
        "keywords": "JavaScript, Matriz, Clasificación, Ascendente, Descendente, Práctica de codificación"
      },
      "details": {
        "steps": [
          {
            "title": "La matriz está ordenada",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Verificar los comandos de Node en el historial de ZSH",
                "file": "verify1-1.sh",
                "hint": "Se puede ejecutar JavaScript en la Terminal/SSH escribiendo 'node' y presionando Enter."
              }
            ]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Le tableau est trié",
      "description": "Dans ce laboratoire, nous allons travailler avec la fonction isSorted en JavaScript pour déterminer si un tableau numérique est trié par ordre croissant ou décroissant. Nous utiliserons la méthode Math.sign() pour convertir la valeur de direction finale en -1 pour l'ordre décroissant et 1 pour l'ordre croissant. Nous gérerons également les cas où le tableau est vide, ne contient qu'un seul élément ou où la direction change pour toute paire d'éléments adjacents du tableau.",
      "meta": {
        "title": "Tri de tableaux JavaScript | Pratique de codage",
        "description": "Découvrez comment utiliser la fonction isSorted en JavaScript pour déterminer si un tableau numérique est trié par ordre croissant ou décroissant. Entraînez-vous au codage avec des exemples.",
        "keywords": "JavaScript, Tableau, Tri, Croissant, Décroissant, Pratique de codage"
      },
      "details": {
        "steps": [
          {
            "title": "Le tableau est trié",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Vérifier les commandes Node dans l'historique ZSH",
                "file": "verify1-1.sh",
                "hint": "JavaScript peut être exécuté dans le Terminal/SSH en tapant 'node' et en appuyant sur Entrée."
              }
            ]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Array ist sortiert",
      "description": "In diesem Lab werden wir die isSorted-Funktion in JavaScript verwenden, um zu bestimmen, ob ein numerisches Array aufsteigend oder absteigend sortiert ist. Wir werden die Math.sign()-Methode verwenden, um den endgültigen Richtungs-Wert in -1 für absteigende Reihenfolge und 1 für aufsteigende Reihenfolge umzuwandeln. Wir werden auch Fälle behandeln, in denen das Array leer ist, nur ein Element enthält oder die Richtung für jedes Paar benachbarter Array-Elemente sich ändert.",
      "meta": {
        "title": "JavaScript-Arraysortierung | Codeübung",
        "description": "Lernen Sie, wie Sie die isSorted-Funktion in JavaScript verwenden, um zu bestimmen, ob ein numerisches Array aufsteigend oder absteigend sortiert ist. Üben Sie die Programmierung mit Beispielen.",
        "keywords": "JavaScript, Array, Sortierung, Aufsteigend, Absteigend, Codeübung"
      },
      "details": {
        "steps": [
          {
            "title": "Array ist sortiert",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Verifiziere Node-Befehle in der ZSH-Geschichte",
                "file": "verify1-1.sh",
                "hint": "JavaScript kann im Terminal/SSH ausgeführt werden, indem man 'node' eingibt und die Enter-Taste drückt."
              }
            ]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "配列がソートされているかどうか",
      "description": "この実験では、JavaScript の isSorted 関数を使って、数値配列が昇順または降順にソートされているかどうかを判断します。降順の場合は最終的な方向値を -1 に、昇順の場合は 1 に変換するために Math.sign() メソッドを使います。また、配列が空、要素が 1 つだけ、または隣接する配列要素の方向が変化する場合も処理します。",
      "meta": {
        "title": "JavaScript 配列のソート | コーディング演習",
        "description": "JavaScript の isSorted 関数を使って数値配列が昇順または降順にソートされているかどうかを判断する方法を学びましょう。コード例を使ってコーディングを練習しましょう。",
        "keywords": "JavaScript, 配列，ソート，昇順，降順，コーディング演習"
      },
      "details": {
        "steps": [
          {
            "title": "配列がソートされているかどうか",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "ZSH 履歴における Node コマンドを確認する",
                "file": "verify1-1.sh",
                "hint": "ターミナル/SSH で 'node' と入力して Enter キーを押すことで JavaScript を実行できます。"
              }
            ]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Массив отсортирован",
      "description": "В этом практическом занятии мы будем работать с функцией isSorted на JavaScript, чтобы определить, отсортирован ли числовой массив по возрастанию или убыванию. Мы будем использовать метод Math.sign() для преобразования конечного значения направления в -1 для убывающего порядка и 1 для возрастающего порядка. Также мы будем обрабатывать случаи, когда массив пуст, содержит только один элемент или направление меняется для любых двух соседних элементов массива.",
      "meta": {
        "title": "Сортировка массивов на JavaScript | Практика программирования",
        "description": "Изучите, как использовать функцию isSorted в JavaScript, чтобы определить, отсортирован ли числовой массив по возрастанию или убыванию. Практикуйте программирование с примерами.",
        "keywords": "JavaScript, Массив, Сортировка, Возрастание, Убывание, Практика программирования"
      },
      "details": {
        "steps": [
          {
            "title": "Массив отсортирован",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "Проверить команды Node в истории ZSH",
                "file": "verify1-1.sh",
                "hint": "JavaScript можно запустить в Терминале/SSH, введя 'node' и нажав Enter."
              }
            ]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    },
    {
      "lang": "ko",
      "title": "배열 정렬 여부 확인",
      "description": "이 랩에서는 JavaScript 의 `isSorted` 함수를 사용하여 숫자 배열이 오름차순 또는 내림차순으로 정렬되었는지 확인합니다. `Math.sign()` 메서드를 사용하여 최종 방향 값을 내림차순의 경우 -1, 오름차순의 경우 1 로 변환합니다. 또한 배열이 비어 있거나, 요소가 하나만 있거나, 인접한 배열 요소 쌍의 방향이 변경되는 경우도 처리합니다.",
      "meta": {
        "title": "JavaScript 배열 정렬 | 코딩 연습",
        "description": "JavaScript 에서 `isSorted` 함수를 사용하여 숫자 배열이 오름차순 또는 내림차순으로 정렬되었는지 확인하는 방법을 알아보세요. 예제를 통해 코딩을 연습하세요.",
        "keywords": "JavaScript, 배열, 정렬, 오름차순, 내림차순, 코딩 연습, 자바스크립트 배열 정렬"
      },
      "details": {
        "steps": [
          {
            "title": "배열 정렬 여부 확인",
            "text": "ko/step1.md",
            "verify": [
              {
                "name": "ZSH 히스토리에서 Node 명령어 확인",
                "file": "verify1-1.sh",
                "hint": "터미널/SSH 에서 'node'를 입력하고 Enter 키를 눌러 JavaScript 를 실행할 수 있습니다."
              }
            ]
          }
        ],
        "intro": {
          "text": "ko/intro.md",
          "title": "소개"
        },
        "finish": {
          "text": "ko/finish.md",
          "title": "요약"
        }
      }
    },
    {
      "lang": "pt",
      "title": "Array Ordenado",
      "description": "Neste laboratório, trabalharemos com a função `isSorted` em JavaScript para determinar se um array numérico está ordenado em ordem crescente ou decrescente. Usaremos o método `Math.sign()` para converter o valor final da direção em -1 para ordem decrescente e 1 para ordem crescente. Também trataremos os casos em que o array está vazio, tem apenas um elemento ou a direção muda para qualquer par de elementos adjacentes do array.",
      "meta": {
        "title": "Ordenação de Arrays em JavaScript | Prática de Codificação",
        "description": "Aprenda a usar a função `isSorted` em JavaScript para determinar se um array numérico está ordenado em ordem crescente ou decrescente. Pratique a codificação com exemplos.",
        "keywords": "JavaScript, Array, Ordenação, Crescente, Decrescente, Prática de Codificação, Ordenar Array"
      },
      "details": {
        "steps": [
          {
            "title": "Array Ordenado",
            "text": "pt/step1.md",
            "verify": [
              {
                "name": "Verificar Comandos Node no Histórico ZSH",
                "file": "verify1-1.sh",
                "hint": "JavaScript pode ser executado no Terminal/SSH digitando 'node' e pressionando Enter."
              }
            ]
          }
        ],
        "intro": {
          "text": "pt/intro.md",
          "title": "Introdução"
        },
        "finish": {
          "text": "pt/finish.md",
          "title": "Resumo"
        }
      }
    }
  ]
}
