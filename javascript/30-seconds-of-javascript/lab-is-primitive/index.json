{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Number Is Primitive",
  "description": "In this lab, we will explore the concept of primitive values in JavaScript. We will learn how to differentiate between primitive and non-primitive values using the isPrimitive() function, which compares the passed value with an object created from it. Through a series of exercises, we will gain a deeper understanding of this fundamental concept in JavaScript.",
  "meta": {
    "title": "Exploring Primitive Values in JavaScript",
    "description": "Learn how to differentiate between primitive and non-primitive values using the isPrimitive() function in this JavaScript tutorial.",
    "keywords": "javascript, javascript practice, primitive values, javascript practice online, object, comparison, javascript lab, data types, javascript tutor"
  },
  "difficulty": "Beginner",
  "time": 5,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Number Is Primitive",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify Node Commands In Zsh History",
            "file": "verify1-1.sh",
            "hint": "JavaScript can be run in the Terminal/SSH by typing 'node' and pressing Enter.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "javascript/arith_ops",
          "javascript/comp_ops",
          "javascript/data_types",
          "javascript/variables"
        ]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["Lotus-7"],
  "license": {
    "name": "CC-BY-4.0",
    "url": "https://github.com/30-seconds/30-seconds-of-code/blob/master/LICENSE",
    "repo": "https://github.com/30-seconds/30-seconds-of-code"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "数字是否为原始值",
      "description": "在本实验中，我们将探索 JavaScript 中原始值的概念。我们将学习如何使用 isPrimitive() 函数区分原始值和非原始值，该函数会将传递的值与从它创建的对象进行比较。通过一系列练习，我们将对 JavaScript 中的这一基本概念有更深入的理解。",
      "meta": {
        "title": "探索 JavaScript 中的原始值",
        "description": "在本 JavaScript 教程中，学习如何使用 isPrimitive() 函数区分原始值和非原始值。",
        "keywords": "JavaScript, JavaScript 练习，原始值，在线 JavaScript 练习，对象，比较，JavaScript 实验，数据类型，JavaScript 教程"
      },
      "details": {
        "steps": [
          {
            "title": "数字是否为原始值",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "在 Zsh 历史记录中验证 Node 命令",
                "file": "verify1-1.sh",
                "hint": "通过输入'node'并按 Enter 键，可以在终端/ SSH 中运行 JavaScript。"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Número es Primitivo",
      "description": "En este laboratorio, exploraremos el concepto de valores primitivos en JavaScript. Aprenderemos a diferenciar entre valores primitivos y no primitivos utilizando la función isPrimitive(), que compara el valor pasado con un objeto creado a partir de él. A través de una serie de ejercicios, obtendremos una comprensión más profunda de este concepto fundamental en JavaScript.",
      "meta": {
        "title": "Explorando valores primitivos en JavaScript",
        "description": "Aprende a diferenciar entre valores primitivos y no primitivos utilizando la función isPrimitive() en este tutorial de JavaScript.",
        "keywords": "javascript, práctica de javascript, valores primitivos, práctica de javascript en línea, objeto, comparación, laboratorio de javascript, tipos de datos, tutor de javascript"
      },
      "details": {
        "steps": [
          {
            "title": "Número es Primitivo",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Verificar comandos de Node en el historial de Zsh",
                "file": "verify1-1.sh",
                "hint": "JavaScript se puede ejecutar en la Terminal/SSH escribiendo 'node' y presionando Enter."
              }
            ]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Nombre est primitif",
      "description": "Dans ce laboratoire, nous allons explorer le concept de valeurs primitives en JavaScript. Nous apprendrons à différencier les valeurs primitives des valeurs non primitives à l'aide de la fonction isPrimitive(), qui compare la valeur passée avec un objet créé à partir de cette valeur. Grâce à une série d'exercices, nous acquerrons une compréhension plus approfondie de ce concept fondamental en JavaScript.",
      "meta": {
        "title": "Explorer les valeurs primitives en JavaScript",
        "description": "Apprenez à différencier les valeurs primitives des valeurs non primitives à l'aide de la fonction isPrimitive() dans ce tutoriel JavaScript.",
        "keywords": "javascript, pratique javascript, valeurs primitives, pratique javascript en ligne, objet, comparaison, laboratoire javascript, types de données, tuteur javascript"
      },
      "details": {
        "steps": [
          {
            "title": "Nombre est primitif",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Vérifier les commandes Node dans l'historique Zsh",
                "file": "verify1-1.sh",
                "hint": "JavaScript peut être exécuté dans le Terminal/SSH en tapant 'node' et en appuyant sur Entrée."
              }
            ]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Number Is Primitive",
      "description": "In diesem Lab werden wir das Konzept der primitiven Werte in JavaScript erkunden. Wir werden lernen, wie man zwischen primitiven und nicht-primitiven Werten unterscheidet, indem man die isPrimitive()-Funktion verwendet, die den übergebenen Wert mit einem aus ihm erstellten Objekt vergleicht. Durch eine Reihe von Übungen werden wir ein tieferes Verständnis dieses grundlegenden Konzepts in JavaScript erlangen.",
      "meta": {
        "title": "Das Erkunden primitiver Werte in JavaScript",
        "description": "Lernen Sie, wie man zwischen primitiven und nicht-primitiven Werten unterscheidet, indem Sie die isPrimitive()-Funktion in diesem JavaScript-Tutorial verwenden.",
        "keywords": "javascript, javascript Übung, primitive Werte, Online-JavaScript-Übung, Objekt, Vergleich, JavaScript-Lab, Datentypen, JavaScript-Lehrer"
      },
      "details": {
        "steps": [
          {
            "title": "Number Is Primitive",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Verifiziere Node-Befehle in der Zsh-Geschichte",
                "file": "verify1-1.sh",
                "hint": "JavaScript kann im Terminal/SSH ausgeführt werden, indem man 'node' eingibt und die Enter-Taste drückt."
              }
            ]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "数値がプリミティブかどうか",
      "description": "この実験では、JavaScript におけるプリミティブ値の概念を探ります。渡された値とそれから作成されたオブジェクトを比較する isPrimitive() 関数を使って、プリミティブ値と非プリミティブ値をどのように区別するかを学びます。一連の演習を通じて、JavaScript におけるこの基本概念を深く理解します。",
      "meta": {
        "title": "JavaScript におけるプリミティブ値の探索",
        "description": "この JavaScript チュートリアルでは、isPrimitive() 関数を使ってプリミティブ値と非プリミティブ値をどのように区別するかを学びましょう。",
        "keywords": "javascript, javascript 練習，プリミティブ値，オンラインでの javascript 練習，オブジェクト，比較，javascript 実験，データ型，javascript 講師"
      },
      "details": {
        "steps": [
          {
            "title": "数値がプリミティブかどうか",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "Zsh 履歴における Node コマンドを確認する",
                "file": "verify1-1.sh",
                "hint": "ターミナル/SSH で'node'と入力して Enter キーを押すことで JavaScript を実行できます。"
              }
            ]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Число является примитивным",
      "description": "В этой лабе мы будем изучать концепцию примитивных значений в JavaScript. Мы узнаем, как различать примитивные и не примитивные значения с использованием функции isPrimitive(), которая сравнивает переданное значение с объектом, созданным из него. Через серию упражнений мы углубим наше понимание этой фундаментальной концепции в JavaScript.",
      "meta": {
        "title": "Изучение примитивных значений в JavaScript",
        "description": "Изучите, как различать примитивные и не примитивные значения с использованием функции isPrimitive() в этом уроке по JavaScript.",
        "keywords": "javascript, практика javascript, примитивные значения, онлайн практика javascript, объект, сравнение, javascript лаб, типы данных, javascript учитель"
      },
      "details": {
        "steps": [
          {
            "title": "Число является примитивным",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "Проверить команды Node в истории Zsh",
                "file": "verify1-1.sh",
                "hint": "JavaScript можно запустить в Терминале/SSH, введя 'node' и нажав Enter."
              }
            ]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    },
    {
      "lang": "ko",
      "title": "Number Is Primitive",
      "description": "이 랩에서는 JavaScript 의 기본 값 개념을 탐구합니다. `isPrimitive()` 함수를 사용하여 기본 값과 비 기본 값을 구별하는 방법을 배우게 됩니다. 이 함수는 전달된 값을 해당 값에서 생성된 객체와 비교합니다. 일련의 연습을 통해 JavaScript 의 이 기본적인 개념에 대한 더 깊은 이해를 얻을 것입니다.",
      "meta": {
        "title": "JavaScript 에서 기본 값 탐구하기 - 자바스크립트 기본 값 확인",
        "description": "이 JavaScript 튜토리얼에서 `isPrimitive()` 함수를 사용하여 기본 값과 비 기본 값을 구별하는 방법을 알아보세요. 자바스크립트 기본 값, 데이터 타입 학습.",
        "keywords": "자바스크립트, 자바스크립트 연습, 기본 값, 자바스크립트 연습 온라인, 객체, 비교, 자바스크립트 랩, 데이터 타입, 자바스크립트 튜터"
      },
      "details": {
        "steps": [
          {
            "title": "Number Is Primitive",
            "text": "ko/step1.md",
            "verify": [
              {
                "name": "Zsh 히스토리에서 Node 명령어 확인",
                "file": "verify1-1.sh",
                "hint": "'node'를 입력하고 Enter 키를 눌러 터미널/SSH 에서 JavaScript 를 실행할 수 있습니다."
              }
            ]
          }
        ],
        "intro": {
          "text": "ko/intro.md",
          "title": "소개"
        },
        "finish": {
          "text": "ko/finish.md",
          "title": "요약"
        }
      }
    },
    {
      "lang": "pt",
      "title": "Número é Primitivo",
      "description": "Neste laboratório, exploraremos o conceito de valores primitivos em JavaScript. Aprenderemos como diferenciar entre valores primitivos e não primitivos usando a função `isPrimitive()`, que compara o valor passado com um objeto criado a partir dele. Através de uma série de exercícios, obteremos uma compreensão mais profunda deste conceito fundamental em JavaScript.",
      "meta": {
        "title": "Explorando Valores Primitivos em JavaScript - Tutorial e Prática",
        "description": "Aprenda a diferenciar entre valores primitivos e não primitivos usando a função `isPrimitive()` neste tutorial de JavaScript. Pratique e aprimore suas habilidades!",
        "keywords": "javascript, prática javascript, valores primitivos, tutorial javascript, objeto, comparação, laboratório javascript, tipos de dados, tutor javascript"
      },
      "details": {
        "steps": [
          {
            "title": "Número é Primitivo",
            "text": "pt/step1.md",
            "verify": [
              {
                "name": "Verificar Comandos Node no Histórico Zsh",
                "file": "verify1-1.sh",
                "hint": "JavaScript pode ser executado no Terminal/SSH digitando 'node' e pressionando Enter."
              }
            ]
          }
        ],
        "intro": {
          "text": "pt/intro.md",
          "title": "Introdução"
        },
        "finish": {
          "text": "pt/finish.md",
          "title": "Resumo"
        }
      }
    }
  ]
}
