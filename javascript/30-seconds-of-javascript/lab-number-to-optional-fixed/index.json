{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Number to Fixed-Point Notation Without Trailing Zeros",
  "description": "In this lab, we will explore how to format a number using fixed-point notation without trailing zeros in JavaScript. We will use the Number.prototype.toFixed() method to convert the number to a fixed-point notation string, followed by Number.parseFloat() to remove any trailing zeros. Finally, we will use a template literal to convert the number to a string. This lab is designed to help you gain a better understanding of how to format numbers in JavaScript using fixed-point notation.",
  "meta": {
    "title": "JavaScript | Fixed-Point Notation | Number Formatting",
    "description": "Learn how to format numbers using fixed-point notation without trailing zeros in JavaScript. Explore the toFixed() and parseFloat() methods to achieve clean number representation.",
    "keywords": "JavaScript, number formatting, fixed-point notation, toFixed, parseFloat, number representation"
  },
  "difficulty": "Beginner",
  "time": 10,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Number to Fixed-Point Notation Without Trailing Zeros",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify Node Commands Usage",
            "file": "verify1-1.sh",
            "hint": "JavaScript can be run in the Terminal/SSH by typing 'node' and pressing Enter.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "javascript/arith_ops",
          "javascript/comp_ops",
          "javascript/data_types",
          "javascript/template_lit",
          "javascript/variables"
        ]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["Lotus-7"],
  "license": {
    "name": "CC-BY-4.0",
    "url": "https://github.com/30-seconds/30-seconds-of-code/blob/master/LICENSE",
    "repo": "https://github.com/30-seconds/30-seconds-of-code"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "将数字转换为无尾随零的定点表示法",
      "description": "在本实验中，我们将探索如何在JavaScript中使用定点表示法格式化数字，且不保留尾随零。我们将使用 `Number.prototype.toFixed()` 方法将数字转换为定点表示法字符串，然后使用 `Number.parseFloat()` 去除任何尾随零。最后，我们将使用模板字面量将数字转换为字符串。本实验旨在帮助你更好地理解如何在JavaScript中使用定点表示法格式化数字。",
      "meta": {
        "title": "JavaScript | 定点表示法 | 数字格式化",
        "description": "学习如何在JavaScript中使用定点表示法格式化数字，且不保留尾随零。探索 `toFixed()` 和 `parseFloat()` 方法以实现简洁的数字表示。",
        "keywords": "JavaScript, 数字格式化, 定点表示法, toFixed, parseFloat, 数字表示"
      },
      "details": {
        "steps": [
          {
            "title": "将数字转换为无尾随零的定点表示法",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "验证Node命令的用法",
                "file": "verify1-1.sh",
                "hint": "在终端/SSH中，通过输入'node'并按下回车键，可以运行JavaScript。"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    }
  ]
}
