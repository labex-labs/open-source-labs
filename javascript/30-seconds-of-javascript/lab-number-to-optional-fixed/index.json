{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Number to Fixed-Point Notation Without Trailing Zeros",
  "description": "In this lab, we will explore how to format a number using fixed-point notation without trailing zeros in JavaScript. We will use the Number.prototype.toFixed() method to convert the number to a fixed-point notation string, followed by Number.parseFloat() to remove any trailing zeros. Finally, we will use a template literal to convert the number to a string. This lab is designed to help you gain a better understanding of how to format numbers in JavaScript using fixed-point notation.",
  "meta": {
    "title": "JavaScript | Fixed-Point Notation | Number Formatting",
    "description": "Learn how to format numbers using fixed-point notation without trailing zeros in JavaScript. Explore the toFixed() and parseFloat() methods to achieve clean number representation.",
    "keywords": "JavaScript, number formatting, fixed-point notation, toFixed, parseFloat, number representation"
  },
  "difficulty": "Beginner",
  "time": 5,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Number to Fixed-Point Notation Without Trailing Zeros",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify Node Commands Usage",
            "file": "verify1-1.sh",
            "hint": "JavaScript can be run in the Terminal/SSH by typing 'node' and pressing Enter.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "javascript/arith_ops",
          "javascript/comp_ops",
          "javascript/data_types",
          "javascript/template_lit",
          "javascript/variables"
        ]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["Lotus-7"],
  "license": {
    "name": "CC-BY-4.0",
    "url": "https://github.com/30-seconds/30-seconds-of-code/blob/master/LICENSE",
    "repo": "https://github.com/30-seconds/30-seconds-of-code"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "将数字转换为无尾随零的定点表示法",
      "description": "在本实验中，我们将探索如何在 JavaScript 中使用定点表示法格式化数字，且不保留尾随零。我们将使用 `Number.prototype.toFixed()` 方法将数字转换为定点表示法字符串，然后使用 `Number.parseFloat()` 去除任何尾随零。最后，我们将使用模板字面量将数字转换为字符串。本实验旨在帮助你更好地理解如何在 JavaScript 中使用定点表示法格式化数字。",
      "meta": {
        "title": "JavaScript | 定点表示法 | 数字格式化",
        "description": "学习如何在 JavaScript 中使用定点表示法格式化数字，且不保留尾随零。探索 `toFixed()` 和 `parseFloat()` 方法以实现简洁的数字表示。",
        "keywords": "JavaScript, 数字格式化，定点表示法，toFixed, parseFloat, 数字表示"
      },
      "details": {
        "steps": [
          {
            "title": "将数字转换为无尾随零的定点表示法",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "验证 Node 命令的用法",
                "file": "verify1-1.sh",
                "hint": "在终端/SSH 中，通过输入'node'并按下回车键，可以运行 JavaScript。"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Número a notación de punto fijo sin ceros finales",
      "description": "En este laboratorio, exploraremos cómo formatear un número utilizando notación de punto fijo sin ceros finales en JavaScript. Utilizaremos el método Number.prototype.toFixed() para convertir el número en una cadena de notación de punto fijo, seguido de Number.parseFloat() para eliminar cualquier cero final. Finalmente, utilizaremos una literal de plantilla para convertir el número en una cadena. Este laboratorio está diseñado para ayudarte a comprender mejor cómo formatear números en JavaScript utilizando notación de punto fijo.",
      "meta": {
        "title": "JavaScript | Notación de punto fijo | Formateo de números",
        "description": "Aprende cómo formatear números utilizando notación de punto fijo sin ceros finales en JavaScript. Explora los métodos toFixed() y parseFloat() para obtener una representación limpia de los números.",
        "keywords": "JavaScript, formateo de números, notación de punto fijo, toFixed, parseFloat, representación de números"
      },
      "details": {
        "steps": [
          {
            "title": "Número a notación de punto fijo sin ceros finales",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Verificar el uso de comandos de Node",
                "file": "verify1-1.sh",
                "hint": "JavaScript se puede ejecutar en la Terminal/SSH escribiendo 'node' y presionando Enter."
              }
            ]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Nombre en notation à virgule fixe sans zéros de fin",
      "description": "Dans ce laboratoire, nous allons explorer comment formater un nombre en utilisant la notation à virgule fixe sans zéros de fin en JavaScript. Nous utiliserons la méthode Number.prototype.toFixed() pour convertir le nombre en une chaîne de caractères en notation à virgule fixe, suivie de Number.parseFloat() pour supprimer tout zéro de fin. Enfin, nous utiliserons une littérale de gabarit pour convertir le nombre en une chaîne de caractères. Ce laboratoire est conçu pour vous aider à mieux comprendre comment formater des nombres en JavaScript en utilisant la notation à virgule fixe.",
      "meta": {
        "title": "JavaScript | Notation à virgule fixe | Formatage de nombres",
        "description": "Découvrez comment formater des nombres en utilisant la notation à virgule fixe sans zéros de fin en JavaScript. Explorez les méthodes toFixed() et parseFloat() pour obtenir une représentation propre de nombres.",
        "keywords": "JavaScript, formatage de nombres, notation à virgule fixe, toFixed, parseFloat, représentation de nombres"
      },
      "details": {
        "steps": [
          {
            "title": "Nombre en notation à virgule fixe sans zéros de fin",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Vérifier l'utilisation des commandes Node",
                "file": "verify1-1.sh",
                "hint": "JavaScript peut être exécuté dans le Terminal/SSH en tapant 'node' et en appuyant sur Entrée."
              }
            ]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Zahl in fester Komma-Schreibweise ohne Nachkommastellen am Ende",
      "description": "In diesem Lab werden wir untersuchen, wie man in JavaScript eine Zahl mit der festen Komma-Schreibweise ohne Nachkommastellen am Ende formatiert. Wir werden die Number.prototype.toFixed()-Methode verwenden, um die Zahl in einen String mit festen Komma-Schreibweise zu konvertieren, und anschließend Number.parseFloat(), um alle Nachkommastellen am Ende zu entfernen. Schließlich werden wir ein Template-Literal verwenden, um die Zahl in einen String zu konvertieren. Dieses Lab ist so konzipiert, dass es Ihnen hilft, ein besseres Verständnis davon zu erlangen, wie man in JavaScript Zahlen mit der festen Komma-Schreibweise formatiert.",
      "meta": {
        "title": "JavaScript | Feste Komma-Schreibweise | Zahlenformatierung",
        "description": "Lernen Sie, wie man in JavaScript Zahlen mit der festen Komma-Schreibweise ohne Nachkommastellen am Ende formatiert. Erkunden Sie die toFixed()- und parseFloat()-Methoden, um eine saubere Zahlenrepräsentation zu erreichen.",
        "keywords": "JavaScript, Zahlenformatierung, feste Komma-Schreibweise, toFixed, parseFloat, Zahlenrepräsentation"
      },
      "details": {
        "steps": [
          {
            "title": "Zahl in fester Komma-Schreibweise ohne Nachkommastellen am Ende",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Überprüfen der Verwendung von Node-Befehlen",
                "file": "verify1-1.sh",
                "hint": "JavaScript kann im Terminal/SSH ausgeführt werden, indem man 'node' eingibt und die Enter-Taste drückt."
              }
            ]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "末尾のゼロを含まない固定小数点数表記への数値変換",
      "description": "この実験では、JavaScript で末尾のゼロを含まない固定小数点数表記を使用して数値をフォーマットする方法を検討します。まず、`Number.prototype.toFixed()` メソッドを使用して数値を固定小数点数表記の文字列に変換し、その後 `Number.parseFloat()` を使用して末尾のゼロを削除します。最後に、テンプレートリテラルを使用して数値を文字列に変換します。この実験は、JavaScript で固定小数点数表記を使用して数値をフォーマットする方法をより深く理解するのに役立ちます。",
      "meta": {
        "title": "JavaScript | 固定小数点数表記 | 数値フォーマット",
        "description": "JavaScript で末尾のゼロを含まない固定小数点数表記を使用して数値をフォーマットする方法を学びましょう。クリーンな数値表現を達成するための `toFixed()` と `parseFloat()` メソッドを調べましょう。",
        "keywords": "JavaScript, 数値フォーマット，固定小数点数表記，toFixed, parseFloat, 数値表現"
      },
      "details": {
        "steps": [
          {
            "title": "末尾のゼロを含まない固定小数点数表記への数値変換",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "Node コマンドの使用を確認する",
                "file": "verify1-1.sh",
                "hint": "ターミナル/SSH で 'node' と入力して Enter キーを押すことで JavaScript を実行できます。"
              }
            ]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Преобразование числа в фиксированную точку без конечных нулей",
      "description": "В этом практическом занятии мы изучим, как форматировать число с использованием фиксированной точки без конечных нулей в JavaScript. Мы будем использовать метод Number.prototype.toFixed(), чтобы преобразовать число в строку с фиксированной точкой, а затем Number.parseFloat(), чтобы удалить все конечные нули. Наконец, мы будем использовать шаблонную литерал, чтобы преобразовать число в строку. Это практическое занятие предназначено для того, чтобы помочь вам лучше понять, как форматировать числа в JavaScript с использованием фиксированной точки.",
      "meta": {
        "title": "JavaScript | Фиксированная точка | Форматирование чисел",
        "description": "Изучите, как форматировать числа с использованием фиксированной точки без конечных нулей в JavaScript. Исследуйте методы toFixed() и parseFloat(), чтобы получить чистую репрезентацию числа.",
        "keywords": "JavaScript, форматирование чисел, фиксированная точка, toFixed, parseFloat, представление числа"
      },
      "details": {
        "steps": [
          {
            "title": "Преобразование числа в фиксированную точку без конечных нулей",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "Проверить использование команд Node",
                "file": "verify1-1.sh",
                "hint": "JavaScript можно запустить в Терминале/SSH, введя 'node' и нажав Enter."
              }
            ]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    }
  ]
}
