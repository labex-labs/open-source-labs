{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Superset of Iterable",
  "description": "In this lab, we will explore how to use the Set constructor and Array.prototype.every() method to determine if one iterable is a superset of another. The lab will walk you through the creation of a function that checks if the first iterable contains all the elements of the second iterable, excluding any duplicates. By the end of the lab, you will have a better understanding of how to work with sets in JavaScript.",
  "meta": {
    "title": "Mastering Set Operations in JavaScript",
    "description": "Explore how to use Set and Array.prototype.every() to determine if one iterable is a superset of another, excluding duplicates.",
    "keywords": "javascript, javascript practice, javascript practice online, set, iterable, javascript lab, array prototype every, superset, javascript tutor"
  },
  "difficulty": "Beginner",
  "time": 5,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Superset of Iterable",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify Node Commands Executed",
            "file": "verify1-1.sh",
            "hint": "JavaScript can be run in the Terminal/SSH by typing 'node' and pressing Enter.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "javascript/arith_ops",
          "javascript/comp_ops",
          "javascript/data_types",
          "javascript/spread_rest",
          "javascript/variables"
        ]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["Lotus-7"],
  "license": {
    "name": "CC-BY-4.0",
    "url": "https://github.com/30-seconds/30-seconds-of-code/blob/master/LICENSE",
    "repo": "https://github.com/30-seconds/30-seconds-of-code"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "可迭代对象的超集",
      "description": "在本实验中，我们将探索如何使用 Set 构造函数和 Array.prototype.every() 方法来确定一个可迭代对象是否是另一个可迭代对象的超集。本实验将引导你创建一个函数，该函数用于检查第一个可迭代对象是否包含第二个可迭代对象的所有元素，同时排除任何重复项。在实验结束时，你将对如何在 JavaScript 中使用集合有更深入的理解。",
      "meta": {
        "title": "掌握 JavaScript 中的集合操作",
        "description": "探索如何使用 Set 和 Array.prototype.every() 来确定一个可迭代对象是否是另一个可迭代对象的超集，同时排除重复项。",
        "keywords": "JavaScript, JavaScript 练习，在线 JavaScript 练习，集合，可迭代对象，JavaScript 实验，数组原型 every, 超集，JavaScript 教程"
      },
      "details": {
        "steps": [
          {
            "title": "可迭代对象的超集",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "验证已执行的 Node 命令",
                "file": "verify1-1.sh",
                "hint": "通过在终端/SSH 中输入'node'并按回车键，可以运行 JavaScript。"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Superconjunto de Iterable",
      "description": "En este laboratorio, exploraremos cómo usar el constructor Set y el método Array.prototype.every() para determinar si una iterable es un superconjunto de otra. El laboratorio te guiará en la creación de una función que comprueba si la primera iterable contiene todos los elementos de la segunda iterable, excluyendo cualquier duplicado. Al final del laboratorio, tendrás una mejor comprensión de cómo trabajar con conjuntos en JavaScript.",
      "meta": {
        "title": "Dominando las Operaciones de Conjunto en JavaScript",
        "description": "Explora cómo usar Set y Array.prototype.every() para determinar si una iterable es un superconjunto de otra, excluyendo duplicados.",
        "keywords": "javascript, práctica de javascript, práctica de javascript en línea, conjunto, iterable, laboratorio de javascript, array prototype every, superconjunto, tutor de javascript"
      },
      "details": {
        "steps": [
          {
            "title": "Superconjunto de Iterable",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Verificar que se ejecutaron los comandos de Node",
                "file": "verify1-1.sh",
                "hint": "Se puede ejecutar JavaScript en la Terminal/SSH escribiendo 'node' y presionando Enter."
              }
            ]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Surensemble d'itérable",
      "description": "Dans ce laboratoire, nous allons explorer comment utiliser le constructeur Set et la méthode Array.prototype.every() pour déterminer si une itérable est un surensemble d'une autre. Le laboratoire vous guidera dans la création d'une fonction qui vérifie si la première itérable contient tous les éléments de la seconde itérable, en excluant tout doublon. À la fin du laboratoire, vous aurez une meilleure compréhension de la manière de travailler avec les ensembles en JavaScript.",
      "meta": {
        "title": "Maîtriser les Opérations sur les Ensembles en JavaScript",
        "description": "Explorez comment utiliser Set et Array.prototype.every() pour déterminer si une itérable est un surensemble d'une autre, en excluant les doublons.",
        "keywords": "javascript, pratique javascript, pratique javascript en ligne, ensemble, itérable, laboratoire javascript, prototype d'array every, surensemble, tuteur javascript"
      },
      "details": {
        "steps": [
          {
            "title": "Surensemble d'itérable",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Vérifier que les commandes Node ont été exécutées",
                "file": "verify1-1.sh",
                "hint": "JavaScript peut être exécuté dans le Terminal/SSH en tapant 'node' et en appuyant sur Entrée."
              }
            ]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Übermenge von Iterable",
      "description": "In diesem Lab werden wir untersuchen, wie man den Set-Konstruktor und die Array.prototype.every()-Methode verwendet, um zu bestimmen, ob eine Iterable eine Übermenge einer anderen ist. Das Lab führt Sie Schritt für Schritt durch die Erstellung einer Funktion, die überprüft, ob die erste Iterable alle Elemente der zweiten Iterable enthält, wobei Duplikate ausgeschlossen werden. Am Ende des Labs wirst Du ein besseres Verständnis dafür haben, wie man mit Sets in JavaScript umgeht.",
      "meta": {
        "title": "Meisterung von Set-Operationen in JavaScript",
        "description": "Erkunden Sie, wie man Set und Array.prototype.every() verwendet, um zu bestimmen, ob eine Iterable eine Übermenge einer anderen ist, wobei Duplikate ausgeschlossen werden.",
        "keywords": "javascript, javascript Übung, online javascript Übung, set, iterable, javascript Lab, array prototype every, Übermenge, javascript Tutor"
      },
      "details": {
        "steps": [
          {
            "title": "Übermenge von Iterable",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Überprüfen, ob die Node-Befehle ausgeführt wurden",
                "file": "verify1-1.sh",
                "hint": "JavaScript kann im Terminal/SSH ausgeführt werden, indem man 'node' eingibt und die Enter-Taste drückt."
              }
            ]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "反復可能オブジェクトのスーパーセット",
      "description": "この実験では、1 つの反復可能オブジェクトが別の反復可能オブジェクトのスーパーセットであるかどうかを判断するために、Set コンストラクタと Array.prototype.every() メソッドをどのように使用するかを検討します。この実験では、最初の反復可能オブジェクトが 2 番目の反復可能オブジェクトのすべての要素を含み、重複は除外されているかどうかをチェックする関数の作成方法を説明します。この実験が終了するとき、JavaScript でセットを操作する方法をより深く理解しているはずです。",
      "meta": {
        "title": "JavaScript におけるセット操作のマスター",
        "description": "Set と Array.prototype.every() を使用して、1 つの反復可能オブジェクトが別の反復可能オブジェクトのスーパーセットであり、重複は除外されているかどうかを判断する方法を探ります。",
        "keywords": "javascript, javascript 練習，オンライン javascript 練習，set, 反復可能オブジェクト，javascript 実験，配列プロトタイプ every, スーパーセット，javascript チューター"
      },
      "details": {
        "steps": [
          {
            "title": "反復可能オブジェクトのスーパーセット",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "実行された Node コマンドを確認する",
                "file": "verify1-1.sh",
                "hint": "ターミナル/SSH で'node'と入力して Enter キーを押すことで JavaScript を実行できます。"
              }
            ]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Супермножество итерируемых объектов",
      "description": "В этом практическом занятии мы изучим, как использовать конструктор Set и метод Array.prototype.every() для определения, является ли один итерируемый объект супермножеством другого. Практическое занятие проведет вас по созданию функции, которая проверяет, содержит ли первый итерируемый объект все элементы второго итерируемого объекта, исключая любые дубликаты. В конце практического занятия вы будете лучше понимать, как работать с множествами в JavaScript.",
      "meta": {
        "title": "Мастерство в операциях с множествами в JavaScript",
        "description": "Изучите, как использовать Set и Array.prototype.every() для определения, является ли один итерируемый объект супермножеством другого, исключая дубликаты.",
        "keywords": "javascript, практика javascript, онлайн практика javascript, set, итерируемый объект, практическое занятие javascript, array prototype every, супермножество, javascript-учитель"
      },
      "details": {
        "steps": [
          {
            "title": "Супермножество итерируемых объектов",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "Проверить выполнение команд Node",
                "file": "verify1-1.sh",
                "hint": "JavaScript можно запустить в Терминале/SSH, введя 'node' и нажав Enter."
              }
            ]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    }
  ]
}
