{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Superset of Iterable",
  "description": "In this lab, we will explore how to use the Set constructor and Array.prototype.every() method to determine if one iterable is a superset of another. The lab will walk you through the creation of a function that checks if the first iterable contains all the elements of the second iterable, excluding any duplicates. By the end of the lab, you will have a better understanding of how to work with sets in JavaScript.",
  "meta": {
    "title": "Mastering Set Operations in JavaScript",
    "description": "Explore how to use Set and Array.prototype.every() to determine if one iterable is a superset of another, excluding duplicates.",
    "keywords": "javascript, javascript practice, javascript practice online, set, iterable, javascript lab, array prototype every, superset, javascript tutor"
  },
  "difficulty": "Beginner",
  "time": 10,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Superset of Iterable",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify Node Commands Executed",
            "file": "verify1-1.sh",
            "hint": "JavaScript can be run in the Terminal/SSH by typing 'node' and pressing Enter.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "javascript/arith_ops",
          "javascript/comp_ops",
          "javascript/data_types",
          "javascript/spread_rest",
          "javascript/variables"
        ]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["Lotus-7"],
  "license": {
    "name": "CC-BY-4.0",
    "url": "https://github.com/30-seconds/30-seconds-of-code/blob/master/LICENSE",
    "repo": "https://github.com/30-seconds/30-seconds-of-code"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "可迭代对象的超集",
      "description": "在本实验中，我们将探索如何使用Set构造函数和Array.prototype.every()方法来确定一个可迭代对象是否是另一个可迭代对象的超集。本实验将引导你创建一个函数，该函数用于检查第一个可迭代对象是否包含第二个可迭代对象的所有元素，同时排除任何重复项。在实验结束时，你将对如何在JavaScript中使用集合有更深入的理解。",
      "meta": {
        "title": "掌握JavaScript中的集合操作",
        "description": "探索如何使用Set和Array.prototype.every()来确定一个可迭代对象是否是另一个可迭代对象的超集，同时排除重复项。",
        "keywords": "JavaScript, JavaScript练习, 在线JavaScript练习, 集合, 可迭代对象, JavaScript实验, 数组原型every, 超集, JavaScript教程"
      },
      "details": {
        "steps": [
          {
            "title": "可迭代对象的超集",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "验证已执行的Node命令",
                "file": "verify1-1.sh",
                "hint": "通过在终端/SSH中输入'node'并按回车键，可以运行JavaScript。"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    }
  ]
}
