{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Mapping String Characters in JavaScript",
  "description": "In this lab, we will explore the mapString function in JavaScript. This function allows us to create a new string by applying a provided function to every character in a given string. We'll learn how to use String.prototype.split(), Array.prototype.map(), and Array.prototype.join() to implement mapString and see how it can be useful in various scenarios.",
  "meta": {
    "title": "Mastering String Character Mapping in JavaScript",
    "description": "Explore the powerful mapString function in JavaScript and learn how to transform string characters using split(), map(), and join() methods.",
    "keywords": "string manipulation, character mapping, javascript, javascript practice, javascript practice online, programming tutorial, javascript lab, string transformation, javascript tutor"
  },
  "difficulty": "Beginner",
  "time": 5,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Map String",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify Node Usage In Zsh History",
            "file": "verify1-1.sh",
            "hint": "JavaScript can be run in the Terminal/SSH by typing 'node' and pressing Enter.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "javascript/arith_ops",
          "javascript/comp_ops",
          "javascript/data_types",
          "javascript/higher_funcs",
          "javascript/variables"
        ]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["Lotus-7"],
  "license": {
    "name": "CC-BY-4.0",
    "url": "https://github.com/30-seconds/30-seconds-of-code/blob/master/LICENSE",
    "repo": "https://github.com/30-seconds/30-seconds-of-code"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "在 JavaScript 中映射字符串字符",
      "description": "在本实验中，我们将探索 JavaScript 中的 mapString 函数。该函数使我们能够通过将一个给定函数应用于一个给定字符串中的每个字符来创建一个新字符串。我们将学习如何使用 String.prototype.split()、Array.prototype.map() 和 Array.prototype.join() 来实现 mapString，并了解它在各种场景中的用途。",
      "meta": {
        "title": "掌握 JavaScript 中的字符串字符映射",
        "description": "探索 JavaScript 中强大的 mapString 函数，并学习如何使用 split()、map() 和 join() 方法转换字符串字符。",
        "keywords": "字符串操作，字符映射，JavaScript, JavaScript 练习，在线 JavaScript 练习，编程教程，JavaScript 实验，字符串转换，JavaScript 教程"
      },
      "details": {
        "steps": [
          {
            "title": "映射字符串",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "在 Zsh 历史记录中验证 Node 的使用情况",
                "file": "verify1-1.sh",
                "hint": "通过输入 'node' 并按 Enter 键，可以在终端/SSH 中运行 JavaScript。"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Mapeo de Caracteres de Cadena en JavaScript",
      "description": "En este laboratorio, exploraremos la función mapString en JavaScript. Esta función nos permite crear una nueva cadena aplicando una función proporcionada a cada carácter de una cadena dada. Aprenderemos cómo usar String.prototype.split(), Array.prototype.map() y Array.prototype.join() para implementar mapString y ver cómo puede ser útil en varios escenarios.",
      "meta": {
        "title": "Dominando el Mapeo de Caracteres de Cadena en JavaScript",
        "description": "Explore la poderosa función mapString en JavaScript y aprenda cómo transformar los caracteres de una cadena utilizando los métodos split(), map() y join().",
        "keywords": "manipulación de cadenas, mapeo de caracteres, javascript, práctica de javascript, práctica de javascript en línea, tutorial de programación, laboratorio de javascript, transformación de cadenas, tutor de javascript"
      },
      "details": {
        "steps": [
          {
            "title": "Mapear Cadena",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Verificar el Uso de Node en el Historial de Zsh",
                "file": "verify1-1.sh",
                "hint": "JavaScript se puede ejecutar en la Terminal/SSH escribiendo 'node' y presionando Enter."
              }
            ]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Mapper les caractères de chaîne en JavaScript",
      "description": "Dans ce laboratoire, nous allons explorer la fonction mapString en JavaScript. Cette fonction nous permet de créer une nouvelle chaîne de caractères en appliquant une fonction fournie à chaque caractère d'une chaîne de caractères donnée. Nous allons apprendre à utiliser String.prototype.split(), Array.prototype.map() et Array.prototype.join() pour implémenter mapString et voir comment elle peut être utile dans diverses situations.",
      "meta": {
        "title": "Maîtriser la carte des caractères de chaîne en JavaScript",
        "description": "Explorez la puissante fonction mapString en JavaScript et apprenez à transformer les caractères de chaîne à l'aide des méthodes split(), map() et join().",
        "keywords": "manipulation de chaîne, carte de caractères, javascript, pratique javascript, pratique javascript en ligne, tutoriel de programmation, laboratoire javascript, transformation de chaîne, tuteur javascript"
      },
      "details": {
        "steps": [
          {
            "title": "Mapper une chaîne",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Vérifier l'utilisation de Node dans l'historique Zsh",
                "file": "verify1-1.sh",
                "hint": "JavaScript peut être exécuté dans le Terminal/SSH en tapant 'node' et en appuyant sur Entrée."
              }
            ]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Das Abbilden von Zeichen in einer Zeichenfolge in JavaScript",
      "description": "In diesem Lab werden wir die mapString-Funktion in JavaScript erkunden. Diese Funktion ermöglicht es uns, eine neue Zeichenfolge zu erstellen, indem wir eine bereitgestellte Funktion auf jedes Zeichen in einer gegebenen Zeichenfolge anwenden. Wir werden lernen, wie man String.prototype.split(), Array.prototype.map() und Array.prototype.join() verwendet, um mapString zu implementieren, und wie es in verschiedenen Szenarien nützlich sein kann.",
      "meta": {
        "title": "Das Beherrschen der Zeichenabbildung in einer Zeichenfolge in JavaScript",
        "description": "Erkunden Sie die leistungsstarke mapString-Funktion in JavaScript und lernen Sie, wie Sie Zeichen in einer Zeichenfolge mit den Methoden split(), map() und join() transformieren können.",
        "keywords": "Zeichenfolgenmanipulation, Zeichenabbildung, JavaScript, JavaScript-Ubung, Online-JavaScript-Ubung, Programmier-Tutorial, JavaScript-Lab, Zeichenfolgentransformation, JavaScript-Tutor"
      },
      "details": {
        "steps": [
          {
            "title": "Zeichenfolge abbilden",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Überprüfen der Verwendung von Node in der Zsh-Geschichte",
                "file": "verify1-1.sh",
                "hint": "JavaScript kann im Terminal/SSH ausgeführt werden, indem man 'node' eingibt und die Eingabetaste drückt."
              }
            ]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "JavaScript における文字列の文字のマッピング",
      "description": "この実験では、JavaScript の mapString 関数を調べます。この関数を使うと、与えられた文字列の各文字に提供された関数を適用することで新しい文字列を作成できます。String.prototype.split()、Array.prototype.map()、Array.prototype.join() を使って mapString を実装する方法を学び、さまざまなシチュエーションでどのように役立つかを見ていきましょう。",
      "meta": {
        "title": "JavaScript における文字列の文字マッピングのマスター",
        "description": "JavaScript の強力な mapString 関数を調べ、split()、map()、join() メソッドを使って文字列を変換する方法を学びましょう。",
        "keywords": "文字列操作，文字マッピング，JavaScript, JavaScript 練習，オンライン JavaScript 練習，プログラミングチュートリアル，JavaScript 実験，文字列変換，JavaScript 講師"
      },
      "details": {
        "steps": [
          {
            "title": "文字列のマッピング",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "Zsh 履歴における Node の使用を確認する",
                "file": "verify1-1.sh",
                "hint": "ターミナル/SSH で'node'と入力して Enter キーを押すことで JavaScript を実行できます。"
              }
            ]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Преобразование символов строки в JavaScript",
      "description": "В этом лабе мы будем изучать функцию mapString в JavaScript. Эта функция позволяет создать новую строку, применяя заданную функцию к каждому символу в заданной строке. Мы узнаем, как использовать String.prototype.split(), Array.prototype.map() и Array.prototype.join() для реализации mapString и увидим, как она может быть полезной в различных сценариях.",
      "meta": {
        "title": "Мастерство в преобразовании символов строки в JavaScript",
        "description": "Изучите мощную функцию mapString в JavaScript и узнайте, как преобразовать символы строки с использованием методов split(), map() и join().",
        "keywords": "манипуляция строками, преобразование символов, javascript, практика javascript, онлайн практика javascript, учебник по программированию, javascript лаб, преобразование строк, javascript учитель"
      },
      "details": {
        "steps": [
          {
            "title": "Преобразование строки",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "Проверить использование Node в истории Zsh",
                "file": "verify1-1.sh",
                "hint": "JavaScript можно запустить в Терминале/SSH, введя 'node' и нажав Enter."
              }
            ]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    },
    {
      "lang": "ko",
      "title": "JavaScript 문자열 내 문자 매핑",
      "description": "이 랩에서는 JavaScript 의 mapString 함수를 살펴봅니다. 이 함수를 사용하면 주어진 문자열의 모든 문자에 제공된 함수를 적용하여 새로운 문자열을 만들 수 있습니다. String.prototype.split(), Array.prototype.map(), Array.prototype.join() 을 사용하여 mapString 을 구현하는 방법과 다양한 시나리오에서 어떻게 유용하게 사용될 수 있는지 알아보겠습니다.",
      "meta": {
        "title": "JavaScript 에서 문자열 문자 매핑 마스터하기",
        "description": "JavaScript 의 강력한 mapString 함수를 살펴보고 split(), map(), join() 메서드를 사용하여 문자열 문자를 변환하는 방법을 알아보세요.",
        "keywords": "문자열 조작, 문자 매핑, javascript, 자바스크립트 연습, 자바스크립트 온라인 연습, 프로그래밍 튜토리얼, 자바스크립트 랩, 문자열 변환, 자바스크립트 튜터"
      },
      "details": {
        "steps": [
          {
            "title": "문자열 매핑 (Map String)",
            "text": "ko/step1.md",
            "verify": [
              {
                "name": "Zsh 히스토리에서 Node 사용 확인",
                "file": "verify1-1.sh",
                "hint": "터미널/SSH 에서 'node'를 입력하고 Enter 키를 눌러 JavaScript 를 실행할 수 있습니다."
              }
            ]
          }
        ],
        "intro": {
          "text": "ko/intro.md",
          "title": "소개"
        },
        "finish": {
          "text": "ko/finish.md",
          "title": "요약"
        }
      }
    },
    {
      "lang": "pt",
      "title": "Mapeamento de Caracteres de String em JavaScript",
      "description": "Neste laboratório, exploraremos a função `mapString` em JavaScript. Esta função nos permite criar uma nova string aplicando uma função fornecida a cada caractere em uma string dada. Aprenderemos como usar `String.prototype.split()`, `Array.prototype.map()` e `Array.prototype.join()` para implementar `mapString` e veremos como ela pode ser útil em vários cenários.",
      "meta": {
        "title": "Dominando o Mapeamento de Caracteres de String em JavaScript",
        "description": "Explore a poderosa função `mapString` em JavaScript e aprenda a transformar caracteres de string usando os métodos `split()`, `map()` e `join()`. Aprenda a manipular strings e aprimore suas habilidades de programação em JavaScript.",
        "keywords": "manipulação de strings, mapeamento de caracteres, javascript, prática de javascript, exercícios javascript, tutorial de programação, laboratório javascript, transformação de strings, tutor javascript"
      },
      "details": {
        "steps": [
          {
            "title": "Mapear String",
            "text": "pt/step1.md",
            "verify": [
              {
                "name": "Verificar Uso do Node no Histórico Zsh",
                "file": "verify1-1.sh",
                "hint": "JavaScript pode ser executado no Terminal/SSH digitando 'node' e pressionando Enter."
              }
            ]
          }
        ],
        "intro": {
          "text": "pt/intro.md",
          "title": "Introdução"
        },
        "finish": {
          "text": "pt/finish.md",
          "title": "Resumo"
        }
      }
    }
  ]
}
