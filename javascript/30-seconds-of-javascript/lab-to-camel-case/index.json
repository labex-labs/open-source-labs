{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Convert Strings to Camelcase with JavaScript",
  "description": "In this lab, we will learn how to convert strings to camelcase using JavaScript. Camelcase is a naming convention used in programming where multi-word identifiers are written in a way that each word, except the first one, starts with a capital letter without any spaces or underscores between them. The toCamelCase() function provided in this lab uses regular expressions and array methods to convert strings to camelcase.",
  "meta": {
    "title": "Convert Strings to Camelcase | JavaScript Tutorials",
    "description": "Learn how to convert strings to camelcase using JavaScript. Camelcase is a popular naming convention in programming for multi-word identifiers.",
    "keywords": "camelcase, string conversion, JavaScript, programming tutorials, coding exercises"
  },
  "difficulty": "Beginner",
  "time": 10,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Camelcase String",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify Node Commands In ZSH History",
            "file": "verify1-1.sh",
            "hint": "JavaScript can be run in the Terminal/SSH by typing 'node' and pressing Enter.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "javascript/arith_ops",
          "javascript/comp_ops",
          "javascript/data_types",
          "javascript/higher_funcs",
          "javascript/variables"
        ]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["Lotus-7"],
  "license": {
    "name": "CC-BY-4.0",
    "url": "https://github.com/30-seconds/30-seconds-of-code/blob/master/LICENSE",
    "repo": "https://github.com/30-seconds/30-seconds-of-code"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "使用 JavaScript 将字符串转换为驼峰命名法",
      "description": "在本实验中，我们将学习如何使用 JavaScript 将字符串转换为驼峰命名法。驼峰命名法是编程中使用的一种命名约定，其中多单词标识符的书写方式是，除第一个单词外，每个单词都以大写字母开头，单词之间没有任何空格或下划线。本实验中提供的 toCamelCase() 函数使用正则表达式和数组方法将字符串转换为驼峰命名法。",
      "meta": {
        "title": "将字符串转换为驼峰命名法 | JavaScript 教程",
        "description": "学习如何使用 JavaScript 将字符串转换为驼峰命名法。驼峰命名法是编程中用于多单词标识符的一种流行命名约定。",
        "keywords": "驼峰命名法, 字符串转换, JavaScript, 编程教程, 编码练习"
      },
      "details": {
        "steps": [
          {
            "title": "驼峰命名法字符串",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "在 ZSH 历史记录中验证 Node 命令",
                "file": "verify1-1.sh",
                "hint": "通过在终端/SSH 中输入 'node' 并按回车键，可以运行 JavaScript。"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    }
  ]
}
