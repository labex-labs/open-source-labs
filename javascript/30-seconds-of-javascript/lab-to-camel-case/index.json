{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Convert Strings to Camelcase with JavaScript",
  "description": "In this lab, we will learn how to convert strings to camelcase using JavaScript. Camelcase is a naming convention used in programming where multi-word identifiers are written in a way that each word, except the first one, starts with a capital letter without any spaces or underscores between them. The toCamelCase() function provided in this lab uses regular expressions and array methods to convert strings to camelcase.",
  "meta": {
    "title": "Convert Strings to Camelcase | JavaScript Tutorials",
    "description": "Learn how to convert strings to camelcase using JavaScript. Camelcase is a popular naming convention in programming for multi-word identifiers.",
    "keywords": "camelcase, string conversion, JavaScript, programming tutorials, coding exercises"
  },
  "difficulty": "Beginner",
  "time": 5,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Camelcase String",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify Node Commands In ZSH History",
            "file": "verify1-1.sh",
            "hint": "JavaScript can be run in the Terminal/SSH by typing 'node' and pressing Enter.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "javascript/arith_ops",
          "javascript/comp_ops",
          "javascript/data_types",
          "javascript/higher_funcs",
          "javascript/variables"
        ]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["Lotus-7"],
  "license": {
    "name": "CC-BY-4.0",
    "url": "https://github.com/30-seconds/30-seconds-of-code/blob/master/LICENSE",
    "repo": "https://github.com/30-seconds/30-seconds-of-code"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "使用 JavaScript 将字符串转换为驼峰命名法",
      "description": "在本实验中，我们将学习如何使用 JavaScript 将字符串转换为驼峰命名法。驼峰命名法是编程中使用的一种命名约定，其中多单词标识符的书写方式是，除第一个单词外，每个单词都以大写字母开头，单词之间没有任何空格或下划线。本实验中提供的 toCamelCase() 函数使用正则表达式和数组方法将字符串转换为驼峰命名法。",
      "meta": {
        "title": "将字符串转换为驼峰命名法 | JavaScript 教程",
        "description": "学习如何使用 JavaScript 将字符串转换为驼峰命名法。驼峰命名法是编程中用于多单词标识符的一种流行命名约定。",
        "keywords": "驼峰命名法，字符串转换，JavaScript, 编程教程，编码练习"
      },
      "details": {
        "steps": [
          {
            "title": "驼峰命名法字符串",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "在 ZSH 历史记录中验证 Node 命令",
                "file": "verify1-1.sh",
                "hint": "通过在终端/SSH 中输入 'node' 并按回车键，可以运行 JavaScript。"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Convertir cadenas a camelCase con JavaScript",
      "description": "En este laboratorio, aprenderemos cómo convertir cadenas a camelCase utilizando JavaScript. CamelCase es una convención de nomenclatura utilizada en la programación donde los identificadores de varias palabras se escriben de manera que cada palabra, excepto la primera, comienza con una letra mayúscula sin espacios ni subrayados entre ellas. La función toCamelCase() proporcionada en este laboratorio utiliza expresiones regulares y métodos de matriz para convertir cadenas a camelCase.",
      "meta": {
        "title": "Convertir cadenas a camelCase | Tutoriales de JavaScript",
        "description": "Aprende cómo convertir cadenas a camelCase utilizando JavaScript. CamelCase es una convención de nomenclatura popular en la programación para identificadores de varias palabras.",
        "keywords": "camelCase, conversión de cadenas, JavaScript, tutoriales de programación, ejercicios de codificación"
      },
      "details": {
        "steps": [
          {
            "title": "Cadena en camelCase",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Verificar comandos de Node en el historial de ZSH",
                "file": "verify1-1.sh",
                "hint": "JavaScript se puede ejecutar en la Terminal/SSH escribiendo 'node' y presionando Enter."
              }
            ]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Convertir des chaînes de caractères en camelCase avec JavaScript",
      "description": "Dans ce laboratoire, nous allons apprendre à convertir des chaînes de caractères en camelCase à l'aide de JavaScript. Le camelCase est une convention de nommage utilisée en programmation où les identifiants composés de plusieurs mots sont écrits de manière telle que chaque mot, sauf le premier, commence par une lettre majuscule sans aucun espace ou tiret de soulignement entre eux. La fonction toCamelCase() fournie dans ce laboratoire utilise des expressions régulières et des méthodes d'itération pour convertir des chaînes de caractères en camelCase.",
      "meta": {
        "title": "Convertir des chaînes de caractères en camelCase | Tutoriels JavaScript",
        "description": "Apprenez à convertir des chaînes de caractères en camelCase à l'aide de JavaScript. Le camelCase est une convention de nommage populaire en programmation pour les identifiants composés de plusieurs mots.",
        "keywords": "camelCase, conversion de chaîne, JavaScript, tutoriels de programmation, exercices de codage"
      },
      "details": {
        "steps": [
          {
            "title": "Chaîne de caractères en camelCase",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Vérifier les commandes Node dans l'historique ZSH",
                "file": "verify1-1.sh",
                "hint": "JavaScript peut être exécuté dans le Terminal/SSH en tapant 'node' et en appuyant sur Entrée."
              }
            ]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Zeichenketten in CamelCase mit JavaScript umwandeln",
      "description": "In diesem Lab werden wir lernen, wie man Zeichenketten in CamelCase mit JavaScript umwandelt. CamelCase ist eine Namenskonvention in der Programmierung, bei der mehrwortige Bezeichner so geschrieben werden, dass jedes Wort, außer dem ersten, mit einem Großbuchstaben beginnt und keine Leerzeichen oder Unterstriche dazwischen sind. Die in diesem Lab bereitgestellte toCamelCase()-Funktion verwendet reguläre Ausdrücke und Array-Methoden, um Zeichenketten in CamelCase umzuwandeln.",
      "meta": {
        "title": "Zeichenketten in CamelCase umwandeln | JavaScript-Tutorials",
        "description": "Lernen Sie, wie man Zeichenketten in CamelCase mit JavaScript umwandelt. CamelCase ist eine beliebte Namenskonvention in der Programmierung für mehrwortige Bezeichner.",
        "keywords": "CamelCase, Zeichenkettenumwandlung, JavaScript, Programmier-Tutorials, Codeübungen"
      },
      "details": {
        "steps": [
          {
            "title": "CamelCase-Zeichenkette",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Überprüfen von Node-Befehlen in der ZSH-Geschichte",
                "file": "verify1-1.sh",
                "hint": "JavaScript kann im Terminal/SSH ausgeführt werden, indem man 'node' eingibt und die Enter-Taste drückt."
              }
            ]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "JavaScript を使って文字列をキャメルケースに変換する",
      "description": "この実験では、JavaScript を使って文字列をキャメルケースに変換する方法を学びます。キャメルケースは、プログラミングで使用される命名規則であり、複数語の識別子は、最初の単語を除いて各単語が大文字で始まり、それらの間にスペースやアンダースコアがない書き方で記述されます。この実験で提供されている toCamelCase() 関数は、正規表現と配列メソッドを使って文字列をキャメルケースに変換します。",
      "meta": {
        "title": "文字列をキャメルケースに変換する | JavaScript チュートリアルズ",
        "description": "JavaScript を使って文字列をキャメルケースに変換する方法を学びましょう。キャメルケースは、複数語の識別子に対するプログラミングにおける人気のある命名規則です。",
        "keywords": "キャメルケース，文字列変換，JavaScript, プログラミングチュートリアル，コーディング演習"
      },
      "details": {
        "steps": [
          {
            "title": "キャメルケース文字列",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "ZSH 履歴の Node コマンドを確認する",
                "file": "verify1-1.sh",
                "hint": "ターミナル/SSH で'node'と入力して Enter キーを押すことで JavaScript を実行できます。"
              }
            ]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Преобразование строк в camelCase с использованием JavaScript",
      "description": "В этом практическом занятии мы научимся преобразовывать строки в camelCase с использованием JavaScript. CamelCase - это соглашение об именовании в программировании, при котором идентификаторы, состоящие из нескольких слов, записываются так, чтобы каждое слово, начиная со второго, начиналось с заглавной буквы, а между ними не было пробелов или знаков подчеркивания. Функция toCamelCase(), представленная в этом практическом занятии, использует регулярные выражения и методы массивов для преобразования строк в camelCase.",
      "meta": {
        "title": "Преобразование строк в camelCase | Руководства по JavaScript",
        "description": "Изучите, как преобразовать строки в camelCase с использованием JavaScript. CamelCase - популярное соглашение об именовании в программировании для идентификаторов, состоящих из нескольких слов.",
        "keywords": "camelCase, преобразование строк, JavaScript, учебники по программированию, упражнения по программированию"
      },
      "details": {
        "steps": [
          {
            "title": "Строка в camelCase",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "Проверить команды Node в истории ZSH",
                "file": "verify1-1.sh",
                "hint": "JavaScript можно запустить в Терминале/SSH, введя 'node' и нажав Enter."
              }
            ]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    },
    {
      "lang": "ko",
      "title": "JavaScript 로 문자열을 Camelcase 로 변환하기",
      "description": "이 랩에서는 JavaScript 를 사용하여 문자열을 camelCase 로 변환하는 방법을 배웁니다. Camelcase 는 프로그래밍에서 사용되는 명명 규칙으로, 여러 단어로 이루어진 식별자를 첫 번째 단어를 제외한 각 단어가 대문자로 시작하고 공백이나 밑줄 없이 작성하는 방식입니다. 이 랩에서 제공되는 toCamelCase() 함수는 정규 표현식과 배열 메서드를 사용하여 문자열을 camelCase 로 변환합니다.",
      "meta": {
        "title": "JavaScript Camelcase 변환 방법 | 자바스크립트 튜토리얼",
        "description": "JavaScript 를 사용하여 문자열을 camelCase 로 변환하는 방법을 알아보세요. Camelcase 는 여러 단어로 이루어진 식별자를 위한 프로그래밍에서 널리 사용되는 명명 규칙입니다.",
        "keywords": "camelcase, 문자열 변환, JavaScript, 프로그래밍 튜토리얼, 코딩 연습"
      },
      "details": {
        "steps": [
          {
            "title": "Camelcase 문자열",
            "text": "ko/step1.md",
            "verify": [
              {
                "name": "ZSH 히스토리에서 Node 명령어 확인",
                "file": "verify1-1.sh",
                "hint": "JavaScript 는 터미널/SSH 에서 'node'를 입력하고 Enter 키를 눌러 실행할 수 있습니다."
              }
            ]
          }
        ],
        "intro": {
          "text": "ko/intro.md",
          "title": "소개"
        },
        "finish": {
          "text": "ko/finish.md",
          "title": "요약"
        }
      }
    },
    {
      "lang": "pt",
      "title": "Converter Strings para CamelCase com JavaScript",
      "description": "Neste laboratório, aprenderemos como converter strings para camelCase usando JavaScript. CamelCase é uma convenção de nomenclatura usada em programação, onde identificadores de várias palavras são escritos de forma que cada palavra, exceto a primeira, comece com uma letra maiúscula, sem espaços ou underscores entre elas. A função `toCamelCase()` fornecida neste laboratório usa expressões regulares e métodos de array para converter strings para camelCase.",
      "meta": {
        "title": "Converter Strings para CamelCase em JavaScript | Tutoriais",
        "description": "Aprenda a converter strings para camelCase usando JavaScript. CamelCase é uma convenção de nomenclatura popular em programação para identificadores de várias palavras.",
        "keywords": "camelCase, conversão de string, JavaScript, tutoriais de programação, exercícios de codificação"
      },
      "details": {
        "steps": [
          {
            "title": "String em CamelCase",
            "text": "pt/step1.md",
            "verify": [
              {
                "name": "Verificar Comandos Node no Histórico ZSH",
                "file": "verify1-1.sh",
                "hint": "JavaScript pode ser executado no Terminal/SSH digitando 'node' e pressionando Enter."
              }
            ]
          }
        ],
        "intro": {
          "text": "pt/intro.md",
          "title": "Introdução"
        },
        "finish": {
          "text": "pt/finish.md",
          "title": "Resumo"
        }
      }
    }
  ]
}
