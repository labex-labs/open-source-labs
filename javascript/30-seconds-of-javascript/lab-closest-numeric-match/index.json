{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Closest Numeric Match",
  "description": "In this lab, we will explore how to find the closest number from an array using JavaScript. We will use the Array.prototype.reduce() method and the Math.abs() function to compare the distance between each element in the array and a target value, returning the closest match. By the end of this lab, you will have a better understanding of how to implement this useful function in your JavaScript projects.",
  "meta": {
    "title": "Closest Numeric Match",
    "description": "Discover how to find the closest number in an array using JavaScript's powerful reduce() method and Math.abs() function.",
    "keywords": "javascript, javascript practice, javascript practice online, javascript lab, closest number, reduce, javascript tutor, array, numeric match"
  },
  "difficulty": "Beginner",
  "time": 5,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Closest Numeric Match",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify Node Commands Usage",
            "file": "verify1-1.sh",
            "hint": "JavaScript can be run in the Terminal/SSH by typing 'node' and pressing Enter.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "javascript/arith_ops",
          "javascript/comp_ops",
          "javascript/higher_funcs",
          "javascript/variables"
        ]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["Lotus-7"],
  "license": {
    "name": "CC-BY-4.0",
    "url": "https://github.com/30-seconds/30-seconds-of-code/blob/master/LICENSE",
    "repo": "https://github.com/30-seconds/30-seconds-of-code"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "最接近的数值匹配",
      "description": "在本实验中，我们将探索如何使用 JavaScript 从数组中找到最接近的数字。我们将使用 Array.prototype.reduce() 方法和 Math.abs() 函数来比较数组中每个元素与目标值之间的距离，返回最接近的匹配项。完成本实验后，你将更好地理解如何在你的 JavaScript 项目中实现这个有用的函数。",
      "meta": {
        "title": "最接近的数值匹配",
        "description": "探索如何使用 JavaScript 强大的 reduce() 方法和 Math.abs() 函数在数组中找到最接近的数字。",
        "keywords": "JavaScript, JavaScript 练习，在线 JavaScript 练习，JavaScript 实验，最接近的数字，reduce, JavaScript 教程，数组，数值匹配"
      },
      "details": {
        "steps": [
          {
            "title": "最接近的数值匹配",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "验证 Node 命令的用法",
                "file": "verify1-1.sh",
                "hint": "在终端/SSH 中，通过输入'node'并按下回车键，可以运行 JavaScript。"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Coincidencia Numérica Más Cercana",
      "description": "En este laboratorio, exploraremos cómo encontrar el número más cercano de una matriz utilizando JavaScript. Utilizaremos el método Array.prototype.reduce() y la función Math.abs() para comparar la distancia entre cada elemento de la matriz y un valor objetivo, devolviendo la coincidencia más cercana. Al final de este laboratorio, tendrás una mejor comprensión de cómo implementar esta función útil en tus proyectos de JavaScript.",
      "meta": {
        "title": "Coincidencia Numérica Más Cercana",
        "description": "Descubre cómo encontrar el número más cercano en una matriz utilizando el poderoso método reduce() y la función Math.abs() de JavaScript.",
        "keywords": "javascript, práctica de javascript, práctica de javascript en línea, laboratorio de javascript, número más cercano, reducir, tutor de javascript, matriz, coincidencia numérica"
      },
      "details": {
        "steps": [
          {
            "title": "Coincidencia Numérica Más Cercana",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Verificar el uso de comandos de Node",
                "file": "verify1-1.sh",
                "hint": "JavaScript se puede ejecutar en la Terminal/SSH escribiendo 'node' y presionando Enter."
              }
            ]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Correspondance numérique la plus proche",
      "description": "Dans ce laboratoire, nous allons explorer la manière de trouver le nombre le plus proche d'un tableau en utilisant JavaScript. Nous utiliserons la méthode Array.prototype.reduce() et la fonction Math.abs() pour comparer la distance entre chaque élément du tableau et une valeur cible, en retournant la correspondance la plus proche. À la fin de ce laboratoire, vous aurez une meilleure compréhension de la manière de mettre en œuvre cette fonction utile dans vos projets JavaScript.",
      "meta": {
        "title": "Correspondance numérique la plus proche",
        "description": "Découvrez comment trouver le nombre le plus proche dans un tableau en utilisant la puissante méthode reduce() et la fonction Math.abs() de JavaScript.",
        "keywords": "javascript, pratique javascript, pratique javascript en ligne, laboratoire javascript, nombre le plus proche, réduire, tuteur javascript, tableau, correspondance numérique"
      },
      "details": {
        "steps": [
          {
            "title": "Correspondance numérique la plus proche",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Vérifier l'utilisation des commandes Node",
                "file": "verify1-1.sh",
                "hint": "JavaScript peut être exécuté dans le Terminal/SSH en tapant 'node' et en appuyant sur Entrée."
              }
            ]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Das nächstliegende numerische Match",
      "description": "In diesem Lab werden wir untersuchen, wie man mithilfe von JavaScript die Zahl im Array findet, die am nächsten an einen bestimmten Wert liegt. Wir werden die Array.prototype.reduce()-Methode und die Math.abs()-Funktion verwenden, um die Entfernung zwischen jedem Element im Array und einem Zielwert zu vergleichen und das am nächsten liegende Element zurückzugeben. Am Ende dieses Labs werden Sie ein besseres Verständnis dafür haben, wie Sie diese nützliche Funktion in Ihren JavaScript-Projekten implementieren können.",
      "meta": {
        "title": "Das nächstliegende numerische Match",
        "description": "Entdecken Sie, wie Sie mithilfe der leistungsstarken reduce()-Methode und der Math.abs()-Funktion von JavaScript die am nächsten liegende Zahl in einem Array finden.",
        "keywords": "javascript, javascript Übung, online javascript Übung, javascript Lab, nächstliegende Zahl, reduzieren, javascript Tutor, Array, numerisches Match"
      },
      "details": {
        "steps": [
          {
            "title": "Das nächstliegende numerische Match",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Verifizieren der Verwendung von Node-Befehlen",
                "file": "verify1-1.sh",
                "hint": "JavaScript kann im Terminal/SSH ausgeführt werden, indem man 'node' eingibt und die Eingabetaste drückt."
              }
            ]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "最も近い数値一致",
      "description": "この実験では、JavaScript を使って配列から最も近い数を見つける方法を探ります。配列の各要素と目標値の間の距離を比較し、最も近い一致を返すために、`Array.prototype.reduce()` メソッドと `Math.abs()` 関数を使います。この実験が終わるとき、JavaScript プロジェクトでこの便利な関数を実装する方法をよりよく理解しているでしょう。",
      "meta": {
        "title": "最も近い数値一致",
        "description": "JavaScript の強力な `reduce()` メソッドと `Math.abs()` 関数を使って、配列内の最も近い数を見つける方法を学びましょう。",
        "keywords": "javascript, javascript 練習，オンライン javascript 練習，javascript 実験，最も近い数，reduce, javascript チューター, 配列，数値一致"
      },
      "details": {
        "steps": [
          {
            "title": "最も近い数値一致",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "Node コマンドの使用を確認する",
                "file": "verify1-1.sh",
                "hint": "ターミナル/SSH で 'node' と入力して Enter キーを押すことで、JavaScript を実行できます。"
              }
            ]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Ближайшее числовое совпадение",
      "description": "В этом практическом занятии мы изучим, как найти ближайшее число из массива с использованием JavaScript. Мы будем использовать метод Array.prototype.reduce() и функцию Math.abs() для сравнения расстояния между каждым элементом массива и целевым значением, возвращая ближайшее совпадение. В конце этого практического занятия вы будете лучше понимать, как реализовать эту полезную функцию в своих проектах на JavaScript.",
      "meta": {
        "title": "Ближайшее числовое совпадение",
        "description": "Откройте, как найти ближайшее число в массиве с использованием мощного метода reduce() и функции Math.abs() в JavaScript.",
        "keywords": "javascript, практика javascript, онлайн практика javascript, практическое занятие javascript, ближайшее число, reduce, преподаватель javascript, массив, числовое совпадение"
      },
      "details": {
        "steps": [
          {
            "title": "Ближайшее числовое совпадение",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "Проверить использование команд Node",
                "file": "verify1-1.sh",
                "hint": "JavaScript можно запустить в Терминале/SSH, введя 'node' и нажав Enter."
              }
            ]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    },
    {
      "lang": "ko",
      "title": "가장 가까운 숫자 일치",
      "description": "이 랩에서는 JavaScript 를 사용하여 배열에서 가장 가까운 숫자를 찾는 방법을 살펴봅니다. Array.prototype.reduce() 메서드와 Math.abs() 함수를 사용하여 배열의 각 요소와 대상 값 사이의 거리를 비교하고 가장 가까운 일치 항목을 반환합니다. 이 랩을 마치면 JavaScript 프로젝트에서 이 유용한 함수를 구현하는 방법에 대한 이해도가 높아질 것입니다.",
      "meta": {
        "title": "JavaScript 로 배열에서 가장 가까운 숫자 찾기",
        "description": "JavaScript 의 강력한 reduce() 메서드와 Math.abs() 함수를 사용하여 배열에서 가장 가까운 숫자를 찾는 방법을 알아보세요.",
        "keywords": "javascript, 자바스크립트 연습, 자바스크립트 온라인 연습, 자바스크립트 랩, 가장 가까운 숫자, reduce, 자바스크립트 튜터, 배열, 숫자 일치, 자바스크립트 튜토리얼"
      },
      "details": {
        "steps": [
          {
            "title": "가장 가까운 숫자 일치",
            "text": "ko/step1.md",
            "verify": [
              {
                "name": "Node 명령어 사용 확인",
                "file": "verify1-1.sh",
                "hint": "터미널/SSH 에서 'node'를 입력하고 Enter 키를 눌러 JavaScript 를 실행할 수 있습니다."
              }
            ]
          }
        ],
        "intro": {
          "text": "ko/intro.md",
          "title": "소개"
        },
        "finish": {
          "text": "ko/finish.md",
          "title": "요약"
        }
      }
    },
    {
      "lang": "pt",
      "title": "Correspondência Numérica Mais Próxima",
      "description": "Neste laboratório, exploraremos como encontrar o número mais próximo de um array usando JavaScript. Usaremos o método Array.prototype.reduce() e a função Math.abs() para comparar a distância entre cada elemento do array e um valor alvo, retornando a correspondência mais próxima. Ao final deste laboratório, você terá uma melhor compreensão de como implementar esta função útil em seus projetos JavaScript.",
      "meta": {
        "title": "Encontre o Número Mais Próximo em um Array com JavaScript",
        "description": "Descubra como encontrar o número mais próximo em um array usando o poderoso método reduce() do JavaScript e a função Math.abs(). Aprenda a otimizar suas buscas numéricas!",
        "keywords": "javascript, prática javascript, exercícios javascript, laboratório javascript, número mais próximo, reduce, tutorial javascript, array, correspondência numérica, encontrar número próximo, JavaScript Portugal"
      },
      "details": {
        "steps": [
          {
            "title": "Correspondência Numérica Mais Próxima",
            "text": "pt/step1.md",
            "verify": [
              {
                "name": "Verificar o Uso de Comandos Node",
                "file": "verify1-1.sh",
                "hint": "JavaScript pode ser executado no Terminal/SSH digitando 'node' e pressionando Enter."
              }
            ]
          }
        ],
        "intro": {
          "text": "pt/intro.md",
          "title": "Introdução"
        },
        "finish": {
          "text": "pt/finish.md",
          "title": "Resumo"
        }
      }
    }
  ]
}
