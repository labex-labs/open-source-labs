{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Recursive Nesting of Linked JavaScript Objects",
  "description": "In this lab, we will explore a JavaScript function called nest that recursively nests objects linked to one another in a flat array. The function uses recursion, Array.prototype.filter(), and Array.prototype.map() to filter and nest the items based on their id and parent_id properties. By the end of this lab, you will have a better understanding of how to use recursion to create nested objects in JavaScript.",
  "meta": {
    "title": "Recursively Nest JavaScript Objects | Coding Tutorial",
    "description": "Explore a JavaScript function called 'nest' that recursively nests objects linked to one another in a flat array. Learn how to use recursion, Array.prototype.filter(), and Array.prototype.map() to create nested objects.",
    "keywords": "JavaScript, Recursion, Nested Objects, Array.prototype.filter, Array.prototype.map"
  },
  "difficulty": "Beginner",
  "time": 10,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Nest Objects",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify Node Command Usage",
            "file": "verify1-1.sh",
            "hint": "JavaScript can be run in the Terminal/SSH by typing 'node' and pressing Enter.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "javascript/arith_ops",
          "javascript/array_methods",
          "javascript/comp_ops",
          "javascript/data_types",
          "javascript/destr_assign",
          "javascript/dom_traverse",
          "javascript/higher_funcs",
          "javascript/spread_rest",
          "javascript/variables"
        ]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["Lotus-7"],
  "license": {
    "name": "CC-BY-4.0",
    "url": "https://github.com/30-seconds/30-seconds-of-code/blob/master/LICENSE",
    "repo": "https://github.com/30-seconds/30-seconds-of-code"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "JavaScript 中相互链接对象的递归嵌套",
      "description": "在本实验中，我们将探索一个名为 nest 的 JavaScript 函数，它会递归地将相互链接的对象嵌套在一个扁平数组中。该函数使用递归、Array.prototype.filter() 和 Array.prototype.map() 根据对象的 id 和 parent_id 属性来过滤和嵌套这些项。完成本实验后，你将更好地理解如何使用递归在 JavaScript 中创建嵌套对象。",
      "meta": {
        "title": "递归嵌套 JavaScript 对象 | 编码教程",
        "description": "探索一个名为 'nest' 的 JavaScript 函数，它会递归地将相互链接的对象嵌套在一个扁平数组中。学习如何使用递归、Array.prototype.filter() 和 Array.prototype.map() 创建嵌套对象。",
        "keywords": "JavaScript, 递归, 嵌套对象, Array.prototype.filter, Array.prototype.map"
      },
      "details": {
        "steps": [
          {
            "title": "嵌套对象",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "验证 Node 命令的用法",
                "file": "verify1-1.sh",
                "hint": "在终端/SSH 中，通过输入 'node' 并按下回车键即可运行 JavaScript。"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    }
  ]
}
