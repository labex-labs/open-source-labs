{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Invoke Functions on Arguments",
  "description": "In this lab, we will explore the functionality of invoking multiple functions on given arguments and returning the results. Specifically, we will create a function that takes in multiple functions and returns a new function that applies each of those functions to the arguments it receives. This will help us better understand the use of Array.prototype.map() and Function.prototype.apply() in JavaScript.",
  "meta": {
    "title": "JavaScript Functions | Invoking Multiple Functions",
    "description": "Explore the functionality of invoking multiple functions on given arguments and returning the results in this JavaScript programming tutorial.",
    "keywords": "JavaScript, Functions, Invoke, Multiple Functions, Array.prototype.map(), Function.prototype.apply()"
  },
  "difficulty": "Beginner",
  "time": 5,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Invoke Functions on Arguments",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify Node Commands in Bash History",
            "file": "verify1-1.sh",
            "hint": "JavaScript can be run in the Terminal/SSH by typing 'node' and pressing Enter.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "javascript/arith_ops",
          "javascript/comp_ops",
          "javascript/data_types",
          "javascript/higher_funcs",
          "javascript/spread_rest",
          "javascript/variables"
        ]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["Lotus-7"],
  "license": {
    "name": "CC-BY-4.0",
    "url": "https://github.com/30-seconds/30-seconds-of-code/blob/master/LICENSE",
    "repo": "https://github.com/30-seconds/30-seconds-of-code"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "对参数调用函数",
      "description": "在本实验中，我们将探索对给定参数调用多个函数并返回结果的功能。具体来说，我们将创建一个函数，该函数接受多个函数并返回一个新函数，该新函数将这些函数中的每一个应用于它接收到的参数。这将帮助我们更好地理解 JavaScript 中 Array.prototype.map() 和 Function.prototype.apply() 的用法。",
      "meta": {
        "title": "JavaScript 函数 | 调用多个函数",
        "description": "在本 JavaScript 编程教程中，探索对给定参数调用多个函数并返回结果的功能。",
        "keywords": "JavaScript, 函数，调用，多个函数，Array.prototype.map(), Function.prototype.apply()"
      },
      "details": {
        "steps": [
          {
            "title": "对参数调用函数",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "在 Bash 历史记录中验证 Node 命令",
                "file": "verify1-1.sh",
                "hint": "通过输入'node'并按 Enter 键，可以在终端/SSH 中运行 JavaScript。"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Invocar Funciones con Argumentos",
      "description": "En este laboratorio, exploraremos la funcionalidad de invocar múltiples funciones con argumentos dados y devolver los resultados. Específicamente, crearemos una función que tome múltiples funciones y devuelva una nueva función que aplique cada una de esas funciones a los argumentos que recibe. Esto nos ayudará a entender mejor el uso de Array.prototype.map() y Function.prototype.apply() en JavaScript.",
      "meta": {
        "title": "Funciones de JavaScript | Invocar Múltiples Funciones",
        "description": "Explora la funcionalidad de invocar múltiples funciones con argumentos dados y devolver los resultados en este tutorial de programación de JavaScript.",
        "keywords": "JavaScript, Funciones, Invocar, Múltiples Funciones, Array.prototype.map(), Function.prototype.apply()"
      },
      "details": {
        "steps": [
          {
            "title": "Invocar Funciones con Argumentos",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Verificar los Comandos de Node en el Historial de Bash",
                "file": "verify1-1.sh",
                "hint": "JavaScript se puede ejecutar en la Terminal/SSH escribiendo 'node' y presionando Enter."
              }
            ]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Appeler des fonctions sur des arguments",
      "description": "Dans ce laboratoire, nous allons explorer la fonctionnalité d'appeler plusieurs fonctions sur des arguments donnés et de retourner les résultats. Plus précisément, nous allons créer une fonction qui prend plusieurs fonctions en entrée et retourne une nouvelle fonction qui applique chacune de ces fonctions aux arguments qu'elle reçoit. Cela nous aidera à mieux comprendre l'utilisation de Array.prototype.map() et Function.prototype.apply() en JavaScript.",
      "meta": {
        "title": "Fonctions JavaScript | Appel de plusieurs fonctions",
        "description": "Explorez la fonctionnalité d'appeler plusieurs fonctions sur des arguments donnés et de retourner les résultats dans ce tutoriel de programmation JavaScript.",
        "keywords": "JavaScript, Fonctions, Appeler, Plusieurs fonctions, Array.prototype.map(), Function.prototype.apply()"
      },
      "details": {
        "steps": [
          {
            "title": "Appeler des fonctions sur des arguments",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Vérifier les commandes Node dans l'historique Bash",
                "file": "verify1-1.sh",
                "hint": "JavaScript peut être exécuté dans le Terminal/SSH en tapant 'node' et en appuyant sur Entrée."
              }
            ]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Funktionen auf Argumenten aufrufen",
      "description": "In diesem Lab werden wir die Funktionalität erkunden, mehrere Funktionen auf gegebene Argumente aufzurufen und die Ergebnisse zurückzugeben. Genauer gesagt werden wir eine Funktion erstellen, die mehrere Funktionen annimmt und eine neue Funktion zurückgibt, die jede dieser Funktionen auf die Argumente anwendet, die sie erhält. Dies wird uns helfen, die Verwendung von Array.prototype.map() und Function.prototype.apply() in JavaScript besser zu verstehen.",
      "meta": {
        "title": "JavaScript-Funktionen | Mehrere Funktionen aufrufen",
        "description": "Erkunden Sie in diesem JavaScript-Programmier-Tutorial die Funktionalität, mehrere Funktionen auf gegebene Argumente aufzurufen und die Ergebnisse zurückzugeben.",
        "keywords": "JavaScript, Funktionen, Aufrufen, Mehrere Funktionen, Array.prototype.map(), Function.prototype.apply()"
      },
      "details": {
        "steps": [
          {
            "title": "Funktionen auf Argumenten aufrufen",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Überprüfen von Node-Befehlen in der Bash-Historie",
                "file": "verify1-1.sh",
                "hint": "JavaScript kann im Terminal/SSH ausgeführt werden, indem man 'node' eingibt und die Enter-Taste drückt."
              }
            ]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "引数に対する関数の呼び出し",
      "description": "この実験では、与えられた引数に対して複数の関数を呼び出し、結果を返す機能を調べます。具体的には、複数の関数を受け取り、受け取った引数にそれぞれの関数を適用する新しい関数を作成します。これにより、JavaScript における Array.prototype.map() と Function.prototype.apply() の使い方をより深く理解することができます。",
      "meta": {
        "title": "JavaScript 関数 | 複数の関数の呼び出し",
        "description": "この JavaScript プログラミング チュートリアルでは、与えられた引数に対して複数の関数を呼び出し、結果を返す機能を調べます。",
        "keywords": "JavaScript, 関数，呼び出し，複数の関数，Array.prototype.map(), Function.prototype.apply()"
      },
      "details": {
        "steps": [
          {
            "title": "引数に対する関数の呼び出し",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "Bash 履歴の Node コマンドを確認する",
                "file": "verify1-1.sh",
                "hint": "ターミナル/SSH で 'node' と入力して Enter キーを押すことで、JavaScript を実行できます。"
              }
            ]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Вызов функций с аргументами",
      "description": "В этом лабораторном задании мы исследуем функциональность вызова нескольких функций с заданными аргументами и возврата результатов. В частности, мы создадим функцию, которая принимает несколько функций и возвращает новую функцию, которая применяет каждую из этих функций к аргументам, которые она получает. Это поможет нам лучше понять использование Array.prototype.map() и Function.prototype.apply() в JavaScript.",
      "meta": {
        "title": "JavaScript-функции | Вызов нескольких функций",
        "description": "Исследуйте функциональность вызова нескольких функций с заданными аргументами и возврата результатов в этом руководстве по программированию на JavaScript.",
        "keywords": "JavaScript, Функции, Вызов, Несколько функций, Array.prototype.map(), Function.prototype.apply()"
      },
      "details": {
        "steps": [
          {
            "title": "Вызов функций с аргументами",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "Проверить команды Node в истории Bash",
                "file": "verify1-1.sh",
                "hint": "JavaScript можно запустить в Терминале/SSH, введя 'node' и нажав Enter."
              }
            ]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    }
  ]
}
