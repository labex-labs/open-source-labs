{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Retrieve Maximum Elements from Array",
  "description": "In this lab, we will explore the maxN function which is used to return the n maximum elements from a given array. We will learn how to use Array.prototype.sort(), the spread operator (...), and Array.prototype.slice() to sort and slice the array in descending order and return the specified number of elements. This lab will help you improve your understanding of manipulating arrays in JavaScript.",
  "meta": {
    "title": "Get N Max Elements from Array in JavaScript | Array Manipulation",
    "description": "Learn how to use JavaScript's built-in array methods to get the n maximum elements from an array. Improve your skills in array manipulation and sorting.",
    "keywords": "JavaScript, array, max elements, array manipulation, sorting, slice, sort"
  },
  "difficulty": "Beginner",
  "time": 5,
  "hidden": true,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "N Max Elements",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify Node Commands in Zsh History",
            "file": "verify1-1.sh",
            "hint": "JavaScript can be run in the Terminal/SSH by typing 'node' and pressing Enter.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "javascript/arith_ops",
          "javascript/comp_ops",
          "javascript/data_types",
          "javascript/variables"
        ]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["Lotus-7"],
  "license": {
    "name": "CC-BY-4.0",
    "url": "https://github.com/30-seconds/30-seconds-of-code/blob/master/LICENSE",
    "repo": "https://github.com/30-seconds/30-seconds-of-code"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "从数组中检索最大元素",
      "description": "在本实验中，我们将探究 maxN 函数，该函数用于从给定数组中返回 n 个最大元素。我们将学习如何使用 Array.prototype.sort()、展开运算符 (...) 和 Array.prototype.slice() 对数组进行降序排序和切片，并返回指定数量的元素。本实验将帮助你加深对 JavaScript 中数组操作的理解。",
      "meta": {
        "title": "在 JavaScript 中从数组获取 N 个最大元素 | 数组操作",
        "description": "学习如何使用 JavaScript 的内置数组方法从数组中获取 n 个最大元素。提升你在数组操作和排序方面的技能。",
        "keywords": "JavaScript, 数组，最大元素，数组操作，排序，切片，排序"
      },
      "details": {
        "steps": [
          {
            "title": "N 个最大元素",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "在 Zsh 历史记录中验证 Node 命令",
                "file": "verify1-1.sh",
                "hint": "通过输入'node'并按 Enter 键，可以在终端/SSH 中运行 JavaScript。"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Recuperar elementos máximos de un array",
      "description": "En este laboratorio, exploraremos la función maxN que se utiliza para devolver los n elementos máximos de un array dado. Aprenderemos a usar Array.prototype.sort(), el operador de propagación (...) y Array.prototype.slice() para ordenar y rebanar el array en orden descendente y devolver el número especificado de elementos. Este laboratorio te ayudará a mejorar tu comprensión de la manipulación de arrays en JavaScript.",
      "meta": {
        "title": "Obtener N elementos máximos de un array en JavaScript | Manipulación de arrays",
        "description": "Aprende a usar los métodos integrados de arrays de JavaScript para obtener los n elementos máximos de un array. Mejora tus habilidades en la manipulación y clasificación de arrays.",
        "keywords": "JavaScript, array, elementos máximos, manipulación de arrays, clasificación, rebanado, ordenación"
      },
      "details": {
        "steps": [
          {
            "title": "N Elementos Máximos",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Verificar los comandos de Node en el historial de Zsh",
                "file": "verify1-1.sh",
                "hint": "Se puede ejecutar JavaScript en la Terminal/SSH escribiendo 'node' y presionando Enter."
              }
            ]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Récupérer les éléments maximaux d'un tableau",
      "description": "Dans ce laboratoire, nous allons explorer la fonction maxN qui est utilisée pour renvoyer les n éléments maximaux d'un tableau donné. Nous allons apprendre à utiliser Array.prototype.sort(), l'opérateur de propagation (...) et Array.prototype.slice() pour trier et découper le tableau par ordre décroissant et renvoyer le nombre spécifié d'éléments. Ce laboratoire vous aidera à mieux comprendre la manipulation des tableaux en JavaScript.",
      "meta": {
        "title": "Obtenir les n plus grands éléments d'un tableau en JavaScript | Manipulation de tableaux",
        "description": "Apprenez à utiliser les méthodes de tableau intégrées de JavaScript pour obtenir les n plus grands éléments d'un tableau. Améliorez vos compétences en manipulation et tri de tableaux.",
        "keywords": "JavaScript, tableau, éléments maximaux, manipulation de tableaux, tri, découpage, tri"
      },
      "details": {
        "steps": [
          {
            "title": "N plus grands éléments",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Vérifier les commandes Node dans l'historique Zsh",
                "file": "verify1-1.sh",
                "hint": "JavaScript peut être exécuté dans le Terminal/SSH en tapant 'node' et en appuyant sur Entrée."
              }
            ]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Maximale Elemente aus einem Array abrufen",
      "description": "In diesem Lab werden wir die maxN-Funktion untersuchen, die verwendet wird, um die n größten Elemente aus einem gegebenen Array zurückzugeben. Wir werden lernen, wie man Array.prototype.sort(), den Spread-Operator (...) und Array.prototype.slice() verwendet, um das Array in absteigender Reihenfolge zu sortieren und abzuschneiden und die angegebene Anzahl von Elementen zurückzugeben. Dieses Lab wird Ihnen helfen, Ihr Verständnis der Manipulation von Arrays in JavaScript zu verbessern.",
      "meta": {
        "title": "Maximale n Elemente aus einem Array in JavaScript abrufen | Array-Manipulation",
        "description": "Lernen Sie, wie Sie die eingebauten Array-Methoden in JavaScript verwenden, um die n größten Elemente aus einem Array abzurufen. Verbessern Sie Ihre Fähigkeiten bei der Array-Manipulation und -Sortierung.",
        "keywords": "JavaScript, Array, maximale Elemente, Array-Manipulation, Sortierung, Slicing, Sortieren"
      },
      "details": {
        "steps": [
          {
            "title": "n maximale Elemente",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Überprüfen von Node-Befehlen in der Zsh-Geschichte",
                "file": "verify1-1.sh",
                "hint": "JavaScript kann im Terminal/SSH ausgeführt werden, indem man 'node' eingibt und die Enter-Taste drückt."
              }
            ]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "配列から最大要素を取得する",
      "description": "この実験では、与えられた配列から n 個の最大要素を返す maxN 関数を調べます。Array.prototype.sort()、スプレッド演算子 (...)、および Array.prototype.slice() を使って、配列を降順にソートしてスライスし、指定された要素数を返す方法を学びます。この実験は、JavaScript における配列操作の理解を深めるのに役立ちます。",
      "meta": {
        "title": "JavaScript で配列から N 個の最大要素を取得する | 配列操作",
        "description": "JavaScript の組み込みの配列メソッドを使って、配列から n 個の最大要素を取得する方法を学びましょう。配列操作とソートの技術を向上させましょう。",
        "keywords": "JavaScript, 配列，最大要素，配列操作，ソート，スライス，sort"
      },
      "details": {
        "steps": [
          {
            "title": "N 個の最大要素",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "Zsh 履歴の Node コマンドを確認する",
                "file": "verify1-1.sh",
                "hint": "ターミナル/SSH で 'node' と入力して Enter キーを押すことで、JavaScript を実行できます。"
              }
            ]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Получить максимальные элементы из массива",
      "description": "В этом лабе мы исследуем функцию maxN, которая используется для возврата n максимальных элементов из заданного массива. Мы узнаем, как использовать Array.prototype.sort(), оператор расширения (...) и Array.prototype.slice() для сортировки и среза массива по убыванию и возврата указанного количества элементов. Этот лаб поможет вам лучше понять манипуляции с массивами в JavaScript.",
      "meta": {
        "title": "Получить N максимальных элементов из массива в JavaScript | Обработка массивов",
        "description": "Изучите, как использовать встроенные методы массивов JavaScript для получения n максимальных элементов из массива. Улучшите свои навыки в обработке и сортировке массивов.",
        "keywords": "JavaScript, массив, максимальные элементы, обработка массивов, сортировка, срез, сортировка"
      },
      "details": {
        "steps": [
          {
            "title": "N максимальных элементов",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "Проверить команды Node в истории Zsh",
                "file": "verify1-1.sh",
                "hint": "JavaScript можно запустить в Терминале/SSH, введя 'node' и нажав Enter."
              }
            ]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    },
    {
      "lang": "ko",
      "title": "배열에서 최대 요소 가져오기",
      "description": "이 랩에서는 주어진 배열에서 n 개의 최대 요소를 반환하는 데 사용되는 maxN 함수를 살펴보겠습니다. Array.prototype.sort(), spread operator (...), Array.prototype.slice() 를 사용하여 배열을 내림차순으로 정렬하고 슬라이스하여 지정된 수의 요소를 반환하는 방법을 배우게 됩니다. 이 랩은 JavaScript 에서 배열을 조작하는 이해도를 높이는 데 도움이 될 것입니다.",
      "meta": {
        "title": "JavaScript 에서 배열에서 N 개의 최대 요소 가져오기 | 배열 조작",
        "description": "JavaScript 의 내장 배열 메서드를 사용하여 배열에서 n 개의 최대 요소를 가져오는 방법을 알아보세요. 배열 조작 및 정렬 기술을 향상시키세요.",
        "keywords": "JavaScript, 배열, 최대 요소, 배열 조작, 정렬, 슬라이스, sort"
      },
      "details": {
        "steps": [
          {
            "title": "N Max 요소",
            "text": "ko/step1.md",
            "verify": [
              {
                "name": "Zsh 히스토리에서 Node 명령어 확인",
                "file": "verify1-1.sh",
                "hint": "'node'를 입력하고 Enter 키를 눌러 터미널/SSH 에서 JavaScript 를 실행할 수 있습니다."
              }
            ]
          }
        ],
        "intro": {
          "text": "ko/intro.md",
          "title": "소개"
        },
        "finish": {
          "text": "ko/finish.md",
          "title": "요약"
        }
      }
    },
    {
      "lang": "pt",
      "title": "Recuperar Elementos Máximos de um Array",
      "description": "Neste laboratório, exploraremos a função maxN, que é usada para retornar os n elementos máximos de um array fornecido. Aprenderemos como usar Array.prototype.sort(), o operador spread (...), e Array.prototype.slice() para ordenar e fatiar o array em ordem decrescente e retornar o número especificado de elementos. Este laboratório ajudará você a aprimorar sua compreensão da manipulação de arrays em JavaScript.",
      "meta": {
        "title": "Obter N Elementos Máximos de um Array em JavaScript | Manipulação de Arrays",
        "description": "Aprenda como usar os métodos de array embutidos do JavaScript para obter os n elementos máximos de um array. Melhore suas habilidades em manipulação e ordenação de arrays.",
        "keywords": "JavaScript, array, elementos máximos, manipulação de array, ordenação, slice, sort"
      },
      "details": {
        "steps": [
          {
            "title": "N Max Elements",
            "text": "pt/step1.md",
            "verify": [
              {
                "name": "Verificar Comandos Node no Histórico Zsh",
                "file": "verify1-1.sh",
                "hint": "JavaScript pode ser executado no Terminal/SSH digitando 'node' e pressionando Enter."
              }
            ]
          }
        ],
        "intro": {
          "text": "pt/intro.md",
          "title": "Introdução"
        },
        "finish": {
          "text": "pt/finish.md",
          "title": "Resumo"
        }
      }
    }
  ]
}
