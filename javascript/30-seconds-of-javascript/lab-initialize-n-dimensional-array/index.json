{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Initialize N-Dimensional Array",
  "description": "In this lab, we will explore how to create n-dimensional arrays with a given value using recursion in JavaScript. We will use the Array.from() and Array.prototype.map() methods to generate rows where each is a new array initialized using initializeNDArray(). By the end of this lab, you will have a solid understanding of how to create multi-dimensional arrays in JavaScript and how to use recursion to accomplish this task.",
  "meta": {
    "title": "Mastering N-Dimensional Arrays in JavaScript",
    "description": "Explore how to create n-dimensional arrays with a given value using recursion in JavaScript.",
    "keywords": "javascript, javascript practice, recursion, javascript practice online, javascript lab, multidimensional, javascript tutor, array, programming"
  },
  "difficulty": "Beginner",
  "time": 5,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Initialize N-Dimensional Array",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify Node Commands In Zsh History",
            "file": "verify1-1.sh",
            "hint": "JavaScript can be run in the Terminal/SSH by typing 'node' and pressing Enter.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": []
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["Lotus-7"],
  "license": {
    "name": "CC-BY-4.0",
    "url": "https://github.com/30-seconds/30-seconds-of-code/blob/master/LICENSE",
    "repo": "https://github.com/30-seconds/30-seconds-of-code"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "初始化 N 维数组",
      "description": "在本实验中，我们将探索如何使用 JavaScript 中的递归创建具有给定值的 n 维数组。我们将使用 Array.from() 和 Array.prototype.map() 方法来生成行，其中每一行都是使用 initializeNDArray() 初始化的新数组。在本实验结束时，你将对如何在 JavaScript 中创建多维数组以及如何使用递归完成此任务有深入的理解。",
      "meta": {
        "title": "精通 JavaScript 中的 N 维数组",
        "description": "探索如何使用 JavaScript 中的递归创建具有给定值的 n 维数组。",
        "keywords": "JavaScript, JavaScript 实践，递归，在线 JavaScript 实践，JavaScript 实验，多维，JavaScript 教程，数组，编程"
      },
      "details": {
        "steps": [
          {
            "title": "初始化 N 维数组",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "在 Zsh 历史记录中验证 Node 命令",
                "file": "verify1-1.sh",
                "hint": "通过输入 'node' 并按 Enter 键，可以在终端/SSH 中运行 JavaScript。"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Inicializar Matriz de N Dimensiones",
      "description": "En este laboratorio, exploraremos cómo crear matrices de n dimensiones con un valor dado utilizando recursividad en JavaScript. Utilizaremos los métodos Array.from() y Array.prototype.map() para generar filas donde cada una es una nueva matriz inicializada utilizando initializeNDArray(). Al final de este laboratorio, tendrás una comprensión sólida de cómo crear matrices multidimensionales en JavaScript y cómo utilizar la recursividad para completar esta tarea.",
      "meta": {
        "title": "Dominando las Matrices de N Dimensiones en JavaScript",
        "description": "Explora cómo crear matrices de n dimensiones con un valor dado utilizando recursividad en JavaScript.",
        "keywords": "javascript, práctica de javascript, recursividad, práctica de javascript en línea, laboratorio de javascript, multidimensional, tutor de javascript, matriz, programación"
      },
      "details": {
        "steps": [
          {
            "title": "Inicializar Matriz de N Dimensiones",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Verificar los comandos de Node en el historial de Zsh",
                "file": "verify1-1.sh",
                "hint": "Se puede ejecutar JavaScript en la Terminal/SSH escribiendo 'node' y presionando Enter."
              }
            ]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Initialiser un tableau N-dimensionnel",
      "description": "Dans ce laboratoire, nous allons explorer comment créer des tableaux n-dimensionnels avec une valeur donnée en utilisant la récursion en JavaScript. Nous utiliserons les méthodes Array.from() et Array.prototype.map() pour générer des lignes où chaque ligne est un nouveau tableau initialisé à l'aide de initializeNDArray(). À la fin de ce laboratoire, vous aurez une compréhension solide de la manière de créer des tableaux multidimensionnels en JavaScript et de la manière d'utiliser la récursion pour accomplir cette tâche.",
      "meta": {
        "title": "Maîtriser les tableaux N-dimensionnels en JavaScript",
        "description": "Explorez comment créer des tableaux n-dimensionnels avec une valeur donnée en utilisant la récursion en JavaScript.",
        "keywords": "javascript, pratique javascript, récursion, pratique javascript en ligne, laboratoire javascript, multidimensionnel, tuteur javascript, tableau, programmation"
      },
      "details": {
        "steps": [
          {
            "title": "Initialiser un tableau N-dimensionnel",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Vérifier les commandes Node dans l'historique Zsh",
                "file": "verify1-1.sh",
                "hint": "JavaScript peut être exécuté dans le Terminal/SSH en tapant 'node' et en appuyant sur Entrée."
              }
            ]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "N-dimensionale Arrays initialisieren",
      "description": "In diesem Lab werden wir untersuchen, wie man in JavaScript rekursiv n-dimensionale Arrays mit einem bestimmten Wert erstellt. Wir werden die Methoden Array.from() und Array.prototype.map() verwenden, um Zeilen zu generieren, wobei jede Zeile ein neues Array ist, das mit initializeNDArray() initialisiert wird. Am Ende dieses Labs wirst du eine solide Vorstellung davon haben, wie man in JavaScript mehrdimensionale Arrays erstellt und wie man Rekursion verwendet, um diese Aufgabe zu lösen.",
      "meta": {
        "title": "Das Erlernen von n-dimensionalen Arrays in JavaScript",
        "description": "Untersuche, wie man in JavaScript rekursiv n-dimensionale Arrays mit einem bestimmten Wert erstellt.",
        "keywords": "javascript, javascript Übung, Rekursion, Online-JavaScript-Übung, JavaScript-Lab, Mehrdimensional, JavaScript-Tutor, Array, Programmierung"
      },
      "details": {
        "steps": [
          {
            "title": "N-dimensionale Arrays initialisieren",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Überprüfen von Node-Befehlen in der Zsh-Geschichte",
                "file": "verify1-1.sh",
                "hint": "JavaScript kann im Terminal/SSH ausgeführt werden, indem man 'node' eingibt und die Enter-Taste drückt."
              }
            ]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "N 次元配列を初期化する",
      "description": "この実験では、JavaScript で再帰を使って指定された値で n 次元配列を作成する方法を探ります。`Array.from()` と `Array.prototype.map()` メソッドを使って行を生成し、それぞれが `initializeNDArray()` を使って初期化された新しい配列である行を生成します。この実験が終了するとき、JavaScript で多次元配列を作成する方法と、このタスクを達成するために再帰をどのように使うかを十分に理解していることになります。",
      "meta": {
        "title": "JavaScript で N 次元配列をマスターする",
        "description": "JavaScript で再帰を使って指定された値で n 次元配列を作成する方法を探ります。",
        "keywords": "javascript, javascript 練習，再帰，オンライン javascript 練習，javascript 実験，多次元，javascript チューター, 配列，プログラミング"
      },
      "details": {
        "steps": [
          {
            "title": "N 次元配列を初期化する",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "Zsh 履歴における Node コマンドを確認する",
                "file": "verify1-1.sh",
                "hint": "ターミナル/SSH で 'node' と入力して Enter キーを押すことで JavaScript を実行できます。"
              }
            ]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Инициализация n-мерного массива",
      "description": "В этом практическом занятии мы изучим, как создавать n-мерные массивы с заданным значением с использованием рекурсии в JavaScript. Мы будем использовать методы Array.from() и Array.prototype.map() для генерации строк, каждая из которых представляет собой новый массив, инициализированный с использованием initializeNDArray(). В конце этого практического занятия вы глубоко освоите, как создавать многомерные массивы в JavaScript и как использовать рекурсию для выполнения этой задачи.",
      "meta": {
        "title": "Мастерство в работе с n-мерными массивами в JavaScript",
        "description": "Изучите, как создавать n-мерные массивы с заданным значением с использованием рекурсии в JavaScript.",
        "keywords": "javascript, практика javascript, рекурсия, онлайн практика javascript, практическое занятие javascript, многомерный, преподаватель javascript, массив, программирование"
      },
      "details": {
        "steps": [
          {
            "title": "Инициализация n-мерного массива",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "Проверить команды Node в истории Zsh",
                "file": "verify1-1.sh",
                "hint": "JavaScript можно запустить в Терминале/SSH, введя 'node' и нажав Enter."
              }
            ]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    },
    {
      "lang": "ko",
      "title": "N 차원 배열 초기화",
      "description": "이 랩에서는 JavaScript 에서 재귀를 사용하여 주어진 값으로 n 차원 배열을 생성하는 방법을 살펴봅니다. Array.from() 및 Array.prototype.map() 메서드를 사용하여 각 요소가 initializeNDArray() 를 사용하여 초기화된 새 배열인 행을 생성합니다. 이 랩을 마치면 JavaScript 에서 다차원 배열을 생성하고 재귀를 사용하여 이 작업을 수행하는 방법에 대한 확실한 이해를 얻게 될 것입니다.",
      "meta": {
        "title": "JavaScript 에서 N 차원 배열 마스터하기",
        "description": "JavaScript 에서 재귀를 사용하여 주어진 값으로 n 차원 배열을 생성하는 방법을 알아보세요.",
        "keywords": "javascript, 자바스크립트 연습, 재귀 (recursion), 자바스크립트 온라인 연습, 자바스크립트 랩, 다차원 배열, 자바스크립트 튜터, 배열 (array), 프로그래밍"
      },
      "details": {
        "steps": [
          {
            "title": "N 차원 배열 초기화",
            "text": "ko/step1.md",
            "verify": [
              {
                "name": "Zsh 히스토리에서 Node 명령어 확인",
                "file": "verify1-1.sh",
                "hint": "터미널/SSH 에서 'node'를 입력하고 Enter 키를 눌러 JavaScript 를 실행할 수 있습니다."
              }
            ]
          }
        ],
        "intro": {
          "text": "ko/intro.md",
          "title": "소개"
        },
        "finish": {
          "text": "ko/finish.md",
          "title": "요약"
        }
      }
    },
    {
      "lang": "pt",
      "title": "Inicializar Array N-Dimensional",
      "description": "Neste laboratório, exploraremos como criar arrays n-dimensionais com um valor fornecido usando recursão em JavaScript. Usaremos os métodos Array.from() e Array.prototype.map() para gerar linhas, onde cada uma é um novo array inicializado usando initializeNDArray(). Ao final deste laboratório, você terá uma sólida compreensão de como criar arrays multidimensionais em JavaScript e como usar a recursão para realizar essa tarefa.",
      "meta": {
        "title": "Dominando Arrays N-Dimensionais em JavaScript - Guia Prático",
        "description": "Aprenda a criar arrays n-dimensionais com um valor específico usando recursão em JavaScript. Exercícios práticos e exemplos para dominar arrays multidimensionais.",
        "keywords": "javascript, exercícios javascript, recursão, prática javascript online, laboratório javascript, multidimensional, tutorial javascript, array, programação"
      },
      "details": {
        "steps": [
          {
            "title": "Inicializar Array N-Dimensional",
            "text": "pt/step1.md",
            "verify": [
              {
                "name": "Verificar Comandos Node no Histórico Zsh",
                "file": "verify1-1.sh",
                "hint": "JavaScript pode ser executado no Terminal/SSH digitando 'node' e pressionando Enter."
              }
            ]
          }
        ],
        "intro": {
          "text": "pt/intro.md",
          "title": "Introdução"
        },
        "finish": {
          "text": "pt/finish.md",
          "title": "Resumo"
        }
      }
    }
  ]
}
