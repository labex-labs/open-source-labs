{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Recursive String Permutations in JavaScript",
  "description": "In this lab, we will explore the concept of string permutations in JavaScript. We will use recursion to generate all possible permutations of a given string, including duplicates. We will also discuss the use of Array.prototype.map() and Array.prototype.reduce() methods to simplify the code and combine the different permutations.",
  "meta": {
    "title": "String Permutations in JavaScript | Recursion | Array Methods",
    "description": "Explore string permutations in JavaScript using recursion and learn how to use Array.prototype.map() and Array.prototype.reduce() to simplify the code.",
    "keywords": "string permutations, javascript, recursion, array methods, map, reduce"
  },
  "difficulty": "Beginner",
  "time": 5,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "String Permutations",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify Node Commands in Shell History",
            "file": "verify1-1.sh",
            "hint": "JavaScript can be run in the Terminal/SSH by typing 'node' and pressing Enter.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": []
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["Lotus-7"],
  "license": {
    "name": "CC-BY-4.0",
    "url": "https://github.com/30-seconds/30-seconds-of-code/blob/master/LICENSE",
    "repo": "https://github.com/30-seconds/30-seconds-of-code"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "JavaScript 中的递归字符串排列",
      "description": "在本实验中，我们将探索 JavaScript 中字符串排列的概念。我们将使用递归生成给定字符串的所有可能排列，包括重复项。我们还将讨论如何使用 Array.prototype.map() 和 Array.prototype.reduce() 方法简化代码并合并不同的排列。",
      "meta": {
        "title": "JavaScript 中的字符串排列 | 递归 | 数组方法",
        "description": "使用递归探索 JavaScript 中的字符串排列，并学习如何使用 Array.prototype.map() 和 Array.prototype.reduce() 简化代码。",
        "keywords": "字符串排列，JavaScript, 递归，数组方法，map, reduce"
      },
      "details": {
        "steps": [
          {
            "title": "字符串排列",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "在 Shell 历史记录中验证 Node 命令",
                "file": "verify1-1.sh",
                "hint": "通过在终端/SSH 中输入 'node' 并按回车键，可以运行 JavaScript。"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Permutaciones de cadenas recursivas en JavaScript",
      "description": "En este laboratorio, exploraremos el concepto de permutaciones de cadenas en JavaScript. Utilizaremos la recursión para generar todas las permutaciones posibles de una cadena dada, incluyendo duplicados. También discutiremos el uso de los métodos Array.prototype.map() y Array.prototype.reduce() para simplificar el código y combinar las diferentes permutaciones.",
      "meta": {
        "title": "Permutaciones de cadenas en JavaScript | Recursión | Métodos de matriz",
        "description": "Explore las permutaciones de cadenas en JavaScript utilizando la recursión y aprenda cómo utilizar Array.prototype.map() y Array.prototype.reduce() para simplificar el código.",
        "keywords": "permutaciones de cadenas, javascript, recursión, métodos de matriz, map, reduce"
      },
      "details": {
        "steps": [
          {
            "title": "Permutaciones de cadenas",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Verificar comandos de Node en el historial de la shell",
                "file": "verify1-1.sh",
                "hint": "JavaScript se puede ejecutar en la Terminal/SSH escribiendo 'node' y presionando Enter."
              }
            ]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Permutations de chaînes de caractères récursives en JavaScript",
      "description": "Dans ce laboratoire, nous allons explorer le concept de permutations de chaînes de caractères en JavaScript. Nous utiliserons la récursion pour générer toutes les permutations possibles d'une chaîne donnée, y compris les doublons. Nous discuterons également de l'utilisation des méthodes Array.prototype.map() et Array.prototype.reduce() pour simplifier le code et combiner les différentes permutations.",
      "meta": {
        "title": "Permutations de chaînes de caractères en JavaScript | Récursion | Méthodes d'Array",
        "description": "Explorez les permutations de chaînes de caractères en JavaScript en utilisant la récursion et apprenez à utiliser Array.prototype.map() et Array.prototype.reduce() pour simplifier le code.",
        "keywords": "permutations de chaînes de caractères, javascript, récursion, méthodes d'array, map, reduce"
      },
      "details": {
        "steps": [
          {
            "title": "Permutations de chaînes de caractères",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Vérifier les commandes Node dans l'historique du shell",
                "file": "verify1-1.sh",
                "hint": "JavaScript peut être exécuté dans le Terminal/SSH en tapant 'node' et en appuyant sur Entrée."
              }
            ]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Rekursive Zeichenkettenpermutationen in JavaScript",
      "description": "In diesem Lab werden wir das Konzept der Zeichenkettenpermutationen in JavaScript erkunden. Wir werden Rekursion verwenden, um alle möglichen Permutationen einer gegebenen Zeichenkette zu generieren, einschließlich von Duplikaten. Wir werden auch über die Verwendung der Methoden Array.prototype.map() und Array.prototype.reduce() sprechen, um den Code zu vereinfachen und die verschiedenen Permutationen zu kombinieren.",
      "meta": {
        "title": "Zeichenkettenpermutationen in JavaScript | Rekursion | Array-Methoden",
        "description": "Erkunden Sie Zeichenkettenpermutationen in JavaScript mit Hilfe von Rekursion und lernen Sie, wie Sie Array.prototype.map() und Array.prototype.reduce() verwenden, um den Code zu vereinfachen.",
        "keywords": "Zeichenkettenpermutationen, JavaScript, Rekursion, Array-Methoden, map, reduce"
      },
      "details": {
        "steps": [
          {
            "title": "Zeichenkettenpermutationen",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Überprüfen von Node-Befehlen in der Shell-Geschichte",
                "file": "verify1-1.sh",
                "hint": "JavaScript kann im Terminal/SSH ausgeführt werden, indem man 'node' eingibt und die Enter-Taste drückt."
              }
            ]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "JavaScript における再帰的な文字列の順列",
      "description": "この実験では、JavaScript における文字列の順列の概念を探ります。再帰を使って、与えられた文字列のすべての可能な順列を生成し、重複を含めます。また、コードを簡略化し、異なる順列を結合するために Array.prototype.map() と Array.prototype.reduce() メソッドの使い方についても説明します。",
      "meta": {
        "title": "JavaScript における文字列の順列 | 再帰 | 配列メソッド",
        "description": "再帰を使って JavaScript における文字列の順列を探り、Array.prototype.map() と Array.prototype.reduce() を使ってコードを簡略化する方法を学びましょう。",
        "keywords": "文字列の順列，javascript, 再帰，配列メソッド，map, reduce"
      },
      "details": {
        "steps": [
          {
            "title": "文字列の順列",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "シェル履歴における Node コマンドを確認する",
                "file": "verify1-1.sh",
                "hint": "ターミナル/SSH で 'node' と入力して Enter キーを押すことで JavaScript を実行できます。"
              }
            ]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Рекурсивные перестановки строк в JavaScript",
      "description": "В этом лабе мы будем изучать концепцию перестановок строк в JavaScript. Мы будем использовать рекурсию для генерации всех возможных перестановок заданной строки, включая дубликаты. Также мы обсудим использование методов Array.prototype.map() и Array.prototype.reduce() для упрощения кода и объединения различных перестановок.",
      "meta": {
        "title": "Перестановки строк в JavaScript | Рекурсия | Методы массива",
        "description": "Изучите перестановки строк в JavaScript с использованием рекурсии и узнайте, как использовать методы Array.prototype.map() и Array.prototype.reduce() для упрощения кода.",
        "keywords": "перестановки строк, javascript, рекурсия, методы массива, map, reduce"
      },
      "details": {
        "steps": [
          {
            "title": "Перестановки строк",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "Проверить команды Node в истории оболочки",
                "file": "verify1-1.sh",
                "hint": "JavaScript можно запустить в Терминале/SSH, введя 'node' и нажав Enter."
              }
            ]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    },
    {
      "lang": "ko",
      "title": "JavaScript 를 이용한 재귀적 문자열 순열",
      "description": "이 랩에서는 JavaScript 에서 문자열 순열의 개념을 탐구합니다. 재귀를 사용하여 중복을 포함한 주어진 문자열의 모든 가능한 순열을 생성합니다. 또한 Array.prototype.map() 및 Array.prototype.reduce() 메서드를 사용하여 코드를 단순화하고 다양한 순열을 결합하는 방법에 대해서도 논의합니다.",
      "meta": {
        "title": "JavaScript 문자열 순열 | 재귀 | 배열 메서드",
        "description": "재귀를 사용하여 JavaScript 에서 문자열 순열을 탐구하고 Array.prototype.map() 및 Array.prototype.reduce() 를 사용하여 코드를 단순화하는 방법을 알아보세요. (자바스크립트 문자열 순열, 재귀, 배열 메서드)",
        "keywords": "문자열 순열, 자바스크립트, 재귀, 배열 메서드, map, reduce, 문자열 순열 알고리즘, JavaScript 순열"
      },
      "details": {
        "steps": [
          {
            "title": "문자열 순열",
            "text": "ko/step1.md",
            "verify": [
              {
                "name": "Shell 히스토리에서 Node 명령어 확인",
                "file": "verify1-1.sh",
                "hint": "'node'를 입력하고 Enter 키를 눌러 터미널/SSH 에서 JavaScript 를 실행할 수 있습니다."
              }
            ]
          }
        ],
        "intro": {
          "text": "ko/intro.md",
          "title": "소개"
        },
        "finish": {
          "text": "ko/finish.md",
          "title": "요약"
        }
      }
    },
    {
      "lang": "pt",
      "title": "Permutações de Strings Recursivas em JavaScript",
      "description": "Neste laboratório, exploraremos o conceito de permutações de strings em JavaScript. Usaremos recursão para gerar todas as permutações possíveis de uma string fornecida, incluindo duplicatas. Também discutiremos o uso dos métodos Array.prototype.map() e Array.prototype.reduce() para simplificar o código e combinar as diferentes permutações.",
      "meta": {
        "title": "Permutações de Strings em JavaScript | Recursão | Métodos de Array",
        "description": "Explore as permutações de strings em JavaScript usando recursão e aprenda como usar Array.prototype.map() e Array.prototype.reduce() para simplificar o código. Aprenda a gerar todas as combinações possíveis de uma string.",
        "keywords": "permutações de strings, javascript, recursão, métodos de array, map, reduce, combinações de strings"
      },
      "details": {
        "steps": [
          {
            "title": "Permutações de Strings",
            "text": "pt/step1.md",
            "verify": [
              {
                "name": "Verificar Comandos Node no Histórico do Shell",
                "file": "verify1-1.sh",
                "hint": "JavaScript pode ser executado no Terminal/SSH digitando 'node' e pressionando Enter."
              }
            ]
          }
        ],
        "intro": {
          "text": "pt/intro.md",
          "title": "Introdução"
        },
        "finish": {
          "text": "pt/finish.md",
          "title": "Resumo"
        }
      }
    }
  ]
}
