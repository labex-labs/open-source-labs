{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Recursive String Permutations in JavaScript",
  "description": "In this lab, we will explore the concept of string permutations in JavaScript. We will use recursion to generate all possible permutations of a given string, including duplicates. We will also discuss the use of Array.prototype.map() and Array.prototype.reduce() methods to simplify the code and combine the different permutations.",
  "meta": {
    "title": "String Permutations in JavaScript | Recursion | Array Methods",
    "description": "Explore string permutations in JavaScript using recursion and learn how to use Array.prototype.map() and Array.prototype.reduce() to simplify the code.",
    "keywords": "string permutations, javascript, recursion, array methods, map, reduce"
  },
  "difficulty": "Beginner",
  "time": 10,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "String Permutations",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify Node Commands in Shell History",
            "file": "verify1-1.sh",
            "hint": "JavaScript can be run in the Terminal/SSH by typing 'node' and pressing Enter.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "javascript/arith_ops",
          "javascript/array_methods",
          "javascript/comp_ops",
          "javascript/cond_stmts",
          "javascript/data_types",
          "javascript/higher_funcs",
          "javascript/obj_manip",
          "javascript/variables"
        ]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["Lotus-7"],
  "license": {
    "name": "CC-BY-4.0",
    "url": "https://github.com/30-seconds/30-seconds-of-code/blob/master/LICENSE",
    "repo": "https://github.com/30-seconds/30-seconds-of-code"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "JavaScript 中的递归字符串排列",
      "description": "在本实验中，我们将探索 JavaScript 中字符串排列的概念。我们将使用递归生成给定字符串的所有可能排列，包括重复项。我们还将讨论如何使用 Array.prototype.map() 和 Array.prototype.reduce() 方法简化代码并合并不同的排列。",
      "meta": {
        "title": "JavaScript 中的字符串排列 | 递归 | 数组方法",
        "description": "使用递归探索 JavaScript 中的字符串排列，并学习如何使用 Array.prototype.map() 和 Array.prototype.reduce() 简化代码。",
        "keywords": "字符串排列, JavaScript, 递归, 数组方法, map, reduce"
      },
      "details": {
        "steps": [
          {
            "title": "字符串排列",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "在 Shell 历史记录中验证 Node 命令",
                "file": "verify1-1.sh",
                "hint": "通过在终端/SSH 中输入 'node' 并按回车键，可以运行 JavaScript。"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    }
  ]
}
