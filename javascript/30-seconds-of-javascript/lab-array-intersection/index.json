{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Efficient Array Intersection in JavaScript",
  "description": "In this lab, we will explore the concept of array intersection in JavaScript. The main objective of this lab is to help you understand how to find common elements between two arrays while removing any duplicate values. You will learn how to use the Set data structure and the Array.prototype.filter() method to achieve this functionality.",
  "meta": {
    "title": "Array Intersection | JavaScript Coding Tutorial",
    "description": "Explore array intersection in JavaScript and learn how to find common elements between two arrays while removing duplicates using Set and Array.prototype.filter().",
    "keywords": "JavaScript, Array Intersection, Coding Tutorial, Set, Array.prototype.filter"
  },
  "difficulty": "Beginner",
  "time": 10,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Array Intersection",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify Node Commands Executed",
            "file": "verify1-1.sh",
            "hint": "JavaScript can be run in the Terminal/SSH by typing 'node' and pressing Enter.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "javascript/arith_ops",
          "javascript/comp_ops",
          "javascript/data_types",
          "javascript/higher_funcs",
          "javascript/spread_rest",
          "javascript/variables"
        ]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["Lotus-7"],
  "license": {
    "name": "CC-BY-4.0",
    "url": "https://github.com/30-seconds/30-seconds-of-code/blob/master/LICENSE",
    "repo": "https://github.com/30-seconds/30-seconds-of-code"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "JavaScript 中的高效数组交集",
      "description": "在本实验中，我们将探讨 JavaScript 中数组交集的概念。本实验的主要目的是帮助你理解如何在两个数组中找到共同元素，同时去除任何重复值。你将学习如何使用 Set 数据结构和 Array.prototype.filter() 方法来实现此功能。",
      "meta": {
        "title": "数组交集 | JavaScript 编码教程",
        "description": "探索 JavaScript 中的数组交集，并学习如何使用 Set 和 Array.prototype.filter() 在去除重复项的同时找到两个数组之间的共同元素。",
        "keywords": "JavaScript, 数组交集, 编码教程, Set, Array.prototype.filter"
      },
      "details": {
        "steps": [
          {
            "title": "数组交集",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "验证已执行的 Node 命令",
                "file": "verify1-1.sh",
                "hint": "通过在终端/SSH 中输入 'node' 并按回车键，可以运行 JavaScript。"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Intersección de arrays eficiente en JavaScript",
      "description": "En este laboratorio, exploraremos el concepto de intersección de arrays en JavaScript. El objetivo principal de este laboratorio es ayudarte a entender cómo encontrar elementos comunes entre dos arrays mientras se eliminan cualquier valor duplicado. Aprenderás cómo utilizar la estructura de datos Set y el método Array.prototype.filter() para lograr esta funcionalidad.",
      "meta": {
        "title": "Intersección de arrays | Tutorial de codificación de JavaScript",
        "description": "Explora la intersección de arrays en JavaScript y aprende cómo encontrar elementos comunes entre dos arrays mientras se eliminan los duplicados utilizando Set y Array.prototype.filter().",
        "keywords": "JavaScript, Intersección de arrays, Tutorial de codificación, Set, Array.prototype.filter"
      },
      "details": {
        "steps": [
          {
            "title": "Intersección de arrays",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Verificar comandos de Node ejecutados",
                "file": "verify1-1.sh",
                "hint": "JavaScript se puede ejecutar en la Terminal/SSH escribiendo 'node' y presionando Enter."
              }
            ]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Intersection d'ensembles efficace en JavaScript",
      "description": "Dans ce laboratoire, nous allons explorer le concept d'intersection d'ensembles en JavaScript. L'objectif principal de ce laboratoire est de vous aider à comprendre comment trouver les éléments communs entre deux tableaux tout en éliminant les valeurs dupliquées. Vous allez apprendre à utiliser la structure de données Set et la méthode Array.prototype.filter() pour réaliser cette fonctionnalité.",
      "meta": {
        "title": "Intersection d'ensembles | Tutoriel de codage JavaScript",
        "description": "Explorez l'intersection d'ensembles en JavaScript et apprenez à trouver les éléments communs entre deux tableaux tout en éliminant les doublons en utilisant Set et Array.prototype.filter().",
        "keywords": "JavaScript, Intersection d'ensembles, Tutoriel de codage, Set, Array.prototype.filter"
      },
      "details": {
        "steps": [
          {
            "title": "Intersection d'ensembles",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Vérifier que les commandes Node ont été exécutées",
                "file": "verify1-1.sh",
                "hint": "JavaScript peut être exécuté dans le Terminal/SSH en tapant 'node' et en appuyant sur Entrée."
              }
            ]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Effiziente Array-Schnittmenge in JavaScript",
      "description": "In diesem Lab werden wir das Konzept der Array-Schnittmenge in JavaScript erkunden. Das Hauptziel dieses Labs ist es, Ihnen zu helfen, zu verstehen, wie man gemeinsame Elemente zwischen zwei Arrays findet, während alle Duplikate entfernt werden. Sie werden lernen, wie man die Set-Datenstruktur und die Array.prototype.filter()-Methode verwendet, um diese Funktionalität zu erreichen.",
      "meta": {
        "title": "Array-Schnittmenge | JavaScript-Coding-Tutorial",
        "description": "Erkunden Sie die Array-Schnittmenge in JavaScript und lernen Sie, wie man gemeinsame Elemente zwischen zwei Arrays findet, während Duplikate mit Set und Array.prototype.filter() entfernt werden.",
        "keywords": "JavaScript, Array-Schnittmenge, Coding-Tutorial, Set, Array.prototype.filter"
      },
      "details": {
        "steps": [
          {
            "title": "Array-Schnittmenge",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Überprüfen, ob die Node-Befehle ausgeführt wurden",
                "file": "verify1-1.sh",
                "hint": "JavaScript kann im Terminal/SSH ausgeführt werden, indem man 'node' eingibt und die Eingabetaste drückt."
              }
            ]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "JavaScript における効率的な配列の共通部分",
      "description": "この実験では、JavaScript における配列の共通部分の概念を探ります。この実験の主な目的は、2 つの配列間の共通要素を見つける方法を理解し、重複する値を削除する方法を学ぶことです。この機能を達成するために、Set データ構造と Array.prototype.filter() メソッドをどのように使用するかを学びます。",
      "meta": {
        "title": "配列の共通部分 | JavaScript コーディング チュートリアル",
        "description": "JavaScript の配列の共通部分を調べ、Set と Array.prototype.filter() を使って重複を削除しながら 2 つの配列間の共通要素を見つける方法を学びましょう。",
        "keywords": "JavaScript, 配列の共通部分, コーディング チュートリアル, Set, Array.prototype.filter"
      },
      "details": {
        "steps": [
          {
            "title": "配列の共通部分",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "Node コマンドの実行を確認する",
                "file": "verify1-1.sh",
                "hint": "ターミナル/SSH で 'node' と入力して Enter キーを押すことで、JavaScript を実行できます。"
              }
            ]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Эффективное пересечение массивов в JavaScript",
      "description": "В этом практическом занятии мы изучим концепцию пересечения массивов в JavaScript. Основная цель этого практического занятия - помочь вам понять, как найти общие элементы между двумя массивами, удаляя при этом все дубликаты. Вы научитесь использовать структуру данных Set и метод Array.prototype.filter(), чтобы реализовать эту функциональность.",
      "meta": {
        "title": "Пересечение массивов | Руководство по программированию на JavaScript",
        "description": "Изучите пересечение массивов в JavaScript и узнайте, как найти общие элементы между двумя массивами, удаляя дубликаты с использованием Set и Array.prototype.filter().",
        "keywords": "JavaScript, Пересечение массивов, Руководство по программированию, Set, Array.prototype.filter"
      },
      "details": {
        "steps": [
          {
            "title": "Пересечение массивов",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "Проверить выполнение команд Node",
                "file": "verify1-1.sh",
                "hint": "JavaScript можно запустить в Терминале/SSH, введя 'node' и нажав Enter."
              }
            ]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    }
  ]
}
