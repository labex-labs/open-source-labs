{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Arrays of Consecutive Elements",
  "description": "In this lab, we will explore how to find all arrays of consecutive elements in a given array using JavaScript. We will learn how to use Array.prototype.slice() and Array.prototype.map() methods to extract and map elements of an array to create arrays of n consecutive elements. This lab will help you improve your understanding of JavaScript array manipulation and functional programming concepts.",
  "meta": {
    "title": "Arrays of Consecutive Elements in JavaScript",
    "description": "Explore how to find all arrays of consecutive elements in a given array using JavaScript array manipulation and functional programming techniques.",
    "keywords": "javascript, javascript practice, arrays, array manipulation, javascript practice online, consecutive elements, javascript lab, javascript tutor, functional programming"
  },
  "difficulty": "Beginner",
  "time": 10,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Arrays of Consecutive Elements",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify Student's Node Command Usage",
            "file": "verify1-1.sh",
            "hint": "JavaScript can be run in the Terminal/SSH by typing 'node' and pressing Enter.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "javascript/arith_ops",
          "javascript/comp_ops",
          "javascript/data_types",
          "javascript/higher_funcs",
          "javascript/variables"
        ]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["Lotus-7"],
  "license": {
    "name": "CC-BY-4.0",
    "url": "https://github.com/30-seconds/30-seconds-of-code/blob/master/LICENSE",
    "repo": "https://github.com/30-seconds/30-seconds-of-code"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "连续元素的数组",
      "description": "在本实验中，我们将探索如何使用JavaScript在给定数组中找到所有连续元素的数组。我们将学习如何使用Array.prototype.slice()和Array.prototype.map()方法来提取和映射数组中的元素，以创建包含n个连续元素的数组。本实验将帮助你加深对JavaScript数组操作和函数式编程概念的理解。",
      "meta": {
        "title": "JavaScript中的连续元素数组",
        "description": "探索如何使用JavaScript数组操作和函数式编程技术在给定数组中找到所有连续元素的数组。",
        "keywords": "javascript, javascript实践, 数组, 数组操作, 在线javascript实践, 连续元素, javascript实验, javascript教程, 函数式编程"
      },
      "details": {
        "steps": [
          {
            "title": "连续元素的数组",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "验证学生对Node命令的使用",
                "file": "verify1-1.sh",
                "hint": "在终端/SSH中，通过输入'node'并按下回车键可以运行JavaScript。"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    }
  ]
}
