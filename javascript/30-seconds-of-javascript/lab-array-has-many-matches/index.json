{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Check if Array Has Many Matches",
  "description": "In this lab, we will explore the concept of checking if an array has many matches using JavaScript. You will learn how to use the Array.prototype.filter() method in combination with a given function to find all matching array elements and then check if there are more than one such elements using the Array.prototype.length property. By the end of this lab, you will have a better understanding of how to manipulate arrays in JavaScript.",
  "meta": {
    "title": "JavaScript Array Manipulation | Programming Tutorials",
    "description": "Learn how to check if an array has multiple matches using JavaScript. Explore array manipulation techniques and improve your coding skills.",
    "keywords": "JavaScript, Array, Array Manipulation, Programming Tutorials, Coding, JavaScript Tutorials"
  },
  "difficulty": "Beginner",
  "time": 5,
  "hidden": true,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Check if Array Has Many Matches",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify Node Commands in ZSH History",
            "file": "verify1-1.sh",
            "hint": "JavaScript can be run in the Terminal/SSH by typing 'node' and pressing Enter.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "javascript/arith_ops",
          "javascript/comp_ops",
          "javascript/data_types",
          "javascript/higher_funcs",
          "javascript/variables"
        ]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["Lotus-7"],
  "license": {
    "name": "CC-BY-4.0",
    "url": "https://github.com/30-seconds/30-seconds-of-code/blob/master/LICENSE",
    "repo": "https://github.com/30-seconds/30-seconds-of-code"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "检查数组是否有多个匹配项",
      "description": "在本实验中，我们将探讨如何使用 JavaScript 检查数组中是否存在多个匹配项。你将学习如何结合使用 Array.prototype.filter() 方法和给定函数来查找所有匹配的数组元素，然后使用 Array.prototype.length 属性检查是否存在多个这样的元素。完成本实验后，你将对如何在 JavaScript 中操作数组有更深入的理解。",
      "meta": {
        "title": "JavaScript 数组操作 | 编程教程",
        "description": "学习如何使用 JavaScript 检查数组是否有多个匹配项。探索数组操作技巧并提升你的编码技能。",
        "keywords": "JavaScript, 数组，数组操作，编程教程，编码，JavaScript 教程"
      },
      "details": {
        "steps": [
          {
            "title": "检查数组是否有多个匹配项",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "验证 ZSH 历史记录中的 Node 命令",
                "file": "verify1-1.sh",
                "hint": "通过输入'node'并按 Enter 键，可以在终端/SSH 中运行 JavaScript。"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Comprobar si una matriz tiene muchas coincidencias",
      "description": "En este laboratorio, exploraremos el concepto de comprobar si una matriz tiene muchas coincidencias utilizando JavaScript. Aprenderás cómo utilizar el método Array.prototype.filter() en combinación con una función dada para encontrar todos los elementos de matriz que coinciden y luego comprobar si hay más de un elemento de este tipo utilizando la propiedad Array.prototype.length. Al final de este laboratorio, tendrás una mejor comprensión de cómo manipular matrices en JavaScript.",
      "meta": {
        "title": "Manipulación de matrices en JavaScript | Tutoriales de programación",
        "description": "Aprende cómo comprobar si una matriz tiene múltiples coincidencias utilizando JavaScript. Explora técnicas de manipulación de matrices y mejora tus habilidades de codificación.",
        "keywords": "JavaScript, Matriz, Manipulación de matrices, Tutoriales de programación, Codificación, Tutoriales de JavaScript"
      },
      "details": {
        "steps": [
          {
            "title": "Comprobar si una matriz tiene muchas coincidencias",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Verificar comandos de Node en el historial de ZSH",
                "file": "verify1-1.sh",
                "hint": "Se puede ejecutar JavaScript en la Terminal/SSH escribiendo 'node' y presionando Enter."
              }
            ]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Vérifier si un tableau a plusieurs correspondances",
      "description": "Dans ce laboratoire, nous allons explorer le concept de vérification si un tableau a plusieurs correspondances en utilisant JavaScript. Vous allez apprendre à utiliser la méthode Array.prototype.filter() en combinaison avec une fonction donnée pour trouver tous les éléments du tableau correspondants, puis à vérifier s'il y a plus d'un tel élément en utilisant la propriété Array.prototype.length. À la fin de ce laboratoire, vous aurez une meilleure compréhension de la manière de manipuler les tableaux en JavaScript.",
      "meta": {
        "title": "Manipulation de tableaux JavaScript | Tutoriels de programmation",
        "description": "Apprenez à vérifier si un tableau a plusieurs correspondances en utilisant JavaScript. Explorez les techniques de manipulation de tableaux et améliorez vos compétences de codage.",
        "keywords": "JavaScript, Tableau, Manipulation de tableaux, Tutoriels de programmation, Codage, Tutoriels JavaScript"
      },
      "details": {
        "steps": [
          {
            "title": "Vérifier si un tableau a plusieurs correspondances",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Vérifier les commandes Node dans l'historique ZSH",
                "file": "verify1-1.sh",
                "hint": "JavaScript peut être exécuté dans le Terminal/SSH en tapant 'node' et en appuyant sur Entrée."
              }
            ]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Überprüfen, ob ein Array mehrere Übereinstimmungen hat",
      "description": "In diesem Lab werden wir das Konzept des Überprüfens, ob ein Array mehrere Übereinstimmungen hat, mit JavaScript erkunden. Sie werden lernen, wie die Array.prototype.filter()-Methode in Kombination mit einer angegebenen Funktion verwendet wird, um alle übereinstimmenden Array-Elemente zu finden, und anschließend wie die Array.prototype.length-Eigenschaft verwendet wird, um zu überprüfen, ob es mehr als ein solches Element gibt. Am Ende dieses Labs werden Sie ein besseres Verständnis dafür haben, wie man in JavaScript Arrays manipuliert.",
      "meta": {
        "title": "JavaScript-Arraymanipulation | Programmier-Tutorials",
        "description": "Lernen Sie, wie Sie mit JavaScript überprüfen, ob ein Array mehrere Übereinstimmungen hat. Erkunden Sie Arraymanipulationsmethoden und verbessern Sie Ihre Programmierkenntnisse.",
        "keywords": "JavaScript, Array, Arraymanipulation, Programmier-Tutorials, Programmierung, JavaScript-Tutorials"
      },
      "details": {
        "steps": [
          {
            "title": "Überprüfen, ob ein Array mehrere Übereinstimmungen hat",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Überprüfen von Node-Befehlen in der ZSH-Historie",
                "file": "verify1-1.sh",
                "hint": "JavaScript kann im Terminal/SSH ausgeführt werden, indem man 'node' eingibt und die Enter-Taste drückt."
              }
            ]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "配列に複数の一致する要素があるかどうかを確認する",
      "description": "この実験では、JavaScript を使って配列に多数の一致する要素があるかどうかを確認する概念を探ります。`Array.prototype.filter()` メソッドを与えられた関数と組み合わせて使って、すべての一致する配列要素を見つけ、その後 `Array.prototype.length` プロパティを使ってそのような要素が 1 つ以上あるかどうかを確認する方法を学びます。この実験が終わるとき、JavaScript で配列を操作する方法をより深く理解しているでしょう。",
      "meta": {
        "title": "JavaScript の配列操作 | プログラミングチュートリアル",
        "description": "JavaScript を使って配列に複数の一致する要素があるかどうかを確認する方法を学びましょう。配列操作技術を探求し、コーディングスキルを向上させましょう。",
        "keywords": "JavaScript, 配列，配列操作，プログラミングチュートリアル，コーディング，JavaScript チュートリアル"
      },
      "details": {
        "steps": [
          {
            "title": "配列に複数の一致する要素があるかどうかを確認する",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "ZSH 履歴の Node コマンドを確認する",
                "file": "verify1-1.sh",
                "hint": "ターミナル/SSH で 'node' と入力して Enter キーを押すことで、JavaScript を実行できます。"
              }
            ]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Проверить, содержит ли массив несколько совпадений",
      "description": "В этом практическом занятии мы изучим концепцию проверки наличия нескольких совпадений в массиве с использованием JavaScript. Вы научитесь использовать метод Array.prototype.filter() в сочетании с заданной функцией для поиска всех совпадающих элементов массива и затем проверять, есть ли более одного такого элемента, используя свойство Array.prototype.length. В конце этого практического занятия у вас будет лучше понимание того, как манипулировать массивами в JavaScript.",
      "meta": {
        "title": "Манипуляция массивами в JavaScript | Руководства по программированию",
        "description": "Изучите, как проверить, содержит ли массив несколько совпадений с использованием JavaScript. Изучите методы манипуляции массивами и улучшите свои навыки программирования.",
        "keywords": "JavaScript, Массив, Манипуляция массивами, Руководства по программированию, Программирование, Руководства по JavaScript"
      },
      "details": {
        "steps": [
          {
            "title": "Проверить, содержит ли массив несколько совпадений",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "Проверить команды Node в истории ZSH",
                "file": "verify1-1.sh",
                "hint": "JavaScript можно запустить в Терминале/SSH, введя 'node' и нажав Enter."
              }
            ]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    },
    {
      "lang": "ko",
      "title": "배열에 여러 일치 항목이 있는지 확인",
      "description": "이 랩에서는 JavaScript 를 사용하여 배열에 여러 일치 항목이 있는지 확인하는 개념을 살펴봅니다. 주어진 함수와 함께 Array.prototype.filter() 메서드를 사용하여 일치하는 모든 배열 요소를 찾고, Array.prototype.length 속성을 사용하여 그러한 요소가 두 개 이상 있는지 확인하는 방법을 배우게 됩니다. 이 랩을 마치면 JavaScript 에서 배열을 조작하는 방법에 대한 이해도가 높아질 것입니다.",
      "meta": {
        "title": "JavaScript 배열 조작 | 프로그래밍 튜토리얼",
        "description": "JavaScript 를 사용하여 배열에 여러 일치 항목이 있는지 확인하는 방법을 알아보세요. 배열 조작 기술을 탐구하고 코딩 실력을 향상시키세요.",
        "keywords": "JavaScript, 배열, 배열 조작, 프로그래밍 튜토리얼, 코딩, JavaScript 튜토리얼, 자바스크립트 배열, 배열 검색"
      },
      "details": {
        "steps": [
          {
            "title": "배열에 여러 일치 항목이 있는지 확인",
            "text": "ko/step1.md",
            "verify": [
              {
                "name": "ZSH 히스토리에서 Node 명령어 확인",
                "file": "verify1-1.sh",
                "hint": "'node'를 입력하고 Enter 키를 눌러 터미널/SSH 에서 JavaScript 를 실행할 수 있습니다."
              }
            ]
          }
        ],
        "intro": {
          "text": "ko/intro.md",
          "title": "소개"
        },
        "finish": {
          "text": "ko/finish.md",
          "title": "요약"
        }
      }
    },
    {
      "lang": "pt",
      "title": "Verificar se um Array Possui Múltiplas Correspondências",
      "description": "Neste laboratório, exploraremos o conceito de verificar se um array possui múltiplas correspondências usando JavaScript. Você aprenderá como usar o método Array.prototype.filter() em combinação com uma função fornecida para encontrar todos os elementos do array correspondentes e, em seguida, verificar se existem mais de um elemento correspondente usando a propriedade Array.prototype.length. Ao final deste laboratório, você terá uma melhor compreensão de como manipular arrays em JavaScript.",
      "meta": {
        "title": "Manipulação de Arrays em JavaScript | Tutoriais de Programação",
        "description": "Aprenda como verificar se um array possui múltiplas correspondências usando JavaScript. Explore técnicas de manipulação de arrays e aprimore suas habilidades de codificação.",
        "keywords": "JavaScript, Array, Manipulação de Arrays, Tutoriais de Programação, Codificação, Tutoriais JavaScript"
      },
      "details": {
        "steps": [
          {
            "title": "Verificar se um Array Possui Múltiplas Correspondências",
            "text": "pt/step1.md",
            "verify": [
              {
                "name": "Verificar Comandos Node no Histórico ZSH",
                "file": "verify1-1.sh",
                "hint": "JavaScript pode ser executado no Terminal/SSH digitando 'node' e pressionando Enter."
              }
            ]
          }
        ],
        "intro": {
          "text": "pt/intro.md",
          "title": "Introdução"
        },
        "finish": {
          "text": "pt/finish.md",
          "title": "Resumo"
        }
      }
    }
  ]
}
