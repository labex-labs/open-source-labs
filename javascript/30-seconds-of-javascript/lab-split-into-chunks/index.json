{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Split Into Chunks",
  "description": "In this lab, we will explore how to split an array into smaller arrays of a specified size using JavaScript. We will use the Array.from() and Array.prototype.slice() methods to create a new array that contains the specified number of chunks. We will also learn how to handle cases where the original array cannot be split evenly.",
  "meta": {
    "title": "Split an Array into Chunks",
    "description": "Learn how to split an array into smaller arrays of a specific size using JavaScript.",
    "keywords": "javascript, javascript practice, javascript practice online, javascript lab, chunk, javascript tutor, array, programming, split"
  },
  "difficulty": "Beginner",
  "time": 5,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Split Into Chunks",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify Node Commands Executed",
            "file": "verify1-1.sh",
            "hint": "JavaScript can be run in the Terminal/SSH by typing 'node' and pressing Enter.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": []
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["Lotus-7"],
  "license": {
    "name": "CC-BY-4.0",
    "url": "https://github.com/30-seconds/30-seconds-of-code/blob/master/LICENSE",
    "repo": "https://github.com/30-seconds/30-seconds-of-code"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "拆分成块",
      "description": "在本实验中，我们将探索如何使用 JavaScript 将一个数组拆分成指定大小的较小数组。我们将使用 Array.from() 和 Array.prototype.slice() 方法来创建一个包含指定数量块的新数组。我们还将学习如何处理原始数组不能被均匀拆分的情况。",
      "meta": {
        "title": "将数组拆分成块",
        "description": "学习如何使用 JavaScript 将数组拆分成特定大小的较小数组。",
        "keywords": "JavaScript, JavaScript 练习，在线 JavaScript 练习，JavaScript 实验，块，JavaScript 教程，数组，编程，拆分"
      },
      "details": {
        "steps": [
          {
            "title": "拆分成块",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "验证已执行的 Node 命令",
                "file": "verify1-1.sh",
                "hint": "通过在终端/SSH 中输入'node'并按回车键，可以运行 JavaScript。"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Dividir en Trozos",
      "description": "En este laboratorio, exploraremos cómo dividir una matriz en matrices más pequeñas de un tamaño especificado utilizando JavaScript. Utilizaremos los métodos Array.from() y Array.prototype.slice() para crear una nueva matriz que contenga el número especificado de trozos. También aprenderemos cómo manejar los casos en los que la matriz original no se puede dividir uniformemente.",
      "meta": {
        "title": "Dividir una matriz en trozos",
        "description": "Aprende cómo dividir una matriz en matrices más pequeñas de un tamaño específico utilizando JavaScript.",
        "keywords": "javascript, práctica de javascript, práctica de javascript en línea, laboratorio de javascript, trozo, tutor de javascript, matriz, programación, dividir"
      },
      "details": {
        "steps": [
          {
            "title": "Dividir en Trozos",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Verificar que se ejecutaron los comandos de Node",
                "file": "verify1-1.sh",
                "hint": "Se puede ejecutar JavaScript en la Terminal/SSH escribiendo 'node' y presionando Enter."
              }
            ]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Diviser en morceaux",
      "description": "Dans ce laboratoire, nous allons explorer la manière de diviser un tableau en tableaux plus petits d'une taille spécifiée à l'aide de JavaScript. Nous utiliserons les méthodes Array.from() et Array.prototype.slice() pour créer un nouveau tableau qui contient le nombre spécifié de morceaux. Nous apprendrons également à gérer les cas où le tableau original ne peut pas être divisé en parties égales.",
      "meta": {
        "title": "Diviser un tableau en morceaux",
        "description": "Apprenez à diviser un tableau en tableaux plus petits d'une taille spécifique à l'aide de JavaScript.",
        "keywords": "javascript, pratique javascript, pratique javascript en ligne, laboratoire javascript, morceau, tuteur javascript, tableau, programmation, diviser"
      },
      "details": {
        "steps": [
          {
            "title": "Diviser en morceaux",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Vérifier que les commandes Node ont été exécutées",
                "file": "verify1-1.sh",
                "hint": "JavaScript peut être exécuté dans le Terminal/SSH en tapant 'node' et en appuyant sur Entrée."
              }
            ]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "In Blöcke aufteilen",
      "description": "In diesem Lab werden wir untersuchen, wie man ein Array mit JavaScript in kleinere Arrays einer bestimmten Größe aufteilt. Wir werden die Methoden Array.from() und Array.prototype.slice() verwenden, um ein neues Array zu erstellen, das die angegebene Anzahl von Teilen enthält. Wir werden auch lernen, wie man Fälle behandelt, in denen das ursprüngliche Array nicht gleichmäßig aufgeteilt werden kann.",
      "meta": {
        "title": "Ein Array in Blöcke aufteilen",
        "description": "Lernen Sie, wie man ein Array mit JavaScript in kleinere Arrays einer bestimmten Größe aufteilt.",
        "keywords": "javascript, javascript Übung, online javascript Übung, javascript Lab, Block, javascript Lehrer, Array, Programmierung, aufteilen"
      },
      "details": {
        "steps": [
          {
            "title": "In Blöcke aufteilen",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Überprüfen, ob die Node-Befehle ausgeführt wurden",
                "file": "verify1-1.sh",
                "hint": "JavaScript kann im Terminal/SSH ausgeführt werden, indem man 'node' eingibt und die Enter-Taste drückt."
              }
            ]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "チャンクに分割",
      "description": "この実験では、JavaScript を使って配列を指定されたサイズの小さな配列に分割する方法を探ります。Array.from() と Array.prototype.slice() メソッドを使って、指定されたチャンク数を含む新しい配列を作成します。また、元の配列を均等に分割できない場合の処理方法についても学びます。",
      "meta": {
        "title": "配列をチャンクに分割する",
        "description": "JavaScript を使って配列を特定のサイズの小さな配列に分割する方法を学びましょう。",
        "keywords": "javascript, javascript 練習，オンライン javascript 練習，javascript 実験，チャンク，javascript 講師，配列，プログラミング，分割"
      },
      "details": {
        "steps": [
          {
            "title": "チャンクに分割する",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "Node コマンドの実行を確認する",
                "file": "verify1-1.sh",
                "hint": "ターミナル/SSH で'node'と入力して Enter キーを押すことで JavaScript を実行できます。"
              }
            ]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Разделение на части",
      "description": "В этом практическом занятии мы изучим, как разбить массив на более мелкие массивы заданного размера с использованием JavaScript. Мы будем использовать методы Array.from() и Array.prototype.slice() для создания нового массива, содержащего указанное количество частей. Также мы узнаем, как обрабатывать ситуации, когда исходный массив не может быть разделен равномерно.",
      "meta": {
        "title": "Разделить массив на части",
        "description": "Изучите, как разбить массив на более мелкие массивы заданного размера с использованием JavaScript.",
        "keywords": "javascript, практика javascript, онлайн практика javascript, практическое занятие javascript, часть, преподаватель javascript, массив, программирование, разделение"
      },
      "details": {
        "steps": [
          {
            "title": "Разделение на части",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "Проверить выполнение команд Node",
                "file": "verify1-1.sh",
                "hint": "JavaScript можно запустить в Терминале/SSH, введя 'node' и нажав Enter."
              }
            ]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    },
    {
      "lang": "ko",
      "title": "청크로 분할하기",
      "description": "이 랩에서는 JavaScript 를 사용하여 배열을 지정된 크기의 더 작은 배열로 분할하는 방법을 살펴봅니다. Array.from() 및 Array.prototype.slice() 메서드를 사용하여 지정된 수의 청크를 포함하는 새 배열을 생성합니다. 또한 원래 배열을 균등하게 분할할 수 없는 경우를 처리하는 방법도 배웁니다.",
      "meta": {
        "title": "JavaScript 로 배열을 청크로 분할하는 방법",
        "description": "JavaScript 를 사용하여 배열을 특정 크기의 작은 배열로 분할하는 방법을 알아보세요.",
        "keywords": "자바스크립트, 자바스크립트 연습, 자바스크립트 온라인 연습, 자바스크립트 랩, 청크, 자바스크립트 튜터, 배열, 프로그래밍, 분할"
      },
      "details": {
        "steps": [
          {
            "title": "청크로 분할하기",
            "text": "ko/step1.md",
            "verify": [
              {
                "name": "Node 명령어 실행 확인",
                "file": "verify1-1.sh",
                "hint": "터미널/SSH 에서 'node'를 입력하고 Enter 키를 눌러 JavaScript 를 실행할 수 있습니다."
              }
            ]
          }
        ],
        "intro": {
          "text": "ko/intro.md",
          "title": "소개"
        },
        "finish": {
          "text": "ko/finish.md",
          "title": "요약"
        }
      }
    },
    {
      "lang": "pt",
      "title": "Dividir em Chunks",
      "description": "Neste laboratório, exploraremos como dividir um array em arrays menores de um tamanho especificado usando JavaScript. Usaremos os métodos Array.from() e Array.prototype.slice() para criar um novo array que contém o número especificado de chunks. Também aprenderemos a lidar com casos em que o array original não pode ser dividido uniformemente.",
      "meta": {
        "title": "Dividir um Array em Chunks em JavaScript",
        "description": "Aprenda como dividir um array em arrays menores de um tamanho específico usando JavaScript. Melhore suas habilidades de programação com este tutorial prático.",
        "keywords": "javascript, prática javascript, exercícios javascript, laboratório javascript, chunk, tutorial javascript, array, programação, dividir array, dividir em partes"
      },
      "details": {
        "steps": [
          {
            "title": "Dividir em Chunks",
            "text": "pt/step1.md",
            "verify": [
              {
                "name": "Verificar Comandos Node Executados",
                "file": "verify1-1.sh",
                "hint": "JavaScript pode ser executado no Terminal/SSH digitando 'node' e pressionando Enter."
              }
            ]
          }
        ],
        "intro": {
          "text": "pt/intro.md",
          "title": "Introdução"
        },
        "finish": {
          "text": "pt/finish.md",
          "title": "Resumo"
        }
      }
    }
  ]
}
