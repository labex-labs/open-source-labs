{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Mapped Array Intersection",
  "description": "In this lab, we will explore the concept of array intersection in JavaScript. Specifically, we will be implementing a function that returns the common elements between two arrays, after applying a provided function to each element of both arrays. This lab will help you understand how to use higher-order functions in JavaScript to manipulate arrays and solve common programming problems.",
  "meta": {
    "title": "Mapped Array Intersection: A JavaScript Coding Tutorial",
    "description": "Explore the concept of array intersection in JavaScript with a step-by-step coding tutorial.",
    "keywords": "javascript, javascript practice, javascript practice online, coding, javascript lab, tutorial, intersection, javascript tutor, array"
  },
  "difficulty": "Beginner",
  "time": 5,
  "hidden": true,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Mapped Array Intersection",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify Node Commands in ZSH History",
            "file": "verify1-1.sh",
            "hint": "JavaScript can be run in the Terminal/SSH by typing 'node' and pressing Enter.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "javascript/arith_ops",
          "javascript/comp_ops",
          "javascript/data_types",
          "javascript/higher_funcs",
          "javascript/spread_rest",
          "javascript/variables"
        ]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["Lotus-7"],
  "license": {
    "name": "CC-BY-4.0",
    "url": "https://github.com/30-seconds/30-seconds-of-code/blob/master/LICENSE",
    "repo": "https://github.com/30-seconds/30-seconds-of-code"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "映射数组交集",
      "description": "在本实验中，我们将探讨 JavaScript 中数组交集的概念。具体来说，我们将实现一个函数，该函数在对两个数组的每个元素应用提供的函数之后，返回这两个数组之间的共同元素。本实验将帮助你理解如何在 JavaScript 中使用高阶函数来操作数组并解决常见的编程问题。",
      "meta": {
        "title": "映射数组交集：JavaScript 编码教程",
        "description": "通过逐步编码教程探索 JavaScript 中数组交集的概念。",
        "keywords": "JavaScript, JavaScript 练习，在线 JavaScript 练习，编码，JavaScript 实验，教程，交集，JavaScript 导师，数组"
      },
      "details": {
        "steps": [
          {
            "title": "映射数组交集",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "在 ZSH 历史记录中验证 Node 命令",
                "file": "verify1-1.sh",
                "hint": "通过输入'node'并按 Enter 键，可以在终端/SSH 中运行 JavaScript。"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Intersección de Arrays Mapeados",
      "description": "En este laboratorio, exploraremos el concepto de intersección de arrays en JavaScript. Específicamente, implementaremos una función que devuelva los elementos comunes entre dos arrays, después de aplicar una función proporcionada a cada elemento de ambos arrays. Este laboratorio te ayudará a entender cómo utilizar funciones de orden superior en JavaScript para manipular arrays y resolver problemas de programación comunes.",
      "meta": {
        "title": "Intersección de Arrays Mapeados: Un Tutorial de Codificación en JavaScript",
        "description": "Explora el concepto de intersección de arrays en JavaScript con un tutorial de codificación paso a paso.",
        "keywords": "javascript, práctica de javascript, práctica de javascript en línea, codificación, laboratorio de javascript, tutorial, intersección, tutor de javascript, array"
      },
      "details": {
        "steps": [
          {
            "title": "Intersección de Arrays Mapeados",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Verificar los comandos de Node en el historial de ZSH",
                "file": "verify1-1.sh",
                "hint": "JavaScript se puede ejecutar en la Terminal/SSH escribiendo 'node' y presionando Enter."
              }
            ]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Intersection d'ensembles mappés",
      "description": "Dans ce laboratoire, nous allons explorer le concept d'intersection d'ensembles en JavaScript. Plus précisément, nous allons implémenter une fonction qui renvoie les éléments communs entre deux tableaux, après avoir appliqué une fonction fournie à chaque élément des deux tableaux. Ce laboratoire vous aidera à comprendre comment utiliser les fonctions de premier ordre en JavaScript pour manipuler les tableaux et résoudre des problèmes de programmation courants.",
      "meta": {
        "title": "Intersection d'ensembles mappés : un tutoriel de codage JavaScript",
        "description": "Explorez le concept d'intersection d'ensembles en JavaScript avec un tutoriel de codage étape par étape.",
        "keywords": "javascript, pratique javascript, pratique javascript en ligne, codage, laboratoire javascript, tutoriel, intersection, tuteur javascript, tableau"
      },
      "details": {
        "steps": [
          {
            "title": "Intersection d'ensembles mappés",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Vérifier les commandes Node dans l'historique ZSH",
                "file": "verify1-1.sh",
                "hint": "JavaScript peut être exécuté dans le Terminal/SSH en tapant 'node' et en appuyant sur Entrée."
              }
            ]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Schnittmenge von abgebildeten Arrays",
      "description": "In diesem Lab werden wir das Konzept der Array-Schnittmenge in JavaScript erkunden. Genauer gesagt werden wir eine Funktion implementieren, die die gemeinsamen Elemente zwischen zwei Arrays zurückgibt, nachdem eine bereitgestellte Funktion auf jedes Element beider Arrays angewendet wurde. Dieses Lab wird Ihnen helfen, zu verstehen, wie man in JavaScript Higher-Order-Funktionen verwendet, um Arrays zu manipulieren und übliche Programmierprobleme zu lösen.",
      "meta": {
        "title": "Schnittmenge von abgebildeten Arrays: Ein JavaScript-Coding-Tutorial",
        "description": "Erkunden Sie das Konzept der Array-Schnittmenge in JavaScript mit einem schrittweisen Coding-Tutorial.",
        "keywords": "javascript, javascript Übung, online javascript Übung, Coding, javascript Lab, Tutorial, Schnittmenge, javascript Tutor, Array"
      },
      "details": {
        "steps": [
          {
            "title": "Schnittmenge von abgebildeten Arrays",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Verifiziere Node-Befehle in der ZSH-Historie",
                "file": "verify1-1.sh",
                "hint": "JavaScript kann in der Konsole/SSH ausgeführt werden, indem man 'node' eingibt und die Enter-Taste drückt."
              }
            ]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "マッピングされた配列の共通部分",
      "description": "この実験では、JavaScript における配列の共通部分の概念を探ります。具体的には、両方の配列の各要素に対して提供された関数を適用した後、2 つの配列の共通要素を返す関数を実装します。この実験は、JavaScript で高階関数を使って配列を操作し、一般的なプログラミング問題を解決する方法を理解するのに役立ちます。",
      "meta": {
        "title": "マッピングされた配列の共通部分：JavaScript のコーディング チュートリアル",
        "description": "段階的なコーディング チュートリアルを使って、JavaScript における配列の共通部分の概念を探求しましょう。",
        "keywords": "javascript, javascript 練習，オンライン javascript 練習，コーディング，javascript 実験，チュートリアル，共通部分，javascript 講師，配列"
      },
      "details": {
        "steps": [
          {
            "title": "マッピングされた配列の共通部分",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "ZSH 履歴における Node コマンドを確認する",
                "file": "verify1-1.sh",
                "hint": "ターミナル/SSH で 'node' と入力して Enter キーを押すことで、JavaScript を実行できます。"
              }
            ]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Пересечение отображенных массивов",
      "description": "В этом практическом занятии мы будем изучать концепцию пересечения массивов в JavaScript. В частности, мы реализуем функцию, которая возвращает общие элементы между двумя массивами, после применения заданной функции к каждому элементу обоих массивов. Это практическое занятие поможет вам понять, как использовать высших порядковых функций в JavaScript для манипуляции массивами и решения общих задач программирования.",
      "meta": {
        "title": "Пересечение отображенных массивов: Руководство по программированию на JavaScript",
        "description": "Изучите концепцию пересечения массивов в JavaScript с пошаговым руководством по программированию.",
        "keywords": "javascript, практика javascript, онлайн практика javascript, программирование, практическое занятие javascript, руководство, пересечение, преподаватель javascript, массив"
      },
      "details": {
        "steps": [
          {
            "title": "Пересечение отображенных массивов",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "Проверить команды Node в истории ZSH",
                "file": "verify1-1.sh",
                "hint": "JavaScript можно запустить в Терминале/SSH, введя 'node' и нажав Enter."
              }
            ]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    },
    {
      "lang": "ko",
      "title": "매핑된 배열 교집합",
      "description": "이 랩에서는 JavaScript 에서 배열 교집합의 개념을 탐구합니다. 특히, 두 배열의 각 요소에 제공된 함수를 적용한 후 두 배열 간의 공통 요소를 반환하는 함수를 구현할 것입니다. 이 랩은 JavaScript 에서 고차 함수를 사용하여 배열을 조작하고 일반적인 프로그래밍 문제를 해결하는 방법을 이해하는 데 도움이 될 것입니다.",
      "meta": {
        "title": "매핑된 배열 교집합: JavaScript 코딩 튜토리얼",
        "description": "단계별 코딩 튜토리얼을 통해 JavaScript 에서 배열 교집합의 개념을 탐구하세요. JavaScript 코딩 연습, 배열 교집합 구현 방법 학습.",
        "keywords": "자바스크립트, 자바스크립트 연습, 자바스크립트 온라인 연습, 코딩, 자바스크립트 랩, 튜토리얼, 교집합, 자바스크립트 튜터, 배열, JavaScript 코딩, 배열 교집합"
      },
      "details": {
        "steps": [
          {
            "title": "매핑된 배열 교집합",
            "text": "ko/step1.md",
            "verify": [
              {
                "name": "ZSH 히스토리에서 Node 명령어 확인",
                "file": "verify1-1.sh",
                "hint": "'node'를 입력하고 Enter 키를 눌러 터미널/SSH 에서 JavaScript 를 실행할 수 있습니다."
              }
            ]
          }
        ],
        "intro": {
          "text": "ko/intro.md",
          "title": "소개"
        },
        "finish": {
          "text": "ko/finish.md",
          "title": "요약"
        }
      }
    },
    {
      "lang": "pt",
      "title": "Interseção de Arrays Mapeados",
      "description": "Neste laboratório, exploraremos o conceito de interseção de arrays em JavaScript. Especificamente, implementaremos uma função que retorna os elementos comuns entre dois arrays, após aplicar uma função fornecida a cada elemento de ambos os arrays. Este laboratório ajudará você a entender como usar funções de ordem superior em JavaScript para manipular arrays e resolver problemas comuns de programação.",
      "meta": {
        "title": "Interseção de Arrays Mapeados em JavaScript: Tutorial de Codificação",
        "description": "Explore o conceito de interseção de arrays em JavaScript com um tutorial de codificação passo a passo. Aprenda a encontrar elementos comuns em arrays de forma eficiente.",
        "keywords": "javascript, prática javascript, exercícios javascript, codificação, laboratório javascript, tutorial, interseção de arrays, tutorial javascript, array, elementos comuns"
      },
      "details": {
        "steps": [
          {
            "title": "Interseção de Arrays Mapeados",
            "text": "pt/step1.md",
            "verify": [
              {
                "name": "Verificar Comandos Node no Histórico ZSH",
                "file": "verify1-1.sh",
                "hint": "JavaScript pode ser executado no Terminal/SSH digitando 'node' e pressionando Enter."
              }
            ]
          }
        ],
        "intro": {
          "text": "pt/intro.md",
          "title": "Introdução"
        },
        "finish": {
          "text": "pt/finish.md",
          "title": "Resumo"
        }
      }
    }
  ]
}
