{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Iterate N Times",
  "description": "In this lab, we will explore the times() function in JavaScript which iterates over a callback a specified number of times or until it returns false. We will learn how to use this function to execute a function repeatedly, and how to pass arguments to the callback function. By the end of this lab, you will have a solid understanding of how to use the times() function to make your code more efficient and concise.",
  "meta": {
    "title": "Iterate N Times",
    "description": "Explore the power of the 'times()' function in JavaScript to efficiently execute a callback function repeatedly.",
    "keywords": "javascript, javascript practice, iteration, javascript practice online, coding, javascript lab, callback, javascript tutor, times"
  },
  "difficulty": "Beginner",
  "time": 10,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Iterate N Times",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify Node Commands History",
            "file": "verify1-1.sh",
            "hint": "JavaScript can be run in the Terminal/SSH by typing 'node' and pressing Enter.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "javascript/arith_ops",
          "javascript/comp_ops",
          "javascript/data_types",
          "javascript/debugging",
          "javascript/loops",
          "javascript/variables"
        ]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["Lotus-7"],
  "license": {
    "name": "CC-BY-4.0",
    "url": "https://github.com/30-seconds/30-seconds-of-code/blob/master/LICENSE",
    "repo": "https://github.com/30-seconds/30-seconds-of-code"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "迭代 N 次",
      "description": "在本实验中，我们将探索 JavaScript 中的 times() 函数，该函数会对回调函数执行指定的次数，或者直到回调函数返回 false 为止。我们将学习如何使用此函数来重复执行一个函数，以及如何将参数传递给回调函数。在本实验结束时，你将对如何使用 times() 函数来提高代码的效率和简洁性有深入的理解。",
      "meta": {
        "title": "迭代 N 次",
        "description": "探索 JavaScript 中 'times()' 函数的强大功能，以高效地重复执行回调函数。",
        "keywords": "JavaScript, JavaScript 实践, 迭代, 在线 JavaScript 实践, 编码, JavaScript 实验, 回调, JavaScript 教程, times"
      },
      "details": {
        "steps": [
          {
            "title": "迭代 N 次",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "验证 Node 命令历史记录",
                "file": "verify1-1.sh",
                "hint": "通过在终端/SSH 中输入 'node' 并按回车键，可以运行 JavaScript。"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    }
  ]
}
