{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Iterate N Times",
  "description": "In this lab, we will explore the times() function in JavaScript which iterates over a callback a specified number of times or until it returns false. We will learn how to use this function to execute a function repeatedly, and how to pass arguments to the callback function. By the end of this lab, you will have a solid understanding of how to use the times() function to make your code more efficient and concise.",
  "meta": {
    "title": "Iterate N Times",
    "description": "Explore the power of the 'times()' function in JavaScript to efficiently execute a callback function repeatedly.",
    "keywords": "javascript, javascript practice, iteration, javascript practice online, coding, javascript lab, callback, javascript tutor, times"
  },
  "difficulty": "Beginner",
  "time": 5,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Iterate N Times",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify Node Commands History",
            "file": "verify1-1.sh",
            "hint": "JavaScript can be run in the Terminal/SSH by typing 'node' and pressing Enter.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": []
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["Lotus-7"],
  "license": {
    "name": "CC-BY-4.0",
    "url": "https://github.com/30-seconds/30-seconds-of-code/blob/master/LICENSE",
    "repo": "https://github.com/30-seconds/30-seconds-of-code"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "迭代 N 次",
      "description": "在本实验中，我们将探索 JavaScript 中的 times() 函数，该函数会对回调函数执行指定的次数，或者直到回调函数返回 false 为止。我们将学习如何使用此函数来重复执行一个函数，以及如何将参数传递给回调函数。在本实验结束时，你将对如何使用 times() 函数来提高代码的效率和简洁性有深入的理解。",
      "meta": {
        "title": "迭代 N 次",
        "description": "探索 JavaScript 中 'times()' 函数的强大功能，以高效地重复执行回调函数。",
        "keywords": "JavaScript, JavaScript 实践，迭代，在线 JavaScript 实践，编码，JavaScript 实验，回调，JavaScript 教程，times"
      },
      "details": {
        "steps": [
          {
            "title": "迭代 N 次",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "验证 Node 命令历史记录",
                "file": "verify1-1.sh",
                "hint": "通过在终端/SSH 中输入 'node' 并按回车键，可以运行 JavaScript。"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Iterar N veces",
      "description": "En este laboratorio, exploraremos la función times() en JavaScript que itera sobre una función de devolución de llamada un número especificado de veces o hasta que devuelva false. Aprenderemos cómo usar esta función para ejecutar una función repetidamente y cómo pasar argumentos a la función de devolución de llamada. Al final de este laboratorio, tendrás una comprensión sólida de cómo usar la función times() para hacer que tu código sea más eficiente y conciso.",
      "meta": {
        "title": "Iterar N veces",
        "description": "Explora el poder de la función 'times()' en JavaScript para ejecutar eficientemente una función de devolución de llamada repetidamente.",
        "keywords": "javascript, práctica de javascript, iteración, práctica de javascript en línea, codificación, laboratorio de javascript, función de devolución de llamada, tutor de javascript, times"
      },
      "details": {
        "steps": [
          {
            "title": "Iterar N veces",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Verificar el historial de comandos de Node",
                "file": "verify1-1.sh",
                "hint": "JavaScript se puede ejecutar en la Terminal/SSH escribiendo 'node' y presionando Enter."
              }
            ]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Itérer N fois",
      "description": "Dans ce laboratoire, nous allons explorer la fonction times() en JavaScript qui itère sur une fonction de rappel un nombre spécifié de fois ou jusqu'à ce qu'elle retourne false. Nous allons apprendre à utiliser cette fonction pour exécuter une fonction plusieurs fois et à passer des arguments à la fonction de rappel. À la fin de ce laboratoire, vous aurez une compréhension solide de la manière d'utiliser la fonction times() pour rendre votre code plus efficace et concise.",
      "meta": {
        "title": "Itérer N fois",
        "description": "Explorez le pouvoir de la fonction 'times()' en JavaScript pour exécuter efficacement une fonction de rappel plusieurs fois.",
        "keywords": "javascript, pratique javascript, itération, pratique javascript en ligne, codage, laboratoire javascript, rappel, tuteur javascript, times"
      },
      "details": {
        "steps": [
          {
            "title": "Itérer N fois",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Vérifier l'historique des commandes Node",
                "file": "verify1-1.sh",
                "hint": "JavaScript peut être exécuté dans le Terminal/SSH en tapant 'node' et en appuyant sur Entrée."
              }
            ]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "N-fache Iteration",
      "description": "In diesem Lab werden wir die times()-Funktion in JavaScript erkunden, die einen Callback eine bestimmte Anzahl von Malen durchläuft oder bis er false zurückgibt. Wir werden lernen, wie diese Funktion verwendet wird, um eine Funktion wiederholt auszuführen und wie Argumente an die Callback-Funktion übergeben werden. Am Ende dieses Labs werden Sie eine solide Vorstellung davon haben, wie die times()-Funktion verwendet wird, um Ihren Code effizienter und präziser zu gestalten.",
      "meta": {
        "title": "N-fache Iteration",
        "description": "Erkunden Sie die Macht der 'times()'-Funktion in JavaScript, um eine Callback-Funktion effizient wiederholt auszuführen.",
        "keywords": "javascript, javascript Übung, Iteration, Online-Javascript-Übung, Programmierung, Javascript-Lab, Callback, Javascript-Tutor, times"
      },
      "details": {
        "steps": [
          {
            "title": "N-fache Iteration",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Überprüfen Sie die Node-Befehlsgeschichte",
                "file": "verify1-1.sh",
                "hint": "JavaScript kann im Terminal/SSH ausgeführt werden, indem Sie 'node' eingeben und die Eingabetaste drücken."
              }
            ]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "N 回反復",
      "description": "この実験では、JavaScript の times() 関数を調べます。この関数は、コールバック関数を指定回数だけ反復実行し、または false を返すまで実行します。この関数を使って関数を繰り返し実行する方法と、コールバック関数に引数を渡す方法を学びます。この実験が終了するとき、times() 関数を使ってコードを効率的かつ簡潔にする方法を十分に理解しているでしょう。",
      "meta": {
        "title": "N 回反復",
        "description": "JavaScript の 'times()' 関数の力を活用して、コールバック関数を効率的に繰り返し実行しましょう。",
        "keywords": "javascript, javascript 練習，反復，オンライン javascript 練習，コーディング，javascript 実験，コールバック，javascript チューター, times"
      },
      "details": {
        "steps": [
          {
            "title": "N 回反復",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "Node コマンド履歴を確認する",
                "file": "verify1-1.sh",
                "hint": "ターミナル/SSH で 'node' と入力して Enter キーを押すことで、JavaScript を実行できます。"
              }
            ]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Итерация N раз",
      "description": "В этом практическом занятии мы изучим функцию times() в JavaScript, которая выполняет вызов обратного вызова указанное количество раз или до тех пор, пока он не вернет false. Мы узнаем, как использовать эту функцию для повторного выполнения функции и как передавать аргументы в функцию обратного вызова. В конце этого практического занятия вы глубоко освоите использование функции times() для повышения эффективности и сокращения объема своего кода.",
      "meta": {
        "title": "Итерация N раз",
        "description": "Изучите мощь функции 'times()' в JavaScript для эффективного повторного выполнения функции обратного вызова.",
        "keywords": "javascript, практика javascript, итерация, онлайн практика javascript, программирование, javascript практическое занятие, обратный вызов, javascript учитель, times"
      },
      "details": {
        "steps": [
          {
            "title": "Итерация N раз",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "Проверить историю команд Node",
                "file": "verify1-1.sh",
                "hint": "JavaScript можно запустить в Терминале/SSH, введя 'node' и нажав Enter."
              }
            ]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    },
    {
      "lang": "ko",
      "title": "N 번 반복하기",
      "description": "이 랩에서는 JavaScript 의 `times()` 함수를 살펴봅니다. 이 함수는 지정된 횟수만큼 또는 false 를 반환할 때까지 콜백을 반복합니다. 이 함수를 사용하여 함수를 반복적으로 실행하는 방법과 콜백 함수에 인수를 전달하는 방법을 배웁니다. 이 랩을 마치면 `times()` 함수를 사용하여 코드를 더 효율적이고 간결하게 만드는 방법에 대한 확실한 이해를 얻게 될 것입니다.",
      "meta": {
        "title": "JavaScript: N 번 반복하기 - 코딩 연습",
        "description": "JavaScript 의 'times()' 함수를 사용하여 콜백 함수를 효율적으로 반복 실행하는 방법을 알아보세요. 코딩 연습, 반복, 콜백 함수 활용법 학습.",
        "keywords": "javascript, 자바스크립트 연습, 반복, 자바스크립트 온라인 연습, 코딩, 자바스크립트 랩, 콜백, 자바스크립트 튜터, times, N 번 반복"
      },
      "details": {
        "steps": [
          {
            "title": "N 번 반복하기",
            "text": "ko/step1.md",
            "verify": [
              {
                "name": "Node 명령어 히스토리 확인",
                "file": "verify1-1.sh",
                "hint": "터미널/SSH 에서 'node'를 입력하고 Enter 키를 눌러 JavaScript 를 실행할 수 있습니다."
              }
            ]
          }
        ],
        "intro": {
          "text": "ko/intro.md",
          "title": "소개"
        },
        "finish": {
          "text": "ko/finish.md",
          "title": "요약"
        }
      }
    },
    {
      "lang": "pt",
      "title": "Iterar N Vezes",
      "description": "Neste laboratório, exploraremos a função `times()` em JavaScript, que itera sobre um callback um número especificado de vezes ou até que retorne false. Aprenderemos como usar esta função para executar uma função repetidamente e como passar argumentos para a função callback. Ao final deste laboratório, você terá uma sólida compreensão de como usar a função `times()` para tornar seu código mais eficiente e conciso.",
      "meta": {
        "title": "Iterar N Vezes em JavaScript",
        "description": "Explore o poder da função 'times()' em JavaScript para executar eficientemente uma função callback repetidamente. Aprenda a iterar em JavaScript e otimize seu código!",
        "keywords": "javascript, prática javascript, iteração, prática javascript online, codificação, laboratório javascript, callback, tutorial javascript, times, iterar em javascript"
      },
      "details": {
        "steps": [
          {
            "title": "Iterar N Vezes",
            "text": "pt/step1.md",
            "verify": [
              {
                "name": "Verificar Histórico de Comandos Node",
                "file": "verify1-1.sh",
                "hint": "JavaScript pode ser executado no Terminal/SSH digitando 'node' e pressionando Enter."
              }
            ]
          }
        ],
        "intro": {
          "text": "pt/intro.md",
          "title": "Introdução"
        },
        "finish": {
          "text": "pt/finish.md",
          "title": "Resumo"
        }
      }
    }
  ]
}
