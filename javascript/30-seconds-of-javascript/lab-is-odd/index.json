{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Number Is Odd",
  "description": "In this lab, we will explore the concept of determining whether a given number is odd or even in JavaScript. We will use the modulo operator to check the remainder when the number is divided by 2. This lab will help you understand the basics of arithmetic operators in JavaScript and how to use them to write simple programs.",
  "meta": {
    "title": "Determine If a Number Is Odd in JavaScript",
    "description": "Learn how to use the modulo operator to check if a number is odd or even in JavaScript.",
    "keywords": "javascript, javascript practice, odd number, javascript practice online, even number, javascript lab, javascript tutor, modulo operator, programming"
  },
  "difficulty": "Beginner",
  "time": 5,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Number Is Odd",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify Node Commands in ZSH History",
            "file": "verify1-1.sh",
            "hint": "JavaScript can be run in the Terminal/SSH by typing 'node' and pressing Enter.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "javascript/arith_ops",
          "javascript/comp_ops",
          "javascript/data_types",
          "javascript/variables"
        ]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["Lotus-7"],
  "license": {
    "name": "CC-BY-4.0",
    "url": "https://github.com/30-seconds/30-seconds-of-code/blob/master/LICENSE",
    "repo": "https://github.com/30-seconds/30-seconds-of-code"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "数字是否为奇数",
      "description": "在这个实验中，我们将探索在 JavaScript 中判断一个给定数字是奇数还是偶数的概念。我们将使用取模运算符来检查该数字除以 2 时的余数。这个实验将帮助你理解 JavaScript 中算术运算符的基础知识，以及如何使用它们来编写简单的程序。",
      "meta": {
        "title": "在 JavaScript 中判断一个数字是否为奇数",
        "description": "学习如何使用取模运算符在 JavaScript 中检查一个数字是奇数还是偶数。",
        "keywords": "JavaScript, JavaScript 练习，奇数，在线 JavaScript 练习，偶数，JavaScript 实验，JavaScript 教程，取模运算符，编程"
      },
      "details": {
        "steps": [
          {
            "title": "数字是否为奇数",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "在 ZSH 历史记录中验证 Node 命令",
                "file": "verify1-1.sh",
                "hint": "通过输入'node'并按 Enter 键，可以在终端/SSH 中运行 JavaScript。"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Número es Impar",
      "description": "En este laboratorio, exploraremos el concepto de determinar si un número dado es impar o par en JavaScript. Utilizaremos el operador módulo para comprobar el residuo cuando el número se divide entre 2. Este laboratorio te ayudará a entender los conceptos básicos de los operadores aritméticos en JavaScript y cómo utilizarlos para escribir programas simples.",
      "meta": {
        "title": "Determinar si un número es impar en JavaScript",
        "description": "Aprende cómo utilizar el operador módulo para comprobar si un número es impar o par en JavaScript.",
        "keywords": "javascript, práctica de javascript, número impar, práctica de javascript en línea, número par, laboratorio de javascript, tutor de javascript, operador módulo, programación"
      },
      "details": {
        "steps": [
          {
            "title": "Número es Impar",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Verificar comandos de Node en el historial de ZSH",
                "file": "verify1-1.sh",
                "hint": "Se puede ejecutar JavaScript en la Terminal/SSH escribiendo 'node' y presionando Enter."
              }
            ]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Nombre est impair",
      "description": "Dans ce laboratoire, nous allons explorer le concept de détermination si un nombre donné est impair ou pair en JavaScript. Nous utiliserons l'opérateur modulo pour vérifier le reste lorsqu'un nombre est divisé par 2. Ce laboratoire vous aidera à comprendre les bases des opérateurs arithmétiques en JavaScript et à utiliser ces derniers pour écrire des programmes simples.",
      "meta": {
        "title": "Déterminer si un nombre est impair en JavaScript",
        "description": "Apprenez à utiliser l'opérateur modulo pour vérifier si un nombre est impair ou pair en JavaScript.",
        "keywords": "javascript, pratique javascript, nombre impair, pratique javascript en ligne, nombre pair, laboratoire javascript, tuteur javascript, opérateur modulo, programmation"
      },
      "details": {
        "steps": [
          {
            "title": "Nombre est impair",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Vérifier les commandes Node dans l'historique ZSH",
                "file": "verify1-1.sh",
                "hint": "JavaScript peut être exécuté dans le Terminal/SSH en tapant 'node' et en appuyant sur Entrée."
              }
            ]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Zahl ist ungerade",
      "description": "In diesem Lab werden wir das Konzept des Bestimmens, ob eine gegebene Zahl ungerade oder gerade ist, in JavaScript erkunden. Wir werden den Modulo-Operator verwenden, um den Rest zu überprüfen, wenn die Zahl durch 2 geteilt wird. Dieses Lab wird Ihnen helfen, die Grundlagen der arithmetischen Operatoren in JavaScript zu verstehen und wie Sie sie verwenden, um einfache Programme zu schreiben.",
      "meta": {
        "title": "Bestimmen, ob eine Zahl in JavaScript ungerade ist",
        "description": "Lernen Sie, wie Sie den Modulo-Operator verwenden, um zu überprüfen, ob eine Zahl in JavaScript ungerade oder gerade ist.",
        "keywords": "javascript, javascript Übung, ungerade Zahl, online javascript Übung, gerade Zahl, javascript Lab, javascript Tutor, Modulo-Operator, Programmierung"
      },
      "details": {
        "steps": [
          {
            "title": "Zahl ist ungerade",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Überprüfen von Node-Befehlen in der ZSH-Geschichte",
                "file": "verify1-1.sh",
                "hint": "JavaScript kann im Terminal/SSH ausgeführt werden, indem man 'node' eingibt und die Enter-Taste drückt."
              }
            ]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "数が奇数かどうか",
      "description": "この実験では、JavaScript で与えられた数が奇数か偶数かを判断する概念を探ります。数を 2 で割ったときの余りを確認するために剰余演算子を使用します。この実験は、JavaScript の算術演算子の基本と、それらを使って簡単なプログラムを書く方法を理解するのに役立ちます。",
      "meta": {
        "title": "JavaScript で数が奇数かどうかを判断する",
        "description": "JavaScript で剰余演算子を使って数が奇数か偶数かを確認する方法を学びましょう。",
        "keywords": "javascript, javascript 練習，奇数，オンライン javascript 練習，偶数，javascript 実験，javascript チューター, 剰余演算子，プログラミング"
      },
      "details": {
        "steps": [
          {
            "title": "数が奇数かどうか",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "ZSH 履歴の Node コマンドを確認する",
                "file": "verify1-1.sh",
                "hint": "ターミナル/SSH で 'node' と入力して Enter キーを押すことで、JavaScript を実行できます。"
              }
            ]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Число является нечетным",
      "description": "В этом практическом занятии мы изучим концепцию определения, является ли заданное число нечетным или четным, на JavaScript. Мы будем использовать оператор модуля для проверки остатка при делении числа на 2. Это практическое занятие поможет вам понять основы арифметических операторов в JavaScript и как ими пользоваться для написания простых программ.",
      "meta": {
        "title": "Определить, является ли число нечетным, на JavaScript",
        "description": "Изучите, как использовать оператор модуля для проверки, является ли число нечетным или четным, на JavaScript.",
        "keywords": "javascript, практика javascript, нечетное число, онлайн практика javascript, четное число, практическое занятие javascript, преподаватель javascript, оператор модуля, программирование"
      },
      "details": {
        "steps": [
          {
            "title": "Число является нечетным",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "Проверить команды Node в истории ZSH",
                "file": "verify1-1.sh",
                "hint": "JavaScript можно запустить в Терминале/SSH, введя 'node' и нажав Enter."
              }
            ]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    },
    {
      "lang": "ko",
      "title": "숫자가 홀수인지 확인하기",
      "description": "이 랩에서는 JavaScript 에서 주어진 숫자가 홀수인지 짝수인지 판별하는 개념을 탐구합니다. 숫자를 2 로 나눈 나머지를 확인하기 위해 모듈로 연산자를 사용합니다. 이 랩은 JavaScript 의 산술 연산자 기본 사항과 이를 사용하여 간단한 프로그램을 작성하는 방법을 이해하는 데 도움이 될 것입니다.",
      "meta": {
        "title": "JavaScript 에서 숫자가 홀수인지 짝수인지 판별하는 방법",
        "description": "JavaScript 에서 모듈로 연산자를 사용하여 숫자가 홀수인지 짝수인지 확인하는 방법을 알아보세요.",
        "keywords": "javascript, javascript 연습, 홀수, javascript 온라인 연습, 짝수, javascript 랩, javascript 튜터, 모듈로 연산자, 프로그래밍, 자바스크립트 홀수 짝수, 자바스크립트 짝수 홀수"
      },
      "details": {
        "steps": [
          {
            "title": "숫자가 홀수인지 확인하기",
            "text": "ko/step1.md",
            "verify": [
              {
                "name": "ZSH 히스토리에서 Node 명령어 확인",
                "file": "verify1-1.sh",
                "hint": "'node'를 입력하고 Enter 키를 눌러 터미널/SSH 에서 JavaScript 를 실행할 수 있습니다."
              }
            ]
          }
        ],
        "intro": {
          "text": "ko/intro.md",
          "title": "소개"
        },
        "finish": {
          "text": "ko/finish.md",
          "title": "요약"
        }
      }
    },
    {
      "lang": "pt",
      "title": "Número é Ímpar",
      "description": "Neste laboratório, exploraremos o conceito de determinar se um determinado número é ímpar ou par em JavaScript. Usaremos o operador módulo para verificar o resto quando o número é dividido por 2. Este laboratório ajudará você a entender os fundamentos dos operadores aritméticos em JavaScript e como usá-los para escrever programas simples.",
      "meta": {
        "title": "Determinar se um Número é Ímpar em JavaScript - Tutorial e Prática",
        "description": "Aprenda a usar o operador módulo para verificar se um número é ímpar ou par em JavaScript. Exercícios práticos e exemplos.",
        "keywords": "javascript, javascript prática, número ímpar, javascript exercícios online, número par, laboratório javascript, tutorial javascript, operador módulo, programação"
      },
      "details": {
        "steps": [
          {
            "title": "Número é Ímpar",
            "text": "pt/step1.md",
            "verify": [
              {
                "name": "Verificar Comandos Node no Histórico ZSH",
                "file": "verify1-1.sh",
                "hint": "JavaScript pode ser executado no Terminal/SSH digitando 'node' e pressionando Enter."
              }
            ]
          }
        ],
        "intro": {
          "text": "pt/intro.md",
          "title": "Introdução"
        },
        "finish": {
          "text": "pt/finish.md",
          "title": "Resumo"
        }
      }
    }
  ]
}
