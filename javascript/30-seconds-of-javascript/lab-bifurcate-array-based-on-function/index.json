{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Bifurcate Array Based on Function",
  "description": "In this lab, we will explore how to bifurcate an array based on a given filtering function in JavaScript. We will use the Array.prototype.reduce() method and the Array.prototype.push() method to split the values of the array into two groups based on whether the filtering function returns a truthy value or not. This lab is designed to enhance your understanding of higher-order functions and array manipulation in JavaScript.",
  "meta": {
    "title": "JavaScript Array Bifurcation | Higher-Order Functions",
    "description": "Learn how to split an array into two groups based on a filtering function in JavaScript. Enhance your understanding of array manipulation and higher-order functions.",
    "keywords": "JavaScript, Array, Bifurcation, Filtering, Higher-Order Functions, Array Manipulation"
  },
  "difficulty": "Beginner",
  "time": 10,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Bifurcate Array Based on Function",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify Node Commands Executed",
            "file": "verify1-1.sh",
            "hint": "JavaScript can be run in the Terminal/SSH by typing 'node' and pressing Enter.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "javascript/comp_ops",
          "javascript/data_types",
          "javascript/higher_funcs",
          "javascript/variables"
        ]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["Lotus-7"],
  "license": {
    "name": "CC-BY-4.0",
    "url": "https://github.com/30-seconds/30-seconds-of-code/blob/master/LICENSE",
    "repo": "https://github.com/30-seconds/30-seconds-of-code"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "根据函数对数组进行分叉",
      "description": "在本实验中，我们将探索如何在JavaScript中根据给定的过滤函数对数组进行分叉。我们将使用Array.prototype.reduce()方法和Array.prototype.push()方法，根据过滤函数返回真值与否，将数组的值分成两组。本实验旨在加深你对JavaScript中高阶函数和数组操作的理解。",
      "meta": {
        "title": "JavaScript数组分叉 | 高阶函数",
        "description": "学习如何在JavaScript中根据过滤函数将数组拆分为两组。加深你对数组操作和高阶函数的理解。",
        "keywords": "JavaScript, 数组, 分叉, 过滤, 高阶函数, 数组操作"
      },
      "details": {
        "steps": [
          {
            "title": "根据函数对数组进行分叉",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "验证已执行的Node命令",
                "file": "verify1-1.sh",
                "hint": "在终端/SSH中，通过输入'node'并按回车键可以运行JavaScript。"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    }
  ]
}
