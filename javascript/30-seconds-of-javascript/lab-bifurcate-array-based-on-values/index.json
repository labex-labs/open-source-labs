{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Bifurcate Array Based on Values",
  "description": "In this lab, we will explore how to bifurcate an array based on given values using JavaScript. The lab will demonstrate how to use the Array.prototype.reduce() method and Array.prototype.push() method to add elements to two groups, based on a given filter. By the end of this lab, you will have a better understanding of how to manipulate arrays in JavaScript.",
  "meta": {
    "title": "JavaScript Array Bifurcation | Programming Tutorials",
    "description": "Learn how to split an array into two groups based on given values using JavaScript. Explore the use of Array.prototype.reduce() and Array.prototype.push() methods.",
    "keywords": "JavaScript, Array, Bifurcation, Programming Tutorials, Array Manipulation"
  },
  "difficulty": "Beginner",
  "time": 5,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Bifurcate Array Based on Values",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify Node Commands in ZSH History",
            "file": "verify1-1.sh",
            "hint": "JavaScript can be run in the Terminal/SSH by typing 'node' and pressing Enter.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "javascript/arith_ops",
          "javascript/array_methods",
          "javascript/comp_ops",
          "javascript/data_types",
          "javascript/higher_funcs",
          "javascript/variables"
        ]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["Lotus-7"],
  "license": {
    "name": "CC-BY-4.0",
    "url": "https://github.com/30-seconds/30-seconds-of-code/blob/master/LICENSE",
    "repo": "https://github.com/30-seconds/30-seconds-of-code"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "根据值对数组进行分叉",
      "description": "在本实验中，我们将探索如何使用 JavaScript 根据给定值对数组进行分叉。本实验将演示如何使用 Array.prototype.reduce() 方法和 Array.prototype.push() 方法，根据给定的筛选条件将元素添加到两个组中。完成本实验后，你将对如何在 JavaScript 中操作数组有更深入的理解。",
      "meta": {
        "title": "JavaScript 数组分叉 | 编程教程",
        "description": "学习如何使用 JavaScript 根据给定值将数组拆分为两个组。探索 Array.prototype.reduce() 和 Array.prototype.push() 方法的使用。",
        "keywords": "JavaScript, 数组，分叉，编程教程，数组操作"
      },
      "details": {
        "steps": [
          {
            "title": "根据值对数组进行分叉",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "在 ZSH 历史记录中验证 Node 命令",
                "file": "verify1-1.sh",
                "hint": "通过输入'node'并按 Enter 键，可以在终端/SSH 中运行 JavaScript。"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Bifurcar Matriz en Función de Valores",
      "description": "En este laboratorio, exploraremos cómo bifurcar una matriz en función de valores dados utilizando JavaScript. El laboratorio demostrará cómo utilizar el método Array.prototype.reduce() y el método Array.prototype.push() para agregar elementos a dos grupos, en función de un filtro dado. Al final de este laboratorio, tendrás una mejor comprensión de cómo manipular matrices en JavaScript.",
      "meta": {
        "title": "Bifurcación de Matrices en JavaScript | Tutoriales de Programación",
        "description": "Aprende cómo dividir una matriz en dos grupos en función de valores dados utilizando JavaScript. Explora el uso de los métodos Array.prototype.reduce() y Array.prototype.push().",
        "keywords": "JavaScript, Matriz, Bifurcación, Tutoriales de Programación, Manipulación de Matrices"
      },
      "details": {
        "steps": [
          {
            "title": "Bifurcar Matriz en Función de Valores",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Verificar los comandos de Node en el historial de ZSH",
                "file": "verify1-1.sh",
                "hint": "Se puede ejecutar JavaScript en la Terminal/SSH escribiendo 'node' y presionando Enter."
              }
            ]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Diviser un tableau en fonction de valeurs",
      "description": "Dans ce laboratoire, nous allons explorer la manière de diviser un tableau en fonction de valeurs données à l'aide de JavaScript. Le laboratoire démontrera comment utiliser la méthode Array.prototype.reduce() et la méthode Array.prototype.push() pour ajouter des éléments à deux groupes, sur la base d'un filtre donné. À la fin de ce laboratoire, vous aurez une meilleure compréhension de la manière de manipuler les tableaux en JavaScript.",
      "meta": {
        "title": "La bifurcation de tableaux JavaScript | Tutoriels de programmation",
        "description": "Découvrez comment diviser un tableau en deux groupes en fonction de valeurs données à l'aide de JavaScript. Explorez l'utilisation des méthodes Array.prototype.reduce() et Array.prototype.push().",
        "keywords": "JavaScript, Tableau, Bifurcation, Tutoriels de programmation, Manipulation de tableaux"
      },
      "details": {
        "steps": [
          {
            "title": "Diviser un tableau en fonction de valeurs",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Vérifier les commandes Node dans l'historique ZSH",
                "file": "verify1-1.sh",
                "hint": "JavaScript peut être exécuté dans le Terminal/SSH en tapant 'node' et en appuyant sur Entrée."
              }
            ]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Array anhand von Werten aufteilen",
      "description": "In diesem Lab werden wir untersuchen, wie man mithilfe von JavaScript ein Array anhand von gegebenen Werten in zwei Teilmengen aufteilt. Das Lab zeigt, wie man die Methoden Array.prototype.reduce() und Array.prototype.push() verwendet, um Elemente anhand eines gegebenen Filters zwei Gruppen hinzuzufügen. Am Ende dieses Labs werden Sie ein besseres Verständnis dafür haben, wie man in JavaScript Arrays manipuliert.",
      "meta": {
        "title": "JavaScript-Array-Aufteilung | Programmier-Tutorials",
        "description": "Lernen Sie, wie Sie ein Array mithilfe von JavaScript anhand von gegebenen Werten in zwei Gruppen aufteilen. Entdecken Sie die Verwendung der Methoden Array.prototype.reduce() und Array.prototype.push().",
        "keywords": "JavaScript, Array, Aufteilung, Programmier-Tutorials, Array-Manipulation"
      },
      "details": {
        "steps": [
          {
            "title": "Array anhand von Werten aufteilen",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Überprüfen von Node-Befehlen in der ZSH-Geschichte",
                "file": "verify1-1.sh",
                "hint": "JavaScript kann im Terminal/SSH ausgeführt werden, indem man 'node' eingibt und die Enter-Taste drückt."
              }
            ]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "値に基づいた配列の分割",
      "description": "この実験では、JavaScript を使って与えられた値に基づいて配列を分割する方法を探ります。この実験では、与えられたフィルタに基づいて、`Array.prototype.reduce()` メソッドと `Array.prototype.push()` メソッドを使って要素を 2 つのグループに追加する方法を示します。この実験が終了するまでに、JavaScript における配列の操作方法をより深く理解するようになります。",
      "meta": {
        "title": "JavaScript による配列の分割 | プログラミングチュートリアル",
        "description": "JavaScript を使って与えられた値に基づいて配列を 2 つのグループに分割する方法を学びましょう。`Array.prototype.reduce()` と `Array.prototype.push()` メソッドの使い方を探ります。",
        "keywords": "JavaScript, 配列，分割，プログラミングチュートリアル，配列操作"
      },
      "details": {
        "steps": [
          {
            "title": "値に基づいた配列の分割",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "ZSH 履歴における Node コマンドを確認する",
                "file": "verify1-1.sh",
                "hint": "ターミナル/SSH で 'node' と入力して Enter キーを押すことで JavaScript を実行できます。"
              }
            ]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Разделение массива на основе значений",
      "description": "В этом практическом занятии мы изучим, как разбить массив на две части на основе заданных значений с использованием JavaScript. В практическом занятии будет показано, как использовать метод Array.prototype.reduce() и метод Array.prototype.push() для добавления элементов в две группы на основе заданного условия фильтрации. В конце практического занятия вы будете лучше понимать, как манипулировать массивами в JavaScript.",
      "meta": {
        "title": "Разделение массива на JavaScript | Руководства по программированию",
        "description": "Изучите, как разделить массив на две группы на основе заданных значений с использованием JavaScript. Исследуйте применение методов Array.prototype.reduce() и Array.prototype.push().",
        "keywords": "JavaScript, массив, разделение, руководства по программированию, манипуляция с массивами"
      },
      "details": {
        "steps": [
          {
            "title": "Разделение массива на основе значений",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "Проверить команды Node в истории ZSH",
                "file": "verify1-1.sh",
                "hint": "JavaScript можно запустить в Терминале/SSH, введя 'node' и нажав Enter."
              }
            ]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    },
    {
      "lang": "ko",
      "title": "JavaScript 값을 기준으로 배열 분할",
      "description": "이 랩에서는 JavaScript 를 사용하여 주어진 값을 기반으로 배열을 분할하는 방법을 살펴봅니다. Array.prototype.reduce() 메서드와 Array.prototype.push() 메서드를 사용하여 주어진 필터를 기반으로 두 그룹에 요소를 추가하는 방법을 보여줍니다. 이 랩을 마치면 JavaScript 에서 배열을 조작하는 방법에 대한 이해도가 높아질 것입니다.",
      "meta": {
        "title": "JavaScript 배열 분할 방법 | 프로그래밍 튜토리얼",
        "description": "JavaScript 를 사용하여 주어진 값을 기준으로 배열을 두 그룹으로 나누는 방법을 알아보세요. Array.prototype.reduce() 및 Array.prototype.push() 메서드의 사용법을 살펴보세요.",
        "keywords": "JavaScript, 배열, 분할, 프로그래밍 튜토리얼, 배열 조작, 배열 나누기"
      },
      "details": {
        "steps": [
          {
            "title": "값을 기준으로 배열 분할",
            "text": "ko/step1.md",
            "verify": [
              {
                "name": "ZSH 히스토리에서 Node 명령어 확인",
                "file": "verify1-1.sh",
                "hint": "터미널/SSH 에서 'node'를 입력하고 Enter 키를 눌러 JavaScript 를 실행할 수 있습니다."
              }
            ]
          }
        ],
        "intro": {
          "text": "ko/intro.md",
          "title": "소개"
        },
        "finish": {
          "text": "ko/finish.md",
          "title": "요약"
        }
      }
    },
    {
      "lang": "pt",
      "title": "Bifurcar Array com Base em Valores",
      "description": "Neste laboratório, exploraremos como bifurcar um array com base em valores fornecidos usando JavaScript. O laboratório demonstrará como usar o método Array.prototype.reduce() e o método Array.prototype.push() para adicionar elementos a dois grupos, com base em um filtro fornecido. Ao final deste laboratório, você terá uma melhor compreensão de como manipular arrays em JavaScript.",
      "meta": {
        "title": "Bifurcação de Array em JavaScript | Tutoriais de Programação",
        "description": "Aprenda como dividir um array em dois grupos com base em valores fornecidos usando JavaScript. Explore o uso dos métodos Array.prototype.reduce() e Array.prototype.push().",
        "keywords": "JavaScript, Array, Bifurcação, Tutoriais de Programação, Manipulação de Array"
      },
      "details": {
        "steps": [
          {
            "title": "Bifurcar Array com Base em Valores",
            "text": "pt/step1.md",
            "verify": [
              {
                "name": "Verificar Comandos Node no Histórico ZSH",
                "file": "verify1-1.sh",
                "hint": "JavaScript pode ser executado no Terminal/SSH digitando 'node' e pressionando Enter."
              }
            ]
          }
        ],
        "intro": {
          "text": "pt/intro.md",
          "title": "Introdução"
        },
        "finish": {
          "text": "pt/finish.md",
          "title": "Resumo"
        }
      }
    }
  ]
}
