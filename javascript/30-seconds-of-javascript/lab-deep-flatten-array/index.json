{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Deep Flatten Array",
  "description": "In this lab, we will explore how to deep flatten an array in JavaScript. We will use recursion and the Array.prototype.concat() method along with the spread operator to flatten an array. By the end of the lab, you will be able to write a function that can deeply flatten an array of any depth.",
  "meta": {
    "title": "Mastering Deep Flattening in JavaScript",
    "description": "Explore the art of deep flattening arrays with recursion and the power of JavaScript's built-in methods.",
    "keywords": "javascript, javascript practice, recursion, javascript practice online, javascript lab, javascript tutor, array, concat, deep flatten"
  },
  "difficulty": "Beginner",
  "time": 10,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Deep Flatten Array",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify Node Commands Executed",
            "file": "verify1-1.sh",
            "hint": "JavaScript can be run in the Terminal/SSH by typing 'node' and pressing Enter.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "javascript/arith_ops",
          "javascript/comp_ops",
          "javascript/data_types",
          "javascript/higher_funcs",
          "javascript/spread_rest",
          "javascript/variables"
        ]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["Lotus-7"],
  "license": {
    "name": "CC-BY-4.0",
    "url": "https://github.com/30-seconds/30-seconds-of-code/blob/master/LICENSE",
    "repo": "https://github.com/30-seconds/30-seconds-of-code"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "深度扁平化数组",
      "description": "在本实验中，我们将探索如何在JavaScript中深度扁平化一个数组。我们将使用递归、`Array.prototype.concat()` 方法以及展开运算符来扁平化数组。在实验结束时，你将能够编写一个函数，该函数可以深度扁平化任意深度的数组。",
      "meta": {
        "title": "掌握JavaScript中的深度扁平化",
        "description": "借助递归和JavaScript内置方法的强大功能，探索深度扁平化数组的技巧。",
        "keywords": "JavaScript, JavaScript实践, 递归, 在线JavaScript实践, JavaScript实验, JavaScript教程, 数组, 拼接, 深度扁平化"
      },
      "details": {
        "steps": [
          {
            "title": "深度扁平化数组",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "验证已执行的Node命令",
                "file": "verify1-1.sh",
                "hint": "通过在终端/SSH中输入'node'并按回车键，可以运行JavaScript。"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    }
  ]
}
