{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Offset Array Elements",
  "description": "In this lab, we will explore an interesting JavaScript function that allows us to offset array elements by a specified amount. We will learn how to use the Array.prototype.slice() method and the spread operator to move elements either from start to end or end to start of the array based on the value of the offset. This lab is designed to help JavaScript developers improve their understanding of manipulating arrays.",
  "meta": {
    "title": "Offset Array Elements in JavaScript",
    "description": "Learn how to offset array elements in JavaScript using the Array.prototype.slice() method and the spread operator.",
    "keywords": "javascript, javascript practice, slice, array manipulation, javascript practice online, javascript lab, offset, spread operator, javascript tutor"
  },
  "difficulty": "Beginner",
  "time": 5,
  "hidden": true,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Offset Array Elements",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify Node Commands In ZSH History",
            "file": "verify1-1.sh",
            "hint": "JavaScript can be run in the Terminal/SSH by typing 'node' and pressing Enter.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "javascript/arith_ops",
          "javascript/comp_ops",
          "javascript/data_types",
          "javascript/spread_rest",
          "javascript/variables"
        ]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["Lotus-7"],
  "license": {
    "name": "CC-BY-4.0",
    "url": "https://github.com/30-seconds/30-seconds-of-code/blob/master/LICENSE",
    "repo": "https://github.com/30-seconds/30-seconds-of-code"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "偏移数组元素",
      "description": "在本实验中，我们将探索一个有趣的 JavaScript 函数，它允许我们将数组元素偏移指定的量。我们将学习如何使用 Array.prototype.slice() 方法和展开运算符，根据偏移值将元素从数组的开头移动到末尾，或者从末尾移动到开头。本实验旨在帮助 JavaScript 开发者加深对数组操作的理解。",
      "meta": {
        "title": "在 JavaScript 中偏移数组元素",
        "description": "学习如何使用 Array.prototype.slice() 方法和展开运算符在 JavaScript 中偏移数组元素。",
        "keywords": "JavaScript, JavaScript 练习，slice, 数组操作，在线 JavaScript 练习，JavaScript 实验，偏移，展开运算符，JavaScript 教程"
      },
      "details": {
        "steps": [
          {
            "title": "偏移数组元素",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "在 ZSH 历史记录中验证 Node 命令",
                "file": "verify1-1.sh",
                "hint": "通过输入 'node' 并按 Enter 键，可以在终端/SSH 中运行 JavaScript。"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Desplazar elementos de un array",
      "description": "En este laboratorio, exploraremos una función de JavaScript interesante que nos permite desplazar los elementos de un array en una cantidad especificada. Aprenderemos a usar el método Array.prototype.slice() y el operador de propagación para mover los elementos desde el principio hasta el final o desde el final hasta el principio del array según el valor del desplazamiento. Este laboratorio está diseñado para ayudar a los desarrolladores de JavaScript a mejorar su comprensión de la manipulación de arrays.",
      "meta": {
        "title": "Desplazar elementos de un array en JavaScript",
        "description": "Aprende cómo desplazar elementos de un array en JavaScript usando el método Array.prototype.slice() y el operador de propagación.",
        "keywords": "javascript, práctica de javascript, slice, manipulación de arrays, práctica de javascript en línea, laboratorio de javascript, desplazamiento, operador de propagación, tutor de javascript"
      },
      "details": {
        "steps": [
          {
            "title": "Desplazar elementos de un array",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Verificar comandos de Node en el historial de ZSH",
                "file": "verify1-1.sh",
                "hint": "Se puede ejecutar JavaScript en la Terminal/SSH escribiendo 'node' y presionando Enter."
              }
            ]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Décaler les éléments d'un tableau",
      "description": "Dans ce laboratoire, nous allons explorer une fonction JavaScript intéressante qui nous permet de décaler les éléments d'un tableau d'un montant spécifié. Nous allons apprendre à utiliser la méthode Array.prototype.slice() et l'opérateur de propagation pour déplacer les éléments soit du début à la fin, soit de la fin au début du tableau en fonction de la valeur du décalage. Ce laboratoire est conçu pour aider les développeurs JavaScript à mieux comprendre la manipulation des tableaux.",
      "meta": {
        "title": "Décaler les éléments d'un tableau en JavaScript",
        "description": "Apprenez à décaler les éléments d'un tableau en JavaScript en utilisant la méthode Array.prototype.slice() et l'opérateur de propagation.",
        "keywords": "javascript, pratique javascript, slice, manipulation de tableaux, pratique javascript en ligne, laboratoire javascript, décalage, opérateur de propagation, tuteur javascript"
      },
      "details": {
        "steps": [
          {
            "title": "Décaler les éléments d'un tableau",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Vérifier les commandes Node dans l'historique ZSH",
                "file": "verify1-1.sh",
                "hint": "JavaScript peut être exécuté dans le Terminal/SSH en tapant 'node' et en appuyant sur Entrée."
              }
            ]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Array-Elemente verschieben",
      "description": "In diesem Lab werden wir eine interessante JavaScript-Funktion erkunden, die uns ermöglicht, Array-Elemente um eine bestimmte Anzahl zu verschieben. Wir werden lernen, wie die Array.prototype.slice()-Methode und der Spread-Operator verwendet werden, um Elemente entweder von Anfang bis Ende oder von Ende bis Anfang des Arrays basierend auf dem Wert des Offsets zu verschieben. Dieses Lab ist dazu gedacht, JavaScript-Entwicklern dabei zu helfen, ihr Verständnis der Manipulation von Arrays zu verbessern.",
      "meta": {
        "title": "Array-Elemente in JavaScript verschieben",
        "description": "Lernen Sie, wie Sie Array-Elemente in JavaScript mithilfe der Array.prototype.slice()-Methode und des Spread-Operators verschieben.",
        "keywords": "javascript, javascript Übung, slice, Array-Manipulation, Online-JavaScript-Übung, JavaScript-Lab, Offset, Spread-Operator, JavaScript-Tutor"
      },
      "details": {
        "steps": [
          {
            "title": "Array-Elemente verschieben",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Überprüfen von Node-Befehlen in der ZSH-Historie",
                "file": "verify1-1.sh",
                "hint": "JavaScript kann im Terminal/SSH ausgeführt werden, indem man 'node' eingibt und die Enter-Taste drückt."
              }
            ]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "配列要素のオフセット",
      "description": "この実験では、配列要素を指定された量だけオフセットすることができる興味深い JavaScript 関数を探ります。`Array.prototype.slice()` メソッドとスプレッド演算子を使って、オフセットの値に基づいて要素を配列の先頭から末尾または末尾から先頭に移動させる方法を学びます。この実験は、JavaScript 開発者が配列の操作に対する理解を深めるのを助けるために設計されています。",
      "meta": {
        "title": "JavaScript における配列要素のオフセット",
        "description": "`Array.prototype.slice()` メソッドとスプレッド演算子を使って、JavaScript において配列要素をオフセットする方法を学びましょう。",
        "keywords": "javascript, javascript 練習，slice, 配列操作，オンライン javascript 練習，javascript 実験，オフセット，スプレッド演算子，javascript 講師"
      },
      "details": {
        "steps": [
          {
            "title": "配列要素のオフセット",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "ZSH 履歴における Node コマンドを確認する",
                "file": "verify1-1.sh",
                "hint": "ターミナル/SSH で 'node' と入力して Enter キーを押すことで、JavaScript を実行できます。"
              }
            ]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Смещение элементов массива",
      "description": "В этом практическом занятии мы изучим интересную функцию JavaScript, которая позволяет смещать элементы массива на указанное количество. Мы узнаем, как использовать метод Array.prototype.slice() и оператор расширения для перемещения элементов либо с начала до конца, либо с конца до начала массива в зависимости от значения смещения. Это практическое занятие предназначено для помощи разработчикам JavaScript в улучшении их понимания манипуляций с массивами.",
      "meta": {
        "title": "Смещение элементов массива в JavaScript",
        "description": "Изучите, как смещать элементы массива в JavaScript с использованием метода Array.prototype.slice() и оператора расширения.",
        "keywords": "javascript, практика javascript, slice, манипуляция массивами, онлайн практика javascript, практическое занятие javascript, смещение, оператор расширения, преподаватель javascript"
      },
      "details": {
        "steps": [
          {
            "title": "Смещение элементов массива",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "Проверить команды Node в истории ZSH",
                "file": "verify1-1.sh",
                "hint": "JavaScript можно запустить в Терминале/SSH, введя 'node' и нажав Enter."
              }
            ]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    },
    {
      "lang": "ko",
      "title": "배열 요소 오프셋",
      "description": "이 랩에서는 지정된 양만큼 배열 요소를 오프셋할 수 있는 흥미로운 JavaScript 함수를 살펴봅니다. `Array.prototype.slice()` 메서드와 spread operator (전개 연산자) 를 사용하여 오프셋 값에 따라 배열의 시작에서 끝으로 또는 끝에서 시작으로 요소를 이동하는 방법을 배웁니다. 이 랩은 JavaScript 개발자가 배열 조작에 대한 이해도를 높이는 데 도움이 되도록 설계되었습니다.",
      "meta": {
        "title": "JavaScript 에서 배열 요소 오프셋하는 방법",
        "description": "Array.prototype.slice() 메서드와 spread operator (전개 연산자) 를 사용하여 JavaScript 에서 배열 요소를 오프셋하는 방법을 알아보세요. JavaScript 배열 조작 기술 향상!",
        "keywords": "javascript, javascript 연습, slice, 배열 조작, javascript 온라인 연습, javascript 랩, offset, spread operator, javascript 튜터, 자바스크립트 배열 오프셋, 자바스크립트 배열 이동"
      },
      "details": {
        "steps": [
          {
            "title": "배열 요소 오프셋",
            "text": "ko/step1.md",
            "verify": [
              {
                "name": "ZSH 히스토리에서 Node 명령어 확인",
                "file": "verify1-1.sh",
                "hint": "터미널/SSH 에서 'node'를 입력하고 Enter 키를 눌러 JavaScript 를 실행할 수 있습니다."
              }
            ]
          }
        ],
        "intro": {
          "text": "ko/intro.md",
          "title": "소개"
        },
        "finish": {
          "text": "ko/finish.md",
          "title": "요약"
        }
      }
    },
    {
      "lang": "pt",
      "title": "Deslocamento de Elementos de Array",
      "description": "Neste laboratório, exploraremos uma função JavaScript interessante que nos permite deslocar elementos de array por uma quantidade especificada. Aprenderemos como usar o método Array.prototype.slice() e o operador spread para mover elementos do início para o fim ou do fim para o início do array, com base no valor do deslocamento (offset). Este laboratório foi projetado para ajudar os desenvolvedores JavaScript a aprimorar sua compreensão da manipulação de arrays.",
      "meta": {
        "title": "Deslocamento de Elementos de Array em JavaScript - Aprenda a Manipular Arrays",
        "description": "Aprenda a deslocar elementos de array em JavaScript usando o método Array.prototype.slice() e o operador spread. Melhore suas habilidades de manipulação de arrays com este tutorial prático.",
        "keywords": "javascript, prática javascript, slice, manipulação de array, exercícios javascript, laboratório javascript, offset, operador spread, tutorial javascript, array"
      },
      "details": {
        "steps": [
          {
            "title": "Deslocamento de Elementos de Array",
            "text": "pt/step1.md",
            "verify": [
              {
                "name": "Verificar Comandos Node no Histórico ZSH",
                "file": "verify1-1.sh",
                "hint": "JavaScript pode ser executado no Terminal/SSH digitando 'node' e pressionando Enter."
              }
            ]
          }
        ],
        "intro": {
          "text": "pt/intro.md",
          "title": "Introdução"
        },
        "finish": {
          "text": "pt/finish.md",
          "title": "Resumo"
        }
      }
    }
  ]
}
