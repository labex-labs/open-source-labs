{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Exploring JavaScript Generators: Cyclic Array Iteration",
  "description": "In this lab, we will explore the concept of generators in JavaScript and learn how to create a cycle generator that loops over an array indefinitely. We will use the yield keyword and a while loop to create the generator, and then test it with different arrays to see how it works. By the end of this lab, you will have a deeper understanding of generators and how they can be used in your JavaScript projects.",
  "meta": {
    "title": "JavaScript Generators | Cycle Generator | Programming Tutorials",
    "description": "Explore the concept of generators in JavaScript and learn how to create a cycle generator that loops over an array indefinitely. Enhance your JavaScript skills with this comprehensive tutorial.",
    "keywords": "JavaScript, Generators, Cycle Generator, Programming Tutorials, JavaScript Fundamentals"
  },
  "difficulty": "Beginner",
  "time": 10,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Cycle Generator",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify Node Commands in Zsh History",
            "file": "verify1-1.sh",
            "hint": "JavaScript can be run in the Terminal/SSH by typing 'node' and pressing Enter.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "javascript/arith_ops",
          "javascript/data_types",
          "javascript/destr_assign",
          "javascript/loops",
          "javascript/variables"
        ]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["Lotus-7"],
  "license": {
    "name": "CC-BY-4.0",
    "url": "https://github.com/30-seconds/30-seconds-of-code/blob/master/LICENSE",
    "repo": "https://github.com/30-seconds/30-seconds-of-code"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "探索 JavaScript 生成器：循环数组迭代",
      "description": "在本实验中，我们将探索 JavaScript 中生成器的概念，并学习如何创建一个无限循环遍历数组的循环生成器。我们将使用 yield 关键字和 while 循环来创建生成器，然后用不同的数组对其进行测试，以了解它的工作原理。在本实验结束时，你将对生成器以及它们如何在你的 JavaScript 项目中使用有更深入的理解。",
      "meta": {
        "title": "JavaScript 生成器 | 循环生成器 | 编程教程",
        "description": "探索 JavaScript 中生成器的概念，学习如何创建一个无限循环遍历数组的循环生成器。通过本全面教程提升你的 JavaScript 技能。",
        "keywords": "JavaScript, 生成器，循环生成器，编程教程，JavaScript 基础"
      },
      "details": {
        "steps": [
          {
            "title": "循环生成器",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "在 Zsh 历史记录中验证 Node 命令",
                "file": "verify1-1.sh",
                "hint": "通过在终端/SSH 中输入 'node' 并按回车键，可以运行 JavaScript。"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Explorando los generadores de JavaScript: Iteración cíclica de arrays",
      "description": "En este laboratorio, exploraremos el concepto de generadores en JavaScript y aprenderemos a crear un generador de ciclo que recorre indefinidamente un array. Usaremos la palabra clave yield y un bucle while para crear el generador, y luego lo probaremos con diferentes arrays para ver cómo funciona. Al final de este laboratorio, tendrás una comprensión más profunda de los generadores y cómo se pueden utilizar en tus proyectos de JavaScript.",
      "meta": {
        "title": "Generadores de JavaScript | Generador de ciclo | Tutoriales de programación",
        "description": "Explora el concepto de generadores en JavaScript y aprende a crear un generador de ciclo que recorre indefinidamente un array. Mejora tus habilidades de JavaScript con este tutorial completo.",
        "keywords": "JavaScript, Generadores, Generador de ciclo, Tutoriales de programación, Fundamentos de JavaScript"
      },
      "details": {
        "steps": [
          {
            "title": "Generador de ciclo",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Verificar los comandos de Node en el historial de Zsh",
                "file": "verify1-1.sh",
                "hint": "Se puede ejecutar JavaScript en la Terminal/SSH escribiendo 'node' y presionando Enter."
              }
            ]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Explorer les générateurs JavaScript : itération cyclique sur un tableau",
      "description": "Dans ce laboratoire, nous allons explorer le concept de générateurs en JavaScript et apprendre à créer un générateur de cycle qui boucle indéfiniment sur un tableau. Nous utiliserons le mot-clé yield et une boucle while pour créer le générateur, puis le tester avec différents tableaux pour voir comment il fonctionne. À la fin de ce laboratoire, vous aurez une compréhension plus approfondie des générateurs et de la manière dont ils peuvent être utilisés dans vos projets JavaScript.",
      "meta": {
        "title": "Générateurs JavaScript | Générateur de cycle | Tutoriels de programmation",
        "description": "Explorez le concept de générateurs en JavaScript et apprenez à créer un générateur de cycle qui boucle indéfiniment sur un tableau. Améliorez vos compétences JavaScript avec ce tutoriel complet.",
        "keywords": "JavaScript, Générateurs, Générateur de cycle, Tutoriels de programmation, Fondamentals JavaScript"
      },
      "details": {
        "steps": [
          {
            "title": "Générateur de cycle",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Vérifier les commandes Node dans l'historique Zsh",
                "file": "verify1-1.sh",
                "hint": "JavaScript peut être exécuté dans le Terminal/SSH en tapant 'node' et en appuyant sur Entrée."
              }
            ]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Das Erkunden von JavaScript-Generatoren: Zyklische Array-Iteration",
      "description": "In diesem Lab werden wir das Konzept von Generatoren in JavaScript erkunden und lernen, wie wir einen Zyklusgenerator erstellen, der unendlich über ein Array iteriert. Wir werden das yield-Schlüsselwort und eine while-Schleife verwenden, um den Generator zu erstellen, und dann mit verschiedenen Arrays testen, um zu sehen, wie er funktioniert. Am Ende dieses Labs werden Sie ein tieferes Verständnis von Generatoren und ihrer Verwendung in Ihren JavaScript-Projekten haben.",
      "meta": {
        "title": "JavaScript-Generatoren | Zyklusgenerator | Programmier-Tutorials",
        "description": "Erkunde das Konzept von Generatoren in JavaScript und lerne, wie man einen Zyklusgenerator erstellt, der unendlich über ein Array iteriert. Verbessere deine JavaScript-Fähigkeiten mit diesem umfassenden Tutorial.",
        "keywords": "JavaScript, Generatoren, Zyklusgenerator, Programmier-Tutorials, JavaScript-Grundlagen"
      },
      "details": {
        "steps": [
          {
            "title": "Zyklusgenerator",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Überprüfen von Node-Befehlen in der Zsh-Historie",
                "file": "verify1-1.sh",
                "hint": "JavaScript kann im Terminal/SSH ausgeführt werden, indem man 'node' eingibt und die Enter-Taste drückt."
              }
            ]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "JavaScript ジェネレータを探索する：循環配列反復処理",
      "description": "この実験では、JavaScript におけるジェネレータの概念を探索し、配列を無限にループするサイクルジェネレータを作成する方法を学びます。ジェネレータを作成するために yield キーワードと while ループを使用し、その後、さまざまな配列でテストしてその機能を確認します。この実験が終了するとき、ジェネレータとそれが JavaScript プロジェクトでどのように使用できるかについて、より深い理解を得ることができます。",
      "meta": {
        "title": "JavaScript ジェネレータ | サイクルジェネレータ | プログラミングチュートリアル",
        "description": "JavaScript におけるジェネレータの概念を探索し、配列を無限にループするサイクルジェネレータを作成する方法を学びます。この包括的なチュートリアルで JavaScript のスキルを向上させましょう。",
        "keywords": "JavaScript, ジェネレータ，サイクルジェネレータ，プログラミングチュートリアル，JavaScript 基本"
      },
      "details": {
        "steps": [
          {
            "title": "サイクルジェネレータ",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "Zsh 履歴における Node コマンドを確認する",
                "file": "verify1-1.sh",
                "hint": "ターミナル/SSH で 'node' と入力して Enter キーを押すことで JavaScript を実行できます。"
              }
            ]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Изучение генераторов JavaScript: циклическая итерация массивов",
      "description": "В этом практическом занятии мы изучим концепцию генераторов в JavaScript и научимся создавать генератор цикла, который бесконечно перебирает массив. Мы будем использовать ключевое слово yield и цикл while для создания генератора, а затем тестировать его с разными массивами, чтобы понять, как он работает. В конце этого практического занятия у вас будет более глубокое понимание генераторов и того, как их можно использовать в своих проектах на JavaScript.",
      "meta": {
        "title": "Генераторы JavaScript | Генератор цикла | Руководства по программированию",
        "description": "Изучите концепцию генераторов в JavaScript и узнайте, как создать генератор цикла, который бесконечно перебирает массив. Повысьте свои навыки в JavaScript с помощью этого полноценного руководства.",
        "keywords": "JavaScript, Генераторы, Генератор цикла, Руководства по программированию, Основы JavaScript"
      },
      "details": {
        "steps": [
          {
            "title": "Генератор цикла",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "Проверить команды Node в истории Zsh",
                "file": "verify1-1.sh",
                "hint": "JavaScript можно запустить в Терминале/SSH, введя 'node' и нажав Enter."
              }
            ]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    }
  ]
}
