{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Disjointed Iterables in JavaScript",
  "description": "In this lab, we will dive into the concept of disjointed iterables in JavaScript. We will learn how to use the Set constructor and Array.prototype.every() method to check if two iterables have any common values. By the end of this lab, you will have a solid understanding of how to implement this functionality in your JavaScript code.",
  "meta": {
    "title": "Disjointed Iterables in JavaScript | Set | Array.every()",
    "description": "Explore the concept of disjointed iterables in JavaScript. Learn how to use Set and Array.every() to check if two iterables have any common values.",
    "keywords": "JavaScript, Disjointed Iterables, Set, Array.every(), Programming Tutorials"
  },
  "difficulty": "Beginner",
  "time": 10,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Disjointed Iterables",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify Node Command Usage",
            "file": "verify1-1.sh",
            "hint": "JavaScript can be run in the Terminal/SSH by typing 'node' and pressing Enter.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "javascript/arith_ops",
          "javascript/comp_ops",
          "javascript/data_types",
          "javascript/spread_rest",
          "javascript/variables"
        ]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["Lotus-7"],
  "license": {
    "name": "CC-BY-4.0",
    "url": "https://github.com/30-seconds/30-seconds-of-code/blob/master/LICENSE",
    "repo": "https://github.com/30-seconds/30-seconds-of-code"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "JavaScript 中的不相交可迭代对象",
      "description": "在本实验中，我们将深入探讨 JavaScript 中不相交可迭代对象的概念。我们将学习如何使用 Set 构造函数和 Array.prototype.every() 方法来检查两个可迭代对象是否有任何共同的值。在本实验结束时，你将对如何在你的 JavaScript 代码中实现此功能有扎实的理解。",
      "meta": {
        "title": "JavaScript 中的不相交可迭代对象 | Set | Array.every()",
        "description": "探索 JavaScript 中不相交可迭代对象的概念。学习如何使用 Set 和 Array.every() 来检查两个可迭代对象是否有任何共同的值。",
        "keywords": "JavaScript, 不相交可迭代对象, Set, Array.every(), 编程教程"
      },
      "details": {
        "steps": [
          {
            "title": "不相交的可迭代对象",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "验证 Node 命令的用法",
                "file": "verify1-1.sh",
                "hint": "在终端/SSH 中，通过输入 'node' 并按下回车键，可以运行 JavaScript。"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    }
  ]
}
