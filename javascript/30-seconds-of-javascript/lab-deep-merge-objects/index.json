{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Deep Merge Objects",
  "description": "In this lab, we will explore the concept of deep merging two objects in JavaScript. We will create a function that can take two objects and merge them in a way that allows us to handle keys present in both objects using a custom function. By the end of this lab, you will be able to merge complex objects and combine their values using a custom function.",
  "meta": {
    "title": "Mastering Deep Object Merging in JavaScript",
    "description": "Explore the art of deep merging objects in JavaScript, with a custom function to handle conflicting keys.",
    "keywords": "javascript, object merging, javascript practice, deep merge, javascript practice online, programming tutorial, javascript lab, data manipulation, javascript tutor"
  },
  "difficulty": "Beginner",
  "time": 5,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Deep Merge Objects",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify Node Commands In Zsh History",
            "file": "verify1-1.sh",
            "hint": "JavaScript can be run in the Terminal/SSH by typing 'node' and pressing Enter.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "javascript/arith_ops",
          "javascript/array_methods",
          "javascript/comp_ops",
          "javascript/data_types",
          "javascript/higher_funcs",
          "javascript/spread_rest",
          "javascript/variables"
        ]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["Lotus-7"],
  "license": {
    "name": "CC-BY-4.0",
    "url": "https://github.com/30-seconds/30-seconds-of-code/blob/master/LICENSE",
    "repo": "https://github.com/30-seconds/30-seconds-of-code"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "深度合并对象",
      "description": "在本实验中，我们将探讨在 JavaScript 中深度合并两个对象的概念。我们将创建一个函数，该函数可以接受两个对象，并以一种允许我们使用自定义函数处理两个对象中都存在的键的方式合并它们。在本实验结束时，你将能够使用自定义函数合并复杂对象并组合它们的值。",
      "meta": {
        "title": "精通 JavaScript 中的深度对象合并",
        "description": "探索 JavaScript 中深度合并对象的技巧，使用自定义函数处理冲突的键。",
        "keywords": "JavaScript, 对象合并，JavaScript 实践，深度合并，在线 JavaScript 实践，编程教程，JavaScript 实验，数据操作，JavaScript 教程"
      },
      "details": {
        "steps": [
          {
            "title": "深度合并对象",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "在 Zsh 历史记录中验证 Node 命令",
                "file": "verify1-1.sh",
                "hint": "通过输入'node'并按 Enter 键，可以在终端/SSH 中运行 JavaScript。"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Fusión Profunda de Objetos",
      "description": "En este laboratorio, exploraremos el concepto de fusionar profundamente dos objetos en JavaScript. Crearemos una función que pueda tomar dos objetos y combinarlos de manera que podamos manejar las claves presentes en ambos objetos mediante una función personalizada. Al final de este laboratorio, serás capaz de fusionar objetos complejos y combinar sus valores mediante una función personalizada.",
      "meta": {
        "title": "Dominando la Fusión Profunda de Objetos en JavaScript",
        "description": "Explora el arte de la fusión profunda de objetos en JavaScript, con una función personalizada para manejar claves en conflicto.",
        "keywords": "javascript, fusión de objetos, práctica de javascript, fusión profunda, práctica de javascript en línea, tutorial de programación, laboratorio de javascript, manipulación de datos, tutor de javascript"
      },
      "details": {
        "steps": [
          {
            "title": "Fusión Profunda de Objetos",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Verificar los comandos de Node en el historial de Zsh",
                "file": "verify1-1.sh",
                "hint": "JavaScript se puede ejecutar en la Terminal/SSH escribiendo 'node' y presionando Enter."
              }
            ]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Fusion profonde d'objets",
      "description": "Dans ce laboratoire, nous allons explorer le concept de fusion profonde de deux objets en JavaScript. Nous allons créer une fonction qui peut prendre deux objets et les fusionner de manière à ce que nous puissions gérer les clés présentes dans les deux objets à l'aide d'une fonction personnalisée. À la fin de ce laboratoire, vous serez capable de fusionner des objets complexes et de combiner leurs valeurs à l'aide d'une fonction personnalisée.",
      "meta": {
        "title": "Maîtriser la fusion profonde d'objets en JavaScript",
        "description": "Explorez l'art de la fusion profonde d'objets en JavaScript, avec une fonction personnalisée pour gérer les clés en conflit.",
        "keywords": "javascript, fusion d'objets, pratique javascript, fusion profonde, pratique javascript en ligne, tutoriel de programmation, laboratoire javascript, manipulation de données, tuteur javascript"
      },
      "details": {
        "steps": [
          {
            "title": "Fusion profonde d'objets",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Vérifier les commandes Node dans l'historique Zsh",
                "file": "verify1-1.sh",
                "hint": "JavaScript peut être exécuté dans le Terminal/SSH en tapant 'node' et en appuyant sur Entrée."
              }
            ]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Objekte tief zusammenführen",
      "description": "In diesem Lab werden wir das Konzept des tiefen Zusammenführens von zwei Objekten in JavaScript erkunden. Wir werden eine Funktion erstellen, die zwei Objekte akzeptieren und so zusammenführen kann, dass wir Schlüssel, die in beiden Objekten vorhanden sind, mit einer benutzerdefinierten Funktion verarbeiten können. Am Ende dieses Labs werden Sie in der Lage sein, komplexe Objekte zusammenzuführen und deren Werte mit einer benutzerdefinierten Funktion zu kombinieren.",
      "meta": {
        "title": "Das Tiefen-Zusammenführen von Objekten in JavaScript bemeistern",
        "description": "Entdecken Sie die Kunst des tiefen Zusammenführens von Objekten in JavaScript mit einer benutzerdefinierten Funktion, um konfligierende Schlüssel zu behandeln.",
        "keywords": "javascript, Objektzusammenführung, JavaScript-Praxis, tiefes Zusammenführen, Online-JavaScript-Praxis, Programmier-Tutorial, JavaScript-Lab, Datenmanipulation, JavaScript-Lehrer"
      },
      "details": {
        "steps": [
          {
            "title": "Objekte tief zusammenführen",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Überprüfen von Node-Befehlen in der Zsh-Geschichte",
                "file": "verify1-1.sh",
                "hint": "JavaScript kann im Terminal/SSH ausgeführt werden, indem man 'node' eingibt und die Eingabetaste drückt."
              }
            ]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "オブジェクトを深くマージする",
      "description": "この実験では、JavaScript における 2 つのオブジェクトを深くマージする概念を探ります。2 つのオブジェクトを受け取り、カスタム関数を使って両方のオブジェクトに存在するキーを処理できるようにマージする関数を作成します。この実験が終了すると、カスタム関数を使って複雑なオブジェクトをマージし、それらの値を結合できるようになります。",
      "meta": {
        "title": "JavaScript でのオブジェクトの深いマージのマスター",
        "description": "JavaScript でのオブジェクトの深いマージの技術を探求し、競合するキーを処理するためのカスタム関数を使用します。",
        "keywords": "javascript, オブジェクトマージ，javascript 練習，深いマージ，オンライン javascript 練習，プログラミングチュートリアル，javascript 実験，データ操作，javascript チューター"
      },
      "details": {
        "steps": [
          {
            "title": "オブジェクトを深くマージする",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "Zsh 履歴における Node コマンドを確認する",
                "file": "verify1-1.sh",
                "hint": "ターミナル/SSH で 'node' と入力して Enter キーを押すことで JavaScript を実行できます。"
              }
            ]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Глубокое объединение объектов",
      "description": "В этом практическом занятии мы изучим концепцию глубокого слияния двух объектов в JavaScript. Создадим функцию, которая сможет принимать два объекта и сливать их таким образом, чтобы мы могли обрабатывать ключи, присутствующие в обоих объектах, с использованием пользовательской функции. В конце этого практического занятия вы сможете сливать сложные объекты и комбинировать их значения с использованием пользовательской функции.",
      "meta": {
        "title": "Мастерство в глубоком объединении объектов в JavaScript",
        "description": "Изучите искусство глубокого слияния объектов в JavaScript с использованием пользовательской функции для обработки конфликтующих ключей.",
        "keywords": "javascript, объединение объектов, практика javascript, глубокое слияние, онлайн практика javascript, учебник по программированию, практическое занятие javascript, манипуляция данными, преподаватель по javascript"
      },
      "details": {
        "steps": [
          {
            "title": "Глубокое объединение объектов",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "Проверить команды Node в истории Zsh",
                "file": "verify1-1.sh",
                "hint": "JavaScript можно запустить в Терминале/SSH, введя 'node' и нажав Enter."
              }
            ]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    }
  ]
}
