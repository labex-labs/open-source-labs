{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Deep Merge Objects",
  "description": "In this lab, we will explore the concept of deep merging two objects in JavaScript. We will create a function that can take two objects and merge them in a way that allows us to handle keys present in both objects using a custom function. By the end of this lab, you will be able to merge complex objects and combine their values using a custom function.",
  "meta": {
    "title": "Mastering Deep Object Merging in JavaScript",
    "description": "Explore the art of deep merging objects in JavaScript, with a custom function to handle conflicting keys.",
    "keywords": "javascript, object merging, javascript practice, deep merge, javascript practice online, programming tutorial, javascript lab, data manipulation, javascript tutor"
  },
  "difficulty": "Beginner",
  "time": 10,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Deep Merge Objects",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify Node Commands In Zsh History",
            "file": "verify1-1.sh",
            "hint": "JavaScript can be run in the Terminal/SSH by typing 'node' and pressing Enter.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "javascript/arith_ops",
          "javascript/array_methods",
          "javascript/comp_ops",
          "javascript/data_types",
          "javascript/higher_funcs",
          "javascript/spread_rest",
          "javascript/variables"
        ]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["Lotus-7"],
  "license": {
    "name": "CC-BY-4.0",
    "url": "https://github.com/30-seconds/30-seconds-of-code/blob/master/LICENSE",
    "repo": "https://github.com/30-seconds/30-seconds-of-code"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "深度合并对象",
      "description": "在本实验中，我们将探讨在JavaScript中深度合并两个对象的概念。我们将创建一个函数，该函数可以接受两个对象，并以一种允许我们使用自定义函数处理两个对象中都存在的键的方式合并它们。在本实验结束时，你将能够使用自定义函数合并复杂对象并组合它们的值。",
      "meta": {
        "title": "精通JavaScript中的深度对象合并",
        "description": "探索JavaScript中深度合并对象的技巧，使用自定义函数处理冲突的键。",
        "keywords": "JavaScript, 对象合并, JavaScript实践, 深度合并, 在线JavaScript实践, 编程教程, JavaScript实验, 数据操作, JavaScript教程"
      },
      "details": {
        "steps": [
          {
            "title": "深度合并对象",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "在Zsh历史记录中验证Node命令",
                "file": "verify1-1.sh",
                "hint": "通过输入'node'并按Enter键，可以在终端/SSH中运行JavaScript。"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    }
  ]
}
