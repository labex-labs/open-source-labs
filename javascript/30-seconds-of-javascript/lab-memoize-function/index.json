{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Optimizing JavaScript Functions with Memoization",
  "description": "In this lab, we will be exploring the concept of memoization in JavaScript. Memoization is a technique used to optimize function performance by caching the results of expensive function calls and returning the cached result when the same inputs occur again. Through this lab, we will learn how to implement memoization in JavaScript using the Map object.",
  "meta": {
    "title": "Memoization in JavaScript | Optimizing Function Performance",
    "description": "Learn how to implement memoization in JavaScript using the Map object to optimize function performance by caching expensive function calls.",
    "keywords": "memoization, JavaScript, function optimization, caching, Map object"
  },
  "difficulty": "Beginner",
  "time": 10,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Memoize Function",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify Student Node Command Usage",
            "file": "verify1-1.sh",
            "hint": "JavaScript can be run in the Terminal/SSH by typing 'node' and pressing Enter.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "javascript/arith_ops",
          "javascript/closures",
          "javascript/comp_ops",
          "javascript/data_types",
          "javascript/debugging",
          "javascript/functions",
          "javascript/higher_funcs",
          "javascript/obj_manip",
          "javascript/variables"
        ]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["Lotus-7"],
  "license": {
    "name": "CC-BY-4.0",
    "url": "https://github.com/30-seconds/30-seconds-of-code/blob/master/LICENSE",
    "repo": "https://github.com/30-seconds/30-seconds-of-code"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "使用记忆化优化JavaScript函数",
      "description": "在本实验中，我们将探索JavaScript中的记忆化概念。记忆化是一种通过缓存昂贵函数调用的结果，并在再次出现相同输入时返回缓存结果来优化函数性能的技术。通过本实验，我们将学习如何使用Map对象在JavaScript中实现记忆化。",
      "meta": {
        "title": "JavaScript中的记忆化 | 优化函数性能",
        "description": "学习如何使用Map对象在JavaScript中实现记忆化，通过缓存昂贵的函数调用以优化函数性能。",
        "keywords": "记忆化, JavaScript, 函数优化, 缓存, Map对象"
      },
      "details": {
        "steps": [
          {
            "title": "记忆化函数",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "验证学生对Node命令的使用",
                "file": "verify1-1.sh",
                "hint": "在终端/SSH中，通过输入'node'并按下回车键可以运行JavaScript。"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    }
  ]
}
