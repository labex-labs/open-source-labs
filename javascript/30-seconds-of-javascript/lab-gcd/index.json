{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Recursive Greatest Common Divisor",
  "description": "In this lab, we will be exploring the concept of finding the greatest common divisor between two or more numbers/arrays using JavaScript. The lab will introduce a function that uses recursion to calculate the GCD, with a base case of zero. By the end of the lab, you will have a solid understanding of how to implement this function in your own JavaScript projects.",
  "meta": {
    "title": "JavaScript | Greatest Common Divisor | Recursion",
    "description": "Explore the concept of finding the greatest common divisor between numbers/arrays using JavaScript. Learn how to implement a recursive function to calculate the GCD.",
    "keywords": "JavaScript, Greatest Common Divisor, Recursion, Programming, Coding"
  },
  "difficulty": "Beginner",
  "time": 10,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Greatest Common Divisor",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify Node Commands Executed",
            "file": "verify1-1.sh",
            "hint": "JavaScript can be run in the Terminal/SSH by typing 'node' and pressing Enter.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "javascript/arith_ops",
          "javascript/comp_ops",
          "javascript/data_types",
          "javascript/higher_funcs",
          "javascript/spread_rest",
          "javascript/variables"
        ]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["Lotus-7"],
  "license": {
    "name": "CC-BY-4.0",
    "url": "https://github.com/30-seconds/30-seconds-of-code/blob/master/LICENSE",
    "repo": "https://github.com/30-seconds/30-seconds-of-code"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "递归求最大公约数",
      "description": "在本实验中，我们将探索使用JavaScript找出两个或多个数字/数组的最大公约数的概念。本实验将介绍一个使用递归计算最大公约数的函数，其基线条件为零。在实验结束时，你将对如何在自己的JavaScript项目中实现此函数有深入的理解。",
      "meta": {
        "title": "JavaScript | 最大公约数 | 递归",
        "description": "探索使用JavaScript找出数字/数组之间最大公约数的概念。学习如何实现一个递归函数来计算最大公约数。",
        "keywords": "JavaScript, 最大公约数, 递归, 编程, 编码"
      },
      "details": {
        "steps": [
          {
            "title": "最大公约数",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "验证是否执行了Node命令",
                "file": "verify1-1.sh",
                "hint": "在终端/SSH中输入'node'并回车即可运行JavaScript。"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    }
  ]
}
