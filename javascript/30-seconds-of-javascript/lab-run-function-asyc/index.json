{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Run Function Asynchronously",
  "description": "In this lab, we will learn how to execute long-running functions asynchronously by using a Web Worker. The purpose of the lab is to teach developers how to run functions in a separate thread, allowing them to avoid blocking the UI while the function is executing. The lab provides a practical example of how to create a Web Worker and use it to run a function.",
  "meta": {
    "title": "Asynchronous Function Execution with Web Workers",
    "description": "Learn how to run long-running functions asynchronously using Web Workers to avoid blocking the UI.",
    "keywords": "concurrency, javascript, asynchronous, web workers, javascript practice, javascript practice online, javascript lab, function execution, javascript tutor"
  },
  "difficulty": "Beginner",
  "time": 10,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Run Function Asynchronously",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify Node Commands Executed",
            "file": "verify1-1.sh",
            "hint": "JavaScript can be run in the Terminal/SSH by typing 'node' and pressing Enter.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "javascript/arith_ops",
          "javascript/async_prog",
          "javascript/comp_ops",
          "javascript/data_types",
          "javascript/debugging",
          "javascript/loops",
          "javascript/obj_manip",
          "javascript/template_lit",
          "javascript/variables"
        ]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["Lotus-7"],
  "license": {
    "name": "CC-BY-4.0",
    "url": "https://github.com/30-seconds/30-seconds-of-code/blob/master/LICENSE",
    "repo": "https://github.com/30-seconds/30-seconds-of-code"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "异步运行函数",
      "description": "在本实验中，我们将学习如何使用 Web Worker 异步执行长时间运行的函数。本实验的目的是教导开发者如何在单独的线程中运行函数，从而在函数执行时避免阻塞用户界面。本实验提供了一个关于如何创建 Web Worker 并使用它来运行函数的实际示例。",
      "meta": {
        "title": "使用 Web Workers 进行异步函数执行",
        "description": "学习如何使用 Web Workers 异步运行长时间运行的函数以避免阻塞用户界面。",
        "keywords": "并发, JavaScript, 异步, Web Workers, JavaScript 实践, 在线 JavaScript 实践, JavaScript 实验, 函数执行, JavaScript 教程"
      },
      "details": {
        "steps": [
          {
            "title": "异步运行函数",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "验证已执行的 Node 命令",
                "file": "verify1-1.sh",
                "hint": "在终端/SSH 中输入 'node' 并回车即可运行 JavaScript。"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    }
  ]
}
