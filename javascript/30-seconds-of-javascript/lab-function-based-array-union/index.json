{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Array Union Based on Function",
  "description": "In this lab, we will learn how to implement array union based on a function in JavaScript. We will use the provided comparator function to find and return all the elements that exist in any of the two arrays at least once. By the end of the lab, you will have a better understanding of how to use the Array.prototype.findIndex() method and the Set object to compare and combine arrays.",
  "meta": {
    "title": "Implement Array Union Based on Function",
    "description": "Learn how to implement array union based on a function in JavaScript using the provided comparator function.",
    "keywords": "javascript, array prototype findindex, javascript practice, javascript practice online, set, javascript lab, javascript tutor, comparator function, array union"
  },
  "difficulty": "Beginner",
  "time": 10,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Array Union Based on Function",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify Node Commands In Zsh History",
            "file": "verify1-1.sh",
            "hint": "JavaScript can be run in the Terminal/SSH by typing 'node' and pressing Enter.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "javascript/arith_ops",
          "javascript/comp_ops",
          "javascript/data_types",
          "javascript/higher_funcs",
          "javascript/spread_rest",
          "javascript/variables"
        ]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["Lotus-7"],
  "license": {
    "name": "CC-BY-4.0",
    "url": "https://github.com/30-seconds/30-seconds-of-code/blob/master/LICENSE",
    "repo": "https://github.com/30-seconds/30-seconds-of-code"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "基于函数的数组并集",
      "description": "在本实验中，我们将学习如何在JavaScript中基于一个函数来实现数组并集。我们将使用提供的比较函数来查找并返回至少在两个数组中的任何一个中出现过一次的所有元素。在本实验结束时，你将对如何使用Array.prototype.findIndex()方法和Set对象来比较和合并数组有更深入的理解。",
      "meta": {
        "title": "实现基于函数的数组并集",
        "description": "学习如何使用提供的比较函数在JavaScript中基于一个函数实现数组并集。",
        "keywords": "javascript, 数组原型findindex, javascript实践, 在线javascript实践, set, javascript实验, javascript教程, 比较函数, 数组并集"
      },
      "details": {
        "steps": [
          {
            "title": "基于函数的数组并集",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "在Zsh历史记录中验证Node命令",
                "file": "verify1-1.sh",
                "hint": "通过输入'node'并按Enter键，可以在终端/SSH中运行JavaScript。"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    }
  ]
}
