{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Array Union Based on Function",
  "description": "In this lab, we will learn how to implement array union based on a function in JavaScript. We will use the provided comparator function to find and return all the elements that exist in any of the two arrays at least once. By the end of the lab, you will have a better understanding of how to use the Array.prototype.findIndex() method and the Set object to compare and combine arrays.",
  "meta": {
    "title": "Implement Array Union Based on Function",
    "description": "Learn how to implement array union based on a function in JavaScript using the provided comparator function.",
    "keywords": "javascript, array prototype findindex, javascript practice, javascript practice online, set, javascript lab, javascript tutor, comparator function, array union"
  },
  "difficulty": "Beginner",
  "time": 10,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Array Union Based on Function",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify Node Commands In Zsh History",
            "file": "verify1-1.sh",
            "hint": "JavaScript can be run in the Terminal/SSH by typing 'node' and pressing Enter.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "javascript/arith_ops",
          "javascript/comp_ops",
          "javascript/data_types",
          "javascript/higher_funcs",
          "javascript/spread_rest",
          "javascript/variables"
        ]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["Lotus-7"],
  "license": {
    "name": "CC-BY-4.0",
    "url": "https://github.com/30-seconds/30-seconds-of-code/blob/master/LICENSE",
    "repo": "https://github.com/30-seconds/30-seconds-of-code"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "基于函数的数组并集",
      "description": "在本实验中，我们将学习如何在 JavaScript 中基于一个函数来实现数组并集。我们将使用提供的比较函数来查找并返回至少在两个数组中的任何一个中出现过一次的所有元素。在本实验结束时，你将对如何使用 Array.prototype.findIndex() 方法和 Set 对象来比较和合并数组有更深入的理解。",
      "meta": {
        "title": "实现基于函数的数组并集",
        "description": "学习如何使用提供的比较函数在 JavaScript 中基于一个函数实现数组并集。",
        "keywords": "javascript, 数组原型 findindex, javascript 实践，在线 javascript 实践，set, javascript 实验，javascript 教程，比较函数，数组并集"
      },
      "details": {
        "steps": [
          {
            "title": "基于函数的数组并集",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "在 Zsh 历史记录中验证 Node 命令",
                "file": "verify1-1.sh",
                "hint": "通过输入'node'并按 Enter 键，可以在终端/SSH 中运行 JavaScript。"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Unión de Arrays Basada en Función",
      "description": "En este laboratorio, aprenderemos cómo implementar la unión de arrays basada en una función en JavaScript. Utilizaremos la función comparadora proporcionada para encontrar y devolver todos los elementos que existen al menos una vez en cualquiera de los dos arrays. Al final del laboratorio, tendrás una mejor comprensión de cómo utilizar el método Array.prototype.findIndex() y el objeto Set para comparar y combinar arrays.",
      "meta": {
        "title": "Implementar la Unión de Arrays Basada en Función",
        "description": "Aprende cómo implementar la unión de arrays basada en una función en JavaScript utilizando la función comparadora proporcionada.",
        "keywords": "javascript, array prototype findindex, práctica de javascript, práctica de javascript en línea, set, laboratorio de javascript, tutor de javascript, función comparadora, unión de arrays"
      },
      "details": {
        "steps": [
          {
            "title": "Unión de Arrays Basada en Función",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Verificar los comandos de Node en el historial de Zsh",
                "file": "verify1-1.sh",
                "hint": "JavaScript se puede ejecutar en la Terminal/SSH escribiendo 'node' y presionando Enter."
              }
            ]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Union d'ensembles basée sur une fonction",
      "description": "Dans ce laboratoire, nous allons apprendre à implémenter l'union d'ensembles basée sur une fonction en JavaScript. Nous utiliserons la fonction de comparaison fournie pour trouver et retourner tous les éléments qui existent au moins une fois dans l'un des deux tableaux. À la fin du laboratoire, vous aurez une meilleure compréhension de l'utilisation de la méthode Array.prototype.findIndex() et de l'objet Set pour comparer et combiner des tableaux.",
      "meta": {
        "title": "Implémenter l'union d'ensembles basée sur une fonction",
        "description": "Apprenez à implémenter l'union d'ensembles basée sur une fonction en JavaScript en utilisant la fonction de comparaison fournie.",
        "keywords": "javascript, array prototype findindex, pratique javascript, pratique javascript en ligne, set, laboratoire javascript, tuteur javascript, fonction de comparaison, union d'ensembles"
      },
      "details": {
        "steps": [
          {
            "title": "Union d'ensembles basée sur une fonction",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Vérifier les commandes Node dans l'historique Zsh",
                "file": "verify1-1.sh",
                "hint": "JavaScript peut être exécuté dans le Terminal/SSH en tapant 'node' et en appuyant sur Entrée."
              }
            ]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Arrayvereinigung basierend auf einer Funktion",
      "description": "In diesem Lab werden wir lernen, wie man in JavaScript eine Arrayvereinigung auf der Grundlage einer Funktion implementiert. Wir werden die bereitgestellte Vergleichsfunktion verwenden, um alle Elemente zu finden und zurückzugeben, die in mindestens einem der beiden Arrays mindestens einmal vorhanden sind. Am Ende des Labs werden Sie ein besseres Verständnis dafür haben, wie man die Array.prototype.findIndex()-Methode und das Set-Objekt verwendet, um Arrays zu vergleichen und zu kombinieren.",
      "meta": {
        "title": "Arrayvereinigung basierend auf einer Funktion implementieren",
        "description": "Lernen Sie, wie man in JavaScript eine Arrayvereinigung auf der Grundlage einer Funktion mit der bereitgestellten Vergleichsfunktion implementiert.",
        "keywords": "javascript, array prototype findindex, javascript übung, online javascript übung, set, javascript lab, javascript tutor, Vergleichsfunktion, Arrayvereinigung"
      },
      "details": {
        "steps": [
          {
            "title": "Arrayvereinigung basierend auf einer Funktion",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Überprüfen von Node-Befehlen in der Zsh-Geschichte",
                "file": "verify1-1.sh",
                "hint": "JavaScript kann im Terminal/SSH ausgeführt werden, indem man 'node' eingibt und die Enter-Taste drückt."
              }
            ]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "関数に基づく配列の和集合",
      "description": "この実験では、JavaScript の関数を使って配列の和集合を実装する方法を学びます。提供された比較関数を使って、2 つの配列のいずれかに少なくとも 1 回以上存在するすべての要素を見つけて返します。この実験が終わるとき、`Array.prototype.findIndex()` メソッドと `Set` オブジェクトを使って配列を比較して結合する方法をより深く理解しているでしょう。",
      "meta": {
        "title": "関数に基づく配列の和集合を実装する",
        "description": "提供された比較関数を使って、JavaScript の関数に基づく配列の和集合を実装する方法を学びましょう。",
        "keywords": "javascript, 配列プロトタイプ findindex, javascript の練習，オンラインでの javascript の練習，set, javascript の実験，javascript の講師，比較関数，配列の和集合"
      },
      "details": {
        "steps": [
          {
            "title": "関数に基づく配列の和集合",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "Zsh 履歴の Node コマンドを確認する",
                "file": "verify1-1.sh",
                "hint": "ターミナル/SSH で 'node' と入力して Enter キーを押すことで、JavaScript を実行できます。"
              }
            ]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Объединение массивов на основе функции",
      "description": "В этом практическом занятии мы научимся реализовывать объединение массивов на основе функции на JavaScript. Мы будем использовать предоставленную функцию сравнения, чтобы найти и вернуть все элементы, которые присутствуют хотя бы один раз в любом из двух массивов. В конце практического занятия у вас будет лучше понимание того, как использовать метод Array.prototype.findIndex() и объект Set для сравнения и объединения массивов.",
      "meta": {
        "title": "Реализация объединения массивов на основе функции",
        "description": "Изучите, как реализовать объединение массивов на основе функции в JavaScript с использованием предоставленной функции сравнения.",
        "keywords": "javascript, метод findindex массива-прототипа, практика javascript, онлайн-практика javascript, set, практическое занятие javascript, преподавание javascript, функция сравнения, объединение массивов"
      },
      "details": {
        "steps": [
          {
            "title": "Объединение массивов на основе функции",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "Проверить команды Node в истории Zsh",
                "file": "verify1-1.sh",
                "hint": "JavaScript можно запустить в Терминале/SSH, введя 'node' и нажав Enter."
              }
            ]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    }
  ]
}
