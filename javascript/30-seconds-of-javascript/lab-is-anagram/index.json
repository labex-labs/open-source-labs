{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "String Is Anagram",
  "description": "In this lab, we will explore how to check if a given string is an anagram of another string. An anagram is a word or phrase formed by rearranging the letters of another, such as 'iceman' and 'cinema'. We will use JavaScript to create a function that takes two strings as arguments and returns a boolean value indicating whether they are anagrams of each other or not.",
  "meta": {
    "title": "Discover the Secrets of String Anagrams",
    "description": "Explore the JavaScript function to check if a string is an anagram of another string.",
    "keywords": "javascript, javascript practice, javascript practice online, javascript lab, tutorial, anagram, javascript tutor, programming, string"
  },
  "difficulty": "Beginner",
  "time": 10,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "String Is Anagram",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify Node Commands Executed",
            "file": "verify1-1.sh",
            "hint": "JavaScript can be run in the Terminal/SSH by typing 'node' and pressing Enter.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "javascript/arith_ops",
          "javascript/comp_ops",
          "javascript/data_types",
          "javascript/variables"
        ]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["Lotus-7"],
  "license": {
    "name": "CC-BY-4.0",
    "url": "https://github.com/30-seconds/30-seconds-of-code/blob/master/LICENSE",
    "repo": "https://github.com/30-seconds/30-seconds-of-code"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "字符串是否为变位词",
      "description": "在这个实验中，我们将探索如何检查一个给定的字符串是否是另一个字符串的变位词。变位词是通过重新排列另一个单词或短语的字母而形成的，例如“iceman”和“cinema”。我们将使用JavaScript创建一个函数，该函数接受两个字符串作为参数，并返回一个布尔值，指示它们是否彼此为变位词。",
      "meta": {
        "title": "探索字符串变位词的秘密",
        "description": "探索用于检查字符串是否为另一个字符串变位词的JavaScript函数。",
        "keywords": "javascript, javascript实践, 在线javascript实践, javascript实验, 教程, 变位词, javascript导师, 编程, 字符串"
      },
      "details": {
        "steps": [
          {
            "title": "字符串是否为变位词",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "验证是否执行了Node命令",
                "file": "verify1-1.sh",
                "hint": "在终端/SSH中，通过输入'node'并按回车键可以运行JavaScript。"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    }
  ]
}
