{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "String Is Anagram",
  "description": "In this lab, we will explore how to check if a given string is an anagram of another string. An anagram is a word or phrase formed by rearranging the letters of another, such as 'iceman' and 'cinema'. We will use JavaScript to create a function that takes two strings as arguments and returns a boolean value indicating whether they are anagrams of each other or not.",
  "meta": {
    "title": "Discover the Secrets of String Anagrams",
    "description": "Explore the JavaScript function to check if a string is an anagram of another string.",
    "keywords": "javascript, javascript practice, javascript practice online, javascript lab, tutorial, anagram, javascript tutor, programming, string"
  },
  "difficulty": "Beginner",
  "time": 10,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "String Is Anagram",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify Node Commands Executed",
            "file": "verify1-1.sh",
            "hint": "JavaScript can be run in the Terminal/SSH by typing 'node' and pressing Enter.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "javascript/arith_ops",
          "javascript/comp_ops",
          "javascript/data_types",
          "javascript/variables"
        ]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["Lotus-7"],
  "license": {
    "name": "CC-BY-4.0",
    "url": "https://github.com/30-seconds/30-seconds-of-code/blob/master/LICENSE",
    "repo": "https://github.com/30-seconds/30-seconds-of-code"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "字符串是否为变位词",
      "description": "在这个实验中，我们将探索如何检查一个给定的字符串是否是另一个字符串的变位词。变位词是通过重新排列另一个单词或短语的字母而形成的，例如“iceman”和“cinema”。我们将使用JavaScript创建一个函数，该函数接受两个字符串作为参数，并返回一个布尔值，指示它们是否彼此为变位词。",
      "meta": {
        "title": "探索字符串变位词的秘密",
        "description": "探索用于检查字符串是否为另一个字符串变位词的JavaScript函数。",
        "keywords": "javascript, javascript实践, 在线javascript实践, javascript实验, 教程, 变位词, javascript导师, 编程, 字符串"
      },
      "details": {
        "steps": [
          {
            "title": "字符串是否为变位词",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "验证是否执行了Node命令",
                "file": "verify1-1.sh",
                "hint": "在终端/SSH中，通过输入'node'并按回车键可以运行JavaScript。"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Cadena es Anagrama",
      "description": "En este laboratorio, exploraremos cómo comprobar si una cadena dada es un anagrama de otra cadena. Un anagrama es una palabra o frase formada al reordenar las letras de otra, como 'iceman' y 'cinema'. Usaremos JavaScript para crear una función que tome dos cadenas como argumentos y devuelva un valor booleano que indique si son anagramas el uno del otro o no.",
      "meta": {
        "title": "Descubre los Secretos de los Anagramas de Cadenas",
        "description": "Explora la función de JavaScript para comprobar si una cadena es un anagrama de otra cadena.",
        "keywords": "javascript, práctica de javascript, práctica de javascript en línea, laboratorio de javascript, tutorial, anagrama, tutor de javascript, programación, cadena"
      },
      "details": {
        "steps": [
          {
            "title": "Cadena es Anagrama",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Verificar que se ejecutaron los comandos de Node",
                "file": "verify1-1.sh",
                "hint": "Se puede ejecutar JavaScript en la Terminal/SSH escribiendo 'node' y presionando Enter."
              }
            ]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "La chaîne est un anagramme",
      "description": "Dans ce laboratoire, nous allons explorer la manière de vérifier si une chaîne de caractères donnée est un anagramme d'une autre chaîne. Un anagramme est un mot ou une phrase formé en réarrangeant les lettres d'un autre, comme « iceman » et « cinéma ». Nous allons utiliser JavaScript pour créer une fonction qui prend deux chaînes en arguments et renvoie une valeur booléenne indiquant si elles sont des anagrammes l'une de l'autre ou non.",
      "meta": {
        "title": "Découvrez les secrets des anagrammes de chaînes",
        "description": "Explorez la fonction JavaScript pour vérifier si une chaîne est un anagramme d'une autre chaîne.",
        "keywords": "javascript, pratique javascript, pratique javascript en ligne, laboratoire javascript, tutoriel, anagramme, tuteur javascript, programmation, chaîne"
      },
      "details": {
        "steps": [
          {
            "title": "La chaîne est un anagramme",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Vérifiez que les commandes Node ont été exécutées",
                "file": "verify1-1.sh",
                "hint": "JavaScript peut être exécuté dans le Terminal/SSH en tapant 'node' et en appuyant sur Entrée."
              }
            ]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "String ist Anagramm",
      "description": "In diesem Lab werden wir untersuchen, wie man überprüft, ob ein gegebener String ein Anagramm eines anderen Strings ist. Ein Anagramm ist ein Wort oder eine Phrase, die durch Umordnung der Buchstaben eines anderen gebildet wird, wie z. B. 'iceman' und 'cinema'. Wir werden JavaScript verwenden, um eine Funktion zu erstellen, die zwei Strings als Argumente nimmt und einen booleschen Wert zurückgibt, der angibt, ob sie einander Anagramme sind oder nicht.",
      "meta": {
        "title": "Entdecken Sie die Geheimnisse von String-Anagrammen",
        "description": "Erkunden Sie die JavaScript-Funktion, um zu überprüfen, ob ein String ein Anagramm eines anderen Strings ist.",
        "keywords": "javascript, javascript Übung, online javascript Übung, javascript Lab, Tutorial, Anagramm, javascript Tutor, Programmierung, String"
      },
      "details": {
        "steps": [
          {
            "title": "String ist Anagramm",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Verifizieren Sie, dass die Node-Befehle ausgeführt wurden",
                "file": "verify1-1.sh",
                "hint": "JavaScript kann im Terminal/SSH ausgeführt werden, indem Sie 'node' eingeben und die Enter-Taste drücken."
              }
            ]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "文字列がアナグラムであるかどうか",
      "description": "この実験では、与えられた文字列が別の文字列のアナグラムであるかどうかを確認する方法を探ります。アナグラムとは、別の単語やフレーズの文字を並び替えて作られた単語やフレーズで、たとえば「iceman」と「cinema」のようなものです。JavaScript を使って、2 つの文字列を引数として受け取り、それらが互いのアナグラムであるかどうかを示すブール値を返す関数を作成します。",
      "meta": {
        "title": "文字列アナグラムの秘密を解明する",
        "description": "文字列が別の文字列のアナグラムであるかどうかを確認する JavaScript 関数を探ります。",
        "keywords": "javascript, javascript 練習, オンライン javascript 練習, javascript 実験, チュートリアル, アナグラム, javascript チューター, プログラミング, 文字列"
      },
      "details": {
        "steps": [
          {
            "title": "文字列がアナグラムであるかどうか",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "実行された Node コマンドを確認する",
                "file": "verify1-1.sh",
                "hint": "ターミナル/SSH で 'node' と入力して Enter キーを押すことで、JavaScript を実行できます。"
              }
            ]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Строка - анаграмма",
      "description": "В этом практическом занятии мы изучим, как проверить, является ли данная строка анаграммой другой строки. Анаграмма - это слово или фраза, образованные путём перестановки букв другой, например, \"iceman\" и \"cinema\". Мы будем использовать JavaScript для создания функции, которая принимает две строки в качестве аргументов и возвращает логическое значение, указывающее, являются ли они анаграммами друг друга или нет.",
      "meta": {
        "title": "Откройте секреты анаграмм строк",
        "description": "Изучите JavaScript-функцию для проверки, является ли строка анаграммой другой строки.",
        "keywords": "javascript, практика javascript, онлайн-практика javascript, практическое занятие javascript, руководство, анаграмма, преподаватель javascript, программирование, строка"
      },
      "details": {
        "steps": [
          {
            "title": "Строка - анаграмма",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "Проверить выполнение команд Node",
                "file": "verify1-1.sh",
                "hint": "JavaScript можно запустить в Терминале/SSH, введя 'node' и нажав Enter."
              }
            ]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    }
  ]
}
