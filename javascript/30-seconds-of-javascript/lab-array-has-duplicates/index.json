{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Check if Array Has Duplicates",
  "description": "In this lab, we will explore how to check if an array has duplicates using JavaScript. We will use the Set object to obtain the unique values in the array, then compare the count of these unique values with the length of the original array. By the end of this lab, you will have a better understanding of how to efficiently check for duplicates in an array using JavaScript.",
  "meta": {
    "title": "Detect Duplicate Values in JavaScript Arrays | Programming Tutorial",
    "description": "Learn how to efficiently check for duplicates in JavaScript arrays using the Set object. Improve your coding skills with this comprehensive programming tutorial.",
    "keywords": "JavaScript, arrays, duplicates, Set, programming, tutorial"
  },
  "difficulty": "Beginner",
  "time": 10,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Check if Array Has Duplicates",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify Node Commands Executed",
            "file": "verify1-1.sh",
            "hint": "JavaScript can be run in the Terminal/SSH by typing 'node' and pressing Enter.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "javascript/arith_ops",
          "javascript/comp_ops",
          "javascript/data_types",
          "javascript/variables"
        ]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["Lotus-7"],
  "license": {
    "name": "CC-BY-4.0",
    "url": "https://github.com/30-seconds/30-seconds-of-code/blob/master/LICENSE",
    "repo": "https://github.com/30-seconds/30-seconds-of-code"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "检查数组是否有重复项",
      "description": "在本实验中，我们将探索如何使用JavaScript检查数组中是否存在重复项。我们将使用Set对象来获取数组中的唯一值，然后将这些唯一值的数量与原始数组的长度进行比较。在本实验结束时，你将更好地理解如何使用JavaScript高效地检查数组中的重复项。",
      "meta": {
        "title": "检测JavaScript数组中的重复值 | 编程教程",
        "description": "学习如何使用Set对象在JavaScript数组中高效地检查重复项。通过本全面的编程教程提升你的编码技能。",
        "keywords": "JavaScript, 数组, 重复项, Set, 编程, 教程"
      },
      "details": {
        "steps": [
          {
            "title": "检查数组是否有重复项",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "验证是否执行了Node命令",
                "file": "verify1-1.sh",
                "hint": "在终端/SSH中，通过输入'node'并按回车键可以运行JavaScript。"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Comprobar si un array tiene duplicados",
      "description": "En este laboratorio, exploraremos cómo comprobar si un array tiene duplicados utilizando JavaScript. Utilizaremos el objeto Set para obtener los valores únicos del array, luego compararemos la cantidad de estos valores únicos con la longitud del array original. Al final de este laboratorio, tendrás una mejor comprensión de cómo comprobar eficientemente duplicados en un array utilizando JavaScript.",
      "meta": {
        "title": "Detectar valores duplicados en arrays de JavaScript | Tutorial de programación",
        "description": "Aprende cómo comprobar eficientemente duplicados en arrays de JavaScript utilizando el objeto Set. Mejora tus habilidades de codificación con este completo tutorial de programación.",
        "keywords": "JavaScript, arrays, duplicados, Set, programación, tutorial"
      },
      "details": {
        "steps": [
          {
            "title": "Comprobar si un array tiene duplicados",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Verificar comandos Node ejecutados",
                "file": "verify1-1.sh",
                "hint": "JavaScript se puede ejecutar en la Terminal/SSH escribiendo 'node' y presionando Enter."
              }
            ]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Vérifier s'il y a des doublons dans un tableau",
      "description": "Dans ce laboratoire, nous allons explorer la manière de vérifier si un tableau contient des doublons en utilisant JavaScript. Nous allons utiliser l'objet Set pour obtenir les valeurs uniques dans le tableau, puis comparer le nombre de ces valeurs uniques avec la longueur du tableau original. À la fin de ce laboratoire, vous aurez une meilleure compréhension de la manière d'effectuer efficacement la vérification des doublons dans un tableau en utilisant JavaScript.",
      "meta": {
        "title": "Découvrir les valeurs en double dans les tableaux JavaScript | Tutoriel de programmation",
        "description": "Apprenez à vérifier efficacement les doublons dans les tableaux JavaScript en utilisant l'objet Set. Améliorez vos compétences en programmation avec ce tutoriel de programmation complet.",
        "keywords": "JavaScript, tableaux, doublons, Set, programmation, tutoriel"
      },
      "details": {
        "steps": [
          {
            "title": "Vérifier s'il y a des doublons dans un tableau",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Vérifier que les commandes Node ont été exécutées",
                "file": "verify1-1.sh",
                "hint": "JavaScript peut être exécuté dans le Terminal/SSH en tapant 'node' et en appuyant sur Entrée."
              }
            ]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Prüfen, ob ein Array Duplikate enthält",
      "description": "In diesem Lab werden wir untersuchen, wie man mithilfe von JavaScript überprüft, ob ein Array Duplikate enthält. Wir werden das Set-Objekt verwenden, um die eindeutigen Werte im Array zu erhalten und anschließend die Anzahl dieser eindeutigen Werte mit der Länge des ursprünglichen Arrays vergleichen. Am Ende dieses Labs werden Sie ein besseres Verständnis dafür haben, wie man effizient mithilfe von JavaScript auf Duplikate in einem Array überprüft.",
      "meta": {
        "title": "Duplikatwerte in JavaScript-Arrays erkennen | Programmier-Tutorial",
        "description": "Lernen Sie, wie Sie mithilfe des Set-Objekts effizient auf Duplikate in JavaScript-Arrays überprüfen. Verbessern Sie Ihre Programmierkenntnisse mit diesem umfassenden Programmier-Tutorial.",
        "keywords": "JavaScript, Arrays, Duplikate, Set, Programmierung, Tutorial"
      },
      "details": {
        "steps": [
          {
            "title": "Prüfen, ob ein Array Duplikate enthält",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Verifizieren, dass die Node-Befehle ausgeführt wurden",
                "file": "verify1-1.sh",
                "hint": "JavaScript kann im Terminal/SSH ausgeführt werden, indem man 'node' eingibt und die Enter-Taste drückt."
              }
            ]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "配列に重複する要素があるかどうかを確認する",
      "description": "この実験では、JavaScriptを使って配列に重複する要素があるかどうかを確認する方法を探ります。配列内の一意の値を取得するためにSetオブジェクトを使い、その後、これらの一意の値の数を元の配列の長さと比較します。この実験が終わるとき、JavaScriptを使って配列内の重複を効率的に確認する方法をより深く理解しているでしょう。",
      "meta": {
        "title": "JavaScript配列で重複する値を検出する | プログラミングチュートリアル",
        "description": "Setオブジェクトを使ってJavaScript配列内の重複を効率的に確認する方法を学びましょう。この包括的なプログラミングチュートリアルでコーディング技術を向上させましょう。",
        "keywords": "JavaScript, 配列, 重複, Set, プログラミング, チュートリアル"
      },
      "details": {
        "steps": [
          {
            "title": "配列に重複する要素があるかどうかを確認する",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "Nodeコマンドが実行されたことを確認する",
                "file": "verify1-1.sh",
                "hint": "ターミナル/SSHで 'node' と入力してEnterキーを押すことでJavaScriptを実行できます。"
              }
            ]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Проверить, содержит ли массив дубликаты",
      "description": "В этом практическом занятии мы изучим, как проверить, содержит ли массив дубликаты, используя JavaScript. Мы будем использовать объект Set для получения уникальных значений в массиве, а затем сравнивать количество этих уникальных значений с длиной исходного массива. В конце этого практического занятия вы будете лучше понимать, как эффективно проверять наличие дубликатов в массиве с использованием JavaScript.",
      "meta": {
        "title": "Обнаружить дубликаты значений в массивах JavaScript | Руководство по программированию",
        "description": "Изучите, как эффективно проверять наличие дубликатов в массивах JavaScript с использованием объекта Set. Повысьте свои навыки в программировании с помощью этого полного руководства по программированию.",
        "keywords": "JavaScript, массивы, дубликаты, Set, программирование, руководство"
      },
      "details": {
        "steps": [
          {
            "title": "Проверить, содержит ли массив дубликаты",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "Проверить выполнение команд Node",
                "file": "verify1-1.sh",
                "hint": "JavaScript можно запустить в Терминале/SSH, введя 'node' и нажав Enter."
              }
            ]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    }
  ]
}
