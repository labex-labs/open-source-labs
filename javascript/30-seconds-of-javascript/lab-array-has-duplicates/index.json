{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Check if Array Has Duplicates",
  "description": "In this lab, we will explore how to check if an array has duplicates using JavaScript. We will use the Set object to obtain the unique values in the array, then compare the count of these unique values with the length of the original array. By the end of this lab, you will have a better understanding of how to efficiently check for duplicates in an array using JavaScript.",
  "meta": {
    "title": "Detect Duplicate Values in JavaScript Arrays | Programming Tutorial",
    "description": "Learn how to efficiently check for duplicates in JavaScript arrays using the Set object. Improve your coding skills with this comprehensive programming tutorial.",
    "keywords": "JavaScript, arrays, duplicates, Set, programming, tutorial"
  },
  "difficulty": "Beginner",
  "time": 10,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Check if Array Has Duplicates",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify Node Commands Executed",
            "file": "verify1-1.sh",
            "hint": "JavaScript can be run in the Terminal/SSH by typing 'node' and pressing Enter.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "javascript/arith_ops",
          "javascript/comp_ops",
          "javascript/data_types",
          "javascript/variables"
        ]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["Lotus-7"],
  "license": {
    "name": "CC-BY-4.0",
    "url": "https://github.com/30-seconds/30-seconds-of-code/blob/master/LICENSE",
    "repo": "https://github.com/30-seconds/30-seconds-of-code"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "检查数组是否有重复项",
      "description": "在本实验中，我们将探索如何使用JavaScript检查数组中是否存在重复项。我们将使用Set对象来获取数组中的唯一值，然后将这些唯一值的数量与原始数组的长度进行比较。在本实验结束时，你将更好地理解如何使用JavaScript高效地检查数组中的重复项。",
      "meta": {
        "title": "检测JavaScript数组中的重复值 | 编程教程",
        "description": "学习如何使用Set对象在JavaScript数组中高效地检查重复项。通过本全面的编程教程提升你的编码技能。",
        "keywords": "JavaScript, 数组, 重复项, Set, 编程, 教程"
      },
      "details": {
        "steps": [
          {
            "title": "检查数组是否有重复项",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "验证是否执行了Node命令",
                "file": "verify1-1.sh",
                "hint": "在终端/SSH中，通过输入'node'并按回车键可以运行JavaScript。"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    }
  ]
}
