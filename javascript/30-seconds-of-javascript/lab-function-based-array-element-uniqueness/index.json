{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Unique Array Elements Identification",
  "description": "In this lab, we will dive into a JavaScript programming concept that involves checking if all elements in an array are unique based on a provided mapping function. This lab will demonstrate how to use Array.prototype.map() and Set to efficiently check for unique values and compare them to the original array. By the end of this lab, you will have a solid understanding of how to implement this logic in your JavaScript projects.",
  "meta": {
    "title": "Unique Array Elements | JavaScript Programming",
    "description": "Learn how to check if all elements in a JavaScript array are unique using a mapping function and the Set data structure.",
    "keywords": "JavaScript, Array, Unique, Mapping, Set"
  },
  "difficulty": "Beginner",
  "time": 5,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Check if All Array Elements Are Unique Based on Function",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify Node Commands In Zsh History",
            "file": "verify1-1.sh",
            "hint": "JavaScript can be run in the Terminal/SSH by typing 'node' and pressing Enter.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "javascript/arith_ops",
          "javascript/comp_ops",
          "javascript/data_types",
          "javascript/higher_funcs",
          "javascript/obj_manip",
          "javascript/variables"
        ]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["Lotus-7"],
  "license": {
    "name": "CC-BY-4.0",
    "url": "https://github.com/30-seconds/30-seconds-of-code/blob/master/LICENSE",
    "repo": "https://github.com/30-seconds/30-seconds-of-code"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "识别数组中的唯一元素",
      "description": "在这个实验中，我们将深入探讨一个 JavaScript 编程概念，即根据提供的映射函数检查数组中的所有元素是否唯一。本实验将演示如何使用 Array.prototype.map() 和 Set 来高效地检查唯一值，并将它们与原始数组进行比较。完成本实验后，你将对如何在 JavaScript 项目中实现此逻辑有扎实的理解。",
      "meta": {
        "title": "JavaScript 编程之数组唯一元素",
        "description": "学习如何使用映射函数和 Set 数据结构检查 JavaScript 数组中的所有元素是否唯一。",
        "keywords": "JavaScript, 数组，唯一，映射，Set"
      },
      "details": {
        "steps": [
          {
            "title": "使用函数检查数组中的所有元素是否唯一",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "验证 Zsh 历史记录中的 Node 命令",
                "file": "verify1-1.sh",
                "hint": "在终端/SSH 中，通过输入'node'并按 Enter 键可以运行 JavaScript。"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Identificación de elementos únicos en una matriz",
      "description": "En este laboratorio, profundizaremos en un concepto de programación de JavaScript que implica comprobar si todos los elementos de una matriz son únicos en función de una función de asignación proporcionada. Este laboratorio demostrará cómo usar Array.prototype.map() y Set para comprobar eficientemente valores únicos y compararlos con la matriz original. Al final de este laboratorio, tendrás una comprensión sólida de cómo implementar esta lógica en tus proyectos de JavaScript.",
      "meta": {
        "title": "Elementos únicos de matriz | Programación de JavaScript",
        "description": "Aprende a comprobar si todos los elementos de una matriz de JavaScript son únicos usando una función de asignación y la estructura de datos Set.",
        "keywords": "JavaScript, Matriz, Único, Asignación, Set"
      },
      "details": {
        "steps": [
          {
            "title": "Comprueba si todos los elementos de la matriz son únicos en función de la función",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Verifica los comandos de Node en el historial de Zsh",
                "file": "verify1-1.sh",
                "hint": "Se puede ejecutar JavaScript en la Terminal/SSH escribiendo 'node' y presionando Enter."
              }
            ]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Identification d'éléments de tableau uniques",
      "description": "Dans ce laboratoire, nous allons approfondir un concept de programmation JavaScript qui consiste à vérifier si tous les éléments d'un tableau sont uniques en utilisant une fonction de mappage fournie. Ce laboratoire démontrera comment utiliser Array.prototype.map() et Set pour vérifier efficacement les valeurs uniques et les comparer au tableau original. À la fin de ce laboratoire, vous aurez une compréhension solide de la manière de mettre en œuvre cette logique dans vos projets JavaScript.",
      "meta": {
        "title": "Éléments de tableau uniques | Programmation JavaScript",
        "description": "Découvrez comment vérifier si tous les éléments d'un tableau JavaScript sont uniques en utilisant une fonction de mappage et la structure de données Set.",
        "keywords": "JavaScript, Tableau, Unique, Mappage, Set"
      },
      "details": {
        "steps": [
          {
            "title": "Vérifier si tous les éléments d'un tableau sont uniques en fonction d'une fonction",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Vérifier les commandes Node dans l'historique Zsh",
                "file": "verify1-1.sh",
                "hint": "JavaScript peut être exécuté dans le Terminal/SSH en tapant 'node' et en appuyant sur Entrée."
              }
            ]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Identifizierung eindeutiger Array-Elemente",
      "description": "In diesem Lab werden wir uns einem JavaScript-Programmierkonzept widmen, das darin besteht, zu überprüfen, ob alle Elemente eines Arrays eindeutig sind, basierend auf einer bereitgestellten Zuordnungsfunktion. In diesem Lab wird gezeigt, wie man Array.prototype.map() und Set verwendet, um effizient auf eindeutige Werte zu prüfen und sie mit dem ursprünglichen Array zu vergleichen. Am Ende dieses Labs werden Sie eine solide Vorstellung davon haben, wie Sie diese Logik in Ihren JavaScript-Projekten implementieren können.",
      "meta": {
        "title": "Eindeutige Array-Elemente | JavaScript-Programmierung",
        "description": "Lernen Sie, wie Sie überprüfen, ob alle Elemente in einem JavaScript-Array eindeutig sind, indem Sie eine Zuordnungsfunktion und die Set-Datenstruktur verwenden.",
        "keywords": "JavaScript, Array, Eindeutig, Zuordnung, Set"
      },
      "details": {
        "steps": [
          {
            "title": "Überprüfen, ob alle Array-Elemente basierend auf einer Funktion eindeutig sind",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Überprüfen von Node-Befehlen in der Zsh-Historie",
                "file": "verify1-1.sh",
                "hint": "JavaScript kann im Terminal/SSH ausgeführt werden, indem man 'node' eingibt und die Eingabetaste drückt."
              }
            ]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "配列の一意の要素の識別",
      "description": "この実験では、与えられたマッピング関数に基づいて配列内のすべての要素が一意であるかどうかをチェックする JavaScript のプログラミング概念について掘り下げます。この実験では、Array.prototype.map() と Set を使用して一意の値を効率的にチェックし、それらを元の配列と比較する方法を示します。この実験が終了するまでに、JavaScript プロジェクトでこのロジックを実装する方法を十分に理解しているようになります。",
      "meta": {
        "title": "一意の配列要素 | JavaScript プログラミング",
        "description": "マッピング関数と Set データ構造を使用して、JavaScript 配列内のすべての要素が一意であるかどうかをチェックする方法を学びましょう。",
        "keywords": "JavaScript, 配列，一意，マッピング，Set"
      },
      "details": {
        "steps": [
          {
            "title": "関数に基づいて配列のすべての要素が一意であるかどうかをチェックする",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "Zsh 履歴における Node コマンドを確認する",
                "file": "verify1-1.sh",
                "hint": "ターミナル/SSH で 'node' と入力して Enter キーを押すことで JavaScript を実行できます。"
              }
            ]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Идентификация уникальных элементов массива",
      "description": "В этом практическом занятии мы углубимся в концепцию программирования на JavaScript, которая заключается в проверке уникальности всех элементов массива на основе заданной функции отображения. В этом практическом занятии будет показано, как использовать Array.prototype.map() и Set для эффективной проверки уникальных значений и сравнения их с исходным массивом. В конце этого практического занятия вы глубоко освоите, как реализовать эту логику в своих проектах на JavaScript.",
      "meta": {
        "title": "Уникальные элементы массива | Программирование на JavaScript",
        "description": "Изучите, как проверить уникальность всех элементов в массиве на JavaScript с использованием функции отображения и структуры данных Set.",
        "keywords": "JavaScript, Массив, Уникальный, Отображение, Set"
      },
      "details": {
        "steps": [
          {
            "title": "Проверить уникальность всех элементов массива на основе функции",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "Проверить команды Node в истории Zsh",
                "file": "verify1-1.sh",
                "hint": "JavaScript можно запустить в Терминале/SSH, введя 'node' и нажав Enter."
              }
            ]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    }
  ]
}
