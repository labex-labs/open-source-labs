{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Shallow Clone Object",
  "description": "In this lab, we will explore the concept of shallow cloning in JavaScript. Shallow cloning creates a new object with all of the properties of the original object, but the properties themselves are not cloned. Instead, they are copied by reference, which means that any changes made to the properties of the original object will also be reflected in the cloned object. Through this lab, we will understand how to create shallow clones of objects using the Object.assign() method in JavaScript.",
  "meta": {
    "title": "Shallow Clone Object in JavaScript",
    "description": "Learn how to create shallow clones of objects using the Object.assign() method in JavaScript.",
    "keywords": "object cloning, shallow clone, javascript, javascript practice, javascript practice online, javascript lab, javascript tutor, object assign"
  },
  "difficulty": "Beginner",
  "time": 10,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Shallow Clone Object",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify Node Commands Usage",
            "file": "verify1-1.sh",
            "hint": "JavaScript can be run in the Terminal/SSH by typing 'node' and pressing Enter.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "javascript/arith_ops",
          "javascript/comp_ops",
          "javascript/data_types",
          "javascript/destr_assign",
          "javascript/variables"
        ]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["Lotus-7"],
  "license": {
    "name": "CC-BY-4.0",
    "url": "https://github.com/30-seconds/30-seconds-of-code/blob/master/LICENSE",
    "repo": "https://github.com/30-seconds/30-seconds-of-code"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "浅克隆对象",
      "description": "在本实验中，我们将探讨JavaScript中的浅克隆概念。浅克隆创建一个具有原始对象所有属性的新对象，但属性本身不会被克隆。相反，它们是通过引用复制的，这意味着对原始对象属性所做的任何更改也会反映在克隆对象中。通过本实验，我们将了解如何使用JavaScript中的Object.assign()方法创建对象的浅克隆。",
      "meta": {
        "title": "JavaScript中的浅克隆对象",
        "description": "学习如何使用JavaScript中的Object.assign()方法创建对象的浅克隆。",
        "keywords": "对象克隆, 浅克隆, JavaScript, JavaScript练习, 在线JavaScript练习, JavaScript实验, JavaScript教程, Object.assign"
      },
      "details": {
        "steps": [
          {
            "title": "浅克隆对象",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "验证Node命令的用法",
                "file": "verify1-1.sh",
                "hint": "通过在终端/SSH中输入'node'并按回车键，可以运行JavaScript。"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    }
  ]
}
