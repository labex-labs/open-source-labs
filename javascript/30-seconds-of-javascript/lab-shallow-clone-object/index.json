{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Shallow Clone Object",
  "description": "In this lab, we will explore the concept of shallow cloning in JavaScript. Shallow cloning creates a new object with all of the properties of the original object, but the properties themselves are not cloned. Instead, they are copied by reference, which means that any changes made to the properties of the original object will also be reflected in the cloned object. Through this lab, we will understand how to create shallow clones of objects using the Object.assign() method in JavaScript.",
  "meta": {
    "title": "Shallow Clone Object in JavaScript",
    "description": "Learn how to create shallow clones of objects using the Object.assign() method in JavaScript.",
    "keywords": "object cloning, shallow clone, javascript, javascript practice, javascript practice online, javascript lab, javascript tutor, object assign"
  },
  "difficulty": "Beginner",
  "time": 5,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Shallow Clone Object",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify Node Commands Usage",
            "file": "verify1-1.sh",
            "hint": "JavaScript can be run in the Terminal/SSH by typing 'node' and pressing Enter.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "javascript/arith_ops",
          "javascript/comp_ops",
          "javascript/data_types",
          "javascript/destr_assign",
          "javascript/variables"
        ]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["Lotus-7"],
  "license": {
    "name": "CC-BY-4.0",
    "url": "https://github.com/30-seconds/30-seconds-of-code/blob/master/LICENSE",
    "repo": "https://github.com/30-seconds/30-seconds-of-code"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "浅克隆对象",
      "description": "在本实验中，我们将探讨 JavaScript 中的浅克隆概念。浅克隆创建一个具有原始对象所有属性的新对象，但属性本身不会被克隆。相反，它们是通过引用复制的，这意味着对原始对象属性所做的任何更改也会反映在克隆对象中。通过本实验，我们将了解如何使用 JavaScript 中的 Object.assign() 方法创建对象的浅克隆。",
      "meta": {
        "title": "JavaScript 中的浅克隆对象",
        "description": "学习如何使用 JavaScript 中的 Object.assign() 方法创建对象的浅克隆。",
        "keywords": "对象克隆，浅克隆，JavaScript, JavaScript 练习，在线 JavaScript 练习，JavaScript 实验，JavaScript 教程，Object.assign"
      },
      "details": {
        "steps": [
          {
            "title": "浅克隆对象",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "验证 Node 命令的用法",
                "file": "verify1-1.sh",
                "hint": "通过在终端/SSH 中输入'node'并按回车键，可以运行 JavaScript。"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Clonación superficial de objetos",
      "description": "En este laboratorio, exploraremos el concepto de clonación superficial en JavaScript. La clonación superficial crea un nuevo objeto con todas las propiedades del objeto original, pero las propiedades en sí mismas no se clonan. En su lugar, se copian por referencia, lo que significa que cualquier cambio realizado en las propiedades del objeto original también se reflejará en el objeto clonado. A través de este laboratorio, entenderemos cómo crear clonaciones superficiales de objetos utilizando el método Object.assign() en JavaScript.",
      "meta": {
        "title": "Clonación superficial de objetos en JavaScript",
        "description": "Aprende cómo crear clonaciones superficiales de objetos utilizando el método Object.assign() en JavaScript.",
        "keywords": "clonación de objetos, clonación superficial, javascript, práctica de javascript, práctica de javascript en línea, laboratorio de javascript, tutor de javascript, asignación de objetos"
      },
      "details": {
        "steps": [
          {
            "title": "Clonación superficial de objetos",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Verificar el uso de comandos de Node",
                "file": "verify1-1.sh",
                "hint": "JavaScript se puede ejecutar en la Terminal/SSH escribiendo 'node' y presionando Enter."
              }
            ]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Clonage superficiel d'objets",
      "description": "Dans ce laboratoire, nous allons explorer le concept de clonage superficiel en JavaScript. Le clonage superficiel crée un nouvel objet avec toutes les propriétés de l'objet original, mais les propriétés elles-mêmes ne sont pas clonées. Au lieu de cela, elles sont copiées par référence, ce qui signifie que tout changement apporté aux propriétés de l'objet original sera également réflété dans l'objet cloné. Grâce à ce laboratoire, nous comprendrons comment créer des clones superficiels d'objets à l'aide de la méthode Object.assign() en JavaScript.",
      "meta": {
        "title": "Clonage superficiel d'objets en JavaScript",
        "description": "Découvrez comment créer des clones superficiels d'objets à l'aide de la méthode Object.assign() en JavaScript.",
        "keywords": "clonage d'objets, clonage superficiel, javascript, pratique javascript, pratique javascript en ligne, laboratoire javascript, tuteur javascript, assignation d'objets"
      },
      "details": {
        "steps": [
          {
            "title": "Clonage superficiel d'objets",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Vérifier l'utilisation des commandes Node",
                "file": "verify1-1.sh",
                "hint": "JavaScript peut être exécuté dans le Terminal/SSH en tapant 'node' et en appuyant sur Entrée."
              }
            ]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Flachen Klon eines Objekts",
      "description": "In diesem Lab werden wir das Konzept des flachen Klonens in JavaScript erkunden. Ein flaches Klonen erstellt ein neues Objekt mit allen Eigenschaften des ursprünglichen Objekts, jedoch werden die Eigenschaften selbst nicht geklont. Stattdessen werden sie per Referenz kopiert, was bedeutet, dass Änderungen, die an den Eigenschaften des ursprünglichen Objekts vorgenommen werden, auch im geklonten Objekt widergespiegelt werden. Durch dieses Lab werden wir verstehen, wie man flache Klone von Objekten mit der Object.assign()-Methode in JavaScript erstellt.",
      "meta": {
        "title": "Flacher Klon eines Objekts in JavaScript",
        "description": "Lernen Sie, wie man flache Klone von Objekten mit der Object.assign()-Methode in JavaScript erstellt.",
        "keywords": "Objektklonen, flacher Klon, JavaScript, JavaScript-Ubung, Online-JavaScript-Ubung, JavaScript-Lab, JavaScript-Tutor, Object.assign"
      },
      "details": {
        "steps": [
          {
            "title": "Flachen Klon eines Objekts",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Verifizieren der Verwendung von Node-Befehlen",
                "file": "verify1-1.sh",
                "hint": "JavaScript kann im Terminal/SSH ausgeführt werden, indem man 'node' eingibt und die Enter-Taste drückt."
              }
            ]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "オブジェクトの浅いクローン",
      "description": "この実験では、JavaScript における浅いクローンの概念を探ります。浅いクローンは、元のオブジェクトのすべてのプロパティを持つ新しいオブジェクトを作成しますが、プロパティ自体はクローンされません。代わりに、参照によってコピーされます。これは、元のオブジェクトのプロパティに対して行われた変更が、クローンされたオブジェクトにも反映されることを意味します。この実験を通じて、JavaScript の Object.assign() メソッドを使用してオブジェクトの浅いクローンを作成する方法を理解します。",
      "meta": {
        "title": "JavaScript におけるオブジェクトの浅いクローン",
        "description": "JavaScript の Object.assign() メソッドを使用してオブジェクトの浅いクローンを作成する方法を学びましょう。",
        "keywords": "オブジェクトクローン，浅いクローン，JavaScript, JavaScript 練習，オンライン JavaScript 練習，JavaScript 実験，JavaScript チューター, Object assign"
      },
      "details": {
        "steps": [
          {
            "title": "オブジェクトの浅いクローン",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "Node コマンドの使用を確認する",
                "file": "verify1-1.sh",
                "hint": "ターミナル/SSH で 'node' と入力して Enter キーを押すことで、JavaScript を実行できます。"
              }
            ]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Поверхностный клон объекта",
      "description": "В этом лабе мы изучим концепцию поверхностного клонирования в JavaScript. Поверхностное клонирование создает новый объект со всеми свойствами исходного объекта, но сами свойства не клонируются. Вместо этого они копируются по ссылке, что означает, что любые изменения, внесенные в свойства исходного объекта, также будут отражаться в клонированном объекте. С помощью этого лабе мы поймем, как создавать поверхностные клоны объектов с использованием метода Object.assign() в JavaScript.",
      "meta": {
        "title": "Поверхностный клон объекта в JavaScript",
        "description": "Изучите, как создавать поверхностные клоны объектов с использованием метода Object.assign() в JavaScript.",
        "keywords": "клонирование объекта, поверхностный клон, javascript, практика javascript, онлайн практика javascript, лаборатория javascript, преподаватель javascript, Object assign"
      },
      "details": {
        "steps": [
          {
            "title": "Поверхностный клон объекта",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "Проверить использование команд Node",
                "file": "verify1-1.sh",
                "hint": "JavaScript можно запустить в Терминале/SSH, введя 'node' и нажав Enter."
              }
            ]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    }
  ]
}
