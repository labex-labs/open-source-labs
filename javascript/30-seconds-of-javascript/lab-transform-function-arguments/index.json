{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Transform Function Arguments",
  "description": "In this lab, we will explore the use of the overArgs function in JavaScript. The function allows us to transform arguments before passing them to another function. We will learn how to use overArgs to simplify code and increase reusability by creating a new function that invokes an existing function with transformed arguments.",
  "meta": {
    "title": "Transform Function Arguments in JavaScript",
    "description": "Learn how to use the overArgs function to transform function arguments and simplify code.",
    "keywords": "overargs, javascript, javascript practice, javascript practice online, javascript lab, arguments, function, transform, javascript tutor"
  },
  "difficulty": "Beginner",
  "time": 5,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Transform Function Arguments",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify Node Command Usage",
            "file": "verify1-1.sh",
            "hint": "JavaScript can be run in the Terminal/SSH by typing 'node' and pressing Enter.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "javascript/arith_ops",
          "javascript/array_methods",
          "javascript/comp_ops",
          "javascript/data_types",
          "javascript/higher_funcs",
          "javascript/spread_rest",
          "javascript/variables"
        ]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["Lotus-7"],
  "license": {
    "name": "CC-BY-4.0",
    "url": "https://github.com/30-seconds/30-seconds-of-code/blob/master/LICENSE",
    "repo": "https://github.com/30-seconds/30-seconds-of-code"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "转换函数参数",
      "description": "在本实验中，我们将探索 JavaScript 中 overArgs 函数的用法。该函数允许我们在将参数传递给另一个函数之前对其进行转换。我们将学习如何使用 overArgs 通过创建一个新函数来简化代码并提高可重用性，该新函数使用转换后的参数调用现有函数。",
      "meta": {
        "title": "JavaScript 中的转换函数参数",
        "description": "学习如何使用 overArgs 函数转换函数参数并简化代码。",
        "keywords": "overargs, javascript, javascript 实践，在线 javascript 实践，javascript 实验，参数，函数，转换，javascript 教程"
      },
      "details": {
        "steps": [
          {
            "title": "转换函数参数",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "验证 Node 命令的用法",
                "file": "verify1-1.sh",
                "hint": "在终端/SSH 中，通过输入'node'并按下回车键，可以运行 JavaScript。"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Transformar los argumentos de una función",
      "description": "En este laboratorio, exploraremos el uso de la función overArgs en JavaScript. Esta función nos permite transformar los argumentos antes de pasarlos a otra función. Aprenderemos cómo utilizar overArgs para simplificar el código y aumentar la reutilización creando una nueva función que invoque una función existente con argumentos transformados.",
      "meta": {
        "title": "Transformar los argumentos de una función en JavaScript",
        "description": "Aprende cómo utilizar la función overArgs para transformar los argumentos de una función y simplificar el código.",
        "keywords": "overargs, javascript, práctica de javascript, práctica de javascript en línea, laboratorio de javascript, argumentos, función, transformar, tutor de javascript"
      },
      "details": {
        "steps": [
          {
            "title": "Transformar los argumentos de una función",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Verificar el uso del comando Node",
                "file": "verify1-1.sh",
                "hint": "Se puede ejecutar JavaScript en la Terminal/SSH escribiendo 'node' y presionando Enter."
              }
            ]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Transformer les arguments d'une fonction",
      "description": "Dans ce laboratoire, nous allons explorer l'utilisation de la fonction overArgs en JavaScript. Cette fonction nous permet de transformer les arguments avant de les passer à une autre fonction. Nous allons apprendre à utiliser overArgs pour simplifier le code et augmenter la réutilisabilité en créant une nouvelle fonction qui appelle une fonction existante avec des arguments transformés.",
      "meta": {
        "title": "Transformer les arguments d'une fonction en JavaScript",
        "description": "Apprenez à utiliser la fonction overArgs pour transformer les arguments d'une fonction et simplifier le code.",
        "keywords": "overargs, javascript, pratique javascript, pratique javascript en ligne, laboratoire javascript, arguments, fonction, transformer, tuteur javascript"
      },
      "details": {
        "steps": [
          {
            "title": "Transformer les arguments d'une fonction",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Vérifier l'utilisation de la commande Node",
                "file": "verify1-1.sh",
                "hint": "JavaScript peut être exécuté dans le Terminal/SSH en tapant 'node' et en appuyant sur Entrée."
              }
            ]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Funktionargumente transformieren",
      "description": "In diesem Lab werden wir die Verwendung der overArgs-Funktion in JavaScript erkunden. Die Funktion ermöglicht es uns, Argumente zu transformieren, bevor wir sie an eine andere Funktion übergeben. Wir werden lernen, wie wir overArgs verwenden, um den Code zu vereinfachen und die Wiederverwendbarkeit zu erhöhen, indem wir eine neue Funktion erstellen, die eine vorhandene Funktion mit transformierten Argumenten aufruft.",
      "meta": {
        "title": "Funktionargumente in JavaScript transformieren",
        "description": "Lernen Sie, wie Sie die overArgs-Funktion verwenden, um Funktionargumente zu transformieren und den Code zu vereinfachen.",
        "keywords": "overargs, javascript, javascript Übung, Online-JavaScript-Übung, JavaScript-Lab, Argumente, Funktion, transformieren, JavaScript-Tutor"
      },
      "details": {
        "steps": [
          {
            "title": "Funktionargumente transformieren",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Überprüfen der Verwendung des Node-Befehls",
                "file": "verify1-1.sh",
                "hint": "JavaScript kann im Terminal/SSH ausgeführt werden, indem Sie 'node' eingeben und die Eingabetaste drücken."
              }
            ]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "関数の引数を変換する",
      "description": "この実験では、JavaScript の overArgs 関数の使い方を調べます。この関数を使うと、引数を別の関数に渡す前に変換することができます。既存の関数を変換された引数で呼び出す新しい関数を作成することで、コードを簡略化し、再利用性を高めるための overArgs の使い方を学びます。",
      "meta": {
        "title": "JavaScript で関数の引数を変換する",
        "description": "overArgs 関数を使って関数の引数を変換し、コードを簡略化する方法を学びましょう。",
        "keywords": "overargs, javascript, javascript の練習，オンラインでの javascript の練習，javascript の実験，引数，関数，変換，javascript チューター"
      },
      "details": {
        "steps": [
          {
            "title": "関数の引数を変換する",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "Node コマンドの使用を確認する",
                "file": "verify1-1.sh",
                "hint": "ターミナル/SSH で 'node' と入力して Enter キーを押すことで、JavaScript を実行できます。"
              }
            ]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Преобразование аргументов функции",
      "description": "В этом лабе мы будем изучать использование функции overArgs в JavaScript. Эта функция позволяет нам преобразовывать аргументы перед передачей их в другую функцию. Мы узнаем, как использовать overArgs для упрощения кода и повышения повторяемости, создав новую функцию, которая вызывает существующую функцию с преобразованными аргументами.",
      "meta": {
        "title": "Преобразование аргументов функции в JavaScript",
        "description": "Изучите, как использовать функцию overArgs для преобразования аргументов функции и упрощения кода.",
        "keywords": "overargs, javascript, практика javascript, онлайн практика javascript, лаб javascript, аргументы, функция, преобразование, преподаватель javascript"
      },
      "details": {
        "steps": [
          {
            "title": "Преобразование аргументов функции",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "Проверить использование команды Node",
                "file": "verify1-1.sh",
                "hint": "JavaScript можно запустить в Терминале/SSH, введя 'node' и нажав Enter."
              }
            ]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    }
  ]
}
