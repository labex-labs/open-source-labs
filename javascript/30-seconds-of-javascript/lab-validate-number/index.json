{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Validating Numbers in JavaScript",
  "description": "In this lab, we will explore a JavaScript function that checks whether a given value is a number. We will use the parseFloat() method to convert the value to a number and then validate it using Number.isNaN() and Number.isFinite(). We will also use coercion to check if the value is a number. By the end of this lab, you will have a better understanding of how to validate numbers in JavaScript.",
  "meta": {
    "title": "JavaScript Number Validation | Programming Tutorial",
    "description": "Explore a JavaScript function that checks whether a given value is a number. Learn how to use parseFloat(), Number.isNaN(), and Number.isFinite() for effective number validation.",
    "keywords": "JavaScript, Number Validation, Programming, Tutorial, parseFloat, Number.isNaN, Number.isFinite"
  },
  "difficulty": "Beginner",
  "time": 5,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Validate Number",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify Node Command Usage",
            "file": "verify1-1.sh",
            "hint": "JavaScript can be run in the Terminal/SSH by typing 'node' and pressing Enter.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "javascript/arith_ops",
          "javascript/comp_ops",
          "javascript/data_types",
          "javascript/variables"
        ]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["Lotus-7"],
  "license": {
    "name": "CC-BY-4.0",
    "url": "https://github.com/30-seconds/30-seconds-of-code/blob/master/LICENSE",
    "repo": "https://github.com/30-seconds/30-seconds-of-code"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "在 JavaScript 中验证数字",
      "description": "在本实验中，我们将探索一个 JavaScript 函数，用于检查给定值是否为数字。我们将使用 parseFloat() 方法将该值转换为数字，然后使用 Number.isNaN() 和 Number.isFinite() 进行验证。我们还将使用强制类型转换来检查该值是否为数字。在本实验结束时，你将对如何在 JavaScript 中验证数字有更深入的理解。",
      "meta": {
        "title": "JavaScript 数字验证 | 编程教程",
        "description": "探索一个 JavaScript 函数，用于检查给定值是否为数字。学习如何使用 parseFloat()、Number.isNaN() 和 Number.isFinite() 进行有效的数字验证。",
        "keywords": "JavaScript, 数字验证，编程，教程，parseFloat, Number.isNaN, Number.isFinite"
      },
      "details": {
        "steps": [
          {
            "title": "验证数字",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "验证 Node 命令的用法",
                "file": "verify1-1.sh",
                "hint": "在终端/SSH 中，通过输入'node'并按下回车键，可以运行 JavaScript。"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Validar números en JavaScript",
      "description": "En este laboratorio, exploraremos una función de JavaScript que comprueba si un valor dado es un número. Utilizaremos el método parseFloat() para convertir el valor en un número y luego lo validaremos utilizando Number.isNaN() y Number.isFinite(). También utilizaremos la coerción para comprobar si el valor es un número. Al final de este laboratorio, tendrás una mejor comprensión de cómo validar números en JavaScript.",
      "meta": {
        "title": "Validación de números de JavaScript | Tutorial de programación",
        "description": "Explore una función de JavaScript que comprueba si un valor dado es un número. Aprenda cómo usar parseFloat(), Number.isNaN() y Number.isFinite() para una efectiva validación de números.",
        "keywords": "JavaScript, Validación de números, Programación, Tutorial, parseFloat, Number.isNaN, Number.isFinite"
      },
      "details": {
        "steps": [
          {
            "title": "Validar número",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Verificar el uso del comando Node",
                "file": "verify1-1.sh",
                "hint": "JavaScript se puede ejecutar en la Terminal/SSH escribiendo 'node' y presionando Enter."
              }
            ]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Validation de nombres en JavaScript",
      "description": "Dans ce laboratoire, nous allons explorer une fonction JavaScript qui vérifie si une valeur donnée est un nombre. Nous utiliserons la méthode parseFloat() pour convertir la valeur en nombre puis la valider à l'aide de Number.isNaN() et Number.isFinite(). Nous utiliserons également la coercition pour vérifier si la valeur est un nombre. À la fin de ce laboratoire, vous aurez une meilleure compréhension de la manière de valider les nombres en JavaScript.",
      "meta": {
        "title": "Validation de nombres JavaScript | Tutoriel de programmation",
        "description": "Explorez une fonction JavaScript qui vérifie si une valeur donnée est un nombre. Apprenez à utiliser parseFloat(), Number.isNaN() et Number.isFinite() pour une validation de nombres efficace.",
        "keywords": "JavaScript, Validation de nombres, Programmation, Tutoriel, parseFloat, Number.isNaN, Number.isFinite"
      },
      "details": {
        "steps": [
          {
            "title": "Valider un nombre",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Vérifier l'utilisation de la commande Node",
                "file": "verify1-1.sh",
                "hint": "JavaScript peut être exécuté dans le Terminal/SSH en tapant 'node' et en appuyant sur Entrée."
              }
            ]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Zahlenvalidierung in JavaScript",
      "description": "In diesem Lab werden wir eine JavaScript-Funktion untersuchen, die überprüft, ob ein gegebenen Wert eine Zahl ist. Wir werden die parseFloat()-Methode verwenden, um den Wert in eine Zahl umzuwandeln und ihn dann mit Number.isNaN() und Number.isFinite() zu validieren. Wir werden auch die Konvertierung verwenden, um zu überprüfen, ob der Wert eine Zahl ist. Am Ende dieses Labs werden Sie ein besseres Verständnis dafür haben, wie man in JavaScript Zahlen validiert.",
      "meta": {
        "title": "JavaScript-Zahlenvalidierung | Programmier-Tutorial",
        "description": "Entdecken Sie eine JavaScript-Funktion, die überprüft, ob ein gegebenen Wert eine Zahl ist. Lernen Sie, wie Sie parseFloat(), Number.isNaN() und Number.isFinite() für eine effektive Zahlenvalidierung verwenden.",
        "keywords": "JavaScript, Zahlenvalidierung, Programmierung, Tutorial, parseFloat, Number.isNaN, Number.isFinite"
      },
      "details": {
        "steps": [
          {
            "title": "Zahl validieren",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Überprüfen der Verwendung des Node-Befehls",
                "file": "verify1-1.sh",
                "hint": "JavaScript kann im Terminal/SSH ausgeführt werden, indem man 'node' eingibt und die Eingabetaste drückt."
              }
            ]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "JavaScript における数値の検証",
      "description": "この実験では、与えられた値が数値かどうかをチェックする JavaScript 関数を調べます。値を数値に変換するために parseFloat() メソッドを使用し、その後 Number.isNaN() と Number.isFinite() を使って検証します。また、値が数値かどうかを確認するために型強制も使用します。この実験が終了するまでに、JavaScript で数値を検証する方法をより深く理解するようになります。",
      "meta": {
        "title": "JavaScript の数値検証 | プログラミングチュートリアル",
        "description": "与えられた値が数値かどうかをチェックする JavaScript 関数を調べます。parseFloat()、Number.isNaN()、Number.isFinite() を使った効果的な数値検証の方法を学びましょう。",
        "keywords": "JavaScript, 数値検証，プログラミング，チュートリアル，parseFloat, Number.isNaN, Number.isFinite"
      },
      "details": {
        "steps": [
          {
            "title": "数値を検証する",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "Node コマンドの使用を確認する",
                "file": "verify1-1.sh",
                "hint": "ターミナル/SSH で'node'と入力して Enter キーを押すことで JavaScript を実行できます。"
              }
            ]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Проверка чисел в JavaScript",
      "description": "В этом практическом занятии мы изучим функцию JavaScript, которая проверяет, является ли заданное значение числом. Мы будем использовать метод parseFloat() для преобразования значения в число, а затем проверять его с использованием Number.isNaN() и Number.isFinite(). Также мы будем использовать неявное приведение типов для проверки, является ли значение числом. В конце этого практического занятия вы будете лучше понимать, как проверять числа в JavaScript.",
      "meta": {
        "title": "Проверка чисел в JavaScript | Руководство по программированию",
        "description": "Изучите функцию JavaScript, которая проверяет, является ли заданное значение числом. Найдите, как использовать parseFloat(), Number.isNaN() и Number.isFinite() для эффективной проверки чисел.",
        "keywords": "JavaScript, Проверка чисел, Программирование, Руководство, parseFloat, Number.isNaN, Number.isFinite"
      },
      "details": {
        "steps": [
          {
            "title": "Проверить число",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "Проверить использование команды Node",
                "file": "verify1-1.sh",
                "hint": "JavaScript можно запустить в Терминале/SSH, введя 'node' и нажав Enter."
              }
            ]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    },
    {
      "lang": "ko",
      "title": "JavaScript 에서 숫자 유효성 검사",
      "description": "이 랩에서는 주어진 값이 숫자인지 확인하는 JavaScript 함수를 살펴봅니다. parseFloat() 메서드를 사용하여 값을 숫자로 변환한 다음 Number.isNaN() 및 Number.isFinite() 를 사용하여 유효성을 검사합니다. 또한 강제 변환 (coercion) 을 사용하여 값이 숫자인지 확인합니다. 이 랩을 마치면 JavaScript 에서 숫자의 유효성을 검사하는 방법에 대한 이해도가 높아질 것입니다.",
      "meta": {
        "title": "JavaScript 숫자 유효성 검사 | 프로그래밍 튜토리얼",
        "description": "주어진 값이 숫자인지 확인하는 JavaScript 함수를 살펴보세요. 효과적인 숫자 유효성 검사를 위해 parseFloat(), Number.isNaN(), Number.isFinite() 를 사용하는 방법을 알아보세요.",
        "keywords": "JavaScript, 숫자 유효성 검사, 프로그래밍, 튜토리얼, parseFloat, Number.isNaN, Number.isFinite"
      },
      "details": {
        "steps": [
          {
            "title": "숫자 유효성 검사",
            "text": "ko/step1.md",
            "verify": [
              {
                "name": "Node 명령어 사용 확인",
                "file": "verify1-1.sh",
                "hint": "터미널/SSH 에서 'node'를 입력하고 Enter 키를 눌러 JavaScript 를 실행할 수 있습니다."
              }
            ]
          }
        ],
        "intro": {
          "text": "ko/intro.md",
          "title": "소개"
        },
        "finish": {
          "text": "ko/finish.md",
          "title": "요약"
        }
      }
    },
    {
      "lang": "pt",
      "title": "Validação de Números em JavaScript",
      "description": "Neste laboratório, exploraremos uma função JavaScript que verifica se um determinado valor é um número. Usaremos o método parseFloat() para converter o valor em um número e, em seguida, validá-lo usando Number.isNaN() e Number.isFinite(). Também usaremos coerção para verificar se o valor é um número. Ao final deste laboratório, você terá uma melhor compreensão de como validar números em JavaScript.",
      "meta": {
        "title": "Validação de Números em JavaScript | Tutorial de Programação",
        "description": "Explore uma função JavaScript que verifica se um valor é um número. Aprenda a usar parseFloat(), Number.isNaN() e Number.isFinite() para uma validação de números eficaz.",
        "keywords": "JavaScript, Validação de Números, Programação, Tutorial, parseFloat, Number.isNaN, Number.isFinite, validar número javascript"
      },
      "details": {
        "steps": [
          {
            "title": "Validar Número",
            "text": "pt/step1.md",
            "verify": [
              {
                "name": "Verificar Uso do Comando Node",
                "file": "verify1-1.sh",
                "hint": "JavaScript pode ser executado no Terminal/SSH digitando 'node' e pressionando Enter."
              }
            ]
          }
        ],
        "intro": {
          "text": "pt/intro.md",
          "title": "Introdução"
        },
        "finish": {
          "text": "pt/finish.md",
          "title": "Resumo"
        }
      }
    }
  ]
}
