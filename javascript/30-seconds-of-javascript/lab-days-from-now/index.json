{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Calculate Date n Days Ahead",
  "description": "In this lab, we will explore how to calculate the date of n days from today using JavaScript. We will use the Date constructor, along with various date methods such as getDate() and setDate(), to manipulate dates and return a string representation of the calculated date in yyyy-mm-dd format. By the end of this lab, you will have a better understanding of how to work with dates in JavaScript and be able to apply this knowledge to various projects.",
  "meta": {
    "title": "Calculate Date | JavaScript Date Manipulation",
    "description": "Learn how to calculate the date of n days from today using JavaScript. Explore date methods like getDate() and setDate() to manipulate dates and return a string representation in yyyy-mm-dd format.",
    "keywords": "JavaScript, Date, Date Manipulation, Date Calculation, Time, Time Calculation"
  },
  "difficulty": "Beginner",
  "time": 10,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Days From Now",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify Node Command Usage",
            "file": "verify1-1.sh",
            "hint": "JavaScript can be run in the Terminal/SSH by typing 'node' and pressing Enter.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "javascript/arith_ops",
          "javascript/comp_ops",
          "javascript/cond_stmts",
          "javascript/data_types",
          "javascript/variables"
        ]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["Lotus-7"],
  "license": {
    "name": "CC-BY-4.0",
    "url": "https://github.com/30-seconds/30-seconds-of-code/blob/master/LICENSE",
    "repo": "https://github.com/30-seconds/30-seconds-of-code"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "计算提前 n 天的日期",
      "description": "在本实验中，我们将探索如何使用 JavaScript 计算从今天起 n 天后的日期。我们将使用 Date 构造函数以及各种日期方法，如 getDate() 和 setDate()，来操作日期，并以 yyyy-mm-dd 格式返回计算日期的字符串表示形式。在本实验结束时，你将更好地理解如何在 JavaScript 中处理日期，并能够将这些知识应用于各种项目。",
      "meta": {
        "title": "计算日期 | JavaScript 日期操作",
        "description": "学习如何使用 JavaScript 计算从今天起 n 天后的日期。探索诸如 getDate() 和 setDate() 等日期方法来操作日期，并以 yyyy-mm-dd 格式返回字符串表示形式。",
        "keywords": "JavaScript, 日期，日期操作，日期计算，时间，时间计算"
      },
      "details": {
        "steps": [
          {
            "title": "从现在起的天数",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "验证 Node 命令的用法",
                "file": "verify1-1.sh",
                "hint": "通过在终端/SSH 中输入'node'并按回车键，可以运行 JavaScript。"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Calcular la fecha n días adelante",
      "description": "En este laboratorio, exploraremos cómo calcular la fecha de n días a partir de hoy utilizando JavaScript. Utilizaremos el constructor Date, junto con varios métodos de fecha como getDate() y setDate(), para manipular fechas y devolver una representación en cadena de la fecha calculada en el formato yyyy-mm-dd. Al final de este laboratorio, tendrás una mejor comprensión de cómo trabajar con fechas en JavaScript y serás capaz de aplicar este conocimiento a varios proyectos.",
      "meta": {
        "title": "Calcular fecha | Manipulación de fechas en JavaScript",
        "description": "Aprende cómo calcular la fecha de n días a partir de hoy utilizando JavaScript. Explora métodos de fecha como getDate() y setDate() para manipular fechas y devolver una representación en cadena en el formato yyyy-mm-dd.",
        "keywords": "JavaScript, Fecha, Manipulación de fechas, Cálculo de fechas, Tiempo, Cálculo de tiempo"
      },
      "details": {
        "steps": [
          {
            "title": "Días a partir de hoy",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Verificar el uso del comando Node",
                "file": "verify1-1.sh",
                "hint": "JavaScript se puede ejecutar en la Terminal/SSH escribiendo 'node' y presionando Enter."
              }
            ]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Calculer la date n jours plus tard",
      "description": "Dans ce laboratoire, nous allons explorer la manière de calculer la date de n jours à partir d'aujourd'hui en utilisant JavaScript. Nous utiliserons le constructeur Date, ainsi que diverses méthodes de date telles que getDate() et setDate(), pour manipuler les dates et retourner une représentation sous forme de chaîne de la date calculée au format aaaa-mm-jj. À la fin de ce laboratoire, vous aurez une meilleure compréhension de la manière de travailler avec les dates en JavaScript et serez en mesure d'appliquer ces connaissances à divers projets.",
      "meta": {
        "title": "Calculer la date | Manipulation des dates JavaScript",
        "description": "Découvrez comment calculer la date de n jours à partir d'aujourd'hui en utilisant JavaScript. Explorez les méthodes de date telles que getDate() et setDate() pour manipuler les dates et retourner une représentation sous forme de chaîne au format aaaa-mm-jj.",
        "keywords": "JavaScript, Date, Manipulation des dates, Calcul de dates, Temps, Calcul de temps"
      },
      "details": {
        "steps": [
          {
            "title": "Jours à partir d'aujourd'hui",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Vérifier l'utilisation de la commande Node",
                "file": "verify1-1.sh",
                "hint": "JavaScript peut être exécuté dans le Terminal/SSH en tapant 'node' et en appuyant sur Entrée."
              }
            ]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Datum n Tage in der Zukunft berechnen",
      "description": "In diesem Lab werden wir untersuchen, wie man mit JavaScript das Datum von heute aus für n Tage in die Zukunft berechnet. Wir werden den Date-Konstruktor zusammen mit verschiedenen Datums-Methoden wie getDate() und setDate() verwenden, um Datumsangaben zu manipulieren und eine Zeichenfolgendarstellung des berechneten Datums im Format yyyy-mm-dd zurückzugeben. Am Ende dieses Labs werden Sie ein besseres Verständnis dafür haben, wie man mit Datumsangaben in JavaScript umgeht, und können diese Kenntnisse auf verschiedene Projekte anwenden.",
      "meta": {
        "title": "Datum berechnen | JavaScript Datumsmanipulation",
        "description": "Lernen Sie, wie man mit JavaScript das Datum von heute aus für n Tage in die Zukunft berechnet. Entdecken Sie Datums-Methoden wie getDate() und setDate(), um Datumsangaben zu manipulieren und eine Zeichenfolgendarstellung im Format yyyy-mm-dd zurückzugeben.",
        "keywords": "JavaScript, Datum, Datumsmanipulation, Datumsberechnung, Zeit, Zeitberechnung"
      },
      "details": {
        "steps": [
          {
            "title": "Tage von heute aus",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Überprüfen der Verwendung des Node-Befehls",
                "file": "verify1-1.sh",
                "hint": "JavaScript kann im Terminal/SSH ausgeführt werden, indem man 'node' eingibt und die Eingabetaste drückt."
              }
            ]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "n 日後の日付を計算する",
      "description": "この実験では、JavaScript を使って今日から n 日後の日付を計算する方法を探ります。Date コンストラクタと、getDate() や setDate() などのさまざまな日付メソッドを使って、日付を操作し、計算された日付の文字列を yyyy-mm-dd 形式で返します。この実験が終わるとき、JavaScript で日付を扱う方法をより深く理解し、この知識をさまざまなプロジェクトに適用できるようになります。",
      "meta": {
        "title": "日付を計算する | JavaScript の日付操作",
        "description": "JavaScript を使って今日から n 日後の日付を計算する方法を学びましょう。getDate() や setDate() などの日付メソッドを使って日付を操作し、yyyy-mm-dd 形式の文字列を返しましょう。",
        "keywords": "JavaScript, 日付，日付操作，日付計算，時間，時間計算"
      },
      "details": {
        "steps": [
          {
            "title": "今日からの日数",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "Node コマンドの使用を確認する",
                "file": "verify1-1.sh",
                "hint": "ターミナル/SSH で'node'と入力して Enter キーを押すことで、JavaScript を実行できます。"
              }
            ]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Вычислить дату, которая наступит через n дней",
      "description": "В этом практическом занятии мы изучим, как вычислять дату, которая наступит через n дней от текущей, с использованием JavaScript. Мы будем использовать конструктор Date и различные методы работы с датами, такие как getDate() и setDate(), для манипуляции датами и возврата строкового представления вычисленной даты в формате yyyy-mm-dd. В конце практического занятия вы будете иметь более глубокое понимание того, как работать с датами в JavaScript, и сможете применить эти знания в различных проектах.",
      "meta": {
        "title": "Вычислить дату | Manipulation дат в JavaScript",
        "description": "Изучите, как вычислять дату, которая наступит через n дней от текущей, с использованием JavaScript. Исследуйте методы работы с датами, такие как getDate() и setDate(), для манипуляции датами и возврата строкового представления в формате yyyy-mm-dd.",
        "keywords": "JavaScript, Дата, Manipulation дат, Вычисление дат, Время, Вычисление времени"
      },
      "details": {
        "steps": [
          {
            "title": "Дни от текущей даты",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "Проверить использование команды Node",
                "file": "verify1-1.sh",
                "hint": "JavaScript можно запустить в Терминале/SSH, введя 'node' и нажав Enter."
              }
            ]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    }
  ]
}
