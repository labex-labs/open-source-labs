{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Group Data from Multiple Arrays",
  "description": "In this lab, we will be exploring how to group array elements based on their position in the original arrays. We will be using the zip() function which takes in multiple arrays and returns a new array containing sub-arrays of elements from each input array, grouped by their position. This is a useful technique in data processing and analysis, and can be used to combine data from multiple sources into a single data structure for further analysis.",
  "meta": {
    "title": "Grouping Array Elements | Data Processing | JavaScript Techniques",
    "description": "Learn how to group array elements based on their position using the powerful zip() function in JavaScript. Explore data processing and analysis techniques.",
    "keywords": "array grouping, data processing, JavaScript techniques, zip function, data analysis"
  },
  "difficulty": "Beginner",
  "time": 10,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Group Array Elements",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify Node Commands in ZSH History",
            "file": "verify1-1.sh",
            "hint": "JavaScript can be run in the Terminal/SSH by typing 'node' and pressing Enter.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "javascript/arith_ops",
          "javascript/array_methods",
          "javascript/comp_ops",
          "javascript/data_types",
          "javascript/destr_assign",
          "javascript/higher_funcs",
          "javascript/spread_rest",
          "javascript/variables"
        ]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["Lotus-7"],
  "license": {
    "name": "CC-BY-4.0",
    "url": "https://github.com/30-seconds/30-seconds-of-code/blob/master/LICENSE",
    "repo": "https://github.com/30-seconds/30-seconds-of-code"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "对多个数组中的数据进行分组",
      "description": "在本实验中，我们将探索如何根据数组元素在原始数组中的位置对其进行分组。我们将使用zip()函数，该函数接受多个数组，并返回一个新数组，其中包含来自每个输入数组的元素子数组，这些子数组按位置分组。这是数据处理和分析中的一项有用技术，可用于将来自多个源的数据组合成单个数据结构以进行进一步分析。",
      "meta": {
        "title": "分组数组元素 | 数据处理 | JavaScript 技术",
        "description": "学习如何使用 JavaScript 中强大的 zip() 函数根据数组元素的位置对其进行分组。探索数据处理和分析技术。",
        "keywords": "数组分组, 数据处理, JavaScript 技术, zip 函数, 数据分析"
      },
      "details": {
        "steps": [
          {
            "title": "对数组元素进行分组",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "在 ZSH 历史记录中验证 Node 命令",
                "file": "verify1-1.sh",
                "hint": "通过输入 'node' 并按 Enter 键，可以在终端/SSH 中运行 JavaScript。"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    }
  ]
}
