{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Test if All Array Elements Are Falsy",
  "description": "In this lab, we will explore the concept of testing whether all elements in an array are falsy using JavaScript. We will use the none() function which checks if the provided predicate function returns false for all elements in a collection. Through practical examples, we will see how this function can be used to efficiently manipulate arrays in JavaScript.",
  "meta": {
    "title": "JavaScript Array Testing | Falsy Elements",
    "description": "Explore the concept of testing whether all elements in a JavaScript array are falsy using the none() function. Practical examples and efficient array manipulation techniques.",
    "keywords": "JavaScript, array, falsy, none, testing, manipulation"
  },
  "difficulty": "Beginner",
  "time": 10,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Test if All Array Elements Are Falsy",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify Node Commands In Zsh History",
            "file": "verify1-1.sh",
            "hint": "JavaScript can be run in the Terminal/SSH by typing 'node' and pressing Enter.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "javascript/arith_ops",
          "javascript/comp_ops",
          "javascript/data_types",
          "javascript/variables"
        ]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["Lotus-7"],
  "license": {
    "name": "CC-BY-4.0",
    "url": "https://github.com/30-seconds/30-seconds-of-code/blob/master/LICENSE",
    "repo": "https://github.com/30-seconds/30-seconds-of-code"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "测试数组所有元素是否为假值",
      "description": "在这个实验中，我们将探讨使用JavaScript测试数组中所有元素是否为假值的概念。我们将使用none()函数，该函数检查提供的谓词函数对集合中的所有元素是否返回false。通过实际示例，我们将了解如何使用此函数在JavaScript中高效地操作数组。",
      "meta": {
        "title": "JavaScript数组测试 | 假值元素",
        "description": "探索使用none()函数测试JavaScript数组中所有元素是否为假值的概念。实际示例和高效的数组操作技巧。",
        "keywords": "JavaScript, 数组, 假值, none, 测试, 操作"
      },
      "details": {
        "steps": [
          {
            "title": "测试数组所有元素是否为假值",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "验证Zsh历史记录中的Node命令",
                "file": "verify1-1.sh",
                "hint": "在终端/SSH中，通过输入'node'并按下回车键可以运行JavaScript。"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Probar si todos los elementos de una matriz son falsy",
      "description": "En este laboratorio, exploraremos el concepto de probar si todos los elementos de una matriz son falsy utilizando JavaScript. Utilizaremos la función none() que comprueba si la función predicado proporcionada devuelve false para todos los elementos de una colección. A través de ejemplos prácticos, veremos cómo esta función se puede utilizar para manipular eficientemente matrices en JavaScript.",
      "meta": {
        "title": "Prueba de matrices en JavaScript | Elementos falsos",
        "description": "Explora el concepto de probar si todos los elementos de una matriz de JavaScript son falsos utilizando la función none(). Ejemplos prácticos y técnicas de manipulación de matrices eficientes.",
        "keywords": "JavaScript, matriz, falsa, ninguno, prueba, manipulación"
      },
      "details": {
        "steps": [
          {
            "title": "Probar si todos los elementos de una matriz son falsy",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Verificar los comandos de Node en el historial de Zsh",
                "file": "verify1-1.sh",
                "hint": "Se puede ejecutar JavaScript en la Terminal/SSH escribiendo 'node' y presionando Enter."
              }
            ]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Vérifier si tous les éléments d'un tableau sont considérés comme \"faux\" (falsy)",
      "description": "Dans ce laboratoire, nous allons explorer le concept de test pour vérifier si tous les éléments d'un tableau sont considérés comme \"faux\" (falsy) en utilisant JavaScript. Nous utiliserons la fonction none() qui vérifie si la fonction prédicat fournie renvoie false pour tous les éléments d'une collection. Par des exemples pratiques, nous verrons comment cette fonction peut être utilisée pour manipuler efficacement les tableaux en JavaScript.",
      "meta": {
        "title": "Test de tableau JavaScript | Éléments considérés comme \"faux\" (falsy)",
        "description": "Explorez le concept de test pour vérifier si tous les éléments d'un tableau JavaScript sont considérés comme \"faux\" (falsy) en utilisant la fonction none(). Exemples pratiques et techniques de manipulation efficace de tableaux.",
        "keywords": "JavaScript, tableau, considérés comme \"faux\" (falsy), none, test, manipulation"
      },
      "details": {
        "steps": [
          {
            "title": "Vérifier si tous les éléments d'un tableau sont considérés comme \"faux\" (falsy)",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Vérifier les commandes Node dans l'historique Zsh",
                "file": "verify1-1.sh",
                "hint": "JavaScript peut être exécuté dans le Terminal/SSH en tapant 'node' et en appuyant sur Entrée."
              }
            ]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Testen, ob alle Array-Elemente falsy sind",
      "description": "In diesem Lab werden wir das Konzept des Tests untersuchen, ob alle Elemente eines Arrays falsy sind, mithilfe von JavaScript. Wir werden die none()-Funktion verwenden, die überprüft, ob die bereitgestellte Prädikatfunktion für alle Elemente in einer Sammlung false zurückgibt. Anhand von praktischen Beispielen werden wir sehen, wie diese Funktion effizient verwendet werden kann, um Arrays in JavaScript zu manipulieren.",
      "meta": {
        "title": "JavaScript-Array-Test | Falsy-Elemente",
        "description": "Erkunden Sie das Konzept des Tests, ob alle Elemente in einem JavaScript-Array falsy sind, mithilfe der none()-Funktion. Praktische Beispiele und effiziente Array-Manipulationsmethoden.",
        "keywords": "JavaScript, Array, falsy, none, Testen, Manipulation"
      },
      "details": {
        "steps": [
          {
            "title": "Testen, ob alle Array-Elemente falsy sind",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Überprüfen von Node-Befehlen in der Zsh-Geschichte",
                "file": "verify1-1.sh",
                "hint": "JavaScript kann im Terminal/SSH ausgeführt werden, indem man 'node' eingibt und die Eingabetaste drückt."
              }
            ]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "配列のすべての要素が偽であるかどうかをテストする",
      "description": "この実験では、JavaScriptを使って配列のすべての要素が偽であるかどうかをテストする概念を探ります。コレクション内のすべての要素に対して、提供された述語関数がfalseを返すかどうかをチェックするnone()関数を使います。実際の例を通じて、この関数がJavaScriptで配列を効率的に操作するためにどのように使われるかを見ていきます。",
      "meta": {
        "title": "JavaScript配列テスト | 偽の要素",
        "description": "none()関数を使って、JavaScript配列のすべての要素が偽であるかどうかをテストする概念を探ります。実際の例と効率的な配列操作技術。",
        "keywords": "JavaScript, 配列, 偽, none, テスト, 操作"
      },
      "details": {
        "steps": [
          {
            "title": "配列のすべての要素が偽であるかどうかをテストする",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "Zsh履歴のNodeコマンドを確認する",
                "file": "verify1-1.sh",
                "hint": "ターミナル/SSHで'node'と入力してEnterキーを押すことで、JavaScriptを実行できます。"
              }
            ]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Проверка, являются ли все элементы массива ложными значениями",
      "description": "В этом практическом занятии мы изучим концепцию проверки того, являются ли все элементы массива ложными значениями, используя JavaScript. Мы будем использовать функцию none(), которая проверяет, возвращает ли переданная функция-условие false для всех элементов коллекции. С помощью практических примеров мы увидим, как эту функцию можно использовать для эффективной обработки массивов в JavaScript.",
      "meta": {
        "title": "Тестирование массивов в JavaScript | Ложные элементы",
        "description": "Изучите концепцию проверки того, являются ли все элементы в массиве JavaScript ложными значениями, используя функцию none(). Практические примеры и эффективные методы обработки массивов.",
        "keywords": "JavaScript, массив, ложный, none, тестирование, обработка"
      },
      "details": {
        "steps": [
          {
            "title": "Проверка, являются ли все элементы массива ложными значениями",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "Проверить команды Node в истории Zsh",
                "file": "verify1-1.sh",
                "hint": "JavaScript можно запустить в Терминале/SSH, введя 'node' и нажав Enter."
              }
            ]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    }
  ]
}
