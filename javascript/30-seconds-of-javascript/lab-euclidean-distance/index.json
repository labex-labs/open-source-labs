{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Euclidean Distance Calculation in JavaScript",
  "description": "In this lab, we will explore the concept of Euclidean Distance and implement a function that calculates the distance between two points in any number of dimensions. We will use JavaScript and some built-in methods such as Object.keys() and Math.hypot() to create the function. This lab will provide a hands-on experience in working with mathematical calculations and JavaScript methods.",
  "meta": {
    "title": "Euclidean Distance Calculation | JavaScript | Math Concepts",
    "description": "Learn how to implement a function that calculates the Euclidean distance between two points in any number of dimensions using JavaScript and built-in methods.",
    "keywords": "Euclidean Distance, JavaScript, Math Concepts, Coding, Programming"
  },
  "difficulty": "Beginner",
  "time": 10,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Euclidean Distance",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify Node Commands Executed",
            "file": "verify1-1.sh",
            "hint": "JavaScript can be run in the Terminal/SSH by typing 'node' and pressing Enter.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "javascript/arith_ops",
          "javascript/array_methods",
          "javascript/comp_ops",
          "javascript/data_types",
          "javascript/higher_funcs",
          "javascript/spread_rest",
          "javascript/variables"
        ]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["Lotus-7"],
  "license": {
    "name": "CC-BY-4.0",
    "url": "https://github.com/30-seconds/30-seconds-of-code/blob/master/LICENSE",
    "repo": "https://github.com/30-seconds/30-seconds-of-code"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "用 JavaScript 计算欧几里得距离",
      "description": "在本实验中，我们将探讨欧几里得距离的概念，并实现一个函数，用于计算任意维度下两点之间的距离。我们将使用 JavaScript 以及一些内置方法，如 Object.keys() 和 Math.hypot() 来创建该函数。本实验将提供一个实际操作的经验，让你熟悉数学计算和 JavaScript 方法。",
      "meta": {
        "title": "欧几里得距离计算 | JavaScript | 数学概念",
        "description": "学习如何使用 JavaScript 和内置方法实现一个函数，该函数可计算任意维度下两点之间的欧几里得距离。",
        "keywords": "欧几里得距离, JavaScript, 数学概念, 编码, 编程"
      },
      "details": {
        "steps": [
          {
            "title": "欧几里得距离",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "验证已执行的 Node 命令",
                "file": "verify1-1.sh",
                "hint": "在终端/SSH 中，通过输入 'node' 并按下回车键即可运行 JavaScript。"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Cálculo de la Distancia Euclidiana en JavaScript",
      "description": "En este laboratorio, exploraremos el concepto de Distancia Euclidiana y implementaremos una función que calcule la distancia entre dos puntos en cualquier número de dimensiones. Usaremos JavaScript y algunos métodos integrados como Object.keys() y Math.hypot() para crear la función. Este laboratorio proporcionará una experiencia práctica en el trabajo con cálculos matemáticos y métodos de JavaScript.",
      "meta": {
        "title": "Cálculo de la Distancia Euclidiana | JavaScript | Conceptos Matemáticos",
        "description": "Aprende cómo implementar una función que calcule la distancia euclidiana entre dos puntos en cualquier número de dimensiones usando JavaScript y métodos integrados.",
        "keywords": "Distancia Euclidiana, JavaScript, Conceptos Matemáticos, Codificación, Programación"
      },
      "details": {
        "steps": [
          {
            "title": "Distancia Euclidiana",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Verificar que se ejecutaron los comandos de Node",
                "file": "verify1-1.sh",
                "hint": "Se puede ejecutar JavaScript en la Terminal/SSH escribiendo 'node' y presionando Enter."
              }
            ]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Calcul de la distance euclidienne en JavaScript",
      "description": "Dans ce laboratoire, nous allons explorer le concept de distance euclidienne et implémenter une fonction qui calcule la distance entre deux points dans un nombre quelconque de dimensions. Nous utiliserons JavaScript et certaines méthodes intégrées telles que Object.keys() et Math.hypot() pour créer la fonction. Ce laboratoire vous procurera une expérience pratique dans le travail avec des calculs mathématiques et des méthodes JavaScript.",
      "meta": {
        "title": "Calcul de la distance euclidienne | JavaScript | Concepts mathématiques",
        "description": "Découvrez comment implémenter une fonction qui calcule la distance euclidienne entre deux points dans un nombre quelconque de dimensions à l'aide de JavaScript et de méthodes intégrées.",
        "keywords": "Distance euclidienne, JavaScript, Concepts mathématiques, Codage, Programmation"
      },
      "details": {
        "steps": [
          {
            "title": "Distance euclidienne",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Vérifier que les commandes Node ont été exécutées",
                "file": "verify1-1.sh",
                "hint": "JavaScript peut être exécuté dans le Terminal/SSH en tapant 'node' et en appuyant sur Entrée."
              }
            ]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Euklidische Distanzberechnung in JavaScript",
      "description": "In diesem Lab werden wir das Konzept der euklidischen Distanz erkunden und eine Funktion implementieren, die die Distanz zwischen zwei Punkten in beliebig vielen Dimensionen berechnet. Wir werden JavaScript und einige integrierte Methoden wie Object.keys() und Math.hypot() verwenden, um die Funktion zu erstellen. Dieses Lab wird eine praktische Erfahrung bei der Arbeit mit mathematischen Berechnungen und JavaScript-Methoden bieten.",
      "meta": {
        "title": "Euklidische Distanzberechnung | JavaScript | Mathematische Konzepte",
        "description": "Lernen Sie, wie Sie eine Funktion implementieren, die die euklidische Distanz zwischen zwei Punkten in beliebig vielen Dimensionen mit JavaScript und integrierten Methoden berechnet.",
        "keywords": "Euklidische Distanz, JavaScript, Mathematische Konzepte, Coding, Programmierung"
      },
      "details": {
        "steps": [
          {
            "title": "Euklidische Distanz",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Verifizieren Sie, dass die Node-Befehle ausgeführt wurden",
                "file": "verify1-1.sh",
                "hint": "JavaScript kann im Terminal/SSH ausgeführt werden, indem Sie 'node' eingeben und die Eingabetaste drücken."
              }
            ]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "JavaScriptにおけるユークリッド距離の計算",
      "description": "この実験では、ユークリッド距離の概念を探究し、任意の次元数の2点間の距離を計算する関数を実装します。JavaScriptとObject.keys()やMath.hypot()などのいくつかの組み込みメソッドを使って関数を作成します。この実験は、数学的計算とJavaScriptメソッドの使用に関する実践的な経験を提供します。",
      "meta": {
        "title": "ユークリッド距離の計算 | JavaScript | 数学の概念",
        "description": "JavaScriptと組み込みメソッドを使って、任意の次元数の2点間のユークリッド距離を計算する関数を実装する方法を学びましょう。",
        "keywords": "ユークリッド距離, JavaScript, 数学の概念, コーディング, プログラミング"
      },
      "details": {
        "steps": [
          {
            "title": "ユークリッド距離",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "Nodeコマンドの実行を確認する",
                "file": "verify1-1.sh",
                "hint": "ターミナル/SSHで'node'と入力してEnterキーを押すことで、JavaScriptを実行できます。"
              }
            ]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Вычисление евклидового расстояния на JavaScript",
      "description": "В этом практическом занятии мы изучим концепцию евклидового расстояния и реализуем функцию, которая вычисляет расстояние между двумя точками в любом количестве измерений. Мы будем использовать JavaScript и некоторые встроенные методы, такие как Object.keys() и Math.hypot(), чтобы создать функцию. Это практическое занятие даст опыт работы с математическими вычислениями и методами JavaScript.",
      "meta": {
        "title": "Вычисление евклидового расстояния | JavaScript | Математические концепции",
        "description": "Изучите, как реализовать функцию, которая вычисляет евклидово расстояние между двумя точками в любом количестве измерений с использованием JavaScript и встроенных методов.",
        "keywords": "Евклидово расстояние, JavaScript, Математические концепции, Программирование, Кодирование"
      },
      "details": {
        "steps": [
          {
            "title": "Евклидово расстояние",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "Проверить выполнение команд Node",
                "file": "verify1-1.sh",
                "hint": "JavaScript можно запустить в Терминале/SSH, введя 'node' и нажав Enter."
              }
            ]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    }
  ]
}
