{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Finding Common Object Keys in JavaScript",
  "description": "In this lab, we will be exploring a JavaScript function that helps us find the common keys between two objects. We will use the Object.keys() method to get the keys of the first object, and then check if the second object has a key that matches using Object.prototype.hasOwnProperty(). Finally, we will use Array.prototype.filter() to filter out the keys that are not common to both objects. By the end of this lab, you will have a solid understanding of how to efficiently find common keys between two objects in JavaScript.",
  "meta": {
    "title": "JavaScript | Common Keys Between Objects",
    "description": "Explore a JavaScript function to efficiently find the common keys between two objects. Learn how to use Object.keys(), hasOwnProperty(), and Array.filter() for effective object manipulation.",
    "keywords": "JavaScript, object manipulation, common keys, Object.keys, hasOwnProperty, Array.filter"
  },
  "difficulty": "Beginner",
  "time": 5,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Common Keys",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify Node Usage In Zsh History",
            "file": "verify1-1.sh",
            "hint": "JavaScript can be run in the Terminal/SSH by typing 'node' and pressing Enter.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": []
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["Lotus-7"],
  "license": {
    "name": "CC-BY-4.0",
    "url": "https://github.com/30-seconds/30-seconds-of-code/blob/master/LICENSE",
    "repo": "https://github.com/30-seconds/30-seconds-of-code"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "在 JavaScript 中查找对象的共同键",
      "description": "在本实验中，我们将探索一个 JavaScript 函数，它能帮助我们找到两个对象之间的共同键。我们将使用 Object.keys() 方法获取第一个对象的键，然后使用 Object.prototype.hasOwnProperty() 检查第二个对象是否有匹配的键。最后，我们将使用 Array.prototype.filter() 过滤掉两个对象不共有的键。在本实验结束时，你将对如何在 JavaScript 中高效地找到两个对象之间的共同键有扎实的理解。",
      "meta": {
        "title": "JavaScript | 对象之间的共同键",
        "description": "探索一个 JavaScript 函数，以高效地找到两个对象之间的共同键。学习如何使用 Object.keys()、hasOwnProperty() 和 Array.filter() 进行有效的对象操作。",
        "keywords": "JavaScript, 对象操作，共同键，Object.keys, hasOwnProperty, Array.filter"
      },
      "details": {
        "steps": [
          {
            "title": "共同键",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "在 Zsh 历史记录中验证 Node 的使用",
                "file": "verify1-1.sh",
                "hint": "通过在终端/SSH 中输入'node'并按回车键，可以运行 JavaScript。"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Encontrar Claves Comunes de Objetos en JavaScript",
      "description": "En este laboratorio, exploraremos una función de JavaScript que nos ayuda a encontrar las claves comunes entre dos objetos. Usaremos el método Object.keys() para obtener las claves del primer objeto, y luego comprobaremos si el segundo objeto tiene una clave que coincida usando Object.prototype.hasOwnProperty(). Finalmente, usaremos Array.prototype.filter() para filtrar las claves que no son comunes a ambos objetos. Al final de este laboratorio, tendrás una comprensión sólida de cómo encontrar eficientemente las claves comunes entre dos objetos en JavaScript.",
      "meta": {
        "title": "JavaScript | Claves Comunes Entre Objetos",
        "description": "Explora una función de JavaScript para encontrar eficientemente las claves comunes entre dos objetos. Aprende cómo usar Object.keys(), hasOwnProperty() y Array.filter() para una manipulación efectiva de objetos.",
        "keywords": "JavaScript, manipulación de objetos, claves comunes, Object.keys, hasOwnProperty, Array.filter"
      },
      "details": {
        "steps": [
          {
            "title": "Claves Comunes",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Verificar el Uso de Node en el Historial de Zsh",
                "file": "verify1-1.sh",
                "hint": "JavaScript se puede ejecutar en la Terminal/SSH escribiendo 'node' y presionando Enter."
              }
            ]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Trouver les clés communes d'objets en JavaScript",
      "description": "Dans ce laboratoire, nous allons explorer une fonction JavaScript qui nous aide à trouver les clés communes entre deux objets. Nous utiliserons la méthode Object.keys() pour obtenir les clés du premier objet, puis vérifier si la deuxième objet a une clé qui correspond en utilisant Object.prototype.hasOwnProperty(). Enfin, nous utiliserons Array.prototype.filter() pour filtrer les clés qui ne sont pas communes à both objets. À la fin de ce laboratoire, vous aurez une compréhension solide de la manière d'obtenir efficacement les clés communes entre deux objets en JavaScript.",
      "meta": {
        "title": "JavaScript | Clés communes entre objets",
        "description": "Explorez une fonction JavaScript pour trouver efficacement les clés communes entre deux objets. Apprenez à utiliser Object.keys(), hasOwnProperty() et Array.filter() pour une manipulation d'objets efficace.",
        "keywords": "JavaScript, manipulation d'objets, clés communes, Object.keys, hasOwnProperty, Array.filter"
      },
      "details": {
        "steps": [
          {
            "title": "Clés communes",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Vérifier l'utilisation de Node dans l'historique Zsh",
                "file": "verify1-1.sh",
                "hint": "JavaScript peut être exécuté dans le Terminal/SSH en tapant 'node' et en appuyant sur Entrée."
              }
            ]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Gemeinsame Objekt-Schlüssel in JavaScript finden",
      "description": "In diesem Lab werden wir eine JavaScript-Funktion untersuchen, die uns dabei hilft, die gemeinsamen Schlüssel zwischen zwei Objekten zu finden. Wir werden die Object.keys()-Methode verwenden, um die Schlüssel des ersten Objekts zu erhalten und dann überprüfen, ob das zweite Objekt einen übereinstimmenden Schlüssel hat, indem wir Object.prototype.hasOwnProperty() verwenden. Schließlich werden wir Array.prototype.filter() verwenden, um die Schlüssel zu filtern, die nicht gemeinsame Eigenschaften beider Objekte sind. Am Ende dieses Labs werden Sie eine solide Vorstellung davon haben, wie man effizient gemeinsame Schlüssel zwischen zwei Objekten in JavaScript findet.",
      "meta": {
        "title": "JavaScript | Gemeinsame Schlüssel zwischen Objekten",
        "description": "Entdecken Sie eine JavaScript-Funktion, um effizient gemeinsame Schlüssel zwischen zwei Objekten zu finden. Lernen Sie, wie Sie Object.keys(), hasOwnProperty() und Array.filter() für eine effektive Objektmanipulation verwenden.",
        "keywords": "JavaScript, Objektmanipulation, gemeinsame Schlüssel, Object.keys, hasOwnProperty, Array.filter"
      },
      "details": {
        "steps": [
          {
            "title": "Gemeinsame Schlüssel",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Verifizieren der Verwendung von Node in der Zsh-Historie",
                "file": "verify1-1.sh",
                "hint": "JavaScript kann im Terminal/SSH ausgeführt werden, indem man 'node' eingibt und die Eingabetaste drückt."
              }
            ]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "JavaScript におけるオブジェクトの共通キーの探索",
      "description": "この実験では、2 つのオブジェクト間の共通キーを見つけるのに役立つ JavaScript 関数を調べます。最初のオブジェクトのキーを取得するために Object.keys() メソッドを使用し、その後 Object.prototype.hasOwnProperty() を使用して 2 番目のオブジェクトに一致するキーがあるかどうかを確認します。最後に、Array.prototype.filter() を使用して両方のオブジェクトに共通しないキーをフィルタリングします。この実験が終了するまでに、JavaScript において 2 つのオブジェクト間の共通キーを効率的に見つける方法を十分に理解するようになります。",
      "meta": {
        "title": "JavaScript | オブジェクト間の共通キー",
        "description": "2 つのオブジェクト間の共通キーを効率的に見つける JavaScript 関数を探索します。Object.keys()、hasOwnProperty()、および Array.filter() を効果的なオブジェクト操作に使用する方法を学びましょう。",
        "keywords": "JavaScript, オブジェクト操作，共通キー, Object.keys, hasOwnProperty, Array.filter"
      },
      "details": {
        "steps": [
          {
            "title": "共通キー",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "Zsh 履歴における Node の使用を確認する",
                "file": "verify1-1.sh",
                "hint": "ターミナル/SSH で 'node' と入力して Enter キーを押すことで JavaScript を実行できます。"
              }
            ]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Поиск общих ключей объектов в JavaScript",
      "description": "В этом практическом занятии мы изучим функцию JavaScript, которая помогает найти общие ключи между двумя объектами. Мы будем использовать метод Object.keys() для получения ключей первого объекта, а затем проверим, есть ли у второго объекта ключ, который совпадает, с использованием Object.prototype.hasOwnProperty(). Наконец, мы будем использовать Array.prototype.filter() для фильтрации ключей, которые не общие для обоих объектов. В конце этого практического занятия вы глубоко поймете, как эффективно искать общие ключи между двумя объектами в JavaScript.",
      "meta": {
        "title": "JavaScript | Общие ключи между объектами",
        "description": "Изучите функцию JavaScript для эффективного поиска общих ключей между двумя объектами. Найдите, как использовать Object.keys(), hasOwnProperty() и Array.filter() для эффективной манипуляции с объектами.",
        "keywords": "JavaScript, манипуляция с объектами, общие ключи, Object.keys, hasOwnProperty, Array.filter"
      },
      "details": {
        "steps": [
          {
            "title": "Общие ключи",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "Проверить использование Node в истории Zsh",
                "file": "verify1-1.sh",
                "hint": "JavaScript можно запустить в Терминале/SSH, введя 'node' и нажав Enter."
              }
            ]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    },
    {
      "lang": "ko",
      "title": "JavaScript 에서 객체 공통 키 찾기",
      "description": "이 랩에서는 두 객체 간의 공통 키를 찾는 데 도움이 되는 JavaScript 함수를 살펴봅니다. Object.keys() 메서드를 사용하여 첫 번째 객체의 키를 가져온 다음, Object.prototype.hasOwnProperty() 를 사용하여 두 번째 객체에 일치하는 키가 있는지 확인합니다. 마지막으로, Array.prototype.filter() 를 사용하여 두 객체 모두에 공통되지 않은 키를 필터링합니다. 이 랩을 마치면 JavaScript 에서 두 객체 간의 공통 키를 효율적으로 찾는 방법에 대한 확실한 이해를 얻게 될 것입니다.",
      "meta": {
        "title": "JavaScript | 객체 간 공통 키 찾기 - 효율적인 객체 조작",
        "description": "두 객체 간의 공통 키를 효율적으로 찾는 JavaScript 함수를 살펴보세요. Object.keys(), hasOwnProperty(), Array.filter() 를 사용하여 효과적인 객체 조작을 수행하는 방법을 알아보세요. JavaScript 객체 키, 객체 조작, 공통 키, Object.keys, hasOwnProperty, Array.filter",
        "keywords": "JavaScript, 객체 조작, 공통 키, Object.keys, hasOwnProperty, Array.filter, 자바스크립트 객체, 객체 키 찾기"
      },
      "details": {
        "steps": [
          {
            "title": "공통 키",
            "text": "ko/step1.md",
            "verify": [
              {
                "name": "Zsh 히스토리에서 Node 사용 확인",
                "file": "verify1-1.sh",
                "hint": "'node'를 입력하고 Enter 키를 눌러 터미널/SSH 에서 JavaScript 를 실행할 수 있습니다."
              }
            ]
          }
        ],
        "intro": {
          "text": "ko/intro.md",
          "title": "소개"
        },
        "finish": {
          "text": "ko/finish.md",
          "title": "요약"
        }
      }
    },
    {
      "lang": "pt",
      "title": "Encontrando Chaves Comuns de Objetos em JavaScript",
      "description": "Neste laboratório, exploraremos uma função JavaScript que nos ajuda a encontrar as chaves comuns entre dois objetos. Usaremos o método Object.keys() para obter as chaves do primeiro objeto e, em seguida, verificaremos se o segundo objeto possui uma chave correspondente usando Object.prototype.hasOwnProperty(). Finalmente, usaremos Array.prototype.filter() para filtrar as chaves que não são comuns a ambos os objetos. Ao final deste laboratório, você terá uma sólida compreensão de como encontrar eficientemente chaves comuns entre dois objetos em JavaScript.",
      "meta": {
        "title": "JavaScript | Chaves Comuns Entre Objetos - Tutorial e Exemplos",
        "description": "Explore uma função JavaScript para encontrar eficientemente as chaves comuns entre dois objetos. Aprenda a usar Object.keys(), hasOwnProperty() e Array.filter() para manipulação eficaz de objetos em JavaScript. Descubra como identificar chaves compartilhadas e otimizar seu código.",
        "keywords": "JavaScript, manipulação de objetos, chaves comuns, Object.keys, hasOwnProperty, Array.filter, tutorial JavaScript, exemplos JavaScript, programação JavaScript"
      },
      "details": {
        "steps": [
          {
            "title": "Chaves Comuns",
            "text": "pt/step1.md",
            "verify": [
              {
                "name": "Verificar Uso do Node no Histórico do Zsh",
                "file": "verify1-1.sh",
                "hint": "JavaScript pode ser executado no Terminal/SSH digitando 'node' e pressionando Enter."
              }
            ]
          }
        ],
        "intro": {
          "text": "pt/intro.md",
          "title": "Introdução"
        },
        "finish": {
          "text": "pt/finish.md",
          "title": "Resumo"
        }
      }
    }
  ]
}
