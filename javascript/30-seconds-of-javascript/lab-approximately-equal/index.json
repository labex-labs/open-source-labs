{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Approximate Number Equality",
  "description": "In this lab, we will explore how to implement a function in JavaScript that checks if two numbers are approximately equal to each other. We will use the Math.abs() method to compare the absolute difference between the two values to a specified or default epsilon value. This lab will help us understand how to handle floating-point numbers with precision in JavaScript.",
  "meta": {
    "title": "Implementing Approximate Number Equality in JavaScript",
    "description": "Learn how to write a JavaScript function to check if two numbers are approximately equal, using the Math.abs() method and an optional epsilon value.",
    "keywords": "javascript, javascript practice, math, javascript tutor, javascript practice online, floating point, javascript lab, approximation, precision"
  },
  "difficulty": "Beginner",
  "time": 5,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Approximate Number Equality",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify Node Commands In Zsh History",
            "file": "verify1-1.sh",
            "hint": "JavaScript can be run in the Terminal/SSH by typing 'node' and pressing Enter.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "javascript/arith_ops",
          "javascript/comp_ops",
          "javascript/data_types",
          "javascript/variables"
        ]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["Lotus-7"],
  "license": {
    "name": "CC-BY-4.0",
    "url": "https://github.com/30-seconds/30-seconds-of-code/blob/master/LICENSE",
    "repo": "https://github.com/30-seconds/30-seconds-of-code"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "近似数字相等",
      "description": "在本实验中，我们将探索如何在 JavaScript 中实现一个函数，用于检查两个数字是否近似相等。我们将使用 Math.abs() 方法，将两个值之间的绝对差值与指定的或默认的 epsilon 值进行比较。本实验将帮助我们了解如何在 JavaScript 中精确处理浮点数。",
      "meta": {
        "title": "在 JavaScript 中实现近似数字相等",
        "description": "学习如何编写一个 JavaScript 函数，使用 Math.abs() 方法和可选的 epsilon 值来检查两个数字是否近似相等。",
        "keywords": "JavaScript, JavaScript 练习，数学，JavaScript 教程，在线 JavaScript 练习，浮点数，JavaScript 实验，近似值，精度"
      },
      "details": {
        "steps": [
          {
            "title": "近似数字相等",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "在 Zsh 历史记录中验证 Node 命令",
                "file": "verify1-1.sh",
                "hint": "在终端/SSH 中，通过输入'node'并按下回车键可以运行 JavaScript。"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Igualdad Aproximada de Números",
      "description": "En este laboratorio, exploraremos cómo implementar una función en JavaScript que verifique si dos números son aproximadamente iguales entre sí. Utilizaremos el método Math.abs() para comparar la diferencia absoluta entre los dos valores con un valor de épsilon especificado o predeterminado. Este laboratorio nos ayudará a entender cómo manejar los números de punto flotante con precisión en JavaScript.",
      "meta": {
        "title": "Implementando la Igualdad Aproximada de Números en JavaScript",
        "description": "Aprende cómo escribir una función de JavaScript para verificar si dos números son aproximadamente iguales, utilizando el método Math.abs() y un valor de épsilon opcional.",
        "keywords": "javascript, práctica de javascript, matemáticas, tutor de javascript, práctica de javascript en línea, punto flotante, laboratorio de javascript, aproximación, precisión"
      },
      "details": {
        "steps": [
          {
            "title": "Igualdad Aproximada de Números",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Verificar los comandos de Node en el historial de Zsh",
                "file": "verify1-1.sh",
                "hint": "Se puede ejecutar JavaScript en la Terminal/SSH escribiendo 'node' y presionando Enter."
              }
            ]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Égalité approximative de nombres",
      "description": "Dans ce laboratoire, nous allons explorer la manière d'implémenter une fonction en JavaScript qui vérifie si deux nombres sont approximativement égaux l'un à l'autre. Nous utiliserons la méthode Math.abs() pour comparer la différence absolue entre les deux valeurs à une valeur d'epsilon spécifiée ou par défaut. Ce laboratoire nous aidera à comprendre comment gérer les nombres à virgule flottante avec précision en JavaScript.",
      "meta": {
        "title": "Implémentation de l'égalité approximative de nombres en JavaScript",
        "description": "Découvrez comment écrire une fonction JavaScript pour vérifier si deux nombres sont approximativement égaux, en utilisant la méthode Math.abs() et une valeur d'epsilon optionnelle.",
        "keywords": "javascript, pratique javascript, mathématique, tuteur javascript, pratique javascript en ligne, virgule flottante, laboratoire javascript, approximation, précision"
      },
      "details": {
        "steps": [
          {
            "title": "Égalité approximative de nombres",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Vérifier les commandes Node dans l'historique Zsh",
                "file": "verify1-1.sh",
                "hint": "JavaScript peut être exécuté dans le Terminal/SSH en tapant 'node' et en appuyant sur Entrée."
              }
            ]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Annähernde Gleichheit von Zahlen",
      "description": "In diesem Lab werden wir untersuchen, wie man in JavaScript eine Funktion implementiert, die überprüft, ob zwei Zahlen ungefähr gleich zueinander sind. Wir werden die Math.abs()-Methode verwenden, um die absolute Differenz zwischen den beiden Werten mit einem angegebenen oder standardmäßigen Epsilon-Wert zu vergleichen. Dieses Lab wird uns helfen, zu verstehen, wie man in JavaScript mit Gleitkommazahlen präzise umgehen kann.",
      "meta": {
        "title": "Implementierung von annähernder Gleichheit von Zahlen in JavaScript",
        "description": "Lernen Sie, wie man eine JavaScript-Funktion schreibt, um zu überprüfen, ob zwei Zahlen ungefähr gleich sind, indem man die Math.abs()-Methode und einen optionalen Epsilon-Wert verwendet.",
        "keywords": "javascript, javascript Übung, mathematik, javascript-Lehrer, Online-JavaScript-Übung, Gleitkommawert, JavaScript-Lab, Annäherung, Genauigkeit"
      },
      "details": {
        "steps": [
          {
            "title": "Annähernde Gleichheit von Zahlen",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Überprüfen von Node-Befehlen in der Zsh-Geschichte",
                "file": "verify1-1.sh",
                "hint": "JavaScript kann im Terminal/SSH ausgeführt werden, indem man 'node' eingibt und die Enter-Taste drückt."
              }
            ]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "近似的な数値の等価性",
      "description": "この実験では、JavaScript で 2 つの数値がおおよそ等しいかどうかをチェックする関数を実装する方法を検討します。2 つの値の絶対差を指定されたまたは既定のエプシロン値と比較するために、`Math.abs()` メソッドを使用します。この実験は、JavaScript で浮動小数点数を精度よく扱う方法を理解するのに役立ちます。",
      "meta": {
        "title": "JavaScript における近似的な数値の等価性の実装",
        "description": "`Math.abs()` メソッドとオプションのエプシロン値を使用して、2 つの数値がおおよそ等しいかどうかをチェックする JavaScript 関数を書く方法を学びましょう。",
        "keywords": "javascript, javascript 練習，数学，javascript チューター, オンライン javascript 練習，浮動小数点数，javascript 実験，近似，精度"
      },
      "details": {
        "steps": [
          {
            "title": "近似的な数値の等価性",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "Zsh 履歴における Node コマンドを検証する",
                "file": "verify1-1.sh",
                "hint": "ターミナル/SSH で 'node' と入力して Enter キーを押すことで、JavaScript を実行できます。"
              }
            ]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Приблизительное равенство чисел",
      "description": "В этом практическом занятии мы изучим, как реализовать функцию на JavaScript, которая проверяет, равны ли два числа друг другу приблизительно. Мы будем использовать метод Math.abs() для сравнения абсолютной разницы между двумя значениями с заданным или стандартным значением эпсилон. Это практическое занятие поможет нам понять, как работать с числами с плавающей точкой с точностью в JavaScript.",
      "meta": {
        "title": "Реализация приблизительного равенства чисел в JavaScript",
        "description": "Изучите, как написать функцию на JavaScript для проверки, равны ли два числа приблизительно, используя метод Math.abs() и необязательное значение эпсилон.",
        "keywords": "javascript, практика javascript, математика, преподаватель javascript, онлайн практика javascript, плавающая точка, практическое занятие javascript, приближение, точность"
      },
      "details": {
        "steps": [
          {
            "title": "Приблизительное равенство чисел",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "Проверить команды Node в истории Zsh",
                "file": "verify1-1.sh",
                "hint": "JavaScript можно запустить в Терминале/SSH, введя 'node' и нажав Enter."
              }
            ]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    },
    {
      "lang": "ko",
      "title": "근사 숫자 동일성",
      "description": "이 랩에서는 두 숫자가 서로 근사적으로 같은지 확인하는 JavaScript 함수를 구현하는 방법을 살펴봅니다. Math.abs() 메서드를 사용하여 두 값의 절대 차이를 지정된 또는 기본 엡실론 값과 비교합니다. 이 랩은 JavaScript 에서 부동 소수점 숫자를 정밀하게 처리하는 방법을 이해하는 데 도움이 됩니다.",
      "meta": {
        "title": "JavaScript 에서 근사 숫자 동일성 구현하기",
        "description": "Math.abs() 메서드와 선택적 엡실론 값을 사용하여 두 숫자가 근사적으로 같은지 확인하는 JavaScript 함수를 작성하는 방법을 알아보세요.",
        "keywords": "javascript, javascript 연습, 수학, javascript 튜터, javascript 온라인 연습, 부동 소수점, javascript 랩, 근사, 정밀도"
      },
      "details": {
        "steps": [
          {
            "title": "근사 숫자 동일성",
            "text": "ko/step1.md",
            "verify": [
              {
                "name": "Zsh 히스토리에서 Node 명령어 확인",
                "file": "verify1-1.sh",
                "hint": "JavaScript 는 터미널/SSH 에서 'node'를 입력하고 Enter 키를 눌러 실행할 수 있습니다."
              }
            ]
          }
        ],
        "intro": {
          "text": "ko/intro.md",
          "title": "소개"
        },
        "finish": {
          "text": "ko/finish.md",
          "title": "요약"
        }
      }
    },
    {
      "lang": "pt",
      "title": "Igualdade Aproximada de Números",
      "description": "Neste laboratório, exploraremos como implementar uma função em JavaScript que verifica se dois números são aproximadamente iguais. Usaremos o método Math.abs() para comparar a diferença absoluta entre os dois valores com um valor epsilon especificado ou padrão. Este laboratório nos ajudará a entender como lidar com números de ponto flutuante com precisão em JavaScript.",
      "meta": {
        "title": "Implementando a Igualdade Aproximada de Números em JavaScript - Guia Prático",
        "description": "Aprenda a escrever uma função JavaScript para verificar se dois números são aproximadamente iguais, utilizando o método Math.abs() e um valor epsilon opcional. Melhore suas habilidades em JavaScript com este tutorial prático.",
        "keywords": "javascript, prática javascript, matemática, tutorial javascript, exercícios javascript online, ponto flutuante, laboratório javascript, aproximação, precisão, igualdade aproximada"
      },
      "details": {
        "steps": [
          {
            "title": "Igualdade Aproximada de Números",
            "text": "pt/step1.md",
            "verify": [
              {
                "name": "Verificar Comandos Node no Histórico Zsh",
                "file": "verify1-1.sh",
                "hint": "JavaScript pode ser executado no Terminal/SSH digitando 'node' e pressionando Enter."
              }
            ]
          }
        ],
        "intro": {
          "text": "pt/intro.md",
          "title": "Introdução"
        },
        "finish": {
          "text": "pt/finish.md",
          "title": "Resumo"
        }
      }
    }
  ]
}
