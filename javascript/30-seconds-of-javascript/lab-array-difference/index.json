{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Unique Array Difference Calculation",
  "description": "In this lab, we will explore how to calculate the difference between two arrays without filtering duplicate values. The lab will guide you through the process of creating a Set from one array to get the unique values, and then using Array.prototype.filter() on the other array to keep only values that are not contained in the Set. By the end of the lab, you will have a better understanding of how to work with arrays in JavaScript.",
  "meta": {
    "title": "JavaScript Array Difference | Programming Tutorial",
    "description": "Learn how to calculate the difference between two arrays without filtering duplicate values in this JavaScript programming tutorial.",
    "keywords": "JavaScript, Array, Difference, Set, Filter, Programming, Tutorial"
  },
  "difficulty": "Beginner",
  "time": 5,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Array Difference",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify Node Commands In Zsh History",
            "file": "verify1-1.sh",
            "hint": "JavaScript can be run in the Terminal/SSH by typing 'node' and pressing Enter.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "javascript/arith_ops",
          "javascript/comp_ops",
          "javascript/data_types",
          "javascript/higher_funcs",
          "javascript/variables"
        ]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["Lotus-7"],
  "license": {
    "name": "CC-BY-4.0",
    "url": "https://github.com/30-seconds/30-seconds-of-code/blob/master/LICENSE",
    "repo": "https://github.com/30-seconds/30-seconds-of-code"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "计算数组差异（不筛选重复值）",
      "description": "在本实验中，我们将探索如何在不筛选重复值的情况下计算两个数组之间的差异。本实验将指导你完成以下过程：从一个数组创建一个 Set 以获取唯一值，然后在另一个数组上使用 Array.prototype.filter() 仅保留 Set 中不包含的值。在实验结束时，你将对如何在 JavaScript 中处理数组有更深入的理解。",
      "meta": {
        "title": "JavaScript 数组差异 | 编程教程",
        "description": "在本 JavaScript 编程教程中学习如何在不筛选重复值的情况下计算两个数组之间的差异。",
        "keywords": "JavaScript, 数组，差异，Set, 筛选，编程，教程"
      },
      "details": {
        "steps": [
          {
            "title": "数组差异",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "在 Zsh 历史记录中验证 Node 命令",
                "file": "verify1-1.sh",
                "hint": "通过在终端/SSH 中输入'node'并按回车键，可以运行 JavaScript。"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Cálculo de la diferencia única entre arrays",
      "description": "En este laboratorio, exploraremos cómo calcular la diferencia entre dos arrays sin filtrar valores duplicados. El laboratorio te guiará a través del proceso de crear un Set a partir de un array para obtener los valores únicos, y luego usar Array.prototype.filter() en el otro array para conservar solo los valores que no se encuentran en el Set. Al final del laboratorio, tendrás una mejor comprensión de cómo trabajar con arrays en JavaScript.",
      "meta": {
        "title": "Diferencia de arrays en JavaScript | Tutorial de programación",
        "description": "Aprende cómo calcular la diferencia entre dos arrays sin filtrar valores duplicados en este tutorial de programación de JavaScript.",
        "keywords": "JavaScript, Array, Diferencia, Set, Filtro, Programación, Tutorial"
      },
      "details": {
        "steps": [
          {
            "title": "Diferencia de arrays",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Verificar comandos de Node en el historial de Zsh",
                "file": "verify1-1.sh",
                "hint": "JavaScript se puede ejecutar en la Terminal/SSH escribiendo 'node' y presionando Enter."
              }
            ]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Calcul de la différence unique entre deux tableaux",
      "description": "Dans ce laboratoire, nous allons explorer la manière de calculer la différence entre deux tableaux sans filtrer les valeurs dupliquées. Le laboratoire vous guidera tout au long du processus de création d'un Set à partir d'un tableau pour obtenir les valeurs uniques, puis d'utilisation de Array.prototype.filter() sur l'autre tableau pour ne conserver que les valeurs qui ne sont pas contenues dans le Set. À la fin du laboratoire, vous aurez une meilleure compréhension de la manière de travailler avec les tableaux en JavaScript.",
      "meta": {
        "title": "Différence entre deux tableaux en JavaScript | Tutoriel de programmation",
        "description": "Apprenez à calculer la différence entre deux tableaux sans filtrer les valeurs dupliquées dans ce tutoriel de programmation en JavaScript.",
        "keywords": "JavaScript, Tableau, Différence, Ensemble, Filtre, Programmation, Tutoriel"
      },
      "details": {
        "steps": [
          {
            "title": "Différence entre deux tableaux",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Vérifier les commandes Node dans l'historique Zsh",
                "file": "verify1-1.sh",
                "hint": "JavaScript peut être exécuté dans le Terminal/SSH en tapant 'node' et en appuyant sur Entrée."
              }
            ]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Berechnung der Differenz zwischen eindeutigen Arrays",
      "description": "In diesem Lab werden wir untersuchen, wie man die Differenz zwischen zwei Arrays berechnet, ohne doppelte Werte zu filtern. Das Lab führt Sie durch den Prozess, um aus einem Array einen Set zu erstellen, um die eindeutigen Werte zu erhalten, und anschließend Array.prototype.filter() auf dem anderen Array anzuwenden, um nur die Werte zu behalten, die nicht im Set enthalten sind. Am Ende des Labs werden Sie ein besseres Verständnis dafür haben, wie man mit Arrays in JavaScript umgeht.",
      "meta": {
        "title": "Differenz zwischen JavaScript-Arrays | Programmier-Tutorial",
        "description": "Lernen Sie in diesem JavaScript-Programmier-Tutorial, wie man die Differenz zwischen zwei Arrays berechnet, ohne doppelte Werte zu filtern.",
        "keywords": "JavaScript, Array, Differenz, Set, Filter, Programmierung, Tutorial"
      },
      "details": {
        "steps": [
          {
            "title": "Arrayunterschied",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Überprüfen von Node-Befehlen in der Zsh-Geschichte",
                "file": "verify1-1.sh",
                "hint": "JavaScript kann im Terminal/SSH ausgeführt werden, indem man 'node' eingibt und die Enter-Taste drückt."
              }
            ]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "ユニークな配列の差分計算",
      "description": "この実験では、重複する値をフィルタリングせずに 2 つの配列の差分を計算する方法を探ります。この実験では、1 つの配列から Set を作成して一意の値を取得し、その後、もう一方の配列で Array.prototype.filter() を使用して、Set に含まれていない値のみを残すプロセスを案内します。この実験が終了するとき、JavaScript の配列を操作する方法をより深く理解しているでしょう。",
      "meta": {
        "title": "JavaScript の配列の差分 | プログラミングチュートリアル",
        "description": "この JavaScript のプログラミングチュートリアルで、重複する値をフィルタリングせずに 2 つの配列の差分を計算する方法を学びましょう。",
        "keywords": "JavaScript, 配列，差分，Set, フィルタ，プログラミング，チュートリアル"
      },
      "details": {
        "steps": [
          {
            "title": "配列の差分",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "Zsh 履歴の Node コマンドを確認する",
                "file": "verify1-1.sh",
                "hint": "ターミナル/SSH で'node'と入力して Enter キーを押すことで JavaScript を実行できます。"
              }
            ]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Вычисление разницы между уникальными массивами",
      "description": "В этом лабе мы исследуем, как вычислить разницу между двумя массивами без фильтрации дубликатов. Лабка проведет вас через процесс создания Set из одного массива, чтобы получить уникальные значения, а затем использование Array.prototype.filter() на другом массиве, чтобы оставить только те значения, которые не содержатся в Set. В конце лабы вы будете лучше понимать, как работать с массивами в JavaScript.",
      "meta": {
        "title": "Разница между массивами JavaScript | Руководство по программированию",
        "description": "Изучите, как вычислить разницу между двумя массивами без фильтрации дубликатов в этом руководстве по программированию на JavaScript.",
        "keywords": "JavaScript, Массив, Разница, Set, Фильтр, Программирование, Руководство"
      },
      "details": {
        "steps": [
          {
            "title": "Разница между массивами",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "Проверить команды Node в истории Zsh",
                "file": "verify1-1.sh",
                "hint": "JavaScript можно запускать в Терминале/SSH, введя 'node' и нажав Enter."
              }
            ]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    },
    {
      "lang": "ko",
      "title": "고유 배열 차이 계산",
      "description": "이 랩에서는 중복 값을 필터링하지 않고 두 배열 간의 차이를 계산하는 방법을 살펴봅니다. 랩은 고유 값을 얻기 위해 한 배열에서 Set 을 생성하는 과정과, Set 에 포함되지 않은 값만 유지하기 위해 다른 배열에서 Array.prototype.filter() 를 사용하는 과정을 안내합니다. 랩이 끝나면 JavaScript 에서 배열을 사용하는 방법에 대한 이해도가 높아질 것입니다.",
      "meta": {
        "title": "JavaScript 배열 차이 | 프로그래밍 튜토리얼",
        "description": "이 JavaScript 프로그래밍 튜토리얼에서 중복 값을 필터링하지 않고 두 배열 간의 차이를 계산하는 방법을 알아보세요.",
        "keywords": "JavaScript, 배열, 차이, Set, 필터, 프로그래밍, 튜토리얼, 자바스크립트 배열 차이"
      },
      "details": {
        "steps": [
          {
            "title": "배열 차이",
            "text": "ko/step1.md",
            "verify": [
              {
                "name": "Zsh 히스토리에서 Node 명령어 확인",
                "file": "verify1-1.sh",
                "hint": "'node'를 입력하고 Enter 키를 눌러 터미널/SSH 에서 JavaScript 를 실행할 수 있습니다."
              }
            ]
          }
        ],
        "intro": {
          "text": "ko/intro.md",
          "title": "소개"
        },
        "finish": {
          "text": "ko/finish.md",
          "title": "요약"
        }
      }
    },
    {
      "lang": "pt",
      "title": "Cálculo da Diferença Única de Arrays",
      "description": "Neste laboratório, exploraremos como calcular a diferença entre dois arrays sem filtrar valores duplicados. O laboratório irá guiá-lo através do processo de criação de um Set a partir de um array para obter os valores únicos e, em seguida, usar Array.prototype.filter() no outro array para manter apenas os valores que não estão contidos no Set. Ao final do laboratório, você terá uma melhor compreensão de como trabalhar com arrays em JavaScript.",
      "meta": {
        "title": "Diferença de Arrays em JavaScript | Tutorial de Programação",
        "description": "Aprenda a calcular a diferença entre dois arrays sem filtrar valores duplicados neste tutorial de programação JavaScript.",
        "keywords": "JavaScript, Array, Diferença, Set, Filter, Programação, Tutorial"
      },
      "details": {
        "steps": [
          {
            "title": "Diferença de Arrays",
            "text": "pt/step1.md",
            "verify": [
              {
                "name": "Verificar Comandos Node no Histórico Zsh",
                "file": "verify1-1.sh",
                "hint": "JavaScript pode ser executado no Terminal/SSH digitando 'node' e pressionando Enter."
              }
            ]
          }
        ],
        "intro": {
          "text": "pt/intro.md",
          "title": "Introdução"
        },
        "finish": {
          "text": "pt/finish.md",
          "title": "Resumo"
        }
      }
    }
  ]
}
