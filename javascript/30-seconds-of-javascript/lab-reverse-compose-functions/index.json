{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Composing Functions Left to Right",
  "description": "In this lab, we will explore the concept of function composition in JavaScript. Specifically, we will focus on the composeRight function, which allows us to combine multiple functions into a single function that is executed from left to right. Through practical examples, we will see how function composition can simplify our code and make it more modular.",
  "meta": {
    "title": "JavaScript Function Composition | Coding Tutorials",
    "description": "Learn how to use function composition in JavaScript to simplify your code and make it more modular. Explore the composeRight function and practical examples.",
    "keywords": "JavaScript, function composition, composeRight, coding tutorials, programming, web development"
  },
  "difficulty": "Beginner",
  "time": 5,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Reverse Compose Functions",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify Node Usage In Zsh History",
            "file": "verify1-1.sh",
            "hint": "JavaScript can be run in the Terminal/SSH by typing 'node' and pressing Enter.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "javascript/arith_ops",
          "javascript/comp_ops",
          "javascript/data_types",
          "javascript/higher_funcs",
          "javascript/spread_rest",
          "javascript/variables"
        ]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["Lotus-7"],
  "license": {
    "name": "CC-BY-4.0",
    "url": "https://github.com/30-seconds/30-seconds-of-code/blob/master/LICENSE",
    "repo": "https://github.com/30-seconds/30-seconds-of-code"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "从左到右组合函数",
      "description": "在本实验中，我们将探讨 JavaScript 中函数组合的概念。具体来说，我们将重点关注 composeRight 函数，它使我们能够将多个函数组合成一个从左到右执行的单一函数。通过实际示例，我们将看到函数组合如何简化我们的代码并使其更具模块化。",
      "meta": {
        "title": "JavaScript 函数组合 | 编码教程",
        "description": "学习如何在 JavaScript 中使用函数组合来简化代码并使其更具模块化。探索 composeRight 函数和实际示例。",
        "keywords": "JavaScript, 函数组合，composeRight, 编码教程，编程，网页开发"
      },
      "details": {
        "steps": [
          {
            "title": "反转组合函数",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "验证 Zsh 历史记录中 Node 的使用情况",
                "file": "verify1-1.sh",
                "hint": "通过输入'node'并按 Enter 键，可以在终端/SSH 中运行 JavaScript。"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Componiendo funciones de izquierda a derecha",
      "description": "En este laboratorio, exploraremos el concepto de composición de funciones en JavaScript. En particular, nos centraremos en la función composeRight, que nos permite combinar múltiples funciones en una sola función que se ejecuta de izquierda a derecha. A través de ejemplos prácticos, veremos cómo la composición de funciones puede simplificar nuestro código y hacerlo más modular.",
      "meta": {
        "title": "Composición de funciones de JavaScript | Tutoriales de codificación",
        "description": "Aprende cómo usar la composición de funciones en JavaScript para simplificar tu código y hacerlo más modular. Explora la función composeRight y ejemplos prácticos.",
        "keywords": "JavaScript, composición de funciones, composeRight, tutoriales de codificación, programación, desarrollo web"
      },
      "details": {
        "steps": [
          {
            "title": "Funciones de Composición Inversa",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Verificar el uso de Node en el historial de Zsh",
                "file": "verify1-1.sh",
                "hint": "Se puede ejecutar JavaScript en la Terminal/SSH escribiendo 'node' y presionando Enter."
              }
            ]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Composition de fonctions de gauche à droite",
      "description": "Dans ce laboratoire, nous allons explorer le concept de composition de fonctions en JavaScript. Plus précisément, nous nous concentrerons sur la fonction composeRight, qui nous permet de combiner plusieurs fonctions en une seule fonction qui est exécutée de gauche à droite. Par des exemples pratiques, nous verrons comment la composition de fonctions peut simplifier notre code et le rendre plus modulaire.",
      "meta": {
        "title": "Composition de fonctions JavaScript | Didacticiels de codage",
        "description": "Découvrez comment utiliser la composition de fonctions en JavaScript pour simplifier votre code et le rendre plus modulaire. Explorez la fonction composeRight et des exemples pratiques.",
        "keywords": "JavaScript, composition de fonctions, composeRight, didacticiels de codage, programmation, développement web"
      },
      "details": {
        "steps": [
          {
            "title": "Inverser la composition de fonctions",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Vérifier l'utilisation de Node dans l'historique de Zsh",
                "file": "verify1-1.sh",
                "hint": "JavaScript peut être exécuté dans le Terminal/SSH en tapant 'node' et en appuyant sur Entrée."
              }
            ]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Funktionen von links nach rechts zusammensetzen",
      "description": "In diesem Lab werden wir das Konzept der Funktionskomposition in JavaScript erkunden. Insbesondere werden wir uns auf die composeRight-Funktion konzentrieren, die uns ermöglicht, mehrere Funktionen zu einer einzigen Funktion zu kombinieren, die von links nach rechts ausgeführt wird. Anhand von praktischen Beispielen werden wir sehen, wie die Funktionskomposition unseren Code vereinfachen und modularer gestalten kann.",
      "meta": {
        "title": "JavaScript-Funktionskomposition | Code-Tutorials",
        "description": "Lernen Sie, wie Sie die Funktionskomposition in JavaScript verwenden, um Ihren Code zu vereinfachen und modularer zu gestalten. Entdecken Sie die composeRight-Funktion und praktische Beispiele.",
        "keywords": "JavaScript, Funktionskomposition, composeRight, Code-Tutorials, Programmierung, Webentwicklung"
      },
      "details": {
        "steps": [
          {
            "title": "Funktionen umkehren und zusammensetzen",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Überprüfen der Verwendung von Node in der Zsh-Geschichte",
                "file": "verify1-1.sh",
                "hint": "JavaScript kann im Terminal/SSH ausgeführt werden, indem man 'node' eingibt und die Enter-Taste drückt."
              }
            ]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "関数を左から右に合成する",
      "description": "この実験では、JavaScript における関数合成の概念を探ります。具体的には、`composeRight` 関数に焦点を当てます。この関数を使うと、複数の関数を左から右に実行される単一の関数に結合できます。実際の例を通じて、関数合成がコードを簡素化し、よりモジュール化する方法を見ていきましょう。",
      "meta": {
        "title": "JavaScript の関数合成 | コーディング チュートリアル",
        "description": "JavaScript で関数合成を使ってコードを簡素化し、よりモジュール化する方法を学びましょう。`composeRight` 関数と実際の例を探ります。",
        "keywords": "JavaScript, 関数合成，composeRight, コーディング チュートリアル，プログラミング，ウェブ開発"
      },
      "details": {
        "steps": [
          {
            "title": "関数を逆順に合成する",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "Zsh 履歴における Node の使用を確認する",
                "file": "verify1-1.sh",
                "hint": "ターミナル/SSH で 'node' と入力して Enter キーを押すことで、JavaScript を実行できます。"
              }
            ]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Композиция функций слева направо",
      "description": "В этом практическом занятии мы изучим концепцию композиции функций в JavaScript. В частности, мы сосредоточимся на функции composeRight, которая позволяет объединять несколько функций в одну, которая выполняется слева направо. С помощью практических примеров мы увидим, как композиция функций может упростить наш код и сделать его более модульным.",
      "meta": {
        "title": "Композиция функций JavaScript | Руководства по программированию",
        "description": "Изучите, как использовать композицию функций в JavaScript, чтобы упростить ваш код и сделать его более модульным. Исследуйте функцию composeRight и практические примеры.",
        "keywords": "JavaScript, композиция функций, composeRight, руководства по программированию, программирование, веб-разработка"
      },
      "details": {
        "steps": [
          {
            "title": "Обратная композиция функций",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "Проверить использование Node в истории Zsh",
                "file": "verify1-1.sh",
                "hint": "JavaScript можно запустить в Терминале/SSH, введя 'node' и нажав Enter."
              }
            ]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    }
  ]
}
