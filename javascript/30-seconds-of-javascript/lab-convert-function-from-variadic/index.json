{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Convert Function From Variadic",
  "description": "In this lab, we will explore the concept of converting a variadic function into an array function in JavaScript. We will use a closure and the spread operator to map the array of arguments to the inputs of the function. By the end of this lab, you will be able to create a reusable function that accepts an array of arguments instead of individual arguments.",
  "meta": {
    "title": "Convert Variadic Function to Array Function in JavaScript",
    "description": "Learn how to convert a variadic function into an array function using closure and the spread operator in JavaScript.",
    "keywords": "javascript, javascript practice, array function, variadic function, javascript practice online, javascript lab, spread operator, closure, javascript tutor"
  },
  "difficulty": "Beginner",
  "time": 10,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Convert Function From Variadic",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify Node Commands in ZSH History",
            "file": "verify1-1.sh",
            "hint": "JavaScript can be run in the Terminal/SSH by typing 'node' and pressing Enter.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "javascript/arith_ops",
          "javascript/comp_ops",
          "javascript/data_types",
          "javascript/spread_rest",
          "javascript/variables"
        ]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["Lotus-7"],
  "license": {
    "name": "CC-BY-4.0",
    "url": "https://github.com/30-seconds/30-seconds-of-code/blob/master/LICENSE",
    "repo": "https://github.com/30-seconds/30-seconds-of-code"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "将可变参数函数进行转换",
      "description": "在本实验中，我们将探讨如何在JavaScript中将可变参数函数转换为数组函数。我们将使用闭包和展开运算符，将参数数组映射到函数的输入。完成本实验后，你将能够创建一个可复用的函数，该函数接受参数数组而非单个参数。",
      "meta": {
        "title": "在JavaScript中把可变参数函数转换为数组函数",
        "description": "学习如何在JavaScript中使用闭包和展开运算符将可变参数函数转换为数组函数。",
        "keywords": "JavaScript, JavaScript练习, 数组函数, 可变参数函数, 在线JavaScript练习, JavaScript实验, 展开运算符, 闭包, JavaScript教程"
      },
      "details": {
        "steps": [
          {
            "title": "将可变参数函数进行转换",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "在ZSH历史记录中验证Node命令",
                "file": "verify1-1.sh",
                "hint": "通过输入'node'并按Enter键，可以在终端/SSH中运行JavaScript。"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    }
  ]
}
