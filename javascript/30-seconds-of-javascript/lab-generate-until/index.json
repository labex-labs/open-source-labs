{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Generate Until Condition Is Met",
  "description": "In this lab, we will explore the concept of generators in JavaScript. Specifically, we will learn how to create a generator function that produces new values until a certain condition is met. Through hands-on coding exercises, we will gain a better understanding of how generators work and how they can be used to simplify our code and improve its performance.",
  "meta": {
    "title": "Mastering JavaScript Generators: Produce Values Until Condition Met",
    "description": "Explore the power of JavaScript generators to create efficient code that generates values until a specific condition is satisfied.",
    "keywords": "javascript, javascript practice, javascript tutor, javascript practice online, conditional generation, performance optimization, javascript lab, generators, coding tutorials"
  },
  "difficulty": "Beginner",
  "time": 5,
  "hidden": true,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Generate Until Condition Is Met",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify Node Commands History",
            "file": "verify1-1.sh",
            "hint": "JavaScript can be run in the Terminal/SSH by typing 'node' and pressing Enter.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "javascript/arith_ops",
          "javascript/comp_ops",
          "javascript/data_types",
          "javascript/loops",
          "javascript/variables"
        ]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["Lotus-7"],
  "license": {
    "name": "CC-BY-4.0",
    "url": "https://github.com/30-seconds/30-seconds-of-code/blob/master/LICENSE",
    "repo": "https://github.com/30-seconds/30-seconds-of-code"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "生成直到满足条件",
      "description": "在本实验中，我们将探索 JavaScript 中生成器的概念。具体来说，我们将学习如何创建一个生成器函数，该函数在满足特定条件之前生成新值。通过实际的编码练习，我们将更好地理解生成器的工作原理，以及如何使用它们来简化代码并提高其性能。",
      "meta": {
        "title": "掌握 JavaScript 生成器：生成值直到满足条件",
        "description": "探索 JavaScript 生成器的强大功能，以创建高效代码，该代码在满足特定条件之前生成值。",
        "keywords": "JavaScript, JavaScript 练习，JavaScript 教程，在线 JavaScript 练习，条件生成，性能优化，JavaScript 实验，生成器，编码教程"
      },
      "details": {
        "steps": [
          {
            "title": "生成直到满足条件",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "验证 Node 命令历史记录",
                "file": "verify1-1.sh",
                "hint": "通过在终端/SSH 中输入 'node' 并按回车键，可以运行 JavaScript。"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Generar hasta que se cumpla la condición",
      "description": "En este laboratorio, exploraremos el concepto de generadores en JavaScript. En particular, aprenderemos cómo crear una función generadora que produzca nuevos valores hasta que se cumpla una cierta condición. A través de ejercicios de codificación prácticos, obtendremos una mejor comprensión de cómo funcionan los generadores y cómo se pueden utilizar para simplificar nuestro código y mejorar su rendimiento.",
      "meta": {
        "title": "Dominando los generadores de JavaScript: producir valores hasta que se cumpla la condición",
        "description": "Explora el poder de los generadores de JavaScript para crear código eficiente que genera valores hasta que se satisface una condición específica.",
        "keywords": "javascript, práctica de javascript, tutor de javascript, práctica de javascript en línea, generación condicional, optimización de rendimiento, laboratorio de javascript, generadores, tutoriales de codificación"
      },
      "details": {
        "steps": [
          {
            "title": "Generar hasta que se cumpla la condición",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Verificar el historial de comandos de Node",
                "file": "verify1-1.sh",
                "hint": "JavaScript se puede ejecutar en la Terminal/SSH escribiendo 'node' y presionando Enter."
              }
            ]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Générer jusqu'à ce que la condition soit remplie",
      "description": "Dans ce laboratoire, nous allons explorer le concept de générateurs en JavaScript. Plus précisément, nous allons apprendre à créer une fonction génératrice qui produit de nouvelles valeurs jusqu'à ce qu'une certaine condition soit remplie. Grâce à des exercices de codage pratiques, nous comprendrons mieux comment les générateurs fonctionnent et comment ils peuvent être utilisés pour simplifier notre code et améliorer ses performances.",
      "meta": {
        "title": "Maîtriser les générateurs JavaScript : Générer des valeurs jusqu'à ce que la condition soit remplie",
        "description": "Explorez le pouvoir des générateurs JavaScript pour créer un code efficace qui génère des valeurs jusqu'à ce qu'une condition spécifique soit satisfaite.",
        "keywords": "javascript, pratique javascript, tuteur javascript, pratique javascript en ligne, génération conditionnelle, optimisation de performance, laboratoire javascript, générateurs, tutoriels de codage"
      },
      "details": {
        "steps": [
          {
            "title": "Générer jusqu'à ce que la condition soit remplie",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Vérifier l'historique des commandes Node",
                "file": "verify1-1.sh",
                "hint": "JavaScript peut être exécuté dans le Terminal/SSH en tapant 'node' et en appuyant sur Entrée."
              }
            ]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Generieren bis die Bedingung erfüllt ist",
      "description": "In diesem Lab werden wir das Konzept von Generatoren in JavaScript erkunden. Genauer gesagt werden wir lernen, wie man eine Generatorfunktion erstellt, die neue Werte produziert, bis eine bestimmte Bedingung erfüllt ist. Durch praktische Codebeispiele werden wir ein besseres Verständnis dafür gewinnen, wie Generatoren funktionieren und wie sie verwendet werden können, um unseren Code zu vereinfachen und seine Leistung zu verbessern.",
      "meta": {
        "title": "Meisterung von JavaScript-Generatoren: Generieren von Werten bis die Bedingung erfüllt ist",
        "description": "Entdecken Sie die Macht von JavaScript-Generatoren, um effizienten Code zu erstellen, der Werte generiert, bis eine bestimmte Bedingung erfüllt ist.",
        "keywords": "javascript, javascript Übung, javascript Tutor, Online-JavaScript-Übung, bedingte Generierung, Leistungsooptimierung, JavaScript-Lab, Generatoren, Code-Tutorials"
      },
      "details": {
        "steps": [
          {
            "title": "Generieren bis die Bedingung erfüllt ist",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Verifizieren der Node-Befehlsgeschichte",
                "file": "verify1-1.sh",
                "hint": "JavaScript kann im Terminal/SSH ausgeführt werden, indem man 'node' eingibt und die Enter-Taste drückt."
              }
            ]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "条件が満たされるまで生成する",
      "description": "この実験では、JavaScript におけるジェネレータの概念を探ります。具体的には、特定の条件が満たされるまで新しい値を生成するジェネレータ関数を作成する方法を学びます。実際のコーディング演習を通じて、ジェネレータがどのように機能するか、およびコードを簡略化して性能を向上させるためにどのように使用できるかをより深く理解します。",
      "meta": {
        "title": "JavaScript ジェネレータをマスターする：条件が満たされるまで値を生成する",
        "description": "特定の条件が満たされるまで値を生成する効率的なコードを作成するための JavaScript ジェネレータの力を探求します。",
        "keywords": "javascript, javascript 練習，javascript チューター, オンライン javascript 練習，条件付き生成，性能最適化，javascript 実験，ジェネレータ，コーディング チュートリアル"
      },
      "details": {
        "steps": [
          {
            "title": "条件が満たされるまで生成する",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "Node コマンド履歴を確認する",
                "file": "verify1-1.sh",
                "hint": "ターミナル/SSH で 'node' と入力して Enter キーを押すことで、JavaScript を実行できます。"
              }
            ]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Генерация до достижения условия",
      "description": "В этом практическом занятии мы изучим концепцию генераторов в JavaScript. В частности, мы узнаем, как создать генераторную функцию, которая генерирует новые значения, пока не будет достигнуто определенное условие. С помощью практических заданий по программированию мы лучше понеможем, как работают генераторы и как их можно использовать для упрощения кода и повышения его производительности.",
      "meta": {
        "title": "Мастерство в использовании генераторов JavaScript: Генерация значений до достижения условия",
        "description": "Исследуйте мощь генераторов JavaScript для создания эффективного кода, который генерирует значения, пока не будет удовлетворено определенное условие.",
        "keywords": "javascript, практика javascript, преподавание javascript, онлайн практика javascript, условная генерация, оптимизация производительности, практическое занятие javascript, генераторы, учебники по программированию"
      },
      "details": {
        "steps": [
          {
            "title": "Генерация до достижения условия",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "Проверить историю команд Node",
                "file": "verify1-1.sh",
                "hint": "JavaScript можно запустить в Терминале/SSH, введя 'node' и нажав Enter."
              }
            ]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    },
    {
      "lang": "ko",
      "title": "조건 충족 시까지 값 생성하기",
      "description": "이 랩에서는 JavaScript 의 제너레이터 (generator) 개념을 탐구합니다. 특히, 특정 조건이 충족될 때까지 새로운 값을 생성하는 제너레이터 함수를 만드는 방법을 배웁니다. 실습 코딩 연습을 통해 제너레이터가 어떻게 작동하는지, 코드를 단순화하고 성능을 향상시키는 데 어떻게 사용될 수 있는지 더 잘 이해하게 될 것입니다.",
      "meta": {
        "title": "JavaScript 제너레이터 마스터하기: 조건 충족 시까지 값 생성",
        "description": "특정 조건이 충족될 때까지 값을 생성하는 효율적인 코드를 만들기 위해 JavaScript 제너레이터의 강력한 기능을 탐구하세요.",
        "keywords": "javascript, javascript 연습, javascript 튜터, javascript 온라인 연습, 조건부 생성, 성능 최적화, javascript 랩, 제너레이터, 코딩 튜토리얼, 자바스크립트, 자바스크립트 연습문제, 자바스크립트 강좌"
      },
      "details": {
        "steps": [
          {
            "title": "조건 충족 시까지 값 생성하기",
            "text": "ko/step1.md",
            "verify": [
              {
                "name": "Node 명령어 기록 확인",
                "file": "verify1-1.sh",
                "hint": "JavaScript 는 터미널/SSH 에서 'node'를 입력하고 Enter 키를 눌러 실행할 수 있습니다."
              }
            ]
          }
        ],
        "intro": {
          "text": "ko/intro.md",
          "title": "소개"
        },
        "finish": {
          "text": "ko/finish.md",
          "title": "요약"
        }
      }
    },
    {
      "lang": "pt",
      "title": "Gerar Até que a Condição Seja Atendida",
      "description": "Neste laboratório, exploraremos o conceito de *generators* (geradores) em JavaScript. Especificamente, aprenderemos como criar uma função *generator* que produz novos valores até que uma determinada condição seja atendida. Através de exercícios práticos de codificação, obteremos uma melhor compreensão de como os *generators* funcionam e como eles podem ser usados para simplificar nosso código e melhorar seu desempenho.",
      "meta": {
        "title": "Dominando *Generators* JavaScript: Produza Valores Até que a Condição Seja Atendida",
        "description": "Explore o poder dos *generators* JavaScript para criar código eficiente que gera valores até que uma condição específica seja satisfeita. Aprenda a otimizar seu código com *generators* e melhore o desempenho.",
        "keywords": "javascript, prática javascript, tutorial javascript, exercícios javascript online, geração condicional, otimização de desempenho, laboratório javascript, *generators*, tutoriais de codificação, geradores javascript, javascript geradores, javascript tutorial"
      },
      "details": {
        "steps": [
          {
            "title": "Gerar Até que a Condição Seja Atendida",
            "text": "pt/step1.md",
            "verify": [
              {
                "name": "Verificar Histórico de Comandos Node",
                "file": "verify1-1.sh",
                "hint": "JavaScript pode ser executado no Terminal/SSH digitando 'node' e pressionando Enter."
              }
            ]
          }
        ],
        "intro": {
          "text": "pt/intro.md",
          "title": "Introdução"
        },
        "finish": {
          "text": "pt/finish.md",
          "title": "Resumo"
        }
      }
    }
  ]
}
