{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Generate Until Condition Is Met",
  "description": "In this lab, we will explore the concept of generators in JavaScript. Specifically, we will learn how to create a generator function that produces new values until a certain condition is met. Through hands-on coding exercises, we will gain a better understanding of how generators work and how they can be used to simplify our code and improve its performance.",
  "meta": {
    "title": "Mastering JavaScript Generators: Produce Values Until Condition Met",
    "description": "Explore the power of JavaScript generators to create efficient code that generates values until a specific condition is satisfied.",
    "keywords": "javascript, javascript practice, javascript tutor, javascript practice online, conditional generation, performance optimization, javascript lab, generators, coding tutorials"
  },
  "difficulty": "Beginner",
  "time": 10,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Generate Until Condition Is Met",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify Node Commands History",
            "file": "verify1-1.sh",
            "hint": "JavaScript can be run in the Terminal/SSH by typing 'node' and pressing Enter.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "javascript/arith_ops",
          "javascript/comp_ops",
          "javascript/data_types",
          "javascript/loops",
          "javascript/spread_rest",
          "javascript/variables"
        ]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["Lotus-7"],
  "license": {
    "name": "CC-BY-4.0",
    "url": "https://github.com/30-seconds/30-seconds-of-code/blob/master/LICENSE",
    "repo": "https://github.com/30-seconds/30-seconds-of-code"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "生成直到满足条件",
      "description": "在本实验中，我们将探索 JavaScript 中生成器的概念。具体来说，我们将学习如何创建一个生成器函数，该函数在满足特定条件之前生成新值。通过实际的编码练习，我们将更好地理解生成器的工作原理，以及如何使用它们来简化代码并提高其性能。",
      "meta": {
        "title": "掌握 JavaScript 生成器：生成值直到满足条件",
        "description": "探索 JavaScript 生成器的强大功能，以创建高效代码，该代码在满足特定条件之前生成值。",
        "keywords": "JavaScript, JavaScript 练习, JavaScript 教程, 在线 JavaScript 练习, 条件生成, 性能优化, JavaScript 实验, 生成器, 编码教程"
      },
      "details": {
        "steps": [
          {
            "title": "生成直到满足条件",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "验证 Node 命令历史记录",
                "file": "verify1-1.sh",
                "hint": "通过在终端/SSH 中输入 'node' 并按回车键，可以运行 JavaScript。"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    }
  ]
}
