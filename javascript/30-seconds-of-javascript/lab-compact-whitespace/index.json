{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Compact Whitespaces in JavaScript Strings",
  "description": "In this lab, we will explore how to compact whitespaces in a string using JavaScript. We will utilize the String.prototype.replace() method and a regular expression to replace all occurrences of two or more whitespace characters with a single space. This will help us to effectively format and clean up text data in our web applications.",
  "meta": {
    "title": "Compact Whitespaces in Strings | JavaScript Tutorials",
    "description": "Learn how to compact whitespaces in strings using JavaScript's String.prototype.replace() and regular expressions. Effectively format and clean up text data in your web applications.",
    "keywords": "JavaScript, String, Whitespace, Compact, Formatting, Text Data"
  },
  "difficulty": "Beginner",
  "time": 5,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Compact Whitespaces",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify Node Commands In Zsh History",
            "file": "verify1-1.sh",
            "hint": "JavaScript can be run in the Terminal/SSH by typing 'node' and pressing Enter.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "javascript/arith_ops",
          "javascript/comp_ops",
          "javascript/data_types",
          "javascript/variables"
        ]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["Lotus-7"],
  "license": {
    "name": "CC-BY-4.0",
    "url": "https://github.com/30-seconds/30-seconds-of-code/blob/master/LICENSE",
    "repo": "https://github.com/30-seconds/30-seconds-of-code"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "在 JavaScript 字符串中压缩空白字符",
      "description": "在本实验中，我们将探索如何使用 JavaScript 压缩字符串中的空白字符。我们将利用 String.prototype.replace() 方法和正则表达式，将所有两个或更多连续的空白字符替换为单个空格。这将有助于我们在 Web 应用程序中有效地格式化和清理文本数据。",
      "meta": {
        "title": "字符串中压缩空白字符 | JavaScript 教程",
        "description": "学习如何使用 JavaScript 的 String.prototype.replace() 和正则表达式压缩字符串中的空白字符。在你的 Web 应用程序中有效地格式化和清理文本数据。",
        "keywords": "JavaScript, 字符串，空白字符，压缩，格式化，文本数据"
      },
      "details": {
        "steps": [
          {
            "title": "压缩空白字符",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "在 Zsh 历史记录中验证 Node 命令",
                "file": "verify1-1.sh",
                "hint": "通过输入 'node' 并按 Enter 键，可以在终端/SSH 中运行 JavaScript。"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Compactar Espacios en Blanco en Cadenas de JavaScript",
      "description": "En este laboratorio, exploraremos cómo compactar los espacios en blanco en una cadena utilizando JavaScript. Utilizaremos el método String.prototype.replace() y una expresión regular para reemplazar todas las ocurrencias de dos o más caracteres de espacio en blanco con un solo espacio. Esto nos ayudará a formatear y limpiar efectivamente los datos de texto en nuestras aplicaciones web.",
      "meta": {
        "title": "Compactar Espacios en Blanco en Cadenas | Tutoriales de JavaScript",
        "description": "Aprende cómo compactar los espacios en blanco en cadenas utilizando String.prototype.replace() de JavaScript y expresiones regulares. Formatea y limpia efectivamente los datos de texto en tus aplicaciones web.",
        "keywords": "JavaScript, Cadena, Espacio en Blanco, Compactar, Formateo, Datos de Texto"
      },
      "details": {
        "steps": [
          {
            "title": "Compactar Espacios en Blanco",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Verificar Comandos de Node en el Historial de Zsh",
                "file": "verify1-1.sh",
                "hint": "JavaScript se puede ejecutar en la Terminal/SSH escribiendo 'node' y presionando Enter."
              }
            ]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Compactage des espaces blancs dans les chaînes de caractères JavaScript",
      "description": "Dans ce laboratoire, nous allons explorer la manière de compresser les espaces blancs dans une chaîne de caractères à l'aide de JavaScript. Nous allons utiliser la méthode String.prototype.replace() et une expression régulière pour remplacer toutes les occurrences de deux caractères d'espace blanc ou plus par un seul espace. Cela nous aidera à formater et à nettoyer efficacement les données de texte dans nos applications web.",
      "meta": {
        "title": "Compactage des espaces blancs dans les chaînes de caractères | Tutoriels JavaScript",
        "description": "Découvrez comment compresser les espaces blancs dans les chaînes de caractères à l'aide de String.prototype.replace() et d'expressions régulières en JavaScript. Formatez et nettoyez efficacement les données de texte dans vos applications web.",
        "keywords": "JavaScript, Chaîne de caractères, Espaces blancs, Compactage, Formatage, Données de texte"
      },
      "details": {
        "steps": [
          {
            "title": "Compactage des espaces blancs",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Vérifier les commandes Node dans l'historique Zsh",
                "file": "verify1-1.sh",
                "hint": "JavaScript peut être exécuté dans le Terminal/SSH en tapant 'node' et en appuyant sur Entrée."
              }
            ]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Leerzeichen in JavaScript-Zeichenketten zusammenfassen",
      "description": "In diesem Lab werden wir untersuchen, wie man Leerzeichen in einer Zeichenkette mit JavaScript zusammenfasst. Wir werden die String.prototype.replace()-Methode und eine reguläre Ausdrucksmuster verwenden, um alle Vorkommen von zwei oder mehr Leerzeichen durch ein einzelnes Leerzeichen zu ersetzen. Dies wird uns helfen, die Textdaten in unseren Webanwendungen effektiv zu formatieren und aufzuräumen.",
      "meta": {
        "title": "Leerzeichen in Zeichenketten zusammenfassen | JavaScript-Tutorials",
        "description": "Lernen Sie, wie Sie Leerzeichen in Zeichenketten mit JavaScripts String.prototype.replace() und regulären Ausdrücken zusammenfassen. Formen Sie und bereinigen Sie die Textdaten in Ihren Webanwendungen effektiv.",
        "keywords": "JavaScript, Zeichenkette, Leerzeichen, Zusammenfassen, Formatierung, Textdaten"
      },
      "details": {
        "steps": [
          {
            "title": "Leerzeichen zusammenfassen",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Überprüfen von Node-Befehlen in der Zsh-Geschichte",
                "file": "verify1-1.sh",
                "hint": "JavaScript kann im Terminal/SSH ausgeführt werden, indem man 'node' eingibt und die Eingabetaste drückt."
              }
            ]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "JavaScript 文字列の空白を圧縮する",
      "description": "この実験では、JavaScript を使って文字列内の空白を圧縮する方法を探ります。`String.prototype.replace()` メソッドと正規表現を使って、2 つ以上の空白文字のすべての出現箇所を 1 つの空白に置き換えます。これにより、Web アプリケーション内のテキストデータを効果的に整形し、クリーンアップすることができます。",
      "meta": {
        "title": "文字列の空白を圧縮する | JavaScript チュートリアル",
        "description": "JavaScript の `String.prototype.replace()` と正規表現を使って、文字列内の空白を圧縮する方法を学びましょう。Web アプリケーション内のテキストデータを効果的に整形し、クリーンアップしましょう。",
        "keywords": "JavaScript, 文字列，空白，圧縮，整形，テキストデータ"
      },
      "details": {
        "steps": [
          {
            "title": "空白を圧縮する",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "Zsh 履歴の Node コマンドを確認する",
                "file": "verify1-1.sh",
                "hint": "ターミナル/SSH で 'node' と入力して Enter キーを押すことで JavaScript を実行できます。"
              }
            ]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Сжатие пробелов в строках на JavaScript",
      "description": "В этом практическом занятии мы изучим, как сжимать пробелы в строке с использованием JavaScript. Мы будем использовать метод String.prototype.replace() и регулярное выражение для замены всех вхождений двух и более пробельных символов на один пробел. Это поможет нам эффективно форматировать и очищать текстовые данные в наших веб-приложениях.",
      "meta": {
        "title": "Сжатие пробелов в строках | Руководства по JavaScript",
        "description": "Изучите, как сжимать пробелы в строках с использованием String.prototype.replace() и регулярных выражений JavaScript. Эффективно форматируйте и очищайте текстовые данные в своих веб-приложениях.",
        "keywords": "JavaScript, Строка, Пробел, Сжатие, Форматирование, Текстовые данные"
      },
      "details": {
        "steps": [
          {
            "title": "Сжатие пробелов",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "Проверить команды Node в истории Zsh",
                "file": "verify1-1.sh",
                "hint": "JavaScript можно запускать в Терминале/SSH, введя 'node' и нажав Enter."
              }
            ]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    },
    {
      "lang": "ko",
      "title": "JavaScript 문자열 내 공백 압축",
      "description": "이 랩에서는 JavaScript 를 사용하여 문자열 내 공백을 압축하는 방법을 살펴봅니다. String.prototype.replace() 메서드와 정규 표현식 (regular expression) 을 활용하여 두 개 이상의 공백 문자가 나타나는 모든 경우를 단일 공백으로 대체합니다. 이를 통해 웹 애플리케이션에서 텍스트 데이터를 효과적으로 형식화하고 정리할 수 있습니다.",
      "meta": {
        "title": "문자열 공백 압축 | JavaScript 튜토리얼",
        "description": "JavaScript 의 String.prototype.replace() 및 정규 표현식을 사용하여 문자열 내 공백을 압축하는 방법을 알아보세요. 웹 애플리케이션에서 텍스트 데이터를 효과적으로 형식화하고 정리하세요.",
        "keywords": "JavaScript, 문자열, 공백, 압축, 형식화, 텍스트 데이터, 자바스크립트, 공백 제거"
      },
      "details": {
        "steps": [
          {
            "title": "공백 압축",
            "text": "ko/step1.md",
            "verify": [
              {
                "name": "Zsh 히스토리에서 Node 명령어 확인",
                "file": "verify1-1.sh",
                "hint": "'node'를 입력하고 Enter 키를 눌러 터미널/SSH 에서 JavaScript 를 실행할 수 있습니다."
              }
            ]
          }
        ],
        "intro": {
          "text": "ko/intro.md",
          "title": "소개"
        },
        "finish": {
          "text": "ko/finish.md",
          "title": "요약"
        }
      }
    },
    {
      "lang": "pt",
      "title": "Compactar Espaços em Branco em Strings JavaScript",
      "description": "Neste laboratório, exploraremos como compactar espaços em branco em uma string usando JavaScript. Utilizaremos o método String.prototype.replace() e uma expressão regular para substituir todas as ocorrências de dois ou mais caracteres de espaço em branco por um único espaço. Isso nos ajudará a formatar e limpar dados de texto de forma eficaz em nossas aplicações web.",
      "meta": {
        "title": "Compactar Espaços em Branco em Strings | Tutoriais JavaScript",
        "description": "Aprenda a compactar espaços em branco em strings usando String.prototype.replace() e expressões regulares do JavaScript. Formate e limpe dados de texto de forma eficaz em suas aplicações web.",
        "keywords": "JavaScript, String, Espaços em Branco, Compactar, Formatação, Dados de Texto"
      },
      "details": {
        "steps": [
          {
            "title": "Compactar Espaços em Branco",
            "text": "pt/step1.md",
            "verify": [
              {
                "name": "Verificar Comandos Node no Histórico Zsh",
                "file": "verify1-1.sh",
                "hint": "JavaScript pode ser executado no Terminal/SSH digitando 'node' e pressionando Enter."
              }
            ]
          }
        ],
        "intro": {
          "text": "pt/intro.md",
          "title": "Introdução"
        },
        "finish": {
          "text": "pt/finish.md",
          "title": "Resumo"
        }
      }
    }
  ]
}
