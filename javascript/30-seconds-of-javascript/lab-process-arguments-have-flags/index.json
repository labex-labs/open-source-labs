{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Check if Process Arguments Contain Flags",
  "description": "In this lab, we will explore how to check if process arguments contain flags using JavaScript. You will learn how to use the Array.prototype.every() and Array.prototype.includes() methods to check if the specified flags are present in the process.argv array. Additionally, you will learn how to use regular expressions to prefix the specified flags with - or -- as needed. This lab will help you improve your understanding of JavaScript and how to work with command-line arguments in Node.js.",
  "meta": {
    "title": "Check Process Arguments for Flags | JavaScript Tutorials",
    "description": "Learn how to use JavaScript to check if process arguments contain specified flags. Improve your understanding of JavaScript and command-line arguments in Node.js.",
    "keywords": "JavaScript, Node.js, process.argv, flags, Array.prototype.every, Array.prototype.includes, regular expressions"
  },
  "difficulty": "Beginner",
  "time": 5,
  "hidden": true,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Check if Process Arguments Contain Flags",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify Node Command Usage",
            "file": "verify1-1.sh",
            "hint": "JavaScript can be run in the Terminal/SSH by typing 'node' and pressing Enter.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "javascript/arith_ops",
          "javascript/comp_ops",
          "javascript/data_types",
          "javascript/spread_rest",
          "javascript/variables"
        ]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["Lotus-7"],
  "license": {
    "name": "CC-BY-4.0",
    "url": "https://github.com/30-seconds/30-seconds-of-code/blob/master/LICENSE",
    "repo": "https://github.com/30-seconds/30-seconds-of-code"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "检查进程参数是否包含标志",
      "description": "在本实验中，我们将探索如何使用 JavaScript 检查进程参数是否包含标志。你将学习如何使用 Array.prototype.every() 和 Array.prototype.includes() 方法来检查 process.argv 数组中是否存在指定的标志。此外，你还将学习如何使用正则表达式根据需要在指定的标志前加上 - 或 --。本实验将帮助你加深对 JavaScript 的理解以及如何在 Node.js 中处理命令行参数。",
      "meta": {
        "title": "检查进程参数中的标志 | JavaScript 教程",
        "description": "学习如何使用 JavaScript 检查进程参数是否包含指定的标志。加深你对 JavaScript 和 Node.js 中命令行参数的理解。",
        "keywords": "JavaScript, Node.js, process.argv, 标志，Array.prototype.every, Array.prototype.includes, 正则表达式"
      },
      "details": {
        "steps": [
          {
            "title": "检查进程参数是否包含标志",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "验证 Node 命令的用法",
                "file": "verify1-1.sh",
                "hint": "在终端/SSH 中，通过输入'node'并按回车键可以运行 JavaScript。"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Comprobar si los argumentos del proceso contienen banderas",
      "description": "En este laboratorio, exploraremos cómo comprobar si los argumentos del proceso contienen banderas utilizando JavaScript. Aprenderás cómo utilizar los métodos Array.prototype.every() y Array.prototype.includes() para comprobar si las banderas especificadas están presentes en el array process.argv. Además, aprenderás cómo utilizar expresiones regulares para prefijar las banderas especificadas con - o -- según sea necesario. Este laboratorio te ayudará a mejorar tu comprensión de JavaScript y cómo trabajar con argumentos de línea de comandos en Node.js.",
      "meta": {
        "title": "Comprobar argumentos del proceso para banderas | Tutoriales de JavaScript",
        "description": "Aprende cómo utilizar JavaScript para comprobar si los argumentos del proceso contienen banderas especificadas. Mejora tu comprensión de JavaScript y los argumentos de línea de comandos en Node.js.",
        "keywords": "JavaScript, Node.js, process.argv, banderas, Array.prototype.every, Array.prototype.includes, expresiones regulares"
      },
      "details": {
        "steps": [
          {
            "title": "Comprobar si los argumentos del proceso contienen banderas",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Verificar el uso del comando Node",
                "file": "verify1-1.sh",
                "hint": "Se puede ejecutar JavaScript en la Terminal/SSH escribiendo 'node' y presionando Enter."
              }
            ]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Vérifier si les arguments de processus contiennent des drapeaux",
      "description": "Dans ce laboratoire, nous allons explorer la manière de vérifier si les arguments de processus contiennent des drapeaux en utilisant JavaScript. Vous allez apprendre à utiliser les méthodes Array.prototype.every() et Array.prototype.includes() pour vérifier si les drapeaux spécifiés sont présents dans le tableau process.argv. De plus, vous allez apprendre à utiliser des expressions régulières pour préfixer les drapeaux spécifiés avec - ou -- selon les besoins. Ce laboratoire vous aidera à améliorer votre compréhension de JavaScript et de la manière de travailler avec les arguments de ligne de commande dans Node.js.",
      "meta": {
        "title": "Vérifier les arguments de processus pour des drapeaux | Didacticiels JavaScript",
        "description": "Apprenez à utiliser JavaScript pour vérifier si les arguments de processus contiennent des drapeaux spécifiés. Améliorez votre compréhension de JavaScript et des arguments de ligne de commande dans Node.js.",
        "keywords": "JavaScript, Node.js, process.argv, drapeaux, Array.prototype.every, Array.prototype.includes, expressions régulières"
      },
      "details": {
        "steps": [
          {
            "title": "Vérifier si les arguments de processus contiennent des drapeaux",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Vérifier l'utilisation de la commande Node",
                "file": "verify1-1.sh",
                "hint": "JavaScript peut être exécuté dans le Terminal/SSH en tapant 'node' et en appuyant sur Entrée."
              }
            ]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Überprüfen, ob Prozessargumente Flags enthalten",
      "description": "In diesem Lab werden wir untersuchen, wie man mithilfe von JavaScript überprüft, ob die Prozessargumente Flags enthalten. Sie werden lernen, wie man die Methoden Array.prototype.every() und Array.prototype.includes() verwendet, um zu überprüfen, ob die angegebenen Flags im Array process.argv vorhanden sind. Darüber hinaus werden Sie lernen, wie man reguläre Ausdrücke verwendet, um die angegebenen Flags nach Bedarf mit - oder -- zu prefixen. Dieses Lab wird Ihnen helfen, Ihr Verständnis von JavaScript und der Arbeit mit Befehlszeilenargumenten in Node.js zu verbessern.",
      "meta": {
        "title": "Prozessargumente auf Flags prüfen | JavaScript-Tutorials",
        "description": "Lernen Sie, wie man JavaScript verwendet, um zu überprüfen, ob Prozessargumente bestimmte Flags enthalten. Verbessern Sie Ihr Verständnis von JavaScript und Befehlszeilenargumenten in Node.js.",
        "keywords": "JavaScript, Node.js, process.argv, Flags, Array.prototype.every, Array.prototype.includes, reguläre Ausdrücke"
      },
      "details": {
        "steps": [
          {
            "title": "Überprüfen, ob Prozessargumente Flags enthalten",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Überprüfen der Verwendung des Node-Befehls",
                "file": "verify1-1.sh",
                "hint": "JavaScript kann im Terminal/SSH ausgeführt werden, indem man 'node' eingibt und die Enter-Taste drückt."
              }
            ]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "プロセス引数にフラグが含まれているかどうかを確認する",
      "description": "この実験では、JavaScript を使ってプロセス引数にフラグが含まれているかどうかを確認する方法を探ります。指定されたフラグが process.argv 配列に存在するかどうかを確認するために、Array.prototype.every() と Array.prototype.includes() メソッドをどのように使うか学びます。また、必要に応じて指定されたフラグに - または--を接頭辞として付けるために正規表現をどのように使うかも学びます。この実験は、JavaScript の理解と Node.js でコマンドライン引数を扱う方法の向上に役立ちます。",
      "meta": {
        "title": "フラグ付きのプロセス引数を確認する | JavaScript チュートリアル",
        "description": "JavaScript を使ってプロセス引数に指定されたフラグが含まれているかどうかを確認する方法を学びましょう。JavaScript と Node.js におけるコマンドライン引数の理解を深めましょう。",
        "keywords": "JavaScript, Node.js, process.argv, フラグ，Array.prototype.every, Array.prototype.includes, 正規表現"
      },
      "details": {
        "steps": [
          {
            "title": "プロセス引数にフラグが含まれているかどうかを確認する",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "Node コマンドの使用を確認する",
                "file": "verify1-1.sh",
                "hint": "ターミナル/SSH で'node'と入力して Enter キーを押すことで JavaScript を実行できます。"
              }
            ]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Проверить, содержат ли аргументы процесса флаги",
      "description": "В этом практическом занятии мы изучим, как проверить, содержат ли аргументы процесса флаги, используя JavaScript. Вы научитесь использовать методы Array.prototype.every() и Array.prototype.includes() для проверки наличия указанных флагов в массиве process.argv. Кроме того, вы научитесь использовать регулярные выражения для добавления префикса - или -- к указанным флагам по необходимости. Это практическое занятие поможет вам лучше понять JavaScript и работу с аргументами командной строки в Node.js.",
      "meta": {
        "title": "Проверить аргументы процесса на наличие флагов | Руководства по JavaScript",
        "description": "Изучите, как использовать JavaScript для проверки, содержат ли аргументы процесса указанные флаги. Улучшите свое понимание JavaScript и аргументов командной строки в Node.js.",
        "keywords": "JavaScript, Node.js, process.argv, флаги, Array.prototype.every, Array.prototype.includes, регулярные выражения"
      },
      "details": {
        "steps": [
          {
            "title": "Проверить, содержат ли аргументы процесса флаги",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "Проверить использование команды Node",
                "file": "verify1-1.sh",
                "hint": "JavaScript можно запустить в Терминале/SSH, введя 'node' и нажав Enter."
              }
            ]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    },
    {
      "lang": "ko",
      "title": "프로세스 인수에 플래그 포함 여부 확인",
      "description": "이 랩에서는 JavaScript 를 사용하여 프로세스 인수에 플래그가 포함되어 있는지 확인하는 방법을 살펴봅니다. `Array.prototype.every()` 및 `Array.prototype.includes()` 메서드를 사용하여 지정된 플래그가 `process.argv` 배열에 있는지 확인하는 방법을 배우게 됩니다. 또한, 필요에 따라 정규 표현식 (regular expression) 을 사용하여 지정된 플래그에 - 또는 --를 접두사로 붙이는 방법을 배우게 됩니다. 이 랩은 JavaScript 에 대한 이해를 높이고 Node.js 에서 명령줄 인수를 사용하는 방법을 개선하는 데 도움이 될 것입니다.",
      "meta": {
        "title": "프로세스 인수의 플래그 확인 | JavaScript 튜토리얼",
        "description": "JavaScript 를 사용하여 프로세스 인수에 지정된 플래그가 포함되어 있는지 확인하는 방법을 알아보세요. Node.js 에서 JavaScript 및 명령줄 인수에 대한 이해도를 높이세요.",
        "keywords": "JavaScript, Node.js, process.argv, 플래그, Array.prototype.every, Array.prototype.includes, 정규 표현식"
      },
      "details": {
        "steps": [
          {
            "title": "프로세스 인수에 플래그 포함 여부 확인",
            "text": "ko/step1.md",
            "verify": [
              {
                "name": "Node 명령어 사용 확인",
                "file": "verify1-1.sh",
                "hint": "터미널/SSH 에서 'node'를 입력하고 Enter 키를 눌러 JavaScript 를 실행할 수 있습니다."
              }
            ]
          }
        ],
        "intro": {
          "text": "ko/intro.md",
          "title": "소개"
        },
        "finish": {
          "text": "ko/finish.md",
          "title": "요약"
        }
      }
    },
    {
      "lang": "pt",
      "title": "Verificar se os Argumentos do Processo Contêm Flags",
      "description": "Neste laboratório, exploraremos como verificar se os argumentos do processo contêm flags usando JavaScript. Você aprenderá como usar os métodos Array.prototype.every() e Array.prototype.includes() para verificar se as flags especificadas estão presentes no array process.argv. Além disso, você aprenderá como usar expressões regulares para prefixar as flags especificadas com - ou -- conforme necessário. Este laboratório ajudará você a aprimorar sua compreensão de JavaScript e como trabalhar com argumentos de linha de comando em Node.js.",
      "meta": {
        "title": "Verificar Argumentos do Processo por Flags | Tutoriais JavaScript",
        "description": "Aprenda como usar JavaScript para verificar se os argumentos do processo contêm flags especificadas. Melhore sua compreensão de JavaScript e argumentos de linha de comando em Node.js.",
        "keywords": "JavaScript, Node.js, process.argv, flags, Array.prototype.every, Array.prototype.includes, expressões regulares"
      },
      "details": {
        "steps": [
          {
            "title": "Verificar se os Argumentos do Processo Contêm Flags",
            "text": "pt/step1.md",
            "verify": [
              {
                "name": "Verificar o Uso do Comando Node",
                "file": "verify1-1.sh",
                "hint": "JavaScript pode ser executado no Terminal/SSH digitando 'node' e pressionando Enter."
              }
            ]
          }
        ],
        "intro": {
          "text": "pt/intro.md",
          "title": "Introdução"
        },
        "finish": {
          "text": "pt/finish.md",
          "title": "Resumo"
        }
      }
    }
  ]
}
