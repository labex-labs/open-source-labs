{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Logical or for Functions",
  "description": "In this lab, we will explore how to use the logical or operator to combine two functions and check if at least one of them returns true for a given set of arguments. We will learn how to define a higher-order function that takes two functions as arguments and returns a new function that performs the logical or operation on the results of the input functions. Through examples and exercises, we will gain a better understanding of how to use the logical or operator to write more concise and efficient code.",
  "meta": {
    "title": "Mastering Logical OR for Functions",
    "description": "Learn how to use the logical OR operator to combine functions and check if at least one returns true.",
    "keywords": "javascript, javascript practice, logical or, javascript practice online, higher order functions, functions, javascript lab, javascript tutor, programming"
  },
  "difficulty": "Beginner",
  "time": 5,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Logical or for Functions",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify Node Command Usage",
            "file": "verify1-1.sh",
            "hint": "JavaScript can be run in the Terminal/SSH by typing 'node' and pressing Enter.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": []
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["Lotus-7"],
  "license": {
    "name": "CC-BY-4.0",
    "url": "https://github.com/30-seconds/30-seconds-of-code/blob/master/LICENSE",
    "repo": "https://github.com/30-seconds/30-seconds-of-code"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "对函数使用逻辑或",
      "description": "在本实验中，我们将探索如何使用逻辑或运算符来组合两个函数，并检查对于给定的一组参数，它们中是否至少有一个返回 true。我们将学习如何定义一个高阶函数，该函数接受两个函数作为参数，并返回一个新函数，该新函数对输入函数的结果执行逻辑或操作。通过示例和练习，我们将更好地理解如何使用逻辑或运算符来编写更简洁高效的代码。",
      "meta": {
        "title": "掌握函数的逻辑或",
        "description": "学习如何使用逻辑或运算符来组合函数，并检查是否至少有一个返回 true。",
        "keywords": "javascript, javascript 练习，逻辑或，在线 javascript 练习，高阶函数，函数，javascript 实验，javascript 教程，编程"
      },
      "details": {
        "steps": [
          {
            "title": "对函数使用逻辑或",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "验证 Node 命令的用法",
                "file": "verify1-1.sh",
                "hint": "通过在终端/SSH 中输入'node'并按回车键，可以运行 JavaScript。"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Uso del Operador Lógico OR para Funciones",
      "description": "En este laboratorio, exploraremos cómo usar el operador lógico OR para combinar dos funciones y comprobar si al menos una de ellas devuelve true para un conjunto dado de argumentos. Aprenderemos a definir una función de orden superior que tome dos funciones como argumentos y devuelva una nueva función que realice la operación lógico OR sobre los resultados de las funciones de entrada. A través de ejemplos y ejercicios, obtendremos una mejor comprensión de cómo usar el operador lógico OR para escribir código más conciso y eficiente.",
      "meta": {
        "title": "Dominando el Operador Lógico OR para Funciones",
        "description": "Aprende cómo usar el operador lógico OR para combinar funciones y comprobar si al menos una devuelve true.",
        "keywords": "javascript, práctica de javascript, operador lógico OR, práctica de javascript en línea, funciones de orden superior, funciones, laboratorio de javascript, tutor de javascript, programación"
      },
      "details": {
        "steps": [
          {
            "title": "Uso del Operador Lógico OR para Funciones",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Verificar el Uso del Comando Node",
                "file": "verify1-1.sh",
                "hint": "Se puede ejecutar JavaScript en la Terminal/SSH escribiendo 'node' y presionando Enter."
              }
            ]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Opérateur logique ou pour les fonctions",
      "description": "Dans ce laboratoire, nous allons explorer comment utiliser l'opérateur logique ou pour combiner deux fonctions et vérifier si au moins l'une d'entre elles renvoie true pour un ensemble donné d'arguments. Nous allons apprendre à définir une fonction de haut niveau qui prend deux fonctions en arguments et renvoie une nouvelle fonction qui effectue l'opération logique ou sur les résultats des fonctions d'entrée. Par des exemples et des exercices, nous aurons une meilleure compréhension de la manière d'utiliser l'opérateur logique ou pour écrire du code plus concis et efficace.",
      "meta": {
        "title": "Maîtriser l'opérateur logique OU pour les fonctions",
        "description": "Apprenez à utiliser l'opérateur logique OU pour combiner des fonctions et vérifier si au moins l'une renvoie true.",
        "keywords": "javascript, pratique javascript, opérateur logique ou, pratique javascript en ligne, fonctions de haut niveau, fonctions, laboratoire javascript, tuteur javascript, programmation"
      },
      "details": {
        "steps": [
          {
            "title": "Opérateur logique ou pour les fonctions",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Vérifier l'utilisation de la commande Node",
                "file": "verify1-1.sh",
                "hint": "JavaScript peut être exécuté dans le Terminal/SSH en tapant 'node' et en appuyant sur Entrée."
              }
            ]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Verwendung des logischen Oder für Funktionen",
      "description": "In diesem Lab werden wir untersuchen, wie man den logischen Oder-Operator verwendet, um zwei Funktionen zu kombinieren und zu überprüfen, ob mindestens eine von ihnen für einen gegebenen Argumentensatz true zurückgibt. Wir werden lernen, wie man eine Higher-Order-Funktion definiert, die zwei Funktionen als Argumente nimmt und eine neue Funktion zurückgibt, die die logische Oder-Operation auf den Ergebnissen der Eingabefunktionen ausführt. Anhand von Beispielen und Übungen werden wir ein besseres Verständnis dafür gewinnen, wie man den logischen Oder-Operator verwendet, um kürzeres und effizienteres Code zu schreiben.",
      "meta": {
        "title": "Meisterhaftes Arbeiten mit logischem OR für Funktionen",
        "description": "Lernen Sie, wie man den logischen OR-Operator verwendet, um Funktionen zu kombinieren und zu überprüfen, ob mindestens eine true zurückgibt.",
        "keywords": "javascript, javascript Übung, logischer Oder, Online-Javascript-Übung, Higher-Order-Funktionen, Funktionen, Javascript-Lab, Javascript-Tutor, Programmierung"
      },
      "details": {
        "steps": [
          {
            "title": "Verwendung des logischen Oder für Funktionen",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Überprüfen der Verwendung des Node-Befehls",
                "file": "verify1-1.sh",
                "hint": "JavaScript kann im Terminal/SSH ausgeführt werden, indem man 'node' eingibt und die Enter-Taste drückt."
              }
            ]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "関数に対する論理和",
      "description": "この実験では、論理和演算子を使って 2 つの関数を結合し、与えられた引数セットに対して少なくとも 1 つが true を返すかどうかを確認する方法を探ります。2 つの関数を引数として取り、入力関数の結果に対して論理和演算を行う新しい関数を返す高階関数を定義する方法を学びます。例と演習を通じて、論理和演算子を使ってより簡潔で効率的なコードを書く方法をより深く理解します。",
      "meta": {
        "title": "関数に対する論理和のマスター",
        "description": "関数を結合し、少なくとも 1 つが true を返すかどうかを確認するための論理和演算子の使い方を学びましょう。",
        "keywords": "javascript,javascript の練習，論理和，javascript のオンライン練習，高階関数，関数，javascript の実験，javascript のチュートリアル，プログラミング"
      },
      "details": {
        "steps": [
          {
            "title": "関数に対する論理和",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "Node コマンドの使用を確認する",
                "file": "verify1-1.sh",
                "hint": "ターミナル/SSH で 'node' と入力して Enter キーを押すことで、JavaScript を実行できます。"
              }
            ]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Логический оператор \"или\" для функций",
      "description": "В этом практическом занятии мы изучим, как использовать логический оператор \"или\" для объединения двух функций и проверить, возвращает ли хотя бы одна из них true для заданного набора аргументов. Мы узнаем, как определить высший порядок функцию, которая принимает две функции в качестве аргументов и возвращает новую функцию, которая выполняет логическую операцию \"или\" над результатами входных функций. С помощью примеров и упражнений мы лучше понять, как использовать логический оператор \"или\" для написания более краткого и эффективного кода.",
      "meta": {
        "title": "Мастерство в использовании логического оператора \"или\" для функций",
        "description": "Изучите, как использовать логический оператор \"или\" для объединения функций и проверить, возвращает ли хотя бы одна функция true.",
        "keywords": "javascript, практика javascript, логический оператор \"или\", онлайн практика javascript, высшие порядковые функции, функции, практическое занятие javascript, наставник по javascript, программирование"
      },
      "details": {
        "steps": [
          {
            "title": "Логический оператор \"или\" для функций",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "Проверить использование команды Node",
                "file": "verify1-1.sh",
                "hint": "JavaScript можно запустить в Терминале/SSH, введя 'node' и нажав Enter."
              }
            ]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    },
    {
      "lang": "ko",
      "title": "함수에 대한 논리 OR",
      "description": "이 랩에서는 논리 OR 연산자를 사용하여 두 함수를 결합하고, 주어진 인수에 대해 적어도 하나의 함수가 true 를 반환하는지 확인하는 방법을 살펴봅니다. 두 함수를 인수로 받아 입력 함수의 결과에 논리 OR 연산을 수행하는 새로운 함수를 반환하는 고차 함수를 정의하는 방법을 배웁니다. 예제와 연습을 통해 논리 OR 연산자를 사용하여 더 간결하고 효율적인 코드를 작성하는 방법에 대한 이해를 높일 것입니다.",
      "meta": {
        "title": "함수에 대한 논리 OR 마스터하기 - JavaScript 연습",
        "description": "논리 OR 연산자를 사용하여 함수를 결합하고, 적어도 하나가 true 를 반환하는지 확인하는 방법을 배우세요. JavaScript 코딩 연습, 온라인 튜토리얼 제공.",
        "keywords": "자바스크립트, 자바스크립트 연습, 논리 OR, 자바스크립트 온라인 연습, 고차 함수, 함수, 자바스크립트 랩, 자바스크립트 튜터, 프로그래밍, 코딩 연습"
      },
      "details": {
        "steps": [
          {
            "title": "함수에 대한 논리 OR",
            "text": "ko/step1.md",
            "verify": [
              {
                "name": "Node 명령어 사용 확인",
                "file": "verify1-1.sh",
                "hint": "터미널/SSH 에서 'node'를 입력하고 Enter 키를 눌러 JavaScript 를 실행할 수 있습니다."
              }
            ]
          }
        ],
        "intro": {
          "text": "ko/intro.md",
          "title": "소개"
        },
        "finish": {
          "text": "ko/finish.md",
          "title": "요약"
        }
      }
    },
    {
      "lang": "pt",
      "title": "Ou Lógico para Funções",
      "description": "Neste laboratório, exploraremos como usar o operador lógico 'ou' para combinar duas funções e verificar se pelo menos uma delas retorna verdadeiro (true) para um determinado conjunto de argumentos. Aprenderemos a definir uma função de ordem superior que recebe duas funções como argumentos e retorna uma nova função que realiza a operação 'ou' lógico nos resultados das funções de entrada. Através de exemplos e exercícios, obteremos uma melhor compreensão de como usar o operador 'ou' lógico para escrever um código mais conciso e eficiente.",
      "meta": {
        "title": "Dominando o OU Lógico para Funções em JavaScript",
        "description": "Aprenda a usar o operador OU lógico para combinar funções e verificar se pelo menos uma retorna verdadeiro. Pratique JavaScript online e melhore suas habilidades de programação.",
        "keywords": "javascript, prática javascript, ou lógico, prática javascript online, funções de ordem superior, funções, laboratório javascript, tutorial javascript, programação, aprender javascript, operadores lógicos"
      },
      "details": {
        "steps": [
          {
            "title": "Ou Lógico para Funções",
            "text": "pt/step1.md",
            "verify": [
              {
                "name": "Verificar Uso do Comando Node",
                "file": "verify1-1.sh",
                "hint": "JavaScript pode ser executado no Terminal/SSH digitando 'node' e pressionando Enter."
              }
            ]
          }
        ],
        "intro": {
          "text": "pt/intro.md",
          "title": "Introdução"
        },
        "finish": {
          "text": "pt/finish.md",
          "title": "Resumo"
        }
      }
    }
  ]
}
