{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Pluralizing Strings in JavaScript",
  "description": "In this lab, we will be exploring the concept of pluralizing strings in JavaScript. You will learn how to use a closure to define a function that can return the singular or plural form of a word based on an input number. Additionally, you will have the opportunity to practice using optional arguments and dictionaries to customize the behavior of the function. By the end of this lab, you will have a solid understanding of how to handle pluralization in your JavaScript projects.",
  "meta": {
    "title": "Pluralizing Strings in JavaScript | Closure | Dictionary",
    "description": "Learn how to use a closure to define a function that can return the singular or plural form of a word based on an input number in JavaScript.",
    "keywords": "JavaScript, pluralization, closure, dictionary, strings"
  },
  "difficulty": "Beginner",
  "time": 10,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Pluralize String",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify Node Commands Executed",
            "file": "verify1-1.sh",
            "hint": "JavaScript can be run in the Terminal/SSH by typing 'node' and pressing Enter.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "javascript/arith_ops",
          "javascript/array_methods",
          "javascript/comp_ops",
          "javascript/cond_stmts",
          "javascript/data_types",
          "javascript/str_manip",
          "javascript/variables"
        ]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["Lotus-7"],
  "license": {
    "name": "CC-BY-4.0",
    "url": "https://github.com/30-seconds/30-seconds-of-code/blob/master/LICENSE",
    "repo": "https://github.com/30-seconds/30-seconds-of-code"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "在JavaScript中使字符串变为复数形式",
      "description": "在本实验中，我们将探索JavaScript中字符串复数形式的概念。你将学习如何使用闭包来定义一个函数，该函数可以根据输入数字返回单词的单数或复数形式。此外，你将有机会练习使用可选参数和字典来自定义函数的行为。在本实验结束时，你将对如何在JavaScript项目中处理复数形式有扎实的理解。",
      "meta": {
        "title": "在JavaScript中使字符串变为复数形式 | 闭包 | 字典",
        "description": "学习如何使用闭包在JavaScript中定义一个函数，该函数可以根据输入数字返回单词的单数或复数形式。",
        "keywords": "JavaScript, 复数形式, 闭包, 字典, 字符串"
      },
      "details": {
        "steps": [
          {
            "title": "使字符串变为复数形式",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "验证是否执行了Node命令",
                "file": "verify1-1.sh",
                "hint": "通过在终端/SSH中输入'node'并按回车键，可以运行JavaScript。"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    }
  ]
}
