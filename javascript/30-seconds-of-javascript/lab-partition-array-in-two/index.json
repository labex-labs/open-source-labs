{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Partition Array in Two",
  "description": "In this lab, we will explore how to partition an array into two separate arrays based on a provided function's truthiness for each element using JavaScript. We will use the Array.prototype.reduce() method to create two arrays and the Array.prototype.push() method to add elements to the appropriate array based on the provided function's truthiness. By the end of this lab, you will have a strong understanding of how to partition an array in JavaScript and be able to apply this knowledge in your future projects.",
  "meta": {
    "title": "Partition Array in Two",
    "description": "Explore the art of partitioning arrays in JavaScript using the reduce() method and push() function.",
    "keywords": "javascript, javascript practice, push, javascript practice online, programming tutorial, javascript lab, reduce, javascript tutor, array partitioning"
  },
  "difficulty": "Beginner",
  "time": 10,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Partition Array in Two",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify Node Usage In Zsh History",
            "file": "verify1-1.sh",
            "hint": "JavaScript can be run in the Terminal/SSH by typing 'node' and pressing Enter.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "javascript/arith_ops",
          "javascript/comp_ops",
          "javascript/data_types",
          "javascript/destr_assign",
          "javascript/higher_funcs",
          "javascript/variables"
        ]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["Lotus-7"],
  "license": {
    "name": "CC-BY-4.0",
    "url": "https://github.com/30-seconds/30-seconds-of-code/blob/master/LICENSE",
    "repo": "https://github.com/30-seconds/30-seconds-of-code"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "将数组划分为两个",
      "description": "在本实验中，我们将探索如何使用 JavaScript 根据提供的函数对每个元素的真值，将一个数组划分为两个单独的数组。我们将使用 Array.prototype.reduce() 方法创建两个数组，并使用 Array.prototype.push() 方法根据提供的函数的真值将元素添加到相应的数组中。在本实验结束时，你将对如何在 JavaScript 中划分数组有深入的理解，并能够在未来的项目中应用这些知识。",
      "meta": {
        "title": "将数组划分为两个",
        "description": "探索使用 reduce() 方法和 push() 函数在 JavaScript 中划分数组的技巧。",
        "keywords": "JavaScript, JavaScript 练习, push, 在线 JavaScript 练习, 编程教程, JavaScript 实验, reduce, JavaScript 教程, 数组划分"
      },
      "details": {
        "steps": [
          {
            "title": "将数组划分为两个",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "在 Zsh 历史记录中验证 Node 的使用",
                "file": "verify1-1.sh",
                "hint": "通过输入 'node' 并按 Enter 键，可以在终端/SSH 中运行 JavaScript。"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Particionar Arreglo en Dos",
      "description": "En este laboratorio, exploraremos cómo particionar un arreglo en dos arreglos separados basados en la verdad de una función dada para cada elemento usando JavaScript. Usaremos el método Array.prototype.reduce() para crear dos arreglos y el método Array.prototype.push() para agregar elementos al arreglo apropiado basado en la verdad de la función dada. Al final de este laboratorio, tendrás una fuerte comprensión de cómo particionar un arreglo en JavaScript y ser capaz de aplicar este conocimiento en tus futuros proyectos.",
      "meta": {
        "title": "Particionar Arreglo en Dos",
        "description": "Explora el arte de particionar arreglos en JavaScript usando el método reduce() y la función push().",
        "keywords": "javascript, práctica de javascript, push, práctica de javascript en línea, tutorial de programación, laboratorio de javascript, reduce, tutor de javascript, partición de arreglos"
      },
      "details": {
        "steps": [
          {
            "title": "Particionar Arreglo en Dos",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Verificar el Uso de Node en el Historial de Zsh",
                "file": "verify1-1.sh",
                "hint": "JavaScript se puede ejecutar en la Terminal/SSH escribiendo 'node' y presionando Enter."
              }
            ]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Partitionner un tableau en deux",
      "description": "Dans ce laboratoire, nous allons explorer comment partitionner un tableau en deux tableaux séparés en fonction de la vérité d'une fonction fournie pour chaque élément en utilisant JavaScript. Nous utiliserons la méthode Array.prototype.reduce() pour créer deux tableaux et la méthode Array.prototype.push() pour ajouter des éléments au tableau approprié en fonction de la vérité de la fonction fournie. À la fin de ce laboratoire, vous aurez une bonne compréhension de la manière de partitionner un tableau en JavaScript et serez en mesure d'appliquer ces connaissances dans vos futurs projets.",
      "meta": {
        "title": "Partitionner un tableau en deux",
        "description": "Explorez l'art de la partition de tableaux en JavaScript en utilisant la méthode reduce() et la fonction push().",
        "keywords": "javascript, pratique javascript, push, pratique javascript en ligne, tutoriel de programmation, laboratoire javascript, reduce, tuteur javascript, partition de tableau"
      },
      "details": {
        "steps": [
          {
            "title": "Partitionner un tableau en deux",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Vérifier l'utilisation de Node dans l'historique de Zsh",
                "file": "verify1-1.sh",
                "hint": "JavaScript peut être exécuté dans le Terminal/SSH en tapant 'node' et en appuyant sur Entrée."
              }
            ]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Array in zwei teilen",
      "description": "In diesem Lab werden wir untersuchen, wie man ein Array mithilfe von JavaScript in zwei separate Arrays aufteilt, basierend auf der Wahrheit eines bereitgestellten Funktionswertes für jedes Element. Wir werden die Array.prototype.reduce()-Methode verwenden, um zwei Arrays zu erstellen, und die Array.prototype.push()-Methode, um Elemente an das passende Array hinzuzufügen, basierend auf der Wahrheit des bereitgestellten Funktionswertes. Am Ende dieses Labs werden Sie ein starkes Verständnis dafür haben, wie man ein Array in JavaScript aufteilt, und können dieses Wissen in Ihren zukünftigen Projekten anwenden.",
      "meta": {
        "title": "Array in zwei teilen",
        "description": "Entdecken Sie die Kunst des Aufteilens von Arrays in JavaScript mit der reduce()-Methode und der push()-Funktion.",
        "keywords": "javascript, javascript Übung, push, Online-JavaScript-Übung, Programmierungstutorial, JavaScript-Lab, reduzieren, JavaScript-Tutor, Arrayteilung"
      },
      "details": {
        "steps": [
          {
            "title": "Array in zwei teilen",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Überprüfen der Verwendung von Node in der Zsh-Historie",
                "file": "verify1-1.sh",
                "hint": "JavaScript kann im Terminal/SSH ausgeführt werden, indem man 'node' eingibt und die Eingabetaste drückt."
              }
            ]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "2つに配列を分割する",
      "description": "この実験では、JavaScriptを使って、与えられた関数の各要素に対する真偽値に基づいて配列を2つの別々の配列に分割する方法を探ります。`Array.prototype.reduce()` メソッドを使って2つの配列を作成し、`Array.prototype.push()` メソッドを使って、与えられた関数の真偽値に基づいて適切な配列に要素を追加します。この実験が終わるとき、JavaScriptで配列を分割する方法を十分に理解し、この知識を将来のプロジェクトで活用できるようになります。",
      "meta": {
        "title": "2つに配列を分割する",
        "description": "reduce() メソッドと push() 関数を使って、JavaScriptにおける配列の分割技術を探求しましょう。",
        "keywords": "javascript, javascript練習, push, オンラインjavascript練習, プログラミングチュートリアル, javascript実験, reduce, javascript講師, 配列分割"
      },
      "details": {
        "steps": [
          {
            "title": "2つに配列を分割する",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "Zsh履歴におけるNodeの使用を確認する",
                "file": "verify1-1.sh",
                "hint": "ターミナル/SSHで 'node' と入力してEnterキーを押すことで、JavaScriptを実行できます。"
              }
            ]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Разбивка массива на два",
      "description": "В этом практическом занятии мы изучим, как разбить массив на два отдельных массива на основе истинности функции для каждого элемента с использованием JavaScript. Мы будем использовать метод Array.prototype.reduce(), чтобы создать два массива, и метод Array.prototype.push(), чтобы добавить элементы в соответствующий массив в зависимости от истинности функции. В конце этого практического занятия вы глубоко поняли, как разбить массив в JavaScript, и сможете применить эти знания в своих будущих проектах.",
      "meta": {
        "title": "Разбивка массива на два",
        "description": "Изучите искусство разбивки массивов в JavaScript с использованием метода reduce() и функции push().",
        "keywords": "javascript, практика javascript, push, онлайн практика javascript, учебник по программированию, практическое занятие javascript, reduce, преподаватель javascript, разделение массива"
      },
      "details": {
        "steps": [
          {
            "title": "Разбивка массива на два",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "Проверить использование Node в истории Zsh",
                "file": "verify1-1.sh",
                "hint": "JavaScript можно запустить в Терминале/SSH, введя 'node' и нажав Enter."
              }
            ]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    }
  ]
}
