{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Check if Array Has Only One Match",
  "description": "In this lab, we will explore the concept of checking if an array has only one match in JavaScript. We will utilize the Array.prototype.filter() method to find all matching array elements and then use the Array.prototype.length property to determine if only one element matches the given function. By the end of the lab, you will have a better understanding of how to effectively check for a single match in an array using JavaScript.",
  "meta": {
    "title": "Checking for Single Match in JavaScript Arrays | Programming Tutorial",
    "description": "Explore how to effectively check if an array has only one matching element using JavaScript's Array.prototype.filter() and Array.prototype.length methods.",
    "keywords": "javascript, arrays, single match, filter, programming tutorial"
  },
  "difficulty": "Beginner",
  "time": 10,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Check if Array Has Only One Match",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify Node Commands Executed",
            "file": "verify1-1.sh",
            "hint": "JavaScript can be run in the Terminal/SSH by typing 'node' and pressing Enter.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "javascript/arith_ops",
          "javascript/comp_ops",
          "javascript/data_types",
          "javascript/higher_funcs",
          "javascript/variables"
        ]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["Lotus-7"],
  "license": {
    "name": "CC-BY-4.0",
    "url": "https://github.com/30-seconds/30-seconds-of-code/blob/master/LICENSE",
    "repo": "https://github.com/30-seconds/30-seconds-of-code"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "检查数组是否只有一个匹配项",
      "description": "在本实验中，我们将探讨如何在JavaScript中检查数组是否只有一个匹配项。我们将利用Array.prototype.filter()方法来查找所有匹配的数组元素，然后使用Array.prototype.length属性来确定是否只有一个元素与给定函数匹配。在实验结束时，你将更好地理解如何使用JavaScript有效地检查数组中的单个匹配项。",
      "meta": {
        "title": "使用JavaScript检查数组中的单个匹配项 | 编程教程",
        "description": "探索如何使用JavaScript的Array.prototype.filter()和Array.prototype.length方法有效地检查数组是否只有一个匹配元素。",
        "keywords": "javascript, 数组, 单个匹配项, 过滤, 编程教程"
      },
      "details": {
        "steps": [
          {
            "title": "检查数组是否只有一个匹配项",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "验证是否执行了Node命令",
                "file": "verify1-1.sh",
                "hint": "在终端/SSH中，通过输入'node'并按回车键可以运行JavaScript。"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Comprobar si una matriz tiene solo una coincidencia",
      "description": "En este laboratorio, exploraremos el concepto de comprobar si una matriz tiene solo una coincidencia en JavaScript. Utilizaremos el método Array.prototype.filter() para encontrar todos los elementos de matriz que coinciden y luego usaremos la propiedad Array.prototype.length para determinar si solo un elemento coincide con la función dada. Al final del laboratorio, tendrás una mejor comprensión de cómo comprobar efectivamente una sola coincidencia en una matriz usando JavaScript.",
      "meta": {
        "title": "Comprobando una sola coincidencia en matrices de JavaScript | Tutorial de programación",
        "description": "Explora cómo comprobar efectivamente si una matriz tiene solo un elemento que coincide usando los métodos Array.prototype.filter() y Array.prototype.length de JavaScript.",
        "keywords": "javascript, matrices, sola coincidencia, filtrado, tutorial de programación"
      },
      "details": {
        "steps": [
          {
            "title": "Comprobar si una matriz tiene solo una coincidencia",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Verificar que se ejecutaron los comandos de Node",
                "file": "verify1-1.sh",
                "hint": "Se puede ejecutar JavaScript en la Terminal/SSH escribiendo 'node' y presionando Enter."
              }
            ]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Vérifier si un tableau a une seule correspondance",
      "description": "Dans ce laboratoire, nous allons explorer le concept de vérification pour savoir si un tableau a une seule correspondance en JavaScript. Nous allons utiliser la méthode Array.prototype.filter() pour trouver tous les éléments du tableau correspondants et puis utiliser la propriété Array.prototype.length pour déterminer si un seul élément correspond à la fonction donnée. À la fin du laboratoire, vous aurez une meilleure compréhension de la manière d'effectuer efficacement la vérification d'une seule correspondance dans un tableau à l'aide de JavaScript.",
      "meta": {
        "title": "Vérification d'une correspondance unique dans les tableaux JavaScript | Tutoriel de programmation",
        "description": "Explorez comment vérifier efficacement si un tableau a un seul élément correspondant à l'aide des méthodes Array.prototype.filter() et Array.prototype.length de JavaScript.",
        "keywords": "javascript, tableaux, correspondance unique, filtre, tutoriel de programmation"
      },
      "details": {
        "steps": [
          {
            "title": "Vérifier si un tableau a une seule correspondance",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Vérifier que les commandes Node ont été exécutées",
                "file": "verify1-1.sh",
                "hint": "JavaScript peut être exécuté dans le Terminal/SSH en tapant 'node' et en appuyant sur Entrée."
              }
            ]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Überprüfen, ob ein Array nur einen Treffer hat",
      "description": "In diesem Lab werden wir das Konzept des Überprüfens, ob ein Array in JavaScript nur einen Treffer hat, erkunden. Wir werden die Array.prototype.filter()-Methode verwenden, um alle passenden Arrayelemente zu finden, und dann die Array.prototype.length-Eigenschaft verwenden, um zu bestimmen, ob nur ein Element der angegebenen Funktion entspricht. Am Ende des Labs werden Sie ein besseres Verständnis dafür haben, wie Sie mit JavaScript effektiv nach einem einzelnen Treffer in einem Array suchen.",
      "meta": {
        "title": "Überprüfung auf einen einzelnen Treffer in JavaScript-Arrays | Programmier-Tutorial",
        "description": "Erkunden Sie, wie Sie mit Hilfe der Array.prototype.filter() und Array.prototype.length-Methoden von JavaScript effektiv überprüfen können, ob ein Array nur ein passendes Element hat.",
        "keywords": "javascript, arrays, einzelner Treffer, filter, Programmier-Tutorial"
      },
      "details": {
        "steps": [
          {
            "title": "Überprüfen, ob ein Array nur einen Treffer hat",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Überprüfen, ob die Node-Befehle ausgeführt wurden",
                "file": "verify1-1.sh",
                "hint": "JavaScript kann im Terminal/SSH ausgeführt werden, indem Sie 'node' eingeben und die Eingabetaste drücken."
              }
            ]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "配列に 1 つだけ一致する要素があるかどうかを確認する",
      "description": "この実験では、JavaScript で配列に 1 つだけ一致する要素があるかどうかを確認する概念を検討します。`Array.prototype.filter()` メソッドを使用して、一致するすべての配列要素を見つけ、その後 `Array.prototype.length` プロパティを使用して、与えられた関数に一致する要素が 1 つだけであるかどうかを判断します。この実験が終了するとき、JavaScript を使用して配列内の単一の一致を効果的に確認する方法をより深く理解するようになります。",
      "meta": {
        "title": "JavaScript 配列の単一の一致を確認する | プログラミング チュートリアル",
        "description": "JavaScript の `Array.prototype.filter()` と `Array.prototype.length` メソッドを使って、配列に 1 つだけ一致する要素があるかどうかを効果的に確認する方法を学びましょう。",
        "keywords": "javascript, 配列, 単一の一致, フィルタ, プログラミング チュートリアル"
      },
      "details": {
        "steps": [
          {
            "title": "配列に 1 つだけ一致する要素があるかどうかを確認する",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "Node コマンドが実行されたことを確認する",
                "file": "verify1-1.sh",
                "hint": "ターミナル/SSH で 'node' と入力して Enter キーを押すことで、JavaScript を実行できます。"
              }
            ]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Проверить, содержит ли массив только одно совпадение",
      "description": "В этом практическом занятии мы изучим концепцию проверки наличия только одного совпадения в массиве на JavaScript. Мы будем использовать метод Array.prototype.filter() для поиска всех совпадающих элементов массива, а затем свойство Array.prototype.length для определения, содержит ли массив только один элемент, соответствующий заданной функции. В конце практического занятия вы будете лучше понимать, как эффективно проверять наличие одного совпадения в массиве с использованием JavaScript.",
      "meta": {
        "title": "Проверка наличия одного совпадения в массивах JavaScript | Руководство по программированию",
        "description": "Изучите, как эффективно проверить, содержит ли массив только один совпадающий элемент, используя методы Array.prototype.filter() и Array.prototype.length JavaScript.",
        "keywords": "javascript, массивы, одно совпадение, фильтр, руководство по программированию"
      },
      "details": {
        "steps": [
          {
            "title": "Проверить, содержит ли массив только одно совпадение",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "Проверить выполнение команд Node",
                "file": "verify1-1.sh",
                "hint": "JavaScript можно запустить в Терминале/SSH, введя 'node' и нажав Enter."
              }
            ]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    }
  ]
}
