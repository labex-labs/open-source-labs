{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Filter Non-Unique Array Values Based on Function",
  "description": "In this lab, we will explore a JavaScript function that filters non-unique array values based on a provided comparator function. By using Array.prototype.filter() and Array.prototype.every(), we will create a new array that contains only the unique values based on the comparator function. This lab aims to improve your understanding of JavaScript array methods and how to use them to manipulate data.",
  "meta": {
    "title": "Filtering Non-Unique Array Values | JavaScript Coding Practice",
    "description": "Learn how to filter out non-unique values from an array using JavaScript array methods. Improve your understanding of data manipulation techniques.",
    "keywords": "JavaScript, Array, Filtering, Unique Values, Data Manipulation"
  },
  "difficulty": "Beginner",
  "time": 5,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Filter Non-Unique Array Values Based on Function",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify Node Commands In Zsh History",
            "file": "verify1-1.sh",
            "hint": "JavaScript can be run in the Terminal/SSH by typing 'node' and pressing Enter.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": []
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["Lotus-7"],
  "license": {
    "name": "CC-BY-4.0",
    "url": "https://github.com/30-seconds/30-seconds-of-code/blob/master/LICENSE",
    "repo": "https://github.com/30-seconds/30-seconds-of-code"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "基于函数过滤数组中的非唯一值",
      "description": "在本实验中，我们将探索一个 JavaScript 函数，该函数根据提供的比较函数过滤非唯一数组值。通过使用 Array.prototype.filter() 和 Array.prototype.every()，我们将创建一个新数组，该数组仅包含基于比较函数的唯一值。本实验旨在加深你对 JavaScript 数组方法的理解，以及如何使用它们来操作数据。",
      "meta": {
        "title": "过滤非唯一数组值 | JavaScript 编码实践",
        "description": "学习如何使用 JavaScript 数组方法从数组中过滤掉非唯一值。加深你对数据操作技术的理解。",
        "keywords": "JavaScript, 数组，过滤，唯一值，数据操作"
      },
      "details": {
        "steps": [
          {
            "title": "基于函数过滤数组中的非唯一值",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "在 Zsh 历史记录中验证 Node 命令",
                "file": "verify1-1.sh",
                "hint": "通过在终端/SSH 中输入'node'并按回车键，可以运行 JavaScript。"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Filtrado de valores no únicos de una matriz basado en función",
      "description": "En este laboratorio, exploraremos una función de JavaScript que filtra los valores no únicos de una matriz en función de una función comparadora proporcionada. Utilizando Array.prototype.filter() y Array.prototype.every(), crearemos una nueva matriz que contiene solo los valores únicos en función de la función comparadora. Este laboratorio tiene como objetivo mejorar su comprensión de los métodos de matriz de JavaScript y cómo utilizarlos para manipular datos.",
      "meta": {
        "title": "Filtrado de valores no únicos de una matriz | Práctica de codificación en JavaScript",
        "description": "Aprende a filtrar los valores no únicos de una matriz utilizando los métodos de matriz de JavaScript. Mejora tu comprensión de las técnicas de manipulación de datos.",
        "keywords": "JavaScript, Matriz, Filtrado, Valores únicos, Manipulación de datos"
      },
      "details": {
        "steps": [
          {
            "title": "Filtrado de valores no únicos de una matriz basado en función",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Verificar comandos de Node en el historial de Zsh",
                "file": "verify1-1.sh",
                "hint": "Se puede ejecutar JavaScript en la Terminal/SSH escribiendo 'node' y presionando Enter."
              }
            ]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Filtrer les valeurs non uniques d'un tableau en fonction d'une fonction",
      "description": "Dans ce laboratoire, nous allons explorer une fonction JavaScript qui filtre les valeurs non uniques d'un tableau en fonction d'une fonction de comparaison fournie. En utilisant Array.prototype.filter() et Array.prototype.every(), nous allons créer un nouveau tableau qui contient uniquement les valeurs uniques en fonction de la fonction de comparaison. Ce laboratoire vise à améliorer votre compréhension des méthodes de tableaux JavaScript et de la manière de les utiliser pour manipuler des données.",
      "meta": {
        "title": "Filtrer les valeurs non uniques d'un tableau | Pratique de codage JavaScript",
        "description": "Découvrez comment filtrer les valeurs non uniques d'un tableau à l'aide de méthodes de tableaux JavaScript. Améliorez votre compréhension des techniques de manipulation de données.",
        "keywords": "JavaScript, Tableau, Filtrage, Valeurs uniques, Manipulation de données"
      },
      "details": {
        "steps": [
          {
            "title": "Filtrer les valeurs non uniques d'un tableau en fonction d'une fonction",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Vérifier les commandes Node dans l'historique Zsh",
                "file": "verify1-1.sh",
                "hint": "JavaScript peut être exécuté dans le Terminal/SSH en tapant 'node' et en appuyant sur Entrée."
              }
            ]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Filtere nicht eindeutige Array-Werte basierend auf einer Funktion",
      "description": "In diesem Lab werden wir eine JavaScript-Funktion untersuchen, die nicht eindeutige Array-Werte basierend auf einer bereitgestellten Vergleichsfunktion filtert. Mit Hilfe von Array.prototype.filter() und Array.prototype.every() werden wir ein neues Array erstellen, das nur die eindeutigen Werte basierend auf der Vergleichsfunktion enthält. Ziel dieses Labs ist es, Ihr Verständnis von JavaScript-Array-Methoden und wie Sie diese verwenden, um Daten zu manipulieren, zu verbessern.",
      "meta": {
        "title": "Filterung von nicht eindeutigen Array-Werten | JavaScript-Codingübungen",
        "description": "Lernen Sie, wie Sie nicht eindeutige Werte aus einem Array mit JavaScript-Array-Methoden filtern. Verbessern Sie Ihr Verständnis von Datenmanipulationsverfahren.",
        "keywords": "JavaScript, Array, Filterung, eindeutige Werte, Datenmanipulation"
      },
      "details": {
        "steps": [
          {
            "title": "Filtere nicht eindeutige Array-Werte basierend auf einer Funktion",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Verifiziere Node-Befehle in der Zsh-Historie",
                "file": "verify1-1.sh",
                "hint": "JavaScript kann im Terminal/SSH ausgeführt werden, indem Sie 'node' eingeben und die Enter-Taste drücken."
              }
            ]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "関数に基づく非一意の配列値のフィルタリング",
      "description": "この実験では、提供された比較関数に基づいて非一意の配列値をフィルタリングする JavaScript 関数を探ります。`Array.prototype.filter()` と `Array.prototype.every()` を使用して、比較関数に基づいて一意の値のみを含む新しい配列を作成します。この実験の目的は、JavaScript の配列メソッドの理解と、データを操作するためのそれらの使い方を向上させることです。",
      "meta": {
        "title": "非一意の配列値のフィルタリング | JavaScript コーディング練習",
        "description": "JavaScript の配列メソッドを使って配列から非一意の値をフィルタリングする方法を学びましょう。データ操作技術の理解を深めましょう。",
        "keywords": "JavaScript, 配列，フィルタリング，一意の値，データ操作"
      },
      "details": {
        "steps": [
          {
            "title": "関数に基づく非一意の配列値のフィルタリング",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "Zsh 履歴における Node コマンドを確認する",
                "file": "verify1-1.sh",
                "hint": "ターミナル/SSH で 'node' と入力して Enter キーを押すことで JavaScript を実行できます。"
              }
            ]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Фильтрация неуникальных значений массива с использованием функции",
      "description": "В этом практическом занятии мы изучим функцию JavaScript, которая фильтрует неуникальные значения массива на основе предоставленной функции сравнения. Используя Array.prototype.filter() и Array.prototype.every(), мы создадим новый массив, содержащий только уникальные значения на основе функции сравнения. Эта лабораторная работа направлена на улучшение вашего понимания методов массивов JavaScript и способов их использования для манипуляции данными.",
      "meta": {
        "title": "Фильтрация неуникальных значений массива | Практика программирования на JavaScript",
        "description": "Изучите, как фильтровать неуникальные значения из массива с использованием методов массивов JavaScript. Повысьте свое понимание техник манипуляции данными.",
        "keywords": "JavaScript, Массив, Фильтрация, Уникальные значения, Обработка данных"
      },
      "details": {
        "steps": [
          {
            "title": "Фильтрация неуникальных значений массива с использованием функции",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "Проверить команды Node в истории Zsh",
                "file": "verify1-1.sh",
                "hint": "JavaScript можно запустить в Терминале/SSH, введя 'node' и нажав Enter."
              }
            ]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    },
    {
      "lang": "ko",
      "title": "함수를 기반으로 고유하지 않은 배열 값 필터링",
      "description": "이 랩에서는 제공된 비교자 함수를 기반으로 고유하지 않은 배열 값을 필터링하는 JavaScript 함수를 살펴봅니다. Array.prototype.filter() 및 Array.prototype.every() 를 사용하여 비교자 함수를 기반으로 고유한 값만 포함하는 새로운 배열을 생성합니다. 이 랩은 JavaScript 배열 메서드에 대한 이해를 높이고 데이터를 조작하는 방법을 개선하는 것을 목표로 합니다.",
      "meta": {
        "title": "고유하지 않은 배열 값 필터링 | JavaScript 코딩 연습",
        "description": "JavaScript 배열 메서드를 사용하여 배열에서 고유하지 않은 값을 필터링하는 방법을 알아보세요. 데이터 조작 기술에 대한 이해도를 높이세요.",
        "keywords": "JavaScript, 배열, 필터링, 고유 값, 데이터 조작, 자바스크립트, 배열 필터, 중복 제거"
      },
      "details": {
        "steps": [
          {
            "title": "함수를 기반으로 고유하지 않은 배열 값 필터링",
            "text": "ko/step1.md",
            "verify": [
              {
                "name": "Zsh 히스토리에서 Node 명령어 확인",
                "file": "verify1-1.sh",
                "hint": "JavaScript 는 터미널/SSH 에서 'node'를 입력하고 Enter 키를 눌러 실행할 수 있습니다."
              }
            ]
          }
        ],
        "intro": {
          "text": "ko/intro.md",
          "title": "소개"
        },
        "finish": {
          "text": "ko/finish.md",
          "title": "요약"
        }
      }
    },
    {
      "lang": "pt",
      "title": "Filtrar Valores Não Únicos de Array com Base em Função",
      "description": "Neste laboratório, exploraremos uma função JavaScript que filtra valores não únicos de um array com base em uma função comparadora fornecida. Usando Array.prototype.filter() e Array.prototype.every(), criaremos um novo array que contém apenas os valores únicos com base na função comparadora. Este laboratório visa aprimorar sua compreensão dos métodos de array JavaScript e como usá-los para manipular dados.",
      "meta": {
        "title": "Filtrando Valores Não Únicos de Array em JavaScript | Prática de Codificação",
        "description": "Aprenda a filtrar valores não únicos de um array usando métodos de array JavaScript. Melhore sua compreensão das técnicas de manipulação de dados.",
        "keywords": "JavaScript, Array, Filtragem, Valores Únicos, Manipulação de Dados, Remover Duplicados JavaScript"
      },
      "details": {
        "steps": [
          {
            "title": "Filtrar Valores Não Únicos de Array com Base em Função",
            "text": "pt/step1.md",
            "verify": [
              {
                "name": "Verificar Comandos Node no Histórico Zsh",
                "file": "verify1-1.sh",
                "hint": "JavaScript pode ser executado no Terminal/SSH digitando 'node' e pressionando Enter."
              }
            ]
          }
        ],
        "intro": {
          "text": "pt/intro.md",
          "title": "Introdução"
        },
        "finish": {
          "text": "pt/finish.md",
          "title": "Resumo"
        }
      }
    }
  ]
}
