{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Number Is Power of Two",
  "description": "In this lab, we will explore a JavaScript function that determines whether a given number is a power of 2. By using the bitwise binary AND operator and checking that the number is not falsy, we can accurately determine if a number is a power of 2. This lab will provide an opportunity to practice using bitwise operators and logical operators in JavaScript.",
  "meta": {
    "title": "Determine If a Number Is a Power of Two",
    "description": "Explore a JavaScript function to check if a number is a power of 2 using bitwise operators.",
    "keywords": "bitwise operators, javascript, javascript practice, javascript practice online, coding, javascript lab, power of two, javascript tutor, programming"
  },
  "difficulty": "Beginner",
  "time": 10,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Number Is Power of Two",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify Node Command Usage",
            "file": "verify1-1.sh",
            "hint": "JavaScript can be run in the Terminal/SSH by typing 'node' and pressing Enter.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "javascript/arith_ops",
          "javascript/comp_ops",
          "javascript/data_types",
          "javascript/variables"
        ]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["Lotus-7"],
  "license": {
    "name": "CC-BY-4.0",
    "url": "https://github.com/30-seconds/30-seconds-of-code/blob/master/LICENSE",
    "repo": "https://github.com/30-seconds/30-seconds-of-code"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "数字是否为2的幂",
      "description": "在本实验中，我们将探究一个JavaScript函数，该函数用于确定给定的数字是否为2的幂。通过使用按位二进制与运算符，并检查该数字不为假值，我们可以准确地确定一个数字是否为2的幂。本实验将提供一个机会，让你练习在JavaScript中使用按位运算符和逻辑运算符。",
      "meta": {
        "title": "判断一个数字是否为2的幂",
        "description": "探索一个JavaScript函数，使用按位运算符检查一个数字是否为2的幂。",
        "keywords": "按位运算符, JavaScript, JavaScript练习, 在线JavaScript练习, 编码, JavaScript实验, 2的幂, JavaScript教程, 编程"
      },
      "details": {
        "steps": [
          {
            "title": "数字是否为2的幂",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "验证Node命令的用法",
                "file": "verify1-1.sh",
                "hint": "在终端/SSH中，通过输入'node'并按回车键可以运行JavaScript。"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Número es Potencia de Dos",
      "description": "En este laboratorio, exploraremos una función de JavaScript que determina si un número dado es una potencia de 2. Al utilizar el operador AND binario bit a bit y comprobar que el número no es falso, podemos determinar con precisión si un número es una potencia de 2. Este laboratorio ofrecerá la oportunidad de practicar el uso de operadores bit a bit y operadores lógicos en JavaScript.",
      "meta": {
        "title": "Determinar si un número es una potencia de dos",
        "description": "Explore una función de JavaScript para comprobar si un número es una potencia de 2 utilizando operadores bit a bit.",
        "keywords": "operadores bit a bit, javascript, práctica de javascript, práctica de javascript en línea, codificación, laboratorio de javascript, potencia de dos, tutor de javascript, programación"
      },
      "details": {
        "steps": [
          {
            "title": "Número es Potencia de Dos",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Verificar el uso del comando Node",
                "file": "verify1-1.sh",
                "hint": "JavaScript se puede ejecutar en la Terminal/SSH escribiendo 'node' y presionando Enter."
              }
            ]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Nombre est une puissance de deux",
      "description": "Dans ce laboratoire, nous allons explorer une fonction JavaScript qui détermine si un nombre donné est une puissance de 2. En utilisant l'opérateur binaire ET bit à bit et en vérifiant que le nombre n'est pas faux, nous pouvons déterminer avec précision si un nombre est une puissance de 2. Ce laboratoire vous offrira l'occasion de pratiquer l'utilisation d'opérateurs bit à bit et d'opérateurs logiques en JavaScript.",
      "meta": {
        "title": "Vérifiez si un nombre est une puissance de deux",
        "description": "Explorez une fonction JavaScript pour vérifier si un nombre est une puissance de 2 en utilisant des opérateurs bit à bit.",
        "keywords": "opérateurs bit à bit, javascript, pratique javascript, pratique javascript en ligne, codage, laboratoire javascript, puissance de deux, tuteur javascript, programmation"
      },
      "details": {
        "steps": [
          {
            "title": "Nombre est une puissance de deux",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Vérifiez l'utilisation de la commande Node",
                "file": "verify1-1.sh",
                "hint": "JavaScript peut être exécuté dans le Terminal/SSH en tapant 'node' et en appuyant sur Entrée."
              }
            ]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Zahl ist Zweierpotenz",
      "description": "In diesem Lab werden wir eine JavaScript-Funktion untersuchen, die bestimmt, ob eine gegebene Zahl eine Potenz von 2 ist. Indem wir den bitweisen binären UND-Operator verwenden und überprüfen, dass die Zahl nicht falsch ist, können wir genau bestimmen, ob eine Zahl eine Potenz von 2 ist. Dieses Lab bietet die Möglichkeit, die Verwendung von bitweisen Operatoren und logischen Operatoren in JavaScript zu üben.",
      "meta": {
        "title": "Bestimmen, ob eine Zahl eine Zweierpotenz ist",
        "description": "Entdecken Sie eine JavaScript-Funktion, um zu überprüfen, ob eine Zahl eine Zweierpotenz ist, indem Sie bitweise Operatoren verwenden.",
        "keywords": "bitweise Operatoren, JavaScript, JavaScript Übung, Online-JavaScript-Übung, Programmierung, JavaScript-Lab, Zweierpotenz, JavaScript-Tutor, Programmierung"
      },
      "details": {
        "steps": [
          {
            "title": "Zahl ist Zweierpotenz",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Überprüfen der Verwendung des Node-Befehls",
                "file": "verify1-1.sh",
                "hint": "JavaScript kann im Terminal/SSH ausgeführt werden, indem man 'node' eingibt und die Enter-Taste drückt."
              }
            ]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "2の累乗である数",
      "description": "この実験では、与えられた数が2の累乗であるかどうかを判定するJavaScript関数を調べます。ビット単位のバイナリAND演算子を使用し、数が偽でないことを確認することで、数が2の累乗であるかどうかを正確に判定できます。この実験は、JavaScriptでビット演算子と論理演算子を使用する練習の機会を提供します。",
      "meta": {
        "title": "数が2の累乗かどうかを判定する",
        "description": "ビット演算子を使用して、数が2の累乗かどうかを確認するJavaScript関数を調べます。",
        "keywords": "ビット演算子, JavaScript, JavaScriptの練習, オンラインでのJavaScriptの練習, コーディング, JavaScriptの実験, 2の累乗, JavaScriptのチューター, プログラミング"
      },
      "details": {
        "steps": [
          {
            "title": "2の累乗である数",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "Nodeコマンドの使用を確認する",
                "file": "verify1-1.sh",
                "hint": "ターミナル/SSHで 'node' と入力してEnterキーを押すことで、JavaScriptを実行できます。"
              }
            ]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Число является степенью двойки",
      "description": "В этом практическом занятии мы изучим функцию на JavaScript, которая определяет, является ли заданное число степенью 2. Используя побитовый оператор AND и проверяя, что число не ложно, мы можем точно определить, является ли число степенью 2. Это практическое занятие даст возможность потренироваться в использовании побитовых и логических операторов в JavaScript.",
      "meta": {
        "title": "Определить, является ли число степенью двойки",
        "description": "Изучите функцию на JavaScript для проверки, является ли число степенью 2, используя побитовые операторы.",
        "keywords": "побитовые операторы, javascript, практика javascript, онлайн практика javascript, программирование, практическое занятие javascript, степень двойки, преподаватель javascript, программирование"
      },
      "details": {
        "steps": [
          {
            "title": "Число является степенью двойки",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "Проверить использование команды Node",
                "file": "verify1-1.sh",
                "hint": "JavaScript можно запустить в Терминале/SSH, введя 'node' и нажав Enter."
              }
            ]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    }
  ]
}
