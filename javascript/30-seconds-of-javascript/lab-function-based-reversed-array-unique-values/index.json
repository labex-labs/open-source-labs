{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Reverse Unique Array Elements Using JavaScript",
  "description": "In this lab, we will explore how to use the uniqueElementsByRight() function in JavaScript to find the reversed unique values of an array based on a provided comparator function. We will learn how to use Array.prototype.reduceRight() and Array.prototype.some() methods to create an array containing only the last unique occurrence of each value based on the comparator function provided. By the end of this lab, you will have a better understanding of how to manipulate arrays in JavaScript using these methods.",
  "meta": {
    "title": "Unique Elements by Right | JavaScript Array Manipulation",
    "description": "Explore how to use the uniqueElementsByRight() function in JavaScript to find the reversed unique values of an array based on a provided comparator function.",
    "keywords": "JavaScript, Array, Unique Elements, Comparator Function, Array Manipulation"
  },
  "difficulty": "Beginner",
  "time": 5,
  "hidden": true,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Reversed Unique Values in Array Based on Function",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify Node Command History",
            "file": "verify1-1.sh",
            "hint": "JavaScript can be run in the Terminal/SSH by typing 'node' and pressing Enter.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "javascript/arith_ops",
          "javascript/comp_ops",
          "javascript/cond_stmts",
          "javascript/data_types",
          "javascript/obj_manip",
          "javascript/variables"
        ]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["Lotus-7"],
  "license": {
    "name": "CC-BY-4.0",
    "url": "https://github.com/30-seconds/30-seconds-of-code/blob/master/LICENSE",
    "repo": "https://github.com/30-seconds/30-seconds-of-code"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "使用 JavaScript 反转数组中的唯一元素",
      "description": "在本实验中，我们将探索如何使用 JavaScript 中的 uniqueElementsByRight() 函数，根据提供的比较函数来查找数组中反转后的唯一值。我们将学习如何使用 Array.prototype.reduceRight() 和 Array.prototype.some() 方法，根据提供的比较函数创建一个只包含每个值最后一次唯一出现的数组。在本实验结束时，你将更好地理解如何使用这些方法在 JavaScript 中操作数组。",
      "meta": {
        "title": "从右至左的唯一元素 | JavaScript 数组操作",
        "description": "探索如何使用 JavaScript 中的 uniqueElementsByRight() 函数，根据提供的比较函数来查找数组中反转后的唯一值。",
        "keywords": "JavaScript, 数组，唯一元素，比较函数，数组操作"
      },
      "details": {
        "steps": [
          {
            "title": "基于函数的数组中反转的唯一值",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "验证 Node 命令历史记录",
                "file": "verify1-1.sh",
                "hint": "通过在终端/SSH 中输入 'node' 并按 Enter 键，可以运行 JavaScript。"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Usar JavaScript para invertir elementos únicos de un array",
      "description": "En este laboratorio, exploraremos cómo usar la función uniqueElementsByRight() en JavaScript para encontrar los valores únicos invertidos de un array en función de una función comparadora proporcionada. Aprenderemos a usar los métodos Array.prototype.reduceRight() y Array.prototype.some() para crear un array que contenga solo la última aparición única de cada valor en función de la función comparadora proporcionada. Al final de este laboratorio, tendrás una mejor comprensión de cómo manipular arrays en JavaScript usando estos métodos.",
      "meta": {
        "title": "Elementos únicos por la derecha | Manipulación de arrays de JavaScript",
        "description": "Explora cómo usar la función uniqueElementsByRight() en JavaScript para encontrar los valores únicos invertidos de un array en función de una función comparadora proporcionada.",
        "keywords": "JavaScript, Array, Elementos únicos, Función comparadora, Manipulación de arrays"
      },
      "details": {
        "steps": [
          {
            "title": "Valores Únicos Invertidos en un Array Basados en una Función",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Verificar el historial de comandos de Node",
                "file": "verify1-1.sh",
                "hint": "JavaScript se puede ejecutar en la Terminal/SSH escribiendo 'node' y presionando Enter."
              }
            ]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Utiliser JavaScript pour inverser les éléments uniques d'un tableau",
      "description": "Dans ce laboratoire, nous allons explorer comment utiliser la fonction uniqueElementsByRight() en JavaScript pour trouver les valeurs uniques inversées d'un tableau en fonction d'une fonction de comparaison fournie. Nous allons apprendre à utiliser les méthodes Array.prototype.reduceRight() et Array.prototype.some() pour créer un tableau ne contenant que la dernière occurrence unique de chaque valeur en fonction de la fonction de comparaison fournie. À la fin de ce laboratoire, vous aurez une meilleure compréhension de la manière de manipuler les tableaux en JavaScript à l'aide de ces méthodes.",
      "meta": {
        "title": "Éléments uniques par la droite | Manipulation de tableaux JavaScript",
        "description": "Explorez comment utiliser la fonction uniqueElementsByRight() en JavaScript pour trouver les valeurs uniques inversées d'un tableau en fonction d'une fonction de comparaison fournie.",
        "keywords": "JavaScript, Tableau, Éléments uniques, Fonction de comparaison, Manipulation de tableaux"
      },
      "details": {
        "steps": [
          {
            "title": "Valeurs uniques inversées dans un tableau en fonction d'une fonction",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Vérifier l'historique de la commande Node",
                "file": "verify1-1.sh",
                "hint": "JavaScript peut être exécuté dans le Terminal/SSH en tapant 'node' et en appuyant sur Entrée."
              }
            ]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Reversierte einzigartige Array-Elemente mit JavaScript",
      "description": "In diesem Lab werden wir untersuchen, wie man die uniqueElementsByRight()-Funktion in JavaScript verwendet, um die umgekehrten eindeutigen Werte eines Arrays basierend auf einer bereitgestellten Vergleichsfunktion zu finden. Wir werden lernen, wie man die Methoden Array.prototype.reduceRight() und Array.prototype.some() verwendet, um ein Array zu erstellen, das nur das letzte eindeutige Vorkommen jedes Werts basierend auf der bereitgestellten Vergleichsfunktion enthält. Am Ende dieses Labs werden Sie ein besseres Verständnis dafür haben, wie man Arrays in JavaScript mit diesen Methoden manipuliert.",
      "meta": {
        "title": "Eindeutige Elemente von rechts | JavaScript-Array-Manipulation",
        "description": "Untersuchen Sie, wie man die uniqueElementsByRight()-Funktion in JavaScript verwendet, um die umgekehrten eindeutigen Werte eines Arrays basierend auf einer bereitgestellten Vergleichsfunktion zu finden.",
        "keywords": "JavaScript, Array, Eindeutige Elemente, Vergleichsfunktion, Array-Manipulation"
      },
      "details": {
        "steps": [
          {
            "title": "Reversierte eindeutige Werte in einem Array basierend auf einer Funktion",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Verifizieren Sie die Node-Befehlsgeschichte",
                "file": "verify1-1.sh",
                "hint": "JavaScript kann im Terminal/SSH ausgeführt werden, indem Sie 'node' eingeben und die Eingabetaste drücken."
              }
            ]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "JavaScript を使って配列要素を逆順に一意にする",
      "description": "この実験では、JavaScript の uniqueElementsByRight() 関数を使って、与えられた比較関数に基づいて配列の逆順の一意の値を見つける方法を探ります。与えられた比較関数に基づいて、各値の最後の一意の出現のみを含む配列を作成するために、Array.prototype.reduceRight() と Array.prototype.some() メソッドをどのように使うか学びます。この実験が終わるとき、これらのメソッドを使って JavaScript の配列を操作する方法をより深く理解しているでしょう。",
      "meta": {
        "title": "右から一意の要素 | JavaScript 配列操作",
        "description": "与えられた比較関数に基づいて、JavaScript の uniqueElementsByRight() 関数を使って配列の逆順の一意の値を見つける方法を探ります。",
        "keywords": "JavaScript, 配列，一意の要素，比較関数，配列操作"
      },
      "details": {
        "steps": [
          {
            "title": "関数に基づく配列内の逆順の一意の値",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "ノードコマンド履歴を確認する",
                "file": "verify1-1.sh",
                "hint": "ターミナル/SSH で'node'と入力して Enter キーを押すことで JavaScript を実行できます。"
              }
            ]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Получить уникальные элементы массива в обратном порядке с использованием JavaScript",
      "description": "В этом практическом занятии мы изучим, как использовать функцию uniqueElementsByRight() в JavaScript для нахождения обратных уникальных значений массива на основе предоставленной функции сравнения. Мы узнаем, как использовать методы Array.prototype.reduceRight() и Array.prototype.some() для создания массива, содержащего только последнее уникальное вхождение каждого значения на основе предоставленной функции сравнения. В конце этого практического занятия вы будете лучше понимать, как манипулировать массивами в JavaScript с использованием этих методов.",
      "meta": {
        "title": "Уникальные элементы справа | Обработка массивов в JavaScript",
        "description": "Изучите, как использовать функцию uniqueElementsByRight() в JavaScript для нахождения обратных уникальных значений массива на основе предоставленной функции сравнения.",
        "keywords": "JavaScript, Массив, Уникальные элементы, Функция сравнения, Обработка массивов"
      },
      "details": {
        "steps": [
          {
            "title": "Обратные уникальные значения в массиве на основе функции",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "Проверить историю команд Node",
                "file": "verify1-1.sh",
                "hint": "JavaScript можно запускать в Терминале/SSH, введя 'node' и нажав Enter."
              }
            ]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    },
    {
      "lang": "ko",
      "title": "JavaScript 를 사용하여 배열 요소의 역순 고유 값 찾기",
      "description": "이 랩에서는 JavaScript 에서 `uniqueElementsByRight()` 함수를 사용하여 제공된 비교 함수를 기반으로 배열의 역순 고유 값을 찾는 방법을 살펴봅니다. `Array.prototype.reduceRight()` 및 `Array.prototype.some()` 메서드를 사용하여 제공된 비교 함수를 기반으로 각 값의 마지막 고유 발생만 포함하는 배열을 만드는 방법을 배웁니다. 이 랩을 마치면 이러한 메서드를 사용하여 JavaScript 에서 배열을 조작하는 방법에 대한 이해도가 높아질 것입니다.",
      "meta": {
        "title": "역순 고유 요소 | JavaScript 배열 조작",
        "description": "JavaScript 에서 `uniqueElementsByRight()` 함수를 사용하여 제공된 비교 함수를 기반으로 배열의 역순 고유 값을 찾는 방법을 알아보세요.",
        "keywords": "JavaScript, 배열, 고유 요소, 비교 함수, 배열 조작, 자바스크립트 배열, 배열 처리, 배열 함수"
      },
      "details": {
        "steps": [
          {
            "title": "함수를 기반으로 한 배열의 역순 고유 값",
            "text": "ko/step1.md",
            "verify": [
              {
                "name": "Node 명령어 기록 확인",
                "file": "verify1-1.sh",
                "hint": "JavaScript 는 터미널/SSH 에서 'node'를 입력하고 Enter 키를 눌러 실행할 수 있습니다."
              }
            ]
          }
        ],
        "intro": {
          "text": "ko/intro.md",
          "title": "소개"
        },
        "finish": {
          "text": "ko/finish.md",
          "title": "요약"
        }
      }
    },
    {
      "lang": "pt",
      "title": "Elementos Únicos Invertidos de Array Usando JavaScript",
      "description": "Neste laboratório, exploraremos como usar a função uniqueElementsByRight() em JavaScript para encontrar os valores únicos invertidos de um array com base em uma função comparadora fornecida. Aprenderemos como usar os métodos Array.prototype.reduceRight() e Array.prototype.some() para criar um array contendo apenas a última ocorrência única de cada valor com base na função comparadora fornecida. Ao final deste laboratório, você terá uma melhor compreensão de como manipular arrays em JavaScript usando esses métodos.",
      "meta": {
        "title": "Elementos Únicos da Direita | Manipulação de Arrays em JavaScript",
        "description": "Explore como usar a função uniqueElementsByRight() em JavaScript para encontrar os valores únicos invertidos de um array com base em uma função comparadora fornecida. Aprenda a manipular arrays de forma eficiente.",
        "keywords": "JavaScript, Array, Elementos Únicos, Função Comparadora, Manipulação de Array, Array JavaScript, uniqueElementsByRight"
      },
      "details": {
        "steps": [
          {
            "title": "Valores Únicos Invertidos em Array com Base em Função",
            "text": "pt/step1.md",
            "verify": [
              {
                "name": "Verificar Histórico de Comandos Node",
                "file": "verify1-1.sh",
                "hint": "JavaScript pode ser executado no Terminal/SSH digitando 'node' e pressionando Enter."
              }
            ]
          }
        ],
        "intro": {
          "text": "pt/intro.md",
          "title": "Introdução"
        },
        "finish": {
          "text": "pt/finish.md",
          "title": "Resumo"
        }
      }
    }
  ]
}
