{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Partitioning Arrays with JavaScript Reduce",
  "description": "In this lab, we will explore how to partition an array based on a provided function using JavaScript. We will use the Array.prototype.reduce() method to accumulate the partitioned values into an array while checking for changes in the output of the provided function. By the end of this lab, you will have a solid understanding of how to partition arrays in JavaScript.",
  "meta": {
    "title": "Array Partitioning in JavaScript | Programming Tutorial",
    "description": "Explore how to partition an array based on a provided function using JavaScript. Learn to use Array.prototype.reduce() to create a partitioned array.",
    "keywords": "JavaScript, Array Partitioning, Array.prototype.reduce, Programming Tutorial"
  },
  "difficulty": "Beginner",
  "time": 10,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Partition Array",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify Node Command Usage",
            "file": "verify1-1.sh",
            "hint": "JavaScript can be run in the Terminal/SSH by typing 'node' and pressing Enter.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "javascript/arith_ops",
          "javascript/comp_ops",
          "javascript/cond_stmts",
          "javascript/data_types",
          "javascript/destr_assign",
          "javascript/higher_funcs",
          "javascript/variables"
        ]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["Lotus-7"],
  "license": {
    "name": "CC-BY-4.0",
    "url": "https://github.com/30-seconds/30-seconds-of-code/blob/master/LICENSE",
    "repo": "https://github.com/30-seconds/30-seconds-of-code"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "使用 JavaScript Reduce 对数组进行分区",
      "description": "在本实验中，我们将探索如何使用 JavaScript 根据提供的函数对数组进行分区。我们将使用 Array.prototype.reduce() 方法将分区后的值累积到一个数组中，同时检查提供的函数输出的变化。在本实验结束时，你将对如何在 JavaScript 中对数组进行分区有扎实的理解。",
      "meta": {
        "title": "JavaScript 中的数组分区 | 编程教程",
        "description": "探索如何使用 JavaScript 根据提供的函数对数组进行分区。学习使用 Array.prototype.reduce() 创建一个分区数组。",
        "keywords": "JavaScript, 数组分区，Array.prototype.reduce, 编程教程"
      },
      "details": {
        "steps": [
          {
            "title": "对数组进行分区",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "验证 Node 命令的用法",
                "file": "verify1-1.sh",
                "hint": "在终端/SSH 中，通过输入 'node' 并按下回车键可以运行 JavaScript。"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Particionamiento de arrays con JavaScript Reduce",
      "description": "En este laboratorio, exploraremos cómo particionar un array basado en una función proporcionada utilizando JavaScript. Utilizaremos el método Array.prototype.reduce() para acumular los valores particionados en un array mientras verificamos los cambios en la salida de la función proporcionada. Al final de este laboratorio, tendrás una comprensión sólida de cómo particionar arrays en JavaScript.",
      "meta": {
        "title": "Particionamiento de arrays en JavaScript | Tutorial de programación",
        "description": "Explora cómo particionar un array basado en una función proporcionada utilizando JavaScript. Aprende a utilizar Array.prototype.reduce() para crear un array particionado.",
        "keywords": "JavaScript, Particionamiento de arrays, Array.prototype.reduce, Tutorial de programación"
      },
      "details": {
        "steps": [
          {
            "title": "Particionar array",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Verificar el uso del comando Node",
                "file": "verify1-1.sh",
                "hint": "Se puede ejecutar JavaScript en la Terminal/SSH escribiendo 'node' y presionando Enter."
              }
            ]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Partitionnement de tableaux avec JavaScript Reduce",
      "description": "Dans ce laboratoire, nous allons explorer comment partitionner un tableau en utilisant une fonction fournie avec JavaScript. Nous utiliserons la méthode Array.prototype.reduce() pour accumuler les valeurs partitionnées dans un tableau tout en vérifiant les modifications de la sortie de la fonction fournie. À la fin de ce laboratoire, vous aurez une compréhension solide de la manière de partitionner des tableaux en JavaScript.",
      "meta": {
        "title": "Partitionnement de tableaux en JavaScript | Tutoriel de programmation",
        "description": "Explorez comment partitionner un tableau en utilisant une fonction fournie avec JavaScript. Apprenez à utiliser Array.prototype.reduce() pour créer un tableau partitionné.",
        "keywords": "JavaScript, Partitionnement de tableaux, Array.prototype.reduce, Tutoriel de programmation"
      },
      "details": {
        "steps": [
          {
            "title": "Partitionner un tableau",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Vérifier l'utilisation de la commande Node",
                "file": "verify1-1.sh",
                "hint": "JavaScript peut être exécuté dans le Terminal/SSH en tapant 'node' et en appuyant sur Entrée."
              }
            ]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Das Partitionieren von Arrays mit JavaScript Reduce",
      "description": "In diesem Lab werden wir untersuchen, wie man ein Array mithilfe von JavaScript basierend auf einer bereitgestellten Funktion aufteilt. Wir werden die Array.prototype.reduce()-Methode verwenden, um die aufgeteilten Werte in ein Array zu akkumulieren, während wir auf Änderungen in der Ausgabe der bereitgestellten Funktion prüfen. Am Ende dieses Labs werden Sie eine solide Vorstellung davon haben, wie man Arrays in JavaScript aufteilt.",
      "meta": {
        "title": "Array-Partitionierung in JavaScript | Programmier-Tutorial",
        "description": "Entdecken Sie, wie man ein Array basierend auf einer bereitgestellten Funktion mithilfe von JavaScript aufteilt. Lernen Sie, wie man die Array.prototype.reduce()-Methode verwendet, um ein partitioniertes Array zu erstellen.",
        "keywords": "JavaScript, Array-Partitionierung, Array.prototype.reduce, Programmier-Tutorial"
      },
      "details": {
        "steps": [
          {
            "title": "Array partitionieren",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Überprüfen der Verwendung des Node-Befehls",
                "file": "verify1-1.sh",
                "hint": "JavaScript kann im Terminal/SSH ausgeführt werden, indem man 'node' eingibt und die Eingabetaste drückt."
              }
            ]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "JavaScript の reduce を使った配列の分割",
      "description": "この実験では、JavaScript を使って、提供された関数に基づいて配列を分割する方法を探ります。提供された関数の出力の変化をチェックしながら、分割された値を配列に蓄積するために、Array.prototype.reduce() メソッドを使用します。この実験が終了するとき、JavaScript で配列を分割する方法を十分に理解していることになります。",
      "meta": {
        "title": "JavaScript における配列の分割 | プログラミングチュートリアル",
        "description": "JavaScript を使って、提供された関数に基づいて配列を分割する方法を探りましょう。分割された配列を作成するために、Array.prototype.reduce() を使う方法を学びましょう。",
        "keywords": "JavaScript, 配列の分割，Array.prototype.reduce, プログラミングチュートリアル"
      },
      "details": {
        "steps": [
          {
            "title": "配列を分割する",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "Node コマンドの使用を確認する",
                "file": "verify1-1.sh",
                "hint": "ターミナル/SSH で'node'と入力して Enter キーを押すことで、JavaScript を実行できます。"
              }
            ]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Разбиение массивов с использованием метода reduce в JavaScript",
      "description": "В этом практическом занятии мы изучим, как разбивать массив на части на основе заданной функции с использованием JavaScript. Мы будем использовать метод Array.prototype.reduce(), чтобы накапливать разделенные значения в массив, проверяя при этом изменения в выводе заданной функции. В конце этого практического занятия вы глубоко поняли, как разбивать массивы на части в JavaScript.",
      "meta": {
        "title": "Разбиение массивов в JavaScript | Руководство по программированию",
        "description": "Изучите, как разбивать массив на части на основе заданной функции с использованием JavaScript. Научитесь использовать Array.prototype.reduce() для создания разделенного массива.",
        "keywords": "JavaScript, Разбиение массивов, Array.prototype.reduce, Руководство по программированию"
      },
      "details": {
        "steps": [
          {
            "title": "Разбить массив на части",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "Проверить использование команды Node",
                "file": "verify1-1.sh",
                "hint": "JavaScript можно запустить в Терминале/SSH, введя 'node' и нажав Enter."
              }
            ]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    }
  ]
}
