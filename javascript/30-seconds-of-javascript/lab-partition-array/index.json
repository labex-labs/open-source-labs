{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Partitioning Arrays with JavaScript Reduce",
  "description": "In this lab, we will explore how to partition an array based on a provided function using JavaScript. We will use the Array.prototype.reduce() method to accumulate the partitioned values into an array while checking for changes in the output of the provided function. By the end of this lab, you will have a solid understanding of how to partition arrays in JavaScript.",
  "meta": {
    "title": "Array Partitioning in JavaScript | Programming Tutorial",
    "description": "Explore how to partition an array based on a provided function using JavaScript. Learn to use Array.prototype.reduce() to create a partitioned array.",
    "keywords": "JavaScript, Array Partitioning, Array.prototype.reduce, Programming Tutorial"
  },
  "difficulty": "Beginner",
  "time": 10,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Partition Array",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify Node Command Usage",
            "file": "verify1-1.sh",
            "hint": "JavaScript can be run in the Terminal/SSH by typing 'node' and pressing Enter.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "javascript/arith_ops",
          "javascript/comp_ops",
          "javascript/cond_stmts",
          "javascript/data_types",
          "javascript/destr_assign",
          "javascript/higher_funcs",
          "javascript/variables"
        ]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["Lotus-7"],
  "license": {
    "name": "CC-BY-4.0",
    "url": "https://github.com/30-seconds/30-seconds-of-code/blob/master/LICENSE",
    "repo": "https://github.com/30-seconds/30-seconds-of-code"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "使用 JavaScript Reduce 对数组进行分区",
      "description": "在本实验中，我们将探索如何使用 JavaScript 根据提供的函数对数组进行分区。我们将使用 Array.prototype.reduce() 方法将分区后的值累积到一个数组中，同时检查提供的函数输出的变化。在本实验结束时，你将对如何在 JavaScript 中对数组进行分区有扎实的理解。",
      "meta": {
        "title": "JavaScript 中的数组分区 | 编程教程",
        "description": "探索如何使用 JavaScript 根据提供的函数对数组进行分区。学习使用 Array.prototype.reduce() 创建一个分区数组。",
        "keywords": "JavaScript, 数组分区, Array.prototype.reduce, 编程教程"
      },
      "details": {
        "steps": [
          {
            "title": "对数组进行分区",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "验证 Node 命令的用法",
                "file": "verify1-1.sh",
                "hint": "在终端/SSH 中，通过输入 'node' 并按下回车键可以运行 JavaScript。"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    }
  ]
}
