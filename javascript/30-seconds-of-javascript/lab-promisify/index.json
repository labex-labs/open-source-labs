{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Asynchronous Functions to Promises",
  "description": "In this lab, we will learn how to convert an asynchronous function to return a promise using the promisify function. This will allow us to write cleaner and more readable code by avoiding callback functions. We will also explore the use of currying and the rest operator in JavaScript.",
  "meta": {
    "title": "JavaScript Promisify Function | Asynchronous Programming",
    "description": "Learn how to convert asynchronous functions to return promises using the promisify function, and explore JavaScript features like currying and the rest operator.",
    "keywords": "JavaScript, Promisify, Asynchronous Programming, Currying, Rest Operator"
  },
  "difficulty": "Beginner",
  "time": 10,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Promisify Function",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify Node Command Usage",
            "file": "verify1-1.sh",
            "hint": "JavaScript can be run in the Terminal/SSH by typing 'node' and pressing Enter.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "javascript/arith_ops",
          "javascript/async_prog",
          "javascript/comp_ops",
          "javascript/data_types",
          "javascript/debugging",
          "javascript/spread_rest",
          "javascript/variables"
        ]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["Lotus-7"],
  "license": {
    "name": "CC-BY-4.0",
    "url": "https://github.com/30-seconds/30-seconds-of-code/blob/master/LICENSE",
    "repo": "https://github.com/30-seconds/30-seconds-of-code"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "将异步函数转换为 Promise",
      "description": "在本实验中，我们将学习如何使用promisify函数将异步函数转换为返回Promise。通过避免使用回调函数，这将使我们能够编写更简洁、更易读的代码。我们还将探讨JavaScript中柯里化和剩余参数运算符的使用。",
      "meta": {
        "title": "JavaScript的Promisify函数 | 异步编程",
        "description": "学习如何使用promisify函数将异步函数转换为返回Promise，并探索诸如柯里化和剩余参数运算符等JavaScript特性。",
        "keywords": "JavaScript, Promisify, 异步编程, 柯里化, 剩余参数运算符"
      },
      "details": {
        "steps": [
          {
            "title": "将异步函数转换为Promise的函数",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "验证Node命令的用法",
                "file": "verify1-1.sh",
                "hint": "在终端/SSH中，通过输入'node'并按下回车键可以运行JavaScript。"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    }
  ]
}
