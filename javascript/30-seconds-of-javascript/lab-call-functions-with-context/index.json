{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Call Functions with Context",
  "description": "In this lab, we will explore how to call functions with context using a closure in JavaScript. We will learn how to pass a key and a set of arguments to a function, and then call it with the given context. Through practical examples, we will see how this technique can be used to simplify code and make it more readable.",
  "meta": {
    "title": "Call Functions with Context in JavaScript",
    "description": "Learn how to call functions with context using closures in JavaScript, simplifying code and improving readability.",
    "keywords": "javascript, function call, context, javascript practice, javascript practice online, coding, javascript lab, closure, javascript tutor"
  },
  "difficulty": "Beginner",
  "time": 5,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Call Functions with Context",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify Node Commands In ZSH History",
            "file": "verify1-1.sh",
            "hint": "JavaScript can be run in the Terminal/SSH by typing 'node' and pressing Enter.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": []
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["Lotus-7"],
  "license": {
    "name": "CC-BY-4.0",
    "url": "https://github.com/30-seconds/30-seconds-of-code/blob/master/LICENSE",
    "repo": "https://github.com/30-seconds/30-seconds-of-code"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "使用上下文调用函数",
      "description": "在本实验中，我们将探索如何在 JavaScript 中使用闭包来调用带上下文的函数。我们将学习如何将一个键和一组参数传递给一个函数，然后在给定的上下文环境中调用它。通过实际示例，我们将看到如何使用此技术来简化代码并使其更具可读性。",
      "meta": {
        "title": "在 JavaScript 中使用上下文调用函数",
        "description": "学习如何在 JavaScript 中使用闭包来调用带上下文的函数，简化代码并提高可读性。",
        "keywords": "JavaScript, 函数调用，上下文，JavaScript 实践，在线 JavaScript 实践，编码，JavaScript 实验，闭包，JavaScript 教程"
      },
      "details": {
        "steps": [
          {
            "title": "使用上下文调用函数",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "在 ZSH 历史记录中验证 Node 命令",
                "file": "verify1-1.sh",
                "hint": "通过输入'node'并按 Enter 键，可以在终端/SSH 中运行 JavaScript。"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Llamar a funciones con contexto",
      "description": "En este laboratorio, exploraremos cómo llamar a funciones con contexto utilizando una clausura en JavaScript. Aprenderemos cómo pasar una clave y un conjunto de argumentos a una función, y luego llamarla con el contexto dado. A través de ejemplos prácticos, veremos cómo esta técnica se puede utilizar para simplificar el código y hacerlo más legible.",
      "meta": {
        "title": "Llamar a funciones con contexto en JavaScript",
        "description": "Aprende cómo llamar a funciones con contexto utilizando clausuras en JavaScript, simplificando el código y mejorando la legibilidad.",
        "keywords": "javascript, llamada de función, contexto, práctica de javascript, práctica de javascript en línea, codificación, laboratorio de javascript, clausura, tutor de javascript"
      },
      "details": {
        "steps": [
          {
            "title": "Llamar a funciones con contexto",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Verificar comandos de Node en el historial de ZSH",
                "file": "verify1-1.sh",
                "hint": "JavaScript se puede ejecutar en la Terminal/SSH escribiendo 'node' y presionando Enter."
              }
            ]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Appeler des fonctions avec un contexte",
      "description": "Dans ce laboratoire, nous allons explorer comment appeler des fonctions avec un contexte à l'aide d'une fermeture en JavaScript. Nous allons apprendre comment passer une clé et un ensemble d'arguments à une fonction, puis l'appeler avec le contexte donné. Par des exemples pratiques, nous verrons comment cette technique peut être utilisée pour simplifier le code et le rendre plus lisible.",
      "meta": {
        "title": "Appeler des fonctions avec un contexte en JavaScript",
        "description": "Apprenez à appeler des fonctions avec un contexte à l'aide de fermetures en JavaScript, simplifiant le code et améliorant la lisibilité.",
        "keywords": "javascript, appel de fonction, contexte, pratique javascript, pratique javascript en ligne, codage, laboratoire javascript, fermeture, tuteur javascript"
      },
      "details": {
        "steps": [
          {
            "title": "Appeler des fonctions avec un contexte",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Vérifier les commandes Node dans l'historique ZSH",
                "file": "verify1-1.sh",
                "hint": "JavaScript peut être exécuté dans le Terminal/SSH en tapant 'node' et en appuyant sur Entrée."
              }
            ]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Funktionen mit Kontext aufrufen",
      "description": "In diesem Lab werden wir untersuchen, wie man in JavaScript mithilfe einer Closure Funktionen mit einem Kontext aufruft. Wir werden lernen, wie man einen Schlüssel und eine Menge von Argumenten an eine Funktion übergibt und dann mit dem angegebenen Kontext aufruft. Anhand von praktischen Beispielen werden wir sehen, wie diese Technik verwendet werden kann, um den Code zu vereinfachen und lesbarer zu machen.",
      "meta": {
        "title": "Funktionen mit Kontext in JavaScript aufrufen",
        "description": "Lernen Sie, wie man in JavaScript mithilfe von Closures Funktionen mit einem Kontext aufruft, um den Code zu vereinfachen und die Lesbarkeit zu verbessern.",
        "keywords": "javascript, Funktionsaufruf, Kontext, JavaScript Übung, Online-JavaScript-Übung, Programmieren, JavaScript-Lab, Closure, JavaScript-Tutor"
      },
      "details": {
        "steps": [
          {
            "title": "Funktionen mit Kontext aufrufen",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Überprüfen von Node-Befehlen in der ZSH-Geschichte",
                "file": "verify1-1.sh",
                "hint": "JavaScript kann im Terminal/SSH ausgeführt werden, indem man 'node' eingibt und die Enter-Taste drückt."
              }
            ]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "コンテキスト付きで関数を呼び出す",
      "description": "この実験では、JavaScript でクロージャを使ってコンテキスト付きで関数を呼び出す方法を探ります。キーと一連の引数を関数に渡し、与えられたコンテキストでそれを呼び出す方法を学びます。実際の例を通じて、この技術がコードを簡略化し、読みやすくするためにどのように使われるかを見ていきます。",
      "meta": {
        "title": "JavaScript でコンテキスト付きで関数を呼び出す",
        "description": "JavaScript でクロージャを使ってコンテキスト付きで関数を呼び出す方法を学び、コードを簡略化して読みやすさを向上させましょう。",
        "keywords": "javascript, 関数呼び出し，コンテキスト，javascript 練習，オンライン javascript 練習，コーディング，javascript 実験，クロージャ，javascript チューター"
      },
      "details": {
        "steps": [
          {
            "title": "コンテキスト付きで関数を呼び出す",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "ZSH 履歴における Node コマンドを確認する",
                "file": "verify1-1.sh",
                "hint": "ターミナル/SSH で 'node' と入力して Enter キーを押すことで JavaScript を実行できます。"
              }
            ]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Вызов функций с контекстом",
      "description": "В этом практическом занятии мы изучим, как вызывать функции с контекстом с использованием замыкания в JavaScript. Мы узнаем, как передавать ключ и набор аргументов в функцию, а затем вызывать ее с заданным контекстом. С помощью практических примеров мы увидим, как эта техника может быть использована для упрощения кода и повышения его читаемости.",
      "meta": {
        "title": "Вызов функций с контекстом в JavaScript",
        "description": "Изучите, как вызывать функции с контекстом с использованием замыканий в JavaScript, упрощая код и улучшая читаемость.",
        "keywords": "javascript, вызов функции, контекст, практика javascript, онлайн практика javascript, программирование, практическое занятие javascript, замыкание, преподаватель javascript"
      },
      "details": {
        "steps": [
          {
            "title": "Вызов функций с контекстом",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "Проверить команды Node в истории ZSH",
                "file": "verify1-1.sh",
                "hint": "JavaScript можно запустить в Терминале/SSH, введя 'node' и нажав Enter."
              }
            ]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    },
    {
      "lang": "ko",
      "title": "컨텍스트와 함께 함수 호출",
      "description": "이 랩에서는 JavaScript 에서 클로저를 사용하여 컨텍스트와 함께 함수를 호출하는 방법을 살펴봅니다. 함수에 키와 일련의 인수를 전달한 다음, 주어진 컨텍스트로 호출하는 방법을 배웁니다. 실용적인 예제를 통해 이 기술이 코드를 단순화하고 가독성을 높이는 데 어떻게 사용될 수 있는지 확인할 것입니다.",
      "meta": {
        "title": "JavaScript 에서 컨텍스트와 함께 함수 호출하는 방법",
        "description": "JavaScript 에서 클로저를 사용하여 컨텍스트와 함께 함수를 호출하는 방법을 배우고, 코드를 단순화하고 가독성을 향상시키세요.",
        "keywords": "javascript, 함수 호출, 컨텍스트, javascript 연습, javascript 온라인 연습, 코딩, javascript 랩, 클로저, javascript 튜터"
      },
      "details": {
        "steps": [
          {
            "title": "컨텍스트와 함께 함수 호출",
            "text": "ko/step1.md",
            "verify": [
              {
                "name": "ZSH 히스토리에서 Node 명령어 확인",
                "file": "verify1-1.sh",
                "hint": "'node'를 입력하고 Enter 키를 눌러 터미널/SSH 에서 JavaScript 를 실행할 수 있습니다."
              }
            ]
          }
        ],
        "intro": {
          "text": "ko/intro.md",
          "title": "소개"
        },
        "finish": {
          "text": "ko/finish.md",
          "title": "요약"
        }
      }
    },
    {
      "lang": "pt",
      "title": "Chamar Funções com Contexto",
      "description": "Neste laboratório, exploraremos como chamar funções com contexto usando uma *closure* em JavaScript. Aprenderemos como passar uma chave e um conjunto de argumentos para uma função e, em seguida, chamá-la com o contexto fornecido. Através de exemplos práticos, veremos como essa técnica pode ser usada para simplificar o código e torná-lo mais legível.",
      "meta": {
        "title": "Chamar Funções com Contexto em JavaScript: Guia Prático",
        "description": "Aprenda a chamar funções com contexto usando *closures* em JavaScript, simplificando o código e melhorando a legibilidade. Exercícios práticos e exemplos.",
        "keywords": "javascript, chamada de função, contexto, prática javascript, exercícios javascript, programação, laboratório javascript, *closure*, tutorial javascript"
      },
      "details": {
        "steps": [
          {
            "title": "Chamar Funções com Contexto",
            "text": "pt/step1.md",
            "verify": [
              {
                "name": "Verificar Comandos Node no Histórico ZSH",
                "file": "verify1-1.sh",
                "hint": "JavaScript pode ser executado no Terminal/SSH digitando 'node' e pressionando Enter."
              }
            ]
          }
        ],
        "intro": {
          "text": "pt/intro.md",
          "title": "Introdução"
        },
        "finish": {
          "text": "pt/finish.md",
          "title": "Resumo"
        }
      }
    }
  ]
}
