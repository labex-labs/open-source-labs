{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Calculating Days Ago with JavaScript",
  "description": "In this lab, we will dive into JavaScript programming and create a function called daysAgo. This function takes a number as input and calculates the date that is n days ago from today. We will use the Date constructor, along with various methods such as Math.abs() and Date.prototype.setDate(), to accomplish this task and return the result as a string in yyyy-mm-dd format. By the end of this lab, you will have gained a deeper understanding of working with dates in JavaScript.",
  "meta": {
    "title": "JavaScript Programming | Date Calculation | Days Ago",
    "description": "Learn how to create a JavaScript function that calculates the date n days ago from today in a user-friendly format.",
    "keywords": "JavaScript, Programming, Date Calculation, Days Ago, Time Manipulation"
  },
  "difficulty": "Beginner",
  "time": 5,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Days Ago",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify Node Usage In ZSH History",
            "file": "verify1-1.sh",
            "hint": "JavaScript can be run in the Terminal/SSH by typing 'node' and pressing Enter.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "javascript/arith_ops",
          "javascript/comp_ops",
          "javascript/cond_stmts",
          "javascript/data_types",
          "javascript/variables"
        ]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["Lotus-7"],
  "license": {
    "name": "CC-BY-4.0",
    "url": "https://github.com/30-seconds/30-seconds-of-code/blob/master/LICENSE",
    "repo": "https://github.com/30-seconds/30-seconds-of-code"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "使用 JavaScript 计算过去的日期",
      "description": "在本实验中，我们将深入学习 JavaScript 编程，并创建一个名为 daysAgo 的函数。该函数接受一个数字作为输入，并计算从今天起 n 天前的日期。我们将使用 Date 构造函数以及各种方法，如 Math.abs() 和 Date.prototype.setDate()，来完成此任务，并以 yyyy-mm-dd 格式的字符串返回结果。在本实验结束时，你将对在 JavaScript 中处理日期有更深入的理解。",
      "meta": {
        "title": "JavaScript 编程 | 日期计算 | 过去的日期",
        "description": "学习如何创建一个 JavaScript 函数，以用户友好的格式计算从今天起 n 天前的日期。",
        "keywords": "JavaScript, 编程，日期计算，过去的日期，时间操作"
      },
      "details": {
        "steps": [
          {
            "title": "过去的日期",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "验证 ZSH 历史记录中 Node 的使用情况",
                "file": "verify1-1.sh",
                "hint": "在终端/SSH 中，可以通过输入 'node' 并按回车键来运行 JavaScript。"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Calcular días atrás con JavaScript",
      "description": "En este laboratorio, profundizaremos en la programación de JavaScript y crearemos una función llamada daysAgo. Esta función toma un número como entrada y calcula la fecha que fue hace n días a partir de hoy. Utilizaremos el constructor Date, junto con varios métodos como Math.abs() y Date.prototype.setDate(), para completar esta tarea y devolver el resultado como una cadena en el formato yyyy-mm-dd. Al final de este laboratorio, habrás adquirido una comprensión más profunda del trabajo con fechas en JavaScript.",
      "meta": {
        "title": "Programación de JavaScript | Cálculo de fechas | Días atrás",
        "description": "Aprende a crear una función de JavaScript que calcula la fecha hace n días a partir de hoy en un formato amigable para el usuario.",
        "keywords": "JavaScript, Programación, Cálculo de fechas, Días atrás, Manipulación del tiempo"
      },
      "details": {
        "steps": [
          {
            "title": "Días atrás",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Verificar el uso de Node en el historial de ZSH",
                "file": "verify1-1.sh",
                "hint": "JavaScript se puede ejecutar en la Terminal/SSH escribiendo 'node' y presionando Enter."
              }
            ]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Calculer le nombre de jours auparavant avec JavaScript",
      "description": "Dans ce laboratoire, nous allons plonger dans la programmation JavaScript et créer une fonction appelée daysAgo. Cette fonction prend un nombre en entrée et calcule la date qui est il y a n jours à partir d'aujourd'hui. Nous utiliserons le constructeur Date, ainsi que diverses méthodes telles que Math.abs() et Date.prototype.setDate(), pour accomplir cette tâche et renvoyer le résultat sous forme de chaîne de caractères au format yyyy - mm - dd. À la fin de ce laboratoire, vous aurez une compréhension plus approfondie du travail avec les dates en JavaScript.",
      "meta": {
        "title": "Programmation JavaScript | Calcul de dates | Nombre de jours auparavant",
        "description": "Découvrez comment créer une fonction JavaScript qui calcule la date il y a n jours à partir d'aujourd'hui dans un format convivial.",
        "keywords": "JavaScript, Programmation, Calcul de dates, Nombre de jours auparavant, Manipulation du temps"
      },
      "details": {
        "steps": [
          {
            "title": "Nombre de jours auparavant",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Vérifier l'utilisation de Node dans l'historique ZSH",
                "file": "verify1-1.sh",
                "hint": "JavaScript peut être exécuté dans le Terminal/SSH en tapant 'node' et en appuyant sur Entrée."
              }
            ]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Das Berechnen von Tagen zurück mit JavaScript",
      "description": "In diesem Lab werden wir uns in die JavaScript-Programmierung stürzen und eine Funktion namens daysAgo erstellen. Diese Funktion nimmt eine Zahl als Eingabe entgegen und berechnet das Datum, das n Tage zurück von heute liegt. Wir werden den Date-Konstruktor zusammen mit verschiedenen Methoden wie Math.abs() und Date.prototype.setDate() verwenden, um diese Aufgabe zu erfüllen und das Ergebnis als Zeichenfolge im Format yyyy-mm-dd zurückzugeben. Am Ende dieses Labs werden Sie ein tieferes Verständnis für die Arbeit mit Daten in JavaScript gewonnen haben.",
      "meta": {
        "title": "JavaScript-Programmierung | Datumsberechnung | Tage zurück",
        "description": "Lernen Sie, wie Sie eine JavaScript-Funktion erstellen, die das Datum n Tage zurück von heute in einem benutzerfreundlichen Format berechnet.",
        "keywords": "JavaScript, Programmierung, Datumsberechnung, Tage zurück, Zeitmanipulation"
      },
      "details": {
        "steps": [
          {
            "title": "Tage zurück",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Überprüfen der Verwendung von Node in der ZSH-Historie",
                "file": "verify1-1.sh",
                "hint": "JavaScript kann im Terminal/SSH ausgeführt werden, indem man 'node' eingibt und die Eingabetaste drückt."
              }
            ]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "JavaScript を使った何日間前の日付の計算",
      "description": "この実験では、JavaScript プログラミングに入り、daysAgo と呼ばれる関数を作成します。この関数は数値を入力として受け取り、今日から n 日前の日付を計算します。Date コンストラクタと Math.abs()、Date.prototype.setDate() などのさまざまなメソッドを使用して、このタスクを達成し、結果を yyyy-mm-dd 形式の文字列として返します。この実験が終了するとき、JavaScript で日付を扱うことに関するより深い理解を得ることができます。",
      "meta": {
        "title": "JavaScript プログラミング | 日付の計算 | 何日間前",
        "description": "今日から n 日前の日付を計算する JavaScript 関数を、ユーザーフレンドリーな形式で作成する方法を学びましょう。",
        "keywords": "JavaScript, プログラミング，日付の計算，何日間前，時間操作"
      },
      "details": {
        "steps": [
          {
            "title": "何日間前",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "ZSH 履歴における Node の使用を確認する",
                "file": "verify1-1.sh",
                "hint": "ターミナル/SSH で'node'と入力して Enter キーを押すことで、JavaScript を実行できます。"
              }
            ]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Вычисление числа дней назад с использованием JavaScript",
      "description": "В этом практическом занятии мы углубимся в программирование на JavaScript и создадим функцию под названием daysAgo. Эта функция принимает число в качестве входных данных и вычисляет дату, которая была n дней назад от сегодняшней. Мы будем использовать конструктор Date, а также различные методы, такие как Math.abs() и Date.prototype.setDate(), чтобы выполнить эту задачу и вернуть результат в виде строки в формате yyyy-mm-dd. В конце этого практического занятия вы получите более глубокое понимание работы с датами в JavaScript.",
      "meta": {
        "title": "Программирование на JavaScript | Вычисление дат | Число дней назад",
        "description": "Изучите, как создать функцию на JavaScript, которая вычисляет дату, которая была n дней назад от сегодняшней, в удобочитаемом формате.",
        "keywords": "JavaScript, Программирование, Вычисление дат, Число дней назад, Обработка времени"
      },
      "details": {
        "steps": [
          {
            "title": "Дни назад",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "Проверить использование Node в истории ZSH",
                "file": "verify1-1.sh",
                "hint": "JavaScript можно запускать в Терминале/SSH, введя 'node' и нажав Enter."
              }
            ]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    }
  ]
}
