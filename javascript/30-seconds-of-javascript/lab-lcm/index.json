{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Calculate Least Common Multiple Using JavaScript",
  "description": "In this lab, we will explore how to calculate the least common multiple of two or more numbers using JavaScript. We will use the greatest common divisor (GCD) formula and the fact that lcm(x, y) = x * y / gcd(x, y) to determine the least common multiple. The GCD formula uses recursion, which we will implement in our code.",
  "meta": {
    "title": "Least Common Multiple Calculation | JavaScript Programming",
    "description": "Learn how to calculate the least common multiple of two or more numbers using JavaScript. Explore the GCD formula and implement the code to determine the LCM.",
    "keywords": "least common multiple, JavaScript, programming, GCD, recursion"
  },
  "difficulty": "Beginner",
  "time": 10,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Least Common Multiple",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify Node Commands In Zsh History",
            "file": "verify1-1.sh",
            "hint": "JavaScript can be run in the Terminal/SSH by typing 'node' and pressing Enter.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "javascript/arith_ops",
          "javascript/comp_ops",
          "javascript/data_types",
          "javascript/higher_funcs",
          "javascript/spread_rest",
          "javascript/variables"
        ]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["Lotus-7"],
  "license": {
    "name": "CC-BY-4.0",
    "url": "https://github.com/30-seconds/30-seconds-of-code/blob/master/LICENSE",
    "repo": "https://github.com/30-seconds/30-seconds-of-code"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "使用JavaScript计算最小公倍数",
      "description": "在本实验中，我们将探索如何使用JavaScript计算两个或多个数字的最小公倍数。我们将使用最大公约数（GCD）公式以及lcm(x, y) = x * y / gcd(x, y)这一事实来确定最小公倍数。GCD公式使用递归，我们将在代码中实现它。",
      "meta": {
        "title": "最小公倍数计算 | JavaScript编程",
        "description": "学习如何使用JavaScript计算两个或多个数字的最小公倍数。探索GCD公式并实现代码以确定LCM。",
        "keywords": "最小公倍数, JavaScript, 编程, GCD, 递归"
      },
      "details": {
        "steps": [
          {
            "title": "最小公倍数",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "在Zsh历史记录中验证Node命令",
                "file": "verify1-1.sh",
                "hint": "通过在终端/SSH中输入'node'并按回车键，可以运行JavaScript。"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    }
  ]
}
