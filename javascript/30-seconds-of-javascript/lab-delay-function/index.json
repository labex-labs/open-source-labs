{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Delay Function Execution",
  "description": "In this lab, we will be exploring the delay() function which allows us to delay the execution of a given function by a specified number of milliseconds. This function is useful in scenarios where we need to add a pause in our code execution, for example, when working with animations or performing time-sensitive tasks. Through this lab, we will learn how to use the delay() function effectively in our JavaScript code.",
  "meta": {
    "title": "Delay Function Execution in JavaScript",
    "description": "Learn how to use the delay() function to pause code execution in JavaScript, perfect for animations and time-sensitive tasks.",
    "keywords": "javascript, javascript practice, settimeout, delay, javascript practice online, execution, javascript lab, function, javascript tutor"
  },
  "difficulty": "Beginner",
  "time": 10,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Delay Function Execution",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify Node Commands Executed",
            "file": "verify1-1.sh",
            "hint": "JavaScript can be run in the Terminal/SSH by typing 'node' and pressing Enter.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "javascript/arith_ops",
          "javascript/async_prog",
          "javascript/closures",
          "javascript/comp_ops",
          "javascript/data_types",
          "javascript/debugging",
          "javascript/functions",
          "javascript/spread_rest",
          "javascript/variables"
        ]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["Lotus-7"],
  "license": {
    "name": "CC-BY-4.0",
    "url": "https://github.com/30-seconds/30-seconds-of-code/blob/master/LICENSE",
    "repo": "https://github.com/30-seconds/30-seconds-of-code"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "延迟函数执行",
      "description": "在本实验中，我们将探索 `delay()` 函数，它能让我们将给定函数的执行延迟指定的毫秒数。在需要在代码执行中添加暂停的场景下，此函数很有用，例如在处理动画或执行对时间敏感的任务时。通过本实验，我们将学习如何在 JavaScript 代码中有效地使用 `delay()` 函数。",
      "meta": {
        "title": "JavaScript 中的延迟函数执行",
        "description": "学习如何使用 `delay()` 函数在 JavaScript 中暂停代码执行，这对于动画和对时间敏感的任务非常适用。",
        "keywords": "JavaScript, JavaScript 练习, setTimeout, 延迟, 在线 JavaScript 练习, 执行, JavaScript 实验, 函数, JavaScript 教程"
      },
      "details": {
        "steps": [
          {
            "title": "延迟函数执行",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "验证已执行的 Node 命令",
                "file": "verify1-1.sh",
                "hint": "通过在终端/SSH 中输入 'node' 并按回车键，可以运行 JavaScript。"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Retrasar la ejecución de la función",
      "description": "En este laboratorio, exploraremos la función delay() que nos permite retrasar la ejecución de una función dada por un número especificado de milisegundos. Esta función es útil en casos donde necesitamos agregar una pausa en la ejecución de nuestro código, por ejemplo, cuando trabajamos con animaciones o realizamos tareas sensibles al tiempo. A través de este laboratorio, aprenderemos a usar efectivamente la función delay() en nuestro código JavaScript.",
      "meta": {
        "title": "Retrasar la ejecución de la función en JavaScript",
        "description": "Aprende cómo usar la función delay() para pausar la ejecución del código en JavaScript, ideal para animaciones y tareas sensibles al tiempo.",
        "keywords": "javascript, práctica de javascript, settimeout, retraso, práctica de javascript en línea, ejecución, laboratorio de javascript, función, tutor de javascript"
      },
      "details": {
        "steps": [
          {
            "title": "Retrasar la ejecución de la función",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Verificar que se ejecutaron los comandos de Node",
                "file": "verify1-1.sh",
                "hint": "Se puede ejecutar JavaScript en la Terminal/SSH escribiendo 'node' y presionando Enter."
              }
            ]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Retard de l'exécution d'une fonction",
      "description": "Dans ce laboratoire, nous allons explorer la fonction delay() qui nous permet de retarder l'exécution d'une fonction donnée d'un nombre spécifié de millisecondes. Cette fonction est utile dans des scénarios où nous devons ajouter une pause dans l'exécution de notre code, par exemple, lorsqu'il s'agit d'animer ou de réaliser des tâches sensibles au temps. Grâce à ce laboratoire, nous apprendrons à utiliser efficacement la fonction delay() dans notre code JavaScript.",
      "meta": {
        "title": "Retard de l'exécution d'une fonction en JavaScript",
        "description": "Apprenez à utiliser la fonction delay() pour mettre en pause l'exécution du code en JavaScript, parfait pour les animations et les tâches sensibles au temps.",
        "keywords": "javascript, pratique javascript, settimeout, retard, pratique javascript en ligne, exécution, laboratoire javascript, fonction, tuteur javascript"
      },
      "details": {
        "steps": [
          {
            "title": "Retard de l'exécution d'une fonction",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Vérifier que les commandes Node ont été exécutées",
                "file": "verify1-1.sh",
                "hint": "JavaScript peut être exécuté dans le Terminal/SSH en tapant 'node' et en appuyant sur Entrée."
              }
            ]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Verzögere die Funktionsausführung",
      "description": "In diesem Lab werden wir die delay()-Funktion untersuchen, die es uns ermöglicht, die Ausführung einer bestimmten Funktion um eine bestimmte Anzahl von Millisekunden zu verzögern. Diese Funktion ist in Situationen nützlich, in denen wir eine Pause in der Codeausführung hinzufügen müssen, beispielsweise bei der Arbeit mit Animationen oder der Ausführung zeitkritischer Aufgaben. Durch dieses Lab lernen wir, wie wir die delay()-Funktion effektiv in unserem JavaScript-Code verwenden.",
      "meta": {
        "title": "Verzögere die Funktionsausführung in JavaScript",
        "description": "Lernen Sie, wie Sie die delay()-Funktion verwenden, um die Codeausführung in JavaScript zu pausieren, ideal für Animationen und zeitkritische Aufgaben.",
        "keywords": "javascript, javascript Übung, settimeout, verzögern, online javascript Übung, Ausführung, javascript Lab, funktion, javascript Tutor"
      },
      "details": {
        "steps": [
          {
            "title": "Verzögere die Funktionsausführung",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Verifiziere, dass die Node-Befehle ausgeführt wurden",
                "file": "verify1-1.sh",
                "hint": "JavaScript kann im Terminal/SSH ausgeführt werden, indem man 'node' eingibt und die Enter-Taste drückt."
              }
            ]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "関数の実行を遅らせる",
      "description": "この実験では、指定されたミリ秒数だけ関数の実行を遅らせることができる `delay()` 関数を調べます。この関数は、コードの実行に一時停止を追加する必要があるシナリオで役立ちます。たとえば、アニメーションを扱っている場合や、タイムセンシティブなタスクを実行している場合です。この実験を通じて、JavaScript コードで `delay()` 関数を効果的に使用する方法を学びます。",
      "meta": {
        "title": "JavaScript で関数の実行を遅らせる",
        "description": "JavaScript で `delay()` 関数を使ってコードの実行を一時停止する方法を学びましょう。アニメーションやタイムセンシティブなタスクに最適。",
        "keywords": "javascript, javascript 練習, settimeout, 遅延, オンライン javascript 練習, 実行, javascript 実験, 関数, javascript チューター"
      },
      "details": {
        "steps": [
          {
            "title": "関数の実行を遅らせる",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "Node コマンドの実行を確認する",
                "file": "verify1-1.sh",
                "hint": "ターミナル/SSH で 'node' と入力して Enter キーを押すことで、JavaScript を実行できます。"
              }
            ]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Задержка выполнения функции",
      "description": "В этом лабораторном задании мы будем изучать функцию delay(), которая позволяет задерживать выполнение заданной функции на указанное количество миллисекунд. Эта функция полезна в ситуациях, когда необходимо добавить паузу в выполнении кода, например, при работе с анимациями или выполнении временизависимых задач. С помощью этого лабораторного задания мы научимся эффективно использовать функцию delay() в нашем коде на JavaScript.",
      "meta": {
        "title": "Задержка выполнения функции в JavaScript",
        "description": "Изучите, как использовать функцию delay() для приостановки выполнения кода в JavaScript, идеально подходит для анимаций и временизависимых задач.",
        "keywords": "javascript, практика javascript, settimeout, задержка, онлайн практика javascript, выполнение, лабораторная работа javascript, функция, преподаватель javascript"
      },
      "details": {
        "steps": [
          {
            "title": "Задержка выполнения функции",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "Проверить выполнение команд Node",
                "file": "verify1-1.sh",
                "hint": "JavaScript можно запустить в Терминале/SSH, введя 'node' и нажав Enter."
              }
            ]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    }
  ]
}
