{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Array Similarity Algorithm Exploration",
  "description": "In this lab, we will explore the Array Similarity algorithm, which is used to find common elements between two arrays. Through this lab, you will learn how to use built-in JavaScript methods like Array.prototype.includes() and Array.prototype.filter() to compare arrays and extract their common elements. This algorithm is a useful tool for developers when working with large datasets and analyzing data.",
  "meta": {
    "title": "Array Similarity | JavaScript Algorithms",
    "description": "Learn how to use JavaScript methods like Array.includes() and Array.filter() to find common elements between two arrays. Useful for working with large datasets.",
    "keywords": "array similarity, javascript algorithms, array methods, array includes, array filter"
  },
  "difficulty": "Beginner",
  "time": 5,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Array Similarity",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify Node Command Usage",
            "file": "verify1-1.sh",
            "hint": "JavaScript can be run in the Terminal/SSH by typing 'node' and pressing Enter.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "javascript/arith_ops",
          "javascript/comp_ops",
          "javascript/data_types",
          "javascript/higher_funcs",
          "javascript/variables"
        ]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["Lotus-7"],
  "license": {
    "name": "CC-BY-4.0",
    "url": "https://github.com/30-seconds/30-seconds-of-code/blob/master/LICENSE",
    "repo": "https://github.com/30-seconds/30-seconds-of-code"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "探索数组相似度算法",
      "description": "在这个实验中，我们将探索数组相似度算法，该算法用于找出两个数组之间的共同元素。通过这个实验，你将学习如何使用内置的 JavaScript 方法，如 Array.prototype.includes() 和 Array.prototype.filter() 来比较数组并提取它们的共同元素。对于处理大型数据集和分析数据的开发者来说，这个算法是一个有用的工具。",
      "meta": {
        "title": "数组相似度 | JavaScript 算法",
        "description": "学习如何使用 JavaScript 方法，如 Array.includes() 和 Array.filter() 来找出两个数组之间的共同元素。对处理大型数据集很有用。",
        "keywords": "数组相似度，JavaScript 算法，数组方法，数组包含，数组过滤"
      },
      "details": {
        "steps": [
          {
            "title": "数组相似度",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "验证 Node 命令的用法",
                "file": "verify1-1.sh",
                "hint": "在终端/SSH 中，通过输入 'node' 并按下回车键，可以运行 JavaScript。"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Exploración del algoritmo de similitud de arrays",
      "description": "En este laboratorio, exploraremos el algoritmo de similitud de arrays, que se utiliza para encontrar elementos comunes entre dos arrays. A través de este laboratorio, aprenderás a usar métodos integrados de JavaScript como Array.prototype.includes() y Array.prototype.filter() para comparar arrays y extraer sus elementos comunes. Este algoritmo es una herramienta útil para los desarrolladores cuando trabajan con grandes conjuntos de datos y analizan datos.",
      "meta": {
        "title": "Similitud de arrays | Algoritmos de JavaScript",
        "description": "Aprende a usar métodos de JavaScript como Array.includes() y Array.filter() para encontrar elementos comunes entre dos arrays. Útil para trabajar con grandes conjuntos de datos.",
        "keywords": "similitud de arrays, algoritmos de JavaScript, métodos de array, array includes, array filter"
      },
      "details": {
        "steps": [
          {
            "title": "Similitud de arrays",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Verificar el uso del comando Node",
                "file": "verify1-1.sh",
                "hint": "Se puede ejecutar JavaScript en la Terminal/SSH escribiendo 'node' y presionando Enter."
              }
            ]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Exploration de l'algorithme de similarité d'ensembles",
      "description": "Dans ce laboratoire, nous allons explorer l'algorithme de similarité d'ensembles, qui est utilisé pour trouver les éléments communs entre deux tableaux. Grâce à ce laboratoire, vous allez apprendre à utiliser des méthodes JavaScript intégrées telles que Array.prototype.includes() et Array.prototype.filter() pour comparer des tableaux et extraire leurs éléments communs. Cet algorithme est un outil utile pour les développeurs lorsqu'ils travaillent avec de grands ensembles de données et analysent des données.",
      "meta": {
        "title": "Similarité d'ensembles | Algorithmes JavaScript",
        "description": "Apprenez à utiliser des méthodes JavaScript telles que Array.includes() et Array.filter() pour trouver les éléments communs entre deux tableaux. Utile pour travailler avec de grands ensembles de données.",
        "keywords": "similarité d'ensembles, algorithmes JavaScript, méthodes d'ensembles, inclusion d'ensemble, filtrage d'ensemble"
      },
      "details": {
        "steps": [
          {
            "title": "Similarité d'ensembles",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Vérifier l'utilisation de la commande Node",
                "file": "verify1-1.sh",
                "hint": "JavaScript peut être exécuté dans le Terminal/SSH en tapant 'node' et en appuyant sur Entrée."
              }
            ]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Erkundung des Array Ähnlichkeitsalgorithmus",
      "description": "In diesem Lab werden wir den Array Ähnlichkeitsalgorithmus untersuchen, der verwendet wird, um gemeinsame Elemente zwischen zwei Arrays zu finden. Durch dieses Lab lernen Sie, wie Sie eingebautes JavaScript-Methoden wie Array.prototype.includes() und Array.prototype.filter() verwenden, um Arrays zu vergleichen und ihre gemeinsamen Elemente zu extrahieren. Dieser Algorithmus ist ein nützliches Werkzeug für Entwickler, wenn es um die Arbeit mit großen Datensätzen und die Analyse von Daten geht.",
      "meta": {
        "title": "Array Ähnlichkeit | JavaScript-Algorithmen",
        "description": "Lernen Sie, wie Sie JavaScript-Methoden wie Array.includes() und Array.filter() verwenden, um gemeinsame Elemente zwischen zwei Arrays zu finden. Nützlich für die Arbeit mit großen Datensätzen.",
        "keywords": "Arrayähnlichkeit, JavaScript-Algorithmen, Arraymethoden, Array enthält, Array filtern"
      },
      "details": {
        "steps": [
          {
            "title": "Array Ähnlichkeit",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Verifizieren der Verwendung des Node-Befehls",
                "file": "verify1-1.sh",
                "hint": "JavaScript kann im Terminal/SSH ausgeführt werden, indem man 'node' eingibt und die Enter-Taste drückt."
              }
            ]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "配列類似度アルゴリズムの探索",
      "description": "この実験では、2 つの配列間の共通要素を見つけるために使用される配列類似度アルゴリズムを探ります。この実験を通じて、Array.prototype.includes() や Array.prototype.filter() のような組み込み JavaScript メソッドを使って配列を比較し、共通要素を抽出する方法を学びます。このアルゴリズムは、開発者が大規模なデータセットを扱い、データを分析する際に役立つツールです。",
      "meta": {
        "title": "配列類似度 | JavaScript アルゴリズム",
        "description": "Array.includes() や Array.filter() のような JavaScript メソッドを使って、2 つの配列間の共通要素を見つける方法を学びましょう。大規模なデータセットの処理に役立ちます。",
        "keywords": "配列類似度，JavaScript アルゴリズム，配列メソッド，配列含む，配列フィルタ"
      },
      "details": {
        "steps": [
          {
            "title": "配列類似度",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "Node コマンドの使用を確認する",
                "file": "verify1-1.sh",
                "hint": "ターミナル/SSH で'node'と入力して Enter キーを押すことで、JavaScript を実行できます。"
              }
            ]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Исследование алгоритма поиска сходства массивов",
      "description": "В этом практическом занятии мы изучим алгоритм поиска сходства массивов, который используется для нахождения общих элементов между двумя массивами. В ходе этого практического занятия вы научитесь использовать встроенные методы JavaScript, такие как Array.prototype.includes() и Array.prototype.filter(), для сравнения массивов и извлечения их общих элементов. Этот алгоритм полезный инструмент для разработчиков при работе с большими наборами данных и анализе данных.",
      "meta": {
        "title": "Сходство массивов | Алгоритмы JavaScript",
        "description": "Изучите, как использовать методы JavaScript, такие как Array.includes() и Array.filter(), для нахождения общих элементов между двумя массивами. Полезно при работе с большими наборами данных.",
        "keywords": "сходство массивов, алгоритмы JavaScript, методы массивов, включение массива, фильтрация массива"
      },
      "details": {
        "steps": [
          {
            "title": "Сходство массивов",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "Проверить использование команды Node",
                "file": "verify1-1.sh",
                "hint": "JavaScript можно запустить в Терминале/SSH, введя 'node' и нажав Enter."
              }
            ]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    }
  ]
}
