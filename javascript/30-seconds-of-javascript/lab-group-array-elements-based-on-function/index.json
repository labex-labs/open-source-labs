{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Group Array Elements Based on Function",
  "description": "In this lab, we will explore how to group elements of arrays based on their position and combine them using a function. We will use the zipWith function to achieve this, which creates an array of elements that are grouped based on their position in the original arrays. The zipWith function can be very useful when working with arrays of different lengths and we will see how to use it to handle such scenarios.",
  "meta": {
    "title": "Array Grouping | JavaScript Tutorials",
    "description": "Learn how to group and combine array elements using the powerful zipWith function in JavaScript. Ideal for working with arrays of different lengths.",
    "keywords": "JavaScript, arrays, grouping, zipWith, programming tutorials"
  },
  "difficulty": "Beginner",
  "time": 10,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Group Array Elements Based on Function",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify Node Commands Usage",
            "file": "verify1-1.sh",
            "hint": "JavaScript can be run in the Terminal/SSH by typing 'node' and pressing Enter.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "javascript/arith_ops",
          "javascript/comp_ops",
          "javascript/data_types"
        ]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["Lotus-7"],
  "license": {
    "name": "CC-BY-4.0",
    "url": "https://github.com/30-seconds/30-seconds-of-code/blob/master/LICENSE",
    "repo": "https://github.com/30-seconds/30-seconds-of-code"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "基于函数对数组元素进行分组",
      "description": "在本实验中，我们将探索如何根据数组元素的位置对其进行分组，并使用一个函数将它们组合起来。我们将使用zipWith函数来实现这一点，该函数会创建一个基于原始数组中元素位置进行分组的元素数组。当处理不同长度的数组时，zipWith函数非常有用，我们将了解如何使用它来处理此类情况。",
      "meta": {
        "title": "数组分组 | JavaScript教程",
        "description": "学习如何使用JavaScript中强大的zipWith函数对数组元素进行分组和组合。非常适合处理不同长度的数组。",
        "keywords": "JavaScript, 数组, 分组, zipWith, 编程教程"
      },
      "details": {
        "steps": [
          {
            "title": "基于函数对数组元素进行分组",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "验证Node命令的用法",
                "file": "verify1-1.sh",
                "hint": "在终端/SSH中，通过输入'node'并按回车键可以运行JavaScript。"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Agrupar elementos de array basados en función",
      "description": "En este laboratorio, exploraremos cómo agrupar elementos de arrays según su posición y combinarlos utilizando una función. Utilizaremos la función zipWith para lograr esto, que crea un array de elementos que se agrupan según su posición en los arrays originales. La función zipWith puede ser muy útil cuando se trabaja con arrays de diferentes longitudes y veremos cómo utilizarla para manejar tales casos.",
      "meta": {
        "title": "Agrupación de arrays | Tutoriales de JavaScript",
        "description": "Aprende cómo agrupar y combinar elementos de array utilizando la poderosa función zipWith en JavaScript. Ideal para trabajar con arrays de diferentes longitudes.",
        "keywords": "JavaScript, arrays, agrupación, zipWith, tutoriales de programación"
      },
      "details": {
        "steps": [
          {
            "title": "Agrupar elementos de array basados en función",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Verificar el uso de comandos de Node",
                "file": "verify1-1.sh",
                "hint": "Se puede ejecutar JavaScript en la Terminal/SSH escribiendo 'node' y presionando Enter."
              }
            ]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Regrouper les éléments d'un tableau en fonction d'une fonction",
      "description": "Dans ce laboratoire, nous allons explorer la manière de regrouper les éléments d'un tableau en fonction de leur position et de les combiner à l'aide d'une fonction. Nous utiliserons la fonction zipWith pour y parvenir, qui crée un tableau d'éléments regroupés en fonction de leur position dans les tableaux d'origine. La fonction zipWith peut s'avérer très utile lorsqu'on travaille avec des tableaux de longueurs différentes et nous verrons comment l'utiliser pour gérer de tels scénarios.",
      "meta": {
        "title": "Groupement de tableaux | Didacticiels JavaScript",
        "description": "Découvrez comment regrouper et combiner les éléments d'un tableau à l'aide de la puissante fonction zipWith en JavaScript. Idéal pour travailler avec des tableaux de longueurs différentes.",
        "keywords": "JavaScript, tableaux, groupement, zipWith, didacticiels de programmation"
      },
      "details": {
        "steps": [
          {
            "title": "Regrouper les éléments d'un tableau en fonction d'une fonction",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Vérifier l'utilisation des commandes Node",
                "file": "verify1-1.sh",
                "hint": "JavaScript peut être exécuté dans le Terminal/SSH en tapant 'node' et en appuyant sur Entrée."
              }
            ]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Array-Elemente basierend auf einer Funktion gruppieren",
      "description": "In diesem Lab werden wir untersuchen, wie man Elemente von Arrays anhand ihrer Position gruppiert und mit einer Funktion kombiniert. Wir werden die zipWith-Funktion verwenden, um dies zu erreichen, die ein Array von Elementen erstellt, die anhand ihrer Position in den ursprünglichen Arrays gruppiert sind. Die zipWith-Funktion kann sehr nützlich sein, wenn man mit Arrays unterschiedlicher Länge arbeitet, und wir werden sehen, wie man sie verwendet, um solche Szenarien zu behandeln.",
      "meta": {
        "title": "Array-Gruppierung | JavaScript-Tutorials",
        "description": "Lernen Sie, wie Sie Array-Elemente mit der leistungsstarken zipWith-Funktion in JavaScript gruppieren und kombinieren. Ideal für die Arbeit mit Arrays unterschiedlicher Länge.",
        "keywords": "JavaScript, Arrays, Gruppierung, zipWith, Programmier-Tutorials"
      },
      "details": {
        "steps": [
          {
            "title": "Array-Elemente basierend auf einer Funktion gruppieren",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Verifizieren der Verwendung von Node-Befehlen",
                "file": "verify1-1.sh",
                "hint": "JavaScript kann im Terminal/SSH ausgeführt werden, indem man 'node' eingibt und die Enter-Taste drückt."
              }
            ]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "関数に基づいて配列要素をグループ化する",
      "description": "この実験では、配列の要素をその位置に基づいてグループ化し、関数を使って結合する方法を探ります。これを達成するために、zipWith関数を使います。この関数は、元の配列における位置に基づいてグループ化された要素の配列を作成します。zipWith関数は、異なる長さの配列を扱う際に非常に役立ちます。そして、このようなシナリオを処理するためにどのように使うかを見ていきます。",
      "meta": {
        "title": "配列のグループ化 | JavaScriptチュートリアル",
        "description": "JavaScriptの強力なzipWith関数を使って、配列要素をどのようにグループ化して結合するか学びましょう。異なる長さの配列を扱うのに最適。",
        "keywords": "JavaScript, 配列, グループ化, zipWith, プログラミングチュートリアル"
      },
      "details": {
        "steps": [
          {
            "title": "関数に基づいて配列要素をグループ化する",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "Nodeコマンドの使用を確認する",
                "file": "verify1-1.sh",
                "hint": "ターミナル/SSHで'node'と入力してEnterキーを押すことで、JavaScriptを実行できます。"
              }
            ]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Группировка элементов массива в зависимости от функции",
      "description": "В этом лабе мы исследуем, как группировать элементы массивов в зависимости от их позиции и комбинировать их с использованием функции. Мы будем использовать функцию zipWith для этого, которая создает массив элементов, сгруппированных в зависимости от их позиции в исходных массивах. Функция zipWith может быть очень полезной при работе с массивами разной длины, и мы увидим, как ее использовать для обработки таких сценариев.",
      "meta": {
        "title": "Группировка массивов | Руководства по JavaScript",
        "description": "Изучите, как группировать и комбинировать элементы массива с использованием мощной функции zipWith в JavaScript. Ideal для работы с массивами разной длины.",
        "keywords": "JavaScript, массивы, группировка, zipWith, учебники по программированию"
      },
      "details": {
        "steps": [
          {
            "title": "Группировка элементов массива в зависимости от функции",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "Проверить использование команд Node",
                "file": "verify1-1.sh",
                "hint": "JavaScript можно запустить в Терминале/SSH, введя 'node' и нажав Enter."
              }
            ]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    }
  ]
}
