{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Group Array Elements Based on Function",
  "description": "In this lab, we will explore how to group elements of arrays based on their position and combine them using a function. We will use the zipWith function to achieve this, which creates an array of elements that are grouped based on their position in the original arrays. The zipWith function can be very useful when working with arrays of different lengths and we will see how to use it to handle such scenarios.",
  "meta": {
    "title": "Array Grouping | JavaScript Tutorials",
    "description": "Learn how to group and combine array elements using the powerful zipWith function in JavaScript. Ideal for working with arrays of different lengths.",
    "keywords": "JavaScript, arrays, grouping, zipWith, programming tutorials"
  },
  "difficulty": "Beginner",
  "time": 10,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Group Array Elements Based on Function",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify Node Commands Usage",
            "file": "verify1-1.sh",
            "hint": "JavaScript can be run in the Terminal/SSH by typing 'node' and pressing Enter.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "javascript/arith_ops",
          "javascript/comp_ops",
          "javascript/data_types"
        ]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["Lotus-7"],
  "license": {
    "name": "CC-BY-4.0",
    "url": "https://github.com/30-seconds/30-seconds-of-code/blob/master/LICENSE",
    "repo": "https://github.com/30-seconds/30-seconds-of-code"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "基于函数对数组元素进行分组",
      "description": "在本实验中，我们将探索如何根据数组元素的位置对其进行分组，并使用一个函数将它们组合起来。我们将使用zipWith函数来实现这一点，该函数会创建一个基于原始数组中元素位置进行分组的元素数组。当处理不同长度的数组时，zipWith函数非常有用，我们将了解如何使用它来处理此类情况。",
      "meta": {
        "title": "数组分组 | JavaScript教程",
        "description": "学习如何使用JavaScript中强大的zipWith函数对数组元素进行分组和组合。非常适合处理不同长度的数组。",
        "keywords": "JavaScript, 数组, 分组, zipWith, 编程教程"
      },
      "details": {
        "steps": [
          {
            "title": "基于函数对数组元素进行分组",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "验证Node命令的用法",
                "file": "verify1-1.sh",
                "hint": "在终端/SSH中，通过输入'node'并按回车键可以运行JavaScript。"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    }
  ]
}
