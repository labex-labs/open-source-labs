{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "challenge",
  "title": "Applying Selective Git Commit Changes",
  "description": "Git is a powerful version control system that allows developers to manage their codebase efficiently. One of the most useful features of Git is the ability to cherry-pick changes from one or more commits. This allows developers to apply specific changes to their codebase without having to merge entire branches.",
  "meta": {
    "title": "Git Cherry-Pick | Version Control | Code Management",
    "description": "Discover the power of Git's cherry-pick feature to efficiently apply specific changes to your codebase without merging entire branches.",
    "keywords": "Git, Version Control, Code Management, Cherry-Pick, Code Optimization"
  },
  "difficulty": "Beginner",
  "time": 5,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": false,
  "details": {
    "steps": [
      {
        "title": "Git Cherry-Pick",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify if pick is successful",
            "file": "verify1-1.sh",
            "hint": "Please make sure you have completed the required actions.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": ["git/commit"],
        "solutions": ["step1-solution.md"]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md"
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["xiaoshengyunan"],
  "license": {
    "name": "CC-BY-4.0",
    "url": "https://github.com/30-seconds/30-seconds-of-git/blob/master/LICENSE",
    "repo": "https://github.com/30-seconds/30-seconds-of-git"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "应用选择性 Git 提交更改",
      "description": "Git 是一个强大的版本控制系统，它允许开发者高效地管理他们的代码库。Git 最有用的特性之一是能够从一个或多个提交中挑选更改。这使开发者能够将特定更改应用到他们的代码库，而无需合并整个分支。",
      "meta": {
        "title": "Git 挑选提交 | 版本控制 | 代码管理",
        "description": "探索 Git 的挑选提交功能的强大之处，无需合并整个分支即可有效地将特定更改应用到您的代码库。",
        "keywords": "Git, 版本控制, 代码管理, 挑选提交, 代码优化"
      },
      "details": {
        "steps": [
          {
            "title": "Git 挑选提交",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "验证挑选是否成功",
                "file": "verify1-1.sh",
                "hint": "请确保你已完成所需操作。"
              }
            ],
            "solutions": ["step1-solution.md"]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Aplicar cambios selectivos de commits de Git",
      "description": "Git es un sistema de control de versiones poderoso que permite a los desarrolladores administrar eficientemente su código base. Una de las características más útiles de Git es la capacidad de seleccionar cambios específicos de uno o más commits. Esto permite a los desarrolladores aplicar cambios específicos a su código base sin tener que fusionar ramas enteras.",
      "meta": {
        "title": "Git Cherry-Pick | Control de versiones | Gestión de código",
        "description": "Descubre el poder de la característica cherry-pick de Git para aplicar eficientemente cambios específicos a tu código base sin fusionar ramas enteras.",
        "keywords": "Git, Control de versiones, Gestión de código, Cherry-Pick, Optimización de código"
      },
      "details": {
        "steps": [
          {
            "title": "Git Cherry-Pick",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Verifica si la selección fue exitosa",
                "file": "verify1-1.sh",
                "hint": "Asegúrate de haber completado las acciones requeridas."
              }
            ],
            "solutions": ["step1-solution.md"]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Application de modifications sélectives de commits Git",
      "description": "Git est un puissant système de contrôle de versions qui permet aux développeurs de gérer efficacement leur base de code. L'une des fonctionnalités les plus utiles de Git est la capacité de sélectionner des modifications à partir d'un ou de plusieurs commits. Cela permet aux développeurs d'appliquer des modifications spécifiques à leur base de code sans avoir à fusionner des branches entières.",
      "meta": {
        "title": "Git Cherry-Pick | Contrôle de versions | Gestion du code",
        "description": "Découvrez le pouvoir de la fonction Git Cherry-Pick pour appliquer efficacement des modifications spécifiques à votre base de code sans fusionner des branches entières.",
        "keywords": "Git, Contrôle de versions, Gestion du code, Cherry-Pick, Optimisation du code"
      },
      "details": {
        "steps": [
          {
            "title": "Git Cherry-Pick",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Vérifiez si le choix a réussi",
                "file": "verify1-1.sh",
                "hint": "Veuillez vous assurer d'avoir effectué les actions requises."
              }
            ],
            "solutions": ["step1-solution.md"]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Anwenden von selektiven Git-Commit-Änderungen",
      "description": "Git ist ein leistungsstarkes Versionsverwaltungssystem, das es Entwicklern ermöglicht, ihre Codebasis effizient zu verwalten. Eine der nützlichsten Funktionen von Git ist die Möglichkeit, Änderungen aus einem oder mehreren Commits auszuwählen. Dies ermöglicht es Entwicklern, spezifische Änderungen auf ihre Codebasis anzuwenden, ohne die gesamten Branches zu mergen.",
      "meta": {
        "title": "Git Cherry-Pick | Versionsverwaltung | Codeverwaltung",
        "description": "Entdecken Sie die Macht der Git-Cherry-Pick-Funktion, um spezifische Änderungen effizient auf Ihre Codebasis anzuwenden, ohne die gesamten Branches zu mergen.",
        "keywords": "Git, Versionsverwaltung, Codeverwaltung, Cherry-Pick, Codeoptimierung"
      },
      "details": {
        "steps": [
          {
            "title": "Git Cherry-Pick",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Verifizieren, ob das Auswählen erfolgreich war",
                "file": "verify1-1.sh",
                "hint": "Bitte stellen Sie sicher, dass Sie die erforderlichen Aktionen abgeschlossen haben."
              }
            ],
            "solutions": ["step1-solution.md"]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "特定の Git コミットの変更を適用する",
      "description": "Git は、開発者がコードベースを効率的に管理できる強力なバージョン管理システムです。Git の最も便利な機能の 1 つは、1 つまたは複数のコミットから特定の変更を選択的に適用する機能です。これにより、開発者はコードベースに特定の変更を適用しても、エンタイアなブランチをマージする必要がなくなります。",
      "meta": {
        "title": "Git Cherry-Pick | バージョン管理 | コード管理",
        "description": "Git の cherry-pick 機能の力を発見して、エンタイアなブランチをマージすることなく、コードベースに特定の変更を効率的に適用しましょう。",
        "keywords": "Git, バージョン管理, コード管理, Cherry-Pick, コード最適化"
      },
      "details": {
        "steps": [
          {
            "title": "Git Cherry-Pick",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "ピックが成功したかどうかを確認する",
                "file": "verify1-1.sh",
                "hint": "必要な操作を完了していることを確認してください。"
              }
            ],
            "solutions": ["step1-solution.md"]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Применение выбранных изменений коммитов Git",
      "description": "Git - это мощная система контроля версий, которая позволяет разработчикам эффективно управлять своей кодовой базой. Одной из наиболее полезных функций Git является возможность выбирать отдельные изменения из одного или нескольких коммитов. Это позволяет разработчикам применить конкретные изменения к своей кодовой базе, не объединяя при этом целые ветки.",
      "meta": {
        "title": "Git Cherry-Pick | Контроль версий | Управление кодом",
        "description": "Откройте силу функции cherry-pick Git для эффективного применения конкретных изменений к своей кодовой базе без объединения целых веток.",
        "keywords": "Git, Контроль версий, Управление кодом, Cherry-Pick, Оптимизация кода"
      },
      "details": {
        "steps": [
          {
            "title": "Git Cherry-Pick",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "Проверить, успешен ли выбор",
                "file": "verify1-1.sh",
                "hint": "Пожалуйста, убедитесь, что вы выполнили требуемые действия."
              }
            ],
            "solutions": ["step1-solution.md"]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    }
  ]
}
