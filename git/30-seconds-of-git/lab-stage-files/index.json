{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Add Files to the Staging Area",
  "description": "Git is a popular version control system that allows developers to track changes made to their codebase. One of the essential features of Git is the staging area, which allows developers to selectively choose which changes to commit. In this lab, you will learn how to add files to the staging area using Git.",
  "meta": {
    "title": "Mastering Git: Staging Files for Seamless Commits",
    "description": "Learn how to effectively manage your codebase with Git's staging area, ensuring only the desired changes are committed.",
    "keywords": "version control, git labs, git, commit, git playground, staging area, code management"
  },
  "difficulty": "Beginner",
  "time": 5,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Add Files to the Staging Area",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify that it has been added successfully",
            "file": "verify1-1.sh",
            "hint": "Please make sure you have completed the required actions.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": ["git/add"]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["xiaoshengyunan"],
  "license": {
    "name": "CC-BY-4.0",
    "url": "https://github.com/30-seconds/30-seconds-of-git/blob/master/LICENSE",
    "repo": "https://github.com/30-seconds/30-seconds-of-git"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "将文件添加到暂存区",
      "description": "Git 是一种流行的版本控制系统，它允许开发者跟踪对其代码库所做的更改。Git 的一个基本特性是暂存区，它允许开发者有选择地决定提交哪些更改。在本实验中，你将学习如何使用 Git 将文件添加到暂存区。",
      "meta": {
        "title": "掌握 Git：为无缝提交暂存文件",
        "description": "学习如何通过 Git 的暂存区有效地管理你的代码库，确保只提交所需的更改。",
        "keywords": "版本控制，Git 实验室，Git, 提交，Git 游乐场，暂存区，代码管理"
      },
      "details": {
        "steps": [
          {
            "title": "将文件添加到暂存区",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "验证是否已成功添加",
                "file": "verify1-1.sh",
                "hint": "请确保你已完成所需操作。"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Agregar archivos al área de preparación",
      "description": "Git es un sistema de control de versiones popular que permite a los desarrolladores rastrear los cambios realizados en su repositorio de código. Una de las características esenciales de Git es el área de preparación, que permite a los desarrolladores elegir de manera selectiva qué cambios se van a confirmar. En este laboratorio, aprenderás cómo agregar archivos al área de preparación utilizando Git.",
      "meta": {
        "title": "Dominando Git: Preparando archivos para confirmaciones sin problemas",
        "description": "Aprende a manejar efectivamente tu repositorio de código con el área de preparación de Git, asegurándote de que solo los cambios deseados se confirmen.",
        "keywords": "control de versiones, laboratorios de Git, Git, confirmación, playground de Git, área de preparación, gestión de código"
      },
      "details": {
        "steps": [
          {
            "title": "Agregar archivos al área de preparación",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Verificar que se haya agregado correctamente",
                "file": "verify1-1.sh",
                "hint": "Asegúrese de haber completado las acciones requeridas."
              }
            ]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Ajouter des fichiers à la zone de préparation",
      "description": "Git est un système de contrôle de versions populaire qui permet aux développeurs de suivre les modifications apportées à leur base de code. L'une des fonctionnalités essentielles de Git est la zone de préparation, qui permet aux développeurs de choisir sélectivement les modifications à commettre. Dans ce laboratoire, vous allez apprendre à ajouter des fichiers à la zone de préparation à l'aide de Git.",
      "meta": {
        "title": "Maîtriser Git : Préparer les fichiers pour des commits sans encombre",
        "description": "Découvrez comment gérer efficacement votre base de code avec la zone de préparation de Git, en vous assurant que seules les modifications souhaitées sont commises.",
        "keywords": "contrôle de versions, git labs, git, commit, git playground, zone de préparation, gestion du code"
      },
      "details": {
        "steps": [
          {
            "title": "Ajouter des fichiers à la zone de préparation",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Vérifiez qu'il a été ajouté avec succès",
                "file": "verify1-1.sh",
                "hint": "Veuillez vous assurer d'avoir effectué les actions requises."
              }
            ]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Dateien zum Staging-Bereich hinzufügen",
      "description": "Git ist ein beliebtes Versionsverwaltungssystem, das es Entwicklern ermöglicht, Änderungen an ihrer Codebasis zu verfolgen. Eine der wesentlichen Funktionen von Git ist der Staging-Bereich, der es Entwicklern ermöglicht, selektiv auszuwählen, welche Änderungen committet werden sollen. In diesem Lab werden Sie lernen, wie Sie Dateien mithilfe von Git in den Staging-Bereich hinzufügen.",
      "meta": {
        "title": "Git-Meisterschaft: Dateien im Staging-Bereich für nahtlose Commits",
        "description": "Lernen Sie, wie Sie mit Git's Staging-Bereich Ihre Codebasis effektiv verwalten und sicherstellen, dass nur die gewünschten Änderungen committet werden.",
        "keywords": "Versionsverwaltung, Git Labs, Git, Commit, Git Playground, Staging-Bereich, Codeverwaltung"
      },
      "details": {
        "steps": [
          {
            "title": "Dateien zum Staging-Bereich hinzufügen",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Verifizieren Sie, dass es erfolgreich hinzugefügt wurde",
                "file": "verify1-1.sh",
                "hint": "Bitte stellen Sie sicher, dass Sie die erforderlichen Aktionen abgeschlossen haben."
              }
            ]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "ステージング エリアにファイルを追加する",
      "description": "Git は、開発者がコードベースに対して行った変更を追跡できる人気のあるバージョン管理システムです。Git の重要な機能の 1 つは、ステージング エリアで、これにより開発者はコミットする変更を選択的に選ぶことができます。この実験では、Git を使ってファイルをステージング エリアに追加する方法を学びます。",
      "meta": {
        "title": "Git をマスターする：シームレスなコミットのためのファイルのステージング",
        "description": "Git のステージング エリアを使ってコードベースを効果的に管理する方法を学び、望ましい変更のみがコミットされることを確認しましょう。",
        "keywords": "バージョン管理，Git ラボ，Git, コミット，Git プレイグラウンド，ステージング エリア，コード管理"
      },
      "details": {
        "steps": [
          {
            "title": "ステージング エリアにファイルを追加する",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "正常に追加されたことを確認する",
                "file": "verify1-1.sh",
                "hint": "必要な操作を完了していることを確認してください。"
              }
            ]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Добавление файлов в staging-область",
      "description": "Git - это популярная система контроля версий, которая позволяет разработчикам отслеживать изменения в их кодовой базе. Одной из важнейших функций Git является staging-область, которая позволяет разработчикам выбирать, какие изменения коммитить. В этом лабе вы научитесь добавлять файлы в staging-область с помощью Git.",
      "meta": {
        "title": "Мастерство в Git: Подготовка файлов для беспрепятственного коммитования",
        "description": "Изучите, как эффективно управлять своей кодовой базой с помощью staging-области Git, гарантируя, что коммитятся только нужные изменения.",
        "keywords": "контроль версий, git-лаборатории, git, коммит, git-плейгрунд, staging-область, управление кодом"
      },
      "details": {
        "steps": [
          {
            "title": "Добавление файлов в staging-область",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "Проверить, что оно было успешно добавлено",
                "file": "verify1-1.sh",
                "hint": "Пожалуйста, убедитесь, что вы выполнили требуемые действия."
              }
            ]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    }
  ]
}
