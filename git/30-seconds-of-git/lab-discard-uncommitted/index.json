{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Discard Uncommitted Changes",
  "description": "Git is a version control system that allows developers to track changes in their codebase. Sometimes, developers may make changes to their code that they later decide they don't want to keep. In such cases, it is necessary to discard these changes and revert to the last committed version of the code. This lab will focus on discarding uncommitted changes in Git.",
  "meta": {
    "title": "Discard Uncommitted Changes in Git",
    "description": "Learn how to discard all uncommitted changes in a Git repository and revert to the last committed version of the code.",
    "keywords": "version control, git labs, git, reset, git playground, discarding changes, uncommitted changes"
  },
  "difficulty": "Beginner",
  "time": 5,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Discard Uncommitted Changes",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify for successful discarding",
            "file": "verify1-1.sh",
            "hint": "Please make sure you have completed the required actions.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": ["git/commit"]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["xiaoshengyunan"],
  "license": {
    "name": "CC-BY-4.0",
    "url": "https://github.com/30-seconds/30-seconds-of-git/blob/master/LICENSE",
    "repo": "https://github.com/30-seconds/30-seconds-of-git"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "丢弃未提交的更改",
      "description": "Git 是一个版本控制系统，它允许开发者跟踪其代码库中的更改。有时，开发者可能会对代码进行更改，但后来又决定不保留这些更改。在这种情况下，有必要丢弃这些更改并恢复到代码的最后一次提交版本。本实验将重点介绍如何在 Git 中丢弃未提交的更改。",
      "meta": {
        "title": "在 Git 中丢弃未提交的更改",
        "description": "了解如何在 Git 仓库中丢弃所有未提交的更改并恢复到代码的最后一次提交版本。",
        "keywords": "版本控制，Git 实验，Git, 重置，Git 游乐场，丢弃更改，未提交的更改"
      },
      "details": {
        "steps": [
          {
            "title": "丢弃未提交的更改",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "验证是否成功丢弃",
                "file": "verify1-1.sh",
                "hint": "请确保你已完成所需操作。"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Descartar los cambios no confirmados",
      "description": "Git es un sistema de control de versiones que permite a los desarrolladores rastrear los cambios en su repositorio de código. A veces, los desarrolladores pueden hacer cambios en su código que más tarde deciden no querer mantener. En tales casos, es necesario descartar estos cambios y volver a la última versión del código que se haya commitado. Esta práctica se centrará en descartar los cambios no confirmados en Git.",
      "meta": {
        "title": "Descartar los cambios no confirmados en Git",
        "description": "Aprende a descartar todos los cambios no confirmados en un repositorio de Git y volver a la última versión del código que se haya commitado.",
        "keywords": "control de versiones, laboratorios de Git, Git, restablecimiento, playground de Git, descartar cambios, cambios no confirmados"
      },
      "details": {
        "steps": [
          {
            "title": "Descartar los cambios no confirmados",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Verificar el descartado exitoso",
                "file": "verify1-1.sh",
                "hint": "Asegúrese de haber completado las acciones requeridas."
              }
            ]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Abandonner les modifications non validées",
      "description": "Git est un système de contrôle de versions qui permet aux développeurs de suivre les modifications apportées à leur base de code. Parfois, les développeurs peuvent apporter des modifications à leur code qu'ils décident plus tard de ne pas conserver. Dans de tels cas, il est nécessaire d'abandonner ces modifications et de revenir à la dernière version validée du code. Ce laboratoire se concentrera sur l'abandon des modifications non validées dans Git.",
      "meta": {
        "title": "Abandonner les modifications non validées dans Git",
        "description": "Découvrez comment abandonner toutes les modifications non validées dans un référentiel Git et revenir à la dernière version validée du code.",
        "keywords": "contrôle de versions, laboratoires Git, Git, réinitialisation, terrain de jeu Git, abandon de modifications, modifications non validées"
      },
      "details": {
        "steps": [
          {
            "title": "Abandonner les modifications non validées",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Vérifier l'abandon réussi",
                "file": "verify1-1.sh",
                "hint": "Veuillez vous assurer d'avoir effectué les actions requises."
              }
            ]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Nicht committete Änderungen verwerfen",
      "description": "Git ist ein Versionsverwaltungssystem, das es Entwicklern ermöglicht, Änderungen in ihrer Codebasis zu verfolgen. Manchmal können Entwickler Änderungen an ihrem Code vornehmen, von denen sie später entscheiden, dass sie nicht beibehalten möchten. In solchen Fällen ist es notwendig, diese Änderungen abzulehnen und auf die letzte committete Version des Codes zurückzusetzen. In diesem Lab wird sich auf das Abwerfen von nicht committeten Änderungen in Git konzentrieren.",
      "meta": {
        "title": "Nicht committete Änderungen in Git verwerfen",
        "description": "Lernen Sie, wie Sie alle nicht committeten Änderungen in einem Git-Repository verwerfen und auf die letzte committete Version des Codes zurücksetzen.",
        "keywords": "Versionsverwaltung, Git Labs, Git, Zurücksetzen, Git Playground, Änderungen verwerfen, nicht committete Änderungen"
      },
      "details": {
        "steps": [
          {
            "title": "Nicht committete Änderungen verwerfen",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Verifizieren Sie das erfolgreiche Verwerfen",
                "file": "verify1-1.sh",
                "hint": "Bitte stellen Sie sicher, dass Sie die erforderlichen Aktionen abgeschlossen haben."
              }
            ]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "未コミットの変更を破棄する",
      "description": "Git は、開発者がコードベースの変更を追跡できるバージョン管理システムです。時々、開発者は後で保持したくないコードの変更を行うことがあります。このような場合、これらの変更を破棄し、最後にコミットされたコードのバージョンに戻す必要があります。この実験では、Git で未コミットの変更を破棄することに焦点を当てます。",
      "meta": {
        "title": "Git で未コミットの変更を破棄する",
        "description": "Git リポジトリですべての未コミットの変更を破棄し、最後にコミットされたコードのバージョンに戻す方法を学びましょう。",
        "keywords": "バージョン管理，Git ラボ，Git, リセット，Git プレイグラウンド，変更の破棄，未コミットの変更"
      },
      "details": {
        "steps": [
          {
            "title": "未コミットの変更を破棄する",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "正常に破棄されたことを確認する",
                "file": "verify1-1.sh",
                "hint": "必要な操作を完了したことを確認してください。"
              }
            ]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Отбросить незафиксированные изменения",
      "description": "Git - это система контроля версий, которая позволяет разработчикам отслеживать изменения в их кодовой базе. Иногда разработчики могут внести изменения в свой код, которые позже решают не сохранять. В таких случаях необходимо отбросить эти изменения и вернуться к последней зафиксированной версии кода. В этом лабе мы сосредоточимся на отбрасывании незафиксированных изменений в Git.",
      "meta": {
        "title": "Отбросить незафиксированные изменения в Git",
        "description": "Изучите, как отбросить все незафиксированные изменения в репозитории Git и вернуться к последней зафиксированной версии кода.",
        "keywords": "контроль версий, git лабы, git, сброс, git playground, отбрасывание изменений, незафиксированные изменения"
      },
      "details": {
        "steps": [
          {
            "title": "Отбросить незафиксированные изменения",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "Проверить успешность отбрасывания",
                "file": "verify1-1.sh",
                "hint": "Пожалуйста, убедитесь, что вы выполнили все необходимые действия."
              }
            ]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    },
    {
      "lang": "ko",
      "title": "커밋되지 않은 변경 사항 폐기",
      "description": "Git 은 개발자가 코드베이스의 변경 사항을 추적할 수 있도록 하는 버전 관리 시스템입니다. 때때로 개발자는 나중에 유지하고 싶지 않다고 결정하는 코드 변경 사항을 만들 수 있습니다. 이러한 경우 이러한 변경 사항을 폐기하고 마지막으로 커밋된 코드 버전으로 되돌려야 합니다. 이 랩에서는 Git 에서 커밋되지 않은 변경 사항을 폐기하는 데 중점을 둡니다.",
      "meta": {
        "title": "Git 에서 커밋되지 않은 변경 사항 폐기 방법",
        "description": "Git 저장소에서 모든 커밋되지 않은 변경 사항을 폐기하고 마지막으로 커밋된 코드 버전으로 되돌리는 방법을 알아보세요.",
        "keywords": "버전 관리, git 랩, git, reset, git playground, 변경 사항 폐기, 커밋되지 않은 변경 사항"
      },
      "details": {
        "steps": [
          {
            "title": "커밋되지 않은 변경 사항 폐기",
            "text": "ko/step1.md",
            "verify": [
              {
                "name": "성공적인 폐기 확인",
                "file": "verify1-1.sh",
                "hint": "필수 작업을 완료했는지 확인하십시오."
              }
            ]
          }
        ],
        "intro": {
          "text": "ko/intro.md",
          "title": "소개"
        },
        "finish": {
          "text": "ko/finish.md",
          "title": "요약"
        }
      }
    },
    {
      "lang": "pt",
      "title": "Descartando Alterações Não Confirmadas",
      "description": "Git é um sistema de controle de versão que permite aos desenvolvedores rastrear as alterações em seu código. Às vezes, os desenvolvedores podem fazer alterações em seu código que, posteriormente, decidem não manter. Nesses casos, é necessário descartar essas alterações e reverter para a última versão confirmada do código. Este laboratório se concentrará em descartar alterações não confirmadas no Git.",
      "meta": {
        "title": "Descartar Alterações Não Confirmadas no Git - Tutorial",
        "description": "Aprenda como descartar todas as alterações não confirmadas em um repositório Git e reverter para a última versão confirmada do código. Guia prático para iniciantes.",
        "keywords": "controle de versão, git, git labs, reset git, descartar alterações, alterações não confirmadas, tutorial git, git playground"
      },
      "details": {
        "steps": [
          {
            "title": "Descartar Alterações Não Confirmadas",
            "text": "pt/step1.md",
            "verify": [
              {
                "name": "Verificar descarte bem-sucedido",
                "file": "verify1-1.sh",
                "hint": "Certifique-se de ter concluído as ações necessárias."
              }
            ]
          }
        ],
        "intro": {
          "text": "pt/intro.md",
          "title": "Introdução"
        },
        "finish": {
          "text": "pt/finish.md",
          "title": "Resumo"
        }
      }
    }
  ]
}
