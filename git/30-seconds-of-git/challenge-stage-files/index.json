{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "challenge",
  "title": "Add Files to the Staging Area",
  "description": "Git is a popular version control system that allows developers to track changes made to their codebase. One of the essential features of Git is the staging area, which allows developers to selectively choose which changes to commit. In this challenge, you will learn how to add files to the staging area using Git.",
  "meta": {
    "title": "Git Staging Area | Version Control Tutorial",
    "description": "Learn how to add files to the Git staging area and manage your codebase effectively in this programming tutorial.",
    "keywords": "Git, version control, staging area, codebase management, programming tutorial"
  },
  "difficulty": "Beginner",
  "time": 5,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": false,
  "details": {
    "steps": [
      {
        "title": "Add Files to the Staging Area",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify that it has been added successfully",
            "file": "verify1-1.sh",
            "hint": "Please make sure you have completed the required actions.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [],
        "solutions": ["step1-solution.md"]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md"
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["xiaoshengyunan"],
  "license": {
    "name": "CC-BY-4.0",
    "url": "https://github.com/30-seconds/30-seconds-of-git/blob/master/LICENSE",
    "repo": "https://github.com/30-seconds/30-seconds-of-git"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "将文件添加到暂存区",
      "description": "Git 是一种流行的版本控制系统，它允许开发者跟踪对其代码库所做的更改。Git 的一个基本特性是暂存区，它允许开发者有选择地决定提交哪些更改。在这个挑战中，你将学习如何使用 Git 将文件添加到暂存区。",
      "meta": {
        "title": "Git 暂存区 | 版本控制教程",
        "description": "在本编程教程中，学习如何将文件添加到 Git 暂存区并有效管理你的代码库。",
        "keywords": "Git, 版本控制，暂存区，代码库管理，编程教程"
      },
      "details": {
        "steps": [
          {
            "title": "将文件添加到暂存区",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "验证是否已成功添加",
                "file": "verify1-1.sh",
                "hint": "请确保你已完成所需操作。"
              }
            ],
            "solutions": ["step1-solution.md"]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Agregar archivos al área de preparación",
      "description": "Git es un popular sistema de control de versiones que permite a los desarrolladores rastrear los cambios realizados en su código base. Una de las características esenciales de Git es el área de preparación, que permite a los desarrolladores elegir de manera selectiva qué cambios se van a confirmar. En este desafío, aprenderás cómo agregar archivos al área de preparación utilizando Git.",
      "meta": {
        "title": "Área de preparación de Git | Tutorial de control de versiones",
        "description": "Aprende cómo agregar archivos al área de preparación de Git y administra efectivamente tu código base en este tutorial de programación.",
        "keywords": "Git, control de versiones, área de preparación, administración de código base, tutorial de programación"
      },
      "details": {
        "steps": [
          {
            "title": "Agregar archivos al área de preparación",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Verificar que se haya agregado correctamente",
                "file": "verify1-1.sh",
                "hint": "Asegúrese de haber completado las acciones requeridas."
              }
            ],
            "solutions": ["step1-solution.md"]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Ajouter des fichiers à la zone de préparation",
      "description": "Git est un système de contrôle de versions populaire qui permet aux développeurs de suivre les modifications apportées à leur base de code. L'une des fonctionnalités essentielles de Git est la zone de préparation, qui permet aux développeurs de choisir sélectivement les modifications à commettre. Dans ce défi, vous allez apprendre à ajouter des fichiers à la zone de préparation à l'aide de Git.",
      "meta": {
        "title": "Zone de préparation Git | Tutoriel de contrôle de versions",
        "description": "Découvrez comment ajouter des fichiers à la zone de préparation Git et gérer efficacement votre base de code dans ce tutoriel de programmation.",
        "keywords": "Git, contrôle de versions, zone de préparation, gestion de la base de code, tutoriel de programmation"
      },
      "details": {
        "steps": [
          {
            "title": "Ajouter des fichiers à la zone de préparation",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Vérifiez qu'il a été ajouté avec succès",
                "file": "verify1-1.sh",
                "hint": "Veuillez vous assurer d'avoir effectué les actions requises."
              }
            ],
            "solutions": ["step1-solution.md"]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Dateien zum Staging-Bereich hinzufügen",
      "description": "Git ist ein beliebtes Versionsverwaltungssystem, das es Entwicklern ermöglicht, Änderungen an ihrer Codebasis zu verfolgen. Eine der wesentlichen Funktionen von Git ist der Staging-Bereich, der es Entwicklern ermöglicht, selektiv zu wählen, welche Änderungen committet werden sollen. In dieser Herausforderung lernst du, wie du Dateien mit Git in den Staging-Bereich hinzufügst.",
      "meta": {
        "title": "Git Staging-Bereich | Versionskontrolltutorial",
        "description": "Lerne, wie du Dateien in den Git-Staging-Bereich hinzufügst und wie du deine Codebasis effektiv verwaltest, in diesem Programmier-Tutorial.",
        "keywords": "Git, Versionskontrolle, Staging-Bereich, Codebasisverwaltung, Programmier-Tutorial"
      },
      "details": {
        "steps": [
          {
            "title": "Dateien zum Staging-Bereich hinzufügen",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Verifizieren, dass es erfolgreich hinzugefügt wurde",
                "file": "verify1-1.sh",
                "hint": "Bitte stellen Sie sicher, dass Sie die erforderlichen Aktionen abgeschlossen haben."
              }
            ],
            "solutions": ["step1-solution.md"]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "ステージング エリアにファイルを追加する",
      "description": "Git は、開発者がコードベースに対して行った変更を追跡できる人気のあるバージョン管理システムです。Git の重要な機能の 1 つは、ステージング エリアで、開発者がコミットする変更を選択的に選ぶことができます。このチャレンジでは、Git を使ってファイルをステージング エリアに追加する方法を学びます。",
      "meta": {
        "title": "Git ステージング エリア | バージョン管理チュートリアル",
        "description": "このプログラミング チュートリアルでは、Git ステージング エリアにファイルを追加してコードベースを効果的に管理する方法を学びます。",
        "keywords": "Git, バージョン管理，ステージング エリア，コードベース管理，プログラミング チュートリアル"
      },
      "details": {
        "steps": [
          {
            "title": "ステージング エリアにファイルを追加する",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "正常に追加されたことを確認する",
                "file": "verify1-1.sh",
                "hint": "必要な操作を完了していることを確認してください。"
              }
            ],
            "solutions": ["step1-solution.md"]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Добавление файлов в staging-регион",
      "description": "Git - это популярная система контроля версий, которая позволяет разработчикам отслеживать изменения в их кодовой базе. Одной из основных функций Git является staging-регион, который позволяет разработчикам выбирать, какие изменения коммитить. В этом испытании вы научитесь добавлять файлы в staging-регион с использованием Git.",
      "meta": {
        "title": "Git staging-регион | Руководство по контролю версий",
        "description": "Изучите, как добавлять файлы в staging-регион Git и эффективно управлять своей кодовой базой в этом программировательском уроке.",
        "keywords": "Git, контроль версий, staging-регион, управление кодовой базой, программировательский урок"
      },
      "details": {
        "steps": [
          {
            "title": "Добавление файлов в staging-регион",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "Проверить, что оно было успешно добавлено",
                "file": "verify1-1.sh",
                "hint": "Пожалуйста, убедитесь, что вы выполнили требуемые действия."
              }
            ],
            "solutions": ["step1-solution.md"]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    }
  ]
}
