{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Move Commits to a New Branch",
  "description": "Git is a powerful version control system that allows developers to keep track of changes made to their codebase. One of the useful features of Git is the ability to move commits from one branch to another. This can be helpful when you realize that some changes you made to the master branch should have been made on a separate branch. In this lab, you will learn how to move commits from the master branch to a new branch.",
  "meta": {
    "title": "Move Commits to a New Branch in Git",
    "description": "Learn how to move commits from the master branch to a new branch in Git, a powerful version control system.",
    "keywords": "version control, git labs, branch, git, commit, master, git playground"
  },
  "difficulty": "Beginner",
  "time": 5,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Move Commits to a New Branch",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify for successful move commitment",
            "file": "verify1-1.sh",
            "hint": "Please make sure you have completed the required actions.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": ["git/branch"]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["xiaoshengyunan"],
  "license": {
    "name": "CC-BY-4.0",
    "url": "https://github.com/30-seconds/30-seconds-of-git/blob/master/LICENSE",
    "repo": "https://github.com/30-seconds/30-seconds-of-git"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "将提交移动到新分支",
      "description": "Git是一个强大的版本控制系统，它允许开发者跟踪对其代码库所做的更改。Git的一个有用特性是能够将提交从一个分支移动到另一个分支。当你意识到你在主分支上所做的某些更改应该在一个单独的分支上进行时，这会很有帮助。在这个实验中，你将学习如何将提交从主分支移动到一个新分支。",
      "meta": {
        "title": "在Git中把提交移动到新分支",
        "description": "了解如何在强大的版本控制系统Git中，将提交从主分支移动到新分支。",
        "keywords": "版本控制, Git实验, 分支, Git, 提交, 主分支, Git游乐场"
      },
      "details": {
        "steps": [
          {
            "title": "将提交移动到新分支",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "验证提交移动是否成功",
                "file": "verify1-1.sh",
                "hint": "请确保你已完成所需操作。"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Mover commits a una nueva rama",
      "description": "Git es un sistema de control de versiones poderoso que permite a los desarrolladores llevar un registro de los cambios realizados en su repositorio de código. Una de las características útiles de Git es la capacidad de mover commits de una rama a otra. Esto puede ser útil cuando te das cuenta de que algunos cambios que hiciste en la rama master deberían haber sido hechos en una rama separada. En este laboratorio, aprenderás cómo mover commits de la rama master a una nueva rama.",
      "meta": {
        "title": "Mover commits a una nueva rama en Git",
        "description": "Aprende cómo mover commits de la rama master a una nueva rama en Git, un sistema de control de versiones poderoso.",
        "keywords": "control de versiones, git labs, rama, git, commit, master, git playground"
      },
      "details": {
        "steps": [
          {
            "title": "Mover commits a una nueva rama",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Verificar el movimiento exitoso de los commits",
                "file": "verify1-1.sh",
                "hint": "Asegúrese de haber completado las acciones requeridas."
              }
            ]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Décaler des commits vers une nouvelle branche",
      "description": "Git est un puissant système de contrôle de versions qui permet aux développeurs de suivre les modifications apportées à leur codebase. L'une des fonctionnalités utiles de Git est la capacité de déplacer des commits d'une branche à une autre. Cela peut être pratique lorsque vous réalisez que certaines modifications que vous avez apportées à la branche master auraient dû être effectuées sur une branche distincte. Dans ce laboratoire, vous allez apprendre à déplacer des commits de la branche master vers une nouvelle branche.",
      "meta": {
        "title": "Décaler des commits vers une nouvelle branche dans Git",
        "description": "Apprenez à déplacer des commits de la branche master vers une nouvelle branche dans Git, un puissant système de contrôle de versions.",
        "keywords": "contrôle de versions, git labs, branche, git, commit, master, git playground"
      },
      "details": {
        "steps": [
          {
            "title": "Décaler des commits vers une nouvelle branche",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Vérifier le déplacement réussi des engagements",
                "file": "verify1-1.sh",
                "hint": "Veuillez vous assurer d'avoir effectué les actions requises."
              }
            ]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Commits zu einem neuen Branch verschieben",
      "description": "Git ist ein leistungsstarkes Versionskontrollsystem, das es Entwicklern ermöglicht, die Änderungen an ihrer Codebasis zu verfolgen. Eine nützliche Funktion von Git ist die Möglichkeit, Commits von einem Branch zu einem anderen zu verschieben. Dies kann hilfreich sein, wenn Sie erkennen, dass einige Änderungen, die Sie am master-Branch vorgenommen haben, an einem separaten Branch vorgenommen werden sollten. In diesem Lab werden Sie lernen, wie Sie Commits vom master-Branch zu einem neuen Branch verschieben.",
      "meta": {
        "title": "Commits zu einem neuen Branch in Git verschieben",
        "description": "Lernen Sie, wie Sie Commits vom master-Branch zu einem neuen Branch in Git, einem leistungsstarken Versionskontrollsystem, verschieben.",
        "keywords": "Versionskontrolle, Git Labs, Branch, Git, Commit, Master, Git Playground"
      },
      "details": {
        "steps": [
          {
            "title": "Commits zu einem neuen Branch verschieben",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Verifizieren Sie das erfolgreiche Verschieben des Commitments",
                "file": "verify1-1.sh",
                "hint": "Bitte stellen Sie sicher, dass Sie die erforderlichen Aktionen abgeschlossen haben."
              }
            ]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "コミットを新しいブランチに移動させる",
      "description": "Git は、開発者がコードベースに対して行った変更を追跡することができる強力なバージョン管理システムです。Git の便利な機能の 1 つは、コミットを 1 つのブランチから別のブランチに移動させる機能です。`master` ブランチに対して行った変更の一部が別のブランチで行われるべきだったことに気付いた場合、これは役立ちます。この実験では、`master` ブランチからのコミットを新しいブランチに移動させる方法を学びます。",
      "meta": {
        "title": "Git でコミットを新しいブランチに移動させる",
        "description": "強力なバージョン管理システムである Git で、`master` ブランチからのコミットを新しいブランチに移動させる方法を学びましょう。",
        "keywords": "バージョン管理, Git ラボ, ブランチ, Git, コミット, master, Git プレイグラウンド"
      },
      "details": {
        "steps": [
          {
            "title": "コミットを新しいブランチに移動させる",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "移動コミットの成功を確認する",
                "file": "verify1-1.sh",
                "hint": "必要な操作を完了したことを確認してください。"
              }
            ]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Перенос коммитов в новую ветку",
      "description": "Git - это мощная система контроля версий, которая позволяет разработчикам отслеживать изменения в их кодовой базе. Одной из полезных функций Git является возможность перемещать коммиты из одной ветки в другую. Это может быть полезно, если вы понимаете, что некоторые изменения, которые вы внесли в ветку master, должны были быть сделаны на отдельной ветке. В этом лабе вы научитесь перемещать коммиты из ветки master в новую ветку.",
      "meta": {
        "title": "Перенос коммитов в новую ветку в Git",
        "description": "Изучите, как перемещать коммиты из ветки master в новую ветку в Git, мощной системе контроля версий.",
        "keywords": "контроль версий, git лабы, ветка, git, коммит, master, git playground"
      },
      "details": {
        "steps": [
          {
            "title": "Перенос коммитов в новую ветку",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "Проверить успешность переноса коммитов",
                "file": "verify1-1.sh",
                "hint": "Пожалуйста, убедитесь, что вы выполнили все необходимые действия."
              }
            ]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    }
  ]
}
