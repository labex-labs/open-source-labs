{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "challenge",
  "title": "Difference Between Branches",
  "description": "Git is a popular version control system that allows developers to manage their codebase efficiently. One of the essential features of Git is the ability to create and manage branches. Branches allow developers to work on different features or bug fixes simultaneously without interfering with each other's work. However, at some point, you may need to compare the changes between two branches. In this challenge, you will learn how to view the difference between two branches using Git.",
  "meta": {
    "title": "Difference Between Branches: A Git Playground Challenge",
    "description": "Explore the essential Git feature of branch management and learn how to compare changes between branches.",
    "keywords": "branch management, version control, git labs, programming tutorial, git, code comparison, git playground"
  },
  "difficulty": "Beginner",
  "time": 5,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": false,
  "details": {
    "steps": [
      {
        "title": "Difference Between Branches",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify that the difference is displayed",
            "file": "verify1-1.sh",
            "hint": "Please make sure you have completed the required actions.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": ["git/branch"],
        "solutions": ["step1-solution.md"]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md"
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["xiaoshengyunan"],
  "license": {
    "name": "CC-BY-4.0",
    "url": "https://github.com/30-seconds/30-seconds-of-git/blob/master/LICENSE",
    "repo": "https://github.com/30-seconds/30-seconds-of-git"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "分支之间的差异",
      "description": "Git 是一种流行的版本控制系统，它允许开发者高效地管理他们的代码库。Git 的一个基本特性是创建和管理分支的能力。分支使开发者能够同时处理不同的功能或修复漏洞，而不会相互干扰工作。然而，在某些时候，你可能需要比较两个分支之间的差异。在这个挑战中，你将学习如何使用 Git 查看两个分支之间的差异。",
      "meta": {
        "title": "分支之间的差异：Git 实践挑战",
        "description": "探索 Git 中分支管理的重要特性，并学习如何比较分支之间的更改。",
        "keywords": "分支管理, 版本控制, Git 实验室, 编程教程, Git, 代码比较, Git 实践"
      },
      "details": {
        "steps": [
          {
            "title": "分支之间的差异",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "验证是否显示了差异",
                "file": "verify1-1.sh",
                "hint": "请确保你已完成所需操作。"
              }
            ],
            "solutions": ["step1-solution.md"]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Diferencia entre ramas",
      "description": "Git es un sistema de control de versiones popular que permite a los desarrolladores administrar eficientemente su código base. Una de las características esenciales de Git es la capacidad de crear y administrar ramas. Las ramas permiten a los desarrolladores trabajar en diferentes funciones o correcciones de errores simultáneamente sin interferir en el trabajo mutuo. Sin embargo, en algún momento, es posible que necesites comparar los cambios entre dos ramas. En este desafío, aprenderás a ver la diferencia entre dos ramas usando Git.",
      "meta": {
        "title": "Diferencia entre ramas: Un desafío de Git Playground",
        "description": "Explora la característica esencial de Git de gestión de ramas y aprende a comparar cambios entre ramas.",
        "keywords": "gestión de ramas, control de versiones, git labs, tutorial de programación, git, comparación de código, git playground"
      },
      "details": {
        "steps": [
          {
            "title": "Diferencia entre ramas",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Verifica que se muestre la diferencia",
                "file": "verify1-1.sh",
                "hint": "Asegúrate de haber completado las acciones requeridas."
              }
            ],
            "solutions": ["step1-solution.md"]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Différence entre les branches",
      "description": "Git est un système de contrôle de versions populaire qui permet aux développeurs de gérer efficacement leur base de code. L'une des fonctionnalités essentielles de Git est la capacité de créer et de gérer des branches. Les branches permettent aux développeurs de travailler simultanément sur différentes fonctionnalités ou corrections de bogues sans interférer avec le travail les uns des autres. Cependant, à un moment donné, vous devrez peut-être comparer les modifications entre deux branches. Dans ce défi, vous allez apprendre à visualiser la différence entre deux branches à l'aide de Git.",
      "meta": {
        "title": "Différence entre les branches : Un défi sur Git Playground",
        "description": "Explorez la fonction essentielle de gestion de branches de Git et apprenez à comparer les modifications entre les branches.",
        "keywords": "gestion de branches, contrôle de versions, git labs, tutoriel de programmation, git, comparaison de code, git playground"
      },
      "details": {
        "steps": [
          {
            "title": "Différence entre les branches",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Vérifiez que la différence est affichée",
                "file": "verify1-1.sh",
                "hint": "Veuillez vous assurer d'avoir effectué les actions requises."
              }
            ],
            "solutions": ["step1-solution.md"]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Unterschiede zwischen Branches",
      "description": "Git ist ein beliebtes Versionsverwaltungssystem, das es Entwicklern ermöglicht, ihre Codebasis effizient zu verwalten. Eine der wesentlichen Funktionen von Git ist die Möglichkeit, Branches zu erstellen und zu verwalten. Branches ermöglichen es Entwicklern, gleichzeitig an verschiedenen Funktionen oder Bugfixes zu arbeiten, ohne sich gegenseitig zu stören. Zu einem bestimmten Zeitpunkt müssen Sie jedoch möglicherweise die Änderungen zwischen zwei Branches vergleichen. In dieser Herausforderung lernen Sie, wie Sie die Unterschiede zwischen zwei Branches mit Git anzeigen.",
      "meta": {
        "title": "Unterschiede zwischen Branches: Eine Git Playground Herausforderung",
        "description": "Entdecken Sie die wesentliche Git-Funktion der Branch-Verwaltung und lernen Sie, wie Sie Änderungen zwischen Branches vergleichen.",
        "keywords": "Branch-Verwaltung, Versionskontrolle, Git Labs, Programmier-Tutorial, Git, Code-Vergleich, Git Playground"
      },
      "details": {
        "steps": [
          {
            "title": "Unterschiede zwischen Branches",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Verifizieren Sie, dass der Unterschied angezeigt wird",
                "file": "verify1-1.sh",
                "hint": "Bitte stellen Sie sicher, dass Sie die erforderlichen Aktionen abgeschlossen haben."
              }
            ],
            "solutions": ["step1-solution.md"]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "ブランチ間の違い",
      "description": "Gitは、開発者がコードベースを効率的に管理できる人気のあるバージョン管理システムです。Gitの重要な機能の1つは、ブランチを作成して管理する機能です。ブランチを使うことで、開発者は同時に異なる機能やバグ修正作業を行うことができ、お互いの作業に干渉することなく進めることができます。ただし、ある時点では、2つのブランチ間の変更を比較する必要がある場合があります。このチャレンジでは、Gitを使って2つのブランチ間の違いを表示する方法を学びます。",
      "meta": {
        "title": "ブランチ間の違い：Gitプレイグラウンドチャレンジ",
        "description": "ブランチ管理の重要なGit機能を探り、ブランチ間の変更を比較する方法を学びましょう。",
        "keywords": "ブランチ管理, バージョン管理, Gitラボ, プログラミングチュートリアル, Git, コード比較, Gitプレイグラウンド"
      },
      "details": {
        "steps": [
          {
            "title": "ブランチ間の違い",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "差分が表示されていることを確認する",
                "file": "verify1-1.sh",
                "hint": "必要な操作を完了していることを確認してください。"
              }
            ],
            "solutions": ["step1-solution.md"]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Различия между ветками",
      "description": "Git - это популярная система контроля версий, которая позволяет разработчикам эффективно управлять их кодовой базой. Одной из основных функций Git является возможность создавать и управлять ветками. Ветки позволяют разработчикам работать одновременно над разными функциями или исправлениями ошибок, не нарушая при этом работу друг друга. Однако, в какой-то момент вам может потребоваться сравнить изменения между двумя ветками. В этом испытании вы научитесь сравнивать различия между двумя ветками с использованием Git.",
      "meta": {
        "title": "Различия между ветками: вызов для Git Playground",
        "description": "Изучите важную функцию Git по управлению ветками и узнайте, как сравнивать изменения между ветками.",
        "keywords": "управление ветками, контроль версий, git labs, учебник по программированию, git, сравнение кода, git playground"
      },
      "details": {
        "steps": [
          {
            "title": "Различия между ветками",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "Проверьте, что различия отображаются",
                "file": "verify1-1.sh",
                "hint": "Пожалуйста, убедитесь, что вы выполнили требуемые действия."
              }
            ],
            "solutions": ["step1-solution.md"]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    }
  ]
}
