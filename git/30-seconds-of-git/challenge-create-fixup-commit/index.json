{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "challenge",
  "title": "Create a Fixup Commit",
  "description": "In Git, a fixup commit is a special type of commit that is used to fix a previous commit. It is typically used when you want to make a small change to a commit that has already been made, without having to create a new commit. Fixup commits are especially useful when you are working on a large project with many contributors, as they allow you to make small changes without disrupting the work of others.",
  "meta": {
    "title": "Create a Fixup Commit: Streamlining Git Workflow",
    "description": "Learn how to create a fixup commit in Git to fix previous commits without disrupting project collaboration.",
    "keywords": "rebase, version control, git labs, git, collaboration, git playground, fixup commit"
  },
  "difficulty": "Intermediate",
  "time": 7,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": false,
  "details": {
    "steps": [
      {
        "title": "Create a Fixup Commit",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify for successful creation",
            "file": "verify1-1.sh",
            "hint": "Please make sure you have completed the required actions.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [],
        "solutions": ["step1-solution.md"]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md"
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["xiaoshengyunan"],
  "license": {
    "name": "CC-BY-4.0",
    "url": "https://github.com/30-seconds/30-seconds-of-git/blob/master/LICENSE",
    "repo": "https://github.com/30-seconds/30-seconds-of-git"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "创建修正提交",
      "description": "在 Git 中，修正提交是一种特殊类型的提交，用于修复先前的提交。当你想要对已有的提交进行小的更改，而无需创建新的提交时，通常会使用它。当你在一个有许多贡献者的大型项目中工作时，修正提交特别有用，因为它们允许你进行小的更改而不会干扰其他人的工作。",
      "meta": {
        "title": "创建修正提交：简化 Git 工作流程",
        "description": "学习如何在 Git 中创建修正提交，以修复先前的提交而不干扰项目协作。",
        "keywords": "变基、版本控制、git 实验室、git、协作、git 游乐场、修正提交"
      },
      "details": {
        "steps": [
          {
            "title": "创建修正提交",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "验证创建是否成功",
                "file": "verify1-1.sh",
                "hint": "请确保你已完成所需操作。"
              }
            ],
            "solutions": ["step1-solution.md"]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Crear un commit de corrección",
      "description": "En Git, un commit de corrección es un tipo especial de commit que se utiliza para corregir un commit anterior. Por lo general, se utiliza cuando quieres hacer un pequeño cambio a un commit que ya ha sido realizado, sin tener que crear un nuevo commit. Los commits de corrección son especialmente útiles cuando estás trabajando en un proyecto grande con muchos colaboradores, ya que te permiten hacer pequeños cambios sin interrumpir el trabajo de los demás.",
      "meta": {
        "title": "Crear un commit de corrección: Simplificando el flujo de trabajo de Git",
        "description": "Aprende cómo crear un commit de corrección en Git para corregir commits anteriores sin interrumpir la colaboración en el proyecto.",
        "keywords": "rebase, control de versiones, git labs, git, colaboración, git playground, commit de corrección"
      },
      "details": {
        "steps": [
          {
            "title": "Crear un commit de corrección",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Verificar la creación exitosa",
                "file": "verify1-1.sh",
                "hint": "Asegúrese de haber completado las acciones requeridas."
              }
            ],
            "solutions": ["step1-solution.md"]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Créer un commit de correction",
      "description": "En Git, un commit de correction est un type spécial de commit utilisé pour corriger un commit précédent. Il est généralement utilisé lorsque vous voulez apporter une petite modification à un commit déjà effectué, sans avoir à créer un nouveau commit. Les commits de correction sont particulièrement utiles lorsque vous travaillez sur un grand projet avec de nombreux contributeurs, car ils vous permettent d'apporter de petites modifications sans perturber le travail des autres.",
      "meta": {
        "title": "Créer un commit de correction : Rationaliser le flux de travail Git",
        "description": "Découvrez comment créer un commit de correction dans Git pour corriger les commits précédents sans perturber la collaboration sur le projet.",
        "keywords": "rebase, contrôle de version, git labs, git, collaboration, git playground, commit de correction"
      },
      "details": {
        "steps": [
          {
            "title": "Créer un commit de correction",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Vérifier la création réussie",
                "file": "verify1-1.sh",
                "hint": "Veuillez vous assurer d'avoir effectué les actions requises."
              }
            ],
            "solutions": ["step1-solution.md"]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Erstellen eines Fixup-Commits",
      "description": "In Git ist ein Fixup-Commit ein spezieller Typ von Commit, der verwendet wird, um einen früheren Commit zu beheben. Es wird normalerweise verwendet, wenn Sie eine kleine Änderung an einem bereits vorhandenen Commit vornehmen möchten, ohne einen neuen Commit erstellen zu müssen. Fixup-Commits sind besonders nützlich, wenn Sie an einem großen Projekt mit vielen Mitwirkenden arbeiten, da Sie so kleine Änderungen vornehmen können, ohne die Arbeit anderer zu stören.",
      "meta": {
        "title": "Erstellen eines Fixup-Commits: Optimierung des Git-Workflows",
        "description": "Lernen Sie, wie Sie in Git einen Fixup-Commit erstellen, um frühere Commits zu beheben, ohne die Projektkooperation zu stören.",
        "keywords": "Rebase, Versionskontrolle, Git Labs, Git, Zusammenarbeit, Git Playground, Fixup-Commit"
      },
      "details": {
        "steps": [
          {
            "title": "Erstellen eines Fixup-Commits",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Verifizieren der erfolgreichen Erstellung",
                "file": "verify1-1.sh",
                "hint": "Bitte stellen Sie sicher, dass Sie die erforderlichen Aktionen abgeschlossen haben."
              }
            ],
            "solutions": ["step1-solution.md"]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "fixup コミットを作成する",
      "description": "Git では、fixup コミットは、以前のコミットを修正するために使用される特殊な種類のコミットです。これは、既に作成されたコミットに小さな変更を加えたい場合に使用され、新しいコミットを作成する必要がない場合に便利です。fixup コミットは、多くの貢献者が参加する大規模なプロジェクトで作業している場合に特に役立ち、他の人の作業を混乱させることなく小さな変更を加えることができます。",
      "meta": {
        "title": "fixup コミットを作成する：Git ワークフローの効率化",
        "description": "Git で fixup コミットを作成して、プロジェクトのコラボレーションを混乱させることなく以前のコミットを修正する方法を学びましょう。",
        "keywords": "rebase、バージョン管理、Git ラボ、Git、コラボレーション、Git プレイグラウンド、fixup コミット"
      },
      "details": {
        "steps": [
          {
            "title": "fixup コミットを作成する",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "正常に作成されたことを確認する",
                "file": "verify1-1.sh",
                "hint": "必要な操作を完了したことを確認してください。"
              }
            ],
            "solutions": ["step1-solution.md"]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Создать фиксационный коммит",
      "description": "В Git фиксационный коммит - это особый тип коммита, который используется для исправления предыдущего коммита. Он обычно используется, когда вы хотите внести небольшое изменение в уже созданный коммит, не создавая при этом новый коммит. Фиксационные коммиты особенно полезны, когда вы работаете над большим проектом с множеством участников, так как они позволяют внести небольшие изменения без вмешательства в работу других.",
      "meta": {
        "title": "Создать фиксационный коммит: упрощение рабочего процесса Git",
        "description": "Изучите, как создать фиксационный коммит в Git для исправления предыдущих коммитов без нарушения сотрудничества в проекте.",
        "keywords": "rebase, управление версиями, git labs, git, сотрудничество, git playground, фиксационный коммит"
      },
      "details": {
        "steps": [
          {
            "title": "Создать фиксационный коммит",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "Проверить успешное создание",
                "file": "verify1-1.sh",
                "hint": "Пожалуйста, убедитесь, что вы выполнили все необходимые действия."
              }
            ],
            "solutions": ["step1-solution.md"]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    }
  ]
}
