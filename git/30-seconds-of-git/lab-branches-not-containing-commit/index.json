{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Find Branches Not Containing a Commit",
  "description": "Git is a popular version control system that allows developers to track changes in their codebase. One of the useful features of Git is the ability to create branches, which are essentially separate copies of the codebase that can be modified independently. However, sometimes it can be difficult to keep track of which branches contain certain commits. In this lab, you will learn how to find branches that do not contain a specific commit.",
  "meta": {
    "title": "Git Branch Management | Version Control Tutorial",
    "description": "Learn how to find Git branches that do not contain a specific commit. Improve your version control skills with this comprehensive Git tutorial.",
    "keywords": "Git, version control, branch management, commit tracking, code repository, software development"
  },
  "difficulty": "Beginner",
  "time": 5,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Find Branches Not Containing a Commit",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify if found successfully",
            "file": "verify1-1.sh",
            "hint": "Please make sure you have completed the required actions.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": []
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["xiaoshengyunan"],
  "license": {
    "name": "CC-BY-4.0",
    "url": "https://github.com/30-seconds/30-seconds-of-git/blob/master/LICENSE",
    "repo": "https://github.com/30-seconds/30-seconds-of-git"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "查找不包含特定提交的分支",
      "description": "Git 是一个流行的版本控制系统，它允许开发者跟踪其代码库中的更改。Git 的一个实用功能是创建分支的能力，分支本质上是代码库的独立副本，可以独立修改。然而，有时很难跟踪哪些分支包含特定的提交。在本实验中，你将学习如何找到不包含特定提交的分支。",
      "meta": {
        "title": "Git 分支管理 | 版本控制教程",
        "description": "学习如何找到不包含特定提交的 Git 分支。通过这个全面的 Git 教程提升你的版本控制技能。",
        "keywords": "Git, 版本控制，分支管理，提交跟踪，代码仓库，软件开发"
      },
      "details": {
        "steps": [
          {
            "title": "查找不包含特定提交的分支",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "验证是否成功找到",
                "file": "verify1-1.sh",
                "hint": "请确保你已完成所需操作。"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Encontrar ramas que no contienen un commit",
      "description": "Git es un sistema de control de versiones popular que permite a los desarrolladores rastrear los cambios en su repositorio de código. Una de las características útiles de Git es la capacidad de crear ramas, que son esencialmente copias separadas del repositorio de código que se pueden modificar de manera independiente. Sin embargo, a veces puede ser difícil de seguir el rastro de qué ramas contienen ciertos commits. En este laboratorio, aprenderás a encontrar las ramas que no contienen un commit específico.",
      "meta": {
        "title": "Gestión de ramas de Git | Tutorial de control de versiones",
        "description": "Aprende a encontrar las ramas de Git que no contienen un commit específico. Mejora tus habilidades de control de versiones con este completo tutorial de Git.",
        "keywords": "Git, control de versiones, gestión de ramas, seguimiento de commits, repositorio de código, desarrollo de software"
      },
      "details": {
        "steps": [
          {
            "title": "Encontrar ramas que no contienen un commit",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Verificar si se encontró con éxito",
                "file": "verify1-1.sh",
                "hint": "Asegúrese de haber completado las acciones requeridas."
              }
            ]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Trouver les branches ne contenant pas un commit",
      "description": "Git est un système de contrôle de versions populaire qui permet aux développeurs de suivre les modifications de leur base de code. L'une des fonctionnalités utiles de Git est la capacité de créer des branches, qui sont essentiellement des copies séparées de la base de code qui peuvent être modifiées indépendamment. Cependant, parfois il peut être difficile de suivre quelles branches contiennent certaines commits. Dans ce laboratoire, vous allez apprendre à trouver les branches qui ne contiennent pas un commit spécifique.",
      "meta": {
        "title": "Gestion des branches Git | Tutoriel de contrôle de versions",
        "description": "Apprenez à trouver les branches Git qui ne contiennent pas un commit spécifique. Améliorez vos compétences en contrôle de versions avec ce tutoriel Git complet.",
        "keywords": "Git, contrôle de versions, gestion des branches, suivi des commits, référentiel de code, développement logiciel"
      },
      "details": {
        "steps": [
          {
            "title": "Trouver les branches ne contenant pas un commit",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Vérifier si la recherche a réussi",
                "file": "verify1-1.sh",
                "hint": "Veuillez vous assurer d'avoir effectué les actions requises."
              }
            ]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Branches finden, die einen Commit nicht enthalten",
      "description": "Git ist ein beliebtes Versionsverwaltungssystem, das es Entwicklern ermöglicht, Änderungen in ihrer Codebasis zu verfolgen. Eine nützliche Funktion von Git ist die Möglichkeit, Branches zu erstellen, die im Wesentlichen separate Kopien der Codebasis sind, die unabhängig voneinander modifiziert werden können. Manchmal kann es jedoch schwierig sein, zu verfolgen, welche Branches bestimmte Commits enthalten. In diesem Lab werden Sie lernen, wie Sie Branches finden, die einen bestimmten Commit nicht enthalten.",
      "meta": {
        "title": "Git-Branch-Verwaltung | Versionskontrolltutorial",
        "description": "Lernen Sie, wie Sie Git-Branches finden, die einen bestimmten Commit nicht enthalten. Verbessern Sie Ihre Versionskontrollfähigkeiten mit diesem umfassenden Git-Tutorial.",
        "keywords": "Git, Versionskontrolle, Branch-Verwaltung, Commit-Verfolgung, Code-Repository, Softwareentwicklung"
      },
      "details": {
        "steps": [
          {
            "title": "Branches finden, die einen Commit nicht enthalten",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Überprüfen, ob erfolgreich gefunden",
                "file": "verify1-1.sh",
                "hint": "Bitte stellen Sie sicher, dass Sie die erforderlichen Aktionen abgeschlossen haben."
              }
            ]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "特定のコミットを含まないブランチを見つける",
      "description": "Git は、開発者がコードベースの変更を追跡できる人気のあるバージョン管理システムです。Git の便利な機能の 1 つは、ブランチを作成できることです。ブランチは、基本的に独立して変更できるコードベースの別個のコピーです。ただし、特定のコミットが含まれているブランチを追跡するのは難しい場合があります。この実験では、特定のコミットを含まないブランチを見つける方法を学びます。",
      "meta": {
        "title": "Git ブランチ管理 | バージョン管理チュートリアル",
        "description": "特定のコミットを含まない Git ブランチを見つける方法を学びましょう。この包括的な Git チュートリアルでバージョン管理スキルを向上させましょう。",
        "keywords": "Git, バージョン管理，ブランチ管理，コミット追跡，コードリポジトリ，ソフトウェア開発"
      },
      "details": {
        "steps": [
          {
            "title": "特定のコミットを含まないブランチを見つける",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "正常に見つかったことを確認する",
                "file": "verify1-1.sh",
                "hint": "必要な操作を完了していることを確認してください。"
              }
            ]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Найти ветки, не содержащие коммит",
      "description": "Git - это популярная система контроля версий, которая позволяет разработчикам отслеживать изменения в их кодовой базе. Одной из полезных функций Git является возможность создавать ветки, которые по существу представляют собой отдельные копии кодовой базы, которые можно изменять независимо. Однако, иногда может быть трудно отслеживать, какие ветки содержат определенные коммиты. В этом лабе вы научитесь искать ветки, которые не содержат определенный коммит.",
      "meta": {
        "title": "Управление ветками Git | Руководство по контролю версий",
        "description": "Изучите, как найти ветки Git, которые не содержат определенный коммит. Повысьте свои навыки контроля версий с помощью этого полного руководства по Git.",
        "keywords": "Git, контроль версий, управление ветками, отслеживание коммитов, репозиторий кода, разработка программного обеспечения"
      },
      "details": {
        "steps": [
          {
            "title": "Найти ветки, не содержащие коммит",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "Проверить, найдено ли успешно",
                "file": "verify1-1.sh",
                "hint": "Пожалуйста, убедитесь, что вы выполнили все необходимые действия."
              }
            ]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    },
    {
      "lang": "ko",
      "title": "커밋을 포함하지 않는 브랜치 찾기",
      "description": "Git 은 개발자가 코드베이스의 변경 사항을 추적할 수 있도록 하는 인기 있는 버전 관리 시스템입니다. Git 의 유용한 기능 중 하나는 브랜치를 생성하는 기능입니다. 브랜치는 기본적으로 독립적으로 수정할 수 있는 코드베이스의 별도 복사본입니다. 그러나 특정 커밋을 포함하는 브랜치를 추적하는 것이 어려울 수 있습니다. 이 랩에서는 특정 커밋을 포함하지 않는 브랜치를 찾는 방법을 배웁니다.",
      "meta": {
        "title": "Git 브랜치 관리 | 버전 관리 튜토리얼",
        "description": "특정 커밋을 포함하지 않는 Git 브랜치를 찾는 방법을 알아보세요. 이 포괄적인 Git 튜토리얼을 통해 버전 관리 기술을 향상시키세요.",
        "keywords": "Git, 버전 관리, 브랜치 관리, 커밋 추적, 코드 저장소, 소프트웨어 개발, 깃 브랜치, 깃 커밋, 깃 튜토리얼"
      },
      "details": {
        "steps": [
          {
            "title": "커밋을 포함하지 않는 브랜치 찾기",
            "text": "ko/step1.md",
            "verify": [
              {
                "name": "성공적으로 찾았는지 확인",
                "file": "verify1-1.sh",
                "hint": "필수 작업을 완료했는지 확인하십시오."
              }
            ]
          }
        ],
        "intro": {
          "text": "ko/intro.md",
          "title": "소개"
        },
        "finish": {
          "text": "ko/finish.md",
          "title": "요약"
        }
      }
    },
    {
      "lang": "pt",
      "title": "Encontrar Branches que Não Contêm um Commit",
      "description": "Git é um sistema de controle de versão popular que permite aos desenvolvedores rastrear as alterações em seu código-base. Uma das funcionalidades úteis do Git é a capacidade de criar branches (ramificações), que são essencialmente cópias separadas do código-base que podem ser modificadas independentemente. No entanto, às vezes pode ser difícil acompanhar quais branches contêm determinados commits. Neste laboratório, você aprenderá como encontrar branches que não contêm um commit específico.",
      "meta": {
        "title": "Gerenciamento de Branches Git | Tutorial de Controle de Versão",
        "description": "Aprenda como encontrar branches Git que não contêm um commit específico. Melhore suas habilidades de controle de versão com este tutorial abrangente de Git.",
        "keywords": "Git, controle de versão, gerenciamento de branch, rastreamento de commit, repositório de código, desenvolvimento de software, branches git, commits git"
      },
      "details": {
        "steps": [
          {
            "title": "Encontrar Branches que Não Contêm um Commit",
            "text": "pt/step1.md",
            "verify": [
              {
                "name": "Verificar se encontrado com sucesso",
                "file": "verify1-1.sh",
                "hint": "Certifique-se de ter concluído as ações necessárias."
              }
            ]
          }
        ],
        "intro": {
          "text": "pt/intro.md",
          "title": "Introdução"
        },
        "finish": {
          "text": "pt/finish.md",
          "title": "Resumo"
        }
      }
    }
  ]
}
