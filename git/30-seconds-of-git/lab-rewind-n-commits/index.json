{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Reverting Git Commits: A Powerful Technique",
  "description": "Git is a powerful tool that allows developers to track changes to their codebase. One of the useful features of Git is the ability to rewind commits. This can be helpful when you need to undo changes or revert to a previous version of your code.",
  "meta": {
    "title": "Git Fundamentals | Rewind Commits",
    "description": "Learn how to use Git to rewind commits and restore your codebase to a previous version. Explore the powerful features of Git for effective version control.",
    "keywords": "Git, version control, rewind commits, undo changes, code restoration"
  },
  "difficulty": "Beginner",
  "time": 5,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Rewind Commits",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify Git Commit History Does Not Contain Added file2.txt",
            "file": "verify1-1.sh",
            "hint": "Please make sure you have completed the required actions.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": ["git/commit"]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["xiaoshengyunan"],
  "license": {
    "name": "CC-BY-4.0",
    "url": "https://github.com/30-seconds/30-seconds-of-git/blob/master/LICENSE",
    "repo": "https://github.com/30-seconds/30-seconds-of-git"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "回退 Git 提交：一项强大的技术",
      "description": "Git 是一个强大的工具，它允许开发者跟踪其代码库的更改。Git 的一个有用特性是能够回退提交。当你需要撤销更改或恢复到代码的先前版本时，这会很有帮助。",
      "meta": {
        "title": "Git 基础 | 回退提交",
        "description": "学习如何使用 Git 来回退提交并将你的代码库恢复到先前版本。探索 Git 的强大功能以进行有效的版本控制。",
        "keywords": "Git, 版本控制，回退提交，撤销更改，代码恢复"
      },
      "details": {
        "steps": [
          {
            "title": "回退提交",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "验证 Git 提交历史记录中不包含 Added file2.txt",
                "file": "verify1-1.sh",
                "hint": "请确保你已完成所需操作。"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Revertir commits de Git: Una técnica poderosa",
      "description": "Git es una herramienta poderosa que permite a los desarrolladores rastrear los cambios en su repositorio de código. Una de las características útiles de Git es la capacidad de retroceder en los commits. Esto puede ser útil cuando necesitas deshacer cambios o revertir a una versión anterior de tu código.",
      "meta": {
        "title": "Fundamentos de Git | Retroceder commits",
        "description": "Aprende cómo usar Git para retroceder en los commits y restaurar tu repositorio de código a una versión anterior. Explora las poderosas características de Git para un control de versiones efectivo.",
        "keywords": "Git, control de versiones, retroceder commits, deshacer cambios, restauración de código"
      },
      "details": {
        "steps": [
          {
            "title": "Retroceder en los commits",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Verificar que el historial de commits de Git no contenga file2.txt agregado",
                "file": "verify1-1.sh",
                "hint": "Asegúrese de haber completado las acciones requeridas."
              }
            ]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Revenir en arrière sur les commits Git : une technique puissante",
      "description": "Git est un outil puissant qui permet aux développeurs de suivre les modifications apportées à leur base de code. L'une des fonctionnalités utiles de Git est la possibilité de remonter les commits. Cela peut être utile lorsque vous avez besoin d'annuler des modifications ou de revenir à une version précédente de votre code.",
      "meta": {
        "title": "Fondamentaux de Git | Revenir en arrière sur les commits",
        "description": "Découvrez comment utiliser Git pour remonter les commits et restaurer votre base de code à une version précédente. Explorez les fonctionnalités puissantes de Git pour un contrôle de version efficace.",
        "keywords": "Git, contrôle de version, remonter les commits, annuler des modifications, restauration du code"
      },
      "details": {
        "steps": [
          {
            "title": "Remonter les commits",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Vérifiez que l'historique des commits Git ne contient pas file2.txt ajouté",
                "file": "verify1-1.sh",
                "hint": "Veuillez vous assurer d'avoir effectué les actions requises."
              }
            ]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Git-Commits rückgängig machen: Eine leistungsstarke Technik",
      "description": "Git ist ein leistungsstarkes Tool, das Entwicklern ermöglicht, Änderungen an ihrer Codebasis zu verfolgen. Eine nützliche Funktion von Git ist die Möglichkeit, Commits rückgängig zu machen. Dies kann hilfreich sein, wenn Sie Änderungen rückgängig machen oder zu einer früheren Version Ihres Codes zurückkehren müssen.",
      "meta": {
        "title": "Git-Grundlagen | Commits rückgängig machen",
        "description": "Lernen Sie, wie Sie Git verwenden, um Commits rückgängig zu machen und Ihre Codebasis auf eine frühere Version zurückzusetzen. Entdecken Sie die leistungsstarken Funktionen von Git für eine effektive Versionsverwaltung.",
        "keywords": "Git, Versionsverwaltung, Commits rückgängig machen, Änderungen rückgängig machen, Code-Wiederherstellung"
      },
      "details": {
        "steps": [
          {
            "title": "Commits rückgängig machen",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Verifizieren Sie, dass der Git-Commit-Verlauf die Datei file2.txt nicht enthält",
                "file": "verify1-1.sh",
                "hint": "Bitte stellen Sie sicher, dass Sie die erforderlichen Aktionen abgeschlossen haben."
              }
            ]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "Git コミットの戻す：強力なテクニック",
      "description": "Git は、開発者がコードベースの変更を追跡できる強力なツールです。Git の便利な機能の 1 つは、コミットを巻き戻す機能です。これは、変更を取り消す必要がある場合や、以前のコードバージョンに戻す必要がある場合に役立ちます。",
      "meta": {
        "title": "Git 基本 | コミットを巻き戻す",
        "description": "Git を使ってコミットを巻き戻し、コードベースを以前のバージョンに戻す方法を学びましょう。効果的なバージョン管理のための Git の強力な機能を探求しましょう。",
        "keywords": "Git, バージョン管理，コミットを巻き戻す，変更を取り消す，コードの復元"
      },
      "details": {
        "steps": [
          {
            "title": "コミットを巻き戻す",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "Git コミット履歴に追加された file2.txt が含まれていないことを確認する",
                "file": "verify1-1.sh",
                "hint": "必要な操作を完了していることを確認してください。"
              }
            ]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Откат коммитов Git: мощный метод",
      "description": "Git - это мощный инструмент, который позволяет разработчикам отслеживать изменения в их кодовой базе. Одной из полезных функций Git является возможность откатить коммиты. Это может быть полезно, когда вам нужно отменить изменения или вернуться к предыдущей версии вашего кода.",
      "meta": {
        "title": "Основы Git | Откат коммитов",
        "description": "Изучите, как использовать Git для отката коммитов и восстановления вашей кодовой базы к предыдущей версии. Изучите мощные функции Git для эффективного контроля версий.",
        "keywords": "Git, контроль версий, откат коммитов, отменить изменения, восстановление кода"
      },
      "details": {
        "steps": [
          {
            "title": "Откат коммитов",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "Проверить, что история коммитов Git не содержит добавленного файла file2.txt",
                "file": "verify1-1.sh",
                "hint": "Пожалуйста, убедитесь, что вы выполнили требуемые действия."
              }
            ]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    },
    {
      "lang": "ko",
      "title": "Git 커밋 되돌리기: 강력한 기술",
      "description": "Git 은 개발자가 코드베이스의 변경 사항을 추적할 수 있게 해주는 강력한 도구입니다. Git 의 유용한 기능 중 하나는 커밋을 되돌리는 기능입니다. 이는 변경 사항을 취소하거나 이전 버전의 코드로 되돌려야 할 때 유용할 수 있습니다.",
      "meta": {
        "title": "Git 기본 | 커밋 되돌리기 방법",
        "description": "Git 을 사용하여 커밋을 되돌리고 코드베이스를 이전 버전으로 복원하는 방법을 알아보세요. 효과적인 버전 관리를 위한 Git 의 강력한 기능을 살펴보세요.",
        "keywords": "Git, 버전 관리, 커밋 되돌리기, 변경 사항 취소, 코드 복원, Git reset"
      },
      "details": {
        "steps": [
          {
            "title": "커밋 되돌리기",
            "text": "ko/step1.md",
            "verify": [
              {
                "name": "Git 커밋 기록에 file2.txt 가 포함되어 있지 않은지 확인",
                "file": "verify1-1.sh",
                "hint": "필수 작업을 완료했는지 확인하십시오."
              }
            ]
          }
        ],
        "intro": {
          "text": "ko/intro.md",
          "title": "소개"
        },
        "finish": {
          "text": "ko/finish.md",
          "title": "요약"
        }
      }
    },
    {
      "lang": "pt",
      "title": "Reverter Commits Git: Uma Técnica Poderosa",
      "description": "Git é uma ferramenta poderosa que permite aos desenvolvedores rastrear as alterações em seu código-base. Uma das funcionalidades úteis do Git é a capacidade de retroceder (rewind) commits. Isso pode ser útil quando você precisa desfazer alterações ou reverter para uma versão anterior do seu código.",
      "meta": {
        "title": "Fundamentos do Git | Reverter Commits",
        "description": "Aprenda como usar o Git para reverter commits e restaurar seu código-base para uma versão anterior. Explore as poderosas funcionalidades do Git para um controle de versão eficaz.",
        "keywords": "Git, controle de versão, reverter commits, desfazer alterações, restauração de código"
      },
      "details": {
        "steps": [
          {
            "title": "Retroceder Commits",
            "text": "pt/step1.md",
            "verify": [
              {
                "name": "Verificar se o histórico de commits Git não contém o arquivo file2.txt adicionado",
                "file": "verify1-1.sh",
                "hint": "Por favor, certifique-se de ter concluído as ações necessárias."
              }
            ]
          }
        ],
        "intro": {
          "text": "pt/intro.md",
          "title": "Introdução"
        },
        "finish": {
          "text": "pt/finish.md",
          "title": "Resumo"
        }
      }
    }
  ]
}
