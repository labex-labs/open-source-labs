{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Difference Between Branches",
  "description": "Git is a popular version control system that allows developers to manage their codebase efficiently. One of the essential features of Git is the ability to create and manage branches. Branches allow developers to work on different features or bug fixes simultaneously without interfering with each other's work. However, at some point, you may need to compare the changes between two branches. In this lab, you will learn how to view the difference between two branches using Git.",
  "meta": {
    "title": "Mastering Git Branches: Unveiling the Differences",
    "description": "Explore the power of Git branches and learn how to effectively compare changes between them.",
    "keywords": "software development, version control, git labs, branches, git, code comparison, git playground"
  },
  "difficulty": "Beginner",
  "time": 5,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Difference Between Branches",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify that the difference is displayed",
            "file": "verify1-1.sh",
            "hint": "Please make sure you have completed the required actions.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": []
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["xiaoshengyunan"],
  "license": {
    "name": "CC-BY-4.0",
    "url": "https://github.com/30-seconds/30-seconds-of-git/blob/master/LICENSE",
    "repo": "https://github.com/30-seconds/30-seconds-of-git"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "分支之间的差异",
      "description": "Git 是一个流行的版本控制系统，它允许开发者高效地管理他们的代码库。Git 的一个基本特性是创建和管理分支的能力。分支允许开发者同时处理不同的功能或修复 bug，而不会相互干扰。然而，在某些时候，你可能需要比较两个分支之间的更改。在这个实验中，你将学习如何使用 Git 查看两个分支之间的差异。",
      "meta": {
        "title": "精通 Git 分支：揭示差异",
        "description": "探索 Git 分支的强大功能，并学习如何有效地比较它们之间的更改。",
        "keywords": "软件开发，版本控制，Git 实验，分支，Git, 代码比较，Git 游乐场"
      },
      "details": {
        "steps": [
          {
            "title": "分支之间的差异",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "验证差异是否显示",
                "file": "verify1-1.sh",
                "hint": "请确保你已完成所需操作。"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Diferencia entre ramas",
      "description": "Git es un sistema de control de versiones popular que permite a los desarrolladores administrar eficientemente su repositorio de código. Una de las características esenciales de Git es la capacidad de crear y administrar ramas. Las ramas permiten a los desarrolladores trabajar en diferentes funciones o correcciones de errores simultáneamente sin interferir en el trabajo mutuo. Sin embargo, en algún momento, es posible que necesites comparar los cambios entre dos ramas. En este laboratorio, aprenderás a visualizar la diferencia entre dos ramas usando Git.",
      "meta": {
        "title": "Dominando las ramas de Git: Descubriendo las diferencias",
        "description": "Explora el poder de las ramas de Git y aprende a comparar efectivamente los cambios entre ellas.",
        "keywords": "desarrollo de software, control de versiones, laboratorios de Git, ramas, Git, comparación de código, playground de Git"
      },
      "details": {
        "steps": [
          {
            "title": "Diferencia entre ramas",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Verifica que se muestre la diferencia",
                "file": "verify1-1.sh",
                "hint": "Asegúrate de haber completado las acciones requeridas."
              }
            ]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Différence entre les branches",
      "description": "Git est un système de contrôle de versions populaire qui permet aux développeurs de gérer efficacement leur base de code. L'une des fonctionnalités essentielles de Git est la capacité de créer et de gérer des branches. Les branches permettent aux développeurs de travailler simultanément sur différentes fonctionnalités ou corrections de bogues sans interférer avec le travail les uns des autres. Cependant, à un moment donné, vous devrez peut-être comparer les modifications entre deux branches. Dans ce laboratoire, vous allez apprendre à visualiser la différence entre deux branches à l'aide de Git.",
      "meta": {
        "title": "Maîtriser les branches Git : découvrir les différences",
        "description": "Explorez le pouvoir des branches Git et apprenez à comparer efficacement les modifications entre elles.",
        "keywords": "développement logiciel, contrôle de versions, laboratoires Git, branches, Git, comparaison de code, terrain de jeu Git"
      },
      "details": {
        "steps": [
          {
            "title": "Différence entre les branches",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Vérifiez que la différence est affichée",
                "file": "verify1-1.sh",
                "hint": "Veuillez vous assurer d'avoir effectué les actions requises."
              }
            ]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Unterschied zwischen Branches",
      "description": "Git ist ein beliebtes Versionsverwaltungssystem, das es Entwicklern ermöglicht, ihre Codebasis effizient zu verwalten. Eine der wesentlichen Funktionen von Git ist die Möglichkeit, Branches zu erstellen und zu verwalten. Branches ermöglichen es Entwicklern, gleichzeitig an verschiedenen Funktionen oder Bugfixes zu arbeiten, ohne sich gegenseitig zu stören. Zu einem bestimmten Zeitpunkt müssen Sie jedoch möglicherweise die Änderungen zwischen zwei Branches vergleichen. In diesem Lab werden Sie lernen, wie Sie die Unterschiede zwischen zwei Branches mit Git anzeigen.",
      "meta": {
        "title": "Meisterung von Git-Branches: Entlarvung der Unterschiede",
        "description": "Entdecken Sie die Macht von Git-Branches und lernen Sie, wie Sie Änderungen zwischen ihnen effektiv vergleichen.",
        "keywords": "Softwareentwicklung, Versionskontrolle, Git Labs, Branches, Git, Codevergleich, Git Playground"
      },
      "details": {
        "steps": [
          {
            "title": "Unterschied zwischen Branches",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Verifizieren, dass der Unterschied angezeigt wird",
                "file": "verify1-1.sh",
                "hint": "Bitte stellen Sie sicher, dass Sie die erforderlichen Aktionen abgeschlossen haben."
              }
            ]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "ブランチ間の違い",
      "description": "Git は、開発者がコードベースを効率的に管理できる人気のあるバージョン管理システムです。Git の重要な機能の 1 つは、ブランチを作成して管理する機能です。ブランチを使うことで、開発者は同時に異なる機能やバグ修正作業を行うことができ、お互いの作業に干渉することなく作業を進めることができます。ただし、ある時点では、2 つのブランチ間の変更を比較する必要がある場合があります。この実験では、Git を使って 2 つのブランチ間の違いを表示する方法を学びます。",
      "meta": {
        "title": "Git ブランチをマスターする：違いを明らかにする",
        "description": "Git ブランチの力を探求し、それらの間の変更を効果的に比較する方法を学びましょう。",
        "keywords": "ソフトウェア開発，バージョン管理，git labs, ブランチ，git, コード比較，git playground"
      },
      "details": {
        "steps": [
          {
            "title": "ブランチ間の違い",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "差分が表示されていることを確認する",
                "file": "verify1-1.sh",
                "hint": "必要な操作を完了していることを確認してください。"
              }
            ]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Различия между ветками",
      "description": "Git - это популярная система контроля версий, которая позволяет разработчикам эффективно управлять их кодовой базой. Одной из важнейших функций Git является возможность создания и управления ветками. Ветки позволяют разработчикам работать одновременно над разными функциями или исправлениями ошибок, не нарушая при этом работу друг друга. Однако, в какой-то момент вам может потребоваться сравнить изменения между двумя ветками. В этом практическом занятии вы научитесь сравнивать различия между двумя ветками с использованием Git.",
      "meta": {
        "title": "Мастерство Git веток: раскрытие различий",
        "description": "Изучите мощь Git веток и научитесь эффективно сравнивать изменения между ними.",
        "keywords": "разработка программного обеспечения, контроль версий, git лаборатории, ветки, git, сравнение кода, git playground"
      },
      "details": {
        "steps": [
          {
            "title": "Различия между ветками",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "Проверьте, что различия отображаются",
                "file": "verify1-1.sh",
                "hint": "Пожалуйста, убедитесь, что вы выполнили все необходимые действия."
              }
            ]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    },
    {
      "lang": "ko",
      "title": "브랜치 간의 차이점",
      "description": "Git 은 개발자가 코드베이스를 효율적으로 관리할 수 있도록 해주는 인기 있는 버전 관리 시스템입니다. Git 의 필수 기능 중 하나는 브랜치를 생성하고 관리하는 기능입니다. 브랜치를 사용하면 개발자가 서로의 작업에 간섭하지 않고 동시에 서로 다른 기능이나 버그 수정을 작업할 수 있습니다. 그러나 어느 시점에서는 두 브랜치 간의 변경 사항을 비교해야 할 수 있습니다. 이 랩에서는 Git 을 사용하여 두 브랜치 간의 차이점을 확인하는 방법을 배웁니다.",
      "meta": {
        "title": "Git 브랜치 마스터하기: 차이점 파악",
        "description": "Git 브랜치의 강력함을 탐구하고 브랜치 간의 변경 사항을 효과적으로 비교하는 방법을 알아보세요. Git, 브랜치 비교, 버전 관리",
        "keywords": "소프트웨어 개발, 버전 관리, git 랩, 브랜치, git, 코드 비교, git playground, git 브랜치 비교, git 사용법"
      },
      "details": {
        "steps": [
          {
            "title": "브랜치 간의 차이점",
            "text": "ko/step1.md",
            "verify": [
              {
                "name": "차이점이 표시되었는지 확인",
                "file": "verify1-1.sh",
                "hint": "필수 작업을 완료했는지 확인하십시오."
              }
            ]
          }
        ],
        "intro": {
          "text": "ko/intro.md",
          "title": "소개"
        },
        "finish": {
          "text": "ko/finish.md",
          "title": "요약"
        }
      }
    },
    {
      "lang": "pt",
      "title": "Diferença Entre Branches",
      "description": "Git é um sistema de controle de versão popular que permite aos desenvolvedores gerenciar seu código-fonte de forma eficiente. Uma das funcionalidades essenciais do Git é a capacidade de criar e gerenciar branches (ramificações). As branches permitem que os desenvolvedores trabalhem em diferentes funcionalidades ou correções de bugs simultaneamente, sem interferir no trabalho uns dos outros. No entanto, em algum momento, você pode precisar comparar as alterações entre duas branches. Neste laboratório, você aprenderá como visualizar a diferença entre duas branches usando Git.",
      "meta": {
        "title": "Dominando Branches Git: Revelando as Diferenças",
        "description": "Explore o poder das branches Git e aprenda a comparar efetivamente as alterações entre elas.",
        "keywords": "desenvolvimento de software, controle de versão, git labs, branches, git, comparação de código, git playground, diferenças entre branches git"
      },
      "details": {
        "steps": [
          {
            "title": "Diferença Entre Branches",
            "text": "pt/step1.md",
            "verify": [
              {
                "name": "Verifique se a diferença é exibida",
                "file": "verify1-1.sh",
                "hint": "Certifique-se de ter concluído as ações necessárias."
              }
            ]
          }
        ],
        "intro": {
          "text": "pt/intro.md",
          "title": "Introdução"
        },
        "finish": {
          "text": "pt/finish.md",
          "title": "Resumo"
        }
      }
    }
  ]
}
