{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "challenge",
  "title": "Find Commits that Manipulated a Specific String",
  "description": "Git is a powerful version control system that allows developers to track changes made to their codebase over time. One of the most useful features of Git is the ability to view the history of changes made to a specific file or even a specific line of code. In this challenge, you will learn how to use Git to find all the commits that manipulated a given string.",
  "meta": {
    "title": "Git Playground | Version Control | Commit Tracking",
    "description": "Learn how to use Git, a powerful version control system, to track changes and find all the commits that modified a specific string in your codebase.",
    "keywords": "Git, Version Control, Commit Tracking, Codebase, GitHub"
  },
  "difficulty": "Beginner",
  "time": 5,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": false,
  "details": {
    "steps": [
      {
        "title": "Find Commits that Manipulated a Specific String",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify for successful view",
            "file": "verify1-1.sh",
            "hint": "Please make sure you have completed the required actions.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": ["git/commit"],
        "solutions": ["step1-solution.md"]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md"
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["xiaoshengyunan"],
  "license": {
    "name": "CC-BY-4.0",
    "url": "https://github.com/30-seconds/30-seconds-of-git/blob/master/LICENSE",
    "repo": "https://github.com/30-seconds/30-seconds-of-git"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "查找操作特定字符串的提交记录",
      "description": "Git 是一个强大的版本控制系统，它允许开发者跟踪其代码库随时间的变化。Git 最有用的特性之一是能够查看对特定文件甚至特定代码行所做的更改历史记录。在这个挑战中，你将学习如何使用 Git 来找到所有操作过给定字符串的提交记录。",
      "meta": {
        "title": "Git 演练场 | 版本控制 | 提交记录跟踪",
        "description": "学习如何使用强大的版本控制系统 Git 来跟踪更改，并找到代码库中所有修改特定字符串的提交记录。",
        "keywords": "Git, 版本控制，提交记录跟踪，代码库，GitHub"
      },
      "details": {
        "steps": [
          {
            "title": "查找操作特定字符串的提交记录",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "验证是否成功查看",
                "file": "verify1-1.sh",
                "hint": "请确保你已完成所需操作。"
              }
            ],
            "solutions": ["step1-solution.md"]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Encuentra los commits que manipularon una cadena específica",
      "description": "Git es un sistema de control de versiones poderoso que permite a los desarrolladores rastrear los cambios realizados en su repositorio de código a lo largo del tiempo. Una de las características más útiles de Git es la capacidad de ver el historial de cambios realizados en un archivo específico o incluso en una línea específica de código. En este desafío, aprenderás a usar Git para encontrar todos los commits que manipularon una cadena dada.",
      "meta": {
        "title": "Git Playground | Control de versiones | Seguimiento de commits",
        "description": "Aprende a usar Git, un sistema de control de versiones poderoso, para rastrear cambios y encontrar todos los commits que modificaron una cadena específica en tu repositorio de código.",
        "keywords": "Git, Control de versiones, Seguimiento de commits, Repositorio de código, GitHub"
      },
      "details": {
        "steps": [
          {
            "title": "Encuentra los commits que manipularon una cadena específica",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Verifica la vista exitosa",
                "file": "verify1-1.sh",
                "hint": "Asegúrate de haber completado las acciones requeridas."
              }
            ],
            "solutions": ["step1-solution.md"]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Trouver les commits qui ont modifié une chaîne de caractères spécifique",
      "description": "Git est un puissant système de contrôle de versions qui permet aux développeurs de suivre les modifications apportées à leur base de code au fil du temps. L'une des fonctionnalités les plus utiles de Git est la capacité de visualiser l'historique des modifications apportées à un fichier spécifique ou même à une ligne de code spécifique. Dans ce défi, vous allez apprendre à utiliser Git pour trouver tous les commits qui ont modifié une chaîne de caractères donnée.",
      "meta": {
        "title": "Git Playground | Contrôle de versions | Suivi des commits",
        "description": "Apprenez à utiliser Git, un puissant système de contrôle de versions, pour suivre les modifications et trouver tous les commits qui ont modifié une chaîne de caractères spécifique dans votre base de code.",
        "keywords": "Git, Contrôle de versions, Suivi des commits, Base de code, GitHub"
      },
      "details": {
        "steps": [
          {
            "title": "Trouver les commits qui ont modifié une chaîne de caractères spécifique",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Vérifier pour une vue réussie",
                "file": "verify1-1.sh",
                "hint": "Veuillez vous assurer d'avoir effectué les actions requises."
              }
            ],
            "solutions": ["step1-solution.md"]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Commits finden, die einen bestimmten String manipuliert haben",
      "description": "Git ist ein leistungsstarkes Versionskontrollsystem, das Entwicklern ermöglicht, die Änderungen an ihrer Codebasis im Laufe der Zeit zu verfolgen. Eine der nützlichsten Funktionen von Git ist die Möglichkeit, die Änderungsgeschichte an einer bestimmten Datei oder sogar an einer bestimmten Codezeile anzuzeigen. In dieser Herausforderung lernen Sie, wie Sie Git verwenden, um alle Commits zu finden, die einen angegebenen String manipuliert haben.",
      "meta": {
        "title": "Git Playground | Versionskontrolle | Commit-Verfolgung",
        "description": "Lernen Sie, wie Sie Git, ein leistungsstarkes Versionskontrollsystem, verwenden, um Änderungen zu verfolgen und alle Commits zu finden, die in Ihrer Codebasis einen bestimmten String geändert haben.",
        "keywords": "Git, Versionskontrolle, Commit-Verfolgung, Codebasis, GitHub"
      },
      "details": {
        "steps": [
          {
            "title": "Commits finden, die einen bestimmten String manipuliert haben",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Verifizieren auf erfolgreiche Ansicht",
                "file": "verify1-1.sh",
                "hint": "Bitte stellen Sie sicher, dass Sie die erforderlichen Aktionen abgeschlossen haben."
              }
            ],
            "solutions": ["step1-solution.md"]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "特定の文字列を操作したコミットを見つける",
      "description": "Git は、開発者がコードベースに対して行った変更を時間の経過とともに追跡できる強力なバージョン管理システムです。Git の最も便利な機能の 1 つは、特定のファイルや特定のコード行に対して行われた変更履歴を表示する機能です。このチャレンジでは、与えられた文字列を操作したすべてのコミットを見つけるために Git をどのように使用するかを学びます。",
      "meta": {
        "title": "Git Playground | バージョン管理 | コミット追跡",
        "description": "強力なバージョン管理システムである Git を使って、コードベースの変更を追跡し、特定の文字列を変更したすべてのコミットを見つける方法を学びましょう。",
        "keywords": "Git, バージョン管理，コミット追跡，コードベース，GitHub"
      },
      "details": {
        "steps": [
          {
            "title": "特定の文字列を操作したコミットを見つける",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "正常な表示を確認する",
                "file": "verify1-1.sh",
                "hint": "必要な操作を完了していることを確認してください。"
              }
            ],
            "solutions": ["step1-solution.md"]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Найти коммиты, которые манипулировали определенной строкой",
      "description": "Git - это мощная система контроля версий, которая позволяет разработчикам отслеживать изменения в их кодовой базе с течением времени. Одной из самых полезных функций Git является возможность просматривать историю изменений, внесенных в определенный файл или даже определенную строку кода. В этом испытании вы научитесь использовать Git для поиска всех коммитов, которые манипулировали заданной строкой.",
      "meta": {
        "title": "Git Playground | Контроль версий | Отслеживание коммитов",
        "description": "Изучите, как использовать Git, мощную систему контроля версий, для отслеживания изменений и поиска всех коммитов, которые изменили определенную строку в вашей кодовой базе.",
        "keywords": "Git, Контроль версий, Отслеживание коммитов, Кодовая база, GitHub"
      },
      "details": {
        "steps": [
          {
            "title": "Найти коммиты, которые манипулировали определенной строкой",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "Проверить успешный просмотр",
                "file": "verify1-1.sh",
                "hint": "Пожалуйста, убедитесь, что вы выполнили требуемые действия."
              }
            ],
            "solutions": ["step1-solution.md"]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    }
  ]
}
