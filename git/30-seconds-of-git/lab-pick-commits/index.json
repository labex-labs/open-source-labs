{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Git Cherry-Pick Code Changes",
  "description": "In this lab, you will learn how to use the `git cherry-pick` command to selectively apply changes from one commit to another branch, without merging the entire branch.",
  "meta": {
    "title": "Mastering Git Cherry-Pick: Selectively Apply Code Changes",
    "description": "Learn how to use the powerful Git cherry-pick feature to apply specific code changes to your project without merging entire branches.",
    "keywords": "cherry pick, software development, version control, code changes, git labs, git, git playground"
  },
  "difficulty": "Beginner",
  "time": 5,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Git Cherry-Pick",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify if pick is successful",
            "file": "verify1-1.sh",
            "hint": "Please make sure you have completed the required actions.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": ["git/commit"]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["xiaoshengyunan"],
  "license": {
    "name": "CC-BY-4.0",
    "url": "https://github.com/30-seconds/30-seconds-of-git/blob/master/LICENSE",
    "repo": "https://github.com/30-seconds/30-seconds-of-git"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "Git 挑选提交代码更改",
      "description": "在本次实验中，你将学习如何使用 `git cherry-pick` 命令有选择地将一个提交中的更改应用到另一个分支，而无需合并整个分支。",
      "meta": {
        "title": "掌握 Git 挑选提交：有选择地应用代码更改",
        "description": "学习如何使用强大的 Git 挑选提交功能，在不合并整个分支的情况下将特定代码更改应用到你的项目中。",
        "keywords": "挑选提交，软件开发，版本控制，代码更改，Git 实验室，Git, Git 游乐场"
      },
      "details": {
        "steps": [
          {
            "title": "Git 挑选提交",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "验证挑选提交是否成功",
                "file": "verify1-1.sh",
                "hint": "请确保你已完成所需操作。"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Aplicar cambios de código con Git Cherry-Pick",
      "description": "En este laboratorio, aprenderás cómo usar el comando `git cherry-pick` para aplicar selectivamente cambios de un commit a otra rama, sin fusionar la rama completa.",
      "meta": {
        "title": "Dominando Git Cherry-Pick: Aplicar selectivamente cambios de código",
        "description": "Aprende cómo usar la potente función de Git cherry-pick para aplicar cambios de código específicos a tu proyecto sin fusionar ramas completas.",
        "keywords": "cherry pick, desarrollo de software, control de versiones, cambios de código, laboratorios de Git, Git, Git playground"
      },
      "details": {
        "steps": [
          {
            "title": "Git Cherry-Pick",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Verificar si la selección (cherry-pick) fue exitosa",
                "file": "verify1-1.sh",
                "hint": "Asegúrate de haber completado las acciones requeridas."
              }
            ]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Appliquer des modifications de code avec Git Cherry-Pick",
      "description": "Dans ce laboratoire, vous apprendrez à utiliser la commande `git cherry-pick` pour appliquer sélectivement des modifications d'un commit à une autre branche, sans fusionner toute la branche.",
      "meta": {
        "title": "Maîtriser Git Cherry-Pick : Appliquer sélectivement des modifications de code",
        "description": "Apprenez à utiliser la puissante fonctionnalité Git cherry-pick pour appliquer des modifications de code spécifiques à votre projet sans fusionner des branches entières.",
        "keywords": "cherry pick, développement logiciel, contrôle de version, modifications de code, laboratoires Git, Git, Git playground"
      },
      "details": {
        "steps": [
          {
            "title": "Git Cherry-Pick",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Vérifier si le cherry-pick a réussi",
                "file": "verify1-1.sh",
                "hint": "Veuillez vous assurer que vous avez effectué les actions requises."
              }
            ]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Git Cherry-Pick: Code-Änderungen anwenden",
      "description": "In diesem Lab lernst du, wie du den Befehl `git cherry-pick` verwendest, um Änderungen aus einem Commit gezielt auf einen anderen Branch anzuwenden, ohne den gesamten Branch zusammenzuführen (merge).",
      "meta": {
        "title": "Meisterschaft im Git Cherry-Pick: Selektives Anwenden von Code-Änderungen",
        "description": "Lerne, wie du die leistungsstarke Git Cherry-Pick-Funktion nutzt, um bestimmte Code-Änderungen in deinem Projekt anzuwenden, ohne ganze Branches zusammenzuführen (merge).",
        "keywords": "Cherry Pick, Softwareentwicklung, Versionskontrolle, Code-Änderungen, Git Labs, Git, Git Playground"
      },
      "details": {
        "steps": [
          {
            "title": "Git Cherry-Pick",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Überprüfen, ob das Cherry-Pick erfolgreich war",
                "file": "verify1-1.sh",
                "hint": "Stellen Sie sicher, dass Sie die erforderlichen Aktionen ausgeführt haben."
              }
            ]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "Git でのコード変更のチェリーピック",
      "description": "この実験（Lab）では、`git cherry-pick` コマンドを使って、ブランチ全体をマージすることなく、あるコミットから別のブランチに選択的に変更を適用する方法を学びます。",
      "meta": {
        "title": "Git Cherry-Pick の使い方：選択的にコード変更を適用する",
        "description": "強力な Git の cherry-pick 機能を使って、ブランチ全体をマージすることなく、特定のコード変更をプロジェクトに適用する方法を学びましょう。",
        "keywords": "チェリーピック，ソフトウェア開発，バージョン管理，コード変更，Git 実験（Lab）, Git, Git プレイグラウンド"
      },
      "details": {
        "steps": [
          {
            "title": "Git チェリーピック",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "チェリーピックが成功したかを確認する",
                "file": "verify1-1.sh",
                "hint": "必要な操作をすべて完了していることを確認してください。"
              }
            ]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Выборочное применение изменений кода с помощью Git Cherry-Pick",
      "description": "В этом практическом занятии вы научитесь использовать команду `git cherry-pick` для выборочного применения изменений из одного коммита в другую ветку без объединения всей ветки.",
      "meta": {
        "title": "Освоение Git Cherry-Pick: выборочное применение изменений кода",
        "description": "Узнайте, как использовать мощную функцию Git cherry-pick для применения конкретных изменений кода в вашем проекте без объединения целых веток.",
        "keywords": "cherry pick, разработка ПО, контроль версий, изменения кода, Git-лаборатории, Git, Git Playground"
      },
      "details": {
        "steps": [
          {
            "title": "Git Cherry-Pick",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "Проверить, успешно ли произведен выбор (cherry-pick)",
                "file": "verify1-1.sh",
                "hint": "Убедитесь, что вы выполнили все необходимые действия."
              }
            ]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    }
  ]
}
