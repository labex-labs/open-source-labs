{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "challenge",
  "title": "Discard Uncommitted Changes",
  "description": "Git is a version control system that allows developers to track changes in their codebase. Sometimes, developers may make changes to their code that they later decide they don't want to keep. In such cases, it is necessary to discard these changes and revert to the last committed version of the code. This challenge will focus on discarding uncommitted changes in Git.",
  "meta": {
    "title": "Discard Uncommitted Changes: A Git Playground Challenge",
    "description": "Learn how to discard all uncommitted changes in your local Git repository and revert to the last committed version of the code.",
    "keywords": "version control, git labs, discard changes, git, git playground, uncommitted changes"
  },
  "difficulty": "Beginner",
  "time": 5,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": false,
  "details": {
    "steps": [
      {
        "title": "Discard Uncommitted Changes",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify for successful discarding",
            "file": "verify1-1.sh",
            "hint": "Please make sure you have completed the required actions.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [],
        "solutions": ["step1-solution.md"]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md"
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["xiaoshengyunan"],
  "license": {
    "name": "CC-BY-4.0",
    "url": "https://github.com/30-seconds/30-seconds-of-git/blob/master/LICENSE",
    "repo": "https://github.com/30-seconds/30-seconds-of-git"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "丢弃未提交的更改",
      "description": "Git 是一个版本控制系统，它允许开发者跟踪其代码库中的更改。有时，开发者可能会对代码进行更改，但之后又决定不保留这些更改。在这种情况下，有必要丢弃这些更改并恢复到代码的上一个提交版本。本挑战将专注于在 Git 中丢弃未提交的更改。",
      "meta": {
        "title": "丢弃未提交的更改：Git 实践挑战",
        "description": "学习如何在本地 Git 仓库中丢弃所有未提交的更改，并恢复到代码的上一个提交版本。",
        "keywords": "版本控制，Git 实验室，丢弃更改，Git, Git 实践，未提交的更改"
      },
      "details": {
        "steps": [
          {
            "title": "丢弃未提交的更改",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "验证是否成功丢弃",
                "file": "verify1-1.sh",
                "hint": "请确保你已完成所需操作。"
              }
            ],
            "solutions": ["step1-solution.md"]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Descartar los cambios no confirmados",
      "description": "Git es un sistema de control de versiones que permite a los desarrolladores rastrear los cambios en su repositorio de código. A veces, los desarrolladores pueden hacer cambios en su código que más tarde deciden no querer mantener. En tales casos, es necesario descartar estos cambios y volver a la última versión del código que se haya commitado. Este desafío se centrará en descartar los cambios no confirmados en Git.",
      "meta": {
        "title": "Descartar los cambios no confirmados: un desafío en Git Playground",
        "description": "Aprende a descartar todos los cambios no confirmados en tu repositorio local de Git y volver a la última versión del código que se haya commitado.",
        "keywords": "control de versiones, laboratorios de Git, descartar cambios, Git, Git Playground, cambios no confirmados"
      },
      "details": {
        "steps": [
          {
            "title": "Descartar los cambios no confirmados",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Verificar el descartado exitoso",
                "file": "verify1-1.sh",
                "hint": "Asegúrese de haber completado las acciones requeridas."
              }
            ],
            "solutions": ["step1-solution.md"]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Abandonner les modifications non validées",
      "description": "Git est un système de contrôle de versions qui permet aux développeurs de suivre les modifications apportées à leur base de code. Parfois, les développeurs peuvent apporter des modifications à leur code qu'ils décident plus tard de ne pas conserver. Dans de tels cas, il est nécessaire d'abandonner ces modifications et de revenir à la dernière version validée du code. Ce défi se concentrera sur l'abandon des modifications non validées dans Git.",
      "meta": {
        "title": "Abandonner les modifications non validées : Un défi sur Git Playground",
        "description": "Apprenez à abandonner toutes les modifications non validées dans votre référentiel Git local et à revenir à la dernière version validée du code.",
        "keywords": "contrôle de versions, git labs, abandonner des modifications, git, git playground, modifications non validées"
      },
      "details": {
        "steps": [
          {
            "title": "Abandonner les modifications non validées",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Vérifier l'abandon réussi",
                "file": "verify1-1.sh",
                "hint": "Veuillez vous assurer d'avoir effectué les actions requises."
              }
            ],
            "solutions": ["step1-solution.md"]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Uncommittierte Änderungen verwerfen",
      "description": "Git ist ein Versionsverwaltungssystem, das es Entwicklern ermöglicht, Änderungen in ihrer Codebasis zu verfolgen. Manchmal können Entwickler Änderungen an ihrem Code vornehmen, von denen sie später feststellen, dass sie sie nicht beibehalten möchten. In solchen Fällen ist es erforderlich, diese Änderungen abzulehnen und auf die letzte committete Version des Codes zurückzusetzen. In dieser Herausforderung geht es darum, uncommittierte Änderungen in Git abzulehnen.",
      "meta": {
        "title": "Uncommittierte Änderungen verwerfen: Eine Herausforderung im Git-Playground",
        "description": "Lernen Sie, wie Sie alle uncommittierten Änderungen in Ihrem lokalen Git-Repository verwerfen und auf die letzte committete Version des Codes zurückkehren.",
        "keywords": "Versionsverwaltung, Git Labs, Änderungen verwerfen, Git, Git-Playground, uncommittierte Änderungen"
      },
      "details": {
        "steps": [
          {
            "title": "Uncommittierte Änderungen verwerfen",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Verifizieren Sie das erfolgreiche Verwerfen",
                "file": "verify1-1.sh",
                "hint": "Bitte stellen Sie sicher, dass Sie die erforderlichen Aktionen abgeschlossen haben."
              }
            ],
            "solutions": ["step1-solution.md"]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "未コミットの変更を破棄する",
      "description": "Git は、開発者がコードベースの変更を追跡できるバージョン管理システムです。時々、開発者は後で保持したくないと判断したコードの変更を行うことがあります。このような場合、これらの変更を破棄し、最後にコミットされたコードのバージョンに戻す必要があります。このチャレンジでは、Git で未コミットの変更を破棄することに焦点を当てます。",
      "meta": {
        "title": "未コミットの変更を破棄する：Git プレイグラウンドのチャレンジ",
        "description": "ローカルの Git リポジトリですべての未コミットの変更を破棄し、最後にコミットされたコードのバージョンに戻す方法を学びましょう。",
        "keywords": "バージョン管理，Git ラボ，変更を破棄する，Git, Git プレイグラウンド，未コミットの変更"
      },
      "details": {
        "steps": [
          {
            "title": "未コミットの変更を破棄する",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "正常に破棄されたことを確認する",
                "file": "verify1-1.sh",
                "hint": "必要な操作を完了したことを確認してください。"
              }
            ],
            "solutions": ["step1-solution.md"]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Отбросить незафиксированные изменения",
      "description": "Git - это система контроля версий, которая позволяет разработчикам отслеживать изменения в их кодовой базе. Иногда разработчики могут внести изменения в свой код, которые позже решают не сохранять. В таких случаях необходимо отбросить эти изменения и вернуться к последней зафиксированной версии кода. Эта задача будет сосредоточена на отбрасывании незафиксированных изменений в Git.",
      "meta": {
        "title": "Отбросить незафиксированные изменения: вызов для Git Playground",
        "description": "Изучите, как отбросить все незафиксированные изменения в вашем локальном репозитории Git и вернуться к последней зафиксированной версии кода.",
        "keywords": "контроль версий, git-лаборатории, отбросить изменения, git, git playground, незафиксированные изменения"
      },
      "details": {
        "steps": [
          {
            "title": "Отбросить незафиксированные изменения",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "Проверить успешность отбрасывания",
                "file": "verify1-1.sh",
                "hint": "Пожалуйста, убедитесь, что вы выполнили требуемые действия."
              }
            ],
            "solutions": ["step1-solution.md"]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    }
  ]
}
