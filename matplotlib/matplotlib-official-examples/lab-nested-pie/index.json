{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Nested Pie Charts with Matplotlib",
  "description": "Pie charts are popular data visualization tools used to represent data in a circular form. However, there are times when you might want to create a nested version of the pie chart, known as the donut chart. This tutorial will guide you through creating nested pie charts using Matplotlib, a popular data visualization library in Python.",
  "meta": {
    "title": "Nested Pie Charts | Data Visualization | Python Matplotlib",
    "description": "Learn how to create nested pie charts, also known as donut charts, using Python's Matplotlib library. Improve your data visualization skills.",
    "keywords": "nested pie charts, donut charts, data visualization, Python, Matplotlib"
  },
  "difficulty": "Beginner",
  "time": 25,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Import necessary libraries",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "This step has no verification at the moment",
            "file": "verify1-1.sh",
            "hint": "This step has no verification at the moment"
          }
        ],
        "skills": [
          "matplotlib/figures_axes",
          "matplotlib/importing_matplotlib",
          "python/data_visualization",
          "python/importing_modules",
          "python/numerical_computing"
        ]
      },
      {
        "title": "Create a nested pie chart using ax.pie",
        "text": "en/step2.md",
        "verify": [
          {
            "name": "This step has no verification at the moment",
            "file": "verify2-1.sh",
            "hint": "This step has no verification at the moment"
          }
        ],
        "skills": [
          "matplotlib/pie_charts",
          "python/build_in_functions",
          "python/data_collections",
          "python/lists",
          "python/tuples",
          "python/variables_data_types",
          "python/with_statement"
        ]
      },
      {
        "title": "Create a nested pie chart using ax.bar",
        "text": "en/step3.md",
        "verify": [
          {
            "name": "This step has no verification at the moment",
            "file": "verify3-1.sh",
            "hint": "This step has no verification at the moment"
          }
        ],
        "skills": [
          "matplotlib/bar_charts",
          "python/build_in_functions",
          "python/comments",
          "python/data_collections",
          "python/lists",
          "python/tuples",
          "python/variables_data_types",
          "python/with_statement"
        ]
      },
      {
        "title": "Customize the Nested Pie Chart",
        "text": "en/step4.md",
        "verify": [
          {
            "name": "This step has no verification at the moment",
            "file": "verify4-1.sh",
            "hint": "This step has no verification at the moment"
          }
        ],
        "skills": [
          "matplotlib/pie_charts",
          "python/build_in_functions",
          "python/comments",
          "python/data_collections",
          "python/lists",
          "python/tuples",
          "python/variables_data_types"
        ]
      },
      {
        "title": "Save the Nested Pie Chart",
        "text": "en/step5.md",
        "verify": [
          {
            "name": "This step has no verification at the moment",
            "file": "verify5-1.sh",
            "hint": "This step has no verification at the moment"
          }
        ],
        "skills": ["matplotlib/saving_figures", "python/tuples"]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    },
    "assets": {
      "host01": [
        {
          "file": "nested-pie.ipynb",
          "target": "/home/labex/project",
          "chmod": "ugo+rwx"
        }
      ]
    }
  },
  "backend": {
    "imageid": "jupyter-ubuntu:2204"
  },
  "contributors": [],
  "license": {
    "name": "BSD 3-Clause",
    "url": "https://github.com/matplotlib/matplotlib/tree/main/LICENSE",
    "repo": "https://github.com/matplotlib/matplotlib"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "使用Matplotlib绘制嵌套饼图",
      "description": "饼图是一种流行的数据可视化工具，用于以圆形形式表示数据。然而，有时你可能想要创建饼图的嵌套版本，即甜甜圈图。本教程将指导你使用Matplotlib（Python中一个流行的数据可视化库）创建嵌套饼图。",
      "meta": {
        "title": "嵌套饼图 | 数据可视化 | Python Matplotlib",
        "description": "学习如何使用Python的Matplotlib库创建嵌套饼图，即甜甜圈图。提升你的数据可视化技能。",
        "keywords": "嵌套饼图, 甜甜圈图, 数据可视化, Python, Matplotlib"
      },
      "details": {
        "steps": [
          {
            "title": "导入必要的库",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "此步骤目前没有验证",
                "file": "verify1-1.sh",
                "hint": "此步骤目前没有验证"
              }
            ]
          },
          {
            "title": "使用ax.pie创建嵌套饼图",
            "text": "zh/step2.md",
            "verify": [
              {
                "name": "此步骤目前没有验证",
                "file": "verify2-1.sh",
                "hint": "此步骤目前没有验证"
              }
            ]
          },
          {
            "title": "使用ax.bar创建嵌套饼图",
            "text": "zh/step3.md",
            "verify": [
              {
                "name": "此步骤目前没有验证",
                "file": "verify3-1.sh",
                "hint": "此步骤目前没有验证"
              }
            ]
          },
          {
            "title": "自定义嵌套饼图",
            "text": "zh/step4.md",
            "verify": [
              {
                "name": "此步骤目前没有验证",
                "file": "verify4-1.sh",
                "hint": "此步骤目前没有验证"
              }
            ]
          },
          {
            "title": "保存嵌套饼图",
            "text": "zh/step5.md",
            "verify": [
              {
                "name": "此步骤目前没有验证",
                "file": "verify5-1.sh",
                "hint": "此步骤目前没有验证"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Gráficos de pastel anidados con Matplotlib",
      "description": "Los gráficos de pastel son herramientas populares de visualización de datos utilizadas para representar datos en forma circular. Sin embargo, hay ocasiones en las que puede desear crear una versión anidada del gráfico de pastel, conocida como gráfico de rosquilla. Este tutorial lo guiará a través de la creación de gráficos de pastel anidados utilizando Matplotlib, una popular biblioteca de visualización de datos en Python.",
      "meta": {
        "title": "Gráficos de pastel anidados | Visualización de datos | Python Matplotlib",
        "description": "Aprenda a crear gráficos de pastel anidados, también conocidos como gráficos de rosquilla, utilizando la biblioteca Matplotlib de Python. Mejore sus habilidades de visualización de datos.",
        "keywords": "gráficos de pastel anidados, gráficos de rosquilla, visualización de datos, Python, Matplotlib"
      },
      "details": {
        "steps": [
          {
            "title": "Importar las bibliotecas necesarias",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Este paso no tiene verificaciones en este momento",
                "file": "verify1-1.sh",
                "hint": "Este paso no tiene verificaciones en este momento"
              }
            ]
          },
          {
            "title": "Crear un gráfico de pastel anidado utilizando ax.pie",
            "text": "es/step2.md",
            "verify": [
              {
                "name": "Este paso no tiene verificaciones en este momento",
                "file": "verify2-1.sh",
                "hint": "Este paso no tiene verificaciones en este momento"
              }
            ]
          },
          {
            "title": "Crear un gráfico de pastel anidado utilizando ax.bar",
            "text": "es/step3.md",
            "verify": [
              {
                "name": "Este paso no tiene verificaciones en este momento",
                "file": "verify3-1.sh",
                "hint": "Este paso no tiene verificaciones en este momento"
              }
            ]
          },
          {
            "title": "Personalizar el gráfico de pastel anidado",
            "text": "es/step4.md",
            "verify": [
              {
                "name": "Este paso no tiene verificaciones en este momento",
                "file": "verify4-1.sh",
                "hint": "Este paso no tiene verificaciones en este momento"
              }
            ]
          },
          {
            "title": "Guardar el gráfico de pastel anidado",
            "text": "es/step5.md",
            "verify": [
              {
                "name": "Este paso no tiene verificaciones en este momento",
                "file": "verify5-1.sh",
                "hint": "Este paso no tiene verificaciones en este momento"
              }
            ]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Diagrammes circulaires imbriqués avec Matplotlib",
      "description": "Les diagrammes circulaires sont des outils de visualisation de données populaires utilisés pour représenter des données sous forme circulaire. Cependant, il arrive parfois que vous souhaitiez créer une version imbriquée du diagramme circulaire, connue sous le nom de diagramme en forme de beignet. Ce tutoriel vous guidera dans la création de diagrammes circulaires imbriqués à l'aide de Matplotlib, une bibliothèque de visualisation de données populaire en Python.",
      "meta": {
        "title": "Diagrammes circulaires imbriqués | Visualisation de données | Python Matplotlib",
        "description": "Apprenez à créer des diagrammes circulaires imbriqués, également appelés diagrammes en forme de beignet, à l'aide de la bibliothèque Matplotlib de Python. Améliorez vos compétences en visualisation de données.",
        "keywords": "diagrammes circulaires imbriqués, diagrammes en forme de beignet, visualisation de données, Python, Matplotlib"
      },
      "details": {
        "steps": [
          {
            "title": "Importer les bibliothèques nécessaires",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Cette étape n'a pas de vérification pour le moment",
                "file": "verify1-1.sh",
                "hint": "Cette étape n'a pas de vérification pour le moment"
              }
            ]
          },
          {
            "title": "Créer un diagramme circulaire imbriqué à l'aide de ax.pie",
            "text": "fr/step2.md",
            "verify": [
              {
                "name": "Cette étape n'a pas de vérification pour le moment",
                "file": "verify2-1.sh",
                "hint": "Cette étape n'a pas de vérification pour le moment"
              }
            ]
          },
          {
            "title": "Créer un diagramme circulaire imbriqué à l'aide de ax.bar",
            "text": "fr/step3.md",
            "verify": [
              {
                "name": "Cette étape n'a pas de vérification pour le moment",
                "file": "verify3-1.sh",
                "hint": "Cette étape n'a pas de vérification pour le moment"
              }
            ]
          },
          {
            "title": "Personnaliser le diagramme circulaire imbriqué",
            "text": "fr/step4.md",
            "verify": [
              {
                "name": "Cette étape n'a pas de vérification pour le moment",
                "file": "verify4-1.sh",
                "hint": "Cette étape n'a pas de vérification pour le moment"
              }
            ]
          },
          {
            "title": "Enregistrer le diagramme circulaire imbriqué",
            "text": "fr/step5.md",
            "verify": [
              {
                "name": "Cette étape n'a pas de vérification pour le moment",
                "file": "verify5-1.sh",
                "hint": "Cette étape n'a pas de vérification pour le moment"
              }
            ]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Geschachtelte Kreisdiagramme mit Matplotlib",
      "description": "Kreisdiagramme sind beliebte Datenvisualisierungstools, die verwendet werden, um Daten in einer kreisförmigen Darstellung zu präsentieren. Es gibt jedoch Situationen, in denen Sie möglicherweise eine geschachtelte Version des Kreisdiagramms, das als Donut-Diagramm bekannt ist, erstellen möchten. In diesem Tutorial wird Ihnen die Erstellung geschachtelter Kreisdiagramme mit Matplotlib, einer beliebten Datenvisualisierungsbibliothek in Python, vermittelt.",
      "meta": {
        "title": "Geschachtelte Kreisdiagramme | Datenvisualisierung | Python Matplotlib",
        "description": "Lernen Sie, wie Sie geschachtelte Kreisdiagramme, auch als Donut-Diagramme bekannt, mit der Python-Bibliothek Matplotlib erstellen. Verbessern Sie Ihre Fähigkeiten bei der Datenvisualisierung.",
        "keywords": "geschachtelte Kreisdiagramme, Donut-Diagramme, Datenvisualisierung, Python, Matplotlib"
      },
      "details": {
        "steps": [
          {
            "title": "Importiere erforderliche Bibliotheken",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Dieser Schritt hat momentan keine Verifizierung",
                "file": "verify1-1.sh",
                "hint": "Dieser Schritt hat momentan keine Verifizierung"
              }
            ]
          },
          {
            "title": "Erstelle ein geschachteltes Kreisdiagramm mit ax.pie",
            "text": "de/step2.md",
            "verify": [
              {
                "name": "Dieser Schritt hat momentan keine Verifizierung",
                "file": "verify2-1.sh",
                "hint": "Dieser Schritt hat momentan keine Verifizierung"
              }
            ]
          },
          {
            "title": "Erstelle ein geschachteltes Kreisdiagramm mit ax.bar",
            "text": "de/step3.md",
            "verify": [
              {
                "name": "Dieser Schritt hat momentan keine Verifizierung",
                "file": "verify3-1.sh",
                "hint": "Dieser Schritt hat momentan keine Verifizierung"
              }
            ]
          },
          {
            "title": "Anpassen des geschachtelten Kreisdiagramms",
            "text": "de/step4.md",
            "verify": [
              {
                "name": "Dieser Schritt hat momentan keine Verifizierung",
                "file": "verify4-1.sh",
                "hint": "Dieser Schritt hat momentan keine Verifizierung"
              }
            ]
          },
          {
            "title": "Speichere das geschachtelte Kreisdiagramm",
            "text": "de/step5.md",
            "verify": [
              {
                "name": "Dieser Schritt hat momentan keine Verifizierung",
                "file": "verify5-1.sh",
                "hint": "Dieser Schritt hat momentan keine Verifizierung"
              }
            ]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "Matplotlibを使ったネストされた円グラフ",
      "description": "円グラフは、円形でデータを表すために使用される人気のあるデータ可視化ツールです。ただし、ネストされたバージョンの円グラフ（ドーナツチャートと呼ばれる）を作成したい場合もあります。このチュートリアルでは、Pythonの人気のあるデータ可視化ライブラリであるMatplotlibを使ってネストされた円グラフを作成する方法を案内します。",
      "meta": {
        "title": "ネストされた円グラフ | データ可視化 | Python Matplotlib",
        "description": "PythonのMatplotlibライブラリを使って、ドーナツチャートとしても知られるネストされた円グラフを作成する方法を学びましょう。データ可視化のスキルを向上させましょう。",
        "keywords": "ネストされた円グラフ, ドーナツチャート, データ可視化, Python, Matplotlib"
      },
      "details": {
        "steps": [
          {
            "title": "必要なライブラリをインポートする",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "このステップには現在、検証はありません",
                "file": "verify1-1.sh",
                "hint": "このステップには現在、検証はありません"
              }
            ]
          },
          {
            "title": "ax.pieを使ってネストされた円グラフを作成する",
            "text": "ja/step2.md",
            "verify": [
              {
                "name": "このステップには現在、検証はありません",
                "file": "verify2-1.sh",
                "hint": "このステップには現在、検証はありません"
              }
            ]
          },
          {
            "title": "ax.barを使ってネストされた円グラフを作成する",
            "text": "ja/step3.md",
            "verify": [
              {
                "name": "このステップには現在、検証はありません",
                "file": "verify3-1.sh",
                "hint": "このステップには現在、検証はありません"
              }
            ]
          },
          {
            "title": "ネストされた円グラフをカスタマイズする",
            "text": "ja/step4.md",
            "verify": [
              {
                "name": "このステップには現在、検証はありません",
                "file": "verify4-1.sh",
                "hint": "このステップには現在、検証はありません"
              }
            ]
          },
          {
            "title": "ネストされた円グラフを保存する",
            "text": "ja/step5.md",
            "verify": [
              {
                "name": "このステップには現在、検証はありません",
                "file": "verify5-1.sh",
                "hint": "このステップには現在、検証はありません"
              }
            ]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Вложенные круговые диаграммы с использованием Matplotlib",
      "description": "Круговые диаграммы - популярные инструменты визуализации данных, используемые для представления данных в круговой форме. Однако бывают случаи, когда вы хотите создать вложенную версию круговой диаграммы, известную как пирожковая диаграмма. В этом уроке вы узнаете, как создавать вложенные круговые диаграммы с использованием Matplotlib, популярной библиотеки визуализации данных в Python.",
      "meta": {
        "title": "Вложенные круговые диаграммы | Визуализация данных | Python Matplotlib",
        "description": "Изучите, как создавать вложенные круговые диаграммы, также известные как пирожковые диаграммы, с использованием библиотеки Matplotlib для Python. Повысьте свои навыки визуализации данных.",
        "keywords": "вложенные круговые диаграммы, пирожковые диаграммы, визуализация данных, Python, Matplotlib"
      },
      "details": {
        "steps": [
          {
            "title": "Импортировать необходимые библиотеки",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "На данный момент эта стадия не имеет проверки",
                "file": "verify1-1.sh",
                "hint": "На данный момент эта стадия не имеет проверки"
              }
            ]
          },
          {
            "title": "Создать вложенную круговую диаграмму с использованием ax.pie",
            "text": "ru/step2.md",
            "verify": [
              {
                "name": "На данный момент эта стадия не имеет проверки",
                "file": "verify2-1.sh",
                "hint": "На данный момент эта стадия не имеет проверки"
              }
            ]
          },
          {
            "title": "Создать вложенную круговую диаграмму с использованием ax.bar",
            "text": "ru/step3.md",
            "verify": [
              {
                "name": "На данный момент эта стадия не имеет проверки",
                "file": "verify3-1.sh",
                "hint": "На данный момент эта стадия не имеет проверки"
              }
            ]
          },
          {
            "title": "Настроить вложенную круговую диаграмму",
            "text": "ru/step4.md",
            "verify": [
              {
                "name": "На данный момент эта стадия не имеет проверки",
                "file": "verify4-1.sh",
                "hint": "На данный момент эта стадия не имеет проверки"
              }
            ]
          },
          {
            "title": "Сохранить вложенную круговую диаграмму",
            "text": "ru/step5.md",
            "verify": [
              {
                "name": "На данный момент эта стадия не имеет проверки",
                "file": "verify5-1.sh",
                "hint": "На данный момент эта стадия не имеет проверки"
              }
            ]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    }
  ]
}
