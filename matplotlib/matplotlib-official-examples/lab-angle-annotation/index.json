{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Creating a Scale Invariant Angleel",
  "description": "In this tutorial, you will learn how to create a scale invariant angle label using Matplotlib. Angle annotation is often used to mark angles between lines or inside shapes with a circular arc. While Matplotlib provides an ~.patches.Arc, an inherent problem when directly using it for such purposes is that an arc being circular in data space is not necessarily circular in display space. Also, the arc's radius is often best defined in a coordinate system which is independent of the actual data coordinates - at least if you want to be able to freely zoom into your plot without the annotation growing to infinity. This calls for a solution where the arc's center is defined in data space, but its radius in a physical unit like points or pixels, or as a ratio of the Axes dimension.",
  "meta": {
    "title": "Creating a Scale Invariant Angle Label",
    "description": "Learn how to create a scale-invariant angle label using Matplotlib in this programming tutorial.",
    "keywords": "scale invariant, matplotlib, python, angle annotation, data visualization"
  },
  "difficulty": "Beginner",
  "time": 25,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Import Required Libraries",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "This step has no verification at the moment",
            "file": "verify1-1.sh",
            "hint": "This step has no verification at the moment"
          }
        ],
        "skills": [
          "matplotlib/figures_axes",
          "matplotlib/importing_matplotlib",
          "python/data_visualization",
          "python/importing_modules",
          "python/numerical_computing",
          "python/using_packages"
        ]
      },
      {
        "title": "Define AngleAnnotation Class",
        "text": "en/step2.md",
        "verify": [
          {
            "name": "This step has no verification at the moment",
            "file": "verify2-1.sh",
            "hint": "This step has no verification at the moment"
          }
        ],
        "skills": [
          "matplotlib/figures_axes",
          "matplotlib/text_annotations",
          "python/booleans",
          "python/build_in_functions",
          "python/classes_objects",
          "python/comments",
          "python/conditional_statements",
          "python/constructor",
          "python/data_collections",
          "python/data_visualization",
          "python/default_arguments",
          "python/dictionaries",
          "python/encapsulation",
          "python/for_loops",
          "python/function_definition",
          "python/lists",
          "python/numeric_types",
          "python/polymorphism",
          "python/strings",
          "python/tuples",
          "python/type_conversion",
          "python/variables_data_types",
          "python/with_statement"
        ]
      },
      {
        "title": "Define Helper Function plot_angle",
        "text": "en/step3.md",
        "verify": [
          {
            "name": "This step has no verification at the moment",
            "file": "verify3-1.sh",
            "hint": "This step has no verification at the moment"
          }
        ],
        "skills": [
          "matplotlib/line_plots",
          "python/default_arguments",
          "python/function_definition",
          "python/keyword_arguments",
          "python/lists",
          "python/tuples"
        ]
      },
      {
        "title": "Plot Two Crossing Lines and Label Each Angle Between Them with the Above AngleAnnotation Tool",
        "text": "en/step4.md",
        "verify": [
          {
            "name": "This step has no verification at the moment",
            "file": "verify4-1.sh",
            "hint": "This step has no verification at the moment"
          }
        ],
        "skills": [
          "matplotlib/line_plots",
          "matplotlib/line_styles_colors",
          "python/build_in_functions",
          "python/comments",
          "python/data_collections",
          "python/for_loops",
          "python/lists",
          "python/tuples",
          "python/variables_data_types",
          "python/with_statement"
        ]
      },
      {
        "title": "Showcase Different Text Positions and Size Units",
        "text": "en/step5.md",
        "verify": [
          {
            "name": "This step has no verification at the moment",
            "file": "verify5-1.sh",
            "hint": "This step has no verification at the moment"
          }
        ],
        "skills": [
          "matplotlib/interactive_backends",
          "matplotlib/text_annotations",
          "python/booleans",
          "python/build_in_functions",
          "python/comments",
          "python/data_collections",
          "python/for_loops",
          "python/lists",
          "python/standard_libraries",
          "python/tuples",
          "python/variables_data_types"
        ]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    },
    "assets": {
      "host01": [
        {
          "file": "angle-annotation.ipynb",
          "target": "/home/labex/project",
          "chmod": "ugo+rwx"
        }
      ]
    }
  },
  "backend": {
    "imageid": "jupyter-ubuntu:2204"
  },
  "contributors": ["huduo0812"],
  "license": {
    "name": "BSD 3-Clause",
    "url": "https://github.com/matplotlib/matplotlib/tree/main/LICENSE",
    "repo": "https://github.com/matplotlib/matplotlib"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "创建一个尺度不变的角度标签",
      "description": "在本教程中，你将学习如何使用Matplotlib创建一个尺度不变的角度标签。角度注释常用于用圆弧标记线之间或形状内部的角度。虽然Matplotlib提供了一个~.patches.Arc，但直接将其用于此类目的时存在一个固有问题，即在数据空间中为圆形的弧在显示空间中不一定是圆形的。此外，弧的半径通常最好在一个独立于实际数据坐标的坐标系中定义——至少如果你想能够自由缩放绘图而注释不会增长到无穷大的话。这就需要一个解决方案，其中弧的中心在数据空间中定义，但其半径以像点或像素这样的物理单位定义，或者作为轴维度的比例。",
      "meta": {
        "title": "创建一个尺度不变的角度标签",
        "description": "在本编程教程中学习如何使用Matplotlib创建一个尺度不变的角度标签。",
        "keywords": "尺度不变, Matplotlib, Python, 角度注释, 数据可视化"
      },
      "details": {
        "steps": [
          {
            "title": "导入所需的库",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "此步骤目前没有验证",
                "file": "verify1-1.sh",
                "hint": "此步骤目前没有验证"
              }
            ]
          },
          {
            "title": "定义AngleAnnotation类",
            "text": "zh/step2.md",
            "verify": [
              {
                "name": "此步骤目前没有验证",
                "file": "verify2-1.sh",
                "hint": "此步骤目前没有验证"
              }
            ]
          },
          {
            "title": "定义辅助函数plot_angle",
            "text": "zh/step3.md",
            "verify": [
              {
                "name": "此步骤目前没有验证",
                "file": "verify3-1.sh",
                "hint": "此步骤目前没有验证"
              }
            ]
          },
          {
            "title": "绘制两条相交直线，并使用上述角度注释工具标记它们之间的每个角度",
            "text": "zh/step4.md",
            "verify": [
              {
                "name": "此步骤目前没有验证",
                "file": "verify4-1.sh",
                "hint": "此步骤目前没有验证"
              }
            ]
          },
          {
            "title": "展示不同的文本位置和尺寸单位",
            "text": "zh/step5.md",
            "verify": [
              {
                "name": "此步骤目前没有验证",
                "file": "verify5-1.sh",
                "hint": "此步骤目前没有验证"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    }
  ]
}
