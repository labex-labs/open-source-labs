{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Creating a Scale Invariant Angleel",
  "description": "In this tutorial, you will learn how to create a scale invariant angle label using Matplotlib. Angle annotation is often used to mark angles between lines or inside shapes with a circular arc. While Matplotlib provides an ~.patches.Arc, an inherent problem when directly using it for such purposes is that an arc being circular in data space is not necessarily circular in display space. Also, the arc's radius is often best defined in a coordinate system which is independent of the actual data coordinates - at least if you want to be able to freely zoom into your plot without the annotation growing to infinity. This calls for a solution where the arc's center is defined in data space, but its radius in a physical unit like points or pixels, or as a ratio of the Axes dimension.",
  "meta": {
    "title": "Creating a Scale Invariant Angle Label",
    "description": "Learn how to create a scale-invariant angle label using Matplotlib in this programming tutorial.",
    "keywords": "scale invariant, matplotlib, python, angle annotation, data visualization"
  },
  "difficulty": "Beginner",
  "time": 25,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Import Required Libraries",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "This step has no verification at the moment",
            "file": "verify1-1.sh",
            "hint": "This step has no verification at the moment"
          }
        ],
        "skills": [
          "matplotlib/figures_axes",
          "matplotlib/importing_matplotlib",
          "python/data_visualization",
          "python/importing_modules",
          "python/numerical_computing",
          "python/using_packages"
        ]
      },
      {
        "title": "Define AngleAnnotation Class",
        "text": "en/step2.md",
        "verify": [
          {
            "name": "This step has no verification at the moment",
            "file": "verify2-1.sh",
            "hint": "This step has no verification at the moment"
          }
        ],
        "skills": [
          "matplotlib/figures_axes",
          "matplotlib/text_annotations",
          "python/booleans",
          "python/build_in_functions",
          "python/classes_objects",
          "python/comments",
          "python/conditional_statements",
          "python/constructor",
          "python/data_collections",
          "python/data_visualization",
          "python/default_arguments",
          "python/dictionaries",
          "python/encapsulation",
          "python/for_loops",
          "python/function_definition",
          "python/lists",
          "python/numeric_types",
          "python/polymorphism",
          "python/strings",
          "python/tuples",
          "python/type_conversion",
          "python/variables_data_types",
          "python/with_statement"
        ]
      },
      {
        "title": "Define Helper Function plot_angle",
        "text": "en/step3.md",
        "verify": [
          {
            "name": "This step has no verification at the moment",
            "file": "verify3-1.sh",
            "hint": "This step has no verification at the moment"
          }
        ],
        "skills": [
          "matplotlib/line_plots",
          "python/default_arguments",
          "python/function_definition",
          "python/keyword_arguments",
          "python/lists",
          "python/tuples"
        ]
      },
      {
        "title": "Plot Two Crossing Lines and Label Each Angle Between Them with the Above AngleAnnotation Tool",
        "text": "en/step4.md",
        "verify": [
          {
            "name": "This step has no verification at the moment",
            "file": "verify4-1.sh",
            "hint": "This step has no verification at the moment"
          }
        ],
        "skills": [
          "matplotlib/line_plots",
          "matplotlib/line_styles_colors",
          "python/build_in_functions",
          "python/comments",
          "python/data_collections",
          "python/for_loops",
          "python/lists",
          "python/tuples",
          "python/variables_data_types",
          "python/with_statement"
        ]
      },
      {
        "title": "Showcase Different Text Positions and Size Units",
        "text": "en/step5.md",
        "verify": [
          {
            "name": "This step has no verification at the moment",
            "file": "verify5-1.sh",
            "hint": "This step has no verification at the moment"
          }
        ],
        "skills": [
          "matplotlib/interactive_backends",
          "matplotlib/text_annotations",
          "python/booleans",
          "python/build_in_functions",
          "python/comments",
          "python/data_collections",
          "python/for_loops",
          "python/lists",
          "python/standard_libraries",
          "python/tuples",
          "python/variables_data_types"
        ]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    },
    "assets": {
      "host01": [
        {
          "file": "angle-annotation.ipynb",
          "target": "/home/labex/project",
          "chmod": "ugo+rwx"
        }
      ]
    }
  },
  "backend": {
    "imageid": "jupyter-ubuntu:2204"
  },
  "contributors": ["huduo0812"],
  "license": {
    "name": "BSD 3-Clause",
    "url": "https://github.com/matplotlib/matplotlib/tree/main/LICENSE",
    "repo": "https://github.com/matplotlib/matplotlib"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "创建一个尺度不变的角度标签",
      "description": "在本教程中，你将学习如何使用 Matplotlib 创建一个尺度不变的角度标签。角度注释常用于用圆弧标记线之间或形状内部的角度。虽然 Matplotlib 提供了一个~.patches.Arc，但直接将其用于此类目的时存在一个固有问题，即在数据空间中为圆形的弧在显示空间中不一定是圆形的。此外，弧的半径通常最好在一个独立于实际数据坐标的坐标系中定义——至少如果你想能够自由缩放绘图而注释不会增长到无穷大的话。这就需要一个解决方案，其中弧的中心在数据空间中定义，但其半径以像点或像素这样的物理单位定义，或者作为轴维度的比例。",
      "meta": {
        "title": "创建一个尺度不变的角度标签",
        "description": "在本编程教程中学习如何使用 Matplotlib 创建一个尺度不变的角度标签。",
        "keywords": "尺度不变，Matplotlib, Python, 角度注释，数据可视化"
      },
      "details": {
        "steps": [
          {
            "title": "导入所需的库",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "此步骤目前没有验证",
                "file": "verify1-1.sh",
                "hint": "此步骤目前没有验证"
              }
            ]
          },
          {
            "title": "定义 AngleAnnotation 类",
            "text": "zh/step2.md",
            "verify": [
              {
                "name": "此步骤目前没有验证",
                "file": "verify2-1.sh",
                "hint": "此步骤目前没有验证"
              }
            ]
          },
          {
            "title": "定义辅助函数 plot_angle",
            "text": "zh/step3.md",
            "verify": [
              {
                "name": "此步骤目前没有验证",
                "file": "verify3-1.sh",
                "hint": "此步骤目前没有验证"
              }
            ]
          },
          {
            "title": "绘制两条相交直线，并使用上述角度注释工具标记它们之间的每个角度",
            "text": "zh/step4.md",
            "verify": [
              {
                "name": "此步骤目前没有验证",
                "file": "verify4-1.sh",
                "hint": "此步骤目前没有验证"
              }
            ]
          },
          {
            "title": "展示不同的文本位置和尺寸单位",
            "text": "zh/step5.md",
            "verify": [
              {
                "name": "此步骤目前没有验证",
                "file": "verify5-1.sh",
                "hint": "此步骤目前没有验证"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Crear una etiqueta de ángulo invariante a la escala",
      "description": "En este tutorial, aprenderá a crear una etiqueta de ángulo invariante a la escala utilizando Matplotlib. La anotación de ángulos se utiliza a menudo para marcar los ángulos entre líneas o dentro de formas con un arco circular. Si bien Matplotlib proporciona un ~.patches.Arc, un problema inherente al usarlo directamente para este propósito es que un arco que es circular en el espacio de datos no necesariamente es circular en el espacio de visualización. Además, el radio del arco a menudo se define mejor en un sistema de coordenadas que es independiente de las coordenadas de datos reales - al menos si desea poder hacer un zoom libre en su gráfico sin que la anotación crezca hasta el infinito. Esto requiere una solución en la que el centro del arco se defina en el espacio de datos, pero su radio en una unidad física como puntos o píxeles, o como una proporción de la dimensión del eje.",
      "meta": {
        "title": "Crear una etiqueta de ángulo invariante a la escala",
        "description": "Aprenda a crear una etiqueta de ángulo invariante a la escala utilizando Matplotlib en este tutorial de programación.",
        "keywords": "invariante a la escala, matplotlib, python, anotación de ángulos, visualización de datos"
      },
      "details": {
        "steps": [
          {
            "title": "Importar las bibliotecas necesarias",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Este paso no tiene verificaciones en este momento",
                "file": "verify1-1.sh",
                "hint": "Este paso no tiene verificaciones en este momento"
              }
            ]
          },
          {
            "title": "Definir la clase AngleAnnotation",
            "text": "es/step2.md",
            "verify": [
              {
                "name": "Este paso no tiene verificaciones en este momento",
                "file": "verify2-1.sh",
                "hint": "Este paso no tiene verificaciones en este momento"
              }
            ]
          },
          {
            "title": "Definir la función auxiliar plot_angle",
            "text": "es/step3.md",
            "verify": [
              {
                "name": "Este paso no tiene verificaciones en este momento",
                "file": "verify3-1.sh",
                "hint": "Este paso no tiene verificaciones en este momento"
              }
            ]
          },
          {
            "title": "Trazar dos líneas que se cruzan y etiquetar cada ángulo entre ellas con la herramienta AngleAnnotation descrita anteriormente",
            "text": "es/step4.md",
            "verify": [
              {
                "name": "Este paso no tiene verificaciones en este momento",
                "file": "verify4-1.sh",
                "hint": "Este paso no tiene verificaciones en este momento"
              }
            ]
          },
          {
            "title": "Mostrar diferentes posiciones de texto y unidades de tamaño",
            "text": "es/step5.md",
            "verify": [
              {
                "name": "Este paso no tiene verificaciones en este momento",
                "file": "verify5-1.sh",
                "hint": "Este paso no tiene verificaciones en este momento"
              }
            ]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Création d'un angle invariant par rapport à l'échelle",
      "description": "Dans ce tutoriel, vous allez apprendre à créer une étiquette d'angle invariant par rapport à l'échelle à l'aide de Matplotlib. L'annotation d'angle est souvent utilisée pour marquer les angles entre des lignes ou à l'intérieur de formes avec un arc circulaire. Bien que Matplotlib fournisse un ~.patches.Arc, un problème inhérent lorsqu'on l'utilise directement à de telles fins est que l'arc étant circulaire dans l'espace de données n'est pas nécessairement circulaire dans l'espace d'affichage. De plus, le rayon de l'arc est souvent mieux défini dans un système de coordonnées qui est indépendant des coordonnées de données réelles - du moins si vous voulez être capable de zoomer librement sur votre graphique sans que l'annotation ne devienne infinie. Cela nécessite une solution où le centre de l'arc est défini dans l'espace de données, mais son rayon en une unité physique comme les points ou les pixels, ou comme un ratio des dimensions de l'Axe.",
      "meta": {
        "title": "Création d'une étiquette d'angle invariant par rapport à l'échelle",
        "description": "Apprenez à créer une étiquette d'angle invariant par rapport à l'échelle à l'aide de Matplotlib dans ce tutoriel de programmation.",
        "keywords": "invariant par rapport à l'échelle, Matplotlib, python, annotation d'angle, visualisation de données"
      },
      "details": {
        "steps": [
          {
            "title": "Importer les bibliothèques requises",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Cette étape n'a pas de vérification pour le moment",
                "file": "verify1-1.sh",
                "hint": "Cette étape n'a pas de vérification pour le moment"
              }
            ]
          },
          {
            "title": "Définir la classe AngleAnnotation",
            "text": "fr/step2.md",
            "verify": [
              {
                "name": "Cette étape n'a pas de vérification pour le moment",
                "file": "verify2-1.sh",
                "hint": "Cette étape n'a pas de vérification pour le moment"
              }
            ]
          },
          {
            "title": "Définir la fonction d'aide plot_angle",
            "text": "fr/step3.md",
            "verify": [
              {
                "name": "Cette étape n'a pas de vérification pour le moment",
                "file": "verify3-1.sh",
                "hint": "Cette étape n'a pas de vérification pour le moment"
              }
            ]
          },
          {
            "title": "Tracer deux lignes croisées et étiqueter chaque angle entre elles avec l'outil AngleAnnotation ci-dessus",
            "text": "fr/step4.md",
            "verify": [
              {
                "name": "Cette étape n'a pas de vérification pour le moment",
                "file": "verify4-1.sh",
                "hint": "Cette étape n'a pas de vérification pour le moment"
              }
            ]
          },
          {
            "title": "Présenter différentes positions de texte et unités de taille",
            "text": "fr/step5.md",
            "verify": [
              {
                "name": "Cette étape n'a pas de vérification pour le moment",
                "file": "verify5-1.sh",
                "hint": "Cette étape n'a pas de vérification pour le moment"
              }
            ]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Erstellen eines skalierungsinvarianten Winkels",
      "description": "In diesem Tutorial lernen Sie, wie Sie mit Matplotlib einen skalierungsinvarianten Winkelbezeichner erstellen. Winkelannotationen werden häufig verwendet, um Winkel zwischen Linien oder innerhalb von Formen mit einem Kreisbogen zu markieren. Während Matplotlib eine ~.patches.Arc bietet, ist ein inhärentes Problem bei der direkten Verwendung hiervon für solche Zwecke, dass ein Bogen, der im Datenraum kreisförmig ist, nicht notwendigerweise im Anzeigeraum kreisförmig ist. Außerdem wird der Radius des Bogens oft am besten in einem Koordinatensystem definiert, das unabhängig von den tatsächlichen Datenkoordinaten ist - zumindest wenn Sie in Ihr Diagramm frei zoomen möchten, ohne dass die Annotation unendlich groß wird. Dies erfordert eine Lösung, bei der der Mittelpunkt des Bogens im Datenraum definiert wird, aber sein Radius in einer physikalischen Einheit wie Punkten oder Pixeln oder als Verhältnis der Achsenabmessung.",
      "meta": {
        "title": "Erstellen eines skalierungsinvarianten Winkelbezeichners",
        "description": "Lernen Sie in diesem Programmier-Tutorial, wie Sie mit Matplotlib einen skalierungsinvarianten Winkelbezeichner erstellen.",
        "keywords": "skalierungsinvariant, Matplotlib, Python, Winkelannotation, Datenvisualisierung"
      },
      "details": {
        "steps": [
          {
            "title": "Importiere erforderliche Bibliotheken",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Dieser Schritt hat momentan keine Überprüfung",
                "file": "verify1-1.sh",
                "hint": "Dieser Schritt hat momentan keine Überprüfung"
              }
            ]
          },
          {
            "title": "Definiere die AngleAnnotation-Klasse",
            "text": "de/step2.md",
            "verify": [
              {
                "name": "Dieser Schritt hat momentan keine Überprüfung",
                "file": "verify2-1.sh",
                "hint": "Dieser Schritt hat momentan keine Überprüfung"
              }
            ]
          },
          {
            "title": "Definiere die Hilfsfunktion plot_angle",
            "text": "de/step3.md",
            "verify": [
              {
                "name": "Dieser Schritt hat momentan keine Überprüfung",
                "file": "verify3-1.sh",
                "hint": "Dieser Schritt hat momentan keine Überprüfung"
              }
            ]
          },
          {
            "title": "Zeichne zwei sich kreuzende Linien und bezeichne jeden Winkel zwischen ihnen mit dem oben genannten AngleAnnotation-Tool",
            "text": "de/step4.md",
            "verify": [
              {
                "name": "Dieser Schritt hat momentan keine Überprüfung",
                "file": "verify4-1.sh",
                "hint": "Dieser Schritt hat momentan keine Überprüfung"
              }
            ]
          },
          {
            "title": "Zeige verschiedene Textpositionen und Größeneinheiten",
            "text": "de/step5.md",
            "verify": [
              {
                "name": "Dieser Schritt hat momentan keine Überprüfung",
                "file": "verify5-1.sh",
                "hint": "Dieser Schritt hat momentan keine Überprüfung"
              }
            ]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "スケール不変の角度ラベルの作成",
      "description": "このチュートリアルでは、Matplotlib を使ってスケール不変の角度ラベルを作成する方法を学びます。角度注釈は、線の間または形状の内部の角度を円弧でマークするためによく使われます。Matplotlib は~.patches.Arc を提供していますが、この目的で直接使用する際の内在的な問題は、データ空間で円形である弧が表示空間で必ずしも円形でないことです。また、弧の半径は、実際のデータ座標とは独立した座標系で定義するのが最適です。少なくとも、ズームしても注釈が無限大にならないようにするためです。これには、弧の中心がデータ空間で定義され、半径がポイントやピクセルなどの物理単位で、または Axes 寸法の比率として定義される解決策が必要です。",
      "meta": {
        "title": "スケール不変の角度ラベルの作成",
        "description": "このプログラミングチュートリアルでは、Matplotlib を使ってスケール不変の角度ラベルを作成する方法を学びます。",
        "keywords": "スケール不変，Matplotlib, Python, 角度注釈，データ可視化"
      },
      "details": {
        "steps": [
          {
            "title": "必要なライブラリをインポートする",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "このステップには現在検証はありません",
                "file": "verify1-1.sh",
                "hint": "このステップには現在検証はありません"
              }
            ]
          },
          {
            "title": "AngleAnnotation クラスを定義する",
            "text": "ja/step2.md",
            "verify": [
              {
                "name": "このステップには現在検証はありません",
                "file": "verify2-1.sh",
                "hint": "このステップには現在検証はありません"
              }
            ]
          },
          {
            "title": "ヘルパー関数 plot_angle を定義する",
            "text": "ja/step3.md",
            "verify": [
              {
                "name": "このステップには現在検証はありません",
                "file": "verify3-1.sh",
                "hint": "このステップには現在検証はありません"
              }
            ]
          },
          {
            "title": "2 本の交差する線を描画し、それらの間の各角度に上記の AngleAnnotation ツールを使ってラベルを付ける",
            "text": "ja/step4.md",
            "verify": [
              {
                "name": "このステップには現在検証はありません",
                "file": "verify4-1.sh",
                "hint": "このステップには現在検証はありません"
              }
            ]
          },
          {
            "title": "さまざまなテキストの位置とサイズの単位を紹介する",
            "text": "ja/step5.md",
            "verify": [
              {
                "name": "このステップには現在検証はありません",
                "file": "verify5-1.sh",
                "hint": "このステップには現在検証はありません"
              }
            ]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Создание масштабно-независимой метки угла",
      "description": "В этом руководстве вы узнаете, как создать масштабно-независимую метку угла с использованием Matplotlib. Аннотация углов часто используется для отметки углов между линиями или внутри фигур с помощью круговой дуги. Хотя Matplotlib предоставляет ~.patches.Arc, существенная проблема при непосредственном использовании его для таких целей заключается в том, что дуга, круговая в пространстве данных, не обязательно будет круговой в пространстве отображения. Кроме того, радиус дуги часто лучше определяется в координатной системе, которая не зависит от фактических координат данных - по крайней мере, если вы хотите иметь возможность свободно приближаться к своему графику, не наблюдая, как аннотация растет до бесконечности. Это требует решения, при котором центр дуги определяется в пространстве данных, а ее радиус - в физической единице, такой как пункты или пиксели, или в виде отношения размеров оси.",
      "meta": {
        "title": "Создание масштабно-независимой метки угла",
        "description": "Изучите, как создать масштабно-независимую метку угла с использованием Matplotlib в этом программировательском руководстве.",
        "keywords": "масштабно-независимый, Matplotlib, Python, аннотация углов, визуализация данных"
      },
      "details": {
        "steps": [
          {
            "title": "Импортировать необходимые библиотеки",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "На данный момент эта стадия не имеет проверки",
                "file": "verify1-1.sh",
                "hint": "На данный момент эта стадия не имеет проверки"
              }
            ]
          },
          {
            "title": "Определить класс AngleAnnotation",
            "text": "ru/step2.md",
            "verify": [
              {
                "name": "На данный момент эта стадия не имеет проверки",
                "file": "verify2-1.sh",
                "hint": "На данный момент эта стадия не имеет проверки"
              }
            ]
          },
          {
            "title": "Определить вспомогательную функцию plot_angle",
            "text": "ru/step3.md",
            "verify": [
              {
                "name": "На данный момент эта стадия не имеет проверки",
                "file": "verify3-1.sh",
                "hint": "На данный момент эта стадия не имеет проверки"
              }
            ]
          },
          {
            "title": "Построить две пересекающиеся линии и пометить каждый угол между ними с помощью вышеописанного инструмента AngleAnnotation",
            "text": "ru/step4.md",
            "verify": [
              {
                "name": "На данный момент эта стадия не имеет проверки",
                "file": "verify4-1.sh",
                "hint": "На данный момент эта стадия не имеет проверки"
              }
            ]
          },
          {
            "title": "Показать различные позиции текста и единицы размеров",
            "text": "ru/step5.md",
            "verify": [
              {
                "name": "На данный момент эта стадия не имеет проверки",
                "file": "verify5-1.sh",
                "hint": "На данный момент эта стадия не имеет проверки"
              }
            ]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    },
    {
      "lang": "ko",
      "title": "Matplotlib 을 이용한 크기 불변 각도 레이블 생성",
      "description": "이 튜토리얼에서는 Matplotlib 을 사용하여 크기 불변 각도 레이블을 만드는 방법을 배웁니다. 각도 주석은 종종 선 사이 또는 원형 호를 사용하여 도형 내부의 각도를 표시하는 데 사용됩니다. Matplotlib 은 ~.patches.Arc 를 제공하지만, 이러한 목적으로 직접 사용할 때 내재된 문제는 데이터 공간에서 원형인 호가 디스플레이 공간에서 반드시 원형이 아니라는 것입니다. 또한 호의 반지름은 실제 데이터 좌표와 독립적인 좌표계에서 정의하는 것이 가장 좋습니다. 적어도 주석이 무한대로 커지지 않고 플롯을 자유롭게 확대/축소할 수 있도록 하려면 말이죠. 이는 호의 중심은 데이터 공간에서 정의되지만 반지름은 포인트 또는 픽셀과 같은 물리적 단위 또는 Axes 차원의 비율로 정의되는 솔루션을 필요로 합니다.",
      "meta": {
        "title": "Matplotlib 을 활용한 크기 불변 각도 레이블 생성 방법",
        "description": "이 프로그래밍 튜토리얼에서 Matplotlib 을 사용하여 크기 불변 각도 레이블을 만드는 방법을 알아보세요.",
        "keywords": "크기 불변, matplotlib, 파이썬, 각도 주석, 데이터 시각화, Matplotlib 각도 레이블, 파이썬 데이터 시각화"
      },
      "details": {
        "steps": [
          {
            "title": "필요한 라이브러리 가져오기",
            "text": "ko/step1.md",
            "verify": [
              {
                "name": "현재 이 단계는 검증이 없습니다.",
                "file": "verify1-1.sh",
                "hint": "현재 이 단계는 검증이 없습니다."
              }
            ]
          },
          {
            "title": "AngleAnnotation 클래스 정의",
            "text": "ko/step2.md",
            "verify": [
              {
                "name": "현재 이 단계는 검증이 없습니다.",
                "file": "verify2-1.sh",
                "hint": "현재 이 단계는 검증이 없습니다."
              }
            ]
          },
          {
            "title": "헬퍼 함수 plot_angle 정의",
            "text": "ko/step3.md",
            "verify": [
              {
                "name": "현재 이 단계는 검증이 없습니다.",
                "file": "verify3-1.sh",
                "hint": "현재 이 단계는 검증이 없습니다."
              }
            ]
          },
          {
            "title": "두 개의 교차하는 선을 그리고, AngleAnnotation 도구를 사용하여 각도 레이블 표시",
            "text": "ko/step4.md",
            "verify": [
              {
                "name": "현재 이 단계는 검증이 없습니다.",
                "file": "verify4-1.sh",
                "hint": "현재 이 단계는 검증이 없습니다."
              }
            ]
          },
          {
            "title": "다양한 텍스트 위치 및 크기 단위 시연",
            "text": "ko/step5.md",
            "verify": [
              {
                "name": "현재 이 단계는 검증이 없습니다.",
                "file": "verify5-1.sh",
                "hint": "현재 이 단계는 검증이 없습니다."
              }
            ]
          }
        ],
        "intro": {
          "text": "ko/intro.md",
          "title": "소개"
        },
        "finish": {
          "text": "ko/finish.md",
          "title": "요약"
        }
      }
    },
    {
      "lang": "pt",
      "title": "Criando um Rótulo de Ângulo Invariante à Escala",
      "description": "Neste tutorial, você aprenderá como criar um rótulo de ângulo invariante à escala usando Matplotlib. A anotação de ângulo é frequentemente usada para marcar ângulos entre linhas ou dentro de formas com um arco circular. Embora o Matplotlib forneça um ~.patches.Arc, um problema inerente ao usá-lo diretamente para tais propósitos é que um arco que é circular no espaço de dados não é necessariamente circular no espaço de exibição. Além disso, o raio do arco é frequentemente melhor definido em um sistema de coordenadas que é independente das coordenadas reais dos dados - pelo menos se você quiser poder ampliar livremente seu gráfico sem que a anotação cresça até o infinito. Isso exige uma solução onde o centro do arco é definido no espaço de dados, mas seu raio em uma unidade física como pontos ou pixels, ou como uma proporção da dimensão dos eixos.",
      "meta": {
        "title": "Criando um Rótulo de Ângulo Invariante à Escala com Matplotlib",
        "description": "Aprenda a criar um rótulo de ângulo invariante à escala usando Matplotlib neste tutorial de programação. Descubra como anotar ângulos de forma precisa e flexível.",
        "keywords": "ângulo invariante à escala, matplotlib, python, anotação de ângulo, visualização de dados, tutorial matplotlib, rótulo de ângulo"
      },
      "details": {
        "steps": [
          {
            "title": "Importar as Bibliotecas Necessárias",
            "text": "pt/step1.md",
            "verify": [
              {
                "name": "Este passo não possui verificação no momento",
                "file": "verify1-1.sh",
                "hint": "Este passo não possui verificação no momento"
              }
            ]
          },
          {
            "title": "Definir a Classe AngleAnnotation",
            "text": "pt/step2.md",
            "verify": [
              {
                "name": "Este passo não possui verificação no momento",
                "file": "verify2-1.sh",
                "hint": "Este passo não possui verificação no momento"
              }
            ]
          },
          {
            "title": "Definir a Função Auxiliar plot_angle",
            "text": "pt/step3.md",
            "verify": [
              {
                "name": "Este passo não possui verificação no momento",
                "file": "verify3-1.sh",
                "hint": "Este passo não possui verificação no momento"
              }
            ]
          },
          {
            "title": "Plotar Duas Linhas Cruzadas e Rotular Cada Ângulo Entre Elas com a Ferramenta AngleAnnotation Acima",
            "text": "pt/step4.md",
            "verify": [
              {
                "name": "Este passo não possui verificação no momento",
                "file": "verify4-1.sh",
                "hint": "Este passo não possui verificação no momento"
              }
            ]
          },
          {
            "title": "Demonstrar Diferentes Posições de Texto e Unidades de Tamanho",
            "text": "pt/step5.md",
            "verify": [
              {
                "name": "Este passo não possui verificação no momento",
                "file": "verify5-1.sh",
                "hint": "Este passo não possui verificação no momento"
              }
            ]
          }
        ],
        "intro": {
          "text": "pt/intro.md",
          "title": "Introdução"
        },
        "finish": {
          "text": "pt/finish.md",
          "title": "Resumo"
        }
      }
    }
  ]
}
