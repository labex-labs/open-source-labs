{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Matplotlib Box Aspect",
  "description": "This lab will guide you through the process of creating different plots using the set_box_aspect() method in Matplotlib. This method sets the aspect ratio between axes height and width in physical units, independent of data limits. It is useful for producing square plots, independent of the data it contains, or to have a usual plot with the same axes dimensions next to an image plot with fixed (data-)aspect.",
  "meta": {
    "title": "Matplotlib Box Aspect: Creating Square Plots with Ease",
    "description": "Learn how to create square plots in Matplotlib using the set_box_aspect() method, independent of data limits.",
    "keywords": "python playground, matplotlib, python, box aspect, data visualization, data analysis, square plots"
  },
  "difficulty": "Beginner",
  "time": 30,
  "hidden": true,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "A Square Axes, Independent of Data",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "This step has no verification at the moment",
            "file": "verify1-1.sh",
            "hint": "This step has no verification at the moment"
          }
        ],
        "skills": [
          "matplotlib/figures_axes",
          "matplotlib/importing_matplotlib",
          "python/data_visualization",
          "python/importing_modules",
          "python/numerical_computing",
          "python/tuples"
        ]
      },
      {
        "title": "Shared Square Axes",
        "text": "en/step2.md",
        "verify": [
          {
            "name": "This step has no verification at the moment",
            "file": "verify2-1.sh",
            "hint": "This step has no verification at the moment"
          }
        ],
        "skills": [
          "matplotlib/line_plots",
          "python/booleans",
          "python/lists",
          "python/tuples"
        ]
      },
      {
        "title": "Square Twin Axes",
        "text": "en/step3.md",
        "verify": [
          {
            "name": "This step has no verification at the moment",
            "file": "verify3-1.sh",
            "hint": "This step has no verification at the moment"
          }
        ],
        "skills": ["matplotlib/line_plots", "python/lists", "python/tuples"]
      },
      {
        "title": "Normal Plot Next to Image",
        "text": "en/step4.md",
        "verify": [
          {
            "name": "This step has no verification at the moment",
            "file": "verify4-1.sh",
            "hint": "This step has no verification at the moment"
          }
        ],
        "skills": [
          "matplotlib/line_plots",
          "python/comments",
          "python/for_loops",
          "python/lists",
          "python/math_random",
          "python/standard_libraries",
          "python/tuples"
        ]
      },
      {
        "title": "Square Joint/Marginal Plot",
        "text": "en/step5.md",
        "verify": [
          {
            "name": "This step has no verification at the moment",
            "file": "verify5-1.sh",
            "hint": "This step has no verification at the moment"
          }
        ],
        "skills": [
          "matplotlib/histograms",
          "matplotlib/scatter_plots",
          "python/booleans",
          "python/build_in_functions",
          "python/comments",
          "python/data_collections",
          "python/for_loops",
          "python/lists",
          "python/math_random",
          "python/standard_libraries",
          "python/tuples",
          "python/variables_data_types"
        ]
      },
      {
        "title": "Box Aspect for Many Subplots",
        "text": "en/step6.md",
        "verify": [
          {
            "name": "This step has no verification at the moment",
            "file": "verify6-1.sh",
            "hint": "This step has no verification at the moment"
          }
        ],
        "skills": [
          "matplotlib/scatter_plots",
          "python/booleans",
          "python/build_in_functions",
          "python/data_collections",
          "python/for_loops",
          "python/lists",
          "python/tuples",
          "python/variables_data_types"
        ]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    },
    "assets": {
      "host01": [
        {
          "file": "axes-box-aspect.ipynb",
          "target": "/home/labex/project",
          "chmod": "ugo+rwx"
        }
      ]
    }
  },
  "backend": {
    "imageid": "jupyter-ubuntu:2204"
  },
  "contributors": ["huduo0812"],
  "license": {
    "name": "BSD 3-Clause",
    "url": "https://github.com/matplotlib/matplotlib/tree/main/LICENSE",
    "repo": "https://github.com/matplotlib/matplotlib"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "Matplotlib 框体纵横比",
      "description": "本实验将指导你使用 Matplotlib 中的 set_box_aspect() 方法创建不同的绘图。此方法以物理单位设置坐标轴高度和宽度之间的纵横比，与数据范围无关。它对于生成正方形绘图（无论其包含的数据如何），或者在具有固定（数据）纵横比的图像绘图旁边创建具有相同坐标轴尺寸的常规绘图非常有用。",
      "meta": {
        "title": "Matplotlib 框体纵横比：轻松创建正方形绘图",
        "description": "学习如何使用 Matplotlib 中的 set_box_aspect() 方法创建正方形绘图，不受数据范围的限制。",
        "keywords": "Python 在线编程环境，Matplotlib, Python, 框体纵横比，数据可视化，数据分析，正方形绘图"
      },
      "details": {
        "steps": [
          {
            "title": "与数据无关的正方形坐标轴",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "此步骤目前无需验证",
                "file": "verify1-1.sh",
                "hint": "此步骤目前无需验证"
              }
            ]
          },
          {
            "title": "共享的正方形坐标轴",
            "text": "zh/step2.md",
            "verify": [
              {
                "name": "此步骤目前无需验证",
                "file": "verify2-1.sh",
                "hint": "此步骤目前无需验证"
              }
            ]
          },
          {
            "title": "正方形双坐标轴",
            "text": "zh/step3.md",
            "verify": [
              {
                "name": "此步骤目前无需验证",
                "file": "verify3-1.sh",
                "hint": "此步骤目前无需验证"
              }
            ]
          },
          {
            "title": "图像旁边的常规绘图",
            "text": "zh/step4.md",
            "verify": [
              {
                "name": "此步骤目前无需验证",
                "file": "verify4-1.sh",
                "hint": "此步骤目前无需验证"
              }
            ]
          },
          {
            "title": "正方形联合/边缘图",
            "text": "zh/step5.md",
            "verify": [
              {
                "name": "此步骤目前无需验证",
                "file": "verify5-1.sh",
                "hint": "此步骤目前无需验证"
              }
            ]
          },
          {
            "title": "多个子图的方形纵横比",
            "text": "zh/step6.md",
            "verify": [
              {
                "name": "此步骤目前无需验证",
                "file": "verify6-1.sh",
                "hint": "此步骤目前无需验证"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Aspecto del contenedor en Matplotlib",
      "description": "Esta práctica te guiará a través del proceso de creación de diferentes gráficos utilizando el método set_box_aspect() en Matplotlib. Este método establece la relación de aspecto entre la altura y el ancho de los ejes en unidades físicas, independientemente de los límites de los datos. Es útil para producir gráficos cuadrados, independientemente de los datos que contengan, o para tener un gráfico habitual con las mismas dimensiones de ejes junto a un gráfico de imagen con una relación de aspecto fija (de datos).",
      "meta": {
        "title": "Aspecto del contenedor en Matplotlib: Crear gráficos cuadrados con facilidad",
        "description": "Aprende cómo crear gráficos cuadrados en Matplotlib utilizando el método set_box_aspect(), independientemente de los límites de los datos.",
        "keywords": "python playground, matplotlib, python, aspecto del contenedor, visualización de datos, análisis de datos, gráficos cuadrados"
      },
      "details": {
        "steps": [
          {
            "title": "Un eje cuadrado, independiente de los datos",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Este paso no tiene verificaciones en este momento",
                "file": "verify1-1.sh",
                "hint": "Este paso no tiene verificaciones en este momento"
              }
            ]
          },
          {
            "title": "Ejes cuadrados compartidos",
            "text": "es/step2.md",
            "verify": [
              {
                "name": "Este paso no tiene verificaciones en este momento",
                "file": "verify2-1.sh",
                "hint": "Este paso no tiene verificaciones en este momento"
              }
            ]
          },
          {
            "title": "Ejes gemelos cuadrados",
            "text": "es/step3.md",
            "verify": [
              {
                "name": "Este paso no tiene verificaciones en este momento",
                "file": "verify3-1.sh",
                "hint": "Este paso no tiene verificaciones en este momento"
              }
            ]
          },
          {
            "title": "Gráfico normal junto a una imagen",
            "text": "es/step4.md",
            "verify": [
              {
                "name": "Este paso no tiene verificaciones en este momento",
                "file": "verify4-1.sh",
                "hint": "Este paso no tiene verificaciones en este momento"
              }
            ]
          },
          {
            "title": "Gráfico de unión/marginal cuadrado",
            "text": "es/step5.md",
            "verify": [
              {
                "name": "Este paso no tiene verificaciones en este momento",
                "file": "verify5-1.sh",
                "hint": "Este paso no tiene verificaciones en este momento"
              }
            ]
          },
          {
            "title": "Aspecto de caja para muchos subgráficos",
            "text": "es/step6.md",
            "verify": [
              {
                "name": "Este paso no tiene verificaciones en este momento",
                "file": "verify6-1.sh",
                "hint": "Este paso no tiene verificaciones en este momento"
              }
            ]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Aspect de la boîte Matplotlib",
      "description": "Ce laboratoire vous guidera tout au long du processus de création de différents graphiques en utilisant la méthode set_box_aspect() dans Matplotlib. Cette méthode définit le rapport d'aspect entre la hauteur et la largeur des axes en unités physiques, indépendamment des limites des données. Elle est utile pour produire des graphiques carrés, indépendamment des données qu'ils contiennent, ou pour avoir un graphique habituel avec les mêmes dimensions d'axes à côté d'un graphique d'image avec un aspect fixe (de données).",
      "meta": {
        "title": "Aspect de la boîte Matplotlib: Création de graphiques carrés facilement",
        "description": "Apprenez à créer des graphiques carrés dans Matplotlib en utilisant la méthode set_box_aspect(), indépendamment des limites des données.",
        "keywords": "plateforme de codage Python, Matplotlib, Python, aspect de la boîte, visualisation de données, analyse de données, graphiques carrés"
      },
      "details": {
        "steps": [
          {
            "title": "Un axe carré, indépendant des données",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Cette étape n'a pas de vérification pour le moment",
                "file": "verify1-1.sh",
                "hint": "Cette étape n'a pas de vérification pour le moment"
              }
            ]
          },
          {
            "title": "Axes carrés partagés",
            "text": "fr/step2.md",
            "verify": [
              {
                "name": "Cette étape n'a pas de vérification pour le moment",
                "file": "verify2-1.sh",
                "hint": "Cette étape n'a pas de vérification pour le moment"
              }
            ]
          },
          {
            "title": "Axes jumeaux carrés",
            "text": "fr/step3.md",
            "verify": [
              {
                "name": "Cette étape n'a pas de vérification pour le moment",
                "file": "verify3-1.sh",
                "hint": "Cette étape n'a pas de vérification pour le moment"
              }
            ]
          },
          {
            "title": "Graphique normal à côté d'une image",
            "text": "fr/step4.md",
            "verify": [
              {
                "name": "Cette étape n'a pas de vérification pour le moment",
                "file": "verify4-1.sh",
                "hint": "Cette étape n'a pas de vérification pour le moment"
              }
            ]
          },
          {
            "title": "Graphique conjoint/marginal carré",
            "text": "fr/step5.md",
            "verify": [
              {
                "name": "Cette étape n'a pas de vérification pour le moment",
                "file": "verify5-1.sh",
                "hint": "Cette étape n'a pas de vérification pour le moment"
              }
            ]
          },
          {
            "title": "Aspect de la boîte pour de nombreux sous-graphiques",
            "text": "fr/step6.md",
            "verify": [
              {
                "name": "Cette étape n'a pas de vérification pour le moment",
                "file": "verify6-1.sh",
                "hint": "Cette étape n'a pas de vérification pour le moment"
              }
            ]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Matplotlib Box Aspekt",
      "description": "Dieses Lab führt Sie durch den Prozess der Erstellung verschiedener Diagramme mit der Methode set_box_aspect() in Matplotlib. Diese Methode setzt das Seitenverhältnis zwischen Achsenhöhe und -breite in physikalischen Einheiten unabhängig von den Datengrenzen. Es eignet sich zur Erzeugung von quadratischen Diagrammen, unabhängig von den enthaltenen Daten, oder zur Erstellung eines üblichen Diagramms mit den gleichen Achsendimensionen neben einem Bilddiagramm mit festem (Daten-)Seitenverhältnis.",
      "meta": {
        "title": "Matplotlib Box Aspekt: Quadratische Diagramme leicht erstellen",
        "description": "Lernen Sie, wie Sie in Matplotlib quadratische Diagramme mit der Methode set_box_aspect() unabhängig von den Datengrenzen erstellen.",
        "keywords": "Python-Spielfeld, Matplotlib, Python, Box Aspekt, Datenvisualisierung, Datenanalyse, quadratische Diagramme"
      },
      "details": {
        "steps": [
          {
            "title": "Eine quadratische Achse, unabhängig von den Daten",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Dieser Schritt hat momentan keine Verifizierung",
                "file": "verify1-1.sh",
                "hint": "Dieser Schritt hat momentan keine Verifizierung"
              }
            ]
          },
          {
            "title": "Geteilte quadratische Achsen",
            "text": "de/step2.md",
            "verify": [
              {
                "name": "Dieser Schritt hat momentan keine Verifizierung",
                "file": "verify2-1.sh",
                "hint": "Dieser Schritt hat momentan keine Verifizierung"
              }
            ]
          },
          {
            "title": "Quadratische Zwillingachsen",
            "text": "de/step3.md",
            "verify": [
              {
                "name": "Dieser Schritt hat momentan keine Verifizierung",
                "file": "verify3-1.sh",
                "hint": "Dieser Schritt hat momentan keine Verifizierung"
              }
            ]
          },
          {
            "title": "Normales Diagramm neben einem Bild",
            "text": "de/step4.md",
            "verify": [
              {
                "name": "Dieser Schritt hat momentan keine Verifizierung",
                "file": "verify4-1.sh",
                "hint": "Dieser Schritt hat momentan keine Verifizierung"
              }
            ]
          },
          {
            "title": "Quadratisches Verbindungs-/Randdiagramm",
            "text": "de/step5.md",
            "verify": [
              {
                "name": "Dieser Schritt hat momentan keine Verifizierung",
                "file": "verify5-1.sh",
                "hint": "Dieser Schritt hat momentan keine Verifizierung"
              }
            ]
          },
          {
            "title": "Box-Aspekt für viele Teilplots",
            "text": "de/step6.md",
            "verify": [
              {
                "name": "Dieser Schritt hat momentan keine Verifizierung",
                "file": "verify6-1.sh",
                "hint": "Dieser Schritt hat momentan keine Verifizierung"
              }
            ]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "Matplotlib のボックスアスペクト",
      "description": "この実験では、Matplotlib の set_box_aspect() メソッドを使用してさまざまなプロットを作成するプロセスを案内します。このメソッドは、データの制限に関係なく、物理単位で軸の高さと幅の間のアスペクト比を設定します。これは、含まれるデータに関係なく正方形のプロットを作成するため、または固定された（データ）アスペクトの画像プロットの隣に同じ軸寸法の通常のプロットを作成するために便利です。",
      "meta": {
        "title": "Matplotlib のボックスアスペクト：簡単に正方形のプロットを作成する",
        "description": "set_box_aspect() メソッドを使用して、データの制限に関係なく Matplotlib で正方形のプロットを作成する方法を学びましょう。",
        "keywords": "python の遊び場，matplotlib, python, ボックスアスペクト，データ可視化，データ分析，正方形のプロット"
      },
      "details": {
        "steps": [
          {
            "title": "データに依存しない正方形の Axes",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "このステップでは現在検証はありません",
                "file": "verify1-1.sh",
                "hint": "このステップでは現在検証はありません"
              }
            ]
          },
          {
            "title": "共有の正方形の Axes",
            "text": "ja/step2.md",
            "verify": [
              {
                "name": "このステップでは現在検証はありません",
                "file": "verify2-1.sh",
                "hint": "このステップでは現在検証はありません"
              }
            ]
          },
          {
            "title": "正方形の双対軸",
            "text": "ja/step3.md",
            "verify": [
              {
                "name": "このステップでは現在検証はありません",
                "file": "verify3-1.sh",
                "hint": "このステップでは現在検証はありません"
              }
            ]
          },
          {
            "title": "画像の横に通常のプロットを表示する",
            "text": "ja/step4.md",
            "verify": [
              {
                "name": "このステップでは現在検証はありません",
                "file": "verify4-1.sh",
                "hint": "このステップでは現在検証はありません"
              }
            ]
          },
          {
            "title": "正方形の接合/マージナルプロット",
            "text": "ja/step5.md",
            "verify": [
              {
                "name": "このステップでは現在検証はありません",
                "file": "verify5-1.sh",
                "hint": "このステップでは現在検証はありません"
              }
            ]
          },
          {
            "title": "多数のサブプロットのボックスアスペクト",
            "text": "ja/step6.md",
            "verify": [
              {
                "name": "このステップでは現在検証はありません",
                "file": "verify6-1.sh",
                "hint": "このステップでは現在検証はありません"
              }
            ]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Matplotlib: соотношение сторон рамки",
      "description": "В этом практическом занятии вы узнаете, как создавать различные графики с использованием метода set_box_aspect() в Matplotlib. Этот метод задает соотношение между высотой и шириной осей в физических единицах, независимо от ограничений данных. Это полезно для создания квадратных графиков, независимо от содержания данных, или для создания обычного графика с одинаковыми размерами осей рядом с графиком изображения с фиксированным (данными) соотношением сторон.",
      "meta": {
        "title": "Matplotlib: соотношение сторон рамки - создавайте квадратные графики с ease",
        "description": "Изучите, как создавать квадратные графики в Matplotlib с использованием метода set_box_aspect(), независимо от ограничений данных.",
        "keywords": "python playground, matplotlib, python, соотношение сторон рамки, визуализация данных, анализ данных, квадратные графики"
      },
      "details": {
        "steps": [
          {
            "title": "Квадратная ось, независимая от данных",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "На данный момент эта стадия не имеет проверки",
                "file": "verify1-1.sh",
                "hint": "На данный момент эта стадия не имеет проверки"
              }
            ]
          },
          {
            "title": "Общие квадратные оси",
            "text": "ru/step2.md",
            "verify": [
              {
                "name": "На данный момент эта стадия не имеет проверки",
                "file": "verify2-1.sh",
                "hint": "На данный момент эта стадия не имеет проверки"
              }
            ]
          },
          {
            "title": "Квадратные оси-близнецы",
            "text": "ru/step3.md",
            "verify": [
              {
                "name": "На данный момент эта стадия не имеет проверки",
                "file": "verify3-1.sh",
                "hint": "На данный момент эта стадия не имеет проверки"
              }
            ]
          },
          {
            "title": "Обычный график рядом с изображением",
            "text": "ru/step4.md",
            "verify": [
              {
                "name": "На данный момент эта стадия не имеет проверки",
                "file": "verify4-1.sh",
                "hint": "На данный момент эта стадия не имеет проверки"
              }
            ]
          },
          {
            "title": "Квадратный соединение/график границ",
            "text": "ru/step5.md",
            "verify": [
              {
                "name": "На данный момент эта стадия не имеет проверки",
                "file": "verify5-1.sh",
                "hint": "На данный момент эта стадия не имеет проверки"
              }
            ]
          },
          {
            "title": "Аспекты рамки для множества вторичных графиков",
            "text": "ru/step6.md",
            "verify": [
              {
                "name": "На данный момент эта стадия не имеет проверки",
                "file": "verify6-1.sh",
                "hint": "На данный момент эта стадия не имеет проверки"
              }
            ]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    },
    {
      "lang": "ko",
      "title": "Matplotlib 박스 종횡비",
      "description": "이 랩에서는 Matplotlib 의 set_box_aspect() 메서드를 사용하여 다양한 플롯을 만드는 과정을 안내합니다. 이 메서드는 데이터 제한과 관계없이 물리적 단위로 축 높이와 너비 간의 종횡비를 설정합니다. 데이터에 관계없이 정사각형 플롯을 생성하거나, 고정된 (데이터) 종횡비를 가진 이미지 플롯 옆에 동일한 축 치수를 가진 일반적인 플롯을 표시하는 데 유용합니다.",
      "meta": {
        "title": "Matplotlib 박스 종횡비: 정사각형 플롯 쉽게 만들기",
        "description": "set_box_aspect() 메서드를 사용하여 데이터 제한과 관계없이 Matplotlib 에서 정사각형 플롯을 만드는 방법을 알아보세요.",
        "keywords": "파이썬 플레이그라운드, matplotlib, 파이썬, 박스 종횡비, 데이터 시각화, 데이터 분석, 정사각형 플롯"
      },
      "details": {
        "steps": [
          {
            "title": "데이터에 독립적인 정사각형 축",
            "text": "ko/step1.md",
            "verify": [
              {
                "name": "현재 이 단계에는 검증이 없습니다",
                "file": "verify1-1.sh",
                "hint": "현재 이 단계에는 검증이 없습니다"
              }
            ]
          },
          {
            "title": "공유된 정사각형 축",
            "text": "ko/step2.md",
            "verify": [
              {
                "name": "현재 이 단계에는 검증이 없습니다",
                "file": "verify2-1.sh",
                "hint": "현재 이 단계에는 검증이 없습니다"
              }
            ]
          },
          {
            "title": "정사각형 트윈 축",
            "text": "ko/step3.md",
            "verify": [
              {
                "name": "현재 이 단계에는 검증이 없습니다",
                "file": "verify3-1.sh",
                "hint": "현재 이 단계에는 검증이 없습니다"
              }
            ]
          },
          {
            "title": "이미지 옆 일반 플롯",
            "text": "ko/step4.md",
            "verify": [
              {
                "name": "현재 이 단계에는 검증이 없습니다",
                "file": "verify4-1.sh",
                "hint": "현재 이 단계에는 검증이 없습니다"
              }
            ]
          },
          {
            "title": "정사각형 조인트/마지널 플롯",
            "text": "ko/step5.md",
            "verify": [
              {
                "name": "현재 이 단계에는 검증이 없습니다",
                "file": "verify5-1.sh",
                "hint": "현재 이 단계에는 검증이 없습니다"
              }
            ]
          },
          {
            "title": "다중 서브플롯 박스 비율 설정",
            "text": "ko/step6.md",
            "verify": [
              {
                "name": "현재 이 단계에는 검증이 없습니다",
                "file": "verify6-1.sh",
                "hint": "현재 이 단계에는 검증이 없습니다"
              }
            ]
          }
        ],
        "intro": {
          "text": "ko/intro.md",
          "title": "소개"
        },
        "finish": {
          "text": "ko/finish.md",
          "title": "요약"
        }
      }
    },
    {
      "lang": "pt",
      "title": "Aspecto da Caixa (Box Aspect) no Matplotlib",
      "description": "Este laboratório irá guiá-lo através do processo de criação de diferentes gráficos usando o método `set_box_aspect()` no Matplotlib. Este método define a razão de aspecto (aspect ratio) entre a altura e a largura dos eixos em unidades físicas, independentemente dos limites dos dados. É útil para produzir gráficos quadrados, independentemente dos dados que contém, ou para ter um gráfico usual com as mesmas dimensões dos eixos ao lado de um gráfico de imagem com aspecto (de dados) fixo.",
      "meta": {
        "title": "Aspecto da Caixa (Box Aspect) no Matplotlib: Criando Gráficos Quadrados com Facilidade",
        "description": "Aprenda como criar gráficos quadrados no Matplotlib usando o método `set_box_aspect()`, independentemente dos limites dos dados.",
        "keywords": "python playground, matplotlib, python, box aspect, visualização de dados, análise de dados, gráficos quadrados, gráficos com proporção fixa, gráficos com aspecto"
      },
      "details": {
        "steps": [
          {
            "title": "Eixos Quadrados, Independentes dos Dados",
            "text": "pt/step1.md",
            "verify": [
              {
                "name": "Este passo não possui verificação no momento",
                "file": "verify1-1.sh",
                "hint": "Este passo não possui verificação no momento"
              }
            ]
          },
          {
            "title": "Eixos Quadrados Compartilhados",
            "text": "pt/step2.md",
            "verify": [
              {
                "name": "Este passo não possui verificação no momento",
                "file": "verify2-1.sh",
                "hint": "Este passo não possui verificação no momento"
              }
            ]
          },
          {
            "title": "Eixos Gêmeos Quadrados",
            "text": "pt/step3.md",
            "verify": [
              {
                "name": "Este passo não possui verificação no momento",
                "file": "verify3-1.sh",
                "hint": "Este passo não possui verificação no momento"
              }
            ]
          },
          {
            "title": "Gráfico Normal Próximo à Imagem",
            "text": "pt/step4.md",
            "verify": [
              {
                "name": "Este passo não possui verificação no momento",
                "file": "verify4-1.sh",
                "hint": "Este passo não possui verificação no momento"
              }
            ]
          },
          {
            "title": "Gráfico Conjunto/Marginal Quadrado",
            "text": "pt/step5.md",
            "verify": [
              {
                "name": "Este passo não possui verificação no momento",
                "file": "verify5-1.sh",
                "hint": "Este passo não possui verificação no momento"
              }
            ]
          },
          {
            "title": "Aspecto da Caixa para Múltiplos Subplots",
            "text": "pt/step6.md",
            "verify": [
              {
                "name": "Este passo não possui verificação no momento",
                "file": "verify6-1.sh",
                "hint": "Este passo não possui verificação no momento"
              }
            ]
          }
        ],
        "intro": {
          "text": "pt/intro.md",
          "title": "Introdução"
        },
        "finish": {
          "text": "pt/finish.md",
          "title": "Resumo"
        }
      }
    }
  ]
}
