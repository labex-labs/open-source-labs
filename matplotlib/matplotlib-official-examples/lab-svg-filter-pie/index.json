{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Matplotlib Pie Chart Filter",
  "description": "In this lab, we will demonstrate how to use filtering effects with Matplotlib's pie chart. We will use the pie chart drawing code borrowed from pie_demo.py and add filtering effects to the chart. The filtering effects are only effective if your SVG renderer supports it.",
  "meta": {
    "title": "Matplotlib Pie Chart Filter: Enhance Your Data Visualizations",
    "description": "Discover how to apply filtering effects to Matplotlib's pie charts, unlocking new possibilities for data analysis and presentation.",
    "keywords": "python playground, matplotlib, python, pie chart, data visualization, filtering, svg"
  },
  "difficulty": "Beginner",
  "time": 20,
  "hidden": true,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Create a Pie Chart",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "This step has no verification at the moment",
            "file": "verify1-1.sh",
            "hint": "This step has no verification at the moment"
          }
        ],
        "skills": [
          "matplotlib/figures_axes",
          "matplotlib/importing_matplotlib",
          "matplotlib/pie_charts",
          "python/data_visualization",
          "python/for_loops",
          "python/importing_modules",
          "python/lists",
          "python/tuples",
          "python/using_packages"
        ]
      },
      {
        "title": "Save the Chart as an SVG",
        "text": "en/step2.md",
        "verify": [
          {
            "name": "This step has no verification at the moment",
            "file": "verify2-1.sh",
            "hint": "This step has no verification at the moment"
          }
        ],
        "skills": [
          "matplotlib/saving_figures",
          "python/build_in_functions",
          "python/comments",
          "python/data_collections",
          "python/for_loops",
          "python/importing_modules",
          "python/lists",
          "python/sets",
          "python/standard_libraries",
          "python/tuples",
          "python/variables_data_types"
        ]
      },
      {
        "title": "View the Pie Chart with Filtering Effects",
        "text": "en/step3.md",
        "verify": [
          {
            "name": "This step has no verification at the moment",
            "file": "verify3-1.sh",
            "hint": "This step has no verification at the moment"
          }
        ],
        "skills": []
      },
      {
        "title": "Modify the Pie Chart with Different Filters",
        "text": "en/step4.md",
        "verify": [
          {
            "name": "This step has no verification at the moment",
            "file": "verify4-1.sh",
            "hint": "This step has no verification at the moment"
          }
        ],
        "skills": [
          "python/build_in_functions",
          "python/comments",
          "python/data_collections",
          "python/for_loops",
          "python/lists",
          "python/sets",
          "python/standard_libraries",
          "python/tuples",
          "python/variables_data_types"
        ]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    },
    "assets": {
      "host01": [
        {
          "file": "svg-filter-pie.ipynb",
          "target": "/home/labex/project",
          "chmod": "ugo+rwx"
        }
      ]
    }
  },
  "backend": {
    "imageid": "jupyter-ubuntu:2204"
  },
  "contributors": [],
  "license": {
    "name": "BSD 3-Clause",
    "url": "https://github.com/matplotlib/matplotlib/tree/main/LICENSE",
    "repo": "https://github.com/matplotlib/matplotlib"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "Matplotlib 饼图过滤器",
      "description": "在本实验中，我们将演示如何在 Matplotlib 的饼图中使用过滤效果。我们将借用 pie_demo.py 中的饼图绘制代码，并为图表添加过滤效果。只有当你的 SVG 渲染器支持时，过滤效果才会有效。",
      "meta": {
        "title": "Matplotlib 饼图过滤器：增强你的数据可视化效果",
        "description": "探索如何将过滤效果应用于 Matplotlib 的饼图，为数据分析和展示开启新的可能性。",
        "keywords": "Python 实践，Matplotlib, Python, 饼图，数据可视化，过滤，SVG"
      },
      "details": {
        "steps": [
          {
            "title": "创建一个饼图",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "此步骤目前没有验证",
                "file": "verify1-1.sh",
                "hint": "此步骤目前没有验证"
              }
            ]
          },
          {
            "title": "将图表保存为 SVG 格式",
            "text": "zh/step2.md",
            "verify": [
              {
                "name": "此步骤目前没有验证",
                "file": "verify2-1.sh",
                "hint": "此步骤目前没有验证"
              }
            ]
          },
          {
            "title": "查看带有过滤效果的饼图",
            "text": "zh/step3.md",
            "verify": [
              {
                "name": "此步骤目前没有验证",
                "file": "verify3-1.sh",
                "hint": "此步骤目前没有验证"
              }
            ]
          },
          {
            "title": "使用不同过滤器修改饼图",
            "text": "zh/step4.md",
            "verify": [
              {
                "name": "此步骤目前没有验证",
                "file": "verify4-1.sh",
                "hint": "此步骤目前没有验证"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Filtro de gráfico circular de Matplotlib",
      "description": "En este laboratorio, demostraremos cómo usar efectos de filtrado con el gráfico circular de Matplotlib. Usaremos el código de dibujo de gráfico circular prestado de pie_demo.py y agregaremos efectos de filtrado al gráfico. Los efectos de filtrado solo son efectivos si su renderizador SVG los soporta.",
      "meta": {
        "title": "Filtro de gráfico circular de Matplotlib: Mejora tus visualizaciones de datos",
        "description": "Descubre cómo aplicar efectos de filtrado a los gráficos circulares de Matplotlib, desbloqueando nuevas posibilidades para el análisis y presentación de datos.",
        "keywords": "python playground, matplotlib, python, gráfico circular, visualización de datos, filtrado, svg"
      },
      "details": {
        "steps": [
          {
            "title": "Crear un gráfico circular",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Este paso no tiene verificación en este momento",
                "file": "verify1-1.sh",
                "hint": "Este paso no tiene verificación en este momento"
              }
            ]
          },
          {
            "title": "Guardar el gráfico como un SVG",
            "text": "es/step2.md",
            "verify": [
              {
                "name": "Este paso no tiene verificación en este momento",
                "file": "verify2-1.sh",
                "hint": "Este paso no tiene verificación en este momento"
              }
            ]
          },
          {
            "title": "Ver el gráfico circular con efectos de filtrado",
            "text": "es/step3.md",
            "verify": [
              {
                "name": "Este paso no tiene verificación en este momento",
                "file": "verify3-1.sh",
                "hint": "Este paso no tiene verificación en este momento"
              }
            ]
          },
          {
            "title": "Modificar el gráfico circular con diferentes filtros",
            "text": "es/step4.md",
            "verify": [
              {
                "name": "Este paso no tiene verificación en este momento",
                "file": "verify4-1.sh",
                "hint": "Este paso no tiene verificación en este momento"
              }
            ]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Filtre pour le diagramme circulaire de Matplotlib",
      "description": "Dans ce laboratoire, nous allons démontrer comment utiliser des effets de filtrage avec le diagramme circulaire de Matplotlib. Nous utiliserons le code de dessin de diagramme circulaire emprunté à pie_demo.py et ajouterons des effets de filtrage au graphique. Les effets de filtrage ne sont efficaces que si votre générateur SVG les prend en charge.",
      "meta": {
        "title": "Filtre pour le diagramme circulaire de Matplotlib : Améliorez vos visualisations de données",
        "description": "Découvrez comment appliquer des effets de filtrage aux diagrammes circulaires de Matplotlib, ouvrant de nouvelles possibilités pour l'analyse et la présentation des données.",
        "keywords": "python playground, matplotlib, python, diagramme circulaire, visualisation de données, filtrage, svg"
      },
      "details": {
        "steps": [
          {
            "title": "Créer un diagramme circulaire",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Cette étape n'a pas de vérification pour le moment",
                "file": "verify1-1.sh",
                "hint": "Cette étape n'a pas de vérification pour le moment"
              }
            ]
          },
          {
            "title": "Enregistrer le graphique au format SVG",
            "text": "fr/step2.md",
            "verify": [
              {
                "name": "Cette étape n'a pas de vérification pour le moment",
                "file": "verify2-1.sh",
                "hint": "Cette étape n'a pas de vérification pour le moment"
              }
            ]
          },
          {
            "title": "Voir le diagramme circulaire avec des effets de filtrage",
            "text": "fr/step3.md",
            "verify": [
              {
                "name": "Cette étape n'a pas de vérification pour le moment",
                "file": "verify3-1.sh",
                "hint": "Cette étape n'a pas de vérification pour le moment"
              }
            ]
          },
          {
            "title": "Modifier le diagramme circulaire avec différents filtres",
            "text": "fr/step4.md",
            "verify": [
              {
                "name": "Cette étape n'a pas de vérification pour le moment",
                "file": "verify4-1.sh",
                "hint": "Cette étape n'a pas de vérification pour le moment"
              }
            ]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Matplotlib Kreisdiagrammfilter",
      "description": "In diesem Lab werden wir demonstrieren, wie man Filtereffekte mit dem Kreisdiagramm von Matplotlib verwendet. Wir werden den Code für das Zeichnen des Kreisdiagramms, der aus pie_demo.py entnommen wurde, verwenden und Filtereffekte auf das Diagramm hinzufügen. Die Filtereffekte sind nur dann wirksam, wenn Ihr SVG-Renderer sie unterstützt.",
      "meta": {
        "title": "Matplotlib Kreisdiagrammfilter: Verbessern Sie Ihre Datenvisualisierungen",
        "description": "Entdecken Sie, wie Sie Filtereffekte auf die Kreisdiagramme von Matplotlib anwenden können und so neue Möglichkeiten für die Datenanalyse und -präsentation eröffnen.",
        "keywords": "python-Spielfeld, Matplotlib, python, Kreisdiagramm, Datenvisualisierung, Filterung, SVG"
      },
      "details": {
        "steps": [
          {
            "title": "Erstelle ein Kreisdiagramm",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Dieser Schritt hat momentan keine Verifizierung",
                "file": "verify1-1.sh",
                "hint": "Dieser Schritt hat momentan keine Verifizierung"
              }
            ]
          },
          {
            "title": "Speichere das Diagramm als SVG",
            "text": "de/step2.md",
            "verify": [
              {
                "name": "Dieser Schritt hat momentan keine Verifizierung",
                "file": "verify2-1.sh",
                "hint": "Dieser Schritt hat momentan keine Verifizierung"
              }
            ]
          },
          {
            "title": "Betrachte das Kreisdiagramm mit Filtereffekten",
            "text": "de/step3.md",
            "verify": [
              {
                "name": "Dieser Schritt hat momentan keine Verifizierung",
                "file": "verify3-1.sh",
                "hint": "Dieser Schritt hat momentan keine Verifizierung"
              }
            ]
          },
          {
            "title": "Ändere das Kreisdiagramm mit verschiedenen Filtern",
            "text": "de/step4.md",
            "verify": [
              {
                "name": "Dieser Schritt hat momentan keine Verifizierung",
                "file": "verify4-1.sh",
                "hint": "Dieser Schritt hat momentan keine Verifizierung"
              }
            ]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "Matplotlib 円グラフフィルタ",
      "description": "この実験では、Matplotlib の円グラフにフィルタリング効果をどのように使うかを示します。円グラフの描画コードは pie_demo.py から借用し、グラフにフィルタリング効果を追加します。フィルタリング効果は、SVG レンダラがサポートしている場合にのみ有効です。",
      "meta": {
        "title": "Matplotlib 円グラフフィルタ：データ可視化を強化する",
        "description": "Matplotlib の円グラフにフィルタリング効果を適用する方法を学び、データ分析とプレゼンテーションの新しい可能性を開きましょう。",
        "keywords": "python プレイグラウンド，matplotlib, python, 円グラフ，データ可視化，フィルタリング，svg"
      },
      "details": {
        "steps": [
          {
            "title": "円グラフを作成する",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "このステップでは現在検証はありません",
                "file": "verify1-1.sh",
                "hint": "このステップでは現在検証はありません"
              }
            ]
          },
          {
            "title": "グラフを SVG として保存する",
            "text": "ja/step2.md",
            "verify": [
              {
                "name": "このステップでは現在検証はありません",
                "file": "verify2-1.sh",
                "hint": "このステップでは現在検証はありません"
              }
            ]
          },
          {
            "title": "フィルタリング効果付きの円グラフを表示する",
            "text": "ja/step3.md",
            "verify": [
              {
                "name": "このステップでは現在検証はありません",
                "file": "verify3-1.sh",
                "hint": "このステップでは現在検証はありません"
              }
            ]
          },
          {
            "title": "異なるフィルタを使って円グラフを変更する",
            "text": "ja/step4.md",
            "verify": [
              {
                "name": "このステップでは現在検証はありません",
                "file": "verify4-1.sh",
                "hint": "このステップでは現在検証はありません"
              }
            ]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Фильтр для круговой диаграммы Matplotlib",
      "description": "В этом практическом занятии мы покажем, как использовать фильтры при работе с круговыми диаграммами в Matplotlib. Мы будем использовать код для рисования круговой диаграммы, взятый из pie_demo.py, и добавить фильтры к диаграмме. Фильтры будут действовать только в том случае, если ваш SVG-рендеринг их поддерживает.",
      "meta": {
        "title": "Фильтр для круговой диаграммы Matplotlib: Улучшайте свои визуализации данных",
        "description": "Откройте для себя, как применить фильтры к круговым диаграммам Matplotlib, открывая новые возможности для анализа и представления данных.",
        "keywords": "python playground, matplotlib, python, круговая диаграмма, визуализация данных, фильтрация, svg"
      },
      "details": {
        "steps": [
          {
            "title": "Создать круговую диаграмму",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "На этом этапе проверок нет",
                "file": "verify1-1.sh",
                "hint": "На этом этапе проверок нет"
              }
            ]
          },
          {
            "title": "Сохранить диаграмму в формате SVG",
            "text": "ru/step2.md",
            "verify": [
              {
                "name": "На этом этапе проверок нет",
                "file": "verify2-1.sh",
                "hint": "На этом этапе проверок нет"
              }
            ]
          },
          {
            "title": "Посмотреть круговую диаграмму с фильтрационными эффектами",
            "text": "ru/step3.md",
            "verify": [
              {
                "name": "На этом этапе проверок нет",
                "file": "verify3-1.sh",
                "hint": "На этом этапе проверок нет"
              }
            ]
          },
          {
            "title": "Изменить круговую диаграмму с использованием различных фильтров",
            "text": "ru/step4.md",
            "verify": [
              {
                "name": "На этом этапе проверок нет",
                "file": "verify4-1.sh",
                "hint": "На этом этапе проверок нет"
              }
            ]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    },
    {
      "lang": "ko",
      "title": "Matplotlib 파이 차트 필터",
      "description": "이 랩에서는 Matplotlib 의 파이 차트와 함께 필터링 효과를 사용하는 방법을 시연합니다. pie_demo.py 에서 가져온 파이 차트 그리기 코드를 사용하고 차트에 필터링 효과를 추가합니다. 필터링 효과는 SVG 렌더러가 이를 지원하는 경우에만 유효합니다.",
      "meta": {
        "title": "Matplotlib 파이 차트 필터: 데이터 시각화 향상 - 파이 차트 효과, Python 시각화",
        "description": "Matplotlib 파이 차트에 필터링 효과를 적용하여 데이터 분석 및 프레젠테이션의 새로운 가능성을 열어보세요. 파이 차트 효과, Python 데이터 시각화, Matplotlib 튜토리얼.",
        "keywords": "파이썬 플레이그라운드, matplotlib, 파이썬, 파이 차트, 데이터 시각화, 필터링, svg, 파이 차트 효과, Python 시각화, Matplotlib 튜토리얼"
      },
      "details": {
        "steps": [
          {
            "title": "파이 차트 생성",
            "text": "ko/step1.md",
            "verify": [
              {
                "name": "현재 이 단계에는 검증이 없습니다",
                "file": "verify1-1.sh",
                "hint": "현재 이 단계에는 검증이 없습니다"
              }
            ]
          },
          {
            "title": "차트를 SVG 로 저장",
            "text": "ko/step2.md",
            "verify": [
              {
                "name": "현재 이 단계에는 검증이 없습니다",
                "file": "verify2-1.sh",
                "hint": "현재 이 단계에는 검증이 없습니다"
              }
            ]
          },
          {
            "title": "필터 효과가 적용된 파이 차트 보기",
            "text": "ko/step3.md",
            "verify": [
              {
                "name": "현재 이 단계에는 검증이 없습니다",
                "file": "verify3-1.sh",
                "hint": "현재 이 단계에는 검증이 없습니다"
              }
            ]
          },
          {
            "title": "다양한 필터로 파이 차트 수정",
            "text": "ko/step4.md",
            "verify": [
              {
                "name": "현재 이 단계에는 검증이 없습니다",
                "file": "verify4-1.sh",
                "hint": "현재 이 단계에는 검증이 없습니다"
              }
            ]
          }
        ],
        "intro": {
          "text": "ko/intro.md",
          "title": "소개"
        },
        "finish": {
          "text": "ko/finish.md",
          "title": "요약"
        }
      }
    },
    {
      "lang": "pt",
      "title": "Filtro para Gráfico de Pizza Matplotlib",
      "description": "Neste laboratório, demonstraremos como usar efeitos de filtragem com o gráfico de pizza do Matplotlib. Usaremos o código de desenho do gráfico de pizza emprestado de pie_demo.py e adicionaremos efeitos de filtragem ao gráfico. Os efeitos de filtragem são eficazes apenas se o seu renderizador SVG os suportar.",
      "meta": {
        "title": "Filtro para Gráfico de Pizza Matplotlib: Aprimore suas Visualizações de Dados",
        "description": "Descubra como aplicar efeitos de filtragem aos gráficos de pizza do Matplotlib, desbloqueando novas possibilidades para análise e apresentação de dados. Aprenda a personalizar seus gráficos de pizza com filtros SVG.",
        "keywords": "python playground, matplotlib, python, gráfico de pizza, visualização de dados, filtragem, svg, gráficos interativos, análise de dados"
      },
      "details": {
        "steps": [
          {
            "title": "Criar um Gráfico de Pizza",
            "text": "pt/step1.md",
            "verify": [
              {
                "name": "Este passo não possui verificação no momento",
                "file": "verify1-1.sh",
                "hint": "Este passo não possui verificação no momento"
              }
            ]
          },
          {
            "title": "Salvar o Gráfico como SVG",
            "text": "pt/step2.md",
            "verify": [
              {
                "name": "Este passo não possui verificação no momento",
                "file": "verify2-1.sh",
                "hint": "Este passo não possui verificação no momento"
              }
            ]
          },
          {
            "title": "Visualizar o Gráfico de Pizza com Efeitos de Filtro",
            "text": "pt/step3.md",
            "verify": [
              {
                "name": "Este passo não possui verificação no momento",
                "file": "verify3-1.sh",
                "hint": "Este passo não possui verificação no momento"
              }
            ]
          },
          {
            "title": "Modificar o Gráfico de Pizza com Diferentes Filtros",
            "text": "pt/step4.md",
            "verify": [
              {
                "name": "Este passo não possui verificação no momento",
                "file": "verify4-1.sh",
                "hint": "Este passo não possui verificação no momento"
              }
            ]
          }
        ],
        "intro": {
          "text": "pt/intro.md",
          "title": "Introdução"
        },
        "finish": {
          "text": "pt/finish.md",
          "title": "Resumo"
        }
      }
    }
  ]
}
