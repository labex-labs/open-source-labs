{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Axis Line Styles",
  "description": "In this lab, we will learn how to configure axis style in Matplotlib. We will be using the mpl_toolkits.axisartist axes classes to add arrows at the ends of each axis and to add X and Y-axis from the origin. We will also hide the borders of the plot.",
  "meta": {
    "title": "Axis Line Styles: Customizing Matplotlib Plots",
    "description": "Learn how to configure axis styles in Matplotlib, including adding arrows and hiding borders for visually appealing data visualizations.",
    "keywords": "python playground, axis styles, matplotlib, axis lines, python, data visualization, plot customization"
  },
  "difficulty": "Beginner",
  "time": 25,
  "hidden": true,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Import Libraries",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "This step has no verification at the moment",
            "file": "verify1-1.sh",
            "hint": "This step has no verification at the moment"
          }
        ],
        "skills": [
          "matplotlib/figures_axes",
          "matplotlib/importing_matplotlib",
          "python/data_visualization",
          "python/importing_modules",
          "python/numerical_computing",
          "python/using_packages"
        ]
      },
      {
        "title": "Create Figure and Subplot",
        "text": "en/step2.md",
        "verify": [
          {
            "name": "This step has no verification at the moment",
            "file": "verify2-1.sh",
            "hint": "This step has no verification at the moment"
          }
        ],
        "skills": []
      },
      {
        "title": "Configure Axis Style",
        "text": "en/step3.md",
        "verify": [
          {
            "name": "This step has no verification at the moment",
            "file": "verify3-1.sh",
            "hint": "This step has no verification at the moment"
          }
        ],
        "skills": [
          "python/booleans",
          "python/comments",
          "python/for_loops",
          "python/lists"
        ]
      },
      {
        "title": "Plot the Graph",
        "text": "en/step4.md",
        "verify": [
          {
            "name": "This step has no verification at the moment",
            "file": "verify4-1.sh",
            "hint": "This step has no verification at the moment"
          }
        ],
        "skills": ["matplotlib/line_plots", "python/tuples"]
      },
      {
        "title": "Display the Graph",
        "text": "en/step5.md",
        "verify": [
          {
            "name": "This step has no verification at the moment",
            "file": "verify5-1.sh",
            "hint": "This step has no verification at the moment"
          }
        ],
        "skills": []
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    },
    "assets": {
      "host01": [
        {
          "file": "demo-axisline-style.ipynb",
          "target": "/home/labex/project",
          "chmod": "ugo+rwx"
        }
      ]
    }
  },
  "backend": {
    "imageid": "jupyter-ubuntu:2204"
  },
  "contributors": ["huduo0812"],
  "license": {
    "name": "BSD 3-Clause",
    "url": "https://github.com/matplotlib/matplotlib/tree/main/LICENSE",
    "repo": "https://github.com/matplotlib/matplotlib"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "坐标轴线条样式",
      "description": "在本实验中，我们将学习如何在 Matplotlib 中配置坐标轴样式。我们将使用 mpl_toolkits.axisartist 坐标轴类在每个坐标轴的末端添加箭头，并从原点添加 X 轴和 Y 轴。我们还将隐藏图表的边框。",
      "meta": {
        "title": "坐标轴线条样式：自定义 Matplotlib 图表",
        "description": "学习如何在 Matplotlib 中配置坐标轴样式，包括添加箭头和隐藏边框，以实现视觉上吸引人的数据可视化。",
        "keywords": "Python 实验场，坐标轴样式，Matplotlib, 坐标轴线条，Python, 数据可视化，图表定制"
      },
      "details": {
        "steps": [
          {
            "title": "导入库",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "此步骤目前没有验证",
                "file": "verify1-1.sh",
                "hint": "此步骤目前没有验证"
              }
            ]
          },
          {
            "title": "创建图形和子图",
            "text": "zh/step2.md",
            "verify": [
              {
                "name": "此步骤目前没有验证",
                "file": "verify2-1.sh",
                "hint": "此步骤目前没有验证"
              }
            ]
          },
          {
            "title": "配置坐标轴样式",
            "text": "zh/step3.md",
            "verify": [
              {
                "name": "此步骤目前没有验证",
                "file": "verify3-1.sh",
                "hint": "此步骤目前没有验证"
              }
            ]
          },
          {
            "title": "绘制图表",
            "text": "zh/step4.md",
            "verify": [
              {
                "name": "此步骤目前没有验证",
                "file": "verify4-1.sh",
                "hint": "此步骤目前没有验证"
              }
            ]
          },
          {
            "title": "显示图表",
            "text": "zh/step5.md",
            "verify": [
              {
                "name": "此步骤目前没有验证",
                "file": "verify5-1.sh",
                "hint": "此步骤目前没有验证"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Estilos de líneas de eje",
      "description": "En este laboratorio, aprenderemos cómo configurar el estilo de los ejes en Matplotlib. Utilizaremos las clases de ejes mpl_toolkits.axisartist para agregar flechas al final de cada eje y para agregar los ejes X e Y desde el origen. También ocultaremos los bordes de la gráfica.",
      "meta": {
        "title": "Estilos de líneas de eje: Personalizar gráficos de Matplotlib",
        "description": "Aprende cómo configurar los estilos de los ejes en Matplotlib, incluyendo la adición de flechas y la ocultación de bordes para visualizaciones de datos atractivas visualmente.",
        "keywords": "python playground, estilos de eje, matplotlib, líneas de eje, python, visualización de datos, personalización de gráficos"
      },
      "details": {
        "steps": [
          {
            "title": "Importar bibliotecas",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Este paso no tiene verificación en este momento",
                "file": "verify1-1.sh",
                "hint": "Este paso no tiene verificación en este momento"
              }
            ]
          },
          {
            "title": "Crear figura y subtrama",
            "text": "es/step2.md",
            "verify": [
              {
                "name": "Este paso no tiene verificación en este momento",
                "file": "verify2-1.sh",
                "hint": "Este paso no tiene verificación en este momento"
              }
            ]
          },
          {
            "title": "Configurar el estilo del eje",
            "text": "es/step3.md",
            "verify": [
              {
                "name": "Este paso no tiene verificación en este momento",
                "file": "verify3-1.sh",
                "hint": "Este paso no tiene verificación en este momento"
              }
            ]
          },
          {
            "title": "Trazar la gráfica",
            "text": "es/step4.md",
            "verify": [
              {
                "name": "Este paso no tiene verificación en este momento",
                "file": "verify4-1.sh",
                "hint": "Este paso no tiene verificación en este momento"
              }
            ]
          },
          {
            "title": "Mostrar la gráfica",
            "text": "es/step5.md",
            "verify": [
              {
                "name": "Este paso no tiene verificación en este momento",
                "file": "verify5-1.sh",
                "hint": "Este paso no tiene verificación en este momento"
              }
            ]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Styles de lignes d'axes",
      "description": "Dans ce laboratoire, nous allons apprendre à configurer le style des axes dans Matplotlib. Nous utiliserons les classes d'axes mpl_toolkits.axisartist pour ajouter des flèches à chaque extrémité des axes et pour ajouter les axes X et Y à partir de l'origine. Nous cacherons également les bordures du tracé.",
      "meta": {
        "title": "Styles de lignes d'axes : personnalisation des graphiques Matplotlib",
        "description": "Découvrez comment configurer les styles d'axes dans Matplotlib, y compris l'ajout de flèches et le masquage des bordures pour des visualisations de données attrayantes.",
        "keywords": "python playground, styles d'axes, matplotlib, lignes d'axes, python, visualisation de données, personnalisation de tracé"
      },
      "details": {
        "steps": [
          {
            "title": "Importer les bibliothèques",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Cette étape n'a pas de vérification pour le moment",
                "file": "verify1-1.sh",
                "hint": "Cette étape n'a pas de vérification pour le moment"
              }
            ]
          },
          {
            "title": "Créer une figure et un sous-graphe",
            "text": "fr/step2.md",
            "verify": [
              {
                "name": "Cette étape n'a pas de vérification pour le moment",
                "file": "verify2-1.sh",
                "hint": "Cette étape n'a pas de vérification pour le moment"
              }
            ]
          },
          {
            "title": "Configurer le style des axes",
            "text": "fr/step3.md",
            "verify": [
              {
                "name": "Cette étape n'a pas de vérification pour le moment",
                "file": "verify3-1.sh",
                "hint": "Cette étape n'a pas de vérification pour le moment"
              }
            ]
          },
          {
            "title": "Tracer le graphique",
            "text": "fr/step4.md",
            "verify": [
              {
                "name": "Cette étape n'a pas de vérification pour le moment",
                "file": "verify4-1.sh",
                "hint": "Cette étape n'a pas de vérification pour le moment"
              }
            ]
          },
          {
            "title": "Afficher le graphique",
            "text": "fr/step5.md",
            "verify": [
              {
                "name": "Cette étape n'a pas de vérification pour le moment",
                "file": "verify5-1.sh",
                "hint": "Cette étape n'a pas de vérification pour le moment"
              }
            ]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Achsenlinienstile",
      "description": "In diesem Lab werden wir lernen, wie man den Achsenstil in Matplotlib konfiguriert. Wir werden die Achsenklassen aus mpl_toolkits.axisartist verwenden, um Pfeile am Ende jeder Achse hinzuzufügen und die X- und Y-Achse vom Ursprung aus hinzuzufügen. Wir werden auch die Ränder des Diagramms ausblenden.",
      "meta": {
        "title": "Achsenlinienstile: Anpassen von Matplotlib-Diagrammen",
        "description": "Lernen Sie, wie man Achsenstile in Matplotlib konfiguriert, einschließlich des Hinzufügens von Pfeilen und des Ausblendens von Rändern für ansprechende Datenvisualisierungen.",
        "keywords": "Python-Spielfeld, Achsenstile, Matplotlib, Achsenlinien, Python, Datenvisualisierung, Diagrammanpassung"
      },
      "details": {
        "steps": [
          {
            "title": "Bibliotheken importieren",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Dieser Schritt hat momentan keine Verifizierung",
                "file": "verify1-1.sh",
                "hint": "Dieser Schritt hat momentan keine Verifizierung"
              }
            ]
          },
          {
            "title": "Figur und Teilgrafik erstellen",
            "text": "de/step2.md",
            "verify": [
              {
                "name": "Dieser Schritt hat momentan keine Verifizierung",
                "file": "verify2-1.sh",
                "hint": "Dieser Schritt hat momentan keine Verifizierung"
              }
            ]
          },
          {
            "title": "Achsenstil konfigurieren",
            "text": "de/step3.md",
            "verify": [
              {
                "name": "Dieser Schritt hat momentan keine Verifizierung",
                "file": "verify3-1.sh",
                "hint": "Dieser Schritt hat momentan keine Verifizierung"
              }
            ]
          },
          {
            "title": "Den Graphen zeichnen",
            "text": "de/step4.md",
            "verify": [
              {
                "name": "Dieser Schritt hat momentan keine Verifizierung",
                "file": "verify4-1.sh",
                "hint": "Dieser Schritt hat momentan keine Verifizierung"
              }
            ]
          },
          {
            "title": "Den Graphen anzeigen",
            "text": "de/step5.md",
            "verify": [
              {
                "name": "Dieser Schritt hat momentan keine Verifizierung",
                "file": "verify5-1.sh",
                "hint": "Dieser Schritt hat momentan keine Verifizierung"
              }
            ]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "軸線スタイル",
      "description": "この実験では、Matplotlib で軸スタイルを構成する方法を学びます。各軸の端に矢印を追加し、原点から X 軸と Y 軸を追加するために、mpl_toolkits.axisartist の軸クラスを使用します。また、プロットの境界を非表示にします。",
      "meta": {
        "title": "軸線スタイル：Matplotlib プロットのカスタマイズ",
        "description": "Matplotlib で軸スタイルを構成する方法を学びましょう。視覚的に魅力的なデータ可視化のために、矢印の追加や境界の非表示化を含めた方法です。",
        "keywords": "python プレイグラウンド，軸スタイル，Matplotlib, 軸線，python, データ可視化，プロットカスタマイズ"
      },
      "details": {
        "steps": [
          {
            "title": "ライブラリをインポートする",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "このステップには現在検証はありません",
                "file": "verify1-1.sh",
                "hint": "このステップには現在検証はありません"
              }
            ]
          },
          {
            "title": "グラフとサブプロットを作成する",
            "text": "ja/step2.md",
            "verify": [
              {
                "name": "このステップには現在検証はありません",
                "file": "verify2-1.sh",
                "hint": "このステップには現在検証はありません"
              }
            ]
          },
          {
            "title": "軸スタイルを構成する",
            "text": "ja/step3.md",
            "verify": [
              {
                "name": "このステップには現在検証はありません",
                "file": "verify3-1.sh",
                "hint": "このステップには現在検証はありません"
              }
            ]
          },
          {
            "title": "グラフをプロットする",
            "text": "ja/step4.md",
            "verify": [
              {
                "name": "このステップには現在検証はありません",
                "file": "verify4-1.sh",
                "hint": "このステップには現在検証はありません"
              }
            ]
          },
          {
            "title": "グラフを表示する",
            "text": "ja/step5.md",
            "verify": [
              {
                "name": "このステップには現在検証はありません",
                "file": "verify5-1.sh",
                "hint": "このステップには現在検証はありません"
              }
            ]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Стили осевых линий",
      "description": "В этом практическом занятии мы узнаем, как настроить стиль осей в Matplotlib. Мы будем использовать классы осей mpl_toolkits.axisartist для добавления стрелок в концы каждой оси и для добавления осей X и Y из начала координат. Мы также скрываем границы графика.",
      "meta": {
        "title": "Стили осевых линий: настройка графиков Matplotlib",
        "description": "Изучите, как настроить стили осей в Matplotlib, включая добавление стрелок и скрытие границ для визуально привлекательных визуализаций данных.",
        "keywords": "python playground, стили осей, matplotlib, осевые линии, python, визуализация данных, настройка графика"
      },
      "details": {
        "steps": [
          {
            "title": "Импортировать библиотеки",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "На данный момент эта стадия не имеет проверки",
                "file": "verify1-1.sh",
                "hint": "На данный момент эта стадия не имеет проверки"
              }
            ]
          },
          {
            "title": "Создать фигуру и подграфик",
            "text": "ru/step2.md",
            "verify": [
              {
                "name": "На данный момент эта стадия не имеет проверки",
                "file": "verify2-1.sh",
                "hint": "На данный момент эта стадия не имеет проверки"
              }
            ]
          },
          {
            "title": "Настроить стиль осей",
            "text": "ru/step3.md",
            "verify": [
              {
                "name": "На данный момент эта стадия не имеет проверки",
                "file": "verify3-1.sh",
                "hint": "На данный момент эта стадия не имеет проверки"
              }
            ]
          },
          {
            "title": "Построить график",
            "text": "ru/step4.md",
            "verify": [
              {
                "name": "На данный момент эта стадия не имеет проверки",
                "file": "verify4-1.sh",
                "hint": "На данный момент эта стадия не имеет проверки"
              }
            ]
          },
          {
            "title": "Показать график",
            "text": "ru/step5.md",
            "verify": [
              {
                "name": "На данный момент эта стадия не имеет проверки",
                "file": "verify5-1.sh",
                "hint": "На данный момент эта стадия не имеет проверки"
              }
            ]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    },
    {
      "lang": "ko",
      "title": "축 스타일 설정",
      "description": "이 랩에서는 Matplotlib 에서 축 스타일을 구성하는 방법을 배웁니다. mpl_toolkits.axisartist 축 클래스를 사용하여 각 축의 끝에 화살표를 추가하고 원점에서 X 축과 Y 축을 추가합니다. 또한 플롯의 테두리를 숨깁니다.",
      "meta": {
        "title": "축 스타일: Matplotlib 플롯 사용자 정의 - 데이터 시각화 튜토리얼",
        "description": "Matplotlib 에서 축 스타일을 구성하는 방법을 알아보세요. 화살표 추가 및 테두리 숨기기를 포함하여 시각적으로 매력적인 데이터 시각화를 만들 수 있습니다.",
        "keywords": "파이썬 플레이그라운드, 축 스타일, matplotlib, 축 선, 파이썬, 데이터 시각화, 플롯 사용자 정의, matplotlib 축 스타일 설정, matplotlib 축 꾸미기, 파이썬 데이터 시각화"
      },
      "details": {
        "steps": [
          {
            "title": "라이브러리 가져오기",
            "text": "ko/step1.md",
            "verify": [
              {
                "name": "현재 이 단계에는 검증이 없습니다.",
                "file": "verify1-1.sh",
                "hint": "현재 이 단계에는 검증이 없습니다."
              }
            ]
          },
          {
            "title": "Figure 및 Subplot 생성",
            "text": "ko/step2.md",
            "verify": [
              {
                "name": "현재 이 단계에는 검증이 없습니다.",
                "file": "verify2-1.sh",
                "hint": "현재 이 단계에는 검증이 없습니다."
              }
            ]
          },
          {
            "title": "축 스타일 설정",
            "text": "ko/step3.md",
            "verify": [
              {
                "name": "현재 이 단계에는 검증이 없습니다.",
                "file": "verify3-1.sh",
                "hint": "현재 이 단계에는 검증이 없습니다."
              }
            ]
          },
          {
            "title": "그래프 플롯 (Plot) 하기",
            "text": "ko/step4.md",
            "verify": [
              {
                "name": "현재 이 단계에는 검증이 없습니다.",
                "file": "verify4-1.sh",
                "hint": "현재 이 단계에는 검증이 없습니다."
              }
            ]
          },
          {
            "title": "그래프 표시 (Display) 하기",
            "text": "ko/step5.md",
            "verify": [
              {
                "name": "현재 이 단계에는 검증이 없습니다.",
                "file": "verify5-1.sh",
                "hint": "현재 이 단계에는 검증이 없습니다."
              }
            ]
          }
        ],
        "intro": {
          "text": "ko/intro.md",
          "title": "소개"
        },
        "finish": {
          "text": "ko/finish.md",
          "title": "요약"
        }
      }
    },
    {
      "lang": "pt",
      "title": "Estilos de Linhas de Eixo",
      "description": "Neste laboratório, aprenderemos como configurar o estilo dos eixos em Matplotlib. Usaremos as classes de eixos `mpl_toolkits.axisartist` para adicionar setas nas extremidades de cada eixo e para adicionar os eixos X e Y a partir da origem. Também ocultaremos as bordas do gráfico.",
      "meta": {
        "title": "Estilos de Linhas de Eixo: Personalizando Gráficos Matplotlib",
        "description": "Aprenda como configurar estilos de eixos em Matplotlib, incluindo a adição de setas e a ocultação de bordas para visualizações de dados visualmente atraentes.",
        "keywords": "python playground, estilos de eixo, matplotlib, linhas de eixo, python, visualização de dados, personalização de gráficos, gráficos matplotlib, eixos matplotlib"
      },
      "details": {
        "steps": [
          {
            "title": "Importar Bibliotecas",
            "text": "pt/step1.md",
            "verify": [
              {
                "name": "Este passo não possui verificação no momento",
                "file": "verify1-1.sh",
                "hint": "Este passo não possui verificação no momento"
              }
            ]
          },
          {
            "title": "Criar Figura e Subplot",
            "text": "pt/step2.md",
            "verify": [
              {
                "name": "Este passo não possui verificação no momento",
                "file": "verify2-1.sh",
                "hint": "Este passo não possui verificação no momento"
              }
            ]
          },
          {
            "title": "Configurar Estilo do Eixo",
            "text": "pt/step3.md",
            "verify": [
              {
                "name": "Este passo não possui verificação no momento",
                "file": "verify3-1.sh",
                "hint": "Este passo não possui verificação no momento"
              }
            ]
          },
          {
            "title": "Plotar o Gráfico",
            "text": "pt/step4.md",
            "verify": [
              {
                "name": "Este passo não possui verificação no momento",
                "file": "verify4-1.sh",
                "hint": "Este passo não possui verificação no momento"
              }
            ]
          },
          {
            "title": "Exibir o Gráfico",
            "text": "pt/step5.md",
            "verify": [
              {
                "name": "Este passo não possui verificação no momento",
                "file": "verify5-1.sh",
                "hint": "Este passo não possui verificação no momento"
              }
            ]
          }
        ],
        "intro": {
          "text": "pt/intro.md",
          "title": "Introdução"
        },
        "finish": {
          "text": "pt/finish.md",
          "title": "Resumo"
        }
      }
    }
  ]
}
