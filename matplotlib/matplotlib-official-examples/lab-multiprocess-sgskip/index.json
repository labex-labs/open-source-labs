{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Multiprocessing with Matplotlib",
  "description": "In this lab, you will learn how to use the multiprocessing library and Matplotlib to plot data generated from a separate process. We will create two classes - ProcessPlotter and NBPlot - to handle the plotting and data generation, respectively. The NBPlot class will generate random data and send it to the ProcessPlotter class through a pipe, which will then plot the data in real-time.",
  "meta": {
    "title": "Unlock the Power of Multiprocessing and Matplotlib",
    "description": "Discover how to leverage multiprocessing and Matplotlib to create real-time data visualizations.",
    "keywords": "matplotlib, python, data visualization, multiprocessing, programming"
  },
  "difficulty": "Beginner",
  "time": 20,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Import Libraries",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "This step has no verification at the moment",
            "file": "verify1-1.sh",
            "hint": "This step has no verification at the moment"
          }
        ],
        "skills": [
          "matplotlib/figures_axes",
          "matplotlib/importing_matplotlib",
          "python/data_visualization",
          "python/importing_modules",
          "python/numerical_computing",
          "python/standard_libraries",
          "python/threading_multiprocessing"
        ]
      },
      {
        "title": "Define the ProcessPlotter Class",
        "text": "en/step2.md",
        "verify": [
          {
            "name": "This step has no verification at the moment",
            "file": "verify2-1.sh",
            "hint": "This step has no verification at the moment"
          }
        ],
        "skills": [
          "matplotlib/line_plots",
          "python/booleans",
          "python/build_in_functions",
          "python/classes_objects",
          "python/conditional_statements",
          "python/constructor",
          "python/encapsulation",
          "python/function_definition",
          "python/lists",
          "python/polymorphism",
          "python/tuples",
          "python/while_loops"
        ]
      },
      {
        "title": "Define the NBPlot Class",
        "text": "en/step3.md",
        "verify": [
          {
            "name": "This step has no verification at the moment",
            "file": "verify3-1.sh",
            "hint": "This step has no verification at the moment"
          }
        ],
        "skills": [
          "python/booleans",
          "python/classes_objects",
          "python/conditional_statements",
          "python/constructor",
          "python/default_arguments",
          "python/encapsulation",
          "python/function_definition",
          "python/math_random",
          "python/polymorphism",
          "python/standard_libraries",
          "python/tuples"
        ]
      },
      {
        "title": "Create an instance of NBPlot and send data to ProcessPlotter",
        "text": "en/step4.md",
        "verify": [
          {
            "name": "This step has no verification at the moment",
            "file": "verify4-1.sh",
            "hint": "This step has no verification at the moment"
          }
        ],
        "skills": [
          "matplotlib/custom_backends",
          "matplotlib/line_plots",
          "python/booleans",
          "python/build_in_functions",
          "python/conditional_statements",
          "python/for_loops",
          "python/function_definition",
          "python/standard_libraries"
        ]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    },
    "assets": {
      "host01": [
        {
          "file": "multiprocess-sgskip.ipynb",
          "target": "/home/labex/project",
          "chmod": "ugo+rwx"
        }
      ]
    }
  },
  "backend": {
    "imageid": "jupyter-ubuntu:2204"
  },
  "contributors": [],
  "license": {
    "name": "BSD 3-Clause",
    "url": "https://github.com/matplotlib/matplotlib/tree/main/LICENSE",
    "repo": "https://github.com/matplotlib/matplotlib"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "使用 Matplotlib 进行多进程处理",
      "description": "在本实验中，你将学习如何使用多进程库和 Matplotlib 来绘制从单独进程生成的数据。我们将创建两个类——ProcessPlotter 和 NBPlot——分别用于处理绘图和数据生成。NBPlot 类将生成随机数据，并通过管道将其发送到 ProcessPlotter 类，然后该类将实时绘制数据。",
      "meta": {
        "title": "释放多进程处理和 Matplotlib 的强大功能",
        "description": "探索如何利用多进程处理和 Matplotlib 创建实时数据可视化。",
        "keywords": "Matplotlib, Python, 数据可视化，多进程处理，编程"
      },
      "details": {
        "steps": [
          {
            "title": "导入库",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "此步骤目前没有验证",
                "file": "verify1-1.sh",
                "hint": "此步骤目前没有验证"
              }
            ]
          },
          {
            "title": "定义 ProcessPlotter 类",
            "text": "zh/step2.md",
            "verify": [
              {
                "name": "此步骤目前没有验证",
                "file": "verify2-1.sh",
                "hint": "此步骤目前没有验证"
              }
            ]
          },
          {
            "title": "定义 NBPlot 类",
            "text": "zh/step3.md",
            "verify": [
              {
                "name": "此步骤目前没有验证",
                "file": "verify3-1.sh",
                "hint": "此步骤目前没有验证"
              }
            ]
          },
          {
            "title": "创建 NBPlot 实例并将数据发送到 ProcessPlotter",
            "text": "zh/step4.md",
            "verify": [
              {
                "name": "此步骤目前没有验证",
                "file": "verify4-1.sh",
                "hint": "此步骤目前没有验证"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Multiprocesamiento con Matplotlib",
      "description": "En este laboratorio, aprenderá a usar la biblioteca de multiprocesamiento y Matplotlib para graficar datos generados por un proceso separado. Crearemos dos clases, ProcessPlotter y NBPlot, para manejar la graficación y la generación de datos, respectivamente. La clase NBPlot generará datos aleatorios y los enviará a la clase ProcessPlotter a través de un tubo, que luego graficará los datos en tiempo real.",
      "meta": {
        "title": "Desbloquea el poder del multiprocesamiento y Matplotlib",
        "description": "Descubre cómo aprovechar el multiprocesamiento y Matplotlib para crear visualizaciones de datos en tiempo real.",
        "keywords": "matplotlib, python, visualización de datos, multiprocesamiento, programación"
      },
      "details": {
        "steps": [
          {
            "title": "Importar bibliotecas",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Este paso no tiene verificaciones en este momento",
                "file": "verify1-1.sh",
                "hint": "Este paso no tiene verificaciones en este momento"
              }
            ]
          },
          {
            "title": "Definir la clase ProcessPlotter",
            "text": "es/step2.md",
            "verify": [
              {
                "name": "Este paso no tiene verificaciones en este momento",
                "file": "verify2-1.sh",
                "hint": "Este paso no tiene verificaciones en este momento"
              }
            ]
          },
          {
            "title": "Definir la clase NBPlot",
            "text": "es/step3.md",
            "verify": [
              {
                "name": "Este paso no tiene verificaciones en este momento",
                "file": "verify3-1.sh",
                "hint": "Este paso no tiene verificaciones en este momento"
              }
            ]
          },
          {
            "title": "Crear una instancia de NBPlot y enviar datos a ProcessPlotter",
            "text": "es/step4.md",
            "verify": [
              {
                "name": "Este paso no tiene verificaciones en este momento",
                "file": "verify4-1.sh",
                "hint": "Este paso no tiene verificaciones en este momento"
              }
            ]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Multiprocessing avec Matplotlib",
      "description": "Dans ce laboratoire, vous allez apprendre à utiliser la bibliothèque multiprocessing et Matplotlib pour tracer des données générées à partir d'un processus séparé. Nous allons créer deux classes - ProcessPlotter et NBPlot - pour gérer respectivement le tracé et la génération de données. La classe NBPlot va générer des données aléatoires et les envoyer à la classe ProcessPlotter via un tube, qui va ensuite tracer les données en temps réel.",
      "meta": {
        "title": "Découvrez le pouvoir de la multiprocessing et de Matplotlib",
        "description": "Découvrez comment exploiter la multiprocessing et Matplotlib pour créer des visualisations de données en temps réel.",
        "keywords": "matplotlib, python, visualisation de données, multiprocessing, programmation"
      },
      "details": {
        "steps": [
          {
            "title": "Importer les bibliothèques",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Cette étape n'a pas de vérification pour le moment",
                "file": "verify1-1.sh",
                "hint": "Cette étape n'a pas de vérification pour le moment"
              }
            ]
          },
          {
            "title": "Définir la classe ProcessPlotter",
            "text": "fr/step2.md",
            "verify": [
              {
                "name": "Cette étape n'a pas de vérification pour le moment",
                "file": "verify2-1.sh",
                "hint": "Cette étape n'a pas de vérification pour le moment"
              }
            ]
          },
          {
            "title": "Définir la classe NBPlot",
            "text": "fr/step3.md",
            "verify": [
              {
                "name": "Cette étape n'a pas de vérification pour le moment",
                "file": "verify3-1.sh",
                "hint": "Cette étape n'a pas de vérification pour le moment"
              }
            ]
          },
          {
            "title": "Créer une instance de NBPlot et envoyer des données à ProcessPlotter",
            "text": "fr/step4.md",
            "verify": [
              {
                "name": "Cette étape n'a pas de vérification pour le moment",
                "file": "verify4-1.sh",
                "hint": "Cette étape n'a pas de vérification pour le moment"
              }
            ]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Multiprocessing mit Matplotlib",
      "description": "In diesem Lab lernst du, wie du die multiprocessing-Bibliothek und Matplotlib verwendest, um Daten zu visualisieren, die aus einem separaten Prozess generiert wurden. Wir werden zwei Klassen - ProcessPlotter und NBPlot - erstellen, um die Visualisierung und die Datengenerierung jeweils zu verarbeiten. Die NBPlot-Klasse wird zufällige Daten generieren und sie über eine Pipe an die ProcessPlotter-Klasse senden, die dann die Daten in Echtzeit visualisieren wird.",
      "meta": {
        "title": "Entdecke die Macht von Multiprocessing und Matplotlib",
        "description": "Entdecke, wie du Multiprocessing und Matplotlib nutzen kannst, um Echtzeit-Datavisualisierungen zu erstellen.",
        "keywords": "Matplotlib, Python, Datavisualisierung, Multiprocessing, Programmierung"
      },
      "details": {
        "steps": [
          {
            "title": "Bibliotheken importieren",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Dieser Schritt hat momentan keine Verifizierung",
                "file": "verify1-1.sh",
                "hint": "Dieser Schritt hat momentan keine Verifizierung"
              }
            ]
          },
          {
            "title": "Definiere die ProcessPlotter-Klasse",
            "text": "de/step2.md",
            "verify": [
              {
                "name": "Dieser Schritt hat momentan keine Verifizierung",
                "file": "verify2-1.sh",
                "hint": "Dieser Schritt hat momentan keine Verifizierung"
              }
            ]
          },
          {
            "title": "Definiere die NBPlot-Klasse",
            "text": "de/step3.md",
            "verify": [
              {
                "name": "Dieser Schritt hat momentan keine Verifizierung",
                "file": "verify3-1.sh",
                "hint": "Dieser Schritt hat momentan keine Verifizierung"
              }
            ]
          },
          {
            "title": "Erstelle eine Instanz von NBPlot und sende Daten an ProcessPlotter",
            "text": "de/step4.md",
            "verify": [
              {
                "name": "Dieser Schritt hat momentan keine Verifizierung",
                "file": "verify4-1.sh",
                "hint": "Dieser Schritt hat momentan keine Verifizierung"
              }
            ]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "Matplotlib を用いたマルチプロセッシング",
      "description": "この実験では、マルチプロセッシングライブラリと Matplotlib を使って、別プロセスから生成されたデータをプロットする方法を学びます。それぞれプロットとデータ生成を担当する 2 つのクラス ProcessPlotter と NBPlot を作成します。NBPlot クラスはランダムなデータを生成し、パイプを通じて ProcessPlotter クラスに送信し、その後でデータをリアルタイムでプロットします。",
      "meta": {
        "title": "マルチプロセッシングと Matplotlib の力を解き放つ",
        "description": "マルチプロセッシングと Matplotlib を活用してリアルタイムデータ可視化を作成する方法を学びましょう。",
        "keywords": "Matplotlib, Python, データ可視化，マルチプロセッシング，プログラミング"
      },
      "details": {
        "steps": [
          {
            "title": "ライブラリのインポート",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "このステップでは現在検証はありません",
                "file": "verify1-1.sh",
                "hint": "このステップでは現在検証はありません"
              }
            ]
          },
          {
            "title": "ProcessPlotter クラスを定義する",
            "text": "ja/step2.md",
            "verify": [
              {
                "name": "このステップでは現在検証はありません",
                "file": "verify2-1.sh",
                "hint": "このステップでは現在検証はありません"
              }
            ]
          },
          {
            "title": "NBPlot クラスを定義する",
            "text": "ja/step3.md",
            "verify": [
              {
                "name": "このステップでは現在検証はありません",
                "file": "verify3-1.sh",
                "hint": "このステップでは現在検証はありません"
              }
            ]
          },
          {
            "title": "NBPlot のインスタンスを作成し、データを ProcessPlotter に送信する",
            "text": "ja/step4.md",
            "verify": [
              {
                "name": "このステップでは現在検証はありません",
                "file": "verify4-1.sh",
                "hint": "このステップでは現在検証はありません"
              }
            ]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Многопроцессорность с Matplotlib",
      "description": "В этом практическом занятии вы научитесь использовать библиотеку многопроцессорности и Matplotlib для построения графиков для данных, генерируемых в отдельном процессе. Мы создадим два класса - ProcessPlotter и NBPlot - для обработки построения графиков и генерации данных соответственно. Класс NBPlot будет генерировать случайные данные и отправлять их в класс ProcessPlotter через трубу, который затем будет строить данные в режиме реального времени.",
      "meta": {
        "title": "Откройте мощь многопроцессорности и Matplotlib",
        "description": "Изучите, как использовать многопроцессорность и Matplotlib для создания реального времени визуализации данных.",
        "keywords": "matplotlib, python, визуализация данных, многопроцессорность, программирование"
      },
      "details": {
        "steps": [
          {
            "title": "Импортировать библиотеки",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "На данный момент эта стадия не имеет проверки",
                "file": "verify1-1.sh",
                "hint": "На данный момент эта стадия не имеет проверки"
              }
            ]
          },
          {
            "title": "Определить класс ProcessPlotter",
            "text": "ru/step2.md",
            "verify": [
              {
                "name": "На данный момент эта стадия не имеет проверки",
                "file": "verify2-1.sh",
                "hint": "На данный момент эта стадия не имеет проверки"
              }
            ]
          },
          {
            "title": "Определить класс NBPlot",
            "text": "ru/step3.md",
            "verify": [
              {
                "name": "На данный момент эта стадия не имеет проверки",
                "file": "verify3-1.sh",
                "hint": "На данный момент эта стадия не имеет проверки"
              }
            ]
          },
          {
            "title": "Создать экземпляр NBPlot и отправить данные в ProcessPlotter",
            "text": "ru/step4.md",
            "verify": [
              {
                "name": "На данный момент эта стадия не имеет проверки",
                "file": "verify4-1.sh",
                "hint": "На данный момент эта стадия не имеет проверки"
              }
            ]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    },
    {
      "lang": "ko",
      "title": "Matplotlib 를 활용한 멀티프로세싱",
      "description": "이 랩에서는 multiprocessing 라이브러리와 Matplotlib 을 사용하여 별도의 프로세스에서 생성된 데이터를 플로팅하는 방법을 배웁니다. 플로팅과 데이터 생성을 각각 처리하기 위해 ProcessPlotter 와 NBPlot 두 개의 클래스를 생성합니다. NBPlot 클래스는 임의의 데이터를 생성하여 파이프를 통해 ProcessPlotter 클래스로 전송하며, ProcessPlotter 는 이 데이터를 실시간으로 플로팅합니다.",
      "meta": {
        "title": "멀티프로세싱과 Matplotlib 의 강력한 기능 활용하기",
        "description": "멀티프로세싱과 Matplotlib 을 활용하여 실시간 데이터 시각화를 만드는 방법을 알아보세요.",
        "keywords": "matplotlib, 파이썬, 데이터 시각화, 멀티프로세싱, 프로그래밍, 실시간 데이터 시각화"
      },
      "details": {
        "steps": [
          {
            "title": "라이브러리 임포트",
            "text": "ko/step1.md",
            "verify": [
              {
                "name": "현재 이 단계는 검증이 없습니다.",
                "file": "verify1-1.sh",
                "hint": "현재 이 단계는 검증이 없습니다."
              }
            ]
          },
          {
            "title": "ProcessPlotter 클래스 정의",
            "text": "ko/step2.md",
            "verify": [
              {
                "name": "현재 이 단계는 검증이 없습니다.",
                "file": "verify2-1.sh",
                "hint": "현재 이 단계는 검증이 없습니다."
              }
            ]
          },
          {
            "title": "NBPlot 클래스 정의",
            "text": "ko/step3.md",
            "verify": [
              {
                "name": "현재 이 단계는 검증이 없습니다.",
                "file": "verify3-1.sh",
                "hint": "현재 이 단계는 검증이 없습니다."
              }
            ]
          },
          {
            "title": "NBPlot 인스턴스 생성 및 ProcessPlotter 에 데이터 전송",
            "text": "ko/step4.md",
            "verify": [
              {
                "name": "현재 이 단계는 검증이 없습니다.",
                "file": "verify4-1.sh",
                "hint": "현재 이 단계는 검증이 없습니다."
              }
            ]
          }
        ],
        "intro": {
          "text": "ko/intro.md",
          "title": "소개"
        },
        "finish": {
          "text": "ko/finish.md",
          "title": "요약"
        }
      }
    },
    {
      "lang": "pt",
      "title": "Multiprocessamento com Matplotlib",
      "description": "Neste laboratório, você aprenderá como usar a biblioteca multiprocessing e Matplotlib para plotar dados gerados a partir de um processo separado. Criaremos duas classes - ProcessPlotter e NBPlot - para lidar com a plotagem e a geração de dados, respectivamente. A classe NBPlot gerará dados aleatórios e os enviará para a classe ProcessPlotter através de um pipe, que então plotará os dados em tempo real.",
      "meta": {
        "title": "Desvende o Poder do Multiprocessamento e Matplotlib",
        "description": "Descubra como aproveitar o multiprocessamento e Matplotlib para criar visualizações de dados em tempo real.",
        "keywords": "matplotlib, python, visualização de dados, multiprocessamento, programação, gráficos em tempo real, análise de dados"
      },
      "details": {
        "steps": [
          {
            "title": "Importar Bibliotecas",
            "text": "pt/step1.md",
            "verify": [
              {
                "name": "Esta etapa não possui verificação no momento",
                "file": "verify1-1.sh",
                "hint": "Esta etapa não possui verificação no momento"
              }
            ]
          },
          {
            "title": "Definir a Classe ProcessPlotter",
            "text": "pt/step2.md",
            "verify": [
              {
                "name": "Esta etapa não possui verificação no momento",
                "file": "verify2-1.sh",
                "hint": "Esta etapa não possui verificação no momento"
              }
            ]
          },
          {
            "title": "Definir a Classe NBPlot",
            "text": "pt/step3.md",
            "verify": [
              {
                "name": "Esta etapa não possui verificação no momento",
                "file": "verify3-1.sh",
                "hint": "Esta etapa não possui verificação no momento"
              }
            ]
          },
          {
            "title": "Criar uma instância de NBPlot e enviar dados para ProcessPlotter",
            "text": "pt/step4.md",
            "verify": [
              {
                "name": "Esta etapa não possui verificação no momento",
                "file": "verify4-1.sh",
                "hint": "Esta etapa não possui verificação no momento"
              }
            ]
          }
        ],
        "intro": {
          "text": "pt/intro.md",
          "title": "Introdução"
        },
        "finish": {
          "text": "pt/finish.md",
          "title": "Resumo"
        }
      }
    }
  ]
}
