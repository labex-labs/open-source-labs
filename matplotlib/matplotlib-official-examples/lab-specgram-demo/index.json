{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Spectrogram Plotting with Matplotlib",
  "description": "In this lab, we will learn how to create a spectrogram plot using Matplotlib. A spectrogram is a visual representation of the spectrum of frequencies of a signal as it varies with time. Spectrograms are commonly used to analyze the frequency content of a signal over time, such as in speech recognition, music analysis, and audio signal processing. We will use Python and Matplotlib to create a spectrogram plot of a signal.",
  "meta": {
    "title": "Spectrogram Plotting with Python | Data Visualization",
    "description": "Learn how to create a spectrogram plot using Matplotlib in this Python programming tutorial. Analyze frequency content of signals over time for speech recognition, music analysis, and audio processing.",
    "keywords": "Python, Matplotlib, Spectrogram, Data Visualization, Signal Processing, Audio Analysis"
  },
  "difficulty": "Beginner",
  "time": 25,
  "hidden": true,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Import Libraries",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "This step has no verification at the moment",
            "file": "verify1-1.sh",
            "hint": "This step has no verification at the moment"
          }
        ],
        "skills": [
          "matplotlib/figures_axes",
          "matplotlib/importing_matplotlib",
          "python/data_visualization",
          "python/importing_modules",
          "python/numerical_computing"
        ]
      },
      {
        "title": "Generate Signal",
        "text": "en/step2.md",
        "verify": [
          {
            "name": "This step has no verification at the moment",
            "file": "verify2-1.sh",
            "hint": "This step has no verification at the moment"
          }
        ],
        "skills": [
          "python/build_in_functions",
          "python/comments",
          "python/for_loops",
          "python/lists",
          "python/math_random",
          "python/standard_libraries",
          "python/tuples"
        ]
      },
      {
        "title": "Generate Spectrogram",
        "text": "en/step3.md",
        "verify": [
          {
            "name": "This step has no verification at the moment",
            "file": "verify3-1.sh",
            "hint": "This step has no verification at the moment"
          }
        ],
        "skills": [
          "matplotlib/line_plots",
          "python/build_in_functions",
          "python/comments",
          "python/numeric_types",
          "python/tuples",
          "python/type_conversion",
          "python/variables_data_types"
        ]
      },
      {
        "title": "Customize Plot",
        "text": "en/step4.md",
        "verify": [
          {
            "name": "This step has no verification at the moment",
            "file": "verify4-1.sh",
            "hint": "This step has no verification at the moment"
          }
        ],
        "skills": ["matplotlib/line_plots", "python/lists", "python/tuples"]
      },
      {
        "title": "Display Plot",
        "text": "en/step5.md",
        "verify": [
          {
            "name": "This step has no verification at the moment",
            "file": "verify5-1.sh",
            "hint": "This step has no verification at the moment"
          }
        ],
        "skills": []
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    },
    "assets": {
      "host01": [
        {
          "file": "specgram-demo.ipynb",
          "target": "/home/labex/project",
          "chmod": "ugo+rwx"
        }
      ]
    }
  },
  "backend": {
    "imageid": "jupyter-ubuntu:2204"
  },
  "contributors": [],
  "license": {
    "name": "BSD 3-Clause",
    "url": "https://github.com/matplotlib/matplotlib/tree/main/LICENSE",
    "repo": "https://github.com/matplotlib/matplotlib"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "使用 Matplotlib 绘制频谱图",
      "description": "在本实验中，我们将学习如何使用 Matplotlib 创建频谱图。频谱图是信号频率谱随时间变化的可视化表示。频谱图通常用于分析信号随时间的频率成分，例如在语音识别、音乐分析和音频信号处理中。我们将使用 Python 和 Matplotlib 创建信号的频谱图。",
      "meta": {
        "title": "用 Python 绘制频谱图 | 数据可视化",
        "description": "在本 Python 编程教程中学习如何使用 Matplotlib 创建频谱图。分析语音识别、音乐分析和音频处理中信号随时间的频率成分。",
        "keywords": "Python, Matplotlib, 频谱图，数据可视化，信号处理，音频分析"
      },
      "details": {
        "steps": [
          {
            "title": "导入库",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "此步骤目前没有验证",
                "file": "verify1-1.sh",
                "hint": "此步骤目前没有验证"
              }
            ]
          },
          {
            "title": "生成信号",
            "text": "zh/step2.md",
            "verify": [
              {
                "name": "此步骤目前没有验证",
                "file": "verify2-1.sh",
                "hint": "此步骤目前没有验证"
              }
            ]
          },
          {
            "title": "生成频谱图",
            "text": "zh/step3.md",
            "verify": [
              {
                "name": "此步骤目前没有验证",
                "file": "verify3-1.sh",
                "hint": "此步骤目前没有验证"
              }
            ]
          },
          {
            "title": "自定义绘图",
            "text": "zh/step4.md",
            "verify": [
              {
                "name": "此步骤目前没有验证",
                "file": "verify4-1.sh",
                "hint": "此步骤目前没有验证"
              }
            ]
          },
          {
            "title": "显示绘图",
            "text": "zh/step5.md",
            "verify": [
              {
                "name": "此步骤目前没有验证",
                "file": "verify5-1.sh",
                "hint": "此步骤目前没有验证"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Graficación de Espectrograma con Matplotlib",
      "description": "En este laboratorio, aprenderemos cómo crear una gráfica de espectrograma utilizando Matplotlib. Un espectrograma es una representación visual del espectro de frecuencias de una señal a medida que varía con el tiempo. Los espectrogramas se utilizan comúnmente para analizar el contenido de frecuencia de una señal a lo largo del tiempo, como en el reconocimiento de voz, el análisis de música y el procesamiento de señales de audio. Utilizaremos Python y Matplotlib para crear una gráfica de espectrograma de una señal.",
      "meta": {
        "title": "Graficación de Espectrograma con Python | Visualización de Datos",
        "description": "Aprende cómo crear una gráfica de espectrograma utilizando Matplotlib en este tutorial de programación de Python. Analiza el contenido de frecuencia de las señales a lo largo del tiempo para el reconocimiento de voz, el análisis de música y el procesamiento de audio.",
        "keywords": "Python, Matplotlib, Espectrograma, Visualización de Datos, Procesamiento de Señales, Análisis de Audio"
      },
      "details": {
        "steps": [
          {
            "title": "Importar bibliotecas",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Este paso no tiene verificaciones en este momento",
                "file": "verify1-1.sh",
                "hint": "Este paso no tiene verificaciones en este momento"
              }
            ]
          },
          {
            "title": "Generar señal",
            "text": "es/step2.md",
            "verify": [
              {
                "name": "Este paso no tiene verificaciones en este momento",
                "file": "verify2-1.sh",
                "hint": "Este paso no tiene verificaciones en este momento"
              }
            ]
          },
          {
            "title": "Generar espectrograma",
            "text": "es/step3.md",
            "verify": [
              {
                "name": "Este paso no tiene verificaciones en este momento",
                "file": "verify3-1.sh",
                "hint": "Este paso no tiene verificaciones en este momento"
              }
            ]
          },
          {
            "title": "Personalizar la gráfica",
            "text": "es/step4.md",
            "verify": [
              {
                "name": "Este paso no tiene verificaciones en este momento",
                "file": "verify4-1.sh",
                "hint": "Este paso no tiene verificaciones en este momento"
              }
            ]
          },
          {
            "title": "Mostrar la gráfica",
            "text": "es/step5.md",
            "verify": [
              {
                "name": "Este paso no tiene verificaciones en este momento",
                "file": "verify5-1.sh",
                "hint": "Este paso no tiene verificaciones en este momento"
              }
            ]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Tracé de spectrogramme avec Matplotlib",
      "description": "Dans ce laboratoire, nous allons apprendre à créer un tracé de spectrogramme à l'aide de Matplotlib. Un spectrogramme est une représentation visuelle du spectre de fréquences d'un signal en fonction du temps. Les spectrogrammes sont couramment utilisés pour analyser le contenu fréquentiel d'un signal au fil du temps, par exemple dans la reconnaissance vocale, l'analyse de la musique et le traitement du signal audio. Nous utiliserons Python et Matplotlib pour créer un tracé de spectrogramme d'un signal.",
      "meta": {
        "title": "Tracé de spectrogramme avec Python | Visualisation de données",
        "description": "Apprenez à créer un tracé de spectrogramme à l'aide de Matplotlib dans ce tutoriel de programmation Python. Analysez le contenu fréquentiel des signaux au fil du temps pour la reconnaissance vocale, l'analyse de la musique et le traitement audio.",
        "keywords": "Python, Matplotlib, Spectrogramme, Visualisation de données, Traitement du signal, Analyse audio"
      },
      "details": {
        "steps": [
          {
            "title": "Importer les bibliothèques",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Cette étape n'a pas de vérification pour le moment",
                "file": "verify1-1.sh",
                "hint": "Cette étape n'a pas de vérification pour le moment"
              }
            ]
          },
          {
            "title": "Générer un signal",
            "text": "fr/step2.md",
            "verify": [
              {
                "name": "Cette étape n'a pas de vérification pour le moment",
                "file": "verify2-1.sh",
                "hint": "Cette étape n'a pas de vérification pour le moment"
              }
            ]
          },
          {
            "title": "Générer un spectrogramme",
            "text": "fr/step3.md",
            "verify": [
              {
                "name": "Cette étape n'a pas de vérification pour le moment",
                "file": "verify3-1.sh",
                "hint": "Cette étape n'a pas de vérification pour le moment"
              }
            ]
          },
          {
            "title": "Personnaliser le tracé",
            "text": "fr/step4.md",
            "verify": [
              {
                "name": "Cette étape n'a pas de vérification pour le moment",
                "file": "verify4-1.sh",
                "hint": "Cette étape n'a pas de vérification pour le moment"
              }
            ]
          },
          {
            "title": "Afficher le tracé",
            "text": "fr/step5.md",
            "verify": [
              {
                "name": "Cette étape n'a pas de vérification pour le moment",
                "file": "verify5-1.sh",
                "hint": "Cette étape n'a pas de vérification pour le moment"
              }
            ]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Spektogrammplot mit Matplotlib",
      "description": "In diesem Lab werden wir lernen, wie man mit Matplotlib einen Spektogrammplot erstellt. Ein Spektogramm ist eine visuelle Darstellung des Spektrums von Frequenzen eines Signals, das sich über die Zeit ändert. Spektogramme werden häufig verwendet, um den Frequenzinhalt eines Signals im Laufe der Zeit zu analysieren, wie z. B. in der Spracherkennung, der Musikanalyse und der Audiosignalverarbeitung. Wir werden Python und Matplotlib verwenden, um einen Spektogrammplot eines Signals zu erstellen.",
      "meta": {
        "title": "Spektogrammplot mit Python | Datenvisualisierung",
        "description": "Lernen Sie in diesem Python-Programmier-Tutorial, wie man mit Matplotlib einen Spektogrammplot erstellt. Analysieren Sie den Frequenzinhalt von Signalen im Laufe der Zeit für die Spracherkennung, die Musikanalyse und die Audioprozessierung.",
        "keywords": "Python, Matplotlib, Spektogramm, Datenvisualisierung, Signalverarbeitung, Audioanalyse"
      },
      "details": {
        "steps": [
          {
            "title": "Bibliotheken importieren",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Dieser Schritt hat momentan keine Verifizierung",
                "file": "verify1-1.sh",
                "hint": "Dieser Schritt hat momentan keine Verifizierung"
              }
            ]
          },
          {
            "title": "Signal generieren",
            "text": "de/step2.md",
            "verify": [
              {
                "name": "Dieser Schritt hat momentan keine Verifizierung",
                "file": "verify2-1.sh",
                "hint": "Dieser Schritt hat momentan keine Verifizierung"
              }
            ]
          },
          {
            "title": "Spektogramm generieren",
            "text": "de/step3.md",
            "verify": [
              {
                "name": "Dieser Schritt hat momentan keine Verifizierung",
                "file": "verify3-1.sh",
                "hint": "Dieser Schritt hat momentan keine Verifizierung"
              }
            ]
          },
          {
            "title": "Diagramm anpassen",
            "text": "de/step4.md",
            "verify": [
              {
                "name": "Dieser Schritt hat momentan keine Verifizierung",
                "file": "verify4-1.sh",
                "hint": "Dieser Schritt hat momentan keine Verifizierung"
              }
            ]
          },
          {
            "title": "Diagramm anzeigen",
            "text": "de/step5.md",
            "verify": [
              {
                "name": "Dieser Schritt hat momentan keine Verifizierung",
                "file": "verify5-1.sh",
                "hint": "Dieser Schritt hat momentan keine Verifizierung"
              }
            ]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "Matplotlib を使ったスペクトログラムの描画",
      "description": "この実験では、Matplotlib を使ってスペクトログラムを作成する方法を学びます。スペクトログラムは、信号の周波数スペクトルが時間とともに変化する様子を視覚的に表したものです。スペクトログラムは、音声認識、音楽分析、オーディオ信号処理など、信号の周波数成分を時間とともに分析する際に一般的に使用されます。Python と Matplotlib を使って信号のスペクトログラムを作成します。",
      "meta": {
        "title": "Python を使ったスペクトログラムの描画 | データ可視化",
        "description": "この Python プログラミングチュートリアルでは、Matplotlib を使ってスペクトログラムを作成する方法を学びます。音声認識、音楽分析、オーディオ処理における信号の周波数成分を時間とともに分析しましょう。",
        "keywords": "Python, Matplotlib, スペクトログラム，データ可視化，信号処理，オーディオ分析"
      },
      "details": {
        "steps": [
          {
            "title": "ライブラリのインポート",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "このステップでは現在検証はありません",
                "file": "verify1-1.sh",
                "hint": "このステップでは現在検証はありません"
              }
            ]
          },
          {
            "title": "信号を生成する",
            "text": "ja/step2.md",
            "verify": [
              {
                "name": "このステップでは現在検証はありません",
                "file": "verify2-1.sh",
                "hint": "このステップでは現在検証はありません"
              }
            ]
          },
          {
            "title": "スペクトログラムを生成する",
            "text": "ja/step3.md",
            "verify": [
              {
                "name": "このステップでは現在検証はありません",
                "file": "verify3-1.sh",
                "hint": "このステップでは現在検証はありません"
              }
            ]
          },
          {
            "title": "プロットをカスタマイズする",
            "text": "ja/step4.md",
            "verify": [
              {
                "name": "このステップでは現在検証はありません",
                "file": "verify4-1.sh",
                "hint": "このステップでは現在検証はありません"
              }
            ]
          },
          {
            "title": "プロットを表示する",
            "text": "ja/step5.md",
            "verify": [
              {
                "name": "このステップでは現在検証はありません",
                "file": "verify5-1.sh",
                "hint": "このステップでは現在検証はありません"
              }
            ]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Построение спектрограммы с использованием Matplotlib",
      "description": "В этом практическом занятии мы узнаем, как создавать график спектрограммы с использованием Matplotlib. Спектрограмма - это визуальное представление спектра частот сигнала в зависимости от времени. Спектрограммы обычно используются для анализа частотного состава сигнала в течение времени, например, в распознавании речи, анализе музыки и обработке аудиосигналов. Мы будем использовать Python и Matplotlib для создания графика спектрограммы сигнала.",
      "meta": {
        "title": "Построение спектрограммы с использованием Python | Визуализация данных",
        "description": "Изучите, как создать график спектрограммы с использованием Matplotlib в этом руководстве по программированию на Python. Проанализируйте частотный состав сигналов в течение времени для распознавания речи, анализа музыки и обработки аудио.",
        "keywords": "Python, Matplotlib, Спектрограмма, Визуализация данных, Обработка сигналов, Анализ аудио"
      },
      "details": {
        "steps": [
          {
            "title": "Импортировать библиотеки",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "На данный момент эта стадия не имеет проверки",
                "file": "verify1-1.sh",
                "hint": "На данный момент эта стадия не имеет проверки"
              }
            ]
          },
          {
            "title": "Сгенерировать сигнал",
            "text": "ru/step2.md",
            "verify": [
              {
                "name": "На данный момент эта стадия не имеет проверки",
                "file": "verify2-1.sh",
                "hint": "На данный момент эта стадия не имеет проверки"
              }
            ]
          },
          {
            "title": "Сгенерировать спектрограмму",
            "text": "ru/step3.md",
            "verify": [
              {
                "name": "На данный момент эта стадия не имеет проверки",
                "file": "verify3-1.sh",
                "hint": "На данный момент эта стадия не имеет проверки"
              }
            ]
          },
          {
            "title": "Настроить график",
            "text": "ru/step4.md",
            "verify": [
              {
                "name": "На данный момент эта стадия не имеет проверки",
                "file": "verify4-1.sh",
                "hint": "На данный момент эта стадия не имеет проверки"
              }
            ]
          },
          {
            "title": "Показать график",
            "text": "ru/step5.md",
            "verify": [
              {
                "name": "На данный момент эта стадия не имеет проверки",
                "file": "verify5-1.sh",
                "hint": "На данный момент эта стадия не имеет проверки"
              }
            ]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    },
    {
      "lang": "ko",
      "title": "Matplotlib 을 이용한 스펙트로그램 플롯",
      "description": "이 랩에서는 Matplotlib 을 사용하여 스펙트로그램 플롯을 생성하는 방법을 배웁니다. 스펙트로그램은 신호의 주파수 스펙트럼이 시간에 따라 어떻게 변화하는지를 시각적으로 표현한 것입니다. 스펙트로그램은 음성 인식, 음악 분석, 오디오 신호 처리 등에서 신호의 주파수 내용을 시간 경과에 따라 분석하는 데 일반적으로 사용됩니다. Python 과 Matplotlib 을 사용하여 신호의 스펙트로그램 플롯을 생성합니다.",
      "meta": {
        "title": "Python 을 이용한 스펙트로그램 플롯 | 데이터 시각화",
        "description": "이 Python 프로그래밍 튜토리얼에서 Matplotlib 을 사용하여 스펙트로그램 플롯을 만드는 방법을 알아보세요. 음성 인식, 음악 분석 및 오디오 처리를 위해 시간 경과에 따른 신호의 주파수 내용을 분석합니다.",
        "keywords": "Python, Matplotlib, 스펙트로그램, 데이터 시각화, 신호 처리, 오디오 분석, 파이썬 스펙트로그램, Matplotlib 플롯"
      },
      "details": {
        "steps": [
          {
            "title": "라이브러리 임포트",
            "text": "ko/step1.md",
            "verify": [
              {
                "name": "현재 이 단계는 검증이 없습니다.",
                "file": "verify1-1.sh",
                "hint": "현재 이 단계는 검증이 없습니다."
              }
            ]
          },
          {
            "title": "신호 생성",
            "text": "ko/step2.md",
            "verify": [
              {
                "name": "현재 이 단계는 검증이 없습니다.",
                "file": "verify2-1.sh",
                "hint": "현재 이 단계는 검증이 없습니다."
              }
            ]
          },
          {
            "title": "스펙트로그램 생성",
            "text": "ko/step3.md",
            "verify": [
              {
                "name": "현재 이 단계는 검증이 없습니다.",
                "file": "verify3-1.sh",
                "hint": "현재 이 단계는 검증이 없습니다."
              }
            ]
          },
          {
            "title": "플롯 사용자 정의",
            "text": "ko/step4.md",
            "verify": [
              {
                "name": "현재 이 단계는 검증이 없습니다.",
                "file": "verify4-1.sh",
                "hint": "현재 이 단계는 검증이 없습니다."
              }
            ]
          },
          {
            "title": "플롯 표시",
            "text": "ko/step5.md",
            "verify": [
              {
                "name": "현재 이 단계는 검증이 없습니다.",
                "file": "verify5-1.sh",
                "hint": "현재 이 단계는 검증이 없습니다."
              }
            ]
          }
        ],
        "intro": {
          "text": "ko/intro.md",
          "title": "소개"
        },
        "finish": {
          "text": "ko/finish.md",
          "title": "요약"
        }
      }
    },
    {
      "lang": "pt",
      "title": "Criação de Gráficos de Espectrograma com Matplotlib",
      "description": "Neste laboratório, aprenderemos como criar um gráfico de espectrograma usando Matplotlib. Um espectrograma é uma representação visual do espectro de frequências de um sinal, variando ao longo do tempo. Espectrogramas são comumente usados para analisar o conteúdo de frequência de um sinal ao longo do tempo, como em reconhecimento de fala, análise musical e processamento de sinais de áudio. Usaremos Python e Matplotlib para criar um gráfico de espectrograma de um sinal.",
      "meta": {
        "title": "Gráfico de Espectrograma com Python | Visualização de Dados",
        "description": "Aprenda a criar um gráfico de espectrograma usando Matplotlib neste tutorial de programação Python. Analise o conteúdo de frequência de sinais ao longo do tempo para reconhecimento de fala, análise musical e processamento de áudio. #espectrograma #python #matplotlib #visualizacaodedados #analisedeaudio",
        "keywords": "Python, Matplotlib, Espectrograma, Visualização de Dados, Processamento de Sinais, Análise de Áudio, espectrograma python, gráfico espectrograma, matplotlib tutorial, análise de áudio"
      },
      "details": {
        "steps": [
          {
            "title": "Importar Bibliotecas",
            "text": "pt/step1.md",
            "verify": [
              {
                "name": "Este passo não possui verificação no momento",
                "file": "verify1-1.sh",
                "hint": "Este passo não possui verificação no momento"
              }
            ]
          },
          {
            "title": "Gerar Sinal",
            "text": "pt/step2.md",
            "verify": [
              {
                "name": "Este passo não possui verificação no momento",
                "file": "verify2-1.sh",
                "hint": "Este passo não possui verificação no momento"
              }
            ]
          },
          {
            "title": "Gerar Espectrograma",
            "text": "pt/step3.md",
            "verify": [
              {
                "name": "Este passo não possui verificação no momento",
                "file": "verify3-1.sh",
                "hint": "Este passo não possui verificação no momento"
              }
            ]
          },
          {
            "title": "Personalizar Gráfico",
            "text": "pt/step4.md",
            "verify": [
              {
                "name": "Este passo não possui verificação no momento",
                "file": "verify4-1.sh",
                "hint": "Este passo não possui verificação no momento"
              }
            ]
          },
          {
            "title": "Exibir Gráfico",
            "text": "pt/step5.md",
            "verify": [
              {
                "name": "Este passo não possui verificação no momento",
                "file": "verify5-1.sh",
                "hint": "Este passo não possui verificação no momento"
              }
            ]
          }
        ],
        "intro": {
          "text": "pt/intro.md",
          "title": "Introdução"
        },
        "finish": {
          "text": "pt/finish.md",
          "title": "Resumo"
        }
      }
    }
  ]
}
