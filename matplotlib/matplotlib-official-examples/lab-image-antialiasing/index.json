{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Matplotlib Image Antialiasing",
  "description": "This tutorial will guide you through the process of antialiasing an image using Matplotlib in Python. Antialiasing is a technique used to smooth out jagged edges and reduce distortion in images. In this tutorial, we will use Matplotlib to generate a 450x450 pixel image with varying frequency content. We will then subsample the image from 450 data pixels to either 125 pixels or 250 pixels to demonstrate how antialiasing can be used to reduce the Moiré patterns caused by high-frequency data being subsampled.",
  "meta": {
    "title": "Matplotlib Image Antialiasing Tutorial",
    "description": "Learn how to smooth out jagged edges and reduce distortion in images using Matplotlib's antialiasing techniques.",
    "keywords": "python playground, matplotlib, image processing, python, antialiasing, moiré patterns, subsampling"
  },
  "difficulty": "Beginner",
  "time": 25,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Generate Image",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "This step has no verification at the moment",
            "file": "verify1-1.sh",
            "hint": "This step has no verification at the moment"
          }
        ],
        "skills": []
      },
      {
        "title": "Subsample Image with 'nearest' Interpolation",
        "text": "en/step2.md",
        "verify": [
          {
            "name": "This step has no verification at the moment",
            "file": "verify2-1.sh",
            "hint": "This step has no verification at the moment"
          }
        ],
        "skills": []
      },
      {
        "title": "Subsample Image with 'antialiased' Interpolation",
        "text": "en/step3.md",
        "verify": [
          {
            "name": "This step has no verification at the moment",
            "file": "verify3-1.sh",
            "hint": "This step has no verification at the moment"
          }
        ],
        "skills": []
      },
      {
        "title": "Upsample Image with 'nearest' Interpolation",
        "text": "en/step4.md",
        "verify": [
          {
            "name": "This step has no verification at the moment",
            "file": "verify4-1.sh",
            "hint": "This step has no verification at the moment"
          }
        ],
        "skills": []
      },
      {
        "title": "Upsample Image with 'antialiased' Interpolation",
        "text": "en/step5.md",
        "verify": [
          {
            "name": "This step has no verification at the moment",
            "file": "verify5-1.sh",
            "hint": "This step has no verification at the moment"
          }
        ],
        "skills": []
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    },
    "assets": {
      "host01": [
        {
          "file": "image-antialiasing.ipynb",
          "target": "/home/labex/project",
          "chmod": "ugo+rwx"
        }
      ]
    }
  },
  "backend": {
    "imageid": "jupyter-ubuntu:2204"
  },
  "contributors": [],
  "license": {
    "name": "BSD 3-Clause",
    "url": "https://github.com/matplotlib/matplotlib/tree/main/LICENSE",
    "repo": "https://github.com/matplotlib/matplotlib"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "Matplotlib 图像抗锯齿",
      "description": "本教程将指导你使用 Python 中的 Matplotlib 对图像进行抗锯齿处理。抗锯齿是一种用于平滑锯齿边缘并减少图像失真的技术。在本教程中，我们将使用 Matplotlib 生成一个具有不同频率内容的 450x450 像素图像。然后，我们将把图像从 450 个数据像素下采样到 125 像素或 250 像素，以演示如何使用抗锯齿来减少高频数据下采样所导致的莫尔条纹。",
      "meta": {
        "title": "Matplotlib 图像抗锯齿教程",
        "description": "学习如何使用 Matplotlib 的抗锯齿技术来平滑锯齿边缘并减少图像失真。",
        "keywords": "Python 实践，Matplotlib, 图像处理，Python, 抗锯齿，莫尔条纹，下采样"
      },
      "details": {
        "steps": [
          {
            "title": "生成图像",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "此步骤目前没有验证",
                "file": "verify1-1.sh",
                "hint": "此步骤目前没有验证"
              }
            ]
          },
          {
            "title": "使用'最近邻'插值对图像进行下采样",
            "text": "zh/step2.md",
            "verify": [
              {
                "name": "此步骤目前没有验证",
                "file": "verify2-1.sh",
                "hint": "此步骤目前没有验证"
              }
            ]
          },
          {
            "title": "使用'抗锯齿'插值对图像进行下采样",
            "text": "zh/step3.md",
            "verify": [
              {
                "name": "此步骤目前没有验证",
                "file": "verify3-1.sh",
                "hint": "此步骤目前没有验证"
              }
            ]
          },
          {
            "title": "使用'最近邻'插值对图像进行上采样",
            "text": "zh/step4.md",
            "verify": [
              {
                "name": "此步骤目前没有验证",
                "file": "verify4-1.sh",
                "hint": "此步骤目前没有验证"
              }
            ]
          },
          {
            "title": "使用'抗锯齿'插值对图像进行上采样",
            "text": "zh/step5.md",
            "verify": [
              {
                "name": "此步骤目前没有验证",
                "file": "verify5-1.sh",
                "hint": "此步骤目前没有验证"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Antialiasing de imágenes con Matplotlib",
      "description": "Este tutorial te guiará a través del proceso de aplicar antialiasing a una imagen utilizando Matplotlib en Python. El antialiasing es una técnica utilizada para suavizar los bordes dentados y reducir la distorsión en las imágenes. En este tutorial, utilizaremos Matplotlib para generar una imagen de 450x450 píxeles con contenido de frecuencia variable. Luego, submuestreamos la imagen de 450 píxeles de datos a 125 píxeles o 250 píxeles para demostrar cómo se puede utilizar el antialiasing para reducir los patrones de Moiré causados por la submuestreación de datos de alta frecuencia.",
      "meta": {
        "title": "Tutorial de antialiasing de imágenes con Matplotlib",
        "description": "Aprende a suavizar los bordes dentados y reducir la distorsión en las imágenes utilizando las técnicas de antialiasing de Matplotlib.",
        "keywords": "python playground, matplotlib, procesamiento de imágenes, python, antialiasing, patrones de Moiré, submuestreación"
      },
      "details": {
        "steps": [
          {
            "title": "Generar imagen",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Este paso no tiene verificación en este momento",
                "file": "verify1-1.sh",
                "hint": "Este paso no tiene verificación en este momento"
              }
            ]
          },
          {
            "title": "Submuestrear la imagen con interpolación 'nearest'",
            "text": "es/step2.md",
            "verify": [
              {
                "name": "Este paso no tiene verificación en este momento",
                "file": "verify2-1.sh",
                "hint": "Este paso no tiene verificación en este momento"
              }
            ]
          },
          {
            "title": "Submuestrear la imagen con interpolación 'antialiased'",
            "text": "es/step3.md",
            "verify": [
              {
                "name": "Este paso no tiene verificación en este momento",
                "file": "verify3-1.sh",
                "hint": "Este paso no tiene verificación en este momento"
              }
            ]
          },
          {
            "title": "Interpolar la imagen con 'nearest' para aumentar la resolución",
            "text": "es/step4.md",
            "verify": [
              {
                "name": "Este paso no tiene verificación en este momento",
                "file": "verify4-1.sh",
                "hint": "Este paso no tiene verificación en este momento"
              }
            ]
          },
          {
            "title": "Interpolar la imagen con interpolación 'antialiased' para aumentar la resolución",
            "text": "es/step5.md",
            "verify": [
              {
                "name": "Este paso no tiene verificación en este momento",
                "file": "verify5-1.sh",
                "hint": "Este paso no tiene verificación en este momento"
              }
            ]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Antialiasing d'images avec Matplotlib",
      "description": "Ce tutoriel vous guidera dans le processus d'antialiasing d'une image à l'aide de Matplotlib en Python. L'antialiasing est une technique utilisée pour apaiser les bords escamotés et réduire la distorsion dans les images. Dans ce tutoriel, nous utiliserons Matplotlib pour générer une image de 450x450 pixels avec un contenu de fréquence variable. Nous sous-échantillonnerons ensuite l'image de 450 pixels de données à 125 pixels ou 250 pixels pour démontrer comment l'antialiasing peut être utilisé pour réduire les motifs de Moiré causés par le sous-échantillonnage de données haute fréquence.",
      "meta": {
        "title": "Tutoriel sur l'antialiasing d'images avec Matplotlib",
        "description": "Apprenez à apaiser les bords escamotés et à réduire la distorsion dans les images à l'aide des techniques d'antialiasing de Matplotlib.",
        "keywords": "python playground, matplotlib, traitement d'images, python, antialiasing, motifs de Moiré, sous-échantillonnage"
      },
      "details": {
        "steps": [
          {
            "title": "Générer une image",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Cette étape n'a pas de vérification pour le moment",
                "file": "verify1-1.sh",
                "hint": "Cette étape n'a pas de vérification pour le moment"
              }
            ]
          },
          {
            "title": "Sous-échantillonnage d'une image avec l'interpolation 'nearest'",
            "text": "fr/step2.md",
            "verify": [
              {
                "name": "Cette étape n'a pas de vérification pour le moment",
                "file": "verify2-1.sh",
                "hint": "Cette étape n'a pas de vérification pour le moment"
              }
            ]
          },
          {
            "title": "Sous-échantillonnage d'une image avec l'interpolation 'antialiased'",
            "text": "fr/step3.md",
            "verify": [
              {
                "name": "Cette étape n'a pas de vérification pour le moment",
                "file": "verify3-1.sh",
                "hint": "Cette étape n'a pas de vérification pour le moment"
              }
            ]
          },
          {
            "title": "Sur-échantillonnage d'une image avec l'interpolation 'nearest'",
            "text": "fr/step4.md",
            "verify": [
              {
                "name": "Cette étape n'a pas de vérification pour le moment",
                "file": "verify4-1.sh",
                "hint": "Cette étape n'a pas de vérification pour le moment"
              }
            ]
          },
          {
            "title": "Sur-échantillonnage d'une image avec l'interpolation 'antialiased'",
            "text": "fr/step5.md",
            "verify": [
              {
                "name": "Cette étape n'a pas de vérification pour le moment",
                "file": "verify5-1.sh",
                "hint": "Cette étape n'a pas de vérification pour le moment"
              }
            ]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Matplotlib-Bild-Entzerrung",
      "description": "In diesem Tutorial wird Ihnen der Prozess der Entzerrung eines Bildes mit Matplotlib in Python vermittelt. Entzerrung ist eine Technik, die verwendet wird, um hackelige Kanten zu glätten und Verzerrungen in Bildern zu reduzieren. In diesem Tutorial werden wir mit Matplotlib ein 450x450-Pixel-Bild mit unterschiedlichem Frequenzgehalt generieren. Anschließend werden wir das Bild von 450 Datenpunkten auf entweder 125 Pixel oder 250 Pixel unterabtasten, um zu demonstrieren, wie Entzerrung verwendet werden kann, um die durch die Unterabtastung von Hochfrequenzdaten verursachten Moiré-Muster zu reduzieren.",
      "meta": {
        "title": "Matplotlib-Bild-Entzerrungstutorial",
        "description": "Lernen Sie, wie Sie hackelige Kanten glätten und Verzerrungen in Bildern mit den Entzerrungstechniken von Matplotlib reduzieren.",
        "keywords": "Python-Spielplatz, Matplotlib, Bildverarbeitung, Python, Entzerrung, Moiré-Muster, Unterabtastung"
      },
      "details": {
        "steps": [
          {
            "title": "Bild generieren",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Dieser Schritt hat momentan keine Verifizierung",
                "file": "verify1-1.sh",
                "hint": "Dieser Schritt hat momentan keine Verifizierung"
              }
            ]
          },
          {
            "title": "Bild mit 'nearest' Interpolation unterabtasten",
            "text": "de/step2.md",
            "verify": [
              {
                "name": "Dieser Schritt hat momentan keine Verifizierung",
                "file": "verify2-1.sh",
                "hint": "Dieser Schritt hat momentan keine Verifizierung"
              }
            ]
          },
          {
            "title": "Bild mit 'antialiased' Interpolation unterabtasten",
            "text": "de/step3.md",
            "verify": [
              {
                "name": "Dieser Schritt hat momentan keine Verifizierung",
                "file": "verify3-1.sh",
                "hint": "Dieser Schritt hat momentan keine Verifizierung"
              }
            ]
          },
          {
            "title": "Bild mit 'nearest' Interpolation aufvergrößern",
            "text": "de/step4.md",
            "verify": [
              {
                "name": "Dieser Schritt hat momentan keine Verifizierung",
                "file": "verify4-1.sh",
                "hint": "Dieser Schritt hat momentan keine Verifizierung"
              }
            ]
          },
          {
            "title": "Bild mit 'antialiased' Interpolation aufvergrößern",
            "text": "de/step5.md",
            "verify": [
              {
                "name": "Dieser Schritt hat momentan keine Verifizierung",
                "file": "verify5-1.sh",
                "hint": "Dieser Schritt hat momentan keine Verifizierung"
              }
            ]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "Matplotlib による画像のアンチエイリアシング",
      "description": "このチュートリアルでは、Python の Matplotlib を使って画像にアンチエイリアシングを行うプロセスを案内します。アンチエイリアシングは、画像のギザギザしたエッジを滑らかにし、歪みを軽減するために使用される技術です。このチュートリアルでは、Matplotlib を使って周波数成分の異なる 450x450 ピクセルの画像を生成します。次に、画像を 450 データピクセルから 125 ピクセルまたは 250 ピクセルにサブサンプリングして、アンチエイリアシングが高周波データのサブサンプリングによって引き起こされるモアレパターンを軽減するためにどのように使用できるかを示します。",
      "meta": {
        "title": "Matplotlib 画像アンチエイリアシングチュートリアル",
        "description": "Matplotlib のアンチエイリアシング技術を使って、画像のギザギザしたエッジを滑らかにし、歪みを軽減する方法を学びましょう。",
        "keywords": "python playground, matplotlib, 画像処理，python, アンチエイリアシング，モアレパターン，サブサンプリング"
      },
      "details": {
        "steps": [
          {
            "title": "画像を生成する",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "このステップには現在検証はありません",
                "file": "verify1-1.sh",
                "hint": "このステップには現在検証はありません"
              }
            ]
          },
          {
            "title": "「最寄り」補間を使った画像のサブサンプリング",
            "text": "ja/step2.md",
            "verify": [
              {
                "name": "このステップには現在検証はありません",
                "file": "verify2-1.sh",
                "hint": "このステップには現在検証はありません"
              }
            ]
          },
          {
            "title": "「アンチエイリアス」補間を使った画像のサブサンプリング",
            "text": "ja/step3.md",
            "verify": [
              {
                "name": "このステップには現在検証はありません",
                "file": "verify3-1.sh",
                "hint": "このステップには現在検証はありません"
              }
            ]
          },
          {
            "title": "「最寄り」補間を使った画像のアップサンプリング",
            "text": "ja/step4.md",
            "verify": [
              {
                "name": "このステップには現在検証はありません",
                "file": "verify4-1.sh",
                "hint": "このステップには現在検証はありません"
              }
            ]
          },
          {
            "title": "「アンチエイリアス」補間を使った画像のアップサンプリング",
            "text": "ja/step5.md",
            "verify": [
              {
                "name": "このステップには現在検証はありません",
                "file": "verify5-1.sh",
                "hint": "このステップには現在検証はありません"
              }
            ]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Антиалиасинг изображений в Matplotlib",
      "description": "В этом уроке мы проведем вас по процессу антиалиасинга изображения с использованием Matplotlib в Python. Антиалиасинг - это техника, используемая для сглаживания зубчатых краев и уменьшения искажений в изображениях. В этом уроке мы сгенерируем изображение размером 450x450 пикселей с различным содержанием частоты с использованием Matplotlib. Затем мы уменьшим разрешение изображения от 450 пикселей до 125 или 250 пикселей, чтобы показать, как антиалиасинг может быть использован для уменьшения эффекта Моира, вызываемого уменьшением разрешения высокочастотных данных.",
      "meta": {
        "title": "Учебник по антиалиасингу изображений в Matplotlib",
        "description": "Изучите, как сгладить зубчатые края и уменьшить искажения в изображениях с использованием техник антиалиасинга Matplotlib.",
        "keywords": "python playground, matplotlib, обработка изображений, python, антиалиасинг, эффект Моира, уменьшение разрешения"
      },
      "details": {
        "steps": [
          {
            "title": "Сгенерировать изображение",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "На этом этапе проверок нет",
                "file": "verify1-1.sh",
                "hint": "На этом этапе проверок нет"
              }
            ]
          },
          {
            "title": "Уменьшить разрешение изображения с использованием интерполяции 'nearest'",
            "text": "ru/step2.md",
            "verify": [
              {
                "name": "На этом этапе проверок нет",
                "file": "verify2-1.sh",
                "hint": "На этом этапе проверок нет"
              }
            ]
          },
          {
            "title": "Уменьшить разрешение изображения с использованием интерполяции 'antialiased'",
            "text": "ru/step3.md",
            "verify": [
              {
                "name": "На этом этапе проверок нет",
                "file": "verify3-1.sh",
                "hint": "На этом этапе проверок нет"
              }
            ]
          },
          {
            "title": "Увеличить разрешение изображения с использованием интерполяции 'nearest'",
            "text": "ru/step4.md",
            "verify": [
              {
                "name": "На этом этапе проверок нет",
                "file": "verify4-1.sh",
                "hint": "На этом этапе проверок нет"
              }
            ]
          },
          {
            "title": "Увеличить разрешение изображения с использованием интерполяции 'antialiased'",
            "text": "ru/step5.md",
            "verify": [
              {
                "name": "На этом этапе проверок нет",
                "file": "verify5-1.sh",
                "hint": "На этом этапе проверок нет"
              }
            ]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    },
    {
      "lang": "ko",
      "title": "Matplotlib 이미지 안티앨리어싱",
      "description": "이 튜토리얼은 Python 의 Matplotlib 을 사용하여 이미지의 안티앨리어싱 과정을 안내합니다. 안티앨리어싱은 이미지의 들쭉날쭉한 가장자리를 부드럽게 하고 왜곡을 줄이는 데 사용되는 기술입니다. 이 튜토리얼에서는 Matplotlib 을 사용하여 다양한 주파수 콘텐츠를 가진 450x450 픽셀 이미지를 생성합니다. 그런 다음 이미지를 450 데이터 픽셀에서 125 픽셀 또는 250 픽셀로 서브샘플링하여 안티앨리어싱이 고주파 데이터의 서브샘플링으로 인한 모아레 패턴을 줄이는 데 어떻게 사용될 수 있는지 보여줍니다.",
      "meta": {
        "title": "Matplotlib 이미지 안티앨리어싱 튜토리얼 - Python 이미지 처리",
        "description": "Matplotlib 의 안티앨리어싱 기술을 사용하여 이미지의 들쭉날쭉한 가장자리를 부드럽게 하고 왜곡을 줄이는 방법을 알아보세요. Python 이미지 처리, 모아레 패턴 제거, Matplotlib 활용.",
        "keywords": "파이썬 플레이그라운드, matplotlib, 이미지 처리, 파이썬, 안티앨리어싱, 모아레 패턴, 서브샘플링, 이미지 부드럽게, Python 이미지 튜토리얼"
      },
      "details": {
        "steps": [
          {
            "title": "이미지 생성",
            "text": "ko/step1.md",
            "verify": [
              {
                "name": "현재 이 단계에는 검증이 없습니다.",
                "file": "verify1-1.sh",
                "hint": "현재 이 단계에는 검증이 없습니다."
              }
            ]
          },
          {
            "title": "'nearest' 보간법으로 이미지 서브샘플링",
            "text": "ko/step2.md",
            "verify": [
              {
                "name": "현재 이 단계에는 검증이 없습니다.",
                "file": "verify2-1.sh",
                "hint": "현재 이 단계에는 검증이 없습니다."
              }
            ]
          },
          {
            "title": "'antialiased' 보간법으로 이미지 서브샘플링",
            "text": "ko/step3.md",
            "verify": [
              {
                "name": "현재 이 단계에는 검증이 없습니다.",
                "file": "verify3-1.sh",
                "hint": "현재 이 단계에는 검증이 없습니다."
              }
            ]
          },
          {
            "title": "'nearest' 보간법으로 이미지 업샘플링",
            "text": "ko/step4.md",
            "verify": [
              {
                "name": "현재 이 단계에는 검증이 없습니다.",
                "file": "verify4-1.sh",
                "hint": "현재 이 단계에는 검증이 없습니다."
              }
            ]
          },
          {
            "title": "'antialiased' 보간법을 사용한 이미지 업샘플링",
            "text": "ko/step5.md",
            "verify": [
              {
                "name": "현재 이 단계는 검증되지 않았습니다.",
                "file": "verify5-1.sh",
                "hint": "현재 이 단계는 검증되지 않았습니다."
              }
            ]
          }
        ],
        "intro": {
          "text": "ko/intro.md",
          "title": "소개"
        },
        "finish": {
          "text": "ko/finish.md",
          "title": "요약"
        }
      }
    },
    {
      "lang": "pt",
      "title": "Antialiasing de Imagens com Matplotlib",
      "description": "Este tutorial irá guiá-lo pelo processo de aplicação de antialiasing a uma imagem usando Matplotlib em Python. Antialiasing é uma técnica usada para suavizar bordas irregulares e reduzir a distorção em imagens. Neste tutorial, usaremos Matplotlib para gerar uma imagem de 450x450 pixels com conteúdo de frequência variável. Em seguida, faremos a subamostragem da imagem de 450 pixels de dados para 125 pixels ou 250 pixels para demonstrar como o antialiasing pode ser usado para reduzir os padrões Moiré causados pela subamostragem de dados de alta frequência.",
      "meta": {
        "title": "Tutorial de Antialiasing de Imagens com Matplotlib",
        "description": "Aprenda como suavizar bordas irregulares e reduzir a distorção em imagens usando as técnicas de antialiasing do Matplotlib.",
        "keywords": "python playground, matplotlib, processamento de imagem, python, antialiasing, padrões moiré, subamostragem"
      },
      "details": {
        "steps": [
          {
            "title": "Gerar Imagem",
            "text": "pt/step1.md",
            "verify": [
              {
                "name": "Este passo não possui verificação no momento",
                "file": "verify1-1.sh",
                "hint": "Este passo não possui verificação no momento"
              }
            ]
          },
          {
            "title": "Subamostrar Imagem com Interpolação 'nearest'",
            "text": "pt/step2.md",
            "verify": [
              {
                "name": "Este passo não possui verificação no momento",
                "file": "verify2-1.sh",
                "hint": "Este passo não possui verificação no momento"
              }
            ]
          },
          {
            "title": "Subamostrar Imagem com Interpolação 'antialiased'",
            "text": "pt/step3.md",
            "verify": [
              {
                "name": "Este passo não possui verificação no momento",
                "file": "verify3-1.sh",
                "hint": "Este passo não possui verificação no momento"
              }
            ]
          },
          {
            "title": "Aumentar Resolução da Imagem com Interpolação 'nearest'",
            "text": "pt/step4.md",
            "verify": [
              {
                "name": "Este passo não possui verificação no momento",
                "file": "verify4-1.sh",
                "hint": "Este passo não possui verificação no momento"
              }
            ]
          },
          {
            "title": "Aumentar Resolução da Imagem com Interpolação 'antialiased'",
            "text": "pt/step5.md",
            "verify": [
              {
                "name": "Este passo não possui verificação no momento",
                "file": "verify5-1.sh",
                "hint": "Este passo não possui verificação no momento"
              }
            ]
          }
        ],
        "intro": {
          "text": "pt/intro.md",
          "title": "Introdução"
        },
        "finish": {
          "text": "pt/finish.md",
          "title": "Resumo"
        }
      }
    }
  ]
}
