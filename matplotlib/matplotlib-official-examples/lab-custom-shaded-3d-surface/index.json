{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Custom Hillshading in a 3D Surface Plot",
  "description": "This lab demonstrates how to use custom hillshading in a 3D surface plot using Python Matplotlib. Hillshading is the use of light and shadow to enhance the perception of depth and relief in a 3D plot. By customizing the hillshading, we can create a more visually appealing and informative plot.",
  "meta": {
    "title": "Custom Hillshading | 3D Surface Plot | Python Matplotlib",
    "description": "Learn how to use custom hillshading to enhance the perception of depth and relief in a 3D surface plot using Python Matplotlib.",
    "keywords": "3D surface plot, custom hillshading, Python, Matplotlib, data visualization"
  },
  "difficulty": "Beginner",
  "time": 20,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Load and format data",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "This step has no verification at the moment",
            "file": "verify1-1.sh",
            "hint": "This step has no verification at the moment"
          }
        ],
        "skills": [
          "matplotlib/figures_axes",
          "matplotlib/importing_matplotlib",
          "python/comments",
          "python/data_visualization",
          "python/importing_modules",
          "python/lists",
          "python/numerical_computing",
          "python/tuples",
          "python/using_packages"
        ]
      },
      {
        "title": "Set up plot",
        "text": "en/step2.md",
        "verify": [
          {
            "name": "This step has no verification at the moment",
            "file": "verify2-1.sh",
            "hint": "This step has no verification at the moment"
          }
        ],
        "skills": [
          "matplotlib/3d_plots",
          "python/booleans",
          "python/build_in_functions",
          "python/comments",
          "python/data_collections",
          "python/tuples",
          "python/variables_data_types"
        ]
      },
      {
        "title": "Customize Hillshading",
        "text": "en/step3.md",
        "verify": [
          {
            "name": "This step has no verification at the moment",
            "file": "verify3-1.sh",
            "hint": "This step has no verification at the moment"
          }
        ],
        "skills": [
          "matplotlib/3d_plots",
          "python/booleans",
          "python/build_in_functions",
          "python/comments",
          "python/data_collections",
          "python/tuples",
          "python/variables_data_types"
        ]
      },
      {
        "title": "Review and revise",
        "text": "en/step4.md",
        "verify": [
          {
            "name": "This step has no verification at the moment",
            "file": "verify4-1.sh",
            "hint": "This step has no verification at the moment"
          }
        ],
        "skills": []
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    },
    "assets": {
      "host01": [
        {
          "file": "custom-shaded-3d-surface.ipynb",
          "target": "/home/labex/project",
          "chmod": "ugo+rwx"
        }
      ]
    }
  },
  "backend": {
    "imageid": "jupyter-ubuntu:2204"
  },
  "contributors": ["huduo0812"],
  "license": {
    "name": "BSD 3-Clause",
    "url": "https://github.com/matplotlib/matplotlib/tree/main/LICENSE",
    "repo": "https://github.com/matplotlib/matplotlib"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "三维表面图中的自定义山体阴影",
      "description": "本实验展示了如何使用Python的Matplotlib在三维表面图中使用自定义山体阴影。山体阴影是利用光影来增强三维图中深度和地形起伏的视觉效果。通过自定义山体阴影，我们可以创建一个更具视觉吸引力且信息丰富的图表。",
      "meta": {
        "title": "自定义山体阴影 | 三维表面图 | Python Matplotlib",
        "description": "学习如何使用Python的Matplotlib通过自定义山体阴影来增强三维表面图中深度和地形起伏的视觉效果。",
        "keywords": "三维表面图, 自定义山体阴影, Python, Matplotlib, 数据可视化"
      },
      "details": {
        "steps": [
          {
            "title": "加载并格式化数据",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "此步骤目前没有验证",
                "file": "verify1-1.sh",
                "hint": "此步骤目前没有验证"
              }
            ]
          },
          {
            "title": "设置图表",
            "text": "zh/step2.md",
            "verify": [
              {
                "name": "此步骤目前没有验证",
                "file": "verify2-1.sh",
                "hint": "此步骤目前没有验证"
              }
            ]
          },
          {
            "title": "自定义山体阴影",
            "text": "zh/step3.md",
            "verify": [
              {
                "name": "此步骤目前没有验证",
                "file": "verify3-1.sh",
                "hint": "此步骤目前没有验证"
              }
            ]
          },
          {
            "title": "检查与修订",
            "text": "zh/step4.md",
            "verify": [
              {
                "name": "此步骤目前没有验证",
                "file": "verify4-1.sh",
                "hint": "此步骤目前没有验证"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Iluminación de relieve personalizada en una representación gráfica de superficie 3D",
      "description": "Este laboratorio demuestra cómo utilizar la iluminación de relieve personalizada en una representación gráfica de superficie 3D utilizando Python Matplotlib. La iluminación de relieve es el uso de luz y sombras para mejorar la percepción de profundidad y relieve en una representación gráfica 3D. Al personalizar la iluminación de relieve, podemos crear una representación gráfica más atractiva visualmente y más informativa.",
      "meta": {
        "title": "Iluminación de relieve personalizada | Representación gráfica de superficie 3D | Python Matplotlib",
        "description": "Aprende cómo utilizar la iluminación de relieve personalizada para mejorar la percepción de profundidad y relieve en una representación gráfica de superficie 3D utilizando Python Matplotlib.",
        "keywords": "Representación gráfica de superficie 3D, iluminación de relieve personalizada, Python, Matplotlib, visualización de datos"
      },
      "details": {
        "steps": [
          {
            "title": "Cargar y formatear datos",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Este paso no tiene verificaciones en este momento",
                "file": "verify1-1.sh",
                "hint": "Este paso no tiene verificaciones en este momento"
              }
            ]
          },
          {
            "title": "Configurar la representación gráfica",
            "text": "es/step2.md",
            "verify": [
              {
                "name": "Este paso no tiene verificaciones en este momento",
                "file": "verify2-1.sh",
                "hint": "Este paso no tiene verificaciones en este momento"
              }
            ]
          },
          {
            "title": "Personalizar la iluminación de relieve",
            "text": "es/step3.md",
            "verify": [
              {
                "name": "Este paso no tiene verificaciones en este momento",
                "file": "verify3-1.sh",
                "hint": "Este paso no tiene verificaciones en este momento"
              }
            ]
          },
          {
            "title": "Revisar y revisar",
            "text": "es/step4.md",
            "verify": [
              {
                "name": "Este paso no tiene verificaciones en este momento",
                "file": "verify4-1.sh",
                "hint": "Este paso no tiene verificaciones en este momento"
              }
            ]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Ombrage personnalisé dans un tracé de surface 3D",
      "description": "Ce laboratoire montre comment utiliser un ombrage personnalisé dans un tracé de surface 3D à l'aide de Matplotlib en Python. L'ombrage consiste à utiliser la lumière et l'ombre pour améliorer la perception de la profondeur et du relief dans un tracé 3D. En personnalisant l'ombrage, nous pouvons créer un tracé plus visuellement attrayant et informatif.",
      "meta": {
        "title": "Ombrage personnalisé | Tracé de surface 3D | Matplotlib Python",
        "description": "Découvrez comment utiliser un ombrage personnalisé pour améliorer la perception de la profondeur et du relief dans un tracé de surface 3D à l'aide de Matplotlib en Python.",
        "keywords": "Tracé de surface 3D, ombrage personnalisé, Python, Matplotlib, visualisation de données"
      },
      "details": {
        "steps": [
          {
            "title": "Charger et formater les données",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Cette étape n'a pas de vérification pour le moment",
                "file": "verify1-1.sh",
                "hint": "Cette étape n'a pas de vérification pour le moment"
              }
            ]
          },
          {
            "title": "Configurer le tracé",
            "text": "fr/step2.md",
            "verify": [
              {
                "name": "Cette étape n'a pas de vérification pour le moment",
                "file": "verify2-1.sh",
                "hint": "Cette étape n'a pas de vérification pour le moment"
              }
            ]
          },
          {
            "title": "Personnaliser l'ombrage",
            "text": "fr/step3.md",
            "verify": [
              {
                "name": "Cette étape n'a pas de vérification pour le moment",
                "file": "verify3-1.sh",
                "hint": "Cette étape n'a pas de vérification pour le moment"
              }
            ]
          },
          {
            "title": "Vérifier et réviser",
            "text": "fr/step4.md",
            "verify": [
              {
                "name": "Cette étape n'a pas de vérification pour le moment",
                "file": "verify4-1.sh",
                "hint": "Cette étape n'a pas de vérification pour le moment"
              }
            ]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Benutzerdefiniertes Hillshading in einem 3D-Oberflächenplot",
      "description": "In diesem Lab wird gezeigt, wie man in einem 3D-Oberflächenplot mit Python Matplotlib benutzerdefiniertes Hillshading verwendet. Hillshading ist die Verwendung von Licht und Schatten, um die Wahrnehmung der Tiefe und des Reliefs in einem 3D-Plot zu verbessern. Indem wir das Hillshading anpassen, können wir einen visuell ansprechenderen und informativeren Plot erstellen.",
      "meta": {
        "title": "Benutzerdefiniertes Hillshading | 3D-Oberflächenplot | Python Matplotlib",
        "description": "Lernen Sie, wie Sie benutzerdefiniertes Hillshading verwenden, um die Wahrnehmung der Tiefe und des Reliefs in einem 3D-Oberflächenplot mit Python Matplotlib zu verbessern.",
        "keywords": "3D-Oberflächenplot, benutzerdefiniertes Hillshading, Python, Matplotlib, Datenvisualisierung"
      },
      "details": {
        "steps": [
          {
            "title": "Daten laden und formatieren",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Dieser Schritt hat momentan keine Verifizierung",
                "file": "verify1-1.sh",
                "hint": "Dieser Schritt hat momentan keine Verifizierung"
              }
            ]
          },
          {
            "title": "Diagramm einrichten",
            "text": "de/step2.md",
            "verify": [
              {
                "name": "Dieser Schritt hat momentan keine Verifizierung",
                "file": "verify2-1.sh",
                "hint": "Dieser Schritt hat momentan keine Verifizierung"
              }
            ]
          },
          {
            "title": "Hillshading anpassen",
            "text": "de/step3.md",
            "verify": [
              {
                "name": "Dieser Schritt hat momentan keine Verifizierung",
                "file": "verify3-1.sh",
                "hint": "Dieser Schritt hat momentan keine Verifizierung"
              }
            ]
          },
          {
            "title": "Überprüfen und revidieren",
            "text": "de/step4.md",
            "verify": [
              {
                "name": "Dieser Schritt hat momentan keine Verifizierung",
                "file": "verify4-1.sh",
                "hint": "Dieser Schritt hat momentan keine Verifizierung"
              }
            ]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "3Dサーフェスプロットにおけるカスタムヒルシェーディング",
      "description": "この実験では、PythonのMatplotlibを使って3Dサーフェスプロットでカスタムヒルシェーディングを使用する方法を示します。ヒルシェーディングとは、3Dプロットにおける奥行きと起伏の感覚を高めるために光と影を利用することです。ヒルシェーディングをカスタマイズすることで、より視覚的に魅力的で情報に富んだプロットを作成できます。",
      "meta": {
        "title": "カスタムヒルシェーディング | 3Dサーフェスプロット | Python Matplotlib",
        "description": "PythonのMatplotlibを使って、3Dサーフェスプロットにおける奥行きと起伏の感覚を高めるためにカスタムヒルシェーディングを使用する方法を学びましょう。",
        "keywords": "3Dサーフェスプロット, カスタムヒルシェーディング, Python, Matplotlib, データ可視化"
      },
      "details": {
        "steps": [
          {
            "title": "データの読み込みとフォーマット",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "このステップでは現在検証はありません",
                "file": "verify1-1.sh",
                "hint": "このステップでは現在検証はありません"
              }
            ]
          },
          {
            "title": "プロットの設定",
            "text": "ja/step2.md",
            "verify": [
              {
                "name": "このステップでは現在検証はありません",
                "file": "verify2-1.sh",
                "hint": "このステップでは現在検証はありません"
              }
            ]
          },
          {
            "title": "ヒルシェーディングのカスタマイズ",
            "text": "ja/step3.md",
            "verify": [
              {
                "name": "このステップでは現在検証はありません",
                "file": "verify3-1.sh",
                "hint": "このステップでは現在検証はありません"
              }
            ]
          },
          {
            "title": "レビューと修正",
            "text": "ja/step4.md",
            "verify": [
              {
                "name": "このステップでは現在検証はありません",
                "file": "verify4-1.sh",
                "hint": "このステップでは現在検証はありません"
              }
            ]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Настраиваемая теневая заливка в трехмерной поверхностной диаграмме",
      "description": "В этом практическом занятии показано, как использовать настраиваемую теневую заливку в трехмерной поверхностной диаграмме с использованием Python Matplotlib. Теневая заливка - это использование света и тени для усиления восприятия глубины и рельефа в трехмерной диаграмме. При настройке теневой заливки мы можем создать более наглядную и информативную диаграмму.",
      "meta": {
        "title": "Настраиваемая теневая заливка | Трехмерная поверхностная диаграмма | Python Matplotlib",
        "description": "Изучите, как использовать настраиваемую теневую заливку для усиления восприятия глубины и рельефа в трехмерной поверхностной диаграмме с использованием Python Matplotlib.",
        "keywords": "Трехмерная поверхностная диаграмма, настраиваемая теневая заливка, Python, Matplotlib, визуализация данных"
      },
      "details": {
        "steps": [
          {
            "title": "Загрузка и форматирование данных",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "На данный момент эта стадия не имеет проверки",
                "file": "verify1-1.sh",
                "hint": "На данный момент эта стадия не имеет проверки"
              }
            ]
          },
          {
            "title": "Настроить график",
            "text": "ru/step2.md",
            "verify": [
              {
                "name": "На данный момент эта стадия не имеет проверки",
                "file": "verify2-1.sh",
                "hint": "На данный момент эта стадия не имеет проверки"
              }
            ]
          },
          {
            "title": "Настроить теневое освещение",
            "text": "ru/step3.md",
            "verify": [
              {
                "name": "На данный момент эта стадия не имеет проверки",
                "file": "verify3-1.sh",
                "hint": "На данный момент эта стадия не имеет проверки"
              }
            ]
          },
          {
            "title": "Проверить и доработать",
            "text": "ru/step4.md",
            "verify": [
              {
                "name": "На данный момент эта стадия не имеет проверки",
                "file": "verify4-1.sh",
                "hint": "На данный момент эта стадия не имеет проверки"
              }
            ]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    }
  ]
}
