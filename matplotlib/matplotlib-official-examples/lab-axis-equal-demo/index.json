{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Equal Axis Aspect Ratio",
  "description": "In data visualization, it is important to present information in an accurate and visually appealing way. One way to achieve this is by setting equal axis aspect ratios in plots. This ensures that the x and y axes are scaled equally, resulting in a proportional representation of the data. In this tutorial, we will learn how to set and adjust plots with equal axis aspect ratios using Python's Matplotlib library.",
  "meta": {
    "title": "Equal Axis Aspect Ratio in Data Visualization",
    "description": "Learn how to set and adjust plots with equal axis aspect ratios using Python's Matplotlib library.",
    "keywords": "matplotlib, equal axis aspect ratio, python, data visualization, numpy"
  },
  "difficulty": "Beginner",
  "time": 25,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Import necessary libraries",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "This step has no verification at the moment",
            "file": "verify1-1.sh",
            "hint": "This step has no verification at the moment"
          }
        ],
        "skills": [
          "matplotlib/figures_axes",
          "matplotlib/importing_matplotlib",
          "python/data_visualization",
          "python/importing_modules",
          "python/numerical_computing"
        ]
      },
      {
        "title": "Plot a circle with unequal axis aspect ratio",
        "text": "en/step2.md",
        "verify": [
          {
            "name": "This step has no verification at the moment",
            "file": "verify2-1.sh",
            "hint": "This step has no verification at the moment"
          }
        ],
        "skills": ["matplotlib/line_plots", "python/lists", "python/tuples"]
      },
      {
        "title": "Plot a circle with equal axis aspect ratio",
        "text": "en/step3.md",
        "verify": [
          {
            "name": "This step has no verification at the moment",
            "file": "verify3-1.sh",
            "hint": "This step has no verification at the moment"
          }
        ],
        "skills": ["matplotlib/line_plots", "python/lists", "python/tuples"]
      },
      {
        "title": "Adjust plot limits while maintaining equal axis aspect ratio",
        "text": "en/step4.md",
        "verify": [
          {
            "name": "This step has no verification at the moment",
            "file": "verify4-1.sh",
            "hint": "This step has no verification at the moment"
          }
        ],
        "skills": [
          "matplotlib/line_plots",
          "python/build_in_functions",
          "python/data_collections",
          "python/lists",
          "python/tuples",
          "python/variables_data_types"
        ]
      },
      {
        "title": "Auto-adjust data limits for equal axis aspect ratio",
        "text": "en/step5.md",
        "verify": [
          {
            "name": "This step has no verification at the moment",
            "file": "verify5-1.sh",
            "hint": "This step has no verification at the moment"
          }
        ],
        "skills": ["matplotlib/line_plots", "python/lists", "python/tuples"]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    },
    "assets": {
      "host01": [
        {
          "file": "axis-equal-demo.ipynb",
          "target": "/home/labex/project",
          "chmod": "ugo+rwx"
        }
      ]
    }
  },
  "backend": {
    "imageid": "jupyter-ubuntu:2204"
  },
  "contributors": ["huduo0812"],
  "license": {
    "name": "BSD 3-Clause",
    "url": "https://github.com/matplotlib/matplotlib/tree/main/LICENSE",
    "repo": "https://github.com/matplotlib/matplotlib"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "等轴长宽比",
      "description": "在数据可视化中，以准确且视觉上吸引人的方式呈现信息非常重要。实现这一点的一种方法是在绘图中设置相等的轴长宽比。这可确保 x 轴和 y 轴按相同比例缩放，从而实现数据的比例表示。在本教程中，我们将学习如何使用 Python 的 Matplotlib 库来设置和调整具有相等轴长宽比的绘图。",
      "meta": {
        "title": "数据可视化中的等轴长宽比",
        "description": "学习如何使用 Python 的 Matplotlib 库来设置和调整具有相等轴长宽比的绘图。",
        "keywords": "Matplotlib, 等轴长宽比，Python, 数据可视化，NumPy"
      },
      "details": {
        "steps": [
          {
            "title": "导入必要的库",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "此步骤目前没有验证",
                "file": "verify1-1.sh",
                "hint": "此步骤目前没有验证"
              }
            ]
          },
          {
            "title": "绘制一个长宽比不等的圆",
            "text": "zh/step2.md",
            "verify": [
              {
                "name": "此步骤目前没有验证",
                "file": "verify2-1.sh",
                "hint": "此步骤目前没有验证"
              }
            ]
          },
          {
            "title": "绘制一个长宽比相等的圆",
            "text": "zh/step3.md",
            "verify": [
              {
                "name": "此步骤目前没有验证",
                "file": "verify3-1.sh",
                "hint": "此步骤目前没有验证"
              }
            ]
          },
          {
            "title": "在保持等轴长宽比的同时调整绘图界限",
            "text": "zh/step4.md",
            "verify": [
              {
                "name": "此步骤目前没有验证",
                "file": "verify4-1.sh",
                "hint": "此步骤目前没有验证"
              }
            ]
          },
          {
            "title": "自动调整数据界限以实现等轴长宽比",
            "text": "zh/step5.md",
            "verify": [
              {
                "name": "此步骤目前没有验证",
                "file": "verify5-1.sh",
                "hint": "此步骤目前没有验证"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Proporción de aspecto de ejes igual",
      "description": "En la visualización de datos, es importante presentar la información de manera precisa y visualmente atractiva. Una forma de lograr esto es estableciendo proporciones iguales de los ejes en las gráficas. Esto garantiza que los ejes x e y estén escalados por igual, lo que resulta en una representación proporcional de los datos. En este tutorial, aprenderemos cómo establecer y ajustar gráficas con proporciones iguales de los ejes utilizando la biblioteca Matplotlib de Python.",
      "meta": {
        "title": "Proporción de aspecto de ejes igual en la visualización de datos",
        "description": "Aprende cómo establecer y ajustar gráficas con proporciones iguales de los ejes utilizando la biblioteca Matplotlib de Python.",
        "keywords": "matplotlib, proporción de aspecto de ejes igual, python, visualización de datos, numpy"
      },
      "details": {
        "steps": [
          {
            "title": "Importar las bibliotecas necesarias",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Este paso no tiene verificación en este momento",
                "file": "verify1-1.sh",
                "hint": "Este paso no tiene verificación en este momento"
              }
            ]
          },
          {
            "title": "Trazar un círculo con una proporción de aspecto de ejes desigual",
            "text": "es/step2.md",
            "verify": [
              {
                "name": "Este paso no tiene verificación en este momento",
                "file": "verify2-1.sh",
                "hint": "Este paso no tiene verificación en este momento"
              }
            ]
          },
          {
            "title": "Trazar un círculo con una proporción de aspecto de ejes igual",
            "text": "es/step3.md",
            "verify": [
              {
                "name": "Este paso no tiene verificación en este momento",
                "file": "verify3-1.sh",
                "hint": "Este paso no tiene verificación en este momento"
              }
            ]
          },
          {
            "title": "Ajustar los límites de la gráfica mientras se mantiene la proporción de aspecto de ejes igual",
            "text": "es/step4.md",
            "verify": [
              {
                "name": "Este paso no tiene verificación en este momento",
                "file": "verify4-1.sh",
                "hint": "Este paso no tiene verificación en este momento"
              }
            ]
          },
          {
            "title": "Ajuste automático de los límites de datos para una proporción de aspecto de ejes igual",
            "text": "es/step5.md",
            "verify": [
              {
                "name": "Este paso no tiene verificación en este momento",
                "file": "verify5-1.sh",
                "hint": "Este paso no tiene verificación en este momento"
              }
            ]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Rapport d'aspect d'axes égal",
      "description": "Dans la visualisation de données, il est important de présenter les informations de manière précise et visuellement attrayante. Un moyen de le faire est de définir des rapports d'aspect d'axes égaux dans les tracés. Cela garantit que les axes x et y sont mis à l'échelle de la même manière, ce qui résulte en une représentation proportionnelle des données. Dans ce tutoriel, nous allons apprendre à définir et à ajuster des tracés avec des rapports d'aspect d'axes égaux à l'aide de la bibliothèque Matplotlib de Python.",
      "meta": {
        "title": "Rapport d'aspect d'axes égal dans la visualisation de données",
        "description": "Apprenez à définir et à ajuster des tracés avec des rapports d'aspect d'axes égaux à l'aide de la bibliothèque Matplotlib de Python.",
        "keywords": "matplotlib, rapport d'aspect d'axes égal, python, visualisation de données, numpy"
      },
      "details": {
        "steps": [
          {
            "title": "Importer les bibliothèques nécessaires",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Cette étape n'a pas de vérification pour le moment",
                "file": "verify1-1.sh",
                "hint": "Cette étape n'a pas de vérification pour le moment"
              }
            ]
          },
          {
            "title": "Tracer un cercle avec un rapport d'aspect d'axes inégal",
            "text": "fr/step2.md",
            "verify": [
              {
                "name": "Cette étape n'a pas de vérification pour le moment",
                "file": "verify2-1.sh",
                "hint": "Cette étape n'a pas de vérification pour le moment"
              }
            ]
          },
          {
            "title": "Tracer un cercle avec un rapport d'aspect d'axes égal",
            "text": "fr/step3.md",
            "verify": [
              {
                "name": "Cette étape n'a pas de vérification pour le moment",
                "file": "verify3-1.sh",
                "hint": "Cette étape n'a pas de vérification pour le moment"
              }
            ]
          },
          {
            "title": "Ajuster les limites du tracé tout en maintenant un rapport d'aspect d'axes égal",
            "text": "fr/step4.md",
            "verify": [
              {
                "name": "Cette étape n'a pas de vérification pour le moment",
                "file": "verify4-1.sh",
                "hint": "Cette étape n'a pas de vérification pour le moment"
              }
            ]
          },
          {
            "title": "Ajuster automatiquement les limites des données pour un rapport d'aspect d'axes égal",
            "text": "fr/step5.md",
            "verify": [
              {
                "name": "Cette étape n'a pas de vérification pour le moment",
                "file": "verify5-1.sh",
                "hint": "Cette étape n'a pas de vérification pour le moment"
              }
            ]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Gleiches Achsenverhältnis",
      "description": "Beim Datenvisualisierung ist es wichtig, Informationen auf genaue und visuell ansprechende Weise darzustellen. Ein Weg, dies zu erreichen, ist es, gleiche Achsenverhältnisse in Diagrammen einzustellen. Dadurch wird sichergestellt, dass die x- und y-Achsen gleich skaliert werden, was zu einer proportionalen Darstellung der Daten führt. In diesem Tutorial lernen wir, wie man Diagramme mit gleichen Achsenverhältnissen mit der Matplotlib-Bibliothek in Python einstellt und anpasst.",
      "meta": {
        "title": "Gleiches Achsenverhältnis bei der Datenvisualisierung",
        "description": "Lernen Sie, wie man Diagramme mit gleichen Achsenverhältnissen mit der Matplotlib-Bibliothek in Python einstellt und anpasst.",
        "keywords": "matplotlib, gleiches Achsenverhältnis, python, Datenvisualisierung, numpy"
      },
      "details": {
        "steps": [
          {
            "title": "Importiere erforderliche Bibliotheken",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Dieser Schritt hat momentan keine Verifizierung",
                "file": "verify1-1.sh",
                "hint": "Dieser Schritt hat momentan keine Verifizierung"
              }
            ]
          },
          {
            "title": "Plotte einen Kreis mit ungleichem Achsenverhältnis",
            "text": "de/step2.md",
            "verify": [
              {
                "name": "Dieser Schritt hat momentan keine Verifizierung",
                "file": "verify2-1.sh",
                "hint": "Dieser Schritt hat momentan keine Verifizierung"
              }
            ]
          },
          {
            "title": "Plotte einen Kreis mit gleichem Achsenverhältnis",
            "text": "de/step3.md",
            "verify": [
              {
                "name": "Dieser Schritt hat momentan keine Verifizierung",
                "file": "verify3-1.sh",
                "hint": "Dieser Schritt hat momentan keine Verifizierung"
              }
            ]
          },
          {
            "title": "Anpassen der Diagrammgrenzen unter Beibehaltung des gleichen Achsenverhältnisses",
            "text": "de/step4.md",
            "verify": [
              {
                "name": "Dieser Schritt hat momentan keine Verifizierung",
                "file": "verify4-1.sh",
                "hint": "Dieser Schritt hat momentan keine Verifizierung"
              }
            ]
          },
          {
            "title": "Automatische Anpassung der Datengrenzen für ein gleichmäßiges Achsenverhältnis",
            "text": "de/step5.md",
            "verify": [
              {
                "name": "Dieser Schritt hat momentan keine Verifizierung",
                "file": "verify5-1.sh",
                "hint": "Dieser Schritt hat momentan keine Verifizierung"
              }
            ]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "等しい軸のアスペクト比",
      "description": "データ可視化においては、情報を正確かつ視覚的に魅力的な方法で提示することが重要です。これを達成する方法の 1 つは、グラフにおいて等しい軸のアスペクト比を設定することです。これにより、x 軸と y 軸が等しくスケーリングされ、データの比例した表現が得られます。このチュートリアルでは、Python の Matplotlib ライブラリを使って、等しい軸のアスペクト比でグラフを設定および調整する方法を学びます。",
      "meta": {
        "title": "データ可視化における等しい軸のアスペクト比",
        "description": "Python の Matplotlib ライブラリを使って、等しい軸のアスペクト比でグラフを設定および調整する方法を学びましょう。",
        "keywords": "matplotlib, 等しい軸のアスペクト比，python, データ可視化，numpy"
      },
      "details": {
        "steps": [
          {
            "title": "必要なライブラリをインポートする",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "このステップには現在、検証はありません",
                "file": "verify1-1.sh",
                "hint": "このステップには現在、検証はありません"
              }
            ]
          },
          {
            "title": "不等しい軸のアスペクト比で円をプロットする",
            "text": "ja/step2.md",
            "verify": [
              {
                "name": "このステップには現在、検証はありません",
                "file": "verify2-1.sh",
                "hint": "このステップには現在、検証はありません"
              }
            ]
          },
          {
            "title": "等しい軸のアスペクト比で円をプロットする",
            "text": "ja/step3.md",
            "verify": [
              {
                "name": "このステップには現在、検証はありません",
                "file": "verify3-1.sh",
                "hint": "このステップには現在、検証はありません"
              }
            ]
          },
          {
            "title": "等しい軸のアスペクト比を維持しながらグラフの範囲を調整する",
            "text": "ja/step4.md",
            "verify": [
              {
                "name": "このステップには現在、検証はありません",
                "file": "verify4-1.sh",
                "hint": "このステップには現在、検証はありません"
              }
            ]
          },
          {
            "title": "等しい軸のアスペクト比に対してデータの範囲を自動調整する",
            "text": "ja/step5.md",
            "verify": [
              {
                "name": "このステップには現在、検証はありません",
                "file": "verify5-1.sh",
                "hint": "このステップには現在、検証はありません"
              }
            ]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Соотношение сторон осей",
      "description": "В визуализации данных важно представлять информацию точным и визуально привлекательным способом. Одним из способов достичь этого является установка равного соотношения сторон осей на графиках. Это гарантирует, что оси x и y масштабируются одинаково, что приводит к пропорциональному представлению данных. В этом уроке мы узнаем, как настраивать и настраивать графики с равным соотношением сторон осей с использованием библиотеки Matplotlib для Python.",
      "meta": {
        "title": "Соотношение сторон осей в визуализации данных",
        "description": "Изучите, как настраивать и настраивать графики с равным соотношением сторон осей с использованием библиотеки Matplotlib для Python.",
        "keywords": "matplotlib, соотношение сторон осей, python, визуализация данных, numpy"
      },
      "details": {
        "steps": [
          {
            "title": "Импортировать необходимые библиотеки",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "На данный момент эта стадия не имеет проверки",
                "file": "verify1-1.sh",
                "hint": "На данный момент эта стадия не имеет проверки"
              }
            ]
          },
          {
            "title": "Построить круг с неравным соотношением сторон осей",
            "text": "ru/step2.md",
            "verify": [
              {
                "name": "На данный момент эта стадия не имеет проверки",
                "file": "verify2-1.sh",
                "hint": "На данный момент эта стадия не имеет проверки"
              }
            ]
          },
          {
            "title": "Построить круг с равным соотношением сторон осей",
            "text": "ru/step3.md",
            "verify": [
              {
                "name": "На данный момент эта стадия не имеет проверки",
                "file": "verify3-1.sh",
                "hint": "На данный момент эта стадия не имеет проверки"
              }
            ]
          },
          {
            "title": "Настраивать пределы графика, сохраняя равное соотношение сторон осей",
            "text": "ru/step4.md",
            "verify": [
              {
                "name": "На данный момент эта стадия не имеет проверки",
                "file": "verify4-1.sh",
                "hint": "На данный момент эта стадия не имеет проверки"
              }
            ]
          },
          {
            "title": "Автоматически настраивать пределы данных для равного соотношения сторон осей",
            "text": "ru/step5.md",
            "verify": [
              {
                "name": "На данный момент эта стадия не имеет проверки",
                "file": "verify5-1.sh",
                "hint": "На данный момент эта стадия не имеет проверки"
              }
            ]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    },
    {
      "lang": "ko",
      "title": "축 비율 동일하게 설정하기",
      "description": "데이터 시각화에서 정보를 정확하고 시각적으로 매력적인 방식으로 제시하는 것이 중요합니다. 이를 달성하는 한 가지 방법은 플롯에서 동일한 축 종횡비 (aspect ratio) 를 설정하는 것입니다. 이렇게 하면 x 축과 y 축이 동일하게 조정되어 데이터의 비례적인 표현이 가능해집니다. 이 튜토리얼에서는 Python 의 Matplotlib 라이브러리를 사용하여 동일한 축 종횡비를 가진 플롯을 설정하고 조정하는 방법을 배웁니다.",
      "meta": {
        "title": "데이터 시각화에서 축 비율 동일하게 설정하는 방법 (Matplotlib)",
        "description": "Python 의 Matplotlib 라이브러리를 사용하여 플롯의 축 비율을 동일하게 설정하고 조정하는 방법을 알아보세요. 데이터 시각화, Matplotlib 튜토리얼.",
        "keywords": "matplotlib, 축 비율, 종횡비, 파이썬, 데이터 시각화, numpy, Matplotlib 튜토리얼, 데이터 시각화 팁"
      },
      "details": {
        "steps": [
          {
            "title": "필요한 라이브러리 임포트",
            "text": "ko/step1.md",
            "verify": [
              {
                "name": "현재 이 단계는 검증이 없습니다.",
                "file": "verify1-1.sh",
                "hint": "현재 이 단계는 검증이 없습니다."
              }
            ]
          },
          {
            "title": "축 비율이 다른 원 그리기",
            "text": "ko/step2.md",
            "verify": [
              {
                "name": "현재 이 단계는 검증이 없습니다.",
                "file": "verify2-1.sh",
                "hint": "현재 이 단계는 검증이 없습니다."
              }
            ]
          },
          {
            "title": "축 비율이 동일한 원 그리기",
            "text": "ko/step3.md",
            "verify": [
              {
                "name": "현재 이 단계는 검증이 없습니다.",
                "file": "verify3-1.sh",
                "hint": "현재 이 단계는 검증이 없습니다."
              }
            ]
          },
          {
            "title": "축 비율을 유지하면서 플롯 범위 조정",
            "text": "ko/step4.md",
            "verify": [
              {
                "name": "현재 이 단계는 검증이 없습니다.",
                "file": "verify4-1.sh",
                "hint": "현재 이 단계는 검증이 없습니다."
              }
            ]
          },
          {
            "title": "축 비율 유지를 위한 데이터 범위 자동 조정",
            "text": "ko/step5.md",
            "verify": [
              {
                "name": "현재 이 단계는 검증이 없습니다.",
                "file": "verify5-1.sh",
                "hint": "현재 이 단계는 검증이 없습니다."
              }
            ]
          }
        ],
        "intro": {
          "text": "ko/intro.md",
          "title": "소개"
        },
        "finish": {
          "text": "ko/finish.md",
          "title": "요약"
        }
      }
    },
    {
      "lang": "pt",
      "title": "Proporção de Aspecto de Eixo Igual",
      "description": "Na visualização de dados, é importante apresentar informações de forma precisa e visualmente atraente. Uma maneira de conseguir isso é definindo proporções de aspecto de eixo iguais nos gráficos. Isso garante que os eixos x e y sejam dimensionados igualmente, resultando em uma representação proporcional dos dados. Neste tutorial, aprenderemos como definir e ajustar gráficos com proporções de aspecto de eixo iguais usando a biblioteca Matplotlib do Python.",
      "meta": {
        "title": "Proporção de Aspecto de Eixo Igual em Visualização de Dados | Matplotlib Python",
        "description": "Aprenda como definir e ajustar gráficos com proporções de aspecto de eixo iguais usando a biblioteca Matplotlib do Python. Otimize a visualização de dados com eixos proporcionais.",
        "keywords": "matplotlib, proporção de aspecto de eixo igual, python, visualização de dados, numpy, gráficos proporcionais, Matplotlib tutorial"
      },
      "details": {
        "steps": [
          {
            "title": "Importar as bibliotecas necessárias",
            "text": "pt/step1.md",
            "verify": [
              {
                "name": "Este passo não possui verificação no momento",
                "file": "verify1-1.sh",
                "hint": "Este passo não possui verificação no momento"
              }
            ]
          },
          {
            "title": "Plotar um círculo com proporção de aspecto de eixo desigual",
            "text": "pt/step2.md",
            "verify": [
              {
                "name": "Este passo não possui verificação no momento",
                "file": "verify2-1.sh",
                "hint": "Este passo não possui verificação no momento"
              }
            ]
          },
          {
            "title": "Plotar um círculo com proporção de aspecto de eixo igual",
            "text": "pt/step3.md",
            "verify": [
              {
                "name": "Este passo não possui verificação no momento",
                "file": "verify3-1.sh",
                "hint": "Este passo não possui verificação no momento"
              }
            ]
          },
          {
            "title": "Ajustar os limites do gráfico mantendo a proporção de aspecto de eixo igual",
            "text": "pt/step4.md",
            "verify": [
              {
                "name": "Este passo não possui verificação no momento",
                "file": "verify4-1.sh",
                "hint": "Este passo não possui verificação no momento"
              }
            ]
          },
          {
            "title": "Auto-ajustar os limites dos dados para proporção de aspecto de eixo igual",
            "text": "pt/step5.md",
            "verify": [
              {
                "name": "Este passo não possui verificação no momento",
                "file": "verify5-1.sh",
                "hint": "Este passo não possui verificação no momento"
              }
            ]
          }
        ],
        "intro": {
          "text": "pt/intro.md",
          "title": "Introdução"
        },
        "finish": {
          "text": "pt/finish.md",
          "title": "Resumo"
        }
      }
    }
  ]
}
