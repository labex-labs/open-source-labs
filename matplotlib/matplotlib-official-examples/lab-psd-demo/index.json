{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Matplotlib PSD Plotting",
  "description": "This tutorial will guide you through the process of plotting the Power Spectral Density (PSD) using the Matplotlib library in Python. The PSD is a plot commonly used in the field of signal processing. NumPy has many useful libraries for computing a PSD, and we will show a few examples of how this can be accomplished and visualized with Matplotlib.",
  "meta": {
    "title": "Matplotlib PSD Plotting Tutorial",
    "description": "Learn how to plot Power Spectral Density using Matplotlib in Python, a useful tool for signal processing.",
    "keywords": "matplotlib, power spectral density, python, psd, signal processing"
  },
  "difficulty": "Beginner",
  "time": 20,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Plot a basic PSD",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "This step has no verification at the moment",
            "file": "verify1-1.sh",
            "hint": "This step has no verification at the moment"
          }
        ],
        "skills": []
      },
      {
        "title": "Compare with equivalent MATLAB code",
        "text": "en/step2.md",
        "verify": [
          {
            "name": "This step has no verification at the moment",
            "file": "verify2-1.sh",
            "hint": "This step has no verification at the moment"
          }
        ],
        "skills": []
      },
      {
        "title": "Plot PSD with different amounts of padding",
        "text": "en/step3.md",
        "verify": [
          {
            "name": "This step has no verification at the moment",
            "file": "verify3-1.sh",
            "hint": "This step has no verification at the moment"
          }
        ],
        "skills": []
      },
      {
        "title": "Plot PSD of a complex signal",
        "text": "en/step4.md",
        "verify": [
          {
            "name": "This step has no verification at the moment",
            "file": "verify4-1.sh",
            "hint": "This step has no verification at the moment"
          }
        ],
        "skills": []
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    },
    "assets": {
      "host01": [
        {
          "file": "psd-demo.ipynb",
          "target": "/home/labex/project",
          "chmod": "ugo+rwx"
        }
      ]
    }
  },
  "backend": {
    "imageid": "jupyter-ubuntu:2204"
  },
  "contributors": [],
  "license": {
    "name": "BSD 3-Clause",
    "url": "https://github.com/matplotlib/matplotlib/tree/main/LICENSE",
    "repo": "https://github.com/matplotlib/matplotlib"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "使用 Matplotlib 绘制功率谱密度图",
      "description": "本教程将指导你完成使用 Python 中的 Matplotlib 库绘制功率谱密度（PSD）的过程。PSD 是信号处理领域常用的一种图。NumPy 有许多用于计算 PSD 的有用库，我们将展示几个如何使用 Matplotlib 实现并可视化 PSD 的示例。",
      "meta": {
        "title": "Matplotlib 绘制功率谱密度图教程",
        "description": "学习如何使用 Python 中的 Matplotlib 绘制功率谱密度，这是信号处理的一个有用工具。",
        "keywords": "Matplotlib, 功率谱密度，Python, PSD, 信号处理"
      },
      "details": {
        "steps": [
          {
            "title": "绘制基本的功率谱密度图",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "此步骤目前没有验证",
                "file": "verify1-1.sh",
                "hint": "此步骤目前没有验证"
              }
            ]
          },
          {
            "title": "与等效的 MATLAB 代码进行比较",
            "text": "zh/step2.md",
            "verify": [
              {
                "name": "此步骤目前没有验证",
                "file": "verify2-1.sh",
                "hint": "此步骤目前没有验证"
              }
            ]
          },
          {
            "title": "使用不同填充量绘制功率谱密度图",
            "text": "zh/step3.md",
            "verify": [
              {
                "name": "此步骤目前没有验证",
                "file": "verify3-1.sh",
                "hint": "此步骤目前没有验证"
              }
            ]
          },
          {
            "title": "绘制复信号的功率谱密度",
            "text": "zh/step4.md",
            "verify": [
              {
                "name": "此步骤目前没有验证",
                "file": "verify4-1.sh",
                "hint": "此步骤目前没有验证"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Trazado de la Densidad Espectral de Potencia con Matplotlib",
      "description": "Este tutorial te guiará a través del proceso de trazar la Densidad Espectral de Potencia (PSD, por sus siglas en inglés) utilizando la biblioteca Matplotlib en Python. La PSD es un gráfico comúnmente utilizado en el campo del procesamiento de señales. NumPy tiene muchas bibliotecas útiles para calcular una PSD, y mostraremos algunos ejemplos de cómo se puede lograr y visualizar con Matplotlib.",
      "meta": {
        "title": "Tutorial de trazado de la Densidad Espectral de Potencia con Matplotlib",
        "description": "Aprende a trazar la Densidad Espectral de Potencia utilizando Matplotlib en Python, una herramienta útil para el procesamiento de señales.",
        "keywords": "matplotlib, densidad espectral de potencia, python, psd, procesamiento de señales"
      },
      "details": {
        "steps": [
          {
            "title": "Trazar una PSD básica",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Este paso no tiene verificación en este momento",
                "file": "verify1-1.sh",
                "hint": "Este paso no tiene verificación en este momento"
              }
            ]
          },
          {
            "title": "Comparar con el código equivalente en MATLAB",
            "text": "es/step2.md",
            "verify": [
              {
                "name": "Este paso no tiene verificación en este momento",
                "file": "verify2-1.sh",
                "hint": "Este paso no tiene verificación en este momento"
              }
            ]
          },
          {
            "title": "Trazar la PSD con diferentes cantidades de relleno",
            "text": "es/step3.md",
            "verify": [
              {
                "name": "Este paso no tiene verificación en este momento",
                "file": "verify3-1.sh",
                "hint": "Este paso no tiene verificación en este momento"
              }
            ]
          },
          {
            "title": "Trazar la PSD de una señal compleja",
            "text": "es/step4.md",
            "verify": [
              {
                "name": "Este paso no tiene verificación en este momento",
                "file": "verify4-1.sh",
                "hint": "Este paso no tiene verificación en este momento"
              }
            ]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Tracé de la DSP avec Matplotlib",
      "description": "Ce tutoriel vous guidera tout au long du processus de tracé de la densité spectrale de puissance (DSP) à l'aide de la bibliothèque Matplotlib en Python. La DSP est un tracé couramment utilisé dans le domaine du traitement du signal. NumPy dispose de nombreuses bibliothèques utiles pour calculer une DSP, et nous allons montrer quelques exemples de la manière dont cela peut être accompli et visualisé avec Matplotlib.",
      "meta": {
        "title": "Tutoriel sur le tracé de la DSP avec Matplotlib",
        "description": "Apprenez à tracer la densité spectrale de puissance à l'aide de Matplotlib en Python, un outil utile pour le traitement du signal.",
        "keywords": "matplotlib, densité spectrale de puissance, python, dsp, traitement du signal"
      },
      "details": {
        "steps": [
          {
            "title": "Tracer une DSP de base",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Cette étape n'a pas de vérification pour le moment",
                "file": "verify1-1.sh",
                "hint": "Cette étape n'a pas de vérification pour le moment"
              }
            ]
          },
          {
            "title": "Comparer avec le code MATLAB équivalent",
            "text": "fr/step2.md",
            "verify": [
              {
                "name": "Cette étape n'a pas de vérification pour le moment",
                "file": "verify2-1.sh",
                "hint": "Cette étape n'a pas de vérification pour le moment"
              }
            ]
          },
          {
            "title": "Tracer la DSP avec différents niveaux de remplissage",
            "text": "fr/step3.md",
            "verify": [
              {
                "name": "Cette étape n'a pas de vérification pour le moment",
                "file": "verify3-1.sh",
                "hint": "Cette étape n'a pas de vérification pour le moment"
              }
            ]
          },
          {
            "title": "Tracer la DSP d'un signal complexe",
            "text": "fr/step4.md",
            "verify": [
              {
                "name": "Cette étape n'a pas de vérification pour le moment",
                "file": "verify4-1.sh",
                "hint": "Cette étape n'a pas de vérification pour le moment"
              }
            ]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Matplotlib PSD Plotting",
      "description": "In diesem Tutorial wird Ihnen der Prozess der Darstellung der Leistungsdichtespektrum (PSD) mit der Matplotlib-Bibliothek in Python erläutert. Das PSD ist ein häufig verwendetes Diagramm im Bereich der Signalverarbeitung. NumPy verfügt über viele nützliche Bibliotheken zur Berechnung eines PSD, und wir werden einige Beispiele zeigen, wie dies mit Matplotlib erreicht und visualisiert werden kann.",
      "meta": {
        "title": "Matplotlib PSD Plotting Tutorial",
        "description": "Lernen Sie, wie Sie die Leistungsdichtespektrum mit Matplotlib in Python darstellen, ein nützliches Tool für die Signalverarbeitung.",
        "keywords": "matplotlib, Leistungsdichtespektrum, python, psd, Signalverarbeitung"
      },
      "details": {
        "steps": [
          {
            "title": "Zeichnen Sie ein grundlegendes PSD",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Dieser Schritt hat momentan keine Verifizierung",
                "file": "verify1-1.sh",
                "hint": "Dieser Schritt hat momentan keine Verifizierung"
              }
            ]
          },
          {
            "title": "Vergleichen Sie mit dem äquivalenten MATLAB-Code",
            "text": "de/step2.md",
            "verify": [
              {
                "name": "Dieser Schritt hat momentan keine Verifizierung",
                "file": "verify2-1.sh",
                "hint": "Dieser Schritt hat momentan keine Verifizierung"
              }
            ]
          },
          {
            "title": "Zeichnen Sie das PSD mit unterschiedlicher Anzahl von Auffüllung",
            "text": "de/step3.md",
            "verify": [
              {
                "name": "Dieser Schritt hat momentan keine Verifizierung",
                "file": "verify3-1.sh",
                "hint": "Dieser Schritt hat momentan keine Verifizierung"
              }
            ]
          },
          {
            "title": "Zeichnen Sie das PSD eines komplexen Signals",
            "text": "de/step4.md",
            "verify": [
              {
                "name": "Dieser Schritt hat momentan keine Verifizierung",
                "file": "verify4-1.sh",
                "hint": "Dieser Schritt hat momentan keine Verifizierung"
              }
            ]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "Matplotlib による PSD のプロット",
      "description": "このチュートリアルでは、Python の Matplotlib ライブラリを使ってパワー スペクトル密度 (PSD) をプロットする方法を案内します。PSD は信号処理の分野で一般的に使用されるプロットです。NumPy には PSD を計算するための多くの便利なライブラリがあり、Matplotlib を使ってこれをどのように実現し可視化するかのいくつかの例を示します。",
      "meta": {
        "title": "Matplotlib による PSD プロットチュートリアル",
        "description": "Python の Matplotlib を使ってパワー スペクトル密度をプロットする方法を学びましょう。信号処理に役立つツールです。",
        "keywords": "matplotlib, パワー スペクトル密度，python, psd, 信号処理"
      },
      "details": {
        "steps": [
          {
            "title": "基本的な PSD をプロットする",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "このステップでは現在検証はありません",
                "file": "verify1-1.sh",
                "hint": "このステップでは現在検証はありません"
              }
            ]
          },
          {
            "title": "同等の MATLAB コードと比較する",
            "text": "ja/step2.md",
            "verify": [
              {
                "name": "このステップでは現在検証はありません",
                "file": "verify2-1.sh",
                "hint": "このステップでは現在検証はありません"
              }
            ]
          },
          {
            "title": "異なるパディング量で PSD をプロットする",
            "text": "ja/step3.md",
            "verify": [
              {
                "name": "このステップでは現在検証はありません",
                "file": "verify3-1.sh",
                "hint": "このステップでは現在検証はありません"
              }
            ]
          },
          {
            "title": "複素信号の PSD をプロットする",
            "text": "ja/step4.md",
            "verify": [
              {
                "name": "このステップでは現在検証はありません",
                "file": "verify4-1.sh",
                "hint": "このステップでは現在検証はありません"
              }
            ]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Построение графика PSD с использованием Matplotlib",
      "description": "В этом руководстве вы узнаете, как построить график плотности мощностного спектра (Power Spectral Density, PSD) с использованием библиотеки Matplotlib в Python. График PSD широко используется в области обработки сигналов. NumPy имеет множество полезных библиотек для вычисления PSD, и мы покажем несколько примеров, как это можно сделать и визуализировать с использованием Matplotlib.",
      "meta": {
        "title": "Руководство по построению графика PSD с использованием Matplotlib",
        "description": "Изучите, как построить график плотности мощностного спектра с использованием Matplotlib в Python, полезного инструмента для обработки сигналов.",
        "keywords": "matplotlib, плотность мощностного спектра, python, psd, обработка сигналов"
      },
      "details": {
        "steps": [
          {
            "title": "Построить базовый график PSD",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "В настоящий момент эта стадия не имеет проверки",
                "file": "verify1-1.sh",
                "hint": "В настоящий момент эта стадия не имеет проверки"
              }
            ]
          },
          {
            "title": "Сравнить с эквивалентным кодом на MATLAB",
            "text": "ru/step2.md",
            "verify": [
              {
                "name": "В настоящий момент эта стадия не имеет проверки",
                "file": "verify2-1.sh",
                "hint": "В настоящий момент эта стадия не имеет проверки"
              }
            ]
          },
          {
            "title": "Построить график PSD с разным количеством дополнения",
            "text": "ru/step3.md",
            "verify": [
              {
                "name": "В настоящий момент эта стадия не имеет проверки",
                "file": "verify3-1.sh",
                "hint": "В настоящий момент эта стадия не имеет проверки"
              }
            ]
          },
          {
            "title": "Построить график PSD комплексного сигнала",
            "text": "ru/step4.md",
            "verify": [
              {
                "name": "В настоящий момент эта стадия не имеет проверки",
                "file": "verify4-1.sh",
                "hint": "В настоящий момент эта стадия не имеет проверки"
              }
            ]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    },
    {
      "lang": "ko",
      "title": "Matplotlib PSD 플로팅",
      "description": "이 튜토리얼은 Python 의 Matplotlib 라이브러리를 사용하여 전력 스펙트럼 밀도 (PSD, Power Spectral Density) 를 플롯하는 과정을 안내합니다. PSD 는 신호 처리 분야에서 일반적으로 사용되는 플롯입니다. NumPy 는 PSD 를 계산하기 위한 많은 유용한 라이브러리를 가지고 있으며, Matplotlib 을 사용하여 이를 수행하고 시각화하는 몇 가지 예시를 보여드리겠습니다.",
      "meta": {
        "title": "Matplotlib PSD 플로팅 튜토리얼 - 파이썬 PSD 시각화 방법",
        "description": "파이썬 Matplotlib 을 사용하여 전력 스펙트럼 밀도 (PSD) 를 플롯하는 방법을 배우세요. 신호 처리에 유용한 도구입니다. PSD 플롯, Matplotlib 사용법, 파이썬 신호 처리",
        "keywords": "matplotlib, 전력 스펙트럼 밀도, 파이썬, psd, 신호 처리, PSD 플롯, Matplotlib 튜토리얼"
      },
      "details": {
        "steps": [
          {
            "title": "기본 PSD 플롯",
            "text": "ko/step1.md",
            "verify": [
              {
                "name": "현재 이 단계에는 검증이 없습니다.",
                "file": "verify1-1.sh",
                "hint": "현재 이 단계에는 검증이 없습니다."
              }
            ]
          },
          {
            "title": "MATLAB 코드 비교",
            "text": "ko/step2.md",
            "verify": [
              {
                "name": "현재 이 단계에는 검증이 없습니다.",
                "file": "verify2-1.sh",
                "hint": "현재 이 단계에는 검증이 없습니다."
              }
            ]
          },
          {
            "title": "패딩량별 PSD 플롯",
            "text": "ko/step3.md",
            "verify": [
              {
                "name": "현재 이 단계에는 검증이 없습니다.",
                "file": "verify3-1.sh",
                "hint": "현재 이 단계에는 검증이 없습니다."
              }
            ]
          },
          {
            "title": "복소 신호 PSD 플롯",
            "text": "ko/step4.md",
            "verify": [
              {
                "name": "현재 이 단계에는 검증이 없습니다.",
                "file": "verify4-1.sh",
                "hint": "현재 이 단계에는 검증이 없습니다."
              }
            ]
          }
        ],
        "intro": {
          "text": "ko/intro.md",
          "title": "소개"
        },
        "finish": {
          "text": "ko/finish.md",
          "title": "요약"
        }
      }
    },
    {
      "lang": "pt",
      "title": "Plotagem de PSD com Matplotlib",
      "description": "Este tutorial irá guiá-lo pelo processo de plotagem da Densidade Espectral de Potência (PSD - Power Spectral Density) usando a biblioteca Matplotlib em Python. A PSD é um gráfico comumente usado no campo do processamento de sinais. NumPy possui muitas bibliotecas úteis para calcular uma PSD, e mostraremos alguns exemplos de como isso pode ser realizado e visualizado com Matplotlib.",
      "meta": {
        "title": "Tutorial de Plotagem de PSD com Matplotlib",
        "description": "Aprenda a plotar a Densidade Espectral de Potência usando Matplotlib em Python, uma ferramenta útil para processamento de sinais. #PSD #Matplotlib #Python",
        "keywords": "matplotlib, densidade espectral de potência, python, psd, processamento de sinais, análise espectral, TDK"
      },
      "details": {
        "steps": [
          {
            "title": "Plotar uma PSD básica",
            "text": "pt/step1.md",
            "verify": [
              {
                "name": "Este passo não possui verificação no momento",
                "file": "verify1-1.sh",
                "hint": "Este passo não possui verificação no momento"
              }
            ]
          },
          {
            "title": "Comparar com código MATLAB equivalente",
            "text": "pt/step2.md",
            "verify": [
              {
                "name": "Este passo não possui verificação no momento",
                "file": "verify2-1.sh",
                "hint": "Este passo não possui verificação no momento"
              }
            ]
          },
          {
            "title": "Plotar PSD com diferentes quantidades de padding",
            "text": "pt/step3.md",
            "verify": [
              {
                "name": "Este passo não possui verificação no momento",
                "file": "verify3-1.sh",
                "hint": "Este passo não possui verificação no momento"
              }
            ]
          },
          {
            "title": "Plotar PSD de um sinal complexo",
            "text": "pt/step4.md",
            "verify": [
              {
                "name": "Este passo não possui verificação no momento",
                "file": "verify4-1.sh",
                "hint": "Este passo não possui verificação no momento"
              }
            ]
          }
        ],
        "intro": {
          "text": "pt/intro.md",
          "title": "Introdução"
        },
        "finish": {
          "text": "pt/finish.md",
          "title": "Resumo"
        }
      }
    }
  ]
}
