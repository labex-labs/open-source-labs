{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Matplotlib Fill Betweenx",
  "description": "Matplotlib is a data visualization library in Python. It provides a wide variety of tools to create complex and customizable plots, charts, and graphs. One of the most useful tools provided by Matplotlib is the fill_betweenx function. This function is used to fill the area between two horizontal curves. In this tutorial, we will explore the fill_betweenx function and learn how to use it to create different types of plots.",
  "meta": {
    "title": "Matplotlib Fill Betweenx",
    "description": "Learn how to use Matplotlib's fill_betweenx function to create customizable plots and visualize data effectively.",
    "keywords": "matplotlib, python, data visualization, fill betweenx, plotting"
  },
  "difficulty": "Beginner",
  "time": 20,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Plotting Simple Fill Betweenx",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "This step has no verification at the moment",
            "file": "verify1-1.sh",
            "hint": "This step has no verification at the moment"
          }
        ],
        "skills": []
      },
      {
        "title": "Creating Multiple Subplots",
        "text": "en/step2.md",
        "verify": [
          {
            "name": "This step has no verification at the moment",
            "file": "verify2-1.sh",
            "hint": "This step has no verification at the moment"
          }
        ],
        "skills": []
      },
      {
        "title": "Using Logical Conditions",
        "text": "en/step3.md",
        "verify": [
          {
            "name": "This step has no verification at the moment",
            "file": "verify3-1.sh",
            "hint": "This step has no verification at the moment"
          }
        ],
        "skills": []
      },
      {
        "title": "Using Masked Arrays",
        "text": "en/step4.md",
        "verify": [
          {
            "name": "This step has no verification at the moment",
            "file": "verify4-1.sh",
            "hint": "This step has no verification at the moment"
          }
        ],
        "skills": []
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    },
    "assets": {
      "host01": [
        {
          "file": "fill-betweenx-demo.ipynb",
          "target": "/home/labex/project",
          "chmod": "ugo+rwx"
        }
      ]
    }
  },
  "backend": {
    "imageid": "jupyter-ubuntu:2204"
  },
  "contributors": ["huduo0812"],
  "license": {
    "name": "BSD 3-Clause",
    "url": "https://github.com/matplotlib/matplotlib/tree/main/LICENSE",
    "repo": "https://github.com/matplotlib/matplotlib"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "Matplotlib 填充两条水平曲线之间的区域",
      "description": "Matplotlib 是 Python 中的一个数据可视化库。它提供了各种各样的工具来创建复杂且可定制的图表、图形。Matplotlib 提供的最有用的工具之一是 fill_betweenx 函数。此函数用于填充两条水平曲线之间的区域。在本教程中，我们将探索 fill_betweenx 函数，并学习如何使用它来创建不同类型的图表。",
      "meta": {
        "title": "Matplotlib 填充两条水平曲线之间的区域",
        "description": "学习如何使用 Matplotlib 的 fill_betweenx 函数来创建可定制的图表并有效地可视化数据。",
        "keywords": "Matplotlib, Python, 数据可视化，填充两条水平曲线之间的区域，绘图"
      },
      "details": {
        "steps": [
          {
            "title": "绘制简单的两条水平曲线之间的填充区域",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "此步骤目前没有验证",
                "file": "verify1-1.sh",
                "hint": "此步骤目前没有验证"
              }
            ]
          },
          {
            "title": "创建多个子图",
            "text": "zh/step2.md",
            "verify": [
              {
                "name": "此步骤目前没有验证",
                "file": "verify2-1.sh",
                "hint": "此步骤目前没有验证"
              }
            ]
          },
          {
            "title": "使用逻辑条件",
            "text": "zh/step3.md",
            "verify": [
              {
                "name": "此步骤目前没有验证",
                "file": "verify3-1.sh",
                "hint": "此步骤目前没有验证"
              }
            ]
          },
          {
            "title": "使用掩码数组",
            "text": "zh/step4.md",
            "verify": [
              {
                "name": "此步骤目前没有验证",
                "file": "verify4-1.sh",
                "hint": "此步骤目前没有验证"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Matplotlib Rellenar entrex",
      "description": "Matplotlib es una biblioteca de visualización de datos en Python. Proporciona una amplia variedad de herramientas para crear gráficos, diagramas y gráficas complejas y personalizables. Una de las herramientas más útiles proporcionadas por Matplotlib es la función fill_betweenx. Esta función se utiliza para rellenar el área entre dos curvas horizontales. En este tutorial, exploraremos la función fill_betweenx y aprenderemos cómo utilizarla para crear diferentes tipos de gráficos.",
      "meta": {
        "title": "Matplotlib Rellenar entrex",
        "description": "Aprende cómo utilizar la función fill_betweenx de Matplotlib para crear gráficos personalizables y visualizar datos de manera efectiva.",
        "keywords": "matplotlib, python, visualización de datos, rellenar entrex, trazado"
      },
      "details": {
        "steps": [
          {
            "title": "Trazar un relleno simple entrex",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "En este momento, este paso no tiene verificaciones",
                "file": "verify1-1.sh",
                "hint": "En este momento, este paso no tiene verificaciones"
              }
            ]
          },
          {
            "title": "Creando múltiples subtramas",
            "text": "es/step2.md",
            "verify": [
              {
                "name": "En este momento, este paso no tiene verificaciones",
                "file": "verify2-1.sh",
                "hint": "En este momento, este paso no tiene verificaciones"
              }
            ]
          },
          {
            "title": "Usando condiciones lógicas",
            "text": "es/step3.md",
            "verify": [
              {
                "name": "En este momento, este paso no tiene verificaciones",
                "file": "verify3-1.sh",
                "hint": "En este momento, este paso no tiene verificaciones"
              }
            ]
          },
          {
            "title": "Usando matrices con máscara",
            "text": "es/step4.md",
            "verify": [
              {
                "name": "En este momento, este paso no tiene verificaciones",
                "file": "verify4-1.sh",
                "hint": "En este momento, este paso no tiene verificaciones"
              }
            ]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Matplotlib Fill Betweenx",
      "description": "Matplotlib est une bibliothèque de visualisation de données en Python. Elle fournit une large variété d'outils pour créer des tracés, des graphiques et des diagrammes complexes et personnalisables. L'un des outils les plus utiles fournis par Matplotlib est la fonction fill_betweenx. Cette fonction est utilisée pour remplir la zone entre deux courbes horizontales. Dans ce tutoriel, nous explorerons la fonction fill_betweenx et apprendrons à l'utiliser pour créer différents types de tracés.",
      "meta": {
        "title": "Matplotlib Fill Betweenx",
        "description": "Découvrez comment utiliser la fonction fill_betweenx de Matplotlib pour créer des tracés personnalisables et visualiser efficacement vos données.",
        "keywords": "matplotlib, python, visualisation de données, fill betweenx, tracé"
      },
      "details": {
        "steps": [
          {
            "title": "Tracé simple avec fill_betweenx",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Cette étape n'a pas de vérification pour le moment",
                "file": "verify1-1.sh",
                "hint": "Cette étape n'a pas de vérification pour le moment"
              }
            ]
          },
          {
            "title": "Création de multiples sous-graphiques",
            "text": "fr/step2.md",
            "verify": [
              {
                "name": "Cette étape n'a pas de vérification pour le moment",
                "file": "verify2-1.sh",
                "hint": "Cette étape n'a pas de vérification pour le moment"
              }
            ]
          },
          {
            "title": "Utilisation de conditions logiques",
            "text": "fr/step3.md",
            "verify": [
              {
                "name": "Cette étape n'a pas de vérification pour le moment",
                "file": "verify3-1.sh",
                "hint": "Cette étape n'a pas de vérification pour le moment"
              }
            ]
          },
          {
            "title": "Utilisation d'arrays masqués",
            "text": "fr/step4.md",
            "verify": [
              {
                "name": "Cette étape n'a pas de vérification pour le moment",
                "file": "verify4-1.sh",
                "hint": "Cette étape n'a pas de vérification pour le moment"
              }
            ]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Matplotlib Fill Betweenx",
      "description": "Matplotlib ist eine Datenvisualisierungsbibliothek in Python. Es bietet eine Vielzahl von Tools, um komplexe und anpassbare Plots, Diagramme und Graphen zu erstellen. Eine der nützlichsten Tools, die Matplotlib bietet, ist die fill_betweenx-Funktion. Diese Funktion wird verwendet, um den Bereich zwischen zwei horizontalen Kurven zu füllen. In diesem Tutorial werden wir die fill_betweenx-Funktion untersuchen und lernen, wie sie verwendet wird, um verschiedene Arten von Plots zu erstellen.",
      "meta": {
        "title": "Matplotlib Fill Betweenx",
        "description": "Lernen Sie, wie Sie die fill_betweenx-Funktion von Matplotlib verwenden, um anpassbare Plots zu erstellen und Daten effektiv zu visualisieren.",
        "keywords": "matplotlib, python, Datenvisualisierung, fill betweenx, Plotten"
      },
      "details": {
        "steps": [
          {
            "title": "Plotten eines einfachen Fill Betweenx",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Dieser Schritt hat momentan keine Verifizierung",
                "file": "verify1-1.sh",
                "hint": "Dieser Schritt hat momentan keine Verifizierung"
              }
            ]
          },
          {
            "title": "Erstellen mehrerer Teilplots",
            "text": "de/step2.md",
            "verify": [
              {
                "name": "Dieser Schritt hat momentan keine Verifizierung",
                "file": "verify2-1.sh",
                "hint": "Dieser Schritt hat momentan keine Verifizierung"
              }
            ]
          },
          {
            "title": "Verwenden von logischen Bedingungen",
            "text": "de/step3.md",
            "verify": [
              {
                "name": "Dieser Schritt hat momentan keine Verifizierung",
                "file": "verify3-1.sh",
                "hint": "Dieser Schritt hat momentan keine Verifizierung"
              }
            ]
          },
          {
            "title": "Verwendung maskierter Arrays",
            "text": "de/step4.md",
            "verify": [
              {
                "name": "Dieser Schritt hat momentan keine Verifizierung",
                "file": "verify4-1.sh",
                "hint": "Dieser Schritt hat momentan keine Verifizierung"
              }
            ]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "Matplotlib の fill_betweenx",
      "description": "Matplotlib は Python のデータ可視化ライブラリです。複雑でカスタマイズ可能なプロット、チャート、グラフを作成するための幅広いツールを提供します。Matplotlib が提供する最も便利なツールの 1 つが fill_betweenx 関数です。この関数は 2 つの水平曲線の間の領域を塗りつぶすために使用されます。このチュートリアルでは、fill_betweenx 関数を調べ、それを使って異なる種類のプロットを作成する方法を学びます。",
      "meta": {
        "title": "Matplotlib の fill_betweenx",
        "description": "Matplotlib の fill_betweenx 関数を使ってカスタマイズ可能なプロットを作成し、データを効果的に可視化する方法を学びましょう。",
        "keywords": "matplotlib, python, データ可視化，fill betweenx, プロット作成"
      },
      "details": {
        "steps": [
          {
            "title": "シンプルな fill_betweenx のプロット作成",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "このステップでは現在検証はありません",
                "file": "verify1-1.sh",
                "hint": "このステップでは現在検証はありません"
              }
            ]
          },
          {
            "title": "複数のサブプロットの作成",
            "text": "ja/step2.md",
            "verify": [
              {
                "name": "このステップでは現在検証はありません",
                "file": "verify2-1.sh",
                "hint": "このステップでは現在検証はありません"
              }
            ]
          },
          {
            "title": "論理条件の使用",
            "text": "ja/step3.md",
            "verify": [
              {
                "name": "このステップでは現在検証はありません",
                "file": "verify3-1.sh",
                "hint": "このステップでは現在検証はありません"
              }
            ]
          },
          {
            "title": "マスク付き配列の使用",
            "text": "ja/step4.md",
            "verify": [
              {
                "name": "このステップでは現在検証はありません",
                "file": "verify4-1.sh",
                "hint": "このステップでは現在検証はありません"
              }
            ]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Matplotlib Fill Betweenx",
      "description": "Matplotlib - это библиотека визуализации данных на Python. Она предоставляет широкий спектр инструментов для создания сложных и настраиваемых графиков, диаграмм и карт. Одним из наиболее полезных инструментов, предоставляемых Matplotlib, является функция fill_betweenx. Эта функция используется для заполнения области между двумя горизонтальными кривыми. В этом уроке мы исследуем функцию fill_betweenx и узнаем, как ее использовать для создания различных типов графиков.",
      "meta": {
        "title": "Matplotlib Fill Betweenx",
        "description": "Изучите, как использовать функцию fill_betweenx Matplotlib для создания настраиваемых графиков и эффективной визуализации данных.",
        "keywords": "matplotlib, python, визуализация данных, fill betweenx, построение графика"
      },
      "details": {
        "steps": [
          {
            "title": "Построение простой области между кривыми с использованием fill_betweenx",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "На данный момент эта стадия не имеет проверки",
                "file": "verify1-1.sh",
                "hint": "На данный момент эта стадия не имеет проверки"
              }
            ]
          },
          {
            "title": "Создание нескольких подграфиков",
            "text": "ru/step2.md",
            "verify": [
              {
                "name": "На данный момент эта стадия не имеет проверки",
                "file": "verify2-1.sh",
                "hint": "На данный момент эта стадия не имеет проверки"
              }
            ]
          },
          {
            "title": "Использование логических условий",
            "text": "ru/step3.md",
            "verify": [
              {
                "name": "На данный момент эта стадия не имеет проверки",
                "file": "verify3-1.sh",
                "hint": "На данный момент эта стадия не имеет проверки"
              }
            ]
          },
          {
            "title": "Использование замаскированных массивов",
            "text": "ru/step4.md",
            "verify": [
              {
                "name": "На данный момент эта стадия не имеет проверки",
                "file": "verify4-1.sh",
                "hint": "На данный момент эта стадия не имеет проверки"
              }
            ]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    },
    {
      "lang": "ko",
      "title": "Matplotlib fill_betweenx",
      "description": "Matplotlib 는 Python 의 데이터 시각화 라이브러리입니다. 복잡하고 사용자 정의 가능한 플롯, 차트 및 그래프를 생성하기 위한 다양한 도구를 제공합니다. Matplotlib 에서 제공하는 가장 유용한 도구 중 하나는 fill_betweenx 함수입니다. 이 함수는 두 개의 수평 곡선 사이의 영역을 채우는 데 사용됩니다. 이 튜토리얼에서는 fill_betweenx 함수를 살펴보고 이를 사용하여 다양한 유형의 플롯을 만드는 방법을 배웁니다.",
      "meta": {
        "title": "Matplotlib fill_betweenx 사용법: 데이터 시각화 튜토리얼",
        "description": "Matplotlib 의 fill_betweenx 함수를 사용하여 사용자 정의 가능한 플롯을 만들고 데이터를 효과적으로 시각화하는 방법을 알아보세요. Python 데이터 시각화 팁.",
        "keywords": "matplotlib, 파이썬, 데이터 시각화, fill betweenx, 플로팅, 그래프, 차트, Matplotlib 튜토리얼"
      },
      "details": {
        "steps": [
          {
            "title": "간단한 fill_betweenx 플롯 그리기",
            "text": "ko/step1.md",
            "verify": [
              {
                "name": "현재 이 단계에는 검증이 없습니다.",
                "file": "verify1-1.sh",
                "hint": "현재 이 단계에는 검증이 없습니다."
              }
            ]
          },
          {
            "title": "여러 개의 서브플롯 생성하기",
            "text": "ko/step2.md",
            "verify": [
              {
                "name": "현재 이 단계에는 검증이 없습니다.",
                "file": "verify2-1.sh",
                "hint": "현재 이 단계에는 검증이 없습니다."
              }
            ]
          },
          {
            "title": "논리 조건 사용하기",
            "text": "ko/step3.md",
            "verify": [
              {
                "name": "현재 이 단계에는 검증이 없습니다.",
                "file": "verify3-1.sh",
                "hint": "현재 이 단계에는 검증이 없습니다."
              }
            ]
          },
          {
            "title": "마스크 배열 사용하기",
            "text": "ko/step4.md",
            "verify": [
              {
                "name": "현재 이 단계에는 검증이 없습니다.",
                "file": "verify4-1.sh",
                "hint": "현재 이 단계에는 검증이 없습니다."
              }
            ]
          }
        ],
        "intro": {
          "text": "ko/intro.md",
          "title": "소개"
        },
        "finish": {
          "text": "ko/finish.md",
          "title": "요약"
        }
      }
    },
    {
      "lang": "pt",
      "title": "Matplotlib Fill Betweenx",
      "description": "Matplotlib é uma biblioteca de visualização de dados em Python. Ela oferece uma ampla variedade de ferramentas para criar gráficos, diagramas e plots complexos e personalizáveis. Uma das ferramentas mais úteis fornecidas pelo Matplotlib é a função fill_betweenx. Esta função é usada para preencher a área entre duas curvas horizontais. Neste tutorial, exploraremos a função fill_betweenx e aprenderemos como usá-la para criar diferentes tipos de gráficos.",
      "meta": {
        "title": "Matplotlib Fill Betweenx: Tutorial e Exemplos em Python",
        "description": "Aprenda a usar a função fill_betweenx do Matplotlib para criar gráficos personalizáveis e visualizar dados de forma eficaz. Tutorial completo com exemplos em Python para análise de dados.",
        "keywords": "matplotlib, python, visualização de dados, fill betweenx, plotagem, gráficos em python, tutorial matplotlib, análise de dados python"
      },
      "details": {
        "steps": [
          {
            "title": "Plotando um Fill Betweenx Simples",
            "text": "pt/step1.md",
            "verify": [
              {
                "name": "Este passo não possui verificação no momento",
                "file": "verify1-1.sh",
                "hint": "Este passo não possui verificação no momento"
              }
            ]
          },
          {
            "title": "Criando Múltiplos Subplots",
            "text": "pt/step2.md",
            "verify": [
              {
                "name": "Este passo não possui verificação no momento",
                "file": "verify2-1.sh",
                "hint": "Este passo não possui verificação no momento"
              }
            ]
          },
          {
            "title": "Usando Condições Lógicas",
            "text": "pt/step3.md",
            "verify": [
              {
                "name": "Este passo não possui verificação no momento",
                "file": "verify3-1.sh",
                "hint": "Este passo não possui verificação no momento"
              }
            ]
          },
          {
            "title": "Usando Arrays Mascarados",
            "text": "pt/step4.md",
            "verify": [
              {
                "name": "Este passo não possui verificação no momento",
                "file": "verify4-1.sh",
                "hint": "Este passo não possui verificação no momento"
              }
            ]
          }
        ],
        "intro": {
          "text": "pt/intro.md",
          "title": "Introdução"
        },
        "finish": {
          "text": "pt/finish.md",
          "title": "Resumo"
        }
      }
    }
  ]
}
