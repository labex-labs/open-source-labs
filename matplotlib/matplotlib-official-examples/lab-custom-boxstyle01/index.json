{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Custom Box Styles in Matplotlib",
  "description": "Matplotlib is a plotting library for the Python programming language and its numerical mathematics extension NumPy. One of the features of Matplotlib is the ability to create customized box styles.",
  "meta": {
    "title": "Matplotlib | Custom Box Styles | Python Tutorials",
    "description": "Learn how to implement custom box styles in Matplotlib, a popular Python plotting library. Discover how to create custom box styles as functions and classes, and register them with Matplotlib.",
    "keywords": "Matplotlib, Python, Custom Box Styles, Plotting, Data Visualization"
  },
  "difficulty": "Beginner",
  "time": 20,
  "hidden": true,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Implement a custom box style as a function",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "This step has no verification at the moment",
            "file": "verify1-1.sh",
            "hint": "This step has no verification at the moment"
          }
        ],
        "skills": [
          "matplotlib/figures_axes",
          "matplotlib/importing_matplotlib",
          "python/booleans",
          "python/build_in_functions",
          "python/comments",
          "python/data_collections",
          "python/data_visualization",
          "python/function_definition",
          "python/importing_modules",
          "python/lists",
          "python/numeric_types",
          "python/tuples",
          "python/using_packages",
          "python/variables_data_types",
          "python/with_statement"
        ]
      },
      {
        "title": "Implement a custom box style as a class",
        "text": "en/step2.md",
        "verify": [
          {
            "name": "This step has no verification at the moment",
            "file": "verify2-1.sh",
            "hint": "This step has no verification at the moment"
          }
        ],
        "skills": [
          "python/booleans",
          "python/build_in_functions",
          "python/classes_objects",
          "python/comments",
          "python/constructor",
          "python/data_collections",
          "python/default_arguments",
          "python/encapsulation",
          "python/for_loops",
          "python/function_definition",
          "python/lists",
          "python/numeric_types",
          "python/polymorphism",
          "python/tuples",
          "python/variables_data_types",
          "python/with_statement"
        ]
      },
      {
        "title": "Register the custom box style with Matplotlib",
        "text": "en/step3.md",
        "verify": [
          {
            "name": "This step has no verification at the moment",
            "file": "verify3-1.sh",
            "hint": "This step has no verification at the moment"
          }
        ],
        "skills": ["python/comments", "python/lists"]
      },
      {
        "title": "Use the custom box style",
        "text": "en/step4.md",
        "verify": [
          {
            "name": "This step has no verification at the moment",
            "file": "verify4-1.sh",
            "hint": "This step has no verification at the moment"
          }
        ],
        "skills": [
          "python/build_in_functions",
          "python/data_collections",
          "python/tuples",
          "python/variables_data_types"
        ]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    },
    "assets": {
      "host01": [
        {
          "file": "custom-boxstyle01.ipynb",
          "target": "/home/labex/project",
          "chmod": "ugo+rwx"
        }
      ]
    }
  },
  "backend": {
    "imageid": "jupyter-ubuntu:2204"
  },
  "contributors": ["huduo0812"],
  "license": {
    "name": "BSD 3-Clause",
    "url": "https://github.com/matplotlib/matplotlib/tree/main/LICENSE",
    "repo": "https://github.com/matplotlib/matplotlib"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "Matplotlib 中的自定义框样式",
      "description": "Matplotlib 是用于 Python 编程语言及其数值数学扩展 NumPy 的绘图库。Matplotlib 的功能之一是能够创建自定义框样式。",
      "meta": {
        "title": "Matplotlib | 自定义框样式 | Python 教程",
        "description": "学习如何在流行的 Python 绘图库 Matplotlib 中实现自定义框样式。了解如何将自定义框样式创建为函数和类，并向 Matplotlib 注册它们。",
        "keywords": "Matplotlib, Python, 自定义框样式，绘图，数据可视化"
      },
      "details": {
        "steps": [
          {
            "title": "将自定义框样式实现为函数",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "此步骤目前没有验证",
                "file": "verify1-1.sh",
                "hint": "此步骤目前没有验证"
              }
            ]
          },
          {
            "title": "将自定义框样式实现为一个类",
            "text": "zh/step2.md",
            "verify": [
              {
                "name": "此步骤目前没有验证",
                "file": "verify2-1.sh",
                "hint": "此步骤目前没有验证"
              }
            ]
          },
          {
            "title": "向 Matplotlib 注册自定义框样式",
            "text": "zh/step3.md",
            "verify": [
              {
                "name": "此步骤目前没有验证",
                "file": "verify3-1.sh",
                "hint": "此步骤目前没有验证"
              }
            ]
          },
          {
            "title": "使用自定义框样式",
            "text": "zh/step4.md",
            "verify": [
              {
                "name": "此步骤目前没有验证",
                "file": "verify4-1.sh",
                "hint": "此步骤目前没有验证"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Estilos de caja personalizados en Matplotlib",
      "description": "Matplotlib es una biblioteca de trazado para el lenguaje de programación Python y su extensión matemática numérica NumPy. Una de las características de Matplotlib es la capacidad de crear estilos de caja personalizados.",
      "meta": {
        "title": "Matplotlib | Estilos de caja personalizados | Tutoriales de Python",
        "description": "Aprenda cómo implementar estilos de caja personalizados en Matplotlib, una popular biblioteca de trazado de Python. Descubra cómo crear estilos de caja personalizados como funciones y clases, y registrarlos con Matplotlib.",
        "keywords": "Matplotlib, Python, Estilos de caja personalizados, Trazado, Visualización de datos"
      },
      "details": {
        "steps": [
          {
            "title": "Implementar un estilo de caja personalizado como una función",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Este paso no tiene verificación en este momento",
                "file": "verify1-1.sh",
                "hint": "Este paso no tiene verificación en este momento"
              }
            ]
          },
          {
            "title": "Implementar un estilo de caja personalizado como una clase",
            "text": "es/step2.md",
            "verify": [
              {
                "name": "Este paso no tiene verificación en este momento",
                "file": "verify2-1.sh",
                "hint": "Este paso no tiene verificación en este momento"
              }
            ]
          },
          {
            "title": "Registrar el estilo de caja personalizado con Matplotlib",
            "text": "es/step3.md",
            "verify": [
              {
                "name": "Este paso no tiene verificación en este momento",
                "file": "verify3-1.sh",
                "hint": "Este paso no tiene verificación en este momento"
              }
            ]
          },
          {
            "title": "Usar el estilo de caja personalizado",
            "text": "es/step4.md",
            "verify": [
              {
                "name": "Este paso no tiene verificación en este momento",
                "file": "verify4-1.sh",
                "hint": "Este paso no tiene verificación en este momento"
              }
            ]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Styles de boîte personnalisés dans Matplotlib",
      "description": "Matplotlib est une bibliothèque de tracé pour le langage de programmation Python et son extension NumPy pour les mathématiques numériques. L'une des fonctionnalités de Matplotlib est la capacité de créer des styles de boîte personnalisés.",
      "meta": {
        "title": "Matplotlib | Styles de boîte personnalisés | Didacticiels Python",
        "description": "Découvrez comment implémenter des styles de boîte personnalisés dans Matplotlib, une bibliothèque de tracé Python populaire. Apprenez à créer des styles de boîte personnalisés sous forme de fonctions et de classes, et à les enregistrer avec Matplotlib.",
        "keywords": "Matplotlib, Python, Styles de boîte personnalisés, Tracé, Visualisation de données"
      },
      "details": {
        "steps": [
          {
            "title": "Implémenter un style de boîte personnalisé sous forme de fonction",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Cette étape n'a pas de vérification pour le moment",
                "file": "verify1-1.sh",
                "hint": "Cette étape n'a pas de vérification pour le moment"
              }
            ]
          },
          {
            "title": "Implémenter un style de boîte personnalisé sous forme de classe",
            "text": "fr/step2.md",
            "verify": [
              {
                "name": "Cette étape n'a pas de vérification pour le moment",
                "file": "verify2-1.sh",
                "hint": "Cette étape n'a pas de vérification pour le moment"
              }
            ]
          },
          {
            "title": "Enregistrer le style de boîte personnalisé avec Matplotlib",
            "text": "fr/step3.md",
            "verify": [
              {
                "name": "Cette étape n'a pas de vérification pour le moment",
                "file": "verify3-1.sh",
                "hint": "Cette étape n'a pas de vérification pour le moment"
              }
            ]
          },
          {
            "title": "Utiliser le style de boîte personnalisé",
            "text": "fr/step4.md",
            "verify": [
              {
                "name": "Cette étape n'a pas de vérification pour le moment",
                "file": "verify4-1.sh",
                "hint": "Cette étape n'a pas de vérification pour le moment"
              }
            ]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Benutzerdefinierte Box-Stile in Matplotlib",
      "description": "Matplotlib ist eine Diagrammbibliothek für die Python-Programmiersprache und ihre Erweiterung für numerische Mathematik, NumPy. Eine der Eigenschaften von Matplotlib ist die Fähigkeit, benutzerdefinierte Box-Stile zu erstellen.",
      "meta": {
        "title": "Matplotlib | Benutzerdefinierte Box-Stile | Python-Tutorials",
        "description": "Lernen Sie, wie Sie benutzerdefinierte Box-Stile in Matplotlib, einer beliebten Python-Diagrammbibliothek, implementieren. Entdecken Sie, wie Sie benutzerdefinierte Box-Stile als Funktionen und Klassen erstellen und sie bei Matplotlib registrieren.",
        "keywords": "Matplotlib, Python, Benutzerdefinierte Box-Stile, Diagrammierung, Datenvisualisierung"
      },
      "details": {
        "steps": [
          {
            "title": "Implementiere einen benutzerdefinierten Box-Stil als Funktion",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Dieser Schritt hat momentan keine Verifizierung",
                "file": "verify1-1.sh",
                "hint": "Dieser Schritt hat momentan keine Verifizierung"
              }
            ]
          },
          {
            "title": "Implementiere einen benutzerdefinierten Box-Stil als Klasse",
            "text": "de/step2.md",
            "verify": [
              {
                "name": "Dieser Schritt hat momentan keine Verifizierung",
                "file": "verify2-1.sh",
                "hint": "Dieser Schritt hat momentan keine Verifizierung"
              }
            ]
          },
          {
            "title": "Registriere den benutzerdefinierten Box-Stil bei Matplotlib",
            "text": "de/step3.md",
            "verify": [
              {
                "name": "Dieser Schritt hat momentan keine Verifizierung",
                "file": "verify3-1.sh",
                "hint": "Dieser Schritt hat momentan keine Verifizierung"
              }
            ]
          },
          {
            "title": "Verwende den benutzerdefinierten Box-Stil",
            "text": "de/step4.md",
            "verify": [
              {
                "name": "Dieser Schritt hat momentan keine Verifizierung",
                "file": "verify4-1.sh",
                "hint": "Dieser Schritt hat momentan keine Verifizierung"
              }
            ]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "Matplotlib におけるカスタムボックススタイル",
      "description": "Matplotlib は、Python プログラミング言語とその数値数学拡張 NumPy 用のグラフ描画ライブラリです。Matplotlib の特徴の 1 つは、カスタマイズされたボックススタイルを作成できることです。",
      "meta": {
        "title": "Matplotlib | カスタムボックススタイル | Python チュートリアル",
        "description": "人気のある Python グラフ描画ライブラリである Matplotlib でカスタムボックススタイルを実装する方法を学びましょう。関数やクラスとしてカスタムボックススタイルを作成し、Matplotlib に登録する方法を見つけましょう。",
        "keywords": "Matplotlib, Python, カスタムボックススタイル，グラフ描画，データ可視化"
      },
      "details": {
        "steps": [
          {
            "title": "関数としてカスタムボックススタイルを実装する",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "このステップでは現在検証はありません",
                "file": "verify1-1.sh",
                "hint": "このステップでは現在検証はありません"
              }
            ]
          },
          {
            "title": "クラスとしてカスタムボックススタイルを実装する",
            "text": "ja/step2.md",
            "verify": [
              {
                "name": "このステップでは現在検証はありません",
                "file": "verify2-1.sh",
                "hint": "このステップでは現在検証はありません"
              }
            ]
          },
          {
            "title": "Matplotlib にカスタムボックススタイルを登録する",
            "text": "ja/step3.md",
            "verify": [
              {
                "name": "このステップでは現在検証はありません",
                "file": "verify3-1.sh",
                "hint": "このステップでは現在検証はありません"
              }
            ]
          },
          {
            "title": "カスタムボックススタイルを使用する",
            "text": "ja/step4.md",
            "verify": [
              {
                "name": "このステップでは現在検証はありません",
                "file": "verify4-1.sh",
                "hint": "このステップでは現在検証はありません"
              }
            ]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Пользовательские стили рамок в Matplotlib",
      "description": "Matplotlib - это библиотека для построения графиков для языка программирования Python и его расширения для численных математических вычислений NumPy. Одной из особенностей Matplotlib является возможность создания пользовательских стилей рамок.",
      "meta": {
        "title": "Matplotlib | Пользовательские стили рамок | Руководства по Python",
        "description": "Изучите, как реализовать пользовательские стили рамок в Matplotlib, популярной библиотеке для построения графиков на Python. Откройте, как создавать пользовательские стили рамок в виде функций и классов и регистрировать их в Matplotlib.",
        "keywords": "Matplotlib, Python, Пользовательские стили рамок, Построение графиков, Визуализация данных"
      },
      "details": {
        "steps": [
          {
            "title": "Реализовать пользовательский стиль рамки в виде функции",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "На данный момент эта стадия не имеет проверки",
                "file": "verify1-1.sh",
                "hint": "На данный момент эта стадия не имеет проверки"
              }
            ]
          },
          {
            "title": "Реализовать пользовательский стиль рамки в виде класса",
            "text": "ru/step2.md",
            "verify": [
              {
                "name": "На данный момент эта стадия не имеет проверки",
                "file": "verify2-1.sh",
                "hint": "На данный момент эта стадия не имеет проверки"
              }
            ]
          },
          {
            "title": "Зарегистрировать пользовательский стиль рамки в Matplotlib",
            "text": "ru/step3.md",
            "verify": [
              {
                "name": "На данный момент эта стадия не имеет проверки",
                "file": "verify3-1.sh",
                "hint": "На данный момент эта стадия не имеет проверки"
              }
            ]
          },
          {
            "title": "Использовать пользовательский стиль рамки",
            "text": "ru/step4.md",
            "verify": [
              {
                "name": "На данный момент эта стадия не имеет проверки",
                "file": "verify4-1.sh",
                "hint": "На данный момент эта стадия не имеет проверки"
              }
            ]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    },
    {
      "lang": "ko",
      "title": "Matplotlib 사용자 정의 박스 스타일",
      "description": "Matplotlib 는 Python 프로그래밍 언어와 수치 수학 확장 NumPy 를 위한 플로팅 라이브러리입니다. Matplotlib 의 기능 중 하나는 사용자 정의 박스 스타일을 만들 수 있다는 것입니다.",
      "meta": {
        "title": "Matplotlib | 사용자 정의 박스 스타일 | Python 튜토리얼",
        "description": "인기 있는 Python 플로팅 라이브러리인 Matplotlib 에서 사용자 정의 박스 스타일을 구현하는 방법을 알아보세요. 함수와 클래스로 사용자 정의 박스 스타일을 만들고 Matplotlib 에 등록하는 방법을 알아보세요.",
        "keywords": "Matplotlib, Python, 사용자 정의 박스 스타일, 플로팅, 데이터 시각화"
      },
      "details": {
        "steps": [
          {
            "title": "함수로서 사용자 정의 박스 스타일 구현",
            "text": "ko/step1.md",
            "verify": [
              {
                "name": "현재 이 단계에는 검증이 없습니다.",
                "file": "verify1-1.sh",
                "hint": "현재 이 단계에는 검증이 없습니다."
              }
            ]
          },
          {
            "title": "클래스로 사용자 정의 박스 스타일 구현",
            "text": "ko/step2.md",
            "verify": [
              {
                "name": "현재 이 단계에는 검증이 없습니다.",
                "file": "verify2-1.sh",
                "hint": "현재 이 단계에는 검증이 없습니다."
              }
            ]
          },
          {
            "title": "Matplotlib 에 사용자 정의 박스 스타일 등록",
            "text": "ko/step3.md",
            "verify": [
              {
                "name": "현재 이 단계에는 검증이 없습니다.",
                "file": "verify3-1.sh",
                "hint": "현재 이 단계에는 검증이 없습니다."
              }
            ]
          },
          {
            "title": "사용자 정의 박스 스타일 사용",
            "text": "ko/step4.md",
            "verify": [
              {
                "name": "현재 이 단계에는 검증이 없습니다.",
                "file": "verify4-1.sh",
                "hint": "현재 이 단계에는 검증이 없습니다."
              }
            ]
          }
        ],
        "intro": {
          "text": "ko/intro.md",
          "title": "소개"
        },
        "finish": {
          "text": "ko/finish.md",
          "title": "요약"
        }
      }
    },
    {
      "lang": "pt",
      "title": "Estilos de Caixa Personalizados em Matplotlib",
      "description": "Matplotlib é uma biblioteca de plotagem para a linguagem de programação Python e sua extensão de matemática numérica NumPy. Uma das funcionalidades do Matplotlib é a capacidade de criar estilos de caixa personalizados.",
      "meta": {
        "title": "Matplotlib | Estilos de Caixa Personalizados | Tutoriais Python",
        "description": "Aprenda como implementar estilos de caixa personalizados em Matplotlib, uma popular biblioteca de plotagem Python. Descubra como criar estilos de caixa personalizados como funções e classes, e registrá-los no Matplotlib.",
        "keywords": "Matplotlib, Python, Estilos de Caixa Personalizados, Plotagem, Visualização de Dados"
      },
      "details": {
        "steps": [
          {
            "title": "Implementar um estilo de caixa personalizado como uma função",
            "text": "pt/step1.md",
            "verify": [
              {
                "name": "Este passo não possui verificação no momento",
                "file": "verify1-1.sh",
                "hint": "Este passo não possui verificação no momento"
              }
            ]
          },
          {
            "title": "Implementar um estilo de caixa personalizado como uma classe",
            "text": "pt/step2.md",
            "verify": [
              {
                "name": "Este passo não possui verificação no momento",
                "file": "verify2-1.sh",
                "hint": "Este passo não possui verificação no momento"
              }
            ]
          },
          {
            "title": "Registrar o estilo de caixa personalizado com Matplotlib",
            "text": "pt/step3.md",
            "verify": [
              {
                "name": "Este passo não possui verificação no momento",
                "file": "verify3-1.sh",
                "hint": "Este passo não possui verificação no momento"
              }
            ]
          },
          {
            "title": "Usar o estilo de caixa personalizado",
            "text": "pt/step4.md",
            "verify": [
              {
                "name": "Este passo não possui verificação no momento",
                "file": "verify4-1.sh",
                "hint": "Este passo não possui verificação no momento"
              }
            ]
          }
        ],
        "intro": {
          "text": "pt/intro.md",
          "title": "Introdução"
        },
        "finish": {
          "text": "pt/finish.md",
          "title": "Resumo"
        }
      }
    }
  ]
}
