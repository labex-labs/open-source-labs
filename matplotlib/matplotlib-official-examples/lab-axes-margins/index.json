{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Matplotlib Visualization Control in Python",
  "description": "Matplotlib is a data visualization library in Python that is used to create static, animated, and interactive visualizations in Python. It provides an object-oriented API for embedding plots into applications using general-purpose GUI toolkits like Tkinter, wxPython, Qt, or GTK. In this lab, we will learn how to control view limits and sticky edges in Matplotlib using Python.",
  "meta": {
    "title": "Mastering Matplotlib Visualization Control in Python",
    "description": "Learn how to control view limits and sticky edges in Matplotlib, a powerful data visualization library in Python.",
    "keywords": "matplotlib, python, sticky edges, data visualization, view limits"
  },
  "difficulty": "Beginner",
  "time": 10,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Plotting with Margins",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "This step has no verification at the moment",
            "file": "verify1-1.sh",
            "hint": "This step has no verification at the moment"
          }
        ],
        "skills": [
          "matplotlib/figures_axes",
          "matplotlib/importing_matplotlib",
          "matplotlib/line_plots",
          "matplotlib/subplots",
          "python/comments",
          "python/data_visualization",
          "python/function_definition",
          "python/importing_modules",
          "python/numerical_computing",
          "python/tuples",
          "python/with_statement"
        ]
      },
      {
        "title": "Sticky Edges",
        "text": "en/step2.md",
        "verify": [
          {
            "name": "This step has no verification at the moment",
            "file": "verify2-1.sh",
            "hint": "This step has no verification at the moment"
          }
        ],
        "skills": [
          "python/booleans",
          "python/build_in_functions",
          "python/comments",
          "python/for_loops",
          "python/lists",
          "python/sets",
          "python/tuples"
        ]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    },
    "assets": {
      "host01": [
        {
          "file": "axes-margins.ipynb",
          "target": "/home/labex/project",
          "chmod": "ugo+rwx"
        }
      ]
    }
  },
  "backend": {
    "imageid": "jupyter-ubuntu:2204"
  },
  "contributors": ["huduo0812"],
  "license": {
    "name": "BSD 3-Clause",
    "url": "https://github.com/matplotlib/matplotlib/tree/main/LICENSE",
    "repo": "https://github.com/matplotlib/matplotlib"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "Python 中 Matplotlib 的可视化控制",
      "description": "Matplotlib 是 Python 中的一个数据可视化库，用于在 Python 中创建静态、动画和交互式可视化。它提供了一个面向对象的 API，用于使用 Tkinter、wxPython、Qt 或 GTK 等通用 GUI 工具包将绘图嵌入应用程序中。在本实验中，我们将学习如何使用 Python 在 Matplotlib 中控制视图限制和粘性边缘。",
      "meta": {
        "title": "掌握 Python 中 Matplotlib 的可视化控制",
        "description": "学习如何在 Matplotlib 中控制视图限制和粘性边缘，Matplotlib 是 Python 中一个强大的数据可视化库。",
        "keywords": "Matplotlib, Python, 粘性边缘，数据可视化，视图限制"
      },
      "details": {
        "steps": [
          {
            "title": "带边距绘图",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "此步骤目前没有验证",
                "file": "verify1-1.sh",
                "hint": "此步骤目前没有验证"
              }
            ]
          },
          {
            "title": "粘性边缘",
            "text": "zh/step2.md",
            "verify": [
              {
                "name": "此步骤目前没有验证",
                "file": "verify2-1.sh",
                "hint": "此步骤目前没有验证"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Control de visualización con Matplotlib en Python",
      "description": "Matplotlib es una biblioteca de visualización de datos en Python que se utiliza para crear visualizaciones estáticas, animadas e interactivas en Python. Proporciona una API orientada a objetos para incrustar gráficos en aplicaciones utilizando kits de herramientas GUI de uso general como Tkinter, wxPython, Qt o GTK. En este laboratorio, aprenderemos a controlar los límites de vista y los bordes adherentes en Matplotlib utilizando Python.",
      "meta": {
        "title": "Dominando el control de visualización con Matplotlib en Python",
        "description": "Aprende a controlar los límites de vista y los bordes adherentes en Matplotlib, una poderosa biblioteca de visualización de datos en Python.",
        "keywords": "matplotlib, python, bordes adherentes, visualización de datos, límites de vista"
      },
      "details": {
        "steps": [
          {
            "title": "Graficado con márgenes",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Este paso no tiene verificaciones en este momento",
                "file": "verify1-1.sh",
                "hint": "Este paso no tiene verificaciones en este momento"
              }
            ]
          },
          {
            "title": "Bordes adherentes",
            "text": "es/step2.md",
            "verify": [
              {
                "name": "Este paso no tiene verificaciones en este momento",
                "file": "verify2-1.sh",
                "hint": "Este paso no tiene verificaciones en este momento"
              }
            ]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Contrôle de la visualisation avec Matplotlib en Python",
      "description": "Matplotlib est une bibliothèque de visualisation de données en Python qui est utilisée pour créer des visualisations statiques, animées et interactives en Python. Elle fournit une API orientée objet pour intégrer des graphiques dans des applications utilisant des kits de bibliothèques GUI généralistes tels que Tkinter, wxPython, Qt ou GTK. Dans ce laboratoire, nous allons apprendre à contrôler les limites de vue et les bords collants dans Matplotlib à l'aide de Python.",
      "meta": {
        "title": "Maîtriser le contrôle de la visualisation avec Matplotlib en Python",
        "description": "Découvrez comment contrôler les limites de vue et les bords collants dans Matplotlib, une puissante bibliothèque de visualisation de données en Python.",
        "keywords": "matplotlib, python, bords collants, visualisation de données, limites de vue"
      },
      "details": {
        "steps": [
          {
            "title": "Tracé avec des marges",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Cette étape n'a pas de vérification pour le moment",
                "file": "verify1-1.sh",
                "hint": "Cette étape n'a pas de vérification pour le moment"
              }
            ]
          },
          {
            "title": "Bords collants",
            "text": "fr/step2.md",
            "verify": [
              {
                "name": "Cette étape n'a pas de vérification pour le moment",
                "file": "verify2-1.sh",
                "hint": "Cette étape n'a pas de vérification pour le moment"
              }
            ]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Matplotlib Visualisierungskontrolle in Python",
      "description": "Matplotlib ist eine Datenvisualisierungsbibliothek in Python, die verwendet wird, um statische, animierte und interaktive Visualisierungen in Python zu erstellen. Es bietet eine objektorientierte Schnittstelle zur Einbettung von Diagrammen in Anwendungen mit allgemeinen GUI-Toolkits wie Tkinter, wxPython, Qt oder GTK. In diesem Lab werden wir lernen, wie man in Matplotlib die Anzeigegrenzen und klebrige Kanten mit Python steuert.",
      "meta": {
        "title": "Meister der Matplotlib Visualisierungskontrolle in Python",
        "description": "Lernen Sie, wie man in Matplotlib die Anzeigegrenzen und klebrige Kanten steuert, eine leistungsstarke Datenvisualisierungsbibliothek in Python.",
        "keywords": "matplotlib, python, klebrige Kanten, Datenvisualisierung, Anzeigegrenzen"
      },
      "details": {
        "steps": [
          {
            "title": "Plotten mit Rändern",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Dieser Schritt hat momentan keine Verifizierung",
                "file": "verify1-1.sh",
                "hint": "Dieser Schritt hat momentan keine Verifizierung"
              }
            ]
          },
          {
            "title": "Klebrige Kanten",
            "text": "de/step2.md",
            "verify": [
              {
                "name": "Dieser Schritt hat momentan keine Verifizierung",
                "file": "verify2-1.sh",
                "hint": "Dieser Schritt hat momentan keine Verifizierung"
              }
            ]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "Python における Matplotlib の可視化制御",
      "description": "Matplotlib は、Python におけるデータ可視化ライブラリで、Python で静的、アニメーション、インタラクティブな可視化を作成するために使用されます。また、Tkinter、wxPython、Qt、または GTK のような汎用 GUI ツールキットを使用して、アプリケーションにプロットを埋め込むためのオブジェクト指向 API を提供します。この実験では、Python を使って Matplotlib のビューの制限と固定エッジを制御する方法を学びます。",
      "meta": {
        "title": "Python における Matplotlib 可視化制御のマスター",
        "description": "Python の強力なデータ可視化ライブラリである Matplotlib におけるビューの制限と固定エッジを制御する方法を学びましょう。",
        "keywords": "matplotlib, python, 固定エッジ，データ可視化，ビューの制限"
      },
      "details": {
        "steps": [
          {
            "title": "マージン付きのプロット作成",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "このステップでは現在検証はありません",
                "file": "verify1-1.sh",
                "hint": "このステップでは現在検証はありません"
              }
            ]
          },
          {
            "title": "固定エッジ",
            "text": "ja/step2.md",
            "verify": [
              {
                "name": "このステップでは現在検証はありません",
                "file": "verify2-1.sh",
                "hint": "このステップでは現在検証はありません"
              }
            ]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Контроль визуализации Matplotlib в Python",
      "description": "Matplotlib - это библиотека визуализации данных на Python, которая используется для создания статических, анимированных и интерактивных визуализаций на Python. Она предоставляет объектно-ориентированный API для встраивания графиков в приложения с использованием общих целевых GUI-инструментов, таких как Tkinter, wxPython, Qt или GTK. В этом лабе мы узнаем, как управлять пределами вида и прикрепленными краями в Matplotlib с использованием Python.",
      "meta": {
        "title": "Мастерство в управлении визуализацией Matplotlib в Python",
        "description": "Изучите, как управлять пределами вида и прикрепленными краями в Matplotlib, мощной библиотеке визуализации данных на Python.",
        "keywords": "matplotlib, python, прикрепленные края, визуализация данных, пределы вида"
      },
      "details": {
        "steps": [
          {
            "title": "Построение графиков с отступами",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "На этом этапе проверок нет",
                "file": "verify1-1.sh",
                "hint": "На этом этапе проверок нет"
              }
            ]
          },
          {
            "title": "Прикрепленные края",
            "text": "ru/step2.md",
            "verify": [
              {
                "name": "На этом этапе проверок нет",
                "file": "verify2-1.sh",
                "hint": "На этом этапе проверок нет"
              }
            ]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    }
  ]
}
