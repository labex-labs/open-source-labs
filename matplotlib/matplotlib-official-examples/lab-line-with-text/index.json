{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Line with Text",
  "description": "This lab demonstrates how to override basic methods so an artist can contain another artist in Python Matplotlib.",
  "meta": {
    "title": "Override Basic Methods to Contain Another Artist in Python Matplotlib",
    "description": "Learn how to override basic methods to create custom artists in Python Matplotlib.",
    "keywords": "matplotlib, override, python, custom, artist"
  },
  "difficulty": "Beginner",
  "time": 10,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    },
    "assets": {
      "host01": [
        {
          "file": "line-with-text.ipynb",
          "target": "/home/labex/project",
          "chmod": "ugo+rwx"
        }
      ]
    }
  },
  "backend": {
    "imageid": "jupyter-ubuntu:2204"
  },
  "contributors": [],
  "license": {
    "name": "BSD 3-Clause",
    "url": "https://github.com/matplotlib/matplotlib/tree/main/LICENSE",
    "repo": "https://github.com/matplotlib/matplotlib"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "带文本的线条",
      "description": "本实验展示了如何重写基本方法，以便在 Python Matplotlib 中一个艺术家（artist）可以包含另一个艺术家。",
      "meta": {
        "title": "在 Python Matplotlib 中重写基本方法以包含另一个艺术家",
        "description": "学习如何在 Python Matplotlib 中重写基本方法以创建自定义艺术家。",
        "keywords": "matplotlib, 重写，Python, 自定义，艺术家"
      },
      "details": {
        "steps": [],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Línea con Texto",
      "description": "Esta práctica demuestra cómo anular métodos básicos para que un artista pueda contener a otro artista en Python Matplotlib.",
      "meta": {
        "title": "Anular Métodos Básicos para Contener a Otro Artista en Python Matplotlib",
        "description": "Aprende cómo anular métodos básicos para crear artistas personalizados en Python Matplotlib.",
        "keywords": "matplotlib, anular, python, personalizado, artista"
      },
      "details": {
        "steps": [],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Ligne avec Texte",
      "description": "Ce laboratoire montre comment surcharger des méthodes de base pour que l'artiste puisse contenir un autre artiste dans Matplotlib de Python.",
      "meta": {
        "title": "Surcharger des méthodes de base pour contenir un autre artiste dans Matplotlib de Python",
        "description": "Découvrez comment surcharger des méthodes de base pour créer des artistes personnalisés dans Matplotlib de Python.",
        "keywords": "matplotlib, surcharger, python, personnalisé, artiste"
      },
      "details": {
        "steps": [],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Linie mit Text",
      "description": "In diesem Lab wird gezeigt, wie man grundlegende Methoden überschreiben kann, sodass ein Künstler in Python Matplotlib einen anderen Künstler enthalten kann.",
      "meta": {
        "title": "Grundlegende Methoden überschreiben, um in Python Matplotlib einen anderen Künstler zu enthalten",
        "description": "Lernen Sie, wie Sie grundlegende Methoden überschreiben, um in Python Matplotlib benutzerdefinierte Künstler zu erstellen.",
        "keywords": "matplotlib, überschreiben, python, benutzerdefiniert, Künstler"
      },
      "details": {
        "steps": [],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "テキスト付きの線",
      "description": "この実験では、Python の Matplotlib において、アーティストが別のアーティストを含むようにするために、基本的なメソッドをオーバーライドする方法を示します。",
      "meta": {
        "title": "Python の Matplotlib で基本的なメソッドをオーバーライドして別のアーティストを含める",
        "description": "Python の Matplotlib でカスタムアーティストを作成するための基本的なメソッドをオーバーライドする方法を学びましょう。",
        "keywords": "matplotlib, オーバーライド，python, カスタム，アーティスト"
      },
      "details": {
        "steps": [],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Линия с текстом",
      "description": "В этом практическом занятии показано, как переопределить базовые методы, чтобы в Python Matplotlib художник мог содержать другого художника.",
      "meta": {
        "title": "Переопределение базовых методов для включения другого художника в Python Matplotlib",
        "description": "Изучите, как переопределить базовые методы для создания пользовательских художников в Python Matplotlib.",
        "keywords": "matplotlib, переопределение, python, пользовательский, художник"
      },
      "details": {
        "steps": [],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    }
  ]
}
