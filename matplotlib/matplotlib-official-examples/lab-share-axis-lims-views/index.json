{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Matplotlib Plot Sharing",
  "description": "When creating multiple plots that share a common axis, you may want to ensure that when you zoom in or out on one plot, the other plots update as well. In this lab, we will explore how to use the sharex and sharey attributes in Matplotlib to create plots that share an axis.",
  "meta": {
    "title": "Matplotlib Plot Sharing: Synchronize Axis Zoom and Pan",
    "description": "Learn how to use Matplotlib's sharex and sharey attributes to create plots that share a common axis, enabling synchronized zooming and panning.",
    "keywords": "axis synchronization, matplotlib, python, data visualization, plot sharing"
  },
  "difficulty": "Beginner",
  "time": 25,
  "hidden": true,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Import Required Libraries",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "This step has no verification at the moment",
            "file": "verify1-1.sh",
            "hint": "This step has no verification at the moment"
          }
        ],
        "skills": [
          "matplotlib/figures_axes",
          "matplotlib/importing_matplotlib",
          "python/data_visualization",
          "python/importing_modules",
          "python/numerical_computing"
        ]
      },
      {
        "title": "Create Data",
        "text": "en/step2.md",
        "verify": [
          {
            "name": "This step has no verification at the moment",
            "file": "verify2-1.sh",
            "hint": "This step has no verification at the moment"
          }
        ],
        "skills": ["python/tuples"]
      },
      {
        "title": "Create the First Plot",
        "text": "en/step3.md",
        "verify": [
          {
            "name": "This step has no verification at the moment",
            "file": "verify3-1.sh",
            "hint": "This step has no verification at the moment"
          }
        ],
        "skills": [
          "matplotlib/line_plots",
          "matplotlib/subplots",
          "python/tuples"
        ]
      },
      {
        "title": "Create the Second Plot",
        "text": "en/step4.md",
        "verify": [
          {
            "name": "This step has no verification at the moment",
            "file": "verify4-1.sh",
            "hint": "This step has no verification at the moment"
          }
        ],
        "skills": [
          "matplotlib/line_plots",
          "matplotlib/subplots",
          "python/tuples"
        ]
      },
      {
        "title": "Show the Plots",
        "text": "en/step5.md",
        "verify": [
          {
            "name": "This step has no verification at the moment",
            "file": "verify5-1.sh",
            "hint": "This step has no verification at the moment"
          }
        ],
        "skills": []
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    },
    "assets": {
      "host01": [
        {
          "file": "share-axis-lims-views.ipynb",
          "target": "/home/labex/project",
          "chmod": "ugo+rwx"
        }
      ]
    }
  },
  "backend": {
    "imageid": "jupyter-ubuntu:2204"
  },
  "contributors": [],
  "license": {
    "name": "BSD 3-Clause",
    "url": "https://github.com/matplotlib/matplotlib/tree/main/LICENSE",
    "repo": "https://github.com/matplotlib/matplotlib"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "Matplotlib 图表共享",
      "description": "当创建多个共享同一坐标轴的图表时，你可能希望确保在放大或缩小其中一个图表时，其他图表也会相应更新。在本实验中，我们将探索如何使用 Matplotlib 中的 sharex 和 sharey 属性来创建共享坐标轴的图表。",
      "meta": {
        "title": "Matplotlib 图表共享：同步坐标轴缩放与平移",
        "description": "学习如何使用 Matplotlib 的 sharex 和 sharey 属性来创建共享同一坐标轴的图表，实现同步缩放和平移。",
        "keywords": "坐标轴同步，Matplotlib, Python, 数据可视化，图表共享"
      },
      "details": {
        "steps": [
          {
            "title": "导入所需库",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "此步骤目前没有验证",
                "file": "verify1-1.sh",
                "hint": "此步骤目前没有验证"
              }
            ]
          },
          {
            "title": "创建数据",
            "text": "zh/step2.md",
            "verify": [
              {
                "name": "此步骤目前没有验证",
                "file": "verify2-1.sh",
                "hint": "此步骤目前没有验证"
              }
            ]
          },
          {
            "title": "创建第一个图表",
            "text": "zh/step3.md",
            "verify": [
              {
                "name": "此步骤目前没有验证",
                "file": "verify3-1.sh",
                "hint": "此步骤目前没有验证"
              }
            ]
          },
          {
            "title": "创建第二个图表",
            "text": "zh/step4.md",
            "verify": [
              {
                "name": "此步骤目前没有验证",
                "file": "verify4-1.sh",
                "hint": "此步骤目前没有验证"
              }
            ]
          },
          {
            "title": "展示图表",
            "text": "zh/step5.md",
            "verify": [
              {
                "name": "此步骤目前没有验证",
                "file": "verify5-1.sh",
                "hint": "此步骤目前没有验证"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Compartir gráficas en Matplotlib",
      "description": "Cuando se crean múltiples gráficas que comparten un eje común, es posible que desees asegurarte de que cuando se hace zoom in o out en una gráfica, las otras gráficas también se actualicen. En este laboratorio, exploraremos cómo usar los atributos sharex y sharey en Matplotlib para crear gráficas que comparten un eje.",
      "meta": {
        "title": "Compartir gráficas en Matplotlib: Sincronizar zoom y desplazamiento del eje",
        "description": "Aprende cómo usar los atributos sharex y sharey de Matplotlib para crear gráficas que comparten un eje común, lo que permite un zoom y desplazamiento sincronizados.",
        "keywords": "sincronización del eje, matplotlib, python, visualización de datos, compartir gráficas"
      },
      "details": {
        "steps": [
          {
            "title": "Importar las bibliotecas necesarias",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Este paso no tiene verificaciones en este momento",
                "file": "verify1-1.sh",
                "hint": "Este paso no tiene verificaciones en este momento"
              }
            ]
          },
          {
            "title": "Crear datos",
            "text": "es/step2.md",
            "verify": [
              {
                "name": "Este paso no tiene verificaciones en este momento",
                "file": "verify2-1.sh",
                "hint": "Este paso no tiene verificaciones en este momento"
              }
            ]
          },
          {
            "title": "Crear la primera gráfica",
            "text": "es/step3.md",
            "verify": [
              {
                "name": "Este paso no tiene verificaciones en este momento",
                "file": "verify3-1.sh",
                "hint": "Este paso no tiene verificaciones en este momento"
              }
            ]
          },
          {
            "title": "Crear la segunda gráfica",
            "text": "es/step4.md",
            "verify": [
              {
                "name": "Este paso no tiene verificaciones en este momento",
                "file": "verify4-1.sh",
                "hint": "Este paso no tiene verificaciones en este momento"
              }
            ]
          },
          {
            "title": "Mostrar las gráficas",
            "text": "es/step5.md",
            "verify": [
              {
                "name": "Este paso no tiene verificaciones en este momento",
                "file": "verify5-1.sh",
                "hint": "Este paso no tiene verificaciones en este momento"
              }
            ]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Partage de graphiques Matplotlib",
      "description": "Lors de la création de plusieurs graphiques partageant un axe commun, vous pouvez vouloir vous assurer que lorsque vous zoomez ou dézoomez sur un graphique, les autres graphiques se mettent également à jour. Dans ce laboratoire, nous allons explorer la manière d'utiliser les attributs sharex et sharey dans Matplotlib pour créer des graphiques partageant un axe.",
      "meta": {
        "title": "Partage de graphiques Matplotlib : Synchroniser le zoom et le déplacement de l'axe",
        "description": "Découvrez comment utiliser les attributs sharex et sharey de Matplotlib pour créer des graphiques partageant un axe commun, permettant un zoom et un déplacement synchronisés.",
        "keywords": "synchronisation de l'axe, Matplotlib, python, visualisation de données, partage de graphiques"
      },
      "details": {
        "steps": [
          {
            "title": "Importer les bibliothèques requises",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Cette étape n'a pas de vérification pour le moment",
                "file": "verify1-1.sh",
                "hint": "Cette étape n'a pas de vérification pour le moment"
              }
            ]
          },
          {
            "title": "Créer des données",
            "text": "fr/step2.md",
            "verify": [
              {
                "name": "Cette étape n'a pas de vérification pour le moment",
                "file": "verify2-1.sh",
                "hint": "Cette étape n'a pas de vérification pour le moment"
              }
            ]
          },
          {
            "title": "Créer le premier graphique",
            "text": "fr/step3.md",
            "verify": [
              {
                "name": "Cette étape n'a pas de vérification pour le moment",
                "file": "verify3-1.sh",
                "hint": "Cette étape n'a pas de vérification pour le moment"
              }
            ]
          },
          {
            "title": "Créer le second graphique",
            "text": "fr/step4.md",
            "verify": [
              {
                "name": "Cette étape n'a pas de vérification pour le moment",
                "file": "verify4-1.sh",
                "hint": "Cette étape n'a pas de vérification pour le moment"
              }
            ]
          },
          {
            "title": "Afficher les graphiques",
            "text": "fr/step5.md",
            "verify": [
              {
                "name": "Cette étape n'a pas de vérification pour le moment",
                "file": "verify5-1.sh",
                "hint": "Cette étape n'a pas de vérification pour le moment"
              }
            ]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Matplotlib Plot Sharing",
      "description": "Wenn Sie mehrere Plots erstellen, die eine gemeinsame Achse teilen, möchten Sie möglicherweise gewährleisten, dass sich die anderen Plots aktualisieren, wenn Sie in einem Plot zoomen oder auszoomen. In diesem Lab werden wir untersuchen, wie man die Attribute sharex und sharey in Matplotlib verwendet, um Plots zu erstellen, die eine Achse teilen.",
      "meta": {
        "title": "Matplotlib Plot Sharing: Synchronisiere Achsen-Zoom und -Pan",
        "description": "Lernen Sie, wie Sie Matplotlib's sharex- und sharey-Attribute verwenden, um Plots zu erstellen, die eine gemeinsame Achse teilen und so synchronisiertes Zoomen und Verschieben ermöglichen.",
        "keywords": "Achsen-Synchronisierung, Matplotlib, Python, Datenvisualisierung, Plot Sharing"
      },
      "details": {
        "steps": [
          {
            "title": "Importiere erforderliche Bibliotheken",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Dieser Schritt hat momentan keine Verifizierung",
                "file": "verify1-1.sh",
                "hint": "Dieser Schritt hat momentan keine Verifizierung"
              }
            ]
          },
          {
            "title": "Daten erstellen",
            "text": "de/step2.md",
            "verify": [
              {
                "name": "Dieser Schritt hat momentan keine Verifizierung",
                "file": "verify2-1.sh",
                "hint": "Dieser Schritt hat momentan keine Verifizierung"
              }
            ]
          },
          {
            "title": "Den ersten Plot erstellen",
            "text": "de/step3.md",
            "verify": [
              {
                "name": "Dieser Schritt hat momentan keine Verifizierung",
                "file": "verify3-1.sh",
                "hint": "Dieser Schritt hat momentan keine Verifizierung"
              }
            ]
          },
          {
            "title": "Den zweiten Plot erstellen",
            "text": "de/step4.md",
            "verify": [
              {
                "name": "Dieser Schritt hat momentan keine Verifizierung",
                "file": "verify4-1.sh",
                "hint": "Dieser Schritt hat momentan keine Verifizierung"
              }
            ]
          },
          {
            "title": "Zeige die Plots an",
            "text": "de/step5.md",
            "verify": [
              {
                "name": "Dieser Schritt hat momentan keine Verifizierung",
                "file": "verify5-1.sh",
                "hint": "Dieser Schritt hat momentan keine Verifizierung"
              }
            ]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "Matplotlib のプロット共有",
      "description": "共通の軸を共有する複数のプロットを作成する際、あるプロットをズームインまたはズームアウトしたときに他のプロットも更新されるようにすることが望まれる場合があります。この実験では、Matplotlib の sharex および sharey 属性を使って軸を共有するプロットを作成する方法を探ります。",
      "meta": {
        "title": "Matplotlib のプロット共有：軸のズームとパンを同期させる",
        "description": "Matplotlib の sharex および sharey 属性を使って共通の軸を共有するプロットを作成し、同期したズームとパンを可能にする方法を学びましょう。",
        "keywords": "軸同期，Matplotlib, Python, データ可視化，プロット共有"
      },
      "details": {
        "steps": [
          {
            "title": "必要なライブラリをインポートする",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "このステップには現在、検証はありません",
                "file": "verify1-1.sh",
                "hint": "このステップには現在、検証はありません"
              }
            ]
          },
          {
            "title": "データを作成する",
            "text": "ja/step2.md",
            "verify": [
              {
                "name": "このステップには現在、検証はありません",
                "file": "verify2-1.sh",
                "hint": "このステップには現在、検証はありません"
              }
            ]
          },
          {
            "title": "最初のプロットを作成する",
            "text": "ja/step3.md",
            "verify": [
              {
                "name": "このステップには現在、検証はありません",
                "file": "verify3-1.sh",
                "hint": "このステップには現在、検証はありません"
              }
            ]
          },
          {
            "title": "2 つ目のプロットを作成する",
            "text": "ja/step4.md",
            "verify": [
              {
                "name": "このステップには現在、検証はありません",
                "file": "verify4-1.sh",
                "hint": "このステップには現在、検証はありません"
              }
            ]
          },
          {
            "title": "プロットを表示する",
            "text": "ja/step5.md",
            "verify": [
              {
                "name": "このステップには現在、検証はありません",
                "file": "verify5-1.sh",
                "hint": "このステップには現在、検証はありません"
              }
            ]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Совместное использование графиков в Matplotlib",
      "description": "При создании нескольких графиков с общей осью вы, возможно, захотите обеспечить обновление других графиков при приближении или удалении масштаба на одном из них. В этом практическом занятии мы исследуем, как использовать атрибуты sharex и sharey в Matplotlib для создания графиков с общей осью.",
      "meta": {
        "title": "Совместное использование графиков в Matplotlib: синхронизация приближения и перемещения по оси",
        "description": "Изучите, как использовать атрибуты sharex и sharey Matplotlib для создания графиков с общей осью, обеспечивая синхронизированное приближение и перемещение.",
        "keywords": "синхронизация оси, Matplotlib, python, визуализация данных, совместное использование графиков"
      },
      "details": {
        "steps": [
          {
            "title": "Импортировать необходимые библиотеки",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "На данный момент эта стадия не имеет проверки",
                "file": "verify1-1.sh",
                "hint": "На данный момент эта стадия не имеет проверки"
              }
            ]
          },
          {
            "title": "Создать данные",
            "text": "ru/step2.md",
            "verify": [
              {
                "name": "На данный момент эта стадия не имеет проверки",
                "file": "verify2-1.sh",
                "hint": "На данный момент эта стадия не имеет проверки"
              }
            ]
          },
          {
            "title": "Создать первый график",
            "text": "ru/step3.md",
            "verify": [
              {
                "name": "На данный момент эта стадия не имеет проверки",
                "file": "verify3-1.sh",
                "hint": "На данный момент эта стадия не имеет проверки"
              }
            ]
          },
          {
            "title": "Создать второй график",
            "text": "ru/step4.md",
            "verify": [
              {
                "name": "На данный момент эта стадия не имеет проверки",
                "file": "verify4-1.sh",
                "hint": "На данный момент эта стадия не имеет проверки"
              }
            ]
          },
          {
            "title": "Показать графики",
            "text": "ru/step5.md",
            "verify": [
              {
                "name": "На данный момент эта стадия не имеет проверки",
                "file": "verify5-1.sh",
                "hint": "На данный момент эта стадия не имеет проверки"
              }
            ]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    },
    {
      "lang": "ko",
      "title": "Matplotlib 플롯 공유",
      "description": "공통 축을 공유하는 여러 플롯을 생성할 때, 한 플롯을 확대/축소하면 다른 플롯도 함께 업데이트되도록 할 수 있습니다. 이 랩에서는 Matplotlib 의 sharex 및 sharey 속성을 사용하여 축을 공유하는 플롯을 만드는 방법을 살펴봅니다.",
      "meta": {
        "title": "Matplotlib 플롯 공유: 축 확대/축소 및 이동 동기화",
        "description": "Matplotlib 의 sharex 및 sharey 속성을 사용하여 공통 축을 공유하는 플롯을 만들고, 동기화된 확대/축소 및 이동을 가능하게 하는 방법을 알아보세요. 데이터 시각화, 파이썬, Matplotlib 튜토리얼",
        "keywords": "축 동기화, matplotlib, 파이썬, 데이터 시각화, 플롯 공유, Matplotlib 튜토리얼, 파이썬 플롯"
      },
      "details": {
        "steps": [
          {
            "title": "필요한 라이브러리 임포트",
            "text": "ko/step1.md",
            "verify": [
              {
                "name": "현재 이 단계에는 검증이 없습니다.",
                "file": "verify1-1.sh",
                "hint": "현재 이 단계에는 검증이 없습니다."
              }
            ]
          },
          {
            "title": "데이터 생성",
            "text": "ko/step2.md",
            "verify": [
              {
                "name": "현재 이 단계에는 검증이 없습니다.",
                "file": "verify2-1.sh",
                "hint": "현재 이 단계에는 검증이 없습니다."
              }
            ]
          },
          {
            "title": "첫 번째 플롯 생성",
            "text": "ko/step3.md",
            "verify": [
              {
                "name": "현재 이 단계에는 검증이 없습니다.",
                "file": "verify3-1.sh",
                "hint": "현재 이 단계에는 검증이 없습니다."
              }
            ]
          },
          {
            "title": "두 번째 플롯 생성",
            "text": "ko/step4.md",
            "verify": [
              {
                "name": "현재 이 단계에는 검증이 없습니다.",
                "file": "verify4-1.sh",
                "hint": "현재 이 단계에는 검증이 없습니다."
              }
            ]
          },
          {
            "title": "플롯 표시",
            "text": "ko/step5.md",
            "verify": [
              {
                "name": "현재 이 단계에는 검증이 없습니다.",
                "file": "verify5-1.sh",
                "hint": "현재 이 단계에는 검증이 없습니다."
              }
            ]
          }
        ],
        "intro": {
          "text": "ko/intro.md",
          "title": "소개"
        },
        "finish": {
          "text": "ko/finish.md",
          "title": "요약"
        }
      }
    },
    {
      "lang": "pt",
      "title": "Compartilhamento de Gráficos Matplotlib",
      "description": "Ao criar múltiplos gráficos que compartilham um eixo comum, você pode querer garantir que, ao aplicar zoom ou panorâmica em um gráfico, os outros gráficos também sejam atualizados. Neste laboratório, exploraremos como usar os atributos sharex e sharey em Matplotlib para criar gráficos que compartilham um eixo.",
      "meta": {
        "title": "Compartilhamento de Gráficos Matplotlib: Sincronize Zoom e Pan nos Eixos",
        "description": "Aprenda como usar os atributos sharex e sharey do Matplotlib para criar gráficos que compartilham um eixo comum, permitindo zoom e panorâmica sincronizados.",
        "keywords": "sincronização de eixos, matplotlib, python, visualização de dados, compartilhamento de gráficos, zoom matplotlib, pan matplotlib"
      },
      "details": {
        "steps": [
          {
            "title": "Importar as Bibliotecas Necessárias",
            "text": "pt/step1.md",
            "verify": [
              {
                "name": "Esta etapa não possui verificação no momento",
                "file": "verify1-1.sh",
                "hint": "Esta etapa não possui verificação no momento"
              }
            ]
          },
          {
            "title": "Criar Dados",
            "text": "pt/step2.md",
            "verify": [
              {
                "name": "Esta etapa não possui verificação no momento",
                "file": "verify2-1.sh",
                "hint": "Esta etapa não possui verificação no momento"
              }
            ]
          },
          {
            "title": "Criar o Primeiro Gráfico",
            "text": "pt/step3.md",
            "verify": [
              {
                "name": "Esta etapa não possui verificação no momento",
                "file": "verify3-1.sh",
                "hint": "Esta etapa não possui verificação no momento"
              }
            ]
          },
          {
            "title": "Criar o Segundo Gráfico",
            "text": "pt/step4.md",
            "verify": [
              {
                "name": "Esta etapa não possui verificação no momento",
                "file": "verify4-1.sh",
                "hint": "Esta etapa não possui verificação no momento"
              }
            ]
          },
          {
            "title": "Mostrar os Gráficos",
            "text": "pt/step5.md",
            "verify": [
              {
                "name": "Esta etapa não possui verificação no momento",
                "file": "verify5-1.sh",
                "hint": "Esta etapa não possui verificação no momento"
              }
            ]
          }
        ],
        "intro": {
          "text": "pt/intro.md",
          "title": "Introdução"
        },
        "finish": {
          "text": "pt/finish.md",
          "title": "Resumo"
        }
      }
    }
  ]
}
