{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Bayesian Updating with Matplotlib",
  "description": "Bayesian updating is a statistical approach that allows us to update the probability of a hypothesis as new data becomes available. In this lab, we will use Matplotlib to create an animation that shows how Bayesian updating works. Specifically, we will simulate a coin toss experiment and use Bayesian updating to estimate the probability of the coin landing heads up.",
  "meta": {
    "title": "Bayesian Updating with Matplotlib: Visualize Probability Updates",
    "description": "Learn Bayesian statistics through an interactive coin toss simulation using Matplotlib in this programming tutorial.",
    "keywords": "python playground, matplotlib, probability, python, bayesian updating, data visualization, coin toss"
  },
  "difficulty": "Beginner",
  "time": 25,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Import Required Libraries",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "This step has no verification at the moment",
            "file": "verify1-1.sh",
            "hint": "This step has no verification at the moment"
          }
        ],
        "skills": [
          "matplotlib/figures_axes",
          "matplotlib/importing_matplotlib",
          "python/data_visualization",
          "python/importing_modules",
          "python/math_random",
          "python/numerical_computing",
          "python/standard_libraries"
        ]
      },
      {
        "title": "Define Beta Distribution PDF",
        "text": "en/step2.md",
        "verify": [
          {
            "name": "This step has no verification at the moment",
            "file": "verify2-1.sh",
            "hint": "This step has no verification at the moment"
          }
        ],
        "skills": [
          "python/function_definition",
          "python/math_random",
          "python/standard_libraries",
          "python/tuples"
        ]
      },
      {
        "title": "Define UpdateDist Class",
        "text": "en/step3.md",
        "verify": [
          {
            "name": "This step has no verification at the moment",
            "file": "verify3-1.sh",
            "hint": "This step has no verification at the moment"
          }
        ],
        "skills": [
          "matplotlib/grid_config",
          "matplotlib/line_plots",
          "matplotlib/line_styles_colors",
          "python/booleans",
          "python/classes_objects",
          "python/comments",
          "python/conditional_statements",
          "python/constructor",
          "python/default_arguments",
          "python/encapsulation",
          "python/function_definition",
          "python/lists",
          "python/math_random",
          "python/polymorphism",
          "python/standard_libraries",
          "python/tuples",
          "python/with_statement"
        ]
      },
      {
        "title": "Create Animation",
        "text": "en/step4.md",
        "verify": [
          {
            "name": "This step has no verification at the moment",
            "file": "verify4-1.sh",
            "hint": "This step has no verification at the moment"
          }
        ],
        "skills": ["python/booleans", "python/tuples"]
      },
      {
        "title": "Interpret Results",
        "text": "en/step5.md",
        "verify": [
          {
            "name": "This step has no verification at the moment",
            "file": "verify5-1.sh",
            "hint": "This step has no verification at the moment"
          }
        ],
        "skills": []
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    },
    "assets": {
      "host01": [
        {
          "file": "bayes-update.ipynb",
          "target": "/home/labex/project",
          "chmod": "ugo+rwx"
        }
      ]
    }
  },
  "backend": {
    "imageid": "jupyter-ubuntu:2204"
  },
  "contributors": ["huduo0812"],
  "license": {
    "name": "BSD 3-Clause",
    "url": "https://github.com/matplotlib/matplotlib/tree/main/LICENSE",
    "repo": "https://github.com/matplotlib/matplotlib"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "使用Matplotlib进行贝叶斯更新",
      "description": "贝叶斯更新是一种统计方法，使我们能够在有新数据可用时更新假设的概率。在本实验中，我们将使用Matplotlib创建一个动画，展示贝叶斯更新的工作原理。具体来说，我们将模拟抛硬币实验，并使用贝叶斯更新来估计硬币正面朝上的概率。",
      "meta": {
        "title": "使用Matplotlib进行贝叶斯更新：可视化概率更新",
        "description": "在本编程教程中，通过使用Matplotlib进行交互式抛硬币模拟来学习贝叶斯统计。",
        "keywords": "Python实践, Matplotlib, 概率, Python, 贝叶斯更新, 数据可视化, 抛硬币"
      },
      "details": {
        "steps": [
          {
            "title": "导入所需库",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "此步骤目前没有验证",
                "file": "verify1-1.sh",
                "hint": "此步骤目前没有验证"
              }
            ]
          },
          {
            "title": "定义贝塔分布概率密度函数",
            "text": "zh/step2.md",
            "verify": [
              {
                "name": "此步骤目前没有验证",
                "file": "verify2-1.sh",
                "hint": "此步骤目前没有验证"
              }
            ]
          },
          {
            "title": "定义UpdateDist类",
            "text": "zh/step3.md",
            "verify": [
              {
                "name": "此步骤目前没有验证",
                "file": "verify3-1.sh",
                "hint": "此步骤目前没有验证"
              }
            ]
          },
          {
            "title": "创建动画",
            "text": "zh/step4.md",
            "verify": [
              {
                "name": "此步骤目前没有验证",
                "file": "verify4-1.sh",
                "hint": "此步骤目前没有验证"
              }
            ]
          },
          {
            "title": "解读结果",
            "text": "zh/step5.md",
            "verify": [
              {
                "name": "此步骤目前没有验证",
                "file": "verify5-1.sh",
                "hint": "此步骤目前没有验证"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Actualización bayesiana con Matplotlib",
      "description": "La actualización bayesiana es un enfoque estadístico que nos permite actualizar la probabilidad de una hipótesis a medida que nuevos datos se vuelven disponibles. En este laboratorio, usaremos Matplotlib para crear una animación que muestre cómo funciona la actualización bayesiana. Específicamente, simularemos un experimento de lanzamiento de moneda y usaremos la actualización bayesiana para estimar la probabilidad de que la moneda caiga con la cara hacia arriba.",
      "meta": {
        "title": "Actualización bayesiana con Matplotlib: Visualiza las actualizaciones de probabilidad",
        "description": "Aprende estadística bayesiana a través de una simulación interactiva de lanzamiento de moneda usando Matplotlib en este tutorial de programación.",
        "keywords": "python playground, matplotlib, probabilidad, python, actualización bayesiana, visualización de datos, lanzamiento de moneda"
      },
      "details": {
        "steps": [
          {
            "title": "Importar las bibliotecas necesarias",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Este paso no tiene verificaciones en este momento",
                "file": "verify1-1.sh",
                "hint": "Este paso no tiene verificaciones en este momento"
              }
            ]
          },
          {
            "title": "Definir la PDF de la distribución beta",
            "text": "es/step2.md",
            "verify": [
              {
                "name": "Este paso no tiene verificaciones en este momento",
                "file": "verify2-1.sh",
                "hint": "Este paso no tiene verificaciones en este momento"
              }
            ]
          },
          {
            "title": "Definir la clase UpdateDist",
            "text": "es/step3.md",
            "verify": [
              {
                "name": "Este paso no tiene verificaciones en este momento",
                "file": "verify3-1.sh",
                "hint": "Este paso no tiene verificaciones en este momento"
              }
            ]
          },
          {
            "title": "Crear una animación",
            "text": "es/step4.md",
            "verify": [
              {
                "name": "Este paso no tiene verificaciones en este momento",
                "file": "verify4-1.sh",
                "hint": "Este paso no tiene verificaciones en este momento"
              }
            ]
          },
          {
            "title": "Interpretar los resultados",
            "text": "es/step5.md",
            "verify": [
              {
                "name": "Este paso no tiene verificaciones en este momento",
                "file": "verify5-1.sh",
                "hint": "Este paso no tiene verificaciones en este momento"
              }
            ]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Mise à jour bayésienne avec Matplotlib",
      "description": "La mise à jour bayésienne est une approche statistique qui nous permet de mettre à jour la probabilité d'une hypothèse à mesure que de nouvelles données deviennent disponibles. Dans ce laboratoire, nous allons utiliser Matplotlib pour créer une animation qui montre comment fonctionne la mise à jour bayésienne. Plus précisément, nous allons simuler une expérience de lancer de pièce et utiliser la mise à jour bayésienne pour estimer la probabilité que la pièce tombe face.",
      "meta": {
        "title": "Mise à jour bayésienne avec Matplotlib : Visualiser les mises à jour de probabilité",
        "description": "Apprenez les statistiques bayésiennes grâce à une simulation interactive de lancer de pièce utilisant Matplotlib dans ce tutoriel de programmation.",
        "keywords": "python playground, matplotlib, probabilité, python, mise à jour bayésienne, visualisation de données, lancer de pièce"
      },
      "details": {
        "steps": [
          {
            "title": "Importer les bibliothèques requises",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Cette étape n'a pas de vérification pour le moment",
                "file": "verify1-1.sh",
                "hint": "Cette étape n'a pas de vérification pour le moment"
              }
            ]
          },
          {
            "title": "Définir la fonction de densité de probabilité (PDF) de la distribution bêta",
            "text": "fr/step2.md",
            "verify": [
              {
                "name": "Cette étape n'a pas de vérification pour le moment",
                "file": "verify2-1.sh",
                "hint": "Cette étape n'a pas de vérification pour le moment"
              }
            ]
          },
          {
            "title": "Définir la classe UpdateDist",
            "text": "fr/step3.md",
            "verify": [
              {
                "name": "Cette étape n'a pas de vérification pour le moment",
                "file": "verify3-1.sh",
                "hint": "Cette étape n'a pas de vérification pour le moment"
              }
            ]
          },
          {
            "title": "Créer une animation",
            "text": "fr/step4.md",
            "verify": [
              {
                "name": "Cette étape n'a pas de vérification pour le moment",
                "file": "verify4-1.sh",
                "hint": "Cette étape n'a pas de vérification pour le moment"
              }
            ]
          },
          {
            "title": "Interpréter les résultats",
            "text": "fr/step5.md",
            "verify": [
              {
                "name": "Cette étape n'a pas de vérification pour le moment",
                "file": "verify5-1.sh",
                "hint": "Cette étape n'a pas de vérification pour le moment"
              }
            ]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Bayesisches Updating mit Matplotlib",
      "description": "Das Bayes'sche Updating ist ein statistischer Ansatz, der uns ermöglicht, die Wahrscheinlichkeit einer Hypothese zu aktualisieren, wenn neue Daten verfügbar werden. In diesem Lab werden wir Matplotlib verwenden, um eine Animation zu erstellen, die zeigt, wie das Bayes'sche Updating funktioniert. Genauer gesagt werden wir ein Münzwurfexperiment simulieren und das Bayes'sche Updating verwenden, um die Wahrscheinlichkeit zu schätzen, dass die Münze auf Kopf fällt.",
      "meta": {
        "title": "Bayesisches Updating mit Matplotlib: Visualisiere Wahrscheinlichkeitsupdates",
        "description": "Lerne die Bayes'sche Statistik durch eine interaktive Münzwurfsimulation mit Matplotlib in diesem Programmier-Tutorial.",
        "keywords": "Python-Spielplatz, Matplotlib, Wahrscheinlichkeit, Python, Bayesisches Updating, Datenvisualisierung, Münzwurf"
      },
      "details": {
        "steps": [
          {
            "title": "Importiere erforderliche Bibliotheken",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Dieser Schritt hat momentan keine Verifizierung",
                "file": "verify1-1.sh",
                "hint": "Dieser Schritt hat momentan keine Verifizierung"
              }
            ]
          },
          {
            "title": "Definiere die Beta-Verteilungs-PDF",
            "text": "de/step2.md",
            "verify": [
              {
                "name": "Dieser Schritt hat momentan keine Verifizierung",
                "file": "verify2-1.sh",
                "hint": "Dieser Schritt hat momentan keine Verifizierung"
              }
            ]
          },
          {
            "title": "Definiere die UpdateDist-Klasse",
            "text": "de/step3.md",
            "verify": [
              {
                "name": "Dieser Schritt hat momentan keine Verifizierung",
                "file": "verify3-1.sh",
                "hint": "Dieser Schritt hat momentan keine Verifizierung"
              }
            ]
          },
          {
            "title": "Erstelle eine Animation",
            "text": "de/step4.md",
            "verify": [
              {
                "name": "Dieser Schritt hat momentan keine Verifizierung",
                "file": "verify4-1.sh",
                "hint": "Dieser Schritt hat momentan keine Verifizierung"
              }
            ]
          },
          {
            "title": "Interpretiere die Ergebnisse",
            "text": "de/step5.md",
            "verify": [
              {
                "name": "Dieser Schritt hat momentan keine Verifizierung",
                "file": "verify5-1.sh",
                "hint": "Dieser Schritt hat momentan keine Verifizierung"
              }
            ]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "Matplotlibを用いたベイズ更新",
      "description": "ベイズ更新は、新しいデータが得られるたびに仮説の確率を更新することができる統計的アプローチです。この実験では、Matplotlibを使ってベイズ更新がどのように機能するかを示すアニメーションを作成します。具体的には、コイントス実験をシミュレートし、ベイズ更新を使ってコインが表を向く確率を推定します。",
      "meta": {
        "title": "Matplotlibを用いたベイズ更新：確率更新を可視化する",
        "description": "このプログラミングチュートリアルでは、Matplotlibを使ったインタラクティブなコイントスシミュレーションを通じてベイズ統計を学びましょう。",
        "keywords": "python playground, matplotlib, 確率, python, ベイズ更新, データ可視化, コイントス"
      },
      "details": {
        "steps": [
          {
            "title": "必要なライブラリをインポートする",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "このステップには現在、検証はありません",
                "file": "verify1-1.sh",
                "hint": "このステップには現在、検証はありません"
              }
            ]
          },
          {
            "title": "ベータ分布の確率密度関数を定義する",
            "text": "ja/step2.md",
            "verify": [
              {
                "name": "このステップには現在、検証はありません",
                "file": "verify2-1.sh",
                "hint": "このステップには現在、検証はありません"
              }
            ]
          },
          {
            "title": "UpdateDistクラスを定義する",
            "text": "ja/step3.md",
            "verify": [
              {
                "name": "このステップには現在、検証はありません",
                "file": "verify3-1.sh",
                "hint": "このステップには現在、検証はありません"
              }
            ]
          },
          {
            "title": "アニメーションを作成する",
            "text": "ja/step4.md",
            "verify": [
              {
                "name": "このステップには現在、検証はありません",
                "file": "verify4-1.sh",
                "hint": "このステップには現在、検証はありません"
              }
            ]
          },
          {
            "title": "結果を解釈する",
            "text": "ja/step5.md",
            "verify": [
              {
                "name": "このステップには現在、検証はありません",
                "file": "verify5-1.sh",
                "hint": "このステップには現在、検証はありません"
              }
            ]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Байесовское обновление с использованием Matplotlib",
      "description": "Байесовское обновление - это статистический подход, который позволяет обновлять вероятность гипотезы при появлении новых данных. В этом практическом занятии мы используем Matplotlib для создания анимации, которая показывает, как работает байесовское обновление. В частности, мы моделируем эксперимент с подбрасыванием монеты и используем байесовское обновление для оценки вероятности того, что монета упадет орлом вверх.",
      "meta": {
        "title": "Байесовское обновление с использованием Matplotlib: Визуализация обновлений вероятностей",
        "description": "Изучите байесовскую статистику с помощью интерактивной симуляции подбрасывания монеты с использованием Matplotlib в этом программировательском туториале.",
        "keywords": "python playground, matplotlib, вероятность, python, байесовское обновление, визуализация данных, подбрасывание монеты"
      },
      "details": {
        "steps": [
          {
            "title": "Импортировать необходимые библиотеки",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "На данный момент эта стадия не имеет проверки",
                "file": "verify1-1.sh",
                "hint": "На данный момент эта стадия не имеет проверки"
              }
            ]
          },
          {
            "title": "Определить PDF бета-распределения",
            "text": "ru/step2.md",
            "verify": [
              {
                "name": "На данный момент эта стадия не имеет проверки",
                "file": "verify2-1.sh",
                "hint": "На данный момент эта стадия не имеет проверки"
              }
            ]
          },
          {
            "title": "Определить класс UpdateDist",
            "text": "ru/step3.md",
            "verify": [
              {
                "name": "На данный момент эта стадия не имеет проверки",
                "file": "verify3-1.sh",
                "hint": "На данный момент эта стадия не имеет проверки"
              }
            ]
          },
          {
            "title": "Создать анимацию",
            "text": "ru/step4.md",
            "verify": [
              {
                "name": "На данный момент эта стадия не имеет проверки",
                "file": "verify4-1.sh",
                "hint": "На данный момент эта стадия не имеет проверки"
              }
            ]
          },
          {
            "title": "Интерпретировать результаты",
            "text": "ru/step5.md",
            "verify": [
              {
                "name": "На данный момент эта стадия не имеет проверки",
                "file": "verify5-1.sh",
                "hint": "На данный момент эта стадия не имеет проверки"
              }
            ]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    }
  ]
}
