{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Matplotlib Stackplots and Streamgraphs",
  "description": "In this lab, you will learn how to use Matplotlib to create stackplots and streamgraphs. Stackplots are useful when you want to visualize multiple datasets as vertically stacked areas. Streamgraphs are a variation of stackplots where the baseline of the plot is not fixed at zero. Instead, the baseline is 'wiggled' so that the areas of the plot are smoothed and flow into each other.",
  "meta": {
    "title": "Matplotlib Stackplots and Streamgraphs | Data Visualization",
    "description": "Learn how to create stackplots and streamgraphs using Matplotlib, a powerful data visualization library in Python.",
    "keywords": "Matplotlib, Stackplots, Streamgraphs, Data Visualization, Python"
  },
  "difficulty": "Beginner",
  "time": 15,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Import Libraries",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "This step has no verification at the moment",
            "file": "verify1-1.sh",
            "hint": "This step has no verification at the moment"
          }
        ],
        "skills": [
          "matplotlib/figures_axes",
          "matplotlib/importing_matplotlib",
          "python/data_visualization",
          "python/importing_modules",
          "python/numerical_computing"
        ]
      },
      {
        "title": "Create Stackplot",
        "text": "en/step2.md",
        "verify": [
          {
            "name": "This step has no verification at the moment",
            "file": "verify2-1.sh",
            "hint": "This step has no verification at the moment"
          }
        ],
        "skills": [
          "matplotlib/legend_config",
          "matplotlib/stacked_plots",
          "python/booleans",
          "python/comments",
          "python/dictionaries",
          "python/lists",
          "python/tuples"
        ]
      },
      {
        "title": "Create Streamgraph",
        "text": "en/step3.md",
        "verify": [
          {
            "name": "This step has no verification at the moment",
            "file": "verify3-1.sh",
            "hint": "This step has no verification at the moment"
          }
        ],
        "skills": [
          "matplotlib/stacked_plots",
          "python/build_in_functions",
          "python/comments",
          "python/default_arguments",
          "python/for_loops",
          "python/function_definition",
          "python/list_comprehensions",
          "python/lists",
          "python/math_random",
          "python/standard_libraries",
          "python/tuples"
        ]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    },
    "assets": {
      "host01": [
        {
          "file": "stackplot-demo.ipynb",
          "target": "/home/labex/project",
          "chmod": "ugo+rwx"
        }
      ]
    }
  },
  "backend": {
    "imageid": "jupyter-ubuntu:2204"
  },
  "contributors": [],
  "license": {
    "name": "BSD 3-Clause",
    "url": "https://github.com/matplotlib/matplotlib/tree/main/LICENSE",
    "repo": "https://github.com/matplotlib/matplotlib"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "Matplotlib 堆叠图和流图",
      "description": "在本实验中，你将学习如何使用Matplotlib创建堆叠图和流图。当你想要将多个数据集可视化为垂直堆叠区域时，堆叠图很有用。流图是堆叠图的一种变体，其中图的基线不是固定在零。相反，基线会“摆动”，以便图的区域更加平滑且相互融合。",
      "meta": {
        "title": "Matplotlib 堆叠图和流图 | 数据可视化",
        "description": "学习如何使用Matplotlib创建堆叠图和流图，Matplotlib是Python中一个强大的数据可视化库。",
        "keywords": "Matplotlib, 堆叠图, 流图, 数据可视化, Python"
      },
      "details": {
        "steps": [
          {
            "title": "导入库",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "此步骤目前没有验证",
                "file": "verify1-1.sh",
                "hint": "此步骤目前没有验证"
              }
            ]
          },
          {
            "title": "创建堆叠图",
            "text": "zh/step2.md",
            "verify": [
              {
                "name": "此步骤目前没有验证",
                "file": "verify2-1.sh",
                "hint": "此步骤目前没有验证"
              }
            ]
          },
          {
            "title": "创建流图",
            "text": "zh/step3.md",
            "verify": [
              {
                "name": "此步骤目前没有验证",
                "file": "verify3-1.sh",
                "hint": "此步骤目前没有验证"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Gráficos de apilamiento y gráficos de flujo de Matplotlib",
      "description": "En este laboratorio, aprenderás a usar Matplotlib para crear gráficos de apilamiento y gráficos de flujo. Los gráficos de apilamiento son útiles cuando quieres visualizar múltiples conjuntos de datos como áreas apiladas verticalmente. Los gráficos de flujo son una variación de los gráficos de apilamiento donde la línea base del gráfico no está fija en cero. En cambio, la línea base 'se mueve' de modo que las áreas del gráfico se suavicen y fluyan una en otra.",
      "meta": {
        "title": "Gráficos de apilamiento y gráficos de flujo de Matplotlib | Visualización de datos",
        "description": "Aprende a crear gráficos de apilamiento y gráficos de flujo usando Matplotlib, una poderosa biblioteca de visualización de datos en Python.",
        "keywords": "Matplotlib, Gráficos de apilamiento, Gráficos de flujo, Visualización de datos, Python"
      },
      "details": {
        "steps": [
          {
            "title": "Importar bibliotecas",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Este paso no tiene verificaciones en este momento",
                "file": "verify1-1.sh",
                "hint": "Este paso no tiene verificaciones en este momento"
              }
            ]
          },
          {
            "title": "Crear gráfico de apilamiento",
            "text": "es/step2.md",
            "verify": [
              {
                "name": "Este paso no tiene verificaciones en este momento",
                "file": "verify2-1.sh",
                "hint": "Este paso no tiene verificaciones en este momento"
              }
            ]
          },
          {
            "title": "Crear gráfico de flujo",
            "text": "es/step3.md",
            "verify": [
              {
                "name": "Este paso no tiene verificaciones en este momento",
                "file": "verify3-1.sh",
                "hint": "Este paso no tiene verificaciones en este momento"
              }
            ]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Matplotlib : graphiques empilés et streamgraphs",
      "description": "Dans ce laboratoire, vous allez apprendre à utiliser Matplotlib pour créer des graphiques empilés et des streamgraphs. Les graphiques empilés sont utiles lorsque vous voulez visualiser plusieurs jeux de données sous forme de zones empilées verticalement. Les streamgraphs sont une variante des graphiques empilés où la ligne de base du graphique n'est pas fixée à zéro. Au lieu de cela, la ligne de base est 'ondulée' de manière à ce que les zones du graphique soient lisses et s'écoulent les unes dans les autres.",
      "meta": {
        "title": "Matplotlib : graphiques empilés et streamgraphs | Visualisation de données",
        "description": "Découvrez comment créer des graphiques empilés et des streamgraphs à l'aide de Matplotlib, une puissante bibliothèque de visualisation de données en Python.",
        "keywords": "Matplotlib, graphiques empilés, streamgraphs, visualisation de données, Python"
      },
      "details": {
        "steps": [
          {
            "title": "Importer les bibliothèques",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Cette étape n'a pas de vérification pour le moment",
                "file": "verify1-1.sh",
                "hint": "Cette étape n'a pas de vérification pour le moment"
              }
            ]
          },
          {
            "title": "Créer un graphique empilé",
            "text": "fr/step2.md",
            "verify": [
              {
                "name": "Cette étape n'a pas de vérification pour le moment",
                "file": "verify2-1.sh",
                "hint": "Cette étape n'a pas de vérification pour le moment"
              }
            ]
          },
          {
            "title": "Créer un streamgraph",
            "text": "fr/step3.md",
            "verify": [
              {
                "name": "Cette étape n'a pas de vérification pour le moment",
                "file": "verify3-1.sh",
                "hint": "Cette étape n'a pas de vérification pour le moment"
              }
            ]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Matplotlib Stackplots und Streamgraphs",
      "description": "In diesem Lab lernst du, wie du Matplotlib verwendest, um Stackplots und Streamgraphs zu erstellen. Stackplots sind nützlich, wenn du mehrere Datensätze als vertikal übereinander liegende Bereiche visualisieren möchtest. Streamgraphs sind eine Variation von Stackplots, bei denen die Grundlinie des Diagramms nicht bei Null fixiert ist. Stattdessen wird die Grundlinie 'gewackelt', sodass die Bereiche des Diagramms geglättet und ineinander überfließen.",
      "meta": {
        "title": "Matplotlib Stackplots und Streamgraphs | Datenvisualisierung",
        "description": "Lerne, wie du Stackplots und Streamgraphs mit Matplotlib, einer leistungsstarken Datenvisualisierungsbibliothek in Python, erstellst.",
        "keywords": "Matplotlib, Stackplots, Streamgraphs, Datenvisualisierung, Python"
      },
      "details": {
        "steps": [
          {
            "title": "Bibliotheken importieren",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Dieser Schritt hat momentan keine Verifizierung",
                "file": "verify1-1.sh",
                "hint": "Dieser Schritt hat momentan keine Verifizierung"
              }
            ]
          },
          {
            "title": "Stackplot erstellen",
            "text": "de/step2.md",
            "verify": [
              {
                "name": "Dieser Schritt hat momentan keine Verifizierung",
                "file": "verify2-1.sh",
                "hint": "Dieser Schritt hat momentan keine Verifizierung"
              }
            ]
          },
          {
            "title": "Streamgraph erstellen",
            "text": "de/step3.md",
            "verify": [
              {
                "name": "Dieser Schritt hat momentan keine Verifizierung",
                "file": "verify3-1.sh",
                "hint": "Dieser Schritt hat momentan keine Verifizierung"
              }
            ]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "Matplotlibによるスタックプロットとストリームグラフ",
      "description": "この実験では、Matplotlibを使ってスタックプロットとストリームグラフを作成する方法を学びます。スタックプロットは、複数のデータセットを垂直に積み重ねた領域として視覚化する際に便利です。ストリームグラフは、スタックプロットのバリエーションで、プロットの基準線がゼロに固定されない代わりに、基準線が「揺らめいて」プロットの領域が滑らかになり、互いに流れ込むようになっています。",
      "meta": {
        "title": "Matplotlibによるスタックプロットとストリームグラフ | データ可視化",
        "description": "Pythonの強力なデータ可視化ライブラリであるMatplotlibを使って、スタックプロットとストリームグラフを作成する方法を学びましょう。",
        "keywords": "Matplotlib, スタックプロット, ストリームグラフ, データ可視化, Python"
      },
      "details": {
        "steps": [
          {
            "title": "ライブラリのインポート",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "このステップには現在、検証はありません",
                "file": "verify1-1.sh",
                "hint": "このステップには現在、検証はありません"
              }
            ]
          },
          {
            "title": "スタックプロットを作成する",
            "text": "ja/step2.md",
            "verify": [
              {
                "name": "このステップには現在、検証はありません",
                "file": "verify2-1.sh",
                "hint": "このステップには現在、検証はありません"
              }
            ]
          },
          {
            "title": "ストリームグラフを作成する",
            "text": "ja/step3.md",
            "verify": [
              {
                "name": "このステップには現在、検証はありません",
                "file": "verify3-1.sh",
                "hint": "このステップには現在、検証はありません"
              }
            ]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Stackplot и Streamgraph в Matplotlib",
      "description": "В этом практическом занятии вы научитесь использовать Matplotlib для создания stackplot и streamgraph. Stackplot полезен, когда нужно визуализировать несколько наборов данных в виде вертикально наложенных областей. Streamgraph - это модификация stackplot, в которой базовая линия графика не фиксируется в нуле. Вместо этого базовая линия «колеблется», чтобы области графика были сглажены и плавно переходили друг в друга.",
      "meta": {
        "title": "Stackplot и Streamgraph в Matplotlib | Визуализация данных",
        "description": "Изучите, как создавать stackplot и streamgraph с использованием Matplotlib, мощной библиотеки для визуализации данных в Python.",
        "keywords": "Matplotlib, Stackplot, Streamgraph, Визуализация данных, Python"
      },
      "details": {
        "steps": [
          {
            "title": "Импортировать библиотеки",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "На данный момент этот шаг не имеет проверки",
                "file": "verify1-1.sh",
                "hint": "На данный момент этот шаг не имеет проверки"
              }
            ]
          },
          {
            "title": "Создать стековую диаграмму",
            "text": "ru/step2.md",
            "verify": [
              {
                "name": "На данный момент этот шаг не имеет проверки",
                "file": "verify2-1.sh",
                "hint": "На данный момент этот шаг не имеет проверки"
              }
            ]
          },
          {
            "title": "Создать стримграфику",
            "text": "ru/step3.md",
            "verify": [
              {
                "name": "На данный момент этот шаг не имеет проверки",
                "file": "verify3-1.sh",
                "hint": "На данный момент этот шаг не имеет проверки"
              }
            ]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    }
  ]
}
