{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Matplotlib Colormap Normalization",
  "description": "In data visualization, colormaps are used to represent numerical data through color. However, sometimes the data distribution may be nonlinear, which can make it difficult to discern the details of the data. In such cases, colormap normalization can be used to map colormaps onto data in nonlinear ways to help visualize the data more accurately. Matplotlib provides several normalization methods, including SymLogNorm and AsinhNorm, which can be used to normalize colormaps. This lab will demonstrate how to use SymLogNorm and AsinhNorm to map colormaps onto nonlinear data.",
  "meta": {
    "title": "Matplotlib Colormap Normalization: Visualizing Nonlinear Data",
    "description": "Explore techniques to map colormaps onto nonlinear data using Matplotlib's SymLogNorm and AsinhNorm normalization methods.",
    "keywords": "python playground, matplotlib, python, normalization, data visualization, colormap, symlognorm"
  },
  "difficulty": "Beginner",
  "time": 20,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Import Required Libraries",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "This step has no verification at the moment",
            "file": "verify1-1.sh",
            "hint": "This step has no verification at the moment"
          }
        ],
        "skills": [
          "matplotlib/figures_axes",
          "matplotlib/importing_matplotlib",
          "python/data_visualization",
          "python/importing_modules",
          "python/numerical_computing"
        ]
      },
      {
        "title": "Create Synthetic Data",
        "text": "en/step2.md",
        "verify": [
          {
            "name": "This step has no verification at the moment",
            "file": "verify2-1.sh",
            "hint": "This step has no verification at the moment"
          }
        ],
        "skills": [
          "python/build_in_functions",
          "python/dictionaries",
          "python/function_definition",
          "python/lists",
          "python/numeric_types",
          "python/tuples",
          "python/variables_data_types"
        ]
      },
      {
        "title": "Apply SymLogNorm",
        "text": "en/step3.md",
        "verify": [
          {
            "name": "This step has no verification at the moment",
            "file": "verify3-1.sh",
            "hint": "This step has no verification at the moment"
          }
        ],
        "skills": ["python/booleans", "python/lists", "python/tuples"]
      },
      {
        "title": "Apply AsinhNorm",
        "text": "en/step4.md",
        "verify": [
          {
            "name": "This step has no verification at the moment",
            "file": "verify4-1.sh",
            "hint": "This step has no verification at the moment"
          }
        ],
        "skills": ["python/booleans", "python/lists", "python/tuples"]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    },
    "assets": {
      "host01": [
        {
          "file": "colormap-normalizations-symlognorm.ipynb",
          "target": "/home/labex/project",
          "chmod": "ugo+rwx"
        }
      ]
    }
  },
  "backend": {
    "imageid": "jupyter-ubuntu:2204"
  },
  "contributors": ["huduo0812"],
  "license": {
    "name": "BSD 3-Clause",
    "url": "https://github.com/matplotlib/matplotlib/tree/main/LICENSE",
    "repo": "https://github.com/matplotlib/matplotlib"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "Matplotlib 颜色映射归一化",
      "description": "在数据可视化中，颜色映射用于通过颜色表示数值数据。然而，有时数据分布可能是非线性的，这可能会使辨别数据细节变得困难。在这种情况下，可以使用颜色映射归一化以非线性方式将颜色映射应用于数据，从而更准确地可视化数据。Matplotlib提供了几种归一化方法，包括SymLogNorm和AsinhNorm，可用于归一化颜色映射。本实验将演示如何使用SymLogNorm和AsinhNorm将颜色映射应用于非线性数据。",
      "meta": {
        "title": "Matplotlib颜色映射归一化：可视化非线性数据",
        "description": "探索使用Matplotlib的SymLogNorm和AsinhNorm归一化方法将颜色映射应用于非线性数据的技术。",
        "keywords": "Python实践, Matplotlib, Python, 归一化, 数据可视化, 颜色映射, SymLogNorm"
      },
      "details": {
        "steps": [
          {
            "title": "导入所需的库",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "此步骤目前没有验证",
                "file": "verify1-1.sh",
                "hint": "此步骤目前没有验证"
              }
            ]
          },
          {
            "title": "创建合成数据",
            "text": "zh/step2.md",
            "verify": [
              {
                "name": "此步骤目前没有验证",
                "file": "verify2-1.sh",
                "hint": "此步骤目前没有验证"
              }
            ]
          },
          {
            "title": "应用对称对数归一化",
            "text": "zh/step3.md",
            "verify": [
              {
                "name": "此步骤目前没有验证",
                "file": "verify3-1.sh",
                "hint": "此步骤目前没有验证"
              }
            ]
          },
          {
            "title": "应用反双曲正弦归一化",
            "text": "zh/step4.md",
            "verify": [
              {
                "name": "此步骤目前没有验证",
                "file": "verify4-1.sh",
                "hint": "此步骤目前没有验证"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Normalización de mapas de colores de Matplotlib",
      "description": "En la visualización de datos, los mapas de colores se utilizan para representar datos numéricos a través del color. Sin embargo, a veces la distribución de los datos puede ser no lineal, lo que puede dificultar la discernión de los detalles de los datos. En tales casos, la normalización de mapas de colores se puede utilizar para mapear mapas de colores a los datos de manera no lineal para ayudar a visualizar los datos con mayor precisión. Matplotlib proporciona varios métodos de normalización, incluyendo SymLogNorm y AsinhNorm, que se pueden utilizar para normalizar mapas de colores. Este laboratorio demostrará cómo utilizar SymLogNorm y AsinhNorm para mapear mapas de colores a datos no lineales.",
      "meta": {
        "title": "Normalización de mapas de colores de Matplotlib: Visualización de datos no lineales",
        "description": "Explora técnicas para mapear mapas de colores a datos no lineales utilizando los métodos de normalización SymLogNorm y AsinhNorm de Matplotlib.",
        "keywords": "python playground, matplotlib, python, normalización, visualización de datos, mapa de colores, symlognorm"
      },
      "details": {
        "steps": [
          {
            "title": "Importar las bibliotecas necesarias",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Este paso no tiene verificaciones en este momento",
                "file": "verify1-1.sh",
                "hint": "Este paso no tiene verificaciones en este momento"
              }
            ]
          },
          {
            "title": "Crear datos sintéticos",
            "text": "es/step2.md",
            "verify": [
              {
                "name": "Este paso no tiene verificaciones en este momento",
                "file": "verify2-1.sh",
                "hint": "Este paso no tiene verificaciones en este momento"
              }
            ]
          },
          {
            "title": "Aplicar SymLogNorm",
            "text": "es/step3.md",
            "verify": [
              {
                "name": "Este paso no tiene verificaciones en este momento",
                "file": "verify3-1.sh",
                "hint": "Este paso no tiene verificaciones en este momento"
              }
            ]
          },
          {
            "title": "Aplicar AsinhNorm",
            "text": "es/step4.md",
            "verify": [
              {
                "name": "Este paso no tiene verificaciones en este momento",
                "file": "verify4-1.sh",
                "hint": "Este paso no tiene verificaciones en este momento"
              }
            ]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Normalisation des cartes de couleurs de Matplotlib",
      "description": "Dans la visualisation de données, les cartes de couleurs sont utilisées pour représenter des données numériques par la couleur. Cependant, parfois, la distribution des données peut être non linéaire, ce qui peut rendre difficile de discerner les détails des données. Dans de tels cas, la normalisation des cartes de couleurs peut être utilisée pour projeter les cartes de couleurs sur les données de manière non linéaire pour aider à visualiser les données plus précisément. Matplotlib fournit plusieurs méthodes de normalisation, y compris SymLogNorm et AsinhNorm, qui peuvent être utilisées pour normaliser les cartes de couleurs. Ce laboratoire montrera comment utiliser SymLogNorm et AsinhNorm pour projeter les cartes de couleurs sur des données non linéaires.",
      "meta": {
        "title": "Normalisation des cartes de couleurs de Matplotlib : Visualisation de données non linéaires",
        "description": "Explorez les techniques pour projeter les cartes de couleurs sur des données non linéaires en utilisant les méthodes de normalisation SymLogNorm et AsinhNorm de Matplotlib.",
        "keywords": "python playground, matplotlib, python, normalisation, visualisation de données, carte de couleurs, symlognorm"
      },
      "details": {
        "steps": [
          {
            "title": "Importer les bibliothèques requises",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Cette étape n'a pas de vérification pour le moment",
                "file": "verify1-1.sh",
                "hint": "Cette étape n'a pas de vérification pour le moment"
              }
            ]
          },
          {
            "title": "Créer des données synthétiques",
            "text": "fr/step2.md",
            "verify": [
              {
                "name": "Cette étape n'a pas de vérification pour le moment",
                "file": "verify2-1.sh",
                "hint": "Cette étape n'a pas de vérification pour le moment"
              }
            ]
          },
          {
            "title": "Appliquer SymLogNorm",
            "text": "fr/step3.md",
            "verify": [
              {
                "name": "Cette étape n'a pas de vérification pour le moment",
                "file": "verify3-1.sh",
                "hint": "Cette étape n'a pas de vérification pour le moment"
              }
            ]
          },
          {
            "title": "Appliquer AsinhNorm",
            "text": "fr/step4.md",
            "verify": [
              {
                "name": "Cette étape n'a pas de vérification pour le moment",
                "file": "verify4-1.sh",
                "hint": "Cette étape n'a pas de vérification pour le moment"
              }
            ]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Matplotlib Farbskalen-Normalisierung",
      "description": "Beim Datenvisualisierung werden Farbskalen verwendet, um numerische Daten durch Farben darzustellen. Manchmal kann die Datenverteilung jedoch nichtlinear sein, was es schwierig macht, die Details der Daten zu erkennen. In solchen Fällen kann die Normalisierung der Farbskalen verwendet werden, um Farbskalen auf die Daten auf nichtlineare Weise abzubilden, um die Daten genauer visualisieren zu helfen. Matplotlib bietet mehrere Normalisierungsmethoden, einschließlich SymLogNorm und AsinhNorm, die zur Normalisierung von Farbskalen verwendet werden können. In diesem Lab wird gezeigt, wie man SymLogNorm und AsinhNorm verwendet, um Farbskalen auf nichtlineare Daten abzubilden.",
      "meta": {
        "title": "Matplotlib Farbskalen-Normalisierung: Visualisierung von nichtlinearen Daten",
        "description": "Erkunden Sie Techniken, um Farbskalen auf nichtlineare Daten abzubilden, indem Sie die Normalisierungsmethoden SymLogNorm und AsinhNorm von Matplotlib verwenden.",
        "keywords": "python playground, matplotlib, python, Normalisierung, Datenvisualisierung, Farbskala, symlognorm"
      },
      "details": {
        "steps": [
          {
            "title": "Importieren der erforderlichen Bibliotheken",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Dieser Schritt hat momentan keine Verifizierung",
                "file": "verify1-1.sh",
                "hint": "Dieser Schritt hat momentan keine Verifizierung"
              }
            ]
          },
          {
            "title": "Synthetische Daten erstellen",
            "text": "de/step2.md",
            "verify": [
              {
                "name": "Dieser Schritt hat momentan keine Verifizierung",
                "file": "verify2-1.sh",
                "hint": "Dieser Schritt hat momentan keine Verifizierung"
              }
            ]
          },
          {
            "title": "SymLogNorm anwenden",
            "text": "de/step3.md",
            "verify": [
              {
                "name": "Dieser Schritt hat momentan keine Verifizierung",
                "file": "verify3-1.sh",
                "hint": "Dieser Schritt hat momentan keine Verifizierung"
              }
            ]
          },
          {
            "title": "AsinhNorm anwenden",
            "text": "de/step4.md",
            "verify": [
              {
                "name": "Dieser Schritt hat momentan keine Verifizierung",
                "file": "verify4-1.sh",
                "hint": "Dieser Schritt hat momentan keine Verifizierung"
              }
            ]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "Matplotlibカラーマップの正規化",
      "description": "データ可視化において、カラーマップは数値データを色で表すために使用されます。しかし、時にはデータの分布が非線形になることがあり、これがデータの詳細を識別するのを困難にします。そのような場合、カラーマップの正規化を使って、カラーマップを非線形な方法でデータにマッピングすることができ、データをより正確に可視化するのに役立ちます。Matplotlibはいくつかの正規化方法を提供しており、SymLogNormやAsinhNormなどがあり、これらを使ってカラーマップを正規化することができます。この実験では、SymLogNormとAsinhNormを使ってカラーマップを非線形データにマッピングする方法を示します。",
      "meta": {
        "title": "Matplotlibカラーマップの正規化：非線形データの可視化",
        "description": "MatplotlibのSymLogNormとAsinhNorm正規化方法を使って、カラーマップを非線形データにマッピングする技術を探求します。",
        "keywords": "pythonプレイグラウンド, matplotlib, python, 正規化, データ可視化, カラーマップ, symlognorm"
      },
      "details": {
        "steps": [
          {
            "title": "必要なライブラリをインポートする",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "このステップでは現在検証はありません",
                "file": "verify1-1.sh",
                "hint": "このステップでは現在検証はありません"
              }
            ]
          },
          {
            "title": "合成データを作成する",
            "text": "ja/step2.md",
            "verify": [
              {
                "name": "このステップでは現在検証はありません",
                "file": "verify2-1.sh",
                "hint": "このステップでは現在検証はありません"
              }
            ]
          },
          {
            "title": "SymLogNormを適用する",
            "text": "ja/step3.md",
            "verify": [
              {
                "name": "このステップでは現在検証はありません",
                "file": "verify3-1.sh",
                "hint": "このステップでは現在検証はありません"
              }
            ]
          },
          {
            "title": "AsinhNormを適用する",
            "text": "ja/step4.md",
            "verify": [
              {
                "name": "このステップでは現在検証はありません",
                "file": "verify4-1.sh",
                "hint": "このステップでは現在検証はありません"
              }
            ]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Нормализация цветовых карты Matplotlib",
      "description": "В визуализации данных цветовые карты используются для представления числовых данных с помощью цвета. Однако иногда распределение данных может быть нелинейным, что может затруднить различение деталей в данных. В таких случаях нормализация цветовых карты может быть использована для отображения цветовых карты на данные нелинейным способом, чтобы помочь более точно визуализировать данные. Matplotlib предоставляет несколько методов нормализации, включая SymLogNorm и AsinhNorm, которые можно использовать для нормализации цветовых карты. В этом практическом занятии будет показано, как использовать SymLogNorm и AsinhNorm для отображения цветовых карты на нелинейные данные.",
      "meta": {
        "title": "Нормализация цветовых карты Matplotlib: Визуализация нелинейных данных",
        "description": "Изучите методы для отображения цветовых карты на нелинейные данные с использованием методов нормализации SymLogNorm и AsinhNorm Matplotlib.",
        "keywords": "python playground, matplotlib, python, нормализация, визуализация данных, цветовая карта, symlognorm"
      },
      "details": {
        "steps": [
          {
            "title": "Импортировать необходимые библиотеки",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "На данный момент эта стадия не имеет проверки",
                "file": "verify1-1.sh",
                "hint": "На данный момент эта стадия не имеет проверки"
              }
            ]
          },
          {
            "title": "Создать синтетические данные",
            "text": "ru/step2.md",
            "verify": [
              {
                "name": "На данный момент эта стадия не имеет проверки",
                "file": "verify2-1.sh",
                "hint": "На данный момент эта стадия не имеет проверки"
              }
            ]
          },
          {
            "title": "Применить SymLogNorm",
            "text": "ru/step3.md",
            "verify": [
              {
                "name": "На данный момент эта стадия не имеет проверки",
                "file": "verify3-1.sh",
                "hint": "На данный момент эта стадия не имеет проверки"
              }
            ]
          },
          {
            "title": "Применить AsinhNorm",
            "text": "ru/step4.md",
            "verify": [
              {
                "name": "На данный момент эта стадия не имеет проверки",
                "file": "verify4-1.sh",
                "hint": "На данный момент эта стадия не имеет проверки"
              }
            ]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    }
  ]
}
