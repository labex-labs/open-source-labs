{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Hexagonal Binned Plot",
  "description": "This tutorial will guide you through creating a hexagonal binned plot using Matplotlib in Python. Hexagonal binned plots are 2D histogram plots in which the bins are hexagons and the color represents the number of data points within each bin. They are useful for visualizing the distribution of large datasets.",
  "meta": {
    "title": "Mastering Hexagonal Binned Plots in Python",
    "description": "Learn how to create stunning hexagonal binned plots using Matplotlib in Python, a powerful visualization tool for large datasets.",
    "keywords": "matplotlib, python, hexagonal binned plot, data visualization, 2d histogram"
  },
  "difficulty": "Beginner",
  "time": 25,
  "hidden": true,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Import Libraries",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "This step has no verification at the moment",
            "file": "verify1-1.sh",
            "hint": "This step has no verification at the moment"
          }
        ],
        "skills": [
          "matplotlib/figures_axes",
          "matplotlib/importing_matplotlib",
          "python/data_visualization",
          "python/importing_modules",
          "python/numerical_computing"
        ]
      },
      {
        "title": "Generate Data",
        "text": "en/step2.md",
        "verify": [
          {
            "name": "This step has no verification at the moment",
            "file": "verify2-1.sh",
            "hint": "This step has no verification at the moment"
          }
        ],
        "skills": [
          "python/build_in_functions",
          "python/math_random",
          "python/standard_libraries"
        ]
      },
      {
        "title": "Create the Hexagonal Binned Plot",
        "text": "en/step3.md",
        "verify": [
          {
            "name": "This step has no verification at the moment",
            "file": "verify3-1.sh",
            "hint": "This step has no verification at the moment"
          }
        ],
        "skills": [
          "python/build_in_functions",
          "python/data_collections",
          "python/tuples",
          "python/variables_data_types"
        ]
      },
      {
        "title": "Add a Logarithmic Color Scale",
        "text": "en/step4.md",
        "verify": [
          {
            "name": "This step has no verification at the moment",
            "file": "verify4-1.sh",
            "hint": "This step has no verification at the moment"
          }
        ],
        "skills": [
          "python/build_in_functions",
          "python/data_collections",
          "python/tuples",
          "python/variables_data_types"
        ]
      },
      {
        "title": "Display the Plot",
        "text": "en/step5.md",
        "verify": [
          {
            "name": "This step has no verification at the moment",
            "file": "verify5-1.sh",
            "hint": "This step has no verification at the moment"
          }
        ],
        "skills": []
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    },
    "assets": {
      "host01": [
        {
          "file": "hexbin-demo.ipynb",
          "target": "/home/labex/project",
          "chmod": "ugo+rwx"
        }
      ]
    }
  },
  "backend": {
    "imageid": "jupyter-ubuntu:2204"
  },
  "contributors": [],
  "license": {
    "name": "BSD 3-Clause",
    "url": "https://github.com/matplotlib/matplotlib/tree/main/LICENSE",
    "repo": "https://github.com/matplotlib/matplotlib"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "六边形分箱图",
      "description": "本教程将指导你使用 Python 中的 Matplotlib 创建六边形分箱图。六边形分箱图是一种二维直方图，其中的箱是六边形，颜色表示每个箱内的数据点数量。它们对于可视化大型数据集的分布很有用。",
      "meta": {
        "title": "精通 Python 中的六边形分箱图",
        "description": "学习如何使用 Python 中的 Matplotlib 创建令人惊叹的六边形分箱图，这是一种用于大型数据集的强大可视化工具。",
        "keywords": "Matplotlib, Python, 六边形分箱图，数据可视化，二维直方图"
      },
      "details": {
        "steps": [
          {
            "title": "导入库",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "此步骤目前没有验证",
                "file": "verify1-1.sh",
                "hint": "此步骤目前没有验证"
              }
            ]
          },
          {
            "title": "生成数据",
            "text": "zh/step2.md",
            "verify": [
              {
                "name": "此步骤目前没有验证",
                "file": "verify2-1.sh",
                "hint": "此步骤目前没有验证"
              }
            ]
          },
          {
            "title": "创建六边形分箱图",
            "text": "zh/step3.md",
            "verify": [
              {
                "name": "此步骤目前没有验证",
                "file": "verify3-1.sh",
                "hint": "此步骤目前没有验证"
              }
            ]
          },
          {
            "title": "添加对数颜色刻度",
            "text": "zh/step4.md",
            "verify": [
              {
                "name": "此步骤目前没有验证",
                "file": "verify4-1.sh",
                "hint": "此步骤目前没有验证"
              }
            ]
          },
          {
            "title": "显示图表",
            "text": "zh/step5.md",
            "verify": [
              {
                "name": "此步骤目前没有验证",
                "file": "verify5-1.sh",
                "hint": "此步骤目前没有验证"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Diagrama de contenedores hexagonales",
      "description": "Este tutorial te guiará a través de la creación de un diagrama de contenedores hexagonales utilizando Matplotlib en Python. Los diagramas de contenedores hexagonales son diagramas de histograma bidimensionales en los que los contenedores son hexágonos y el color representa la cantidad de puntos de datos dentro de cada contenedor. Son útiles para visualizar la distribución de grandes conjuntos de datos.",
      "meta": {
        "title": "Dominando los diagramas de contenedores hexagonales en Python",
        "description": "Aprende cómo crear impresionantes diagramas de contenedores hexagonales utilizando Matplotlib en Python, una herramienta de visualización poderosa para grandes conjuntos de datos.",
        "keywords": "matplotlib, python, diagrama de contenedores hexagonales, visualización de datos, histograma bidimensional"
      },
      "details": {
        "steps": [
          {
            "title": "Importar bibliotecas",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Este paso no tiene verificación en este momento",
                "file": "verify1-1.sh",
                "hint": "Este paso no tiene verificación en este momento"
              }
            ]
          },
          {
            "title": "Generar datos",
            "text": "es/step2.md",
            "verify": [
              {
                "name": "Este paso no tiene verificación en este momento",
                "file": "verify2-1.sh",
                "hint": "Este paso no tiene verificación en este momento"
              }
            ]
          },
          {
            "title": "Crear el diagrama de contenedores hexagonales",
            "text": "es/step3.md",
            "verify": [
              {
                "name": "Este paso no tiene verificación en este momento",
                "file": "verify3-1.sh",
                "hint": "Este paso no tiene verificación en este momento"
              }
            ]
          },
          {
            "title": "Agregar una escala de color logarítmica",
            "text": "es/step4.md",
            "verify": [
              {
                "name": "Este paso no tiene verificación en este momento",
                "file": "verify4-1.sh",
                "hint": "Este paso no tiene verificación en este momento"
              }
            ]
          },
          {
            "title": "Mostrar el gráfico",
            "text": "es/step5.md",
            "verify": [
              {
                "name": "Este paso no tiene verificación en este momento",
                "file": "verify5-1.sh",
                "hint": "Este paso no tiene verificación en este momento"
              }
            ]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Graphique à barres hexagonales",
      "description": "Ce tutoriel vous guidera tout au long de la création d'un graphique à barres hexagonales à l'aide de Matplotlib en Python. Les graphiques à barres hexagonales sont des graphiques d'histogramme 2D dans lesquels les barres sont des hexagones et la couleur représente le nombre de points de données dans chaque barre. Ils sont utiles pour visualiser la distribution de grands ensembles de données.",
      "meta": {
        "title": "Maîtriser les graphiques à barres hexagonales en Python",
        "description": "Découvrez comment créer des graphiques à barres hexagonales incroyables à l'aide de Matplotlib en Python, un outil de visualisation puissant pour les grands ensembles de données.",
        "keywords": "matplotlib, python, graphique à barres hexagonales, visualisation de données, histogramme 2D"
      },
      "details": {
        "steps": [
          {
            "title": "Importer les bibliothèques",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Cette étape n'a pas de vérification pour le moment",
                "file": "verify1-1.sh",
                "hint": "Cette étape n'a pas de vérification pour le moment"
              }
            ]
          },
          {
            "title": "Générer des données",
            "text": "fr/step2.md",
            "verify": [
              {
                "name": "Cette étape n'a pas de vérification pour le moment",
                "file": "verify2-1.sh",
                "hint": "Cette étape n'a pas de vérification pour le moment"
              }
            ]
          },
          {
            "title": "Créer le graphique à barres hexagonales",
            "text": "fr/step3.md",
            "verify": [
              {
                "name": "Cette étape n'a pas de vérification pour le moment",
                "file": "verify3-1.sh",
                "hint": "Cette étape n'a pas de vérification pour le moment"
              }
            ]
          },
          {
            "title": "Ajouter une échelle de couleur logarithmique",
            "text": "fr/step4.md",
            "verify": [
              {
                "name": "Cette étape n'a pas de vérification pour le moment",
                "file": "verify4-1.sh",
                "hint": "Cette étape n'a pas de vérification pour le moment"
              }
            ]
          },
          {
            "title": "Afficher le graphique",
            "text": "fr/step5.md",
            "verify": [
              {
                "name": "Cette étape n'a pas de vérification pour le moment",
                "file": "verify5-1.sh",
                "hint": "Cette étape n'a pas de vérification pour le moment"
              }
            ]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Hexagonales Binned-Plot",
      "description": "In diesem Tutorial wird Ihnen die Erstellung eines hexagonalen Binned-Plots mit Matplotlib in Python gezeigt. Hexagonale Binned-Plots sind 2D-Histogrammplots, bei denen die Bins Hexagone sind und die Farbe die Anzahl der Datenpunkte in jedem Bin repräsentiert. Sie eignen sich zur Visualisierung der Verteilung großer Datensätze.",
      "meta": {
        "title": "Meisterhaftigkeit bei hexagonalen Binned-Plots in Python",
        "description": "Lernen Sie, wie Sie mit Matplotlib in Python atemberaubende hexagonale Binned-Plots erstellen, ein leistungsstarkes Visualisierungstool für große Datensätze.",
        "keywords": "matplotlib, python, hexagonales Binned-Plot, Datenvisualisierung, 2D-Histogramm"
      },
      "details": {
        "steps": [
          {
            "title": "Bibliotheken importieren",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Dieser Schritt hat momentan keine Überprüfung",
                "file": "verify1-1.sh",
                "hint": "Dieser Schritt hat momentan keine Überprüfung"
              }
            ]
          },
          {
            "title": "Daten generieren",
            "text": "de/step2.md",
            "verify": [
              {
                "name": "Dieser Schritt hat momentan keine Überprüfung",
                "file": "verify2-1.sh",
                "hint": "Dieser Schritt hat momentan keine Überprüfung"
              }
            ]
          },
          {
            "title": "Den hexagonalen Binned-Plot erstellen",
            "text": "de/step3.md",
            "verify": [
              {
                "name": "Dieser Schritt hat momentan keine Überprüfung",
                "file": "verify3-1.sh",
                "hint": "Dieser Schritt hat momentan keine Überprüfung"
              }
            ]
          },
          {
            "title": "Eine logarithmische Farbskala hinzufügen",
            "text": "de/step4.md",
            "verify": [
              {
                "name": "Dieser Schritt hat momentan keine Überprüfung",
                "file": "verify4-1.sh",
                "hint": "Dieser Schritt hat momentan keine Überprüfung"
              }
            ]
          },
          {
            "title": "Den Plot anzeigen",
            "text": "de/step5.md",
            "verify": [
              {
                "name": "Dieser Schritt hat momentan keine Überprüfung",
                "file": "verify5-1.sh",
                "hint": "Dieser Schritt hat momentan keine Überprüfung"
              }
            ]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "六角形のビン付きプロット",
      "description": "このチュートリアルでは、Python の Matplotlib を使って六角形のビン付きプロットを作成する方法を案内します。六角形のビン付きプロットは、ビンが六角形で、色が各ビン内のデータポイントの数を表す 2 次元ヒストグラムプロットです。大規模なデータセットの分布を視覚化するのに役立ちます。",
      "meta": {
        "title": "Python における六角形のビン付きプロットのマスター",
        "description": "強力な大規模データセットの可視化ツールである Python の Matplotlib を使って、見事な六角形のビン付きプロットを作成する方法を学びましょう。",
        "keywords": "matplotlib, python, 六角形のビン付きプロット，データ可視化，2 次元ヒストグラム"
      },
      "details": {
        "steps": [
          {
            "title": "ライブラリをインポートする",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "このステップには現在検証はありません",
                "file": "verify1-1.sh",
                "hint": "このステップには現在検証はありません"
              }
            ]
          },
          {
            "title": "データを生成する",
            "text": "ja/step2.md",
            "verify": [
              {
                "name": "このステップには現在検証はありません",
                "file": "verify2-1.sh",
                "hint": "このステップには現在検証はありません"
              }
            ]
          },
          {
            "title": "六角形のビン付きプロットを作成する",
            "text": "ja/step3.md",
            "verify": [
              {
                "name": "このステップには現在検証はありません",
                "file": "verify3-1.sh",
                "hint": "このステップには現在検証はありません"
              }
            ]
          },
          {
            "title": "対数カラースケールを追加する",
            "text": "ja/step4.md",
            "verify": [
              {
                "name": "このステップには現在検証はありません",
                "file": "verify4-1.sh",
                "hint": "このステップには現在検証はありません"
              }
            ]
          },
          {
            "title": "プロットを表示する",
            "text": "ja/step5.md",
            "verify": [
              {
                "name": "このステップには現在検証はありません",
                "file": "verify5-1.sh",
                "hint": "このステップには現在検証はありません"
              }
            ]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Шестиугольная гистограмма",
      "description": "В этом уроке вы узнаете, как создать шестиугольную гистограмму с использованием Matplotlib в Python. Шестиугольные гистограммы - это двумерные гистограммы, в которых ячейки (бины) представляют собой шестиугольники, а цвет отражает количество точек данных внутри каждой ячейки. Они полезны для визуализации распределения больших наборов данных.",
      "meta": {
        "title": "Мастерство шестиугольных гистограмм в Python",
        "description": "Изучите, как создавать потрясающие шестиугольные гистограммы с использованием Matplotlib в Python, мощного инструмента визуализации для больших наборов данных.",
        "keywords": "matplotlib, python, шестиугольная гистограмма, визуализация данных, двумерная гистограмма"
      },
      "details": {
        "steps": [
          {
            "title": "Импортировать библиотеки",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "На данный момент эта стадия не имеет проверки",
                "file": "verify1-1.sh",
                "hint": "На данный момент эта стадия не имеет проверки"
              }
            ]
          },
          {
            "title": "Сгенерировать данные",
            "text": "ru/step2.md",
            "verify": [
              {
                "name": "На данный момент эта стадия не имеет проверки",
                "file": "verify2-1.sh",
                "hint": "На данный момент эта стадия не имеет проверки"
              }
            ]
          },
          {
            "title": "Создать шестиугольную гистограмму",
            "text": "ru/step3.md",
            "verify": [
              {
                "name": "На данный момент эта стадия не имеет проверки",
                "file": "verify3-1.sh",
                "hint": "На данный момент эта стадия не имеет проверки"
              }
            ]
          },
          {
            "title": "Добавить логарифмическую шкалу цветов",
            "text": "ru/step4.md",
            "verify": [
              {
                "name": "На данный момент эта стадия не имеет проверки",
                "file": "verify4-1.sh",
                "hint": "На данный момент эта стадия не имеет проверки"
              }
            ]
          },
          {
            "title": "Показать график",
            "text": "ru/step5.md",
            "verify": [
              {
                "name": "На данный момент эта стадия не имеет проверки",
                "file": "verify5-1.sh",
                "hint": "На данный момент эта стадия не имеет проверки"
              }
            ]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    },
    {
      "lang": "ko",
      "title": "육각형 빈 플롯",
      "description": "이 튜토리얼은 Python 의 Matplotlib 을 사용하여 육각형 빈 플롯을 만드는 과정을 안내합니다. 육각형 빈 플롯은 빈이 육각형이고 색상이 각 빈 내의 데이터 포인트 수를 나타내는 2D 히스토그램 플롯입니다. 대규모 데이터 세트의 분포를 시각화하는 데 유용합니다.",
      "meta": {
        "title": "Python 에서 육각형 빈 플롯 마스터하기 - Matplotlib 튜토리얼",
        "description": "Python 의 강력한 시각화 도구인 Matplotlib 을 사용하여 멋진 육각형 빈 플롯을 만드는 방법을 알아보세요. 대규모 데이터 세트를 위한 효과적인 시각화 기법을 익히세요.",
        "keywords": "matplotlib, 파이썬, 육각형 빈 플롯, 데이터 시각화, 2D 히스토그램, Matplotlib 튜토리얼, 파이썬 시각화"
      },
      "details": {
        "steps": [
          {
            "title": "라이브러리 가져오기",
            "text": "ko/step1.md",
            "verify": [
              {
                "name": "현재 이 단계는 검증이 없습니다.",
                "file": "verify1-1.sh",
                "hint": "현재 이 단계는 검증이 없습니다."
              }
            ]
          },
          {
            "title": "데이터 생성",
            "text": "ko/step2.md",
            "verify": [
              {
                "name": "현재 이 단계는 검증이 없습니다.",
                "file": "verify2-1.sh",
                "hint": "현재 이 단계는 검증이 없습니다."
              }
            ]
          },
          {
            "title": "육각형 빈 플롯 생성",
            "text": "ko/step3.md",
            "verify": [
              {
                "name": "현재 이 단계는 검증이 없습니다.",
                "file": "verify3-1.sh",
                "hint": "현재 이 단계는 검증이 없습니다."
              }
            ]
          },
          {
            "title": "로그 색상 스케일 추가",
            "text": "ko/step4.md",
            "verify": [
              {
                "name": "현재 이 단계는 검증이 없습니다.",
                "file": "verify4-1.sh",
                "hint": "현재 이 단계는 검증이 없습니다."
              }
            ]
          },
          {
            "title": "플롯 표시",
            "text": "ko/step5.md",
            "verify": [
              {
                "name": "현재 이 단계는 검증이 없습니다.",
                "file": "verify5-1.sh",
                "hint": "현재 이 단계는 검증이 없습니다."
              }
            ]
          }
        ],
        "intro": {
          "text": "ko/intro.md",
          "title": "소개"
        },
        "finish": {
          "text": "ko/finish.md",
          "title": "요약"
        }
      }
    },
    {
      "lang": "pt",
      "title": "Gráfico de Binning Hexagonal",
      "description": "Este tutorial irá guiá-lo através da criação de um gráfico de binning hexagonal usando Matplotlib em Python. Gráficos de binning hexagonal são histogramas 2D nos quais os bins são hexágonos e a cor representa o número de pontos de dados dentro de cada bin. Eles são úteis para visualizar a distribuição de grandes conjuntos de dados.",
      "meta": {
        "title": "Dominando Gráficos de Binning Hexagonal em Python: Guia Completo",
        "description": "Aprenda a criar gráficos de binning hexagonal impressionantes usando Matplotlib em Python, uma ferramenta de visualização poderosa para grandes conjuntos de dados. Descubra como visualizar dados complexos de forma clara e eficaz.",
        "keywords": "matplotlib, python, gráfico de binning hexagonal, visualização de dados, histograma 2D, análise de dados, gráficos em Python"
      },
      "details": {
        "steps": [
          {
            "title": "Importar Bibliotecas",
            "text": "pt/step1.md",
            "verify": [
              {
                "name": "Este passo não possui verificação no momento",
                "file": "verify1-1.sh",
                "hint": "Este passo não possui verificação no momento"
              }
            ]
          },
          {
            "title": "Gerar Dados",
            "text": "pt/step2.md",
            "verify": [
              {
                "name": "Este passo não possui verificação no momento",
                "file": "verify2-1.sh",
                "hint": "Este passo não possui verificação no momento"
              }
            ]
          },
          {
            "title": "Criar o Gráfico Hexagonal Binned",
            "text": "pt/step3.md",
            "verify": [
              {
                "name": "Este passo não possui verificação no momento",
                "file": "verify3-1.sh",
                "hint": "Este passo não possui verificação no momento"
              }
            ]
          },
          {
            "title": "Adicionar uma Escala de Cores Logarítmica",
            "text": "pt/step4.md",
            "verify": [
              {
                "name": "Este passo não possui verificação no momento",
                "file": "verify4-1.sh",
                "hint": "Este passo não possui verificação no momento"
              }
            ]
          },
          {
            "title": "Exibir o Gráfico",
            "text": "pt/step5.md",
            "verify": [
              {
                "name": "Este passo não possui verificação no momento",
                "file": "verify5-1.sh",
                "hint": "Este passo não possui verificação no momento"
              }
            ]
          }
        ],
        "intro": {
          "text": "pt/intro.md",
          "title": "Introdução"
        },
        "finish": {
          "text": "pt/finish.md",
          "title": "Resumo"
        }
      }
    }
  ]
}
