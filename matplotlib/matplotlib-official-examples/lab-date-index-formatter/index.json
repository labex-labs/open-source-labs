{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Custom Tick Formatter for Time Series",
  "description": "When plotting daily data such as financial time series, one often wants to leave out days on which there is no data, such as weekends. This allows the data to be plotted at regular intervals without extra spaces for the days with no data. In this lab, we will learn how to use an 'index formatter' to achieve the desired plot.",
  "meta": {
    "title": "Learn Data Visualization | Financial Time Series Analysis",
    "description": "Explore how to plot daily financial data with missing values using an index formatter in this Python programming tutorial.",
    "keywords": "data visualization, financial time series, Python, Matplotlib, Jupyter Notebook"
  },
  "difficulty": "Beginner",
  "time": 25,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Import Required Libraries and Data",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "This step has no verification at the moment",
            "file": "verify1-1.sh",
            "hint": "This step has no verification at the moment"
          }
        ],
        "skills": [
          "matplotlib/figures_axes",
          "matplotlib/importing_matplotlib",
          "python/comments",
          "python/data_visualization",
          "python/importing_modules",
          "python/lists",
          "python/numerical_computing"
        ]
      },
      {
        "title": "Plotting Data with Default Gaps on Weekends",
        "text": "en/step2.md",
        "verify": [
          {
            "name": "This step has no verification at the moment",
            "file": "verify2-1.sh",
            "hint": "This step has no verification at the moment"
          }
        ],
        "skills": [
          "matplotlib/legend_config",
          "matplotlib/line_plots",
          "python/comments",
          "python/for_loops",
          "python/lists",
          "python/tuples",
          "python/with_statement"
        ]
      },
      {
        "title": "Creating Custom Index Formatter",
        "text": "en/step3.md",
        "verify": [
          {
            "name": "This step has no verification at the moment",
            "file": "verify3-1.sh",
            "hint": "This step has no verification at the moment"
          }
        ],
        "skills": [
          "matplotlib/line_plots",
          "python/build_in_functions",
          "python/catching_exceptions",
          "python/comments",
          "python/date_time",
          "python/function_definition",
          "python/lists",
          "python/standard_libraries",
          "python/tuples"
        ]
      },
      {
        "title": "Using a Callable for Formatter",
        "text": "en/step4.md",
        "verify": [
          {
            "name": "This step has no verification at the moment",
            "file": "verify4-1.sh",
            "hint": "This step has no verification at the moment"
          }
        ],
        "skills": [
          "python/build_in_functions",
          "python/catching_exceptions",
          "python/classes_objects",
          "python/comments",
          "python/constructor",
          "python/default_arguments",
          "python/encapsulation",
          "python/for_loops",
          "python/function_definition",
          "python/lists",
          "python/polymorphism",
          "python/standard_libraries",
          "python/tuples"
        ]
      },
      {
        "title": "Displaying the Plot",
        "text": "en/step5.md",
        "verify": [
          {
            "name": "This step has no verification at the moment",
            "file": "verify5-1.sh",
            "hint": "This step has no verification at the moment"
          }
        ],
        "skills": []
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    },
    "assets": {
      "host01": [
        {
          "file": "date-index-formatter.ipynb",
          "target": "/home/labex/project",
          "chmod": "ugo+rwx"
        }
      ]
    }
  },
  "backend": {
    "imageid": "jupyter-ubuntu:2204"
  },
  "contributors": ["huduo0812"],
  "license": {
    "name": "BSD 3-Clause",
    "url": "https://github.com/matplotlib/matplotlib/tree/main/LICENSE",
    "repo": "https://github.com/matplotlib/matplotlib"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "时间序列的自定义刻度格式化器",
      "description": "在绘制诸如金融时间序列等每日数据时，人们通常希望忽略没有数据的日子，比如周末。这样可以在规则间隔上绘制数据，而无需为无数据的日子留出额外空间。在本实验中，我们将学习如何使用“索引格式化器”来实现所需的绘图。",
      "meta": {
        "title": "学习数据可视化 | 金融时间序列分析",
        "description": "在本 Python 编程教程中，探索如何使用索引格式化器绘制带有缺失值的每日金融数据。",
        "keywords": "数据可视化，金融时间序列，Python, Matplotlib, Jupyter Notebook"
      },
      "details": {
        "steps": [
          {
            "title": "导入所需的库和数据",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "此步骤目前没有验证",
                "file": "verify1-1.sh",
                "hint": "此步骤目前没有验证"
              }
            ]
          },
          {
            "title": "绘制周末有默认间隔的数据",
            "text": "zh/step2.md",
            "verify": [
              {
                "name": "此步骤目前没有验证",
                "file": "verify2-1.sh",
                "hint": "此步骤目前没有验证"
              }
            ]
          },
          {
            "title": "创建自定义索引格式化器",
            "text": "zh/step3.md",
            "verify": [
              {
                "name": "此步骤目前没有验证",
                "file": "verify3-1.sh",
                "hint": "此步骤目前没有验证"
              }
            ]
          },
          {
            "title": "对格式化器使用可调用对象",
            "text": "zh/step4.md",
            "verify": [
              {
                "name": "此步骤目前没有验证",
                "file": "verify4-1.sh",
                "hint": "此步骤目前没有验证"
              }
            ]
          },
          {
            "title": "显示图表",
            "text": "zh/step5.md",
            "verify": [
              {
                "name": "此步骤目前没有验证",
                "file": "verify5-1.sh",
                "hint": "此步骤目前没有验证"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Formateador personalizado de marcas de graduación para series temporales",
      "description": "Al representar datos diarios como series temporales financieras, a menudo se desea omitir los días en los que no hay datos, como los fines de semana. Esto permite representar los datos a intervalos regulares sin espacios adicionales para los días sin datos. En este laboratorio, aprenderemos cómo utilizar un 'formateador de índice' para obtener la gráfica deseada.",
      "meta": {
        "title": "Aprende visualización de datos | Análisis de series temporales financieras",
        "description": "Explora cómo representar datos financieros diarios con valores faltantes utilizando un formateador de índice en este tutorial de programación en Python.",
        "keywords": "visualización de datos, series temporales financieras, Python, Matplotlib, Jupyter Notebook"
      },
      "details": {
        "steps": [
          {
            "title": "Importar las bibliotecas y datos necesarios",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "En este momento este paso no tiene verificaciones",
                "file": "verify1-1.sh",
                "hint": "En este momento este paso no tiene verificaciones"
              }
            ]
          },
          {
            "title": "Representación de datos con espacios predeterminados los fines de semana",
            "text": "es/step2.md",
            "verify": [
              {
                "name": "En este momento este paso no tiene verificaciones",
                "file": "verify2-1.sh",
                "hint": "En este momento este paso no tiene verificaciones"
              }
            ]
          },
          {
            "title": "Creación de un formateador de índice personalizado",
            "text": "es/step3.md",
            "verify": [
              {
                "name": "En este momento este paso no tiene verificaciones",
                "file": "verify3-1.sh",
                "hint": "En este momento este paso no tiene verificaciones"
              }
            ]
          },
          {
            "title": "Usar una función llamada para el formateador",
            "text": "es/step4.md",
            "verify": [
              {
                "name": "En este momento este paso no tiene verificaciones",
                "file": "verify4-1.sh",
                "hint": "En este momento este paso no tiene verificaciones"
              }
            ]
          },
          {
            "title": "Mostrando la gráfica",
            "text": "es/step5.md",
            "verify": [
              {
                "name": "En este momento este paso no tiene verificaciones",
                "file": "verify5-1.sh",
                "hint": "En este momento este paso no tiene verificaciones"
              }
            ]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Formateur d'échelle personnalisé pour les séries temporelles",
      "description": "Lorsque l'on trace des données quotidiennes telles que des séries temporelles financières, on souhaite souvent omettre les jours où il n'y a pas de données, comme les week-ends. Cela permet de tracer les données à des intervalles réguliers sans espaces supplémentaires pour les jours sans données. Dans ce laboratoire, nous allons apprendre à utiliser un 'formateur d'index' pour obtenir le graphique souhaité.",
      "meta": {
        "title": "Apprenez la visualisation de données | Analyse des séries temporelles financières",
        "description": "Explorez comment tracer des données financières quotidiennes avec des valeurs manquantes à l'aide d'un formateur d'index dans ce tutoriel de programmation Python.",
        "keywords": "visualisation de données, séries temporelles financières, Python, Matplotlib, Jupyter Notebook"
      },
      "details": {
        "steps": [
          {
            "title": "Importer les bibliothèques et les données requises",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Cette étape n'a pas de vérification pour le moment",
                "file": "verify1-1.sh",
                "hint": "Cette étape n'a pas de vérification pour le moment"
              }
            ]
          },
          {
            "title": "Tracé des données avec des trous par défaut le week-end",
            "text": "fr/step2.md",
            "verify": [
              {
                "name": "Cette étape n'a pas de vérification pour le moment",
                "file": "verify2-1.sh",
                "hint": "Cette étape n'a pas de vérification pour le moment"
              }
            ]
          },
          {
            "title": "Création d'un formateur d'index personnalisé",
            "text": "fr/step3.md",
            "verify": [
              {
                "name": "Cette étape n'a pas de vérification pour le moment",
                "file": "verify3-1.sh",
                "hint": "Cette étape n'a pas de vérification pour le moment"
              }
            ]
          },
          {
            "title": "Utilisation d'un objet appelable pour le formateur",
            "text": "fr/step4.md",
            "verify": [
              {
                "name": "Cette étape n'a pas de vérification pour le moment",
                "file": "verify4-1.sh",
                "hint": "Cette étape n'a pas de vérification pour le moment"
              }
            ]
          },
          {
            "title": "Affichage du tracé",
            "text": "fr/step5.md",
            "verify": [
              {
                "name": "Cette étape n'a pas de vérification pour le moment",
                "file": "verify5-1.sh",
                "hint": "Cette étape n'a pas de vérification pour le moment"
              }
            ]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Benutzerdefinierter Strich-Formatter für Zeitreihen",
      "description": "Wenn man tägliche Daten wie finanzielle Zeitreihen darstellt, möchte man oft die Tage weglassen, an denen keine Daten vorliegen, wie z. B. Wochenenden. Dadurch können die Daten in regelmäßigen Abständen dargestellt werden, ohne dass zusätzliche Leerzeichen für die tage ohne Daten erforderlich sind. In diesem Lab werden wir lernen, wie man einen 'Index-Formatter' verwendet, um das gewünschte Diagramm zu erhalten.",
      "meta": {
        "title": "Lernen Sie die Datenvisualisierung | Finanzielle Zeitreihenanalyse",
        "description": "Entdecken Sie, wie Sie in diesem Python-Programmier-Tutorial tägliche finanzielle Daten mit fehlenden Werten mithilfe eines Index-Formatters darstellen können.",
        "keywords": "Datenvisualisierung, Finanzielle Zeitreihen, Python, Matplotlib, Jupyter Notebook"
      },
      "details": {
        "steps": [
          {
            "title": "Importiere erforderliche Bibliotheken und Daten",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Dieser Schritt hat momentan keine Verifizierung",
                "file": "verify1-1.sh",
                "hint": "Dieser Schritt hat momentan keine Verifizierung"
              }
            ]
          },
          {
            "title": "Zeichnen von Daten mit standardmäßigen Lücken an Wochenenden",
            "text": "de/step2.md",
            "verify": [
              {
                "name": "Dieser Schritt hat momentan keine Verifizierung",
                "file": "verify2-1.sh",
                "hint": "Dieser Schritt hat momentan keine Verifizierung"
              }
            ]
          },
          {
            "title": "Erstellen eines benutzerdefinierten Index-Formatters",
            "text": "de/step3.md",
            "verify": [
              {
                "name": "Dieser Schritt hat momentan keine Verifizierung",
                "file": "verify3-1.sh",
                "hint": "Dieser Schritt hat momentan keine Verifizierung"
              }
            ]
          },
          {
            "title": "Verwenden eines aufrufbaren Objekts als Formatter",
            "text": "de/step4.md",
            "verify": [
              {
                "name": "Dieser Schritt hat momentan keine Verifizierung",
                "file": "verify4-1.sh",
                "hint": "Dieser Schritt hat momentan keine Verifizierung"
              }
            ]
          },
          {
            "title": "Anzeige des Diagramms",
            "text": "de/step5.md",
            "verify": [
              {
                "name": "Dieser Schritt hat momentan keine Verifizierung",
                "file": "verify5-1.sh",
                "hint": "Dieser Schritt hat momentan keine Verifizierung"
              }
            ]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "時系列のためのカスタム目盛りフォーマッター",
      "description": "金融時系列などの日次データをプロットする際、週末などデータが存在しない日を省略したい場合が多いです。これにより、データが存在しない日に余分なスペースを持たずに、規則的な間隔でデータをプロットすることができます。この実験では、望ましいプロットを実現するために「インデックスフォーマッター」をどのように使用するか学びます。",
      "meta": {
        "title": "データ可視化を学ぶ | 金融時系列分析",
        "description": "この Python プログラミングチュートリアルでは、インデックスフォーマッターを使って欠損値がある日次の金融データをどのようにプロットするかをご紹介します。",
        "keywords": "データ可視化，金融時系列，Python, Matplotlib, Jupyter Notebook"
      },
      "details": {
        "steps": [
          {
            "title": "必要なライブラリとデータをインポートする",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "このステップでは現在検証はありません",
                "file": "verify1-1.sh",
                "hint": "このステップでは現在検証はありません"
              }
            ]
          },
          {
            "title": "週末にデフォルトのギャップを持つデータのプロット",
            "text": "ja/step2.md",
            "verify": [
              {
                "name": "このステップでは現在検証はありません",
                "file": "verify2-1.sh",
                "hint": "このステップでは現在検証はありません"
              }
            ]
          },
          {
            "title": "カスタムインデックスフォーマッターの作成",
            "text": "ja/step3.md",
            "verify": [
              {
                "name": "このステップでは現在検証はありません",
                "file": "verify3-1.sh",
                "hint": "このステップでは現在検証はありません"
              }
            ]
          },
          {
            "title": "フォーマッターにコール可能オブジェクトを使用する",
            "text": "ja/step4.md",
            "verify": [
              {
                "name": "このステップでは現在検証はありません",
                "file": "verify4-1.sh",
                "hint": "このステップでは現在検証はありません"
              }
            ]
          },
          {
            "title": "グラフを表示する",
            "text": "ja/step5.md",
            "verify": [
              {
                "name": "このステップでは現在検証はありません",
                "file": "verify5-1.sh",
                "hint": "このステップでは現在検証はありません"
              }
            ]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Пользовательский форматтер делений для временного ряда",
      "description": "При построении графиков ежедневных данных, таких как финансовые временные ряды, часто хочется пропустить дни, когда нет данных, например, выходные дни. Это позволяет построить данные с равномерными интервалами без дополнительных пробелов для дней без данных. В этом практическом занятии мы узнаем, как использовать 'форматтер индекса', чтобы получить желаемый график.",
      "meta": {
        "title": "Изучите визуализацию данных | Анализ финансовых временных рядов",
        "description": "Изучите, как построить ежедневные финансовые данные с пропущенными значениями с использованием форматтера индекса в этом руководстве по программированию на Python.",
        "keywords": "визуализация данных, финансовые временные ряды, Python, Matplotlib, Jupyter Notebook"
      },
      "details": {
        "steps": [
          {
            "title": "Импортировать необходимые библиотеки и данные",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "На данный момент эта стадия не имеет проверки",
                "file": "verify1-1.sh",
                "hint": "На данный момент эта стадия не имеет проверки"
              }
            ]
          },
          {
            "title": "Построение графика с стандартными пропусками в выходные дни",
            "text": "ru/step2.md",
            "verify": [
              {
                "name": "На данный момент эта стадия не имеет проверки",
                "file": "verify2-1.sh",
                "hint": "На данный момент эта стадия не имеет проверки"
              }
            ]
          },
          {
            "title": "Создание пользовательского форматтера индекса",
            "text": "ru/step3.md",
            "verify": [
              {
                "name": "На данный момент эта стадия не имеет проверки",
                "file": "verify3-1.sh",
                "hint": "На данный момент эта стадия не имеет проверки"
              }
            ]
          },
          {
            "title": "Использование вызываемого объекта для форматтера",
            "text": "ru/step4.md",
            "verify": [
              {
                "name": "На данный момент эта стадия не имеет проверки",
                "file": "verify4-1.sh",
                "hint": "На данный момент эта стадия не имеет проверки"
              }
            ]
          },
          {
            "title": "Отображение графика",
            "text": "ru/step5.md",
            "verify": [
              {
                "name": "На данный момент эта стадия не имеет проверки",
                "file": "verify5-1.sh",
                "hint": "На данный момент эта стадия не имеет проверки"
              }
            ]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    },
    {
      "lang": "ko",
      "title": "시계열 데이터의 사용자 정의 틱 포맷터",
      "description": "금융 시계열과 같은 일별 데이터를 플롯할 때, 주말과 같이 데이터가 없는 날짜는 종종 제외하고 싶어집니다. 이렇게 하면 데이터가 없는 날짜에 대한 추가 공간 없이 데이터를 정기적인 간격으로 플롯할 수 있습니다. 이 랩에서는 원하는 플롯을 얻기 위해 '인덱스 포맷터'를 사용하는 방법을 배웁니다.",
      "meta": {
        "title": "데이터 시각화 학습 | 금융 시계열 분석",
        "description": "이 Python 프로그래밍 튜토리얼에서 인덱스 포맷터를 사용하여 결측값이 있는 일별 금융 데이터를 플롯하는 방법을 알아보세요.",
        "keywords": "데이터 시각화, 금융 시계열, Python, Matplotlib, Jupyter Notebook, 주식 차트, 시계열 분석, 파이썬 시각화"
      },
      "details": {
        "steps": [
          {
            "title": "필요한 라이브러리 및 데이터 가져오기",
            "text": "ko/step1.md",
            "verify": [
              {
                "name": "현재 이 단계에는 검증이 없습니다.",
                "file": "verify1-1.sh",
                "hint": "현재 이 단계에는 검증이 없습니다."
              }
            ]
          },
          {
            "title": "주말에 기본 간격으로 데이터 플롯하기",
            "text": "ko/step2.md",
            "verify": [
              {
                "name": "현재 이 단계에는 검증이 없습니다.",
                "file": "verify2-1.sh",
                "hint": "현재 이 단계에는 검증이 없습니다."
              }
            ]
          },
          {
            "title": "사용자 정의 인덱스 포매터 생성",
            "text": "ko/step3.md",
            "verify": [
              {
                "name": "현재 이 단계에는 검증이 없습니다.",
                "file": "verify3-1.sh",
                "hint": "현재 이 단계에는 검증이 없습니다."
              }
            ]
          },
          {
            "title": "포매터에 Callable 사용하기",
            "text": "ko/step4.md",
            "verify": [
              {
                "name": "현재 이 단계에는 검증이 없습니다.",
                "file": "verify4-1.sh",
                "hint": "현재 이 단계에는 검증이 없습니다."
              }
            ]
          },
          {
            "title": "플롯 표시하기",
            "text": "ko/step5.md",
            "verify": [
              {
                "name": "현재 이 단계에는 검증이 없습니다.",
                "file": "verify5-1.sh",
                "hint": "현재 이 단계에는 검증이 없습니다."
              }
            ]
          }
        ],
        "intro": {
          "text": "ko/intro.md",
          "title": "소개"
        },
        "finish": {
          "text": "ko/finish.md",
          "title": "요약"
        }
      }
    },
    {
      "lang": "pt",
      "title": "Formatador de Ticks Personalizado para Séries Temporais",
      "description": "Ao plotar dados diários, como séries temporais financeiras, muitas vezes se deseja omitir os dias em que não há dados, como fins de semana. Isso permite que os dados sejam plotados em intervalos regulares, sem espaços extras para os dias sem dados. Neste laboratório, aprenderemos como usar um 'formatador de índice' (index formatter) para obter o gráfico desejado.",
      "meta": {
        "title": "Aprenda Visualização de Dados | Análise de Séries Temporais Financeiras",
        "description": "Explore como plotar dados financeiros diários com valores ausentes usando um formatador de índice neste tutorial de programação Python. Aprenda a visualizar dados financeiros de forma eficaz com Matplotlib e Jupyter Notebook.",
        "keywords": "visualização de dados, séries temporais financeiras, Python, Matplotlib, Jupyter Notebook, análise de dados financeiros, gráficos financeiros"
      },
      "details": {
        "steps": [
          {
            "title": "Importar Bibliotecas e Dados Necessários",
            "text": "pt/step1.md",
            "verify": [
              {
                "name": "Esta etapa não possui verificação no momento",
                "file": "verify1-1.sh",
                "hint": "Esta etapa não possui verificação no momento"
              }
            ]
          },
          {
            "title": "Plotando Dados com Lacunas Padrão nos Fins de Semana",
            "text": "pt/step2.md",
            "verify": [
              {
                "name": "Esta etapa não possui verificação no momento",
                "file": "verify2-1.sh",
                "hint": "Esta etapa não possui verificação no momento"
              }
            ]
          },
          {
            "title": "Criando um Formatador de Índice Personalizado",
            "text": "pt/step3.md",
            "verify": [
              {
                "name": "Esta etapa não possui verificação no momento",
                "file": "verify3-1.sh",
                "hint": "Esta etapa não possui verificação no momento"
              }
            ]
          },
          {
            "title": "Usando um Callable para o Formatador",
            "text": "pt/step4.md",
            "verify": [
              {
                "name": "Esta etapa não possui verificação no momento",
                "file": "verify4-1.sh",
                "hint": "Esta etapa não possui verificação no momento"
              }
            ]
          },
          {
            "title": "Exibindo o Gráfico",
            "text": "pt/step5.md",
            "verify": [
              {
                "name": "Esta etapa não possui verificação no momento",
                "file": "verify5-1.sh",
                "hint": "Esta etapa não possui verificação no momento"
              }
            ]
          }
        ],
        "intro": {
          "text": "pt/intro.md",
          "title": "Introdução"
        },
        "finish": {
          "text": "pt/finish.md",
          "title": "Resumo"
        }
      }
    }
  ]
}
