{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Resizing Axes with Constrained Layout",
  "description": "In data visualization, it is crucial to have clear and readable plots. However, creating multiple subplots can make it difficult to avoid overlaps between axes objects and labels. In such cases, we can use a feature called _constrained layout_ in Matplotlib, which automatically resizes subplots to prevent overlaps between axes objects and labels.",
  "meta": {
    "title": "Data Visualization | Matplotlib Constrained Layout",
    "description": "Learn how to use constrained layout in Matplotlib to create clear and readable data visualization plots without overlaps.",
    "keywords": "data visualization, matplotlib, constrained layout, subplot, plot, data analysis"
  },
  "difficulty": "Beginner",
  "time": 30,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Importing Required Libraries",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "This step has no verification at the moment",
            "file": "verify1-1.sh",
            "hint": "This step has no verification at the moment"
          }
        ],
        "skills": [
          "matplotlib/figures_axes",
          "matplotlib/importing_matplotlib",
          "python/data_visualization",
          "python/importing_modules"
        ]
      },
      {
        "title": "Defining Example Plot",
        "text": "en/step2.md",
        "verify": [
          {
            "name": "This step has no verification at the moment",
            "file": "verify2-1.sh",
            "hint": "This step has no verification at the moment"
          }
        ],
        "skills": [
          "matplotlib/line_plots",
          "python/function_definition",
          "python/lists",
          "python/tuples"
        ]
      },
      {
        "title": "Creating Subplots Without Constrained Layout",
        "text": "en/step3.md",
        "verify": [
          {
            "name": "This step has no verification at the moment",
            "file": "verify3-1.sh",
            "hint": "This step has no verification at the moment"
          }
        ],
        "skills": ["python/for_loops", "python/tuples"]
      },
      {
        "title": "Creating Subplots with Constrained Layout",
        "text": "en/step4.md",
        "verify": [
          {
            "name": "This step has no verification at the moment",
            "file": "verify4-1.sh",
            "hint": "This step has no verification at the moment"
          }
        ],
        "skills": ["python/for_loops", "python/tuples"]
      },
      {
        "title": "Creating Nested Gridspecs with Constrained Layout",
        "text": "en/step5.md",
        "verify": [
          {
            "name": "This step has no verification at the moment",
            "file": "verify5-1.sh",
            "hint": "This step has no verification at the moment"
          }
        ],
        "skills": [
          "python/build_in_functions",
          "python/for_loops",
          "python/lists",
          "python/tuples"
        ]
      },
      {
        "title": "Summary",
        "text": "en/step6.md",
        "verify": [
          {
            "name": "This step has no verification at the moment",
            "file": "verify6-1.sh",
            "hint": "This step has no verification at the moment"
          }
        ],
        "skills": []
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    },
    "assets": {
      "host01": [
        {
          "file": "demo-constrained-layout.ipynb",
          "target": "/home/labex/project",
          "chmod": "ugo+rwx"
        }
      ]
    }
  },
  "backend": {
    "imageid": "jupyter-ubuntu:2204"
  },
  "contributors": ["huduo0812"],
  "license": {
    "name": "BSD 3-Clause",
    "url": "https://github.com/matplotlib/matplotlib/tree/main/LICENSE",
    "repo": "https://github.com/matplotlib/matplotlib"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "使用约束布局调整轴大小",
      "description": "在数据可视化中，拥有清晰易读的图表至关重要。然而，创建多个子图时，很难避免轴对象和标签之间的重叠。在这种情况下，我们可以使用 Matplotlib 中的一种名为“约束布局”的功能，它会自动调整子图大小，以防止轴对象和标签之间出现重叠。",
      "meta": {
        "title": "数据可视化 | Matplotlib 约束布局",
        "description": "学习如何在 Matplotlib 中使用约束布局来创建清晰易读且无重叠的数据可视化图表。",
        "keywords": "数据可视化，Matplotlib, 约束布局，子图，图表，数据分析"
      },
      "details": {
        "steps": [
          {
            "title": "导入所需库",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "此步骤目前没有验证",
                "file": "verify1-1.sh",
                "hint": "此步骤目前没有验证"
              }
            ]
          },
          {
            "title": "定义示例图表",
            "text": "zh/step2.md",
            "verify": [
              {
                "name": "此步骤目前没有验证",
                "file": "verify2-1.sh",
                "hint": "此步骤目前没有验证"
              }
            ]
          },
          {
            "title": "创建无约束布局的子图",
            "text": "zh/step3.md",
            "verify": [
              {
                "name": "此步骤目前没有验证",
                "file": "verify3-1.sh",
                "hint": "此步骤目前没有验证"
              }
            ]
          },
          {
            "title": "创建具有约束布局的子图",
            "text": "zh/step4.md",
            "verify": [
              {
                "name": "此步骤目前没有验证",
                "file": "verify4-1.sh",
                "hint": "此步骤目前没有验证"
              }
            ]
          },
          {
            "title": "创建具有约束布局的嵌套网格规格",
            "text": "zh/step5.md",
            "verify": [
              {
                "name": "此步骤目前没有验证",
                "file": "verify5-1.sh",
                "hint": "此步骤目前没有验证"
              }
            ]
          },
          {
            "title": "总结",
            "text": "zh/step6.md",
            "verify": [
              {
                "name": "此步骤目前没有验证",
                "file": "verify6-1.sh",
                "hint": "此步骤目前没有验证"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Redimensionamiento de Ejes con Diseño Limitado",
      "description": "En la visualización de datos, es fundamental tener gráficos claros y legibles. Sin embargo, crear múltiples subgráficos puede dificultar evitar solapes entre los objetos de los ejes y las etiquetas. En tales casos, podemos utilizar una característica llamada _constrained layout_ en Matplotlib, que redimensiona automáticamente los subgráficos para evitar solapes entre los objetos de los ejes y las etiquetas.",
      "meta": {
        "title": "Visualización de Datos | Diseño Limitado de Matplotlib",
        "description": "Aprende a utilizar el diseño limitado en Matplotlib para crear gráficos de visualización de datos claros y legibles sin solapes.",
        "keywords": "visualización de datos, matplotlib, diseño limitado, subgráfico, gráfico, análisis de datos"
      },
      "details": {
        "steps": [
          {
            "title": "Importación de las Librerías Requeridas",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Este paso no tiene verificación en este momento",
                "file": "verify1-1.sh",
                "hint": "Este paso no tiene verificación en este momento"
              }
            ]
          },
          {
            "title": "Definición del Gráfico de Ejemplo",
            "text": "es/step2.md",
            "verify": [
              {
                "name": "Este paso no tiene verificación en este momento",
                "file": "verify2-1.sh",
                "hint": "Este paso no tiene verificación en este momento"
              }
            ]
          },
          {
            "title": "Creación de Subgráficos Sin Diseño Limitado",
            "text": "es/step3.md",
            "verify": [
              {
                "name": "Este paso no tiene verificación en este momento",
                "file": "verify3-1.sh",
                "hint": "Este paso no tiene verificación en este momento"
              }
            ]
          },
          {
            "title": "Creación de Subgráficos con Diseño Limitado",
            "text": "es/step4.md",
            "verify": [
              {
                "name": "Este paso no tiene verificación en este momento",
                "file": "verify4-1.sh",
                "hint": "Este paso no tiene verificación en este momento"
              }
            ]
          },
          {
            "title": "Creación de Gridspecs Anidados con Diseño Limitado",
            "text": "es/step5.md",
            "verify": [
              {
                "name": "Este paso no tiene verificación en este momento",
                "file": "verify5-1.sh",
                "hint": "Este paso no tiene verificación en este momento"
              }
            ]
          },
          {
            "title": "Resumen",
            "text": "es/step6.md",
            "verify": [
              {
                "name": "Este paso no tiene verificación en este momento",
                "file": "verify6-1.sh",
                "hint": "Este paso no tiene verificación en este momento"
              }
            ]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Redimensionnement des axes avec mise en page contraignante",
      "description": "Dans la visualisation de données, il est crucial d'avoir des graphiques clairs et lisibles. Cependant, la création de plusieurs sous-graphiques peut rendre difficile d'éviter les chevauchements entre les objets d'axes et les étiquettes. Dans de tels cas, nous pouvons utiliser une fonction appelée mise en page contraignante dans Matplotlib, qui redimensionne automatiquement les sous-graphiques pour empêcher les chevauchements entre les objets d'axes et les étiquettes.",
      "meta": {
        "title": "Visualisation de données | Mise en page contraignante de Matplotlib",
        "description": "Découvrez comment utiliser la mise en page contraignante dans Matplotlib pour créer des graphiques de visualisation de données clairs et lisibles sans chevauchement.",
        "keywords": "visualisation de données, matplotlib, mise en page contraignante, sous-graphique, graphique, analyse de données"
      },
      "details": {
        "steps": [
          {
            "title": "Importation des bibliothèques requises",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Cette étape n'a pas de vérification pour le moment",
                "file": "verify1-1.sh",
                "hint": "Cette étape n'a pas de vérification pour le moment"
              }
            ]
          },
          {
            "title": "Définition d'un graphique d'exemple",
            "text": "fr/step2.md",
            "verify": [
              {
                "name": "Cette étape n'a pas de vérification pour le moment",
                "file": "verify2-1.sh",
                "hint": "Cette étape n'a pas de vérification pour le moment"
              }
            ]
          },
          {
            "title": "Création de sous-graphiques sans mise en page contraignante",
            "text": "fr/step3.md",
            "verify": [
              {
                "name": "Cette étape n'a pas de vérification pour le moment",
                "file": "verify3-1.sh",
                "hint": "Cette étape n'a pas de vérification pour le moment"
              }
            ]
          },
          {
            "title": "Création de sous-graphiques avec mise en page contraignante",
            "text": "fr/step4.md",
            "verify": [
              {
                "name": "Cette étape n'a pas de vérification pour le moment",
                "file": "verify4-1.sh",
                "hint": "Cette étape n'a pas de vérification pour le moment"
              }
            ]
          },
          {
            "title": "Création de Gridspec imbriqués avec mise en page contraignante",
            "text": "fr/step5.md",
            "verify": [
              {
                "name": "Cette étape n'a pas de vérification pour le moment",
                "file": "verify5-1.sh",
                "hint": "Cette étape n'a pas de vérification pour le moment"
              }
            ]
          },
          {
            "title": "Résumé",
            "text": "fr/step6.md",
            "verify": [
              {
                "name": "Cette étape n'a pas de vérification pour le moment",
                "file": "verify6-1.sh",
                "hint": "Cette étape n'a pas de vérification pour le moment"
              }
            ]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Axengröße anpassen mit Constrained Layout",
      "description": "Beim Datenvisualisierung ist es entscheidend, klare und lesbare Diagramme zu haben. Erstellt man jedoch mehrere Teilbilder, kann es schwierig sein, Überlappungen zwischen Achsenobjekten und Beschriftungen zu vermeiden. In solchen Fällen können wir ein Feature namens _constrained layout_ in Matplotlib verwenden, das die Teilbilder automatisch anpasst, um Überlappungen zwischen Achsenobjekten und Beschriftungen zu vermeiden.",
      "meta": {
        "title": "Datenvisualisierung | Matplotlib Constrained Layout",
        "description": "Lernen Sie, wie Sie Constrained Layout in Matplotlib verwenden, um klare und lesbare Datenvisualisierungsdiagramme ohne Überlappungen zu erstellen.",
        "keywords": "Datenvisualisierung, Matplotlib, Constrained Layout, Teilbild, Diagramm, Datenanalyse"
      },
      "details": {
        "steps": [
          {
            "title": "Benötigte Bibliotheken importieren",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Dieser Schritt hat momentan keine Verifizierung",
                "file": "verify1-1.sh",
                "hint": "Dieser Schritt hat momentan keine Verifizierung"
              }
            ]
          },
          {
            "title": "Beispiel-Diagramm definieren",
            "text": "de/step2.md",
            "verify": [
              {
                "name": "Dieser Schritt hat momentan keine Verifizierung",
                "file": "verify2-1.sh",
                "hint": "Dieser Schritt hat momentan keine Verifizierung"
              }
            ]
          },
          {
            "title": "Teilbilder erstellen ohne Constrained Layout",
            "text": "de/step3.md",
            "verify": [
              {
                "name": "Dieser Schritt hat momentan keine Verifizierung",
                "file": "verify3-1.sh",
                "hint": "Dieser Schritt hat momentan keine Verifizierung"
              }
            ]
          },
          {
            "title": "Teilbilder mit Constrained Layout erstellen",
            "text": "de/step4.md",
            "verify": [
              {
                "name": "Dieser Schritt hat momentan keine Verifizierung",
                "file": "verify4-1.sh",
                "hint": "Dieser Schritt hat momentan keine Verifizierung"
              }
            ]
          },
          {
            "title": "Erstellen von geschachtelten Gridspecs mit Constrained Layout",
            "text": "de/step5.md",
            "verify": [
              {
                "name": "Dieser Schritt hat momentan keine Verifizierung",
                "file": "verify5-1.sh",
                "hint": "Dieser Schritt hat momentan keine Verifizierung"
              }
            ]
          },
          {
            "title": "Zusammenfassung",
            "text": "de/step6.md",
            "verify": [
              {
                "name": "Dieser Schritt hat momentan keine Verifizierung",
                "file": "verify6-1.sh",
                "hint": "Dieser Schritt hat momentan keine Verifizierung"
              }
            ]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "制約付きレイアウトを用いた軸のサイズ変更",
      "description": "データ可視化においては、明瞭で読みやすいプロットを作成することが重要です。ただし、複数のサブプロットを作成すると、軸オブジェクトとラベルの間の重複を避けることが難しくなる場合があります。そのような場合、Matplotlib の「制約付きレイアウト」と呼ばれる機能を使用することができます。これは、軸オブジェクトとラベルの間の重複を防ぐために、サブプロットのサイズを自動的に調整します。",
      "meta": {
        "title": "データ可視化 | Matplotlib 制約付きレイアウト",
        "description": "Matplotlib の制約付きレイアウトを使って、重複なしで明瞭で読みやすいデータ可視化プロットを作成する方法を学びましょう。",
        "keywords": "データ可視化，Matplotlib, 制約付きレイアウト，サブプロット，プロット，データ分析"
      },
      "details": {
        "steps": [
          {
            "title": "必要なライブラリのインポート",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "このステップには現在、検証はありません",
                "file": "verify1-1.sh",
                "hint": "このステップには現在、検証はありません"
              }
            ]
          },
          {
            "title": "サンプルプロットの定義",
            "text": "ja/step2.md",
            "verify": [
              {
                "name": "このステップには現在、検証はありません",
                "file": "verify2-1.sh",
                "hint": "このステップには現在、検証はありません"
              }
            ]
          },
          {
            "title": "制約付きレイアウトなしでサブプロットを作成する",
            "text": "ja/step3.md",
            "verify": [
              {
                "name": "このステップには現在、検証はありません",
                "file": "verify3-1.sh",
                "hint": "このステップには現在、検証はありません"
              }
            ]
          },
          {
            "title": "制約付きレイアウトでサブプロットを作成する",
            "text": "ja/step4.md",
            "verify": [
              {
                "name": "このステップには現在、検証はありません",
                "file": "verify4-1.sh",
                "hint": "このステップには現在、検証はありません"
              }
            ]
          },
          {
            "title": "制約付きレイアウトでネストされたグリッドスペックを作成する",
            "text": "ja/step5.md",
            "verify": [
              {
                "name": "このステップには現在、検証はありません",
                "file": "verify5-1.sh",
                "hint": "このステップには現在、検証はありません"
              }
            ]
          },
          {
            "title": "まとめ",
            "text": "ja/step6.md",
            "verify": [
              {
                "name": "このステップには現在、検証はありません",
                "file": "verify6-1.sh",
                "hint": "このステップには現在、検証はありません"
              }
            ]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Изменение размеров осей сConstrained Layout",
      "description": "В визуализации данных至关重要的是要有清晰可读的图表。然而，创建多个子图可能会难以避免轴对象和标签之间的重叠。在这种情况下，我们可以使用 Matplotlib 中称为_constrained layout_的功能，它会自动调整子图大小以防止轴对象和标签之间的重叠。",
      "meta": {
        "title": "Визуализация данных | Matplotlib Constrained Layout",
        "description": "Изучите, как использоватьConstrained Layout в Matplotlib для создания ясных и читаемых графиков визуализации данных без перекрытий.",
        "keywords": "визуализация данных, matplotlib,Constrained Layout, подграфик, график, анализ данных"
      },
      "details": {
        "steps": [
          {
            "title": "Импорт необходимых библиотек",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "На данный момент эта стадия не имеет проверки",
                "file": "verify1-1.sh",
                "hint": "На данный момент эта стадия не имеет проверки"
              }
            ]
          },
          {
            "title": "Определение примера графика",
            "text": "ru/step2.md",
            "verify": [
              {
                "name": "На данный момент эта стадия не имеет проверки",
                "file": "verify2-1.sh",
                "hint": "На данный момент эта стадия не имеет проверки"
              }
            ]
          },
          {
            "title": "Создание подграфиков безConstrained Layout",
            "text": "ru/step3.md",
            "verify": [
              {
                "name": "На данный момент эта стадия не имеет проверки",
                "file": "verify3-1.sh",
                "hint": "На данный момент эта стадия не имеет проверки"
              }
            ]
          },
          {
            "title": "Создание подграфиков сConstrained Layout",
            "text": "ru/step4.md",
            "verify": [
              {
                "name": "На данный момент эта стадия не имеет проверки",
                "file": "verify4-1.sh",
                "hint": "На данный момент эта стадия не имеет проверки"
              }
            ]
          },
          {
            "title": "Создание вложенных Gridspecs сConstrained Layout",
            "text": "ru/step5.md",
            "verify": [
              {
                "name": "На данный момент эта стадия не имеет проверки",
                "file": "verify5-1.sh",
                "hint": "На данный момент эта стадия не имеет проверки"
              }
            ]
          },
          {
            "title": "Обзор",
            "text": "ru/step6.md",
            "verify": [
              {
                "name": "На данный момент эта стадия не имеет проверки",
                "file": "verify6-1.sh",
                "hint": "На данный момент эта стадия не имеет проверки"
              }
            ]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    },
    {
      "lang": "ko",
      "title": "Constrained Layout 을 사용한 축 크기 조정",
      "description": "데이터 시각화에서 명확하고 읽기 쉬운 플롯을 갖는 것은 매우 중요합니다. 하지만 여러 서브플롯을 생성하면 축 객체와 레이블 간의 겹침을 피하기 어려울 수 있습니다. 이러한 경우 Matplotlib 의 _constrained layout_ 기능을 사용하여 서브플롯의 크기를 자동으로 조정하여 축 객체와 레이블 간의 겹침을 방지할 수 있습니다.",
      "meta": {
        "title": "데이터 시각화 | Matplotlib Constrained Layout (제약 레이아웃)",
        "description": "겹침 없이 명확하고 읽기 쉬운 데이터 시각화 플롯을 만들기 위해 Matplotlib 에서 constrained layout (제약 레이아웃) 을 사용하는 방법을 알아보세요.",
        "keywords": "데이터 시각화, matplotlib, constrained layout, 서브플롯, 플롯, 데이터 분석, Matplotlib 제약 레이아웃, Matplotlib 축 크기 조정"
      },
      "details": {
        "steps": [
          {
            "title": "필요한 라이브러리 가져오기",
            "text": "ko/step1.md",
            "verify": [
              {
                "name": "현재 이 단계에는 검증이 없습니다.",
                "file": "verify1-1.sh",
                "hint": "현재 이 단계에는 검증이 없습니다."
              }
            ]
          },
          {
            "title": "예시 플롯 정의",
            "text": "ko/step2.md",
            "verify": [
              {
                "name": "현재 이 단계에는 검증이 없습니다.",
                "file": "verify2-1.sh",
                "hint": "현재 이 단계에는 검증이 없습니다."
              }
            ]
          },
          {
            "title": "Constrained Layout 없이 서브플롯 생성",
            "text": "ko/step3.md",
            "verify": [
              {
                "name": "현재 이 단계에는 검증이 없습니다.",
                "file": "verify3-1.sh",
                "hint": "현재 이 단계에는 검증이 없습니다."
              }
            ]
          },
          {
            "title": "Constrained Layout 을 사용한 서브플롯 생성",
            "text": "ko/step4.md",
            "verify": [
              {
                "name": "현재 이 단계에는 검증이 없습니다.",
                "file": "verify4-1.sh",
                "hint": "현재 이 단계에는 검증이 없습니다."
              }
            ]
          },
          {
            "title": "Constrained Layout 을 사용한 중첩 Gridspecs 생성",
            "text": "ko/step5.md",
            "verify": [
              {
                "name": "현재 이 단계에는 검증이 없습니다.",
                "file": "verify5-1.sh",
                "hint": "현재 이 단계에는 검증이 없습니다."
              }
            ]
          },
          {
            "title": "요약",
            "text": "ko/step6.md",
            "verify": [
              {
                "name": "현재 이 단계에는 검증이 없습니다.",
                "file": "verify6-1.sh",
                "hint": "현재 이 단계에는 검증이 없습니다."
              }
            ]
          }
        ],
        "intro": {
          "text": "ko/intro.md",
          "title": "소개"
        },
        "finish": {
          "text": "ko/finish.md",
          "title": "요약"
        }
      }
    },
    {
      "lang": "pt",
      "title": "Redimensionando Eixos com Constrained Layout",
      "description": "Na visualização de dados, é crucial ter gráficos claros e legíveis. No entanto, a criação de múltiplos subplots pode dificultar a evitação de sobreposições entre objetos de eixos e rótulos. Nesses casos, podemos usar um recurso chamado _constrained layout_ no Matplotlib, que redimensiona automaticamente os subplots para evitar sobreposições entre objetos de eixos e rótulos.",
      "meta": {
        "title": "Visualização de Dados | Matplotlib Constrained Layout - Evite Sobreposições",
        "description": "Aprenda a usar o constrained layout no Matplotlib para criar gráficos de visualização de dados claros e legíveis, sem sobreposições. Melhore a apresentação de seus dados!",
        "keywords": "visualização de dados, matplotlib, constrained layout, subplot, gráfico, análise de dados, gráficos sem sobreposição, Matplotlib Portugal"
      },
      "details": {
        "steps": [
          {
            "title": "Importando as Bibliotecas Necessárias",
            "text": "pt/step1.md",
            "verify": [
              {
                "name": "Este passo não possui verificação no momento",
                "file": "verify1-1.sh",
                "hint": "Este passo não possui verificação no momento"
              }
            ]
          },
          {
            "title": "Definindo o Gráfico de Exemplo",
            "text": "pt/step2.md",
            "verify": [
              {
                "name": "Este passo não possui verificação no momento",
                "file": "verify2-1.sh",
                "hint": "Este passo não possui verificação no momento"
              }
            ]
          },
          {
            "title": "Criando Subplots sem Constrained Layout",
            "text": "pt/step3.md",
            "verify": [
              {
                "name": "Este passo não possui verificação no momento",
                "file": "verify3-1.sh",
                "hint": "Este passo não possui verificação no momento"
              }
            ]
          },
          {
            "title": "Criando Subplots com Constrained Layout",
            "text": "pt/step4.md",
            "verify": [
              {
                "name": "Este passo não possui verificação no momento",
                "file": "verify4-1.sh",
                "hint": "Este passo não possui verificação no momento"
              }
            ]
          },
          {
            "title": "Criando Gridspecs Aninhados com Constrained Layout",
            "text": "pt/step5.md",
            "verify": [
              {
                "name": "Este passo não possui verificação no momento",
                "file": "verify5-1.sh",
                "hint": "Este passo não possui verificação no momento"
              }
            ]
          },
          {
            "title": "Resumo",
            "text": "pt/step6.md",
            "verify": [
              {
                "name": "Este passo não possui verificação no momento",
                "file": "verify6-1.sh",
                "hint": "Este passo não possui verificação no momento"
              }
            ]
          }
        ],
        "intro": {
          "text": "pt/intro.md",
          "title": "Introdução"
        },
        "finish": {
          "text": "pt/finish.md",
          "title": "Resumo"
        }
      }
    }
  ]
}
