{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Irregular Data Grid Contour Plotting",
  "description": "This lab demonstrates how to create a contour plot of irregularly spaced data in Python using Matplotlib. The contour plot shows the 2D distribution of data values using iso-contours or contour lines. In this example, we will compare a contour plot of irregularly spaced data interpolated on a regular grid versus a tricontour plot for an unstructured triangular grid.",
  "meta": {
    "title": "Contour Plotting | Irregular Data | Python Matplotlib",
    "description": "Learn how to create contour plots of irregularly spaced data using Python and Matplotlib. Explore the differences between contour plots on regular grids and tricontour plots for unstructured triangular grids.",
    "keywords": "contour plotting, irregular data, python, matplotlib, data visualization, data analysis"
  },
  "difficulty": "Beginner",
  "time": 20,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Import necessary libraries",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "This step has no verification at the moment",
            "file": "verify1-1.sh",
            "hint": "This step has no verification at the moment"
          }
        ],
        "skills": [
          "matplotlib/figures_axes",
          "matplotlib/importing_matplotlib",
          "python/data_visualization",
          "python/importing_modules",
          "python/numerical_computing"
        ]
      },
      {
        "title": "Generate random data",
        "text": "en/step2.md",
        "verify": [
          {
            "name": "This step has no verification at the moment",
            "file": "verify2-1.sh",
            "hint": "This step has no verification at the moment"
          }
        ],
        "skills": [
          "python/math_random",
          "python/standard_libraries",
          "python/tuples"
        ]
      },
      {
        "title": "Interpolation on a grid",
        "text": "en/step3.md",
        "verify": [
          {
            "name": "This step has no verification at the moment",
            "file": "verify3-1.sh",
            "hint": "This step has no verification at the moment"
          }
        ],
        "skills": [
          "matplotlib/contour_plots",
          "matplotlib/line_plots",
          "python/build_in_functions",
          "python/data_collections",
          "python/tuples",
          "python/variables_data_types"
        ]
      },
      {
        "title": "Tricontour",
        "text": "en/step4.md",
        "verify": [
          {
            "name": "This step has no verification at the moment",
            "file": "verify4-1.sh",
            "hint": "This step has no verification at the moment"
          }
        ],
        "skills": [
          "matplotlib/line_plots",
          "python/build_in_functions",
          "python/data_collections",
          "python/tuples",
          "python/variables_data_types"
        ]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    },
    "assets": {
      "host01": [
        {
          "file": "irregulardatagrid.ipynb",
          "target": "/home/labex/project",
          "chmod": "ugo+rwx"
        }
      ]
    }
  },
  "backend": {
    "imageid": "jupyter-ubuntu:2204"
  },
  "contributors": [],
  "license": {
    "name": "BSD 3-Clause",
    "url": "https://github.com/matplotlib/matplotlib/tree/main/LICENSE",
    "repo": "https://github.com/matplotlib/matplotlib"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "不规则数据网格等高线绘制",
      "description": "本实验展示了如何使用 Matplotlib 在 Python 中创建不规则间隔数据的等高线图。等高线图使用等值线或等高线显示数据值的二维分布。在本示例中，我们将比较在规则网格上插值的不规则间隔数据的等高线图与非结构化三角形网格的三角等高线图。",
      "meta": {
        "title": "等高线绘制 | 不规则数据 | Python Matplotlib",
        "description": "学习如何使用 Python 和 Matplotlib 创建不规则间隔数据的等高线图。探索规则网格上的等高线图与非结构化三角形网格的三角等高线图之间的差异。",
        "keywords": "等高线绘制，不规则数据，Python, Matplotlib, 数据可视化，数据分析"
      },
      "details": {
        "steps": [
          {
            "title": "导入必要的库",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "此步骤目前没有验证",
                "file": "verify1-1.sh",
                "hint": "此步骤目前没有验证"
              }
            ]
          },
          {
            "title": "生成随机数据",
            "text": "zh/step2.md",
            "verify": [
              {
                "name": "此步骤目前没有验证",
                "file": "verify2-1.sh",
                "hint": "此步骤目前没有验证"
              }
            ]
          },
          {
            "title": "在网格上进行插值",
            "text": "zh/step3.md",
            "verify": [
              {
                "name": "此步骤目前没有验证",
                "file": "verify3-1.sh",
                "hint": "此步骤目前没有验证"
              }
            ]
          },
          {
            "title": "三角等高线",
            "text": "zh/step4.md",
            "verify": [
              {
                "name": "此步骤目前没有验证",
                "file": "verify4-1.sh",
                "hint": "此步骤目前没有验证"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Gráfico de contornos en una cuadrícula de datos irregular",
      "description": "Esta práctica demuestra cómo crear un gráfico de contornos de datos con espaciado irregular en Python utilizando Matplotlib. El gráfico de contornos muestra la distribución bidimensional de los valores de datos utilizando iso-contornos o líneas de contorno. En este ejemplo, compararemos un gráfico de contornos de datos con espaciado irregular interpolados en una cuadrícula regular frente a un gráfico tricontour para una cuadrícula triangular no estructurada.",
      "meta": {
        "title": "Gráfico de contornos | Datos irregulares | Python Matplotlib",
        "description": "Aprende cómo crear gráficos de contornos de datos con espaciado irregular utilizando Python y Matplotlib. Explora las diferencias entre los gráficos de contornos en cuadrículas regulares y los gráficos tricontour para cuadrículas triangulares no estructuradas.",
        "keywords": "gráfico de contornos, datos irregulares, python, matplotlib, visualización de datos, análisis de datos"
      },
      "details": {
        "steps": [
          {
            "title": "Importar las bibliotecas necesarias",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Este paso no tiene verificación en este momento",
                "file": "verify1-1.sh",
                "hint": "Este paso no tiene verificación en este momento"
              }
            ]
          },
          {
            "title": "Generar datos aleatorios",
            "text": "es/step2.md",
            "verify": [
              {
                "name": "Este paso no tiene verificación en este momento",
                "file": "verify2-1.sh",
                "hint": "Este paso no tiene verificación en este momento"
              }
            ]
          },
          {
            "title": "Interpolación en una cuadrícula",
            "text": "es/step3.md",
            "verify": [
              {
                "name": "Este paso no tiene verificación en este momento",
                "file": "verify3-1.sh",
                "hint": "Este paso no tiene verificación en este momento"
              }
            ]
          },
          {
            "title": "Tricontorno",
            "text": "es/step4.md",
            "verify": [
              {
                "name": "Este paso no tiene verificación en este momento",
                "file": "verify4-1.sh",
                "hint": "Este paso no tiene verificación en este momento"
              }
            ]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Tracé de contour sur une grille de données irrégulière",
      "description": "Ce laboratoire démontre comment créer un tracé de contour de données à espacement irrégulier en Python à l'aide de Matplotlib. Le tracé de contour montre la distribution 2D des valeurs de données en utilisant des iso-contours ou des lignes de contour. Dans cet exemple, nous comparerons un tracé de contour de données à espacement irrégulier interpolé sur une grille régulière avec un tracé tricontour pour une grille triangulaire non structurée.",
      "meta": {
        "title": "Tracé de contour | Données irrégulières | Python Matplotlib",
        "description": "Découvrez comment créer des tracés de contour de données à espacement irrégulier à l'aide de Python et de Matplotlib. Explorez les différences entre les tracés de contour sur des grilles régulières et les tracés tricontour pour des grilles triangulaires non structurées.",
        "keywords": "tracé de contour, données irrégulières, python, matplotlib, visualisation de données, analyse de données"
      },
      "details": {
        "steps": [
          {
            "title": "Importer les bibliothèques nécessaires",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Cette étape n'a pas de vérification pour le moment",
                "file": "verify1-1.sh",
                "hint": "Cette étape n'a pas de vérification pour le moment"
              }
            ]
          },
          {
            "title": "Générer des données aléatoires",
            "text": "fr/step2.md",
            "verify": [
              {
                "name": "Cette étape n'a pas de vérification pour le moment",
                "file": "verify2-1.sh",
                "hint": "Cette étape n'a pas de vérification pour le moment"
              }
            ]
          },
          {
            "title": "Interpolation sur une grille",
            "text": "fr/step3.md",
            "verify": [
              {
                "name": "Cette étape n'a pas de vérification pour le moment",
                "file": "verify3-1.sh",
                "hint": "Cette étape n'a pas de vérification pour le moment"
              }
            ]
          },
          {
            "title": "Tricontour",
            "text": "fr/step4.md",
            "verify": [
              {
                "name": "Cette étape n'a pas de vérification pour le moment",
                "file": "verify4-1.sh",
                "hint": "Cette étape n'a pas de vérification pour le moment"
              }
            ]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Konturplot für unregelmäßiges Datennetz",
      "description": "In diesem Lab wird gezeigt, wie man in Python mithilfe von Matplotlib einen Konturplot von unregelmäßig verteilten Daten erstellt. Der Konturplot zeigt die 2D-Verteilung von Datenwerten mithilfe von Iso-Konturen oder Konturlinien. In diesem Beispiel werden wir einen Konturplot von unregelmäßig verteilten Daten, die auf einem regulären Gitter interpoliert wurden, mit einem Tricontour-Plot für ein unstrukturiertes Dreiecksgitter vergleichen.",
      "meta": {
        "title": "Konturplot | Unregelmäßige Daten | Python Matplotlib",
        "description": "Lernen Sie, wie Sie mit Python und Matplotlib Konturplots von unregelmäßig verteilten Daten erstellen. Entdecken Sie die Unterschiede zwischen Konturplots auf regulären Gittern und Tricontourplots für unstrukturierte Dreiecksgitter.",
        "keywords": "Konturplot, unregelmäßige Daten, Python, Matplotlib, Datenvisualisierung, Datenanalyse"
      },
      "details": {
        "steps": [
          {
            "title": "Importiere erforderliche Bibliotheken",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Dieser Schritt hat momentan keine Verifizierung",
                "file": "verify1-1.sh",
                "hint": "Dieser Schritt hat momentan keine Verifizierung"
              }
            ]
          },
          {
            "title": "Generiere zufällige Daten",
            "text": "de/step2.md",
            "verify": [
              {
                "name": "Dieser Schritt hat momentan keine Verifizierung",
                "file": "verify2-1.sh",
                "hint": "Dieser Schritt hat momentan keine Verifizierung"
              }
            ]
          },
          {
            "title": "Interpolation auf einem Gitter",
            "text": "de/step3.md",
            "verify": [
              {
                "name": "Dieser Schritt hat momentan keine Verifizierung",
                "file": "verify3-1.sh",
                "hint": "Dieser Schritt hat momentan keine Verifizierung"
              }
            ]
          },
          {
            "title": "Tricontour",
            "text": "de/step4.md",
            "verify": [
              {
                "name": "Dieser Schritt hat momentan keine Verifizierung",
                "file": "verify4-1.sh",
                "hint": "Dieser Schritt hat momentan keine Verifizierung"
              }
            ]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "不規則なデータグリッドのコンター図作成",
      "description": "この実験では、Matplotlib を使って Python で不規則な間隔のデータのコンター図を作成する方法を示します。コンター図は、等高線またはコンター線を使ってデータ値の 2 次元分布を示します。この例では、規則的なグリッド上で補間された不規則な間隔のデータのコンター図と、非構造化三角グリッドのトライコンター図を比較します。",
      "meta": {
        "title": "コンター図作成 | 不規則なデータ | Python Matplotlib",
        "description": "Python と Matplotlib を使って不規則な間隔のデータのコンター図を作成する方法を学びましょう。規則的なグリッド上のコンター図と非構造化三角グリッドのトライコンター図の違いを探りましょう。",
        "keywords": "コンター図作成，不規則なデータ，Python, Matplotlib, データ可視化，データ分析"
      },
      "details": {
        "steps": [
          {
            "title": "必要なライブラリをインポートする",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "このステップには現在、検証はありません",
                "file": "verify1-1.sh",
                "hint": "このステップには現在、検証はありません"
              }
            ]
          },
          {
            "title": "ランダムなデータを生成する",
            "text": "ja/step2.md",
            "verify": [
              {
                "name": "このステップには現在、検証はありません",
                "file": "verify2-1.sh",
                "hint": "このステップには現在、検証はありません"
              }
            ]
          },
          {
            "title": "グリッド上での補間",
            "text": "ja/step3.md",
            "verify": [
              {
                "name": "このステップには現在、検証はありません",
                "file": "verify3-1.sh",
                "hint": "このステップには現在、検証はありません"
              }
            ]
          },
          {
            "title": "トライコンター",
            "text": "ja/step4.md",
            "verify": [
              {
                "name": "このステップには現在、検証はありません",
                "file": "verify4-1.sh",
                "hint": "このステップには現在、検証はありません"
              }
            ]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Построение контурной диаграммы для несбалансированной сетки данных",
      "description": "В этом практическом занятии показано, как создавать контурную диаграмму для несбалансированных данных в Python с использованием Matplotlib. Контурная диаграмма показывает 2D-распределение значений данных с использованием изолиний или контуров. В этом примере мы сравним контурную диаграмму для несбалансированных данных, интерполированных на регулярной сетке, с tricontour-диаграммой для неструктурированной треугольной сетки.",
      "meta": {
        "title": "Построение контурной диаграммы | Несбалансированные данные | Python Matplotlib",
        "description": "Изучите, как создавать контурные диаграммы для несбалансированных данных с использованием Python и Matplotlib. Исследуйте различия между контурными диаграммами на регулярных сетках и tricontour-диаграммами для неструктурированных треугольных сеток.",
        "keywords": "построение контурной диаграммы, несбалансированные данные, python, matplotlib, визуализация данных, анализ данных"
      },
      "details": {
        "steps": [
          {
            "title": "Импортировать необходимые библиотеки",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "На данный момент эта стадия не имеет проверки",
                "file": "verify1-1.sh",
                "hint": "На данный момент эта стадия не имеет проверки"
              }
            ]
          },
          {
            "title": "Сгенерировать случайные данные",
            "text": "ru/step2.md",
            "verify": [
              {
                "name": "На данный момент эта стадия не имеет проверки",
                "file": "verify2-1.sh",
                "hint": "На данный момент эта стадия не имеет проверки"
              }
            ]
          },
          {
            "title": "Интерполяция на сетке",
            "text": "ru/step3.md",
            "verify": [
              {
                "name": "На данный момент эта стадия не имеет проверки",
                "file": "verify3-1.sh",
                "hint": "На данный момент эта стадия не имеет проверки"
              }
            ]
          },
          {
            "title": "Триконтур",
            "text": "ru/step4.md",
            "verify": [
              {
                "name": "На данный момент эта стадия не имеет проверки",
                "file": "verify4-1.sh",
                "hint": "На данный момент эта стадия не имеет проверки"
              }
            ]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    }
  ]
}
