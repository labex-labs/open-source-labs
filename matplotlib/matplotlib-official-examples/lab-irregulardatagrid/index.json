{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Irregular Data Grid Contour Plotting",
  "description": "This lab demonstrates how to create a contour plot of irregularly spaced data in Python using Matplotlib. The contour plot shows the 2D distribution of data values using iso-contours or contour lines. In this example, we will compare a contour plot of irregularly spaced data interpolated on a regular grid versus a tricontour plot for an unstructured triangular grid.",
  "meta": {
    "title": "Contour Plotting | Irregular Data | Python Matplotlib",
    "description": "Learn how to create contour plots of irregularly spaced data using Python and Matplotlib. Explore the differences between contour plots on regular grids and tricontour plots for unstructured triangular grids.",
    "keywords": "contour plotting, irregular data, python, matplotlib, data visualization, data analysis"
  },
  "difficulty": "Beginner",
  "time": 20,
  "hidden": true,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Import necessary libraries",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "This step has no verification at the moment",
            "file": "verify1-1.sh",
            "hint": "This step has no verification at the moment"
          }
        ],
        "skills": [
          "matplotlib/figures_axes",
          "matplotlib/importing_matplotlib",
          "python/data_visualization",
          "python/importing_modules",
          "python/numerical_computing"
        ]
      },
      {
        "title": "Generate random data",
        "text": "en/step2.md",
        "verify": [
          {
            "name": "This step has no verification at the moment",
            "file": "verify2-1.sh",
            "hint": "This step has no verification at the moment"
          }
        ],
        "skills": [
          "python/math_random",
          "python/standard_libraries",
          "python/tuples"
        ]
      },
      {
        "title": "Interpolation on a grid",
        "text": "en/step3.md",
        "verify": [
          {
            "name": "This step has no verification at the moment",
            "file": "verify3-1.sh",
            "hint": "This step has no verification at the moment"
          }
        ],
        "skills": [
          "matplotlib/line_plots",
          "python/build_in_functions",
          "python/data_collections",
          "python/tuples",
          "python/variables_data_types"
        ]
      },
      {
        "title": "Tricontour",
        "text": "en/step4.md",
        "verify": [
          {
            "name": "This step has no verification at the moment",
            "file": "verify4-1.sh",
            "hint": "This step has no verification at the moment"
          }
        ],
        "skills": [
          "matplotlib/line_plots",
          "python/build_in_functions",
          "python/data_collections",
          "python/tuples",
          "python/variables_data_types"
        ]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    },
    "assets": {
      "host01": [
        {
          "file": "irregulardatagrid.ipynb",
          "target": "/home/labex/project",
          "chmod": "ugo+rwx"
        }
      ]
    }
  },
  "backend": {
    "imageid": "jupyter-ubuntu:2204"
  },
  "contributors": [],
  "license": {
    "name": "BSD 3-Clause",
    "url": "https://github.com/matplotlib/matplotlib/tree/main/LICENSE",
    "repo": "https://github.com/matplotlib/matplotlib"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "不规则数据网格等高线绘制",
      "description": "本实验展示了如何使用 Matplotlib 在 Python 中创建不规则间隔数据的等高线图。等高线图使用等值线或等高线显示数据值的二维分布。在本示例中，我们将比较在规则网格上插值的不规则间隔数据的等高线图与非结构化三角形网格的三角等高线图。",
      "meta": {
        "title": "等高线绘制 | 不规则数据 | Python Matplotlib",
        "description": "学习如何使用 Python 和 Matplotlib 创建不规则间隔数据的等高线图。探索规则网格上的等高线图与非结构化三角形网格的三角等高线图之间的差异。",
        "keywords": "等高线绘制，不规则数据，Python, Matplotlib, 数据可视化，数据分析"
      },
      "details": {
        "steps": [
          {
            "title": "导入必要的库",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "此步骤目前没有验证",
                "file": "verify1-1.sh",
                "hint": "此步骤目前没有验证"
              }
            ]
          },
          {
            "title": "生成随机数据",
            "text": "zh/step2.md",
            "verify": [
              {
                "name": "此步骤目前没有验证",
                "file": "verify2-1.sh",
                "hint": "此步骤目前没有验证"
              }
            ]
          },
          {
            "title": "在网格上进行插值",
            "text": "zh/step3.md",
            "verify": [
              {
                "name": "此步骤目前没有验证",
                "file": "verify3-1.sh",
                "hint": "此步骤目前没有验证"
              }
            ]
          },
          {
            "title": "三角等高线",
            "text": "zh/step4.md",
            "verify": [
              {
                "name": "此步骤目前没有验证",
                "file": "verify4-1.sh",
                "hint": "此步骤目前没有验证"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Gráfico de contornos en una cuadrícula de datos irregular",
      "description": "Esta práctica demuestra cómo crear un gráfico de contornos de datos con espaciado irregular en Python utilizando Matplotlib. El gráfico de contornos muestra la distribución bidimensional de los valores de datos utilizando iso-contornos o líneas de contorno. En este ejemplo, compararemos un gráfico de contornos de datos con espaciado irregular interpolados en una cuadrícula regular frente a un gráfico tricontour para una cuadrícula triangular no estructurada.",
      "meta": {
        "title": "Gráfico de contornos | Datos irregulares | Python Matplotlib",
        "description": "Aprende cómo crear gráficos de contornos de datos con espaciado irregular utilizando Python y Matplotlib. Explora las diferencias entre los gráficos de contornos en cuadrículas regulares y los gráficos tricontour para cuadrículas triangulares no estructuradas.",
        "keywords": "gráfico de contornos, datos irregulares, python, matplotlib, visualización de datos, análisis de datos"
      },
      "details": {
        "steps": [
          {
            "title": "Importar las bibliotecas necesarias",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Este paso no tiene verificación en este momento",
                "file": "verify1-1.sh",
                "hint": "Este paso no tiene verificación en este momento"
              }
            ]
          },
          {
            "title": "Generar datos aleatorios",
            "text": "es/step2.md",
            "verify": [
              {
                "name": "Este paso no tiene verificación en este momento",
                "file": "verify2-1.sh",
                "hint": "Este paso no tiene verificación en este momento"
              }
            ]
          },
          {
            "title": "Interpolación en una cuadrícula",
            "text": "es/step3.md",
            "verify": [
              {
                "name": "Este paso no tiene verificación en este momento",
                "file": "verify3-1.sh",
                "hint": "Este paso no tiene verificación en este momento"
              }
            ]
          },
          {
            "title": "Tricontorno",
            "text": "es/step4.md",
            "verify": [
              {
                "name": "Este paso no tiene verificación en este momento",
                "file": "verify4-1.sh",
                "hint": "Este paso no tiene verificación en este momento"
              }
            ]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Tracé de contour sur une grille de données irrégulière",
      "description": "Ce laboratoire démontre comment créer un tracé de contour de données à espacement irrégulier en Python à l'aide de Matplotlib. Le tracé de contour montre la distribution 2D des valeurs de données en utilisant des iso-contours ou des lignes de contour. Dans cet exemple, nous comparerons un tracé de contour de données à espacement irrégulier interpolé sur une grille régulière avec un tracé tricontour pour une grille triangulaire non structurée.",
      "meta": {
        "title": "Tracé de contour | Données irrégulières | Python Matplotlib",
        "description": "Découvrez comment créer des tracés de contour de données à espacement irrégulier à l'aide de Python et de Matplotlib. Explorez les différences entre les tracés de contour sur des grilles régulières et les tracés tricontour pour des grilles triangulaires non structurées.",
        "keywords": "tracé de contour, données irrégulières, python, matplotlib, visualisation de données, analyse de données"
      },
      "details": {
        "steps": [
          {
            "title": "Importer les bibliothèques nécessaires",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Cette étape n'a pas de vérification pour le moment",
                "file": "verify1-1.sh",
                "hint": "Cette étape n'a pas de vérification pour le moment"
              }
            ]
          },
          {
            "title": "Générer des données aléatoires",
            "text": "fr/step2.md",
            "verify": [
              {
                "name": "Cette étape n'a pas de vérification pour le moment",
                "file": "verify2-1.sh",
                "hint": "Cette étape n'a pas de vérification pour le moment"
              }
            ]
          },
          {
            "title": "Interpolation sur une grille",
            "text": "fr/step3.md",
            "verify": [
              {
                "name": "Cette étape n'a pas de vérification pour le moment",
                "file": "verify3-1.sh",
                "hint": "Cette étape n'a pas de vérification pour le moment"
              }
            ]
          },
          {
            "title": "Tricontour",
            "text": "fr/step4.md",
            "verify": [
              {
                "name": "Cette étape n'a pas de vérification pour le moment",
                "file": "verify4-1.sh",
                "hint": "Cette étape n'a pas de vérification pour le moment"
              }
            ]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Konturplot für unregelmäßiges Datennetz",
      "description": "In diesem Lab wird gezeigt, wie man in Python mithilfe von Matplotlib einen Konturplot von unregelmäßig verteilten Daten erstellt. Der Konturplot zeigt die 2D-Verteilung von Datenwerten mithilfe von Iso-Konturen oder Konturlinien. In diesem Beispiel werden wir einen Konturplot von unregelmäßig verteilten Daten, die auf einem regulären Gitter interpoliert wurden, mit einem Tricontour-Plot für ein unstrukturiertes Dreiecksgitter vergleichen.",
      "meta": {
        "title": "Konturplot | Unregelmäßige Daten | Python Matplotlib",
        "description": "Lernen Sie, wie Sie mit Python und Matplotlib Konturplots von unregelmäßig verteilten Daten erstellen. Entdecken Sie die Unterschiede zwischen Konturplots auf regulären Gittern und Tricontourplots für unstrukturierte Dreiecksgitter.",
        "keywords": "Konturplot, unregelmäßige Daten, Python, Matplotlib, Datenvisualisierung, Datenanalyse"
      },
      "details": {
        "steps": [
          {
            "title": "Importiere erforderliche Bibliotheken",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Dieser Schritt hat momentan keine Verifizierung",
                "file": "verify1-1.sh",
                "hint": "Dieser Schritt hat momentan keine Verifizierung"
              }
            ]
          },
          {
            "title": "Generiere zufällige Daten",
            "text": "de/step2.md",
            "verify": [
              {
                "name": "Dieser Schritt hat momentan keine Verifizierung",
                "file": "verify2-1.sh",
                "hint": "Dieser Schritt hat momentan keine Verifizierung"
              }
            ]
          },
          {
            "title": "Interpolation auf einem Gitter",
            "text": "de/step3.md",
            "verify": [
              {
                "name": "Dieser Schritt hat momentan keine Verifizierung",
                "file": "verify3-1.sh",
                "hint": "Dieser Schritt hat momentan keine Verifizierung"
              }
            ]
          },
          {
            "title": "Tricontour",
            "text": "de/step4.md",
            "verify": [
              {
                "name": "Dieser Schritt hat momentan keine Verifizierung",
                "file": "verify4-1.sh",
                "hint": "Dieser Schritt hat momentan keine Verifizierung"
              }
            ]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Построение контурной диаграммы для несбалансированной сетки данных",
      "description": "В этом практическом занятии показано, как создавать контурную диаграмму для несбалансированных данных в Python с использованием Matplotlib. Контурная диаграмма показывает 2D-распределение значений данных с использованием изолиний или контуров. В этом примере мы сравним контурную диаграмму для несбалансированных данных, интерполированных на регулярной сетке, с tricontour-диаграммой для неструктурированной треугольной сетки.",
      "meta": {
        "title": "Построение контурной диаграммы | Несбалансированные данные | Python Matplotlib",
        "description": "Изучите, как создавать контурные диаграммы для несбалансированных данных с использованием Python и Matplotlib. Исследуйте различия между контурными диаграммами на регулярных сетках и tricontour-диаграммами для неструктурированных треугольных сеток.",
        "keywords": "построение контурной диаграммы, несбалансированные данные, python, matplotlib, визуализация данных, анализ данных"
      },
      "details": {
        "steps": [
          {
            "title": "Импортировать необходимые библиотеки",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "На данный момент эта стадия не имеет проверки",
                "file": "verify1-1.sh",
                "hint": "На данный момент эта стадия не имеет проверки"
              }
            ]
          },
          {
            "title": "Сгенерировать случайные данные",
            "text": "ru/step2.md",
            "verify": [
              {
                "name": "На данный момент эта стадия не имеет проверки",
                "file": "verify2-1.sh",
                "hint": "На данный момент эта стадия не имеет проверки"
              }
            ]
          },
          {
            "title": "Интерполяция на сетке",
            "text": "ru/step3.md",
            "verify": [
              {
                "name": "На данный момент эта стадия не имеет проверки",
                "file": "verify3-1.sh",
                "hint": "На данный момент эта стадия не имеет проверки"
              }
            ]
          },
          {
            "title": "Триконтур",
            "text": "ru/step4.md",
            "verify": [
              {
                "name": "На данный момент эта стадия не имеет проверки",
                "file": "verify4-1.sh",
                "hint": "На данный момент эта стадия не имеет проверки"
              }
            ]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    },
    {
      "lang": "ko",
      "title": "불규칙 데이터 그리드 등고선 플로팅",
      "description": "이 랩에서는 Matplotlib 을 사용하여 Python 에서 불규칙하게 배치된 데이터의 등고선 플롯을 생성하는 방법을 시연합니다. 등고선 플롯은 등고선 또는 윤곽선을 사용하여 데이터 값의 2D 분포를 보여줍니다. 이 예제에서는 정규 그리드에서 보간된 불규칙하게 배치된 데이터의 등고선 플롯과 비구조적 삼각 그리드에 대한 tricontour 플롯을 비교합니다.",
      "meta": {
        "title": "등고선 플로팅 | 불규칙 데이터 | Python Matplotlib - 데이터 시각화",
        "description": "Python 과 Matplotlib 을 사용하여 불규칙하게 배치된 데이터의 등고선 플롯을 만드는 방법을 알아보세요. 정규 그리드의 등고선 플롯과 비구조적 삼각 그리드의 tricontour 플롯의 차이점을 살펴보세요.",
        "keywords": "등고선 플로팅, 불규칙 데이터, 파이썬, matplotlib, 데이터 시각화, 데이터 분석, 등고선 그래프, contour plot"
      },
      "details": {
        "steps": [
          {
            "title": "필요한 라이브러리 가져오기",
            "text": "ko/step1.md",
            "verify": [
              {
                "name": "현재 이 단계는 검증이 없습니다.",
                "file": "verify1-1.sh",
                "hint": "현재 이 단계는 검증이 없습니다."
              }
            ]
          },
          {
            "title": "랜덤 데이터 생성",
            "text": "ko/step2.md",
            "verify": [
              {
                "name": "현재 이 단계는 검증이 없습니다.",
                "file": "verify2-1.sh",
                "hint": "현재 이 단계는 검증이 없습니다."
              }
            ]
          },
          {
            "title": "격자 보간",
            "text": "ko/step3.md",
            "verify": [
              {
                "name": "현재 이 단계는 검증이 없습니다.",
                "file": "verify3-1.sh",
                "hint": "현재 이 단계는 검증이 없습니다."
              }
            ]
          },
          {
            "title": "Tricontour (트리컨투어)",
            "text": "ko/step4.md",
            "verify": [
              {
                "name": "현재 이 단계는 검증이 없습니다.",
                "file": "verify4-1.sh",
                "hint": "현재 이 단계는 검증이 없습니다."
              }
            ]
          }
        ],
        "intro": {
          "text": "ko/intro.md",
          "title": "소개"
        },
        "finish": {
          "text": "ko/finish.md",
          "title": "요약"
        }
      }
    },
    {
      "lang": "pt",
      "title": "Criação de Gráficos de Contorno para Dados Irregulares",
      "description": "Este laboratório demonstra como criar um gráfico de contorno de dados irregularmente espaçados em Python usando Matplotlib. O gráfico de contorno mostra a distribuição 2D dos valores dos dados usando iso-contornos ou linhas de contorno. Neste exemplo, compararemos um gráfico de contorno de dados irregularmente espaçados interpolados em uma grade regular versus um gráfico tricontour para uma grade triangular não estruturada.",
      "meta": {
        "title": "Gráfico de Contorno Python | Dados Irregulares | Matplotlib",
        "description": "Aprenda a criar gráficos de contorno de dados irregularmente espaçados usando Python e Matplotlib. Explore as diferenças entre gráficos de contorno em grades regulares e gráficos tricontour para grades triangulares não estruturadas.",
        "keywords": "gráfico de contorno, dados irregulares, python, matplotlib, visualização de dados, análise de dados"
      },
      "details": {
        "steps": [
          {
            "title": "Importar as bibliotecas necessárias",
            "text": "pt/step1.md",
            "verify": [
              {
                "name": "Este passo não possui verificação no momento",
                "file": "verify1-1.sh",
                "hint": "Este passo não possui verificação no momento"
              }
            ]
          },
          {
            "title": "Gerar dados aleatórios",
            "text": "pt/step2.md",
            "verify": [
              {
                "name": "Este passo não possui verificação no momento",
                "file": "verify2-1.sh",
                "hint": "Este passo não possui verificação no momento"
              }
            ]
          },
          {
            "title": "Interpolação em uma grade",
            "text": "pt/step3.md",
            "verify": [
              {
                "name": "Este passo não possui verificação no momento",
                "file": "verify3-1.sh",
                "hint": "Este passo não possui verificação no momento"
              }
            ]
          },
          {
            "title": "Tricontorno",
            "text": "pt/step4.md",
            "verify": [
              {
                "name": "Este passo não possui verificação no momento",
                "file": "verify4-1.sh",
                "hint": "Este passo não possui verificação no momento"
              }
            ]
          }
        ],
        "intro": {
          "text": "pt/intro.md",
          "title": "Introdução"
        },
        "finish": {
          "text": "pt/finish.md",
          "title": "Resumo"
        }
      }
    },
    {
      "lang": "ja",
      "title": "不規則データグリッド等高線プロット",
      "description": "この実験では、Matplotlib を使用して、Python で不規則に配置されたデータの等高線プロットを作成する方法を示します。等高線プロットは、等高線または等高線を使用して、データ値の 2D 分布を示します。この例では、規則的なグリッド上で補間された不規則に配置されたデータの等高線プロットと、非構造化三角形グリッドの tricontour プロットを比較します。",
      "meta": {
        "title": "等高線プロット | 不規則データ | Python Matplotlib | TDK",
        "description": "Python と Matplotlib を使用して、不規則に配置されたデータの等高線プロットを作成する方法を学びましょう。規則的なグリッド上の等高線プロットと、非構造化三角形グリッドの tricontour プロットの違いを探求します。TDK（等高線、データ可視化、Python）",
        "keywords": "等高線プロット，不規則データ，python, matplotlib, データ可視化，データ分析，TDK, 等高線図"
      },
      "details": {
        "steps": [
          {
            "title": "必要なライブラリのインポート",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "現時点では、このステップに検証はありません",
                "file": "verify1-1.sh",
                "hint": "現時点では、このステップに検証はありません"
              }
            ]
          },
          {
            "title": "ランダムデータの生成",
            "text": "ja/step2.md",
            "verify": [
              {
                "name": "現時点では、このステップに検証はありません",
                "file": "verify2-1.sh",
                "hint": "現時点では、このステップに検証はありません"
              }
            ]
          },
          {
            "title": "グリッド上での補間",
            "text": "ja/step3.md",
            "verify": [
              {
                "name": "現時点では、このステップに検証はありません",
                "file": "verify3-1.sh",
                "hint": "現時点では、このステップに検証はありません"
              }
            ]
          },
          {
            "title": "Tricontour（トライコントゥア）",
            "text": "ja/step4.md",
            "verify": [
              {
                "name": "現時点では、このステップに検証はありません",
                "file": "verify4-1.sh",
                "hint": "現時点では、このステップに検証はありません"
              }
            ]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    }
  ]
}
