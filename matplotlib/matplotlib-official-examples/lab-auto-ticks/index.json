{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Matplotlib Tick Placement Customization",
  "description": "In this lab, we will learn how to set the behavior of tick auto-placement in Matplotlib. By default, Matplotlib will choose the number of ticks and tick positions so that there is a reasonable number of ticks on the axis and they are located at 'round' numbers. However, there may be no ticks on the edges of the plot. We will learn how to switch the axes.autolimit_mode to 'round_numbers' to keep ticks at round numbers and also have ticks at the edges.",
  "meta": {
    "title": "Matplotlib Tick Auto-Placement | Data Visualization",
    "description": "Learn how to set the behavior of tick auto-placement in Matplotlib, including keeping ticks at round numbers and having ticks at the edges of the plot.",
    "keywords": "Matplotlib, Data Visualization, Tick Auto-Placement, Round Numbers, Scatter Plot"
  },
  "difficulty": "Beginner",
  "time": 15,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Scatter plot without round_numbers autolimit_mode",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "This step has no verification at the moment",
            "file": "verify1-1.sh",
            "hint": "This step has no verification at the moment"
          }
        ],
        "skills": []
      },
      {
        "title": "Scatter plot with round_numbers autolimit_mode",
        "text": "en/step2.md",
        "verify": [
          {
            "name": "This step has no verification at the moment",
            "file": "verify2-1.sh",
            "hint": "This step has no verification at the moment"
          }
        ],
        "skills": []
      },
      {
        "title": "Scatter plot with additional margin",
        "text": "en/step3.md",
        "verify": [
          {
            "name": "This step has no verification at the moment",
            "file": "verify3-1.sh",
            "hint": "This step has no verification at the moment"
          }
        ],
        "skills": []
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    },
    "assets": {
      "host01": [
        {
          "file": "auto-ticks.ipynb",
          "target": "/home/labex/project",
          "chmod": "ugo+rwx"
        }
      ]
    }
  },
  "backend": {
    "imageid": "jupyter-ubuntu:2204"
  },
  "contributors": ["huduo0812"],
  "license": {
    "name": "BSD 3-Clause",
    "url": "https://github.com/matplotlib/matplotlib/tree/main/LICENSE",
    "repo": "https://github.com/matplotlib/matplotlib"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "Matplotlib 刻度位置自定义",
      "description": "在本实验中，我们将学习如何在 Matplotlib 中设置刻度自动定位的行为。默认情况下，Matplotlib 会选择刻度的数量和位置，以便轴上有合理数量的刻度，并且它们位于“整数”位置。然而，在绘图的边缘可能没有刻度。我们将学习如何将 axes.autolimit_mode 切换为'round_numbers'，以保持刻度为整数，并且在边缘也有刻度。",
      "meta": {
        "title": "Matplotlib 刻度自动定位 | 数据可视化",
        "description": "学习如何在 Matplotlib 中设置刻度自动定位的行为，包括保持刻度为整数以及在绘图边缘有刻度。",
        "keywords": "Matplotlib, 数据可视化，刻度自动定位，整数，散点图"
      },
      "details": {
        "steps": [
          {
            "title": "无 round_numbers 自动限制模式的散点图",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "此步骤目前没有验证",
                "file": "verify1-1.sh",
                "hint": "此步骤目前没有验证"
              }
            ]
          },
          {
            "title": "具有 round_numbers 自动限制模式的散点图",
            "text": "zh/step2.md",
            "verify": [
              {
                "name": "此步骤目前没有验证",
                "file": "verify2-1.sh",
                "hint": "此步骤目前没有验证"
              }
            ]
          },
          {
            "title": "带有额外边距的散点图",
            "text": "zh/step3.md",
            "verify": [
              {
                "name": "此步骤目前没有验证",
                "file": "verify3-1.sh",
                "hint": "此步骤目前没有验证"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Personalización de la colocación de las marcas de graduación en Matplotlib",
      "description": "En este laboratorio, aprenderemos cómo configurar el comportamiento de la colocación automática de las marcas de graduación en Matplotlib. Por defecto, Matplotlib elegirá el número de marcas de graduación y sus posiciones de modo que haya un número razonable de marcas de graduación en el eje y estén ubicadas en números 'redondeados'. Sin embargo, es posible que no haya marcas de graduación en los bordes de la gráfica. Aprenderemos cómo cambiar el axes.autolimit_mode a 'round_numbers' para que las marcas de graduación se mantengan en números redondeados y también haya marcas de graduación en los bordes.",
      "meta": {
        "title": "Colocación automática de las marcas de graduación en Matplotlib | Visualización de datos",
        "description": "Aprende cómo configurar el comportamiento de la colocación automática de las marcas de graduación en Matplotlib, incluyendo mantener las marcas de graduación en números redondeados y tener marcas de graduación en los bordes de la gráfica.",
        "keywords": "Matplotlib, Visualización de datos, Colocación automática de las marcas de graduación, Números redondeados, Diagrama de dispersión"
      },
      "details": {
        "steps": [
          {
            "title": "Diagrama de dispersión sin el modo de autolimitación round_numbers",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "En este momento, este paso no tiene verificaciones",
                "file": "verify1-1.sh",
                "hint": "En este momento, este paso no tiene verificaciones"
              }
            ]
          },
          {
            "title": "Diagrama de dispersión con el modo de autolimitación round_numbers",
            "text": "es/step2.md",
            "verify": [
              {
                "name": "En este momento, este paso no tiene verificaciones",
                "file": "verify2-1.sh",
                "hint": "En este momento, este paso no tiene verificaciones"
              }
            ]
          },
          {
            "title": "Diagrama de dispersión con margen adicional",
            "text": "es/step3.md",
            "verify": [
              {
                "name": "En este momento, este paso no tiene verificaciones",
                "file": "verify3-1.sh",
                "hint": "En este momento, este paso no tiene verificaciones"
              }
            ]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Personnalisation du positionnement des graduations dans Matplotlib",
      "description": "Dans ce laboratoire, nous allons apprendre à définir le comportement du positionnement automatique des graduations dans Matplotlib. Par défaut, Matplotlib choisira le nombre de graduations et leurs positions de manière à ce qu'il y ait un nombre raisonnable de graduations sur l'axe et qu'elles soient situées à des nombres 'arrondis'. Cependant, il peut ne pas y avoir de graduations sur les bords du graphique. Nous allons apprendre à basculer le mode d'autolimitation des axes sur 'round_numbers' pour maintenir les graduations à des nombres arrondis et également avoir des graduations sur les bords.",
      "meta": {
        "title": "Positionnement automatique des graduations dans Matplotlib | Visualisation de données",
        "description": "Apprenez à définir le comportement du positionnement automatique des graduations dans Matplotlib, y compris maintenir les graduations à des nombres arrondis et avoir des graduations sur les bords du graphique.",
        "keywords": "Matplotlib, Visualisation de données, Positionnement automatique des graduations, Nombres arrondis, Diagramme en points"
      },
      "details": {
        "steps": [
          {
            "title": "Diagramme en points sans mode d'autolimitation round_numbers",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Cette étape n'a pas de vérification pour le moment",
                "file": "verify1-1.sh",
                "hint": "Cette étape n'a pas de vérification pour le moment"
              }
            ]
          },
          {
            "title": "Diagramme en points avec mode d'autolimitation round_numbers",
            "text": "fr/step2.md",
            "verify": [
              {
                "name": "Cette étape n'a pas de vérification pour le moment",
                "file": "verify2-1.sh",
                "hint": "Cette étape n'a pas de vérification pour le moment"
              }
            ]
          },
          {
            "title": "Diagramme en points avec marge supplémentaire",
            "text": "fr/step3.md",
            "verify": [
              {
                "name": "Cette étape n'a pas de vérification pour le moment",
                "file": "verify3-1.sh",
                "hint": "Cette étape n'a pas de vérification pour le moment"
              }
            ]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Anpassung der Tick-Positionierung in Matplotlib",
      "description": "In diesem Lab werden wir lernen, wie das Verhalten der automatischen Tick-Positionierung in Matplotlib festgelegt wird. Standardmäßig wählt Matplotlib die Anzahl der Tick-Marks und ihre Positionen so, dass es eine vernünftige Anzahl von Tick-Marks auf der Achse gibt und sie an 'geraden' Zahlen platziert sind. Es kann jedoch keine Tick-Marks an den Rändern des Graphen geben. Wir werden lernen, wie wir die axes.autolimit_mode auf 'round_numbers' umschalten, um Tick-Marks an geraden Zahlen zu halten und auch Tick-Marks an den Rändern zu haben.",
      "meta": {
        "title": "Matplotlib Tick-Automatische Positionierung | Datenvisualisierung",
        "description": "Lernen Sie, wie Sie das Verhalten der automatischen Tick-Positionierung in Matplotlib festlegen, einschließlich des Halten von Tick-Marks an geraden Zahlen und des Haben von Tick-Marks an den Rändern des Graphen.",
        "keywords": "Matplotlib, Datenvisualisierung, Tick-Automatische Positionierung, Gerade Zahlen, Streudiagramm"
      },
      "details": {
        "steps": [
          {
            "title": "Streudiagramm ohne autolimit_mode 'round_numbers'",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Dieser Schritt hat momentan keine Verifikation",
                "file": "verify1-1.sh",
                "hint": "Dieser Schritt hat momentan keine Verifikation"
              }
            ]
          },
          {
            "title": "Streudiagramm mit autolimit_mode 'round_numbers'",
            "text": "de/step2.md",
            "verify": [
              {
                "name": "Dieser Schritt hat momentan keine Verifikation",
                "file": "verify2-1.sh",
                "hint": "Dieser Schritt hat momentan keine Verifikation"
              }
            ]
          },
          {
            "title": "Streudiagramm mit zusätzlichem Rand",
            "text": "de/step3.md",
            "verify": [
              {
                "name": "Dieser Schritt hat momentan keine Verifikation",
                "file": "verify3-1.sh",
                "hint": "Dieser Schritt hat momentan keine Verifikation"
              }
            ]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "Matplotlib の目盛り配置のカスタマイズ",
      "description": "この実験では、Matplotlib における目盛りの自動配置の動作を設定する方法を学びます。デフォルトでは、Matplotlib は目盛りの数と目盛りの位置を選択して、軸上に適切な数の目盛りがあり、それらが '丸い' 数の位置にあるようにします。ただし、プロットの端には目盛りがない場合があります。丸い数の目盛りを維持し、端にも目盛りを表示するように、axes.autolimit_mode を 'round_numbers' に切り替える方法を学びます。",
      "meta": {
        "title": "Matplotlib の目盛り自動配置 | データ可視化",
        "description": "Matplotlib における目盛り自動配置の動作を設定する方法を学びます。丸い数の目盛りを維持し、プロットの端にも目盛りを表示する方法も含まれます。",
        "keywords": "Matplotlib, データ可視化，目盛り自動配置，丸い数，散布図"
      },
      "details": {
        "steps": [
          {
            "title": "round_numbers オートリミットモードなしの散布図",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "このステップでは現在検証はありません",
                "file": "verify1-1.sh",
                "hint": "このステップでは現在検証はありません"
              }
            ]
          },
          {
            "title": "round_numbers オートリミットモード付きの散布図",
            "text": "ja/step2.md",
            "verify": [
              {
                "name": "このステップでは現在検証はありません",
                "file": "verify2-1.sh",
                "hint": "このステップでは現在検証はありません"
              }
            ]
          },
          {
            "title": "追加の余白付きの散布図",
            "text": "ja/step3.md",
            "verify": [
              {
                "name": "このステップでは現在検証はありません",
                "file": "verify3-1.sh",
                "hint": "このステップでは現在検証はありません"
              }
            ]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Настройка размещения делений на осях в Matplotlib",
      "description": "В этом практическом занятии мы узнаем, как настраивать поведение автоматической настройки делений на осях в Matplotlib. По умолчанию Matplotlib выбирает количество делений и их позиции так, чтобы на оси было разумное количество делений, и они располагались в 'округлых' числах. Однако на краях графика может не быть делений. Мы узнаем, как переключить axes.autolimit_mode в 'round_numbers', чтобы деления были в округленных числах и были также на краях.",
      "meta": {
        "title": "Автоматическая настройка делений на осях в Matplotlib | Визуализация данных",
        "description": "Изучите, как настраивать поведение автоматической настройки делений на осях в Matplotlib, включая сохранение делений в округленных числах и наличие делений на краях графика.",
        "keywords": "Matplotlib, Визуализация данных, Автоматическая настройка делений, Округленные числа, Диаграмма рассеяния"
      },
      "details": {
        "steps": [
          {
            "title": "Диаграмма рассеяния без режима автоматической настройки делений round_numbers",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "На этом этапе проверок нет в настоящее время",
                "file": "verify1-1.sh",
                "hint": "На этом этапе проверок нет в настоящее время"
              }
            ]
          },
          {
            "title": "Диаграмма рассеяния с режимом автоматической настройки делений round_numbers",
            "text": "ru/step2.md",
            "verify": [
              {
                "name": "На этом этапе проверок нет в настоящее время",
                "file": "verify2-1.sh",
                "hint": "На этом этапе проверок нет в настоящее время"
              }
            ]
          },
          {
            "title": "Диаграмма рассеяния с дополнительным полем",
            "text": "ru/step3.md",
            "verify": [
              {
                "name": "На этом этапе проверок нет в настоящее время",
                "file": "verify3-1.sh",
                "hint": "На этом этапе проверок нет в настоящее время"
              }
            ]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    },
    {
      "lang": "ko",
      "title": "Matplotlib 틱 배치 사용자 정의",
      "description": "이 랩에서는 Matplotlib 에서 틱 자동 배치 동작을 설정하는 방법을 배웁니다. 기본적으로 Matplotlib 는 축에 적절한 수의 틱이 있고 '둥근' 숫자에 위치하도록 틱 수와 틱 위치를 선택합니다. 그러나 플롯의 가장자리에는 틱이 없을 수 있습니다. axes.autolimit_mode 를 'round_numbers'로 전환하여 틱을 둥근 숫자로 유지하고 가장자리에 틱을 배치하는 방법을 배웁니다.",
      "meta": {
        "title": "Matplotlib 틱 자동 배치 | 데이터 시각화",
        "description": "Matplotlib 에서 틱 자동 배치 동작을 설정하는 방법을 알아보세요. 틱을 둥근 숫자로 유지하고 플롯 가장자리에 틱을 배치하는 방법을 포함합니다.",
        "keywords": "Matplotlib, 데이터 시각화, 틱 자동 배치, 둥근 숫자, 산점도"
      },
      "details": {
        "steps": [
          {
            "title": "round_numbers autolimit_mode 없는 산점도",
            "text": "ko/step1.md",
            "verify": [
              {
                "name": "현재 이 단계에는 검증이 없습니다.",
                "file": "verify1-1.sh",
                "hint": "현재 이 단계에는 검증이 없습니다."
              }
            ]
          },
          {
            "title": "round_numbers autolimit_mode 를 사용한 산점도",
            "text": "ko/step2.md",
            "verify": [
              {
                "name": "현재 이 단계에는 검증이 없습니다.",
                "file": "verify2-1.sh",
                "hint": "현재 이 단계에는 검증이 없습니다."
              }
            ]
          },
          {
            "title": "여백 추가된 산점도",
            "text": "ko/step3.md",
            "verify": [
              {
                "name": "현재 이 단계에는 검증이 없습니다.",
                "file": "verify3-1.sh",
                "hint": "현재 이 단계에는 검증이 없습니다."
              }
            ]
          }
        ],
        "intro": {
          "text": "ko/intro.md",
          "title": "소개"
        },
        "finish": {
          "text": "ko/finish.md",
          "title": "요약"
        }
      }
    },
    {
      "lang": "pt",
      "title": "Personalização da Posição dos Ticks no Matplotlib",
      "description": "Neste laboratório, aprenderemos como definir o comportamento da auto-posição dos ticks no Matplotlib. Por padrão, o Matplotlib escolherá o número de ticks e suas posições de forma que haja um número razoável de ticks no eixo e que eles estejam localizados em números 'arredondados'. No entanto, pode não haver ticks nas bordas do gráfico. Aprenderemos como mudar o axes.autolimit_mode para 'round_numbers' para manter os ticks em números arredondados e também ter ticks nas bordas.",
      "meta": {
        "title": "Auto-Posicionamento de Ticks no Matplotlib | Visualização de Dados",
        "description": "Aprenda como definir o comportamento da auto-posição dos ticks no Matplotlib, incluindo manter os ticks em números arredondados e ter ticks nas bordas do gráfico.",
        "keywords": "Matplotlib, Visualização de Dados, Auto-Posicionamento de Ticks, Números Arredondados, Gráfico de Dispersão"
      },
      "details": {
        "steps": [
          {
            "title": "Gráfico de Dispersão sem o modo autolimit_mode round_numbers",
            "text": "pt/step1.md",
            "verify": [
              {
                "name": "Este passo não possui verificação no momento",
                "file": "verify1-1.sh",
                "hint": "Este passo não possui verificação no momento"
              }
            ]
          },
          {
            "title": "Gráfico de Dispersão com o modo autolimit_mode round_numbers",
            "text": "pt/step2.md",
            "verify": [
              {
                "name": "Este passo não possui verificação no momento",
                "file": "verify2-1.sh",
                "hint": "Este passo não possui verificação no momento"
              }
            ]
          },
          {
            "title": "Gráfico de Dispersão com margem adicional",
            "text": "pt/step3.md",
            "verify": [
              {
                "name": "Este passo não possui verificação no momento",
                "file": "verify3-1.sh",
                "hint": "Este passo não possui verificação no momento"
              }
            ]
          }
        ],
        "intro": {
          "text": "pt/intro.md",
          "title": "Introdução"
        },
        "finish": {
          "text": "pt/finish.md",
          "title": "Resumo"
        }
      }
    }
  ]
}
