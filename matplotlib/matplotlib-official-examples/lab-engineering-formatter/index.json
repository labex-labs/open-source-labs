{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Labeling Ticks Using Engineering Notation",
  "description": "In data visualization, it is essential to label the ticks on axes accurately. The EngFormatter in Matplotlib is a class that enables one to label the ticks on an axis using engineering notation. Engineering notation is a mathematical representation of numbers that uses powers of ten with a multiple of three. It is a concise way to express large or small numbers that are difficult to read or write in standard notation. In this lab, we will learn how to label ticks on an axis using engineering notation.",
  "meta": {
    "title": "Data Visualization | Engineering Notation | Matplotlib",
    "description": "Learn how to label ticks on an axis using engineering notation in data visualization with Matplotlib.",
    "keywords": "data visualization, engineering notation, matplotlib, python, data analysis"
  },
  "difficulty": "Beginner",
  "time": 25,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Import Required Libraries",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "This step has no verification at the moment",
            "file": "verify1-1.sh",
            "hint": "This step has no verification at the moment"
          }
        ],
        "skills": [
          "matplotlib/figures_axes",
          "matplotlib/importing_matplotlib",
          "python/data_visualization",
          "python/importing_modules",
          "python/numerical_computing",
          "python/using_packages"
        ]
      },
      {
        "title": "Create Artificial Data",
        "text": "en/step2.md",
        "verify": [
          {
            "name": "This step has no verification at the moment",
            "file": "verify2-1.sh",
            "hint": "This step has no verification at the moment"
          }
        ],
        "skills": [
          "python/comments",
          "python/for_loops",
          "python/math_random",
          "python/standard_libraries",
          "python/tuples"
        ]
      },
      {
        "title": "Create the Figure and Subplots",
        "text": "en/step3.md",
        "verify": [
          {
            "name": "This step has no verification at the moment",
            "file": "verify3-1.sh",
            "hint": "This step has no verification at the moment"
          }
        ],
        "skills": [
          "matplotlib/log_scale",
          "python/comments",
          "python/for_loops",
          "python/tuples"
        ]
      },
      {
        "title": "Label the Ticks Using Engineering Notation",
        "text": "en/step4.md",
        "verify": [
          {
            "name": "This step has no verification at the moment",
            "file": "verify4-1.sh",
            "hint": "This step has no verification at the moment"
          }
        ],
        "skills": [
          "matplotlib/line_plots",
          "python/comments",
          "python/lists",
          "python/sets",
          "python/tuples",
          "python/with_statement"
        ]
      },
      {
        "title": "Display the Plot",
        "text": "en/step5.md",
        "verify": [
          {
            "name": "This step has no verification at the moment",
            "file": "verify5-1.sh",
            "hint": "This step has no verification at the moment"
          }
        ],
        "skills": []
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    },
    "assets": {
      "host01": [
        {
          "file": "engineering-formatter.ipynb",
          "target": "/home/labex/project",
          "chmod": "ugo+rwx"
        }
      ]
    }
  },
  "backend": {
    "imageid": "jupyter-ubuntu:2204"
  },
  "contributors": ["huduo0812"],
  "license": {
    "name": "BSD 3-Clause",
    "url": "https://github.com/matplotlib/matplotlib/tree/main/LICENSE",
    "repo": "https://github.com/matplotlib/matplotlib"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "使用工程记数法标记刻度",
      "description": "在数据可视化中，准确标记轴上的刻度至关重要。Matplotlib 中的 EngFormatter 类使人们能够使用工程记数法标记轴上的刻度。工程记数法是一种数字的数学表示形式，它使用十的幂且幂次为三的倍数。它是一种简洁的方式来表达用标准记数法难以读写的大数或小数。在本实验中，我们将学习如何使用工程记数法标记轴上的刻度。",
      "meta": {
        "title": "数据可视化 | 工程记数法 | Matplotlib",
        "description": "学习如何在使用 Matplotlib 进行数据可视化时，使用工程记数法标记轴上的刻度。",
        "keywords": "数据可视化，工程记数法，Matplotlib, Python, 数据分析"
      },
      "details": {
        "steps": [
          {
            "title": "导入所需库",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "此步骤目前没有验证",
                "file": "verify1-1.sh",
                "hint": "此步骤目前没有验证"
              }
            ]
          },
          {
            "title": "创建人工数据",
            "text": "zh/step2.md",
            "verify": [
              {
                "name": "此步骤目前没有验证",
                "file": "verify2-1.sh",
                "hint": "此步骤目前没有验证"
              }
            ]
          },
          {
            "title": "创建图形和子图",
            "text": "zh/step3.md",
            "verify": [
              {
                "name": "此步骤目前没有验证",
                "file": "verify3-1.sh",
                "hint": "此步骤目前没有验证"
              }
            ]
          },
          {
            "title": "使用工程记数法标注刻度",
            "text": "zh/step4.md",
            "verify": [
              {
                "name": "此步骤目前没有验证",
                "file": "verify4-1.sh",
                "hint": "此步骤目前没有验证"
              }
            ]
          },
          {
            "title": "显示图表",
            "text": "zh/step5.md",
            "verify": [
              {
                "name": "此步骤目前没有验证",
                "file": "verify5-1.sh",
                "hint": "此步骤目前没有验证"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Etiquetado de marcas usando notación científica",
      "description": "En la visualización de datos, es esencial etiquetar correctamente las marcas en los ejes. La clase EngFormatter en Matplotlib permite etiquetar las marcas en un eje usando notación científica. La notación científica es una representación matemática de números que utiliza potencias de diez con un múltiplo de tres. Es una forma concisa de expresar números grandes o pequeños que son difíciles de leer o escribir en notación estándar. En este laboratorio, aprenderemos cómo etiquetar las marcas en un eje usando notación científica.",
      "meta": {
        "title": "Visualización de datos | Notación científica | Matplotlib",
        "description": "Aprende cómo etiquetar las marcas en un eje usando notación científica en la visualización de datos con Matplotlib.",
        "keywords": "visualización de datos, notación científica, matplotlib, python, análisis de datos"
      },
      "details": {
        "steps": [
          {
            "title": "Importar las bibliotecas necesarias",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Este paso no tiene verificación en este momento",
                "file": "verify1-1.sh",
                "hint": "Este paso no tiene verificación en este momento"
              }
            ]
          },
          {
            "title": "Crear datos artificiales",
            "text": "es/step2.md",
            "verify": [
              {
                "name": "Este paso no tiene verificación en este momento",
                "file": "verify2-1.sh",
                "hint": "Este paso no tiene verificación en este momento"
              }
            ]
          },
          {
            "title": "Crear la figura y los subgráficos",
            "text": "es/step3.md",
            "verify": [
              {
                "name": "Este paso no tiene verificación en este momento",
                "file": "verify3-1.sh",
                "hint": "Este paso no tiene verificación en este momento"
              }
            ]
          },
          {
            "title": "Etiquetar las marcas con notación científica",
            "text": "es/step4.md",
            "verify": [
              {
                "name": "Este paso no tiene verificación en este momento",
                "file": "verify4-1.sh",
                "hint": "Este paso no tiene verificación en este momento"
              }
            ]
          },
          {
            "title": "Mostrar la gráfica",
            "text": "es/step5.md",
            "verify": [
              {
                "name": "Este paso no tiene verificación en este momento",
                "file": "verify5-1.sh",
                "hint": "Este paso no tiene verificación en este momento"
              }
            ]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Étiquetage des graduations en notation scientifique",
      "description": "Dans la visualisation de données, il est essentiel d'étiqueter précisément les graduations des axes. La classe EngFormatter dans Matplotlib permet d'étiqueter les graduations d'un axe en utilisant la notation scientifique. La notation scientifique est une représentation mathématique des nombres qui utilise des puissances de dix avec un multiple de trois. C'est un moyen concis d'exprimer des nombres grands ou petits qui sont difficiles à lire ou à écrire en notation standard. Dans ce laboratoire, nous allons apprendre à étiqueter les graduations d'un axe en utilisant la notation scientifique.",
      "meta": {
        "title": "Visualisation de données | Notation scientifique | Matplotlib",
        "description": "Apprenez à étiqueter les graduations d'un axe en utilisant la notation scientifique dans la visualisation de données avec Matplotlib.",
        "keywords": "visualisation de données, notation scientifique, matplotlib, python, analyse de données"
      },
      "details": {
        "steps": [
          {
            "title": "Importer les bibliothèques requises",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Cette étape n'a pas de vérification pour le moment",
                "file": "verify1-1.sh",
                "hint": "Cette étape n'a pas de vérification pour le moment"
              }
            ]
          },
          {
            "title": "Créer des données artificielles",
            "text": "fr/step2.md",
            "verify": [
              {
                "name": "Cette étape n'a pas de vérification pour le moment",
                "file": "verify2-1.sh",
                "hint": "Cette étape n'a pas de vérification pour le moment"
              }
            ]
          },
          {
            "title": "Créer la figure et les sous-graphiques",
            "text": "fr/step3.md",
            "verify": [
              {
                "name": "Cette étape n'a pas de vérification pour le moment",
                "file": "verify3-1.sh",
                "hint": "Cette étape n'a pas de vérification pour le moment"
              }
            ]
          },
          {
            "title": "Étiqueter les graduations en notation scientifique",
            "text": "fr/step4.md",
            "verify": [
              {
                "name": "Cette étape n'a pas de vérification pour le moment",
                "file": "verify4-1.sh",
                "hint": "Cette étape n'a pas de vérification pour le moment"
              }
            ]
          },
          {
            "title": "Afficher le tracé",
            "text": "fr/step5.md",
            "verify": [
              {
                "name": "Cette étape n'a pas de vérification pour le moment",
                "file": "verify5-1.sh",
                "hint": "Cette étape n'a pas de vérification pour le moment"
              }
            ]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Ticks mit Engineering-Notation bezeichnen",
      "description": "Beim Datenvisualisierung ist es unerlässlich, die Skalenmarkierungen auf den Achsen genau zu bezeichnen. Die EngFormatter in Matplotlib ist eine Klasse, die es ermöglicht, die Skalenmarkierungen auf einer Achse mit Engineering-Notation zu bezeichnen. Die Engineering-Notation ist eine mathematische Darstellung von Zahlen, die Potenzen von zehn mit einem Vielfachen von drei verwendet. Es ist eine präzise Weise, um große oder kleine Zahlen auszudrücken, die in der Standardnotation schwer zu lesen oder zu schreiben sind. In diesem Lab werden wir lernen, wie man Skalenmarkierungen auf einer Achse mit Engineering-Notation bezeichnen kann.",
      "meta": {
        "title": "Datenvisualisierung | Engineering-Notation | Matplotlib",
        "description": "Lernen Sie, wie man Skalenmarkierungen auf einer Achse mit Engineering-Notation bei der Datenvisualisierung mit Matplotlib bezeichnen kann.",
        "keywords": "Datenvisualisierung, Engineering-Notation, Matplotlib, Python, Datenanalyse"
      },
      "details": {
        "steps": [
          {
            "title": "Benötigte Bibliotheken importieren",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Dieser Schritt hat momentan keine Verifizierung",
                "file": "verify1-1.sh",
                "hint": "Dieser Schritt hat momentan keine Verifizierung"
              }
            ]
          },
          {
            "title": "Künstliche Daten erstellen",
            "text": "de/step2.md",
            "verify": [
              {
                "name": "Dieser Schritt hat momentan keine Verifizierung",
                "file": "verify2-1.sh",
                "hint": "Dieser Schritt hat momentan keine Verifizierung"
              }
            ]
          },
          {
            "title": "Figur und Teilplots erstellen",
            "text": "de/step3.md",
            "verify": [
              {
                "name": "Dieser Schritt hat momentan keine Verifizierung",
                "file": "verify3-1.sh",
                "hint": "Dieser Schritt hat momentan keine Verifizierung"
              }
            ]
          },
          {
            "title": "Die Skalenmarkierungen mit Engineering-Notation bezeichnen",
            "text": "de/step4.md",
            "verify": [
              {
                "name": "Dieser Schritt hat momentan keine Verifizierung",
                "file": "verify4-1.sh",
                "hint": "Dieser Schritt hat momentan keine Verifizierung"
              }
            ]
          },
          {
            "title": "Das Diagramm anzeigen",
            "text": "de/step5.md",
            "verify": [
              {
                "name": "Dieser Schritt hat momentan keine Verifizierung",
                "file": "verify5-1.sh",
                "hint": "Dieser Schritt hat momentan keine Verifizierung"
              }
            ]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "工学表記を使った目盛りのラベリング",
      "description": "データ可視化において、軸の目盛りに正確にラベルを付けることは不可欠です。Matplotlib の EngFormatter は、工学表記を使って軸の目盛りにラベルを付けることができるクラスです。工学表記は、10 の累乗を 3 の倍数で使った数の数学的表現です。標準表記で読み書きが難しい大きな数や小さな数を表現するための簡潔な方法です。この実験では、工学表記を使って軸の目盛りにラベルを付ける方法を学びます。",
      "meta": {
        "title": "データ可視化 | 工学表記 | Matplotlib",
        "description": "Matplotlib を使ったデータ可視化において、工学表記を使って軸の目盛りにラベルを付ける方法を学びましょう。",
        "keywords": "データ可視化，工学表記，matplotlib, python, データ分析"
      },
      "details": {
        "steps": [
          {
            "title": "必要なライブラリをインポートする",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "このステップには現在検証はありません",
                "file": "verify1-1.sh",
                "hint": "このステップには現在検証はありません"
              }
            ]
          },
          {
            "title": "人工データを作成する",
            "text": "ja/step2.md",
            "verify": [
              {
                "name": "このステップには現在検証はありません",
                "file": "verify2-1.sh",
                "hint": "このステップには現在検証はありません"
              }
            ]
          },
          {
            "title": "グラフとサブプロットを作成する",
            "text": "ja/step3.md",
            "verify": [
              {
                "name": "このステップには現在検証はありません",
                "file": "verify3-1.sh",
                "hint": "このステップには現在検証はありません"
              }
            ]
          },
          {
            "title": "工学表記を使って目盛りにラベルを付ける",
            "text": "ja/step4.md",
            "verify": [
              {
                "name": "このステップには現在検証はありません",
                "file": "verify4-1.sh",
                "hint": "このステップには現在検証はありません"
              }
            ]
          },
          {
            "title": "グラフを表示する",
            "text": "ja/step5.md",
            "verify": [
              {
                "name": "このステップには現在検証はありません",
                "file": "verify5-1.sh",
                "hint": "このステップには現在検証はありません"
              }
            ]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Маркировка делений с использованием инженерной записи",
      "description": "В визуализации данных важно точно подписывать деления на осях. EngFormatter в Matplotlib - это класс, который позволяет подписывать деления на оси с использованием инженерной записи. Инженерная запись - это математическое представление чисел, использующее степени десяти с кратностью трех. Это краткий способ выражать большие или маленькие числа, которые трудно читать или записывать в стандартной записи. В этом практическом занятии мы узнаем, как подписывать деления на оси с использованием инженерной записи.",
      "meta": {
        "title": "Визуализация данных | Инженерная запись | Matplotlib",
        "description": "Изучите, как подписывать деления на оси с использованием инженерной записи в визуализации данных с помощью Matplotlib.",
        "keywords": "визуализация данных, инженерная запись, matplotlib, python, анализ данных"
      },
      "details": {
        "steps": [
          {
            "title": "Импортировать необходимые библиотеки",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "На данный момент эта стадия не имеет проверки",
                "file": "verify1-1.sh",
                "hint": "На данный момент эта стадия не имеет проверки"
              }
            ]
          },
          {
            "title": "Создать искусственные данные",
            "text": "ru/step2.md",
            "verify": [
              {
                "name": "На данный момент эта стадия не имеет проверки",
                "file": "verify2-1.sh",
                "hint": "На данный момент эта стадия не имеет проверки"
              }
            ]
          },
          {
            "title": "Создать фигуру и подграфики",
            "text": "ru/step3.md",
            "verify": [
              {
                "name": "На данный момент эта стадия не имеет проверки",
                "file": "verify3-1.sh",
                "hint": "На данный момент эта стадия не имеет проверки"
              }
            ]
          },
          {
            "title": "Пометить деления с использованием инженерной записи",
            "text": "ru/step4.md",
            "verify": [
              {
                "name": "На данный момент эта стадия не имеет проверки",
                "file": "verify4-1.sh",
                "hint": "На данный момент эта стадия не имеет проверки"
              }
            ]
          },
          {
            "title": "Показать график",
            "text": "ru/step5.md",
            "verify": [
              {
                "name": "На данный момент эта стадия не имеет проверки",
                "file": "verify5-1.sh",
                "hint": "На данный момент эта стадия не имеет проверки"
              }
            ]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    }
  ]
}
