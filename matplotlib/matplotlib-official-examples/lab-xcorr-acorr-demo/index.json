{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Xcorr Acorr Demo",
  "description": "The purpose of this lab is to demonstrate the use of cross-correlation and auto-correlation plots using the Python Matplotlib library. Cross-correlation and auto-correlation are mathematical tools used to measure the similarity between two signals. Cross-correlation measures the similarity between two different signals, while auto-correlation measures the similarity between a signal and a time-delayed version of itself. These tools are commonly used in signal processing, image analysis, and time series analysis.",
  "meta": {
    "title": "Exploring Cross-Correlation and Auto-Correlation in Python",
    "description": "Learn how to use cross-correlation and auto-correlation plots to analyze signal similarity with Python Matplotlib.",
    "keywords": "matplotlib, python, cross correlation, signal processing, auto correlation"
  },
  "difficulty": "Beginner",
  "time": 20,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Import Libraries",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "This step has no verification at the moment",
            "file": "verify1-1.sh",
            "hint": "This step has no verification at the moment"
          }
        ],
        "skills": [
          "matplotlib/figures_axes",
          "matplotlib/importing_matplotlib",
          "python/data_visualization",
          "python/importing_modules",
          "python/numerical_computing"
        ]
      },
      {
        "title": "Generate Random Data",
        "text": "en/step2.md",
        "verify": [
          {
            "name": "This step has no verification at the moment",
            "file": "verify2-1.sh",
            "hint": "This step has no verification at the moment"
          }
        ],
        "skills": [
          "python/math_random",
          "python/standard_libraries",
          "python/tuples"
        ]
      },
      {
        "title": "Plot Cross-Correlation",
        "text": "en/step3.md",
        "verify": [
          {
            "name": "This step has no verification at the moment",
            "file": "verify3-1.sh",
            "hint": "This step has no verification at the moment"
          }
        ],
        "skills": ["matplotlib/grid_config", "python/booleans", "python/tuples"]
      },
      {
        "title": "Plot Auto-Correlation",
        "text": "en/step4.md",
        "verify": [
          {
            "name": "This step has no verification at the moment",
            "file": "verify4-1.sh",
            "hint": "This step has no verification at the moment"
          }
        ],
        "skills": ["matplotlib/grid_config", "python/booleans", "python/tuples"]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    },
    "assets": {
      "host01": [
        {
          "file": "xcorr-acorr-demo.ipynb",
          "target": "/home/labex/project",
          "chmod": "ugo+rwx"
        }
      ]
    }
  },
  "backend": {
    "imageid": "jupyter-ubuntu:2204"
  },
  "contributors": [],
  "license": {
    "name": "BSD 3-Clause",
    "url": "https://github.com/matplotlib/matplotlib/tree/main/LICENSE",
    "repo": "https://github.com/matplotlib/matplotlib"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "Xcorr 与 Acorr 演示",
      "description": "本实验的目的是演示如何使用 Python 的 Matplotlib 库绘制互相关和自相关图。互相关和自相关是用于测量两个信号之间相似性的数学工具。互相关测量两个不同信号之间的相似性，而自相关测量一个信号与其自身的时延版本之间的相似性。这些工具常用于信号处理、图像分析和时间序列分析。",
      "meta": {
        "title": "在 Python 中探索互相关和自相关",
        "description": "学习如何使用互相关和自相关图，通过 Python 的 Matplotlib 分析信号相似性。",
        "keywords": "Matplotlib, Python, 互相关，信号处理，自相关"
      },
      "details": {
        "steps": [
          {
            "title": "导入库",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "此步骤目前没有验证",
                "file": "verify1-1.sh",
                "hint": "此步骤目前没有验证"
              }
            ]
          },
          {
            "title": "生成随机数据",
            "text": "zh/step2.md",
            "verify": [
              {
                "name": "此步骤目前没有验证",
                "file": "verify2-1.sh",
                "hint": "此步骤目前没有验证"
              }
            ]
          },
          {
            "title": "绘制互相关",
            "text": "zh/step3.md",
            "verify": [
              {
                "name": "此步骤目前没有验证",
                "file": "verify3-1.sh",
                "hint": "此步骤目前没有验证"
              }
            ]
          },
          {
            "title": "绘制自相关",
            "text": "zh/step4.md",
            "verify": [
              {
                "name": "此步骤目前没有验证",
                "file": "verify4-1.sh",
                "hint": "此步骤目前没有验证"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Demostración de Xcorr y Acorr",
      "description": "El propósito de este laboratorio es demostrar el uso de gráficos de correlación cruzada y autocorrelación utilizando la biblioteca Python Matplotlib. La correlación cruzada y la autocorrelación son herramientas matemáticas utilizadas para medir la similitud entre dos señales. La correlación cruzada mide la similitud entre dos señales diferentes, mientras que la autocorrelación mide la similitud entre una señal y una versión atrasada de sí misma en el tiempo. Estas herramientas se utilizan comúnmente en el procesamiento de señales, análisis de imágenes y análisis de series de tiempo.",
      "meta": {
        "title": "Explorando la Correlación Cruzada y la Autocorrelación en Python",
        "description": "Aprende cómo utilizar gráficos de correlación cruzada y autocorrelación para analizar la similitud de señales con Python Matplotlib.",
        "keywords": "matplotlib, python, correlación cruzada, procesamiento de señales, autocorrelación"
      },
      "details": {
        "steps": [
          {
            "title": "Importar bibliotecas",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Este paso no tiene verificación en este momento",
                "file": "verify1-1.sh",
                "hint": "Este paso no tiene verificación en este momento"
              }
            ]
          },
          {
            "title": "Generar datos aleatorios",
            "text": "es/step2.md",
            "verify": [
              {
                "name": "Este paso no tiene verificación en este momento",
                "file": "verify2-1.sh",
                "hint": "Este paso no tiene verificación en este momento"
              }
            ]
          },
          {
            "title": "Graficar correlación cruzada",
            "text": "es/step3.md",
            "verify": [
              {
                "name": "Este paso no tiene verificación en este momento",
                "file": "verify3-1.sh",
                "hint": "Este paso no tiene verificación en este momento"
              }
            ]
          },
          {
            "title": "Graficar autocorrelación",
            "text": "es/step4.md",
            "verify": [
              {
                "name": "Este paso no tiene verificación en este momento",
                "file": "verify4-1.sh",
                "hint": "Este paso no tiene verificación en este momento"
              }
            ]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Démonstration de Xcorr Acorr",
      "description": "Le but de ce laboratoire est de démontrer l'utilisation de tracés de corrélation croisée et d'auto - corrélation à l'aide de la bibliothèque Python Matplotlib. La corrélation croisée et l'auto - corrélation sont des outils mathématiques utilisés pour mesurer la similarité entre deux signaux. La corrélation croisée mesure la similarité entre deux signaux différents, tandis que l'auto - corrélation mesure la similarité entre un signal et une version retardée dans le temps de lui - même. Ces outils sont couramment utilisés dans le traitement du signal, l'analyse d'images et l'analyse de séries temporelles.",
      "meta": {
        "title": "Explorer la corrélation croisée et l'auto - corrélation en Python",
        "description": "Apprenez à utiliser les tracés de corrélation croisée et d'auto - corrélation pour analyser la similarité des signaux avec Python Matplotlib.",
        "keywords": "matplotlib, python, corrélation croisée, traitement du signal, auto - corrélation"
      },
      "details": {
        "steps": [
          {
            "title": "Importer les bibliothèques",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Cette étape n'a pas de vérification pour le moment",
                "file": "verify1-1.sh",
                "hint": "Cette étape n'a pas de vérification pour le moment"
              }
            ]
          },
          {
            "title": "Générer des données aléatoires",
            "text": "fr/step2.md",
            "verify": [
              {
                "name": "Cette étape n'a pas de vérification pour le moment",
                "file": "verify2-1.sh",
                "hint": "Cette étape n'a pas de vérification pour le moment"
              }
            ]
          },
          {
            "title": "Tracer la corrélation croisée",
            "text": "fr/step3.md",
            "verify": [
              {
                "name": "Cette étape n'a pas de vérification pour le moment",
                "file": "verify3-1.sh",
                "hint": "Cette étape n'a pas de vérification pour le moment"
              }
            ]
          },
          {
            "title": "Tracer l'auto - corrélation",
            "text": "fr/step4.md",
            "verify": [
              {
                "name": "Cette étape n'a pas de vérification pour le moment",
                "file": "verify4-1.sh",
                "hint": "Cette étape n'a pas de vérification pour le moment"
              }
            ]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Xcorr Acorr Demo",
      "description": "Zweck dieses Labs ist es, die Verwendung von Kreuzkorrelations- und Autokorrelationsplots mit der Python-Bibliothek Matplotlib zu demonstrieren. Kreuzkorrelation und Autokorrelation sind mathematische Werkzeuge, die zur Messung der Ähnlichkeit zwischen zwei Signalen verwendet werden. Die Kreuzkorrelation misst die Ähnlichkeit zwischen zwei verschiedenen Signalen, während die Autokorrelation die Ähnlichkeit zwischen einem Signal und einer zeitversetzten Version desselben misst. Diese Werkzeuge werden häufig in der Signalverarbeitung, der Bildanalyse und der Zeitreihenanalyse eingesetzt.",
      "meta": {
        "title": "Das Entdecken von Kreuzkorrelation und Autokorrelation in Python",
        "description": "Lernen Sie, wie Sie Kreuzkorrelations- und Autokorrelationsplots verwenden, um die Signalanaloge Ähnlichkeit mit Python Matplotlib zu analysieren.",
        "keywords": "matplotlib, python, Kreuzkorrelation, Signalverarbeitung, Autokorrelation"
      },
      "details": {
        "steps": [
          {
            "title": "Bibliotheken importieren",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Dieser Schritt hat momentan keine Verifizierung",
                "file": "verify1-1.sh",
                "hint": "Dieser Schritt hat momentan keine Verifizierung"
              }
            ]
          },
          {
            "title": "Zufällige Daten generieren",
            "text": "de/step2.md",
            "verify": [
              {
                "name": "Dieser Schritt hat momentan keine Verifizierung",
                "file": "verify2-1.sh",
                "hint": "Dieser Schritt hat momentan keine Verifizierung"
              }
            ]
          },
          {
            "title": "Kreuzkorrelation plotten",
            "text": "de/step3.md",
            "verify": [
              {
                "name": "Dieser Schritt hat momentan keine Verifizierung",
                "file": "verify3-1.sh",
                "hint": "Dieser Schritt hat momentan keine Verifizierung"
              }
            ]
          },
          {
            "title": "Autokorrelation plotten",
            "text": "de/step4.md",
            "verify": [
              {
                "name": "Dieser Schritt hat momentan keine Verifizierung",
                "file": "verify4-1.sh",
                "hint": "Dieser Schritt hat momentan keine Verifizierung"
              }
            ]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "Xcorr Acorr デモ",
      "description": "この実験の目的は、Python の Matplotlib ライブラリを使って相関関数と自己相関関数のプロットの使い方を示すことです。相関関数と自己相関関数は、2 つの信号間の類似性を測定するために使われる数学的ツールです。相関関数は 2 つの異なる信号間の類似性を測定し、自己相関関数は信号とその自己の時間遅れバージョン間の類似性を測定します。これらのツールは、信号処理、画像分析、時系列分析で一般的に使われます。",
      "meta": {
        "title": "Python における相関関数と自己相関関数の探索",
        "description": "Python の Matplotlib を使って相関関数と自己相関関数のプロットを使って信号類似性を分析する方法を学びましょう。",
        "keywords": "matplotlib, python, 相関関数，信号処理，自己相関関数"
      },
      "details": {
        "steps": [
          {
            "title": "ライブラリのインポート",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "このステップでは現在検証はありません",
                "file": "verify1-1.sh",
                "hint": "このステップでは現在検証はありません"
              }
            ]
          },
          {
            "title": "ランダムデータの生成",
            "text": "ja/step2.md",
            "verify": [
              {
                "name": "このステップでは現在検証はありません",
                "file": "verify2-1.sh",
                "hint": "このステップでは現在検証はありません"
              }
            ]
          },
          {
            "title": "相関関数のプロット",
            "text": "ja/step3.md",
            "verify": [
              {
                "name": "このステップでは現在検証はありません",
                "file": "verify3-1.sh",
                "hint": "このステップでは現在検証はありません"
              }
            ]
          },
          {
            "title": "自己相関関数のプロット",
            "text": "ja/step4.md",
            "verify": [
              {
                "name": "このステップでは現在検証はありません",
                "file": "verify4-1.sh",
                "hint": "このステップでは現在検証はありません"
              }
            ]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Демонстрация Xcorr и Acorr",
      "description": "Целью данной лабораторной работы является демонстрация использования графиков кросс-корреляции и автокорреляции с использованием библиотеки Python Matplotlib. Кросс-корреляция и автокорреляция - это математические инструменты, используемые для измерения сходства между двумя сигналами. Кросс-корреляция измеряет сходство между двумя различными сигналами, в то время как автокорреляция измеряет сходство между сигналом и его отсроченной версией. Эти инструменты широко используются в обработке сигналов, анализе изображений и анализе временных рядов.",
      "meta": {
        "title": "Исследование кросс-корреляции и автокорреляции в Python",
        "description": "Изучите, как использовать графики кросс-корреляции и автокорреляции для анализа сходства сигналов с помощью Python Matplotlib.",
        "keywords": "matplotlib, python, кросс-корреляция, обработка сигналов, автокорреляция"
      },
      "details": {
        "steps": [
          {
            "title": "Импортировать библиотеки",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "На данный момент эта стадия не имеет проверки",
                "file": "verify1-1.sh",
                "hint": "На данный момент эта стадия не имеет проверки"
              }
            ]
          },
          {
            "title": "Сгенерировать случайные данные",
            "text": "ru/step2.md",
            "verify": [
              {
                "name": "На данный момент эта стадия не имеет проверки",
                "file": "verify2-1.sh",
                "hint": "На данный момент эта стадия не имеет проверки"
              }
            ]
          },
          {
            "title": "Построить график кросс-корреляции",
            "text": "ru/step3.md",
            "verify": [
              {
                "name": "На данный момент эта стадия не имеет проверки",
                "file": "verify3-1.sh",
                "hint": "На данный момент эта стадия не имеет проверки"
              }
            ]
          },
          {
            "title": "Построить график автокорреляции",
            "text": "ru/step4.md",
            "verify": [
              {
                "name": "На данный момент эта стадия не имеет проверки",
                "file": "verify4-1.sh",
                "hint": "На данный момент эта стадия не имеет проверки"
              }
            ]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    }
  ]
}
