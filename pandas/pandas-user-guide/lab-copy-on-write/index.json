{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Pandas Copy-On-Write Implementation Guide",
  "description": "This lab provides a step-by-step guide on understanding and implementing the concept of Copy-On-Write (CoW) in Python Pandas. CoW is an optimization strategy that enhances performance and memory usage by delaying copies as long as possible. It also helps in avoiding accidental modifications of more than one object.",
  "meta": {
    "title": "Copy-On-Write in Python Pandas | Programming Tutorial",
    "description": "Explore the concept of Copy-On-Write (CoW) in Python Pandas, an optimization strategy that enhances performance and memory usage.",
    "keywords": "Copy-On-Write, Python Pandas, Programming Tutorial, Optimization, Memory Usage"
  },
  "difficulty": "Beginner",
  "time": 25,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Enabling Copy-On-Write",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "This step has no verification at the moment",
            "file": "verify1-1.sh",
            "hint": "This step has no verification at the moment"
          }
        ],
        "skills": [
          "python/booleans",
          "python/comments",
          "python/data_analysis",
          "python/importing_modules",
          "python/numerical_computing",
          "python/tuples"
        ]
      },
      {
        "title": "Understanding CoW with DataFrame",
        "text": "en/step2.md",
        "verify": [
          {
            "name": "This step has no verification at the moment",
            "file": "verify2-1.sh",
            "hint": "This step has no verification at the moment"
          }
        ],
        "skills": [
          "pandas/select_columns",
          "pandas/select_rows",
          "python/booleans",
          "python/build_in_functions",
          "python/comments",
          "python/dictionaries",
          "python/lists",
          "python/tuples"
        ]
      },
      {
        "title": "Understanding Chained Assignment with CoW",
        "text": "en/step3.md",
        "verify": [
          {
            "name": "This step has no verification at the moment",
            "file": "verify3-1.sh",
            "hint": "This step has no verification at the moment"
          }
        ],
        "skills": [
          "pandas/conditional_selection",
          "pandas/select_columns",
          "python/build_in_functions",
          "python/comments",
          "python/dictionaries",
          "python/lists",
          "python/tuples"
        ]
      },
      {
        "title": "Implementing Chained Assignment with CoW",
        "text": "en/step4.md",
        "verify": [
          {
            "name": "This step has no verification at the moment",
            "file": "verify4-1.sh",
            "hint": "This step has no verification at the moment"
          }
        ],
        "skills": [
          "pandas/conditional_selection",
          "pandas/select_columns",
          "pandas/select_rows",
          "python/build_in_functions",
          "python/comments",
          "python/dictionaries",
          "python/lists",
          "python/tuples",
          "python/with_statement"
        ]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    },
    "assets": {
      "host01": [
        {
          "file": "copy-on-write.ipynb",
          "target": "/home/labex/project",
          "chmod": "ugo+rwx"
        }
      ]
    }
  },
  "backend": {
    "imageid": "jupyter-ubuntu:2204"
  },
  "contributors": [],
  "license": {
    "name": "BSD 3-Clause",
    "url": "https://github.com/pandas-dev/pandas/blob/main/LICENSE",
    "repo": "https://github.com/pandas-dev/pandas"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "Pandas 写时复制实现指南",
      "description": "本实验提供了一份循序渐进的指南，用于理解和在 Python 的 Pandas 中实现写时复制（Copy-On-Write，简称 CoW）的概念。CoW 是一种优化策略，通过尽可能延迟复制来提高性能和内存使用效率。它还有助于避免意外修改多个对象。",
      "meta": {
        "title": "Python Pandas 中的写时复制 | 编程教程",
        "description": "探索 Python Pandas 中的写时复制（CoW）概念，这是一种提高性能和内存使用效率的优化策略。",
        "keywords": "写时复制，Python Pandas, 编程教程，优化，内存使用"
      },
      "details": {
        "steps": [
          {
            "title": "启用写时复制",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "此步骤目前没有验证",
                "file": "verify1-1.sh",
                "hint": "此步骤目前没有验证"
              }
            ]
          },
          {
            "title": "通过 DataFrame 理解写时复制",
            "text": "zh/step2.md",
            "verify": [
              {
                "name": "此步骤目前没有验证",
                "file": "verify2-1.sh",
                "hint": "此步骤目前没有验证"
              }
            ]
          },
          {
            "title": "理解写时复制下的链式赋值",
            "text": "zh/step3.md",
            "verify": [
              {
                "name": "此步骤目前没有验证",
                "file": "verify3-1.sh",
                "hint": "此步骤目前没有验证"
              }
            ]
          },
          {
            "title": "使用写时复制实现链式赋值",
            "text": "zh/step4.md",
            "verify": [
              {
                "name": "此步骤目前没有验证",
                "file": "verify4-1.sh",
                "hint": "此步骤目前没有验证"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Guía de implementación de Copia al Escribir en Pandas",
      "description": "Este laboratorio ofrece una guía paso a paso para entender e implementar el concepto de Copia al Escribir (CoW) en Python Pandas. La Copia al Escribir es una estrategia de optimización que mejora el rendimiento y el uso de memoria al retrasar las copias lo más posible. También ayuda a evitar modificaciones accidentales de más de un objeto.",
      "meta": {
        "title": "Copia al Escribir en Python Pandas | Tutorial de programación",
        "description": "Explora el concepto de Copia al Escribir (CoW) en Python Pandas, una estrategia de optimización que mejora el rendimiento y el uso de memoria.",
        "keywords": "Copia al Escribir, Python Pandas, Tutorial de programación, Optimización, Uso de memoria"
      },
      "details": {
        "steps": [
          {
            "title": "Habilitar Copia al Escribir",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Este paso no tiene verificación en este momento",
                "file": "verify1-1.sh",
                "hint": "Este paso no tiene verificación en este momento"
              }
            ]
          },
          {
            "title": "Comprendiendo la Copia al Escribir con DataFrame",
            "text": "es/step2.md",
            "verify": [
              {
                "name": "Este paso no tiene verificación en este momento",
                "file": "verify2-1.sh",
                "hint": "Este paso no tiene verificación en este momento"
              }
            ]
          },
          {
            "title": "Comprendiendo la asignación encadenada con Copia al Escribir",
            "text": "es/step3.md",
            "verify": [
              {
                "name": "Este paso no tiene verificación en este momento",
                "file": "verify3-1.sh",
                "hint": "Este paso no tiene verificación en este momento"
              }
            ]
          },
          {
            "title": "Implementando la asignación encadenada con Copia al Escribir",
            "text": "es/step4.md",
            "verify": [
              {
                "name": "Este paso no tiene verificación en este momento",
                "file": "verify4-1.sh",
                "hint": "Este paso no tiene verificación en este momento"
              }
            ]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Guide d'implémentation de Copy-On-Write en Pandas",
      "description": "Ce laboratoire fournit un guide étape par étape pour comprendre et implémenter le concept de Copy-On-Write (CoW) dans Python Pandas. Le CoW est une stratégie d'optimisation qui améliore les performances et l'utilisation de la mémoire en retardant les copies le plus longtemps possible. Il aide également à éviter les modifications accidentelles de plusieurs objets.",
      "meta": {
        "title": "Copy-On-Write en Python Pandas | Tutoriel de programmation",
        "description": "Explorez le concept de Copy-On-Write (CoW) en Python Pandas, une stratégie d'optimisation qui améliore les performances et l'utilisation de la mémoire.",
        "keywords": "Copy-On-Write, Python Pandas, Tutoriel de programmation, Optimisation, Utilisation de la mémoire"
      },
      "details": {
        "steps": [
          {
            "title": "Activer Copy-On-Write",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Cette étape n'a pas de vérification pour le moment",
                "file": "verify1-1.sh",
                "hint": "Cette étape n'a pas de vérification pour le moment"
              }
            ]
          },
          {
            "title": "Comprendre Copy-On-Write avec DataFrame",
            "text": "fr/step2.md",
            "verify": [
              {
                "name": "Cette étape n'a pas de vérification pour le moment",
                "file": "verify2-1.sh",
                "hint": "Cette étape n'a pas de vérification pour le moment"
              }
            ]
          },
          {
            "title": "Comprendre l'affectation en chaîne avec Copy-On-Write",
            "text": "fr/step3.md",
            "verify": [
              {
                "name": "Cette étape n'a pas de vérification pour le moment",
                "file": "verify3-1.sh",
                "hint": "Cette étape n'a pas de vérification pour le moment"
              }
            ]
          },
          {
            "title": "Implémenter l'affectation en chaîne avec Copy-On-Write",
            "text": "fr/step4.md",
            "verify": [
              {
                "name": "Cette étape n'a pas de vérification pour le moment",
                "file": "verify4-1.sh",
                "hint": "Cette étape n'a pas de vérification pour le moment"
              }
            ]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Pandas Copy-On-Write Implementierungsleitfaden",
      "description": "Dieses Lab bietet einen schrittweisen Leitfaden zum Verständnis und zur Implementierung des Konzepts von Copy-On-Write (CoW) in Python Pandas. CoW ist eine Optimierungsstrategie, die die Leistung und den Arbeitsspeicherbedarf verbessert, indem Kopien so lange wie möglich verzögert werden. Es hilft auch, versehentliche Änderungen mehrerer Objekte zu vermeiden.",
      "meta": {
        "title": "Copy-On-Write in Python Pandas | Programmier-Tutorial",
        "description": "Erkunden Sie das Konzept von Copy-On-Write (CoW) in Python Pandas, eine Optimierungsstrategie, die die Leistung und den Arbeitsspeicherbedarf verbessert.",
        "keywords": "Copy-On-Write, Python Pandas, Programmier-Tutorial, Optimierung, Arbeitsspeicherbedarf"
      },
      "details": {
        "steps": [
          {
            "title": "Aktivieren von Copy-On-Write",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Dieser Schritt hat momentan keine Verifizierung",
                "file": "verify1-1.sh",
                "hint": "Dieser Schritt hat momentan keine Verifizierung"
              }
            ]
          },
          {
            "title": "Das Verständnis von Copy-On-Write mit DataFrame",
            "text": "de/step2.md",
            "verify": [
              {
                "name": "Dieser Schritt hat momentan keine Verifizierung",
                "file": "verify2-1.sh",
                "hint": "Dieser Schritt hat momentan keine Verifizierung"
              }
            ]
          },
          {
            "title": "Das Verständnis von verketteter Zuweisung mit Copy-On-Write",
            "text": "de/step3.md",
            "verify": [
              {
                "name": "Dieser Schritt hat momentan keine Verifizierung",
                "file": "verify3-1.sh",
                "hint": "Dieser Schritt hat momentan keine Verifizierung"
              }
            ]
          },
          {
            "title": "Die Implementierung von verketteter Zuweisung mit Copy-On-Write",
            "text": "de/step4.md",
            "verify": [
              {
                "name": "Dieser Schritt hat momentan keine Verifizierung",
                "file": "verify4-1.sh",
                "hint": "Dieser Schritt hat momentan keine Verifizierung"
              }
            ]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "Pandas の Copy-On-Write 実装ガイド",
      "description": "この実験では、Python Pandas における Copy-On-Write (CoW) の概念を理解して実装するための手順を示します。CoW は、コピーをできる限り遅らせることでパフォーマンスとメモリ使用量を向上させる最適化戦略です。また、複数のオブジェクトの偶発的な変更を回避するのに役立ちます。",
      "meta": {
        "title": "Python Pandas の Copy-On-Write | プログラミングチュートリアル",
        "description": "Python Pandas における Copy-On-Write (CoW) の概念を探りましょう。これは、パフォーマンスとメモリ使用量を向上させる最適化戦略です。",
        "keywords": "Copy-On-Write, Python Pandas, プログラミングチュートリアル，最適化，メモリ使用量"
      },
      "details": {
        "steps": [
          {
            "title": "Copy-On-Write の有効化",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "このステップには現在検証はありません",
                "file": "verify1-1.sh",
                "hint": "このステップには現在検証はありません"
              }
            ]
          },
          {
            "title": "DataFrame を使った Copy-On-Write の理解",
            "text": "ja/step2.md",
            "verify": [
              {
                "name": "このステップには現在検証はありません",
                "file": "verify2-1.sh",
                "hint": "このステップには現在検証はありません"
              }
            ]
          },
          {
            "title": "Copy-On-Write を使ったチェーンド代入の理解",
            "text": "ja/step3.md",
            "verify": [
              {
                "name": "このステップには現在検証はありません",
                "file": "verify3-1.sh",
                "hint": "このステップには現在検証はありません"
              }
            ]
          },
          {
            "title": "Copy-On-Write を用いたチェーンド代入の実装",
            "text": "ja/step4.md",
            "verify": [
              {
                "name": "このステップには現在検証はありません",
                "file": "verify4-1.sh",
                "hint": "このステップには現在検証はありません"
              }
            ]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Руководство по реализации Copy-On-Write в Pandas",
      "description": "В этом практическом занятии представлен пошаговый план по пониманию и реализации концепции Copy-On-Write (CoW) в Python Pandas. CoW - это стратегия оптимизации, которая повышает производительность и эффективность использования памяти, откладывая копирование до последнего возможного момента. Она также помогает избегать случайных модификаций нескольких объектов одновременно.",
      "meta": {
        "title": "Copy-On-Write в Python Pandas | Руководство по программированию",
        "description": "Изучите концепцию Copy-On-Write (CoW) в Python Pandas - стратегию оптимизации, которая повышает производительность и эффективность использования памяти.",
        "keywords": "Copy-On-Write, Python Pandas, Руководство по программированию, Оптимизация, Использование памяти"
      },
      "details": {
        "steps": [
          {
            "title": "Включение Copy-On-Write",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "На данный момент эта стадия не имеет проверки",
                "file": "verify1-1.sh",
                "hint": "На данный момент эта стадия не имеет проверки"
              }
            ]
          },
          {
            "title": "Понимание Copy-On-Write с использованием DataFrame",
            "text": "ru/step2.md",
            "verify": [
              {
                "name": "На данный момент эта стадия не имеет проверки",
                "file": "verify2-1.sh",
                "hint": "На данный момент эта стадия не имеет проверки"
              }
            ]
          },
          {
            "title": "Понимание последовательного присваивания с использованием Copy-On-Write",
            "text": "ru/step3.md",
            "verify": [
              {
                "name": "На данный момент эта стадия не имеет проверки",
                "file": "verify3-1.sh",
                "hint": "На данный момент эта стадия не имеет проверки"
              }
            ]
          },
          {
            "title": "Реализация последовательного присваивания с использованием Copy-On-Write",
            "text": "ru/step4.md",
            "verify": [
              {
                "name": "На данный момент эта стадия не имеет проверки",
                "file": "verify4-1.sh",
                "hint": "На данный момент эта стадия не имеет проверки"
              }
            ]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    }
  ]
}
