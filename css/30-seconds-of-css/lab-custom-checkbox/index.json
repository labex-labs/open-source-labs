{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Animated Checkbox Styling with CSS",
  "description": "In this lab, we will learn how to use CSS to create custom checkboxes with animation on state change. We will use an SVG element to create the check symbol, flexbox to layout the checkboxes, and CSS animations to create a zoom effect. By the end of this lab, you will have the skills to create stylish and interactive checkboxes for your web projects.",
  "meta": {
    "title": "Create Custom Checkboxes with Animation | CSS Tutorial",
    "description": "Learn how to use CSS to create custom checkboxes with animation on state change, including an SVG check symbol, flexbox layout, and CSS animations.",
    "keywords": "custom checkboxes, CSS animations, SVG, flexbox, web development, interactive UI"
  },
  "difficulty": "Beginner",
  "time": 5,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Custom Checkbox",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify the running status of the web service",
            "file": "verify1-1.sh",
            "hint": "Please click on 'Go Live' in the bottom right corner to run the web service on port 8080. Then, you can refresh the **Web 8080** Tab to preview the web page.",
            "timeout": 0,
            "showstderr": true
          },
          {
            "name": "Verify the status of index.html modification",
            "file": "verify1-2.sh",
            "hint": "Please follow the steps to complete the lab.",
            "timeout": 0,
            "showstderr": true
          },
          {
            "name": "Verify the status of style.css modification",
            "file": "verify1-3.sh",
            "hint": "Please follow the steps to complete the lab.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "css/animations",
          "css/backgrounds",
          "css/borders",
          "css/box_model",
          "css/colors",
          "css/display_property",
          "css/flexbox",
          "css/margin_and_padding",
          "css/mixins",
          "css/positioning",
          "css/pseudo_classes",
          "css/selectors",
          "css/transformations",
          "css/transitions",
          "css/width_and_height"
        ]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    },
    "assets": {
      "host01": [
        {
          "file": "index.html",
          "target": "~/project",
          "chmod": "ugo+rwx"
        },
        {
          "file": "style.css",
          "target": "~/project",
          "chmod": "ugo+rwx"
        }
      ]
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["Lotus-7"],
  "license": {
    "name": "CC-BY-4.0",
    "url": "https://github.com/30-seconds/30-seconds-of-code/blob/master/LICENSE",
    "repo": "https://github.com/30-seconds/30-seconds-of-code"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "使用 CSS 实现带动画效果的复选框样式",
      "description": "在本实验中，我们将学习如何使用 CSS 创建在状态更改时带有动画效果的自定义复选框。我们将使用 SVG 元素创建选中符号，使用弹性盒模型（Flexbox）布局复选框，并使用 CSS 动画创建缩放效果。完成本实验后，你将具备为你的网页项目创建时尚且交互式复选框的技能。",
      "meta": {
        "title": "创建带动画的自定义复选框 | CSS 教程",
        "description": "学习如何使用 CSS 创建在状态更改时带有动画效果的自定义复选框，包括 SVG 选中符号、弹性盒模型布局和 CSS 动画。",
        "keywords": "自定义复选框，CSS 动画，SVG, 弹性盒模型，网页开发，交互式用户界面"
      },
      "details": {
        "steps": [
          {
            "title": "自定义复选框",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "验证 Web 服务的运行状态",
                "file": "verify1-1.sh",
                "hint": "请点击右下角的“Go Live”以在端口 8080 上运行 Web 服务。然后，你可以刷新“Web 8080”标签页来预览网页。"
              },
              {
                "name": "验证 index.html 的修改状态",
                "file": "verify1-2.sh",
                "hint": "请按照步骤完成实验。"
              },
              {
                "name": "验证 style.css 的修改状态",
                "file": "verify1-3.sh",
                "hint": "请按照步骤完成实验。"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Estilización de casillas de verificación animadas con CSS",
      "description": "En este laboratorio, aprenderemos a usar CSS para crear casillas de verificación personalizadas con animación al cambiar de estado. Usaremos un elemento SVG para crear el símbolo de verificación, flexbox para diseñar el diseño de las casillas de verificación y animaciones CSS para crear un efecto de zoom. Al final de este laboratorio, tendrás las habilidades para crear casillas de verificación elegantes e interactivas para tus proyectos web.",
      "meta": {
        "title": "Crea casillas de verificación personalizadas con animación | Tutorial de CSS",
        "description": "Aprende a usar CSS para crear casillas de verificación personalizadas con animación al cambiar de estado, incluyendo un símbolo de verificación SVG, un diseño flexbox y animaciones CSS.",
        "keywords": "casillas de verificación personalizadas, animaciones CSS, SVG, flexbox, desarrollo web, interfaz de usuario interactiva"
      },
      "details": {
        "steps": [
          {
            "title": "Casilla de verificación personalizada",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Verificar el estado de ejecución del servicio web",
                "file": "verify1-1.sh",
                "hint": "Haga clic en 'Go Live' en la esquina inferior derecha para ejecutar el servicio web en el puerto 8080. Luego, puede actualizar la pestaña **Web 8080** para previsualizar la página web."
              },
              {
                "name": "Verificar el estado de la modificación de index.html",
                "file": "verify1-2.sh",
                "hint": "Siga los pasos para completar el laboratorio."
              },
              {
                "name": "Verificar el estado de la modificación de style.css",
                "file": "verify1-3.sh",
                "hint": "Siga los pasos para completar el laboratorio."
              }
            ]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Stylisation des cases à cocher animées avec CSS",
      "description": "Dans ce laboratoire, nous allons apprendre à utiliser CSS pour créer des cases à cocher personnalisées avec une animation lors du changement d'état. Nous utiliserons un élément SVG pour créer le symbole de coché, la disposition en colonnes ou en lignes (flexbox) pour disposer les cases à cocher, et les animations CSS pour créer un effet de zoom. À la fin de ce laboratoire, vous aurez les compétences nécessaires pour créer des cases à cocher stylisées et interactives pour vos projets web.",
      "meta": {
        "title": "Créer des cases à cocher personnalisées avec animation | Tutoriel CSS",
        "description": "Découvrez comment utiliser CSS pour créer des cases à cocher personnalisées avec une animation lors du changement d'état, y compris un symbole de coché SVG, une disposition en colonnes ou en lignes (flexbox) et des animations CSS.",
        "keywords": "cases à cocher personnalisées, animations CSS, SVG, disposition en colonnes ou en lignes (flexbox), développement web, interface utilisateur interactive"
      },
      "details": {
        "steps": [
          {
            "title": "Case à cocher personnalisée",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Vérifiez le statut d'exécution du service web",
                "file": "verify1-1.sh",
                "hint": "Veuillez cliquer sur 'Go Live' dans le coin inférieur droit pour exécuter le service web sur le port 8080. Ensuite, vous pouvez actualiser l'onglet **Web 8080** pour prévisualiser la page web."
              },
              {
                "name": "Vérifiez le statut de la modification de index.html",
                "file": "verify1-2.sh",
                "hint": "Veuillez suivre les étapes pour terminer le laboratoire."
              },
              {
                "name": "Vérifiez le statut de la modification de style.css",
                "file": "verify1-3.sh",
                "hint": "Veuillez suivre les étapes pour terminer le laboratoire."
              }
            ]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Animiertes Checkbox Styling mit CSS",
      "description": "In diesem Lab werden wir lernen, wie man mit CSS benutzerdefinierte Checkboxen mit Animation bei einem Statuswechsel erstellt. Wir werden ein SVG-Element verwenden, um das Häkchensymbol zu erstellen, Flexbox, um die Checkboxen auszurichten, und CSS-Animationen, um einen Zoom-Effekt zu erzeugen. Am Ende dieses Labs werden Sie die Fähigkeiten haben, stilvolle und interaktive Checkboxen für Ihre Webprojekte zu erstellen.",
      "meta": {
        "title": "Benutzerdefinierte Checkboxen mit Animation erstellen | CSS Tutorial",
        "description": "Lernen Sie, wie man mit CSS benutzerdefinierte Checkboxen mit Animation bei einem Statuswechsel erstellt, einschließlich eines SVG-Häkchensymbols, einer Flexbox-Ausrichtung und CSS-Animationen.",
        "keywords": "Benutzerdefinierte Checkboxen, CSS-Animationen, SVG, Flexbox, Webentwicklung, interaktive Benutzeroberfläche"
      },
      "details": {
        "steps": [
          {
            "title": "Benutzerdefinierte Checkbox",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Überprüfen des Laufzustands des Webdiensts",
                "file": "verify1-1.sh",
                "hint": "Bitte klicken Sie in der unteren rechten Ecke auf 'Go Live', um den Webdienst auf Port 8080 auszuführen. Anschließend können Sie die Registerkarte **Web 8080** aktualisieren, um die Webseite anzuschauen."
              },
              {
                "name": "Überprüfen des Status der Änderungen an index.html",
                "file": "verify1-2.sh",
                "hint": "Bitte folgen Sie den Schritten, um das Lab abzuschließen."
              },
              {
                "name": "Überprüfen des Status der Änderungen an style.css",
                "file": "verify1-3.sh",
                "hint": "Bitte folgen Sie den Schritten, um das Lab abzuschließen."
              }
            ]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "CSS を使ったアニメーション付きチェックボックスのスタイリング",
      "description": "この実験では、CSS を使って状態変化時にアニメーション付きのカスタムチェックボックスを作成する方法を学びます。チェックマークを作成するために SVG 要素を使い、チェックボックスをレイアウトするために Flexbox を使い、ズームエフェクトを作成するために CSS アニメーションを使います。この実験が終わるとき、あなたはウェブプロジェクトにスタイリッシュでインタラクティブなチェックボックスを作成するスキルを身につけています。",
      "meta": {
        "title": "アニメーション付きのカスタムチェックボックスを作成する | CSS チュートリアル",
        "description": "状態変化時にアニメーション付きのカスタムチェックボックスを CSS で作成する方法を学びます。SVG のチェックマーク、Flexbox レイアウト、CSS アニメーションを含めて。",
        "keywords": "カスタムチェックボックス、CSS アニメーション、SVG、Flexbox、ウェブ開発、インタラクティブ UI"
      },
      "details": {
        "steps": [
          {
            "title": "カスタムチェックボックス",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "ウェブサービスの実行状況を確認する",
                "file": "verify1-1.sh",
                "hint": "右下隅の「Go Live」をクリックして、ポート 8080 でウェブサービスを実行してください。その後、**Web 8080**タブを更新して、ウェブページをプレビューできます。"
              },
              {
                "name": "index.html の変更状況を確認する",
                "file": "verify1-2.sh",
                "hint": "実験を完了するための手順に従ってください。"
              },
              {
                "name": "style.css の変更状況を確認する",
                "file": "verify1-3.sh",
                "hint": "実験を完了するための手順に従ってください。"
              }
            ]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Стилизация анимированных чекбоксов с использованием CSS",
      "description": "В этом практическом занятии мы научимся использовать CSS для создания пользовательских чекбоксов с анимацией при изменении состояния. Мы будем использовать элемент SVG для создания символа галочки, flexbox для разметки чекбоксов и CSS-анимации для создания эффекта приближения. В конце этого практического занятия вы приобретете навыки создания стильных и интерактивных чекбоксов для своих веб-проектов.",
      "meta": {
        "title": "Создайте пользовательские чекбоксы с анимацией | Руководство по CSS",
        "description": "Изучите, как использовать CSS для создания пользовательских чекбоксов с анимацией при изменении состояния, включая SVG-символ галочки, разметку flexbox и CSS-анимации.",
        "keywords": "пользовательские чекбоксы, CSS-анимации, SVG, flexbox, веб-разработка, интерактивный интерфейс"
      },
      "details": {
        "steps": [
          {
            "title": "Пользовательский чекбокс",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "Проверить статус работы веб-сервиса",
                "file": "verify1-1.sh",
                "hint": "Пожалуйста, нажмите на кнопку 'Запустить в браузере' в нижнем правом углу, чтобы запустить веб-сервис на порту 8080. Затем можно обновить вкладку **Web 8080**, чтобы просмотреть веб-страницу."
              },
              {
                "name": "Проверить статус изменения index.html",
                "file": "verify1-2.sh",
                "hint": "Пожалуйста, следуйте шагам, чтобы завершить практическое занятие."
              },
              {
                "name": "Проверить статус изменения style.css",
                "file": "verify1-3.sh",
                "hint": "Пожалуйста, следуйте шагам, чтобы завершить практическое занятие."
              }
            ]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    }
  ]
}
