{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Smooth Transition of Dynamic Heights",
  "description": "In this lab, we will explore how to smoothly transition an element's height from 0 to auto when its height is unknown. This technique is useful for creating dropdown menus, accordions, and other animated content. By using CSS transition, max-height, and overflow properties, as well as JavaScript to dynamically set the height value, we can create a seamless and visually appealing user experience.",
  "meta": {
    "title": "Smooth Height Transition | CSS Animation | Web Development",
    "description": "Learn how to smoothly transition an element's height from 0 to auto using CSS transition, max-height, and JavaScript. Ideal for creating dropdown menus, accordions, and animated content.",
    "keywords": "CSS animation, height transition, smooth animation, web development, dropdown menu, accordion, animated content"
  },
  "difficulty": "Beginner",
  "time": 5,
  "hidden": true,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Height Transition",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify the running status of the web service",
            "file": "verify1-1.sh",
            "hint": "Please click on 'Go Live' in the bottom right corner to run the web service on port 8080. Then, you can refresh the **Web 8080** Tab to preview the web page.",
            "timeout": 0,
            "showstderr": true
          },
          {
            "name": "Verify the status of index.html modification",
            "file": "verify1-2.sh",
            "hint": "Please follow the steps to complete the lab.",
            "timeout": 0,
            "showstderr": true
          },
          {
            "name": "Verify the status of style.css modification",
            "file": "verify1-3.sh",
            "hint": "Please follow the steps to complete the lab.",
            "timeout": 0,
            "showstderr": true
          },
          {
            "name": "Verify the status of script.js modification",
            "file": "verify1-4.sh",
            "hint": "Please follow the steps to complete the lab.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "css/pseudo_classes",
          "css/selectors",
          "css/transitions",
          "css/variables",
          "css/width_and_height"
        ]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    },
    "assets": {
      "host01": [
        {
          "file": "index.html",
          "target": "~/project",
          "chmod": "ugo+rwx"
        },
        {
          "file": "style.css",
          "target": "~/project",
          "chmod": "ugo+rwx"
        },
        {
          "file": "script.js",
          "target": "~/project",
          "chmod": "ugo+rwx"
        }
      ]
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["Lotus-7"],
  "license": {
    "name": "CC-BY-4.0",
    "url": "https://github.com/30-seconds/30-seconds-of-code/blob/master/LICENSE",
    "repo": "https://github.com/30-seconds/30-seconds-of-code"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "动态高度的平滑过渡",
      "description": "在本实验中，我们将探索如何在元素高度未知的情况下，使其高度从 0 平滑过渡到自动。此技术对于创建下拉菜单、手风琴和其他动画内容很有用。通过使用 CSS 过渡、最大高度和溢出属性，以及 JavaScript 动态设置高度值，我们可以创建无缝且视觉上吸引人的用户体验。",
      "meta": {
        "title": "平滑高度过渡 | CSS 动画 | 网页开发",
        "description": "学习如何使用 CSS 过渡、最大高度和 JavaScript 将元素高度从 0 平滑过渡到自动。非常适合创建下拉菜单、手风琴和动画内容。",
        "keywords": "CSS 动画、高度过渡、平滑动画、网页开发、下拉菜单、手风琴、动画内容"
      },
      "details": {
        "steps": [
          {
            "title": "高度过渡",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "验证网络服务的运行状态",
                "file": "verify1-1.sh",
                "hint": "请点击右下角的“上线”以在端口 8080 上运行网络服务。然后，你可以刷新“Web 8080”标签页以预览网页。"
              },
              {
                "name": "验证 index.html 的修改状态",
                "file": "verify1-2.sh",
                "hint": "请按照步骤完成实验。"
              },
              {
                "name": "验证 style.css 的修改状态",
                "file": "verify1-3.sh",
                "hint": "请按照步骤完成实验。"
              },
              {
                "name": "验证 script.js 的修改状态",
                "file": "verify1-4.sh",
                "hint": "请按照步骤完成实验。"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Transición Suave de Alturas Dinámicas",
      "description": "En este laboratorio, exploraremos cómo hacer una transición suave en la altura de un elemento desde 0 hasta auto cuando su altura es desconocida. Esta técnica es útil para crear menús desplegables, acordeones y otros contenidos animados. Al utilizar las propiedades de transición de CSS, max-height y overflow, así como JavaScript para establecer dinámicamente el valor de la altura, podemos crear una experiencia de usuario sin problemas y visualmente atractiva.",
      "meta": {
        "title": "Transición Suave de Altura | Animación CSS | Desarrollo Web",
        "description": "Aprende cómo hacer una transición suave en la altura de un elemento desde 0 hasta auto utilizando la transición de CSS, max-height y JavaScript. Ideal para crear menús desplegables, acordeones y contenido animado.",
        "keywords": "Animación CSS, transición de altura, animación suave, desarrollo web, menú desplegable, acordeón, contenido animado"
      },
      "details": {
        "steps": [
          {
            "title": "Transición de Altura",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Verificar el estado de ejecución del servicio web",
                "file": "verify1-1.sh",
                "hint": "Haga clic en 'Go Live' en la esquina inferior derecha para ejecutar el servicio web en el puerto 8080. Luego, puede actualizar la pestaña **Web 8080** para previsualizar la página web."
              },
              {
                "name": "Verificar el estado de la modificación de index.html",
                "file": "verify1-2.sh",
                "hint": "Siga los pasos para completar el laboratorio."
              },
              {
                "name": "Verificar el estado de la modificación de style.css",
                "file": "verify1-3.sh",
                "hint": "Siga los pasos para completar el laboratorio."
              },
              {
                "name": "Verificar el estado de la modificación de script.js",
                "file": "verify1-4.sh",
                "hint": "Siga los pasos para completar el laboratorio."
              }
            ]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Transition douce de hauteurs dynamiques",
      "description": "Dans ce laboratoire, nous allons explorer la manière de faire transiter doucement la hauteur d'un élément de 0 à auto lorsque sa hauteur est inconnue. Cette technique est utile pour créer des menus déroulants, des accordéons et autres contenus animés. En utilisant les propriétés CSS de transition, de max - hauteur et de débordement, ainsi que JavaScript pour définir dynamiquement la valeur de la hauteur, nous pouvons créer une expérience utilisateur fluide et visuellement attrayante.",
      "meta": {
        "title": "Transition douce de hauteur | Animation CSS | Développement web",
        "description": "Découvrez comment faire transiter doucement la hauteur d'un élément de 0 à auto en utilisant la transition CSS, la max - hauteur et JavaScript. Idéal pour créer des menus déroulants, des accordéons et des contenus animés.",
        "keywords": "Animation CSS, transition de hauteur, animation fluide, développement web, menu déroulant, accordéon, contenu animé"
      },
      "details": {
        "steps": [
          {
            "title": "Transition de hauteur",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Vérifier le statut d'exécution du service web",
                "file": "verify1-1.sh",
                "hint": "Veuillez cliquer sur 'Go Live' dans le coin inférieur droit pour exécuter le service web sur le port 8080. Ensuite, vous pouvez actualiser l'onglet **Web 8080** pour prévisualiser la page web."
              },
              {
                "name": "Vérifier le statut de la modification de index.html",
                "file": "verify1-2.sh",
                "hint": "Veuillez suivre les étapes pour terminer le laboratoire."
              },
              {
                "name": "Vérifier le statut de la modification de style.css",
                "file": "verify1-3.sh",
                "hint": "Veuillez suivre les étapes pour terminer le laboratoire."
              },
              {
                "name": "Vérifier le statut de la modification de script.js",
                "file": "verify1-4.sh",
                "hint": "Veuillez suivre les étapes pour terminer le laboratoire."
              }
            ]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Glatte Übergänge dynamischer Höhen",
      "description": "In diesem Lab werden wir untersuchen, wie man die Höhe eines Elements glatt von 0 auf auto überträgt, wenn die Höhe unbekannt ist. Diese Technik ist nützlich bei der Erstellung von Dropdown-Menüs, Akkorden und anderem animierten Inhalt. Indem wir die CSS-Eigenschaften transition, max-height und overflow sowie JavaScript verwenden, um den Höheswert dynamisch zu setzen, können wir eine nahtlose und visuell ansprechende Benutzererfahrung schaffen.",
      "meta": {
        "title": "Glatter Höhenübergang | CSS Animation | Webentwicklung",
        "description": "Lernen Sie, wie man die Höhe eines Elements glatt von 0 auf auto überträgt, indem man CSS-Eigenschaften wie transition, max-height und JavaScript verwendet. Ideal für die Erstellung von Dropdown-Menüs, Akkorden und animiertem Inhalt.",
        "keywords": "CSS Animation, Höhenübergang, glatte Animation, Webentwicklung, Dropdown-Menü, Akkordeon, animierter Inhalt"
      },
      "details": {
        "steps": [
          {
            "title": "Höhenübergang",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Überprüfen des Laufzustands des Webdiensts",
                "file": "verify1-1.sh",
                "hint": "Bitte klicken Sie in der unteren rechten Ecke auf 'Go Live', um den Webdienst auf Port 8080 auszuführen. Anschließend können Sie die Registerkarte **Web 8080** aktualisieren, um die Webseite anzuschauen."
              },
              {
                "name": "Überprüfen des Status der Änderungen an index.html",
                "file": "verify1-2.sh",
                "hint": "Bitte folgen Sie den Schritten, um das Lab abzuschließen."
              },
              {
                "name": "Überprüfen des Status der Änderungen an style.css",
                "file": "verify1-3.sh",
                "hint": "Bitte folgen Sie den Schritten, um das Lab abzuschließen."
              },
              {
                "name": "Überprüfen des Status der Änderungen an script.js",
                "file": "verify1-4.sh",
                "hint": "Bitte folgen Sie den Schritten, um das Lab abzuschließen."
              }
            ]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "動的な高さのスムーズなトランジション",
      "description": "この実験では、要素の高さが未知の場合に、その高さを 0 から auto にスムーズにトランジションさせる方法を検討します。この技術は、ドロップダウンメニュー、アコーディオン、その他のアニメーション付きコンテンツの作成に役立ちます。CSS のトランジション、max-height、および overflow プロパティと、高さ値を動的に設定するための JavaScript を使用することで、シームレスで視覚的に魅力的なユーザーエクスペリエンスを作成できます。",
      "meta": {
        "title": "スムーズな高さトランジション | CSS アニメーション | ウェブ開発",
        "description": "CSS のトランジション、max-height、および JavaScript を使用して、要素の高さを 0 から auto にスムーズにトランジションさせる方法を学びましょう。ドロップダウンメニュー、アコーディオン、およびアニメーション付きコンテンツの作成に最適。",
        "keywords": "CSS アニメーション、高さトランジション、スムーズなアニメーション、ウェブ開発、ドロップダウンメニュー、アコーディオン、アニメーション付きコンテンツ"
      },
      "details": {
        "steps": [
          {
            "title": "高さのトランジション",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "ウェブサービスの実行状態を確認する",
                "file": "verify1-1.sh",
                "hint": "右下隅の「Go Live」をクリックして、ポート 8080 でウェブサービスを実行してください。その後、**Web 8080**タブを更新して、ウェブページをプレビューできます。"
              },
              {
                "name": "index.html の変更状態を確認する",
                "file": "verify1-2.sh",
                "hint": "実験を完了する手順に従ってください。"
              },
              {
                "name": "style.css の変更状態を確認する",
                "file": "verify1-3.sh",
                "hint": "実験を完了する手順に従ってください。"
              },
              {
                "name": "script.js の変更状態を確認する",
                "file": "verify1-4.sh",
                "hint": "実験を完了する手順に従ってください。"
              }
            ]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Гладкий переход динамических высот",
      "description": "В этом практическом занятии мы изучим, как гладко менять высоту элемента от 0 до auto, когда высота неизвестна. Эта техника полезна для создания выпадающих меню, аккордеонов и других анимированных элементов. Используя свойства CSS transition, max-height и overflow, а также JavaScript для динамического установки значения высоты, мы можем создать бесперебойный и визуально привлекательный пользовательский опыт.",
      "meta": {
        "title": "Гладкий переход высоты | CSS-анимация | Разработка веб-сайтов",
        "description": "Изучите, как гладко менять высоту элемента от 0 до auto с использованием CSS transition, max-height и JavaScript. Ideal для создания выпадающих меню, аккордеонов и анимированного контента.",
        "keywords": "CSS-анимация, переход высоты, гладкая анимация, веб-разработка, выпадающее меню, аккордеон, анимированный контент"
      },
      "details": {
        "steps": [
          {
            "title": "Переход высоты",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "Проверить статус работы веб-сервиса",
                "file": "verify1-1.sh",
                "hint": "Пожалуйста, нажмите кнопку 'Go Live' в нижнем правом углу, чтобы запустить веб-сервис на порту 8080. Затем можно обновить вкладку **Web 8080**, чтобы просмотреть веб-страницу."
              },
              {
                "name": "Проверить статус изменения index.html",
                "file": "verify1-2.sh",
                "hint": "Пожалуйста, следуйте шагам, чтобы завершить практическое занятие."
              },
              {
                "name": "Проверить статус изменения style.css",
                "file": "verify1-3.sh",
                "hint": "Пожалуйста, следуйте шагам, чтобы завершить практическое занятие."
              },
              {
                "name": "Проверить статус изменения script.js",
                "file": "verify1-4.sh",
                "hint": "Пожалуйста, следуйте шагам, чтобы завершить практическое занятие."
              }
            ]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    },
    {
      "lang": "ko",
      "title": "동적 높이의 부드러운 전환",
      "description": "이 랩에서는 요소의 높이를 알 수 없을 때 요소의 높이를 0 에서 auto 로 부드럽게 전환하는 방법을 살펴봅니다. 이 기술은 드롭다운 메뉴, 아코디언 및 기타 애니메이션 콘텐츠를 만드는 데 유용합니다. CSS transition, max-height 및 overflow 속성을 사용하고 JavaScript 를 사용하여 높이 값을 동적으로 설정함으로써 매끄럽고 시각적으로 매력적인 사용자 경험을 만들 수 있습니다.",
      "meta": {
        "title": "부드러운 높이 전환 | CSS 애니메이션 | 웹 개발",
        "description": "CSS transition, max-height 및 JavaScript 를 사용하여 요소의 높이를 0 에서 auto 로 부드럽게 전환하는 방법을 알아보세요. 드롭다운 메뉴, 아코디언 및 애니메이션 콘텐츠를 만드는 데 적합합니다.",
        "keywords": "CSS 애니메이션, 높이 전환, 부드러운 애니메이션, 웹 개발, 드롭다운 메뉴, 아코디언, 애니메이션 콘텐츠"
      },
      "details": {
        "steps": [
          {
            "title": "높이 전환",
            "text": "ko/step1.md",
            "verify": [
              {
                "name": "웹 서비스 실행 상태 확인",
                "file": "verify1-1.sh",
                "hint": "오른쪽 하단의 'Go Live'를 클릭하여 포트 8080 에서 웹 서비스를 실행하세요. 그런 다음 **Web 8080** 탭을 새로 고쳐 웹 페이지를 미리 볼 수 있습니다."
              },
              {
                "name": "index.html 수정 상태 확인",
                "file": "verify1-2.sh",
                "hint": "랩을 완료하려면 단계를 따르세요."
              },
              {
                "name": "style.css 수정 상태 확인",
                "file": "verify1-3.sh",
                "hint": "랩을 완료하려면 단계를 따르세요."
              },
              {
                "name": "script.js 수정 상태 확인",
                "file": "verify1-4.sh",
                "hint": "랩을 완료하려면 단계를 따르세요."
              }
            ]
          }
        ],
        "intro": {
          "text": "ko/intro.md",
          "title": "소개"
        },
        "finish": {
          "text": "ko/finish.md",
          "title": "요약"
        }
      }
    },
    {
      "lang": "pt",
      "title": "Transição Suave de Alturas Dinâmicas",
      "description": "Neste laboratório, exploraremos como fazer a transição suave da altura de um elemento de 0 para auto quando sua altura é desconhecida. Essa técnica é útil para criar menus suspensos (dropdown menus), acordes (accordions) e outros conteúdos animados. Ao usar a transição CSS, as propriedades max-height e overflow, bem como JavaScript para definir dinamicamente o valor da altura, podemos criar uma experiência de usuário perfeita e visualmente atraente.",
      "meta": {
        "title": "Transição Suave de Altura | Animação CSS | Desenvolvimento Web",
        "description": "Aprenda como fazer a transição suave da altura de um elemento de 0 para auto usando transição CSS, max-height e JavaScript. Ideal para criar menus suspensos, acordes e conteúdo animado.",
        "keywords": "animação CSS, transição de altura, animação suave, desenvolvimento web, menu suspenso, acorde, conteúdo animado"
      },
      "details": {
        "steps": [
          {
            "title": "Transição de Altura",
            "text": "pt/step1.md",
            "verify": [
              {
                "name": "Verificar o status de execução do serviço web",
                "file": "verify1-1.sh",
                "hint": "Por favor, clique em 'Go Live' no canto inferior direito para executar o serviço web na porta 8080. Em seguida, você pode atualizar a aba **Web 8080** para visualizar a página web."
              },
              {
                "name": "Verificar o status da modificação de index.html",
                "file": "verify1-2.sh",
                "hint": "Por favor, siga os passos para completar o laboratório."
              },
              {
                "name": "Verificar o status da modificação de style.css",
                "file": "verify1-3.sh",
                "hint": "Por favor, siga os passos para completar o laboratório."
              },
              {
                "name": "Verificar o status da modificação de script.js",
                "file": "verify1-4.sh",
                "hint": "Por favor, siga os passos para completar o laboratório."
              }
            ]
          }
        ],
        "intro": {
          "text": "pt/intro.md",
          "title": "Introdução"
        },
        "finish": {
          "text": "pt/finish.md",
          "title": "Resumo"
        }
      }
    }
  ]
}
