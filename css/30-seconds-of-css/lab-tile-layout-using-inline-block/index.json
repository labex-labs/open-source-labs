{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Creating Responsive Tiled Layouts",
  "description": "In this lab, we will learn how to create a 3-tile layout using display: inline-block. You will use width and calc to evenly divide the container into 3 columns and set font-size to avoid whitespace. By the end of this lab, you will have a better understanding of how to create a clean and responsive tiled layout without using float, flex or grid.",
  "meta": {
    "title": "3-Tile Layout | CSS | HTML | Web Development",
    "description": "Learn how to create a responsive 3-tile layout using CSS inline-block without float, flex, or grid. Optimize your web page for search engines with this comprehensive tutorial.",
    "keywords": "CSS, HTML, Web Development, Responsive Design, Inline-block, Tiled Layout"
  },
  "difficulty": "Beginner",
  "time": 10,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "3-Tile Layout",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify the running status of the web service",
            "file": "verify1-1.sh",
            "hint": "Please click on 'Go Live' in the bottom right corner to run the web service on port 8080. Then, you can refresh the **Web 8080** Tab to preview the web page.",
            "timeout": 0,
            "showstderr": true
          },
          {
            "name": "Verify the status of index.html modification",
            "file": "verify1-2.sh",
            "hint": "Please follow the steps to complete the lab.",
            "timeout": 0,
            "showstderr": true
          },
          {
            "name": "Verify the status of style.css modification",
            "file": "verify1-3.sh",
            "hint": "Please follow the steps to complete the lab.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "css/display_property",
          "css/fonts",
          "css/margin_and_padding",
          "css/selectors",
          "css/width_and_height"
        ]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    },
    "assets": {
      "host01": [
        {
          "file": "index.html",
          "target": "~/project",
          "chmod": "ugo+rwx"
        },
        {
          "file": "style.css",
          "target": "~/project",
          "chmod": "ugo+rwx"
        }
      ]
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["Lotus-7"],
  "license": {
    "name": "CC-BY-4.0",
    "url": "https://github.com/30-seconds/30-seconds-of-code/blob/master/LICENSE",
    "repo": "https://github.com/30-seconds/30-seconds-of-code"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "创建响应式平铺布局",
      "description": "在本实验中，我们将学习如何使用 display: inline-block 创建一个三栏布局。你将使用 width 和 calc 将容器均匀地分成三列，并设置 font-size 以避免空白。在本实验结束时，你将更好地理解如何在不使用 float、flex 或 grid 的情况下创建一个简洁且响应式的平铺布局。",
      "meta": {
        "title": "三栏布局 | CSS | HTML | 网页开发",
        "description": "学习如何使用 CSS 内联块在不使用 float、flex 或 grid 的情况下创建响应式三栏布局。通过本全面教程为你的网页进行搜索引擎优化。",
        "keywords": "CSS, HTML, 网页开发，响应式设计，内联块，平铺布局"
      },
      "details": {
        "steps": [
          {
            "title": "三栏布局",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "验证网络服务的运行状态",
                "file": "verify1-1.sh",
                "hint": "请点击右下角的“Go Live”以在端口 8080 上运行网络服务。然后，你可以刷新“Web 8080”标签页来预览网页。"
              },
              {
                "name": "验证 index.html 的修改状态",
                "file": "verify1-2.sh",
                "hint": "请按照步骤完成实验。"
              },
              {
                "name": "验证 style.css 的修改状态",
                "file": "verify1-3.sh",
                "hint": "请按照步骤完成实验。"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Creando diseños de mosaicos responsivos",
      "description": "En este laboratorio, aprenderemos cómo crear un diseño de tres mosaicos utilizando display: inline-block. Utilizarás width y calc para dividir uniformemente el contenedor en 3 columnas y establecer el tamaño de fuente para evitar espacios en blanco. Al final de este laboratorio, tendrás una mejor comprensión de cómo crear un diseño de mosaicos limpio y responsivo sin utilizar float, flex o grid.",
      "meta": {
        "title": "Diseño de tres mosaicos | CSS | HTML | Desarrollo web",
        "description": "Aprende cómo crear un diseño de tres mosaicos responsivos utilizando CSS inline-block sin float, flex o grid. Optimiza tu página web para los motores de búsqueda con este tutorial completo.",
        "keywords": "CSS, HTML, Desarrollo web, Diseño responsivo, Inline-block, Diseño de mosaicos"
      },
      "details": {
        "steps": [
          {
            "title": "Diseño de tres mosaicos",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Verificar el estado de ejecución del servicio web",
                "file": "verify1-1.sh",
                "hint": "Haga clic en 'Go Live' en la esquina inferior derecha para ejecutar el servicio web en el puerto 8080. Luego, puede actualizar la pestaña **Web 8080** para previsualizar la página web."
              },
              {
                "name": "Verificar el estado de la modificación de index.html",
                "file": "verify1-2.sh",
                "hint": "Siga los pasos para completar el laboratorio."
              },
              {
                "name": "Verificar el estado de la modificación de style.css",
                "file": "verify1-3.sh",
                "hint": "Siga los pasos para completar el laboratorio."
              }
            ]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Création de dispositions en carreaux responsives",
      "description": "Dans ce laboratoire, nous allons apprendre à créer une disposition en trois carreaux à l'aide de display: inline-block. Vous utiliserez width et calc pour diviser uniformément le conteneur en trois colonnes et définir font-size pour éviter les espaces blancs. À la fin de ce laboratoire, vous aurez une meilleure compréhension de la manière de créer une disposition en carreaux propre et responsive sans utiliser float, flex ou grid.",
      "meta": {
        "title": "Disposition en trois carreaux | CSS | HTML | Développement web",
        "description": "Apprenez à créer une disposition en trois carreaux responsives à l'aide de CSS inline-block sans float, flex ou grid. Optimisez votre page web pour les moteurs de recherche avec ce tutoriel complet.",
        "keywords": "CSS, HTML, Développement web, Conception responsive, Inline-block, Disposition en carreaux"
      },
      "details": {
        "steps": [
          {
            "title": "Disposition en trois carreaux",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Vérifier le statut d'exécution du service web",
                "file": "verify1-1.sh",
                "hint": "Veuillez cliquer sur 'Go Live' dans le coin inférieur droit pour exécuter le service web sur le port 8080. Ensuite, vous pouvez actualiser l'onglet **Web 8080** pour prévisualiser la page web."
              },
              {
                "name": "Vérifier le statut de la modification de index.html",
                "file": "verify1-2.sh",
                "hint": "Veuillez suivre les étapes pour terminer le laboratoire."
              },
              {
                "name": "Vérifier le statut de la modification de style.css",
                "file": "verify1-3.sh",
                "hint": "Veuillez suivre les étapes pour terminer le laboratoire."
              }
            ]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Responsive Kachel-Layouts erstellen",
      "description": "In diesem Lab werden wir lernen, wie man ein 3-Kachel-Layout mit `display: inline-block` erstellt. Wir werden `width` und `calc` verwenden, um den Container gleichmäßig in 3 Spalten zu teilen und `font-size` einstellen, um Leerraum zu vermeiden. Am Ende dieses Labs werden Sie ein besseres Verständnis dafür haben, wie man ein sauberes und responsives Kachel-Layout ohne die Verwendung von `float`, `flex` oder `grid` erstellt.",
      "meta": {
        "title": "3-Kachel-Layout | CSS | HTML | Webentwicklung",
        "description": "Lernen Sie, wie man ein responsives 3-Kachel-Layout mit CSS `inline-block` ohne `float`, `flex` oder `grid` erstellt. Optimieren Sie Ihre Webseite für Suchmaschinen mit diesem umfassenden Tutorial.",
        "keywords": "CSS, HTML, Webentwicklung, Responsive Design, Inline-block, Kachel-Layout"
      },
      "details": {
        "steps": [
          {
            "title": "3-Kachel-Layout",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Überprüfen des Laufzustands des Webdiensts",
                "file": "verify1-1.sh",
                "hint": "Klicken Sie bitte in der unteren rechten Ecke auf 'Go Live', um den Webdienst auf Port 8080 auszuführen. Anschließend können Sie die Registerkarte **Web 8080** aktualisieren, um die Webseite anzuschauen."
              },
              {
                "name": "Überprüfen des Status der Änderungen an index.html",
                "file": "verify1-2.sh",
                "hint": "Bitte folgen Sie den Schritten, um das Lab abzuschließen."
              },
              {
                "name": "Überprüfen des Status der Änderungen an style.css",
                "file": "verify1-3.sh",
                "hint": "Bitte folgen Sie den Schritten, um das Lab abzuschließen."
              }
            ]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "応答性のあるタイル付きレイアウトの作成",
      "description": "この実験では、`display: inline-block` を使って 3 タイルのレイアウトを作成する方法を学びます。コンテナを 3 列に均等に分割するために `width` と `calc` を使い、空白を避けるために `font-size` を設定します。この実験が終わるとき、`float`、`flex` または `grid` を使わずに、クリーンで応答性のあるタイル付きのレイアウトを作成する方法をより深く理解しているでしょう。",
      "meta": {
        "title": "3 タイルレイアウト | CSS | HTML | ウェブ開発",
        "description": "CSS のインラインブロックを使って、float、flex、または grid を使わずに応答性のある 3 タイルレイアウトを作成する方法を学びましょう。この包括的なチュートリアルでウェブページを検索エンジン向けに最適化しましょう。",
        "keywords": "CSS, HTML, ウェブ開発，応答性デザイン，インラインブロック，タイル付きレイアウト"
      },
      "details": {
        "steps": [
          {
            "title": "3 タイルレイアウト",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "ウェブサービスの実行状態を確認する",
                "file": "verify1-1.sh",
                "hint": "右下隅の「Go Live」をクリックして、ポート 8080 でウェブサービスを実行してください。その後、**Web 8080** タブを更新してウェブページをプレビューできます。"
              },
              {
                "name": "index.html の変更状態を確認する",
                "file": "verify1-2.sh",
                "hint": "実験を完了するための手順に従ってください。"
              },
              {
                "name": "style.css の変更状態を確認する",
                "file": "verify1-3.sh",
                "hint": "実験を完了するための手順に従ってください。"
              }
            ]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Создание адаптивных макетов из плиток",
      "description": "В этом практическом занятии мы узнаем, как создать макет из трех плиток с использованием display: inline-block. Мы будем использовать width и calc, чтобы равномерно разделить контейнер на три колонки, и установим font-size, чтобы избежать появления пробелов между элементами. В конце практического занятия вы получите более глубокое понимание того, как создавать чистый и адаптивный макет из плиток без использования float, flex или grid.",
      "meta": {
        "title": "Макет из трех плиток | CSS | HTML | Разработка в вебе",
        "description": "Изучите, как создать адаптивный макет из трех плиток с использованием CSS inline-block без float, flex или grid. Оптимизируйте свою веб-страницу для поисковых систем с помощью этого полного руководства.",
        "keywords": "CSS, HTML, Разработка в вебе, Адаптивный дизайн, Inline-block, Макет из плиток"
      },
      "details": {
        "steps": [
          {
            "title": "Макет из трех плиток",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "Проверить статус работы веб-сервиса",
                "file": "verify1-1.sh",
                "hint": "Пожалуйста, нажмите на кнопку 'Go Live' в нижнем правом углу, чтобы запустить веб-сервис на порту 8080. Затем можно обновить вкладку **Web 8080**, чтобы просмотреть веб-страницу."
              },
              {
                "name": "Проверить статус изменения index.html",
                "file": "verify1-2.sh",
                "hint": "Пожалуйста, следуйте шагам, чтобы завершить практическое занятие."
              },
              {
                "name": "Проверить статус изменения style.css",
                "file": "verify1-3.sh",
                "hint": "Пожалуйста, следуйте шагам, чтобы завершить практическое занятие."
              }
            ]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    }
  ]
}
