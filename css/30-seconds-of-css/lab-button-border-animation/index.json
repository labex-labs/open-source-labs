{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Button Border Animation",
  "description": "In this lab, we will explore how to create a button border animation on hover using CSS. By using the ::before and ::after pseudo-elements, we can add two boxes above and below the button and transition their width to 100% on hover. This lab will help you to enhance your CSS skills and add interactivity to your web pages.",
  "meta": {
    "title": "Button Border Animation Tutorial",
    "description": "Learn how to create an interactive button border animation using CSS.",
    "keywords": "css, css exercises, hover, css practice, button, border, css playground, css lab, animation"
  },
  "difficulty": "Beginner",
  "time": 5,
  "hidden": true,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Button Border Animation",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify the running status of the web service",
            "file": "verify1-1.sh",
            "hint": "Please click on 'Go Live' in the bottom right corner to run the web service on port 8080. Then, you can refresh the **Web 8080** Tab to preview the web page.",
            "timeout": 0,
            "showstderr": true
          },
          {
            "name": "Verify the status of index.html modification",
            "file": "verify1-2.sh",
            "hint": "Please follow the steps to complete the lab.",
            "timeout": 0,
            "showstderr": true
          },
          {
            "name": "Verify the status of style.css modification",
            "file": "verify1-3.sh",
            "hint": "Please follow the steps to complete the lab.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "css/backgrounds",
          "css/borders",
          "css/colors",
          "css/margin_and_padding",
          "css/positioning",
          "css/pseudo_classes",
          "css/pseudo_elements",
          "css/selectors",
          "css/transitions",
          "css/width_and_height"
        ]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    },
    "assets": {
      "host01": [
        {
          "file": "index.html",
          "target": "~/project",
          "chmod": "ugo+rwx"
        },
        {
          "file": "style.css",
          "target": "~/project",
          "chmod": "ugo+rwx"
        }
      ]
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["Lotus-7"],
  "license": {
    "name": "CC-BY-4.0",
    "url": "https://github.com/30-seconds/30-seconds-of-code/blob/master/LICENSE",
    "repo": "https://github.com/30-seconds/30-seconds-of-code"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "按钮边框动画",
      "description": "在本实验中，我们将探索如何使用 CSS 在按钮悬停时创建边框动画。通过使用::before 和::after 伪元素，我们可以在按钮上方和下方添加两个框，并在悬停时将它们的宽度过渡到 100%。本实验将帮助你提升 CSS 技能，并为你的网页增添交互性。",
      "meta": {
        "title": "按钮边框动画教程",
        "description": "学习如何使用 CSS 创建交互式按钮边框动画。",
        "keywords": "CSS, CSS 练习，悬停，CSS 实践，按钮，边框，CSS 游乐场，CSS 实验，动画"
      },
      "details": {
        "steps": [
          {
            "title": "按钮边框动画",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "验证网络服务的运行状态",
                "file": "verify1-1.sh",
                "hint": "请点击右下角的“上线”以在端口 8080 上运行网络服务。然后，你可以刷新“Web 8080”标签页来预览网页。"
              },
              {
                "name": "验证 index.html 的修改状态",
                "file": "verify1-2.sh",
                "hint": "请按照步骤完成实验。"
              },
              {
                "name": "验证 style.css 的修改状态",
                "file": "verify1-3.sh",
                "hint": "请按照步骤完成实验。"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Animación de borde de botón",
      "description": "En este laboratorio, exploraremos cómo crear una animación de borde de botón al pasar el cursor por encima utilizando CSS. Al utilizar los pseudo-elementos ::before y ::after, podemos agregar dos cajas arriba y abajo del botón y transicionar su ancho a 100% al pasar el cursor por encima. Este laboratorio te ayudará a mejorar tus habilidades en CSS y a agregar interactividad a tus páginas web.",
      "meta": {
        "title": "Tutorial de animación de borde de botón",
        "description": "Aprende cómo crear una animación interactiva de borde de botón utilizando CSS.",
        "keywords": "css, ejercicios de css, pasar el cursor, práctica de css, botón, borde, playground de css, laboratorio de css, animación"
      },
      "details": {
        "steps": [
          {
            "title": "Animación de borde de botón",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Verificar el estado de ejecución del servicio web",
                "file": "verify1-1.sh",
                "hint": "Haga clic en 'Go Live' en la esquina inferior derecha para ejecutar el servicio web en el puerto 8080. Luego, puede actualizar la pestaña **Web 8080** para previsualizar la página web."
              },
              {
                "name": "Verificar el estado de la modificación de index.html",
                "file": "verify1-2.sh",
                "hint": "Siga los pasos para completar el laboratorio."
              },
              {
                "name": "Verificar el estado de la modificación de style.css",
                "file": "verify1-3.sh",
                "hint": "Siga los pasos para completar el laboratorio."
              }
            ]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Animation de bordure de bouton",
      "description": "Dans ce laboratoire, nous allons explorer la manière de créer une animation de bordure de bouton au survol à l'aide de CSS. En utilisant les pseudo-éléments ::before et ::after, nous pouvons ajouter deux boîtes au-dessus et en-dessous du bouton et transférer leur largeur à 100% au survol. Ce laboratoire vous aidera à améliorer vos compétences en CSS et à ajouter une interactivité à vos pages web.",
      "meta": {
        "title": "Tutoriel sur l'animation de bordure de bouton",
        "description": "Découvrez comment créer une animation interactive de bordure de bouton à l'aide de CSS.",
        "keywords": "css, exercices css, survol, pratique css, bouton, bordure, terrain de jeu css, laboratoire css, animation"
      },
      "details": {
        "steps": [
          {
            "title": "Animation de bordure de bouton",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Vérifier le statut d'exécution du service web",
                "file": "verify1-1.sh",
                "hint": "Veuillez cliquer sur 'Go Live' dans le coin inférieur droit pour exécuter le service web sur le port 8080. Ensuite, vous pouvez rafraîchir l'onglet **Web 8080** pour prévisualiser la page web."
              },
              {
                "name": "Vérifier le statut de modification de index.html",
                "file": "verify1-2.sh",
                "hint": "Veuillez suivre les étapes pour terminer le laboratoire."
              },
              {
                "name": "Vérifier le statut de modification de style.css",
                "file": "verify1-3.sh",
                "hint": "Veuillez suivre les étapes pour terminer le laboratoire."
              }
            ]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Button-Rahmenanimation",
      "description": "In diesem Lab werden wir untersuchen, wie man mit CSS eine Button-Rahmenanimation beim Hovern erstellt. Mit den Pseudoelementen ::before und ::after können wir zwei Boxen über und unter dem Button hinzufügen und ihre Breite beim Hovern auf 100% überführen. Dieses Lab wird Ihnen helfen, Ihre CSS-Fähigkeiten zu verbessern und Interaktivität auf Ihre Webseiten hinzuzufügen.",
      "meta": {
        "title": "Tutorial zur Button-Rahmenanimation",
        "description": "Lernen Sie, wie Sie mit CSS eine interaktive Button-Rahmenanimation erstellen.",
        "keywords": "css, css Übungen, Hovern, css Übung, Button, Rahmen, css Spielplatz, css Lab, Animation"
      },
      "details": {
        "steps": [
          {
            "title": "Button-Rahmenanimation",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Überprüfen des Laufzustands des Webdiensts",
                "file": "verify1-1.sh",
                "hint": "Bitte klicken Sie auf 'Go Live' in der unteren rechten Ecke, um den Webdienst auf Port 8080 auszuführen. Anschließend können Sie die Registerkarte **Web 8080** aktualisieren, um die Webseite anzuschauen."
              },
              {
                "name": "Überprüfen des Status der Änderungen an index.html",
                "file": "verify1-2.sh",
                "hint": "Bitte folgen Sie den Schritten, um das Lab abzuschließen."
              },
              {
                "name": "Überprüfen des Status der Änderungen an style.css",
                "file": "verify1-3.sh",
                "hint": "Bitte folgen Sie den Schritten, um das Lab abzuschließen."
              }
            ]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "ボタンの枠線アニメーション",
      "description": "この実験では、CSS を使ってホバー時にボタンの枠線をアニメーションさせる方法を探ります。`::before` と `::after` 疑似要素を使うことで、ボタンの上下に 2 つのボックスを追加し、ホバー時にそれらの幅を `100%` に変化させることができます。この実験は、CSS のスキルを向上させ、Web ページにインタラクティビティを追加するのに役立ちます。",
      "meta": {
        "title": "ボタンの枠線アニメーション チュートリアル",
        "description": "CSS を使ってインタラクティブなボタンの枠線アニメーションを作成する方法を学びましょう。",
        "keywords": "css, css エクササイズ，ホバー, css 練習，ボタン，枠線，css プレイグラウンド，css 実験，アニメーション"
      },
      "details": {
        "steps": [
          {
            "title": "ボタンの枠線アニメーション",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "Web サービスの実行状態を確認する",
                "file": "verify1-1.sh",
                "hint": "右下隅の「Go Live」をクリックして、ポート 8080 で Web サービスを実行してください。その後、**Web 8080** タブを更新して Web ページをプレビューできます。"
              },
              {
                "name": "index.html の変更状態を確認する",
                "file": "verify1-2.sh",
                "hint": "実験を完了する手順に従ってください。"
              },
              {
                "name": "style.css の変更状態を確認する",
                "file": "verify1-3.sh",
                "hint": "実験を完了する手順に従ってください。"
              }
            ]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Анимация границы кнопки",
      "description": "В этом практическом занятии мы изучим, как создать анимацию границы кнопки при наведении курсора с помощью CSS. Используя псевдо-элементы ::before и ::after, мы можем добавить два прямоугольника выше и ниже кнопки и анимировать изменение их ширины до 100% при наведении курсора. Это практическое занятие поможет вам улучшить свои навыки в CSS и добавить интерактивность на ваших веб-страницах.",
      "meta": {
        "title": "Учебник по анимации границы кнопки",
        "description": "Изучите, как создать интерактивную анимацию границы кнопки с использованием CSS.",
        "keywords": "css, упражнения по css, наведение курсора, практика css, кнопка, граница, css-площадка, css-лаборатория, анимация"
      },
      "details": {
        "steps": [
          {
            "title": "Анимация границы кнопки",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "Проверить статус работы веб-сервиса",
                "file": "verify1-1.sh",
                "hint": "Пожалуйста, нажмите кнопку 'Go Live' в нижнем правом углу, чтобы запустить веб-сервис на порту 8080. Затем вы можете обновить вкладку **Web 8080**, чтобы просмотреть веб-страницу."
              },
              {
                "name": "Проверить статус изменения index.html",
                "file": "verify1-2.sh",
                "hint": "Пожалуйста, следуйте шагам, чтобы завершить практическое занятие."
              },
              {
                "name": "Проверить статус изменения style.css",
                "file": "verify1-3.sh",
                "hint": "Пожалуйста, следуйте шагам, чтобы завершить практическое занятие."
              }
            ]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    },
    {
      "lang": "ko",
      "title": "버튼 테두리 애니메이션",
      "description": "이 랩에서는 CSS 를 사용하여 호버 시 버튼 테두리 애니메이션을 만드는 방법을 살펴봅니다. ::before 및 ::after 가상 요소 (pseudo-elements) 를 사용하여 버튼 위와 아래에 두 개의 상자를 추가하고 호버 시 너비를 100% 로 전환할 수 있습니다. 이 랩은 CSS 기술을 향상시키고 웹 페이지에 상호 작용성을 추가하는 데 도움이 될 것입니다.",
      "meta": {
        "title": "CSS 를 활용한 버튼 테두리 애니메이션 튜토리얼",
        "description": "CSS 를 사용하여 인터랙티브한 버튼 테두리 애니메이션을 만드는 방법을 알아보세요.",
        "keywords": "css, css 연습, 호버, css 실습, 버튼, 테두리, css 플레이그라운드, css 랩, 애니메이션"
      },
      "details": {
        "steps": [
          {
            "title": "버튼 테두리 애니메이션",
            "text": "ko/step1.md",
            "verify": [
              {
                "name": "웹 서비스 실행 상태 확인",
                "file": "verify1-1.sh",
                "hint": "오른쪽 하단의 'Go Live'를 클릭하여 웹 서비스를 포트 8080 에서 실행하세요. 그런 다음, **Web 8080** 탭을 새로 고쳐 웹 페이지를 미리 볼 수 있습니다."
              },
              {
                "name": "index.html 수정 상태 확인",
                "file": "verify1-2.sh",
                "hint": "랩을 완료하려면 단계를 따르세요."
              },
              {
                "name": "style.css 수정 상태 확인",
                "file": "verify1-3.sh",
                "hint": "랩을 완료하려면 단계를 따르세요."
              }
            ]
          }
        ],
        "intro": {
          "text": "ko/intro.md",
          "title": "소개"
        },
        "finish": {
          "text": "ko/finish.md",
          "title": "요약"
        }
      }
    },
    {
      "lang": "pt",
      "title": "Animação de Borda em Botão",
      "description": "Neste laboratório, exploraremos como criar uma animação de borda em um botão ao passar o mouse (hover) usando CSS. Ao usar os pseudo-elementos ::before e ::after, podemos adicionar duas caixas acima e abaixo do botão e transicionar sua largura para 100% ao passar o mouse. Este laboratório ajudará você a aprimorar suas habilidades em CSS e adicionar interatividade às suas páginas web.",
      "meta": {
        "title": "Tutorial de Animação de Borda em Botão com CSS",
        "description": "Aprenda como criar uma animação interativa de borda em botão usando CSS. Melhore a experiência do usuário com efeitos visuais dinâmicos.",
        "keywords": "css, exercícios css, hover, prática css, botão, borda, playground css, laboratório css, animação, efeitos css, tutorial css"
      },
      "details": {
        "steps": [
          {
            "title": "Animação de Borda em Botão",
            "text": "pt/step1.md",
            "verify": [
              {
                "name": "Verificar o status de execução do serviço web",
                "file": "verify1-1.sh",
                "hint": "Por favor, clique em 'Go Live' no canto inferior direito para executar o serviço web na porta 8080. Em seguida, você pode atualizar a aba **Web 8080** para visualizar a página web."
              },
              {
                "name": "Verificar o status da modificação de index.html",
                "file": "verify1-2.sh",
                "hint": "Por favor, siga os passos para completar o laboratório."
              },
              {
                "name": "Verificar o status da modificação de style.css",
                "file": "verify1-3.sh",
                "hint": "Por favor, siga os passos para completar o laboratório."
              }
            ]
          }
        ],
        "intro": {
          "text": "pt/intro.md",
          "title": "Introdução"
        },
        "finish": {
          "text": "pt/finish.md",
          "title": "Resumo"
        }
      }
    }
  ]
}
