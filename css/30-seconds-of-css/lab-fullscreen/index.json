{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Fullscreen Element Styling with CSS",
  "description": "In this lab, we will explore how to use the :fullscreen CSS pseudo-element selector to apply styles to an element when it is in fullscreen mode. We will create a button using Element.requestFullscreen() to make the element fullscreen for the purpose of previewing the style. By the end of this lab, you will have a better understanding of how to create fullscreen elements with custom styles using CSS.",
  "meta": {
    "title": "CSS Fullscreen Element Styling | Web Development",
    "description": "Learn how to use the CSS :fullscreen pseudo-element to style elements in fullscreen mode, including creating a button to preview the fullscreen styles.",
    "keywords": "CSS, Fullscreen, Pseudo-element, Web Development, HTML, CSS Styling"
  },
  "difficulty": "Beginner",
  "time": 5,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Fullscreen",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify the running status of the web service",
            "file": "verify1-1.sh",
            "hint": "Please click on 'Go Live' in the bottom right corner to run the web service on port 8080. Then, you can refresh the **Web 8080** Tab to preview the web page.",
            "timeout": 0,
            "showstderr": true
          },
          {
            "name": "Verify the status of index.html modification",
            "file": "verify1-2.sh",
            "hint": "Please follow the steps to complete the lab.",
            "timeout": 0,
            "showstderr": true
          },
          {
            "name": "Verify the status of style.css modification",
            "file": "verify1-3.sh",
            "hint": "Please follow the steps to complete the lab.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "css/backgrounds",
          "css/borders",
          "css/box_model",
          "css/colors",
          "css/comments",
          "css/fonts",
          "css/margin_and_padding",
          "css/mobile_first_design",
          "css/selectors",
          "css/text_styling",
          "css/width_and_height"
        ]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    },
    "assets": {
      "host01": [
        {
          "file": "index.html",
          "target": "~/project",
          "chmod": "ugo+rwx"
        },
        {
          "file": "style.css",
          "target": "~/project",
          "chmod": "ugo+rwx"
        }
      ]
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["Lotus-7"],
  "license": {
    "name": "CC-BY-4.0",
    "url": "https://github.com/30-seconds/30-seconds-of-code/blob/master/LICENSE",
    "repo": "https://github.com/30-seconds/30-seconds-of-code"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "使用 CSS 进行全屏元素样式设置",
      "description": "在本实验中，我们将探索如何使用 :fullscreen CSS 伪元素选择器，在元素处于全屏模式时为其应用样式。我们将使用 Element.requestFullscreen() 创建一个按钮，使元素进入全屏模式以预览样式。完成本实验后，你将更好地理解如何使用 CSS 创建具有自定义样式的全屏元素。",
      "meta": {
        "title": "CSS 全屏元素样式设置 | 网页开发",
        "description": "学习如何使用 CSS :fullscreen 伪元素对全屏模式下的元素进行样式设置，包括创建一个按钮来预览全屏样式。",
        "keywords": "CSS, 全屏，伪元素，网页开发，HTML, CSS 样式设置"
      },
      "details": {
        "steps": [
          {
            "title": "全屏",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "验证网络服务的运行状态",
                "file": "verify1-1.sh",
                "hint": "请点击右下角的“Go Live”以在端口 8080 上运行网络服务。然后，你可以刷新“Web 8080”标签页来预览网页。"
              },
              {
                "name": "验证 index.html 的修改状态",
                "file": "verify1-2.sh",
                "hint": "请按照步骤完成实验。"
              },
              {
                "name": "验证 style.css 的修改状态",
                "file": "verify1-3.sh",
                "hint": "请按照步骤完成实验。"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Estilización de elementos en pantalla completa con CSS",
      "description": "En este laboratorio, exploraremos cómo usar el selector de pseudo-elemento CSS :fullscreen para aplicar estilos a un elemento cuando está en modo pantalla completa. Crearemos un botón usando Element.requestFullscreen() para poner el elemento en pantalla completa con el fin de previsualizar el estilo. Al final de este laboratorio, tendrás una mejor comprensión de cómo crear elementos en pantalla completa con estilos personalizados usando CSS.",
      "meta": {
        "title": "Estilización de elementos en pantalla completa con CSS | Desarrollo web",
        "description": "Aprende a usar el pseudo-elemento CSS :fullscreen para estilizar elementos en modo pantalla completa, incluyendo la creación de un botón para previsualizar los estilos en pantalla completa.",
        "keywords": "CSS, Pantalla Completa, Pseudo-elemento, Desarrollo web, HTML, Estilización CSS"
      },
      "details": {
        "steps": [
          {
            "title": "Pantalla Completa",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Verificar el estado de ejecución del servicio web",
                "file": "verify1-1.sh",
                "hint": "Haga clic en 'Go Live' en la esquina inferior derecha para ejecutar el servicio web en el puerto 8080. Luego, puede actualizar la pestaña **Web 8080** para previsualizar la página web."
              },
              {
                "name": "Verificar el estado de la modificación de index.html",
                "file": "verify1-2.sh",
                "hint": "Siga los pasos para completar el laboratorio."
              },
              {
                "name": "Verificar el estado de la modificación de style.css",
                "file": "verify1-3.sh",
                "hint": "Siga los pasos para completar el laboratorio."
              }
            ]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Stylisation d'éléments en plein écran avec CSS",
      "description": "Dans ce laboratoire, nous allons explorer comment utiliser le sélecteur de pseudo-élément CSS :fullscreen pour appliquer des styles à un élément lorsqu'il est en mode plein écran. Nous allons créer un bouton à l'aide de Element.requestFullscreen() pour mettre l'élément en plein écran dans le but de prévisualiser le style. À la fin de ce laboratoire, vous aurez une meilleure compréhension de la manière de créer des éléments en plein écran avec des styles personnalisés à l'aide de CSS.",
      "meta": {
        "title": "Stylisation d'éléments en plein écran avec CSS | Développement web",
        "description": "Découvrez comment utiliser le pseudo-élément CSS :fullscreen pour styliser des éléments en mode plein écran, y compris la création d'un bouton pour prévisualiser les styles en plein écran.",
        "keywords": "CSS, Plein écran, Pseudo-élément, Développement web, HTML, Stylisation CSS"
      },
      "details": {
        "steps": [
          {
            "title": "Plein écran",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Vérifiez le statut d'exécution du service web",
                "file": "verify1-1.sh",
                "hint": "Veuillez cliquer sur 'Go Live' dans le coin inférieur droit pour exécuter le service web sur le port 8080. Ensuite, vous pouvez actualiser l'onglet **Web 8080** pour prévisualiser la page web."
              },
              {
                "name": "Vérifiez le statut de la modification de index.html",
                "file": "verify1-2.sh",
                "hint": "Veuillez suivre les étapes pour terminer le laboratoire."
              },
              {
                "name": "Vérifiez le statut de la modification de style.css",
                "file": "verify1-3.sh",
                "hint": "Veuillez suivre les étapes pour terminer le laboratoire."
              }
            ]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Vollbild-Element-Styling mit CSS",
      "description": "In diesem Lab werden wir untersuchen, wie man den CSS-Pseudo-Element-Selektor :fullscreen verwendet, um Stile auf ein Element anzuwenden, wenn es im Vollbildmodus ist. Wir werden einen Button mit Element.requestFullscreen() erstellen, um das Element für die Vorschau des Stils in den Vollbildmodus zu versetzen. Am Ende dieses Labs werden Sie ein besseres Verständnis dafür haben, wie man mit CSS Vollbild-Elemente mit benutzerdefinierten Stilen erstellt.",
      "meta": {
        "title": "CSS Vollbild-Element-Styling | Webentwicklung",
        "description": "Lernen Sie, wie man den CSS-Pseudo-Element :fullscreen verwendet, um Elemente im Vollbildmodus zu stylen, einschließlich des Erstellens eines Buttons zur Vorschau der Vollbild-Stile.",
        "keywords": "CSS, Vollbild, Pseudo-Element, Webentwicklung, HTML, CSS-Styling"
      },
      "details": {
        "steps": [
          {
            "title": "Vollbild",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Überprüfen des Laufzustands des Webdiensts",
                "file": "verify1-1.sh",
                "hint": "Bitte klicken Sie auf 'Go Live' in der unteren rechten Ecke, um den Webdienst auf Port 8080 auszuführen. Anschließend können Sie die Registerkarte **Web 8080** aktualisieren, um die Webseite zu Vorschauen."
              },
              {
                "name": "Überprüfen des Status der Änderungen an index.html",
                "file": "verify1-2.sh",
                "hint": "Bitte folgen Sie den Schritten, um das Lab abzuschließen."
              },
              {
                "name": "Überprüfen des Status der Änderungen an style.css",
                "file": "verify1-3.sh",
                "hint": "Bitte folgen Sie den Schritten, um das Lab abzuschließen."
              }
            ]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "CSS を使ったフルスクリーン要素のスタイリング",
      "description": "この実験では、`:fullscreen` CSS 疑似要素セレクタを使用して、要素がフルスクリーンモードにあるときにスタイルを適用する方法を探ります。要素をフルスクリーンにするために `Element.requestFullscreen()` を使用してボタンを作成し、スタイルのプレビューを行います。この実験が終了すると、CSS を使用してカスタムスタイルのフルスクリーン要素を作成する方法をより深く理解するようになります。",
      "meta": {
        "title": "CSS によるフルスクリーン要素のスタイリング | ウェブ開発",
        "description": "CSS の `:fullscreen` 疑似要素を使って、フルスクリーンモードで要素にスタイルを適用する方法を学びましょう。これには、フルスクリーンスタイルをプレビューするためのボタンの作成も含まれます。",
        "keywords": "CSS, フルスクリーン，疑似要素，ウェブ開発，HTML, CSS スタイリング"
      },
      "details": {
        "steps": [
          {
            "title": "フルスクリーン",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "ウェブサービスの実行状態を確認する",
                "file": "verify1-1.sh",
                "hint": "右下隅の「Go Live」をクリックして、ポート 8080 でウェブサービスを実行してください。その後、**Web 8080**タブを更新してウェブページをプレビューできます。"
              },
              {
                "name": "index.html の変更状態を確認する",
                "file": "verify1-2.sh",
                "hint": "実験を完了する手順に従ってください。"
              },
              {
                "name": "style.css の変更状態を確認する",
                "file": "verify1-3.sh",
                "hint": "実験を完了する手順に従ってください。"
              }
            ]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Стилизация элементов в полноэкранном режиме с использованием CSS",
      "description": "В этом практическом занятии мы изучим, как использовать псевдоэлементный селектор CSS :fullscreen для применения стилей к элементу в полноэкранном режиме. Мы создадим кнопку с использованием Element.requestFullscreen() для перевода элемента в полноэкранный режим для целей предварительного просмотра стиля. В конце этого практического занятия вы будете лучше понимать, как создавать полноэкранные элементы с пользовательскими стилями с использованием CSS.",
      "meta": {
        "title": "Стилизация элементов в полноэкранном режиме с использованием CSS | Разработка в Интернете",
        "description": "Изучите, как использовать псевдоэлемент :fullscreen CSS для стилизации элементов в полноэкранном режиме, включая создание кнопки для предварительного просмотра стилей в полноэкранном режиме.",
        "keywords": "CSS, Полноэкранный режим, Псевдоэлемент, Разработка в Интернете, HTML, Стилизация CSS"
      },
      "details": {
        "steps": [
          {
            "title": "Полноэкранный режим",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "Проверить статус работы веб-сервиса",
                "file": "verify1-1.sh",
                "hint": "Пожалуйста, нажмите на кнопку 'Go Live' в нижнем правом углу, чтобы запустить веб-сервис на порту 8080. Затем можно обновить вкладку **Web 8080**, чтобы предварительно просмотреть веб-страницу."
              },
              {
                "name": "Проверить статус изменения index.html",
                "file": "verify1-2.sh",
                "hint": "Пожалуйста, следуйте шагам для завершения практического занятия."
              },
              {
                "name": "Проверить статус изменения style.css",
                "file": "verify1-3.sh",
                "hint": "Пожалуйста, следуйте шагам для завершения практического занятия."
              }
            ]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    }
  ]
}
