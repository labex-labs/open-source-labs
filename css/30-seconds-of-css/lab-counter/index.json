{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Nested List Counters with CSS",
  "description": "In this lab, we will explore the use of CSS counters to create custom list counters. Specifically, we will learn how to initialize and increment counter variables, and how to display the value of these variables using the counters() function. By the end of this lab, you will be able to create nested list counters and customize the appearance of list elements using CSS.",
  "meta": {
    "title": "CSS Counters | Nested List Customization",
    "description": "Explore the use of CSS counters to create custom list counters, learn how to initialize and increment counter variables, and customize the appearance of list elements.",
    "keywords": "CSS, counters, nested lists, list customization, web development, front-end"
  },
  "difficulty": "Beginner",
  "time": 10,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Counter",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify the running status of the web service",
            "file": "verify1-1.sh",
            "hint": "Please click on 'Go Live' in the bottom right corner to run the web service on port 8080. Then, you can refresh the **Web 8080** Tab to preview the web page.",
            "timeout": 0,
            "showstderr": true
          },
          {
            "name": "Verify the status of index.html modification",
            "file": "verify1-2.sh",
            "hint": "Please follow the steps to complete the lab.",
            "timeout": 0,
            "showstderr": true
          },
          {
            "name": "Verify the status of style.css modification",
            "file": "verify1-3.sh",
            "hint": "Please follow the steps to complete the lab.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "css/lists_and_tables",
          "css/pseudo_elements",
          "css/selectors"
        ]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    },
    "assets": {
      "host01": [
        {
          "file": "index.html",
          "target": "~/project",
          "chmod": "ugo+rwx"
        },
        {
          "file": "style.css",
          "target": "~/project",
          "chmod": "ugo+rwx"
        }
      ]
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["Lotus-7"],
  "license": {
    "name": "CC-BY-4.0",
    "url": "https://github.com/30-seconds/30-seconds-of-code/blob/master/LICENSE",
    "repo": "https://github.com/30-seconds/30-seconds-of-code"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "使用 CSS 创建嵌套列表计数器",
      "description": "在本实验中，我们将探索如何使用 CSS 计数器来创建自定义列表计数器。具体来说，我们将学习如何初始化和递增计数器变量，以及如何使用 `counters()` 函数显示这些变量的值。在本实验结束时，你将能够创建嵌套列表计数器，并使用 CSS 自定义列表元素的外观。",
      "meta": {
        "title": "CSS 计数器 | 嵌套列表自定义",
        "description": "探索使用 CSS 计数器创建自定义列表计数器，学习如何初始化和递增计数器变量，以及自定义列表元素的外观。",
        "keywords": "CSS, 计数器，嵌套列表，列表自定义，网页开发，前端"
      },
      "details": {
        "steps": [
          {
            "title": "计数器",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "验证 Web 服务的运行状态",
                "file": "verify1-1.sh",
                "hint": "请点击右下角的“Go Live”以在端口 8080 上运行 Web 服务。然后，你可以刷新“Web 8080”标签页来预览网页。"
              },
              {
                "name": "验证 index.html 修改状态",
                "file": "verify1-2.sh",
                "hint": "请按照步骤完成实验。"
              },
              {
                "name": "验证 style.css 修改状态",
                "file": "verify1-3.sh",
                "hint": "请按照步骤完成实验。"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Contadores de listas anidadas con CSS",
      "description": "En este laboratorio, exploraremos el uso de contadores CSS para crear contadores de listas personalizados. En particular, aprenderemos cómo inicializar e incrementar variables de contador, y cómo mostrar el valor de estas variables utilizando la función counters(). Al final de este laboratorio, serás capaz de crear contadores de listas anidadas y personalizar la apariencia de los elementos de lista utilizando CSS.",
      "meta": {
        "title": "Contadores CSS | Personalización de listas anidadas",
        "description": "Explora el uso de contadores CSS para crear contadores de listas personalizados, aprende cómo inicializar e incrementar variables de contador y personaliza la apariencia de los elementos de lista.",
        "keywords": "CSS, contadores, listas anidadas, personalización de listas, desarrollo web, front-end"
      },
      "details": {
        "steps": [
          {
            "title": "Contador",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Verificar el estado de ejecución del servicio web",
                "file": "verify1-1.sh",
                "hint": "Haga clic en 'Go Live' en la esquina inferior derecha para ejecutar el servicio web en el puerto 8080. Luego, puede actualizar la pestaña **Web 8080** para previsualizar la página web."
              },
              {
                "name": "Verificar el estado de la modificación de index.html",
                "file": "verify1-2.sh",
                "hint": "Siga los pasos para completar el laboratorio."
              },
              {
                "name": "Verificar el estado de la modificación de style.css",
                "file": "verify1-3.sh",
                "hint": "Siga los pasos para completar el laboratorio."
              }
            ]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Compteurs de liste imbriqués avec CSS",
      "description": "Dans ce laboratoire, nous allons explorer l'utilisation des compteurs CSS pour créer des compteurs de liste personnalisés. Plus précisément, nous apprendrons comment initialiser et incrémenter des variables de compteur, et comment afficher la valeur de ces variables à l'aide de la fonction counters(). À la fin de ce laboratoire, vous serez capable de créer des compteurs de liste imbriqués et de personnaliser l'apparence des éléments de liste à l'aide de CSS.",
      "meta": {
        "title": "Compteurs CSS | Personnalisation de listes imbriquées",
        "description": "Explorez l'utilisation des compteurs CSS pour créer des compteurs de liste personnalisés, apprenez à initialiser et incrémenter des variables de compteur, et personnalisez l'apparence des éléments de liste.",
        "keywords": "CSS, compteurs, listes imbriquées, personnalisation de liste, développement web, front - end"
      },
      "details": {
        "steps": [
          {
            "title": "Compteur",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Vérifiez le statut d'exécution du service web",
                "file": "verify1-1.sh",
                "hint": "Veuillez cliquer sur 'Go Live' dans le coin inférieur droit pour exécuter le service web sur le port 8080. Ensuite, vous pouvez rafraîchir l'onglet **Web 8080** pour prévisualiser la page web."
              },
              {
                "name": "Vérifiez le statut de la modification de index.html",
                "file": "verify1-2.sh",
                "hint": "Veuillez suivre les étapes pour terminer le laboratoire."
              },
              {
                "name": "Vérifiez le statut de la modification de style.css",
                "file": "verify1-3.sh",
                "hint": "Veuillez suivre les étapes pour terminer le laboratoire."
              }
            ]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Genestete Listenzähler mit CSS",
      "description": "In diesem Lab werden wir die Verwendung von CSS-Zählern untersuchen, um benutzerdefinierte Listenzählungen zu erstellen. Insbesondere werden wir lernen, wie man Zählervariablen initialisiert und inkrementiert, und wie man den Wert dieser Variablen mit der counters()-Funktion anzeigt. Am Ende dieses Labs sollten Sie in der Lage sein, geschachtelte Listenzählungen zu erstellen und das Erscheinungsbild von Listenelementen mit CSS anzupassen.",
      "meta": {
        "title": "CSS-Zähler | Genestete Listenanpassung",
        "description": "Untersuchen Sie die Verwendung von CSS-Zählern, um benutzerdefinierte Listenzählungen zu erstellen, lernen Sie, wie man Zählervariablen initialisiert und inkrementiert, und passen Sie das Erscheinungsbild von Listenelementen an.",
        "keywords": "CSS, Zähler, geschachtelte Listen, Listenanpassung, Webentwicklung, Front-End"
      },
      "details": {
        "steps": [
          {
            "title": "Zähler",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Überprüfen des Laufzustands des Webdiensts",
                "file": "verify1-1.sh",
                "hint": "Bitte klicken Sie auf 'Go Live' in der unteren rechten Ecke, um den Webdienst auf Port 8080 auszuführen. Anschließend können Sie die Registerkarte **Web 8080** aktualisieren, um die Webseite anzuschauen."
              },
              {
                "name": "Überprüfen des Status der Änderungen an index.html",
                "file": "verify1-2.sh",
                "hint": "Bitte folgen Sie den Schritten, um das Lab abzuschließen."
              },
              {
                "name": "Überprüfen des Status der Änderungen an style.css",
                "file": "verify1-3.sh",
                "hint": "Bitte folgen Sie den Schritten, um das Lab abzuschließen."
              }
            ]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "CSS を使ったネストされたリストカウンター",
      "description": "この実験では、CSS カウンターを使ってカスタムなリストカウンターを作成する方法を探ります。具体的には、カウンター変数を初期化してインクリメントする方法と、counters() 関数を使ってこれらの変数の値を表示する方法を学びます。この実験が終わると、CSS を使ってネストされたリストカウンターを作成し、リスト要素の外観をカスタマイズできるようになります。",
      "meta": {
        "title": "CSS カウンター | ネストされたリストのカスタマイズ",
        "description": "CSS カウンターを使ってカスタムなリストカウンターを作成する方法を探り、カウンター変数を初期化してインクリメントする方法と、リスト要素の外観をカスタマイズする方法を学びます。",
        "keywords": "CSS, カウンター, ネストされたリスト，リストのカスタマイズ，ウェブ開発，フロントエンド"
      },
      "details": {
        "steps": [
          {
            "title": "カウンター",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "ウェブサービスの実行状態を確認する",
                "file": "verify1-1.sh",
                "hint": "右下隅の「Go Live」をクリックして、ポート 8080 でウェブサービスを実行してください。その後、**Web 8080** タブを更新して、ウェブページをプレビューできます。"
              },
              {
                "name": "index.html の変更状態を確認する",
                "file": "verify1-2.sh",
                "hint": "実験を完了する手順に従ってください。"
              },
              {
                "name": "style.css の変更状態を確認する",
                "file": "verify1-3.sh",
                "hint": "実験を完了する手順に従ってください。"
              }
            ]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Счетчики вложенных списков с использованием CSS",
      "description": "В этом практическом занятии мы изучим применение счетчиков CSS для создания собственных счетчиков списков. В частности, мы узнаем, как инициализировать и увеличивать переменные счетчика, а также как отображать значения этих переменных с использованием функции counters(). В конце этого практического занятия вы сможете создавать вложенные счетчики списков и настраивать внешний вид элементов списка с использованием CSS.",
      "meta": {
        "title": "Счетчики CSS | Настройка вложенных списков",
        "description": "Изучите применение счетчиков CSS для создания собственных счетчиков списков, узнайте, как инициализировать и увеличивать переменные счетчика, и настройте внешний вид элементов списка.",
        "keywords": "CSS, счетчики, вложенные списки, настройка списков, веб-разработка, фронтенд"
      },
      "details": {
        "steps": [
          {
            "title": "Счетчик",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "Проверить статус работы веб-сервиса",
                "file": "verify1-1.sh",
                "hint": "Пожалуйста, нажмите кнопку 'Go Live' в нижнем правом углу, чтобы запустить веб-сервис на порту 8080. Затем вы можете обновить вкладку **Web 8080**, чтобы просмотреть веб-страницу."
              },
              {
                "name": "Проверить статус изменения index.html",
                "file": "verify1-2.sh",
                "hint": "Пожалуйста, следуйте шагам, чтобы завершить практическое занятие."
              },
              {
                "name": "Проверить статус изменения style.css",
                "file": "verify1-3.sh",
                "hint": "Пожалуйста, следуйте шагам, чтобы завершить практическое занятие."
              }
            ]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    }
  ]
}
