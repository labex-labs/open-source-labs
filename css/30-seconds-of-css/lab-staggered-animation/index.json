{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Staggered CSS Animation for List Elements",
  "description": "In this lab, we will learn how to create a staggered animation effect for a list of elements using CSS. We will use the opacity and transform properties to make the elements transparent and move them all the way to the right. Then, we will use transition-delay and the :checked pseudo-class selector to make the elements appear and slide into view in a staggered manner. By the end of this lab, you will be able to create visually appealing animations for your web pages.",
  "meta": {
    "title": "Staggered Animation | CSS Tutorials | Web Development",
    "description": "Learn how to create a visually appealing staggered animation effect for a list of elements using CSS. Discover techniques to make elements transparent and slide them into view with a smooth transition.",
    "keywords": "CSS, animation, staggered effect, web development, HTML, tutorials"
  },
  "difficulty": "Beginner",
  "time": 10,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Staggered Animation",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify the running status of the web service",
            "file": "verify1-1.sh",
            "hint": "Please click on 'Go Live' in the bottom right corner to run the web service on port 8080. Then, you can refresh the **Web 8080** Tab to preview the web page.",
            "timeout": 0,
            "showstderr": true
          },
          {
            "name": "Verify the status of index.html modification",
            "file": "verify1-2.sh",
            "hint": "Please follow the steps to complete the lab.",
            "timeout": 0,
            "showstderr": true
          },
          {
            "name": "Verify the status of style.css modification",
            "file": "verify1-3.sh",
            "hint": "Please follow the steps to complete the lab.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "css/display_property",
          "css/fonts",
          "css/lists_and_tables",
          "css/margin_and_padding",
          "css/pseudo_classes",
          "css/selectors",
          "css/transformations",
          "css/transitions",
          "css/variables",
          "css/width_and_height"
        ]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    },
    "assets": {
      "host01": [
        {
          "file": "index.html",
          "target": "~/project",
          "chmod": "ugo+rwx"
        },
        {
          "file": "style.css",
          "target": "~/project",
          "chmod": "ugo+rwx"
        }
      ]
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["Lotus-7"],
  "license": {
    "name": "CC-BY-4.0",
    "url": "https://github.com/30-seconds/30-seconds-of-code/blob/master/LICENSE",
    "repo": "https://github.com/30-seconds/30-seconds-of-code"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "列表元素的交错 CSS 动画",
      "description": "在本实验中，我们将学习如何使用 CSS 为元素列表创建交错动画效果。我们将使用不透明度和变换属性使元素透明并将它们一直移动到右侧。然后，我们将使用过渡延迟和 :checked 伪类选择器使元素以交错的方式出现并滑入视图。在本实验结束时，你将能够为你的网页创建视觉上吸引人的动画。",
      "meta": {
        "title": "交错动画 | CSS 教程 | 网页开发",
        "description": "学习如何使用 CSS 为元素列表创建视觉上吸引人的交错动画效果。探索使元素透明并通过平滑过渡将它们滑入视图的技术。",
        "keywords": "CSS, 动画，交错效果，网页开发，HTML, 教程"
      },
      "details": {
        "steps": [
          {
            "title": "交错动画",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "验证网络服务的运行状态",
                "file": "verify1-1.sh",
                "hint": "请点击右下角的“Go Live”在端口 8080 上运行网络服务。然后，你可以刷新“Web 8080”标签页来预览网页。"
              },
              {
                "name": "验证 index.html 修改状态",
                "file": "verify1-2.sh",
                "hint": "请按照步骤完成实验。"
              },
              {
                "name": "验证 style.css 修改状态",
                "file": "verify1-3.sh",
                "hint": "请按照步骤完成实验。"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Animación CSS Escalonada para Elementos de Lista",
      "description": "En este laboratorio, aprenderemos cómo crear un efecto de animación escalonada para una lista de elementos utilizando CSS. Utilizaremos las propiedades opacity y transform para hacer que los elementos sean transparentes y los desplacemos hacia la derecha hasta el final. Luego, utilizaremos transition-delay y el selector pseudo-clase :checked para hacer que los elementos aparezcan y deslice en la vista de manera escalonada. Al final de este laboratorio, serás capaz de crear animaciones visualmente atractivas para tus páginas web.",
      "meta": {
        "title": "Animación Escalonada | Tutoriales de CSS | Desarrollo Web",
        "description": "Aprende cómo crear un efecto de animación escalonada visualmente atractivo para una lista de elementos utilizando CSS. Descubre técnicas para hacer que los elementos sean transparentes y los deslice en la vista con una transición suave.",
        "keywords": "CSS, animación, efecto escalonado, desarrollo web, HTML, tutoriales"
      },
      "details": {
        "steps": [
          {
            "title": "Animación Escalonada",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Verificar el estado de ejecución del servicio web",
                "file": "verify1-1.sh",
                "hint": "Haga clic en 'Go Live' en la esquina inferior derecha para ejecutar el servicio web en el puerto 8080. Luego, puede actualizar la pestaña **Web 8080** para previsualizar la página web."
              },
              {
                "name": "Verificar el estado de la modificación de index.html",
                "file": "verify1-2.sh",
                "hint": "Siga los pasos para completar el laboratorio."
              },
              {
                "name": "Verificar el estado de la modificación de style.css",
                "file": "verify1-3.sh",
                "hint": "Siga los pasos para completar el laboratorio."
              }
            ]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Animation en CSS en gradation pour les éléments d'une liste",
      "description": "Dans ce laboratoire, nous allons apprendre à créer un effet d'animation en gradation pour une liste d'éléments à l'aide de CSS. Nous utiliserons les propriétés opacity et transform pour rendre les éléments transparents et les déplacer jusqu'à la droite. Ensuite, nous utiliserons transition-delay et le sélecteur pseudo-classe :checked pour faire apparaître les éléments et les faire glisser en vue de manière en gradation. À la fin de ce laboratoire, vous serez capable de créer des animations visuellement attrayantes pour vos pages web.",
      "meta": {
        "title": "Animation en gradation | Didacticiels CSS | Développement web",
        "description": "Découvrez comment créer un effet d'animation en gradation visuellement attrayant pour une liste d'éléments à l'aide de CSS. Découvrez des techniques pour rendre les éléments transparents et les faire glisser en vue avec une transition fluide.",
        "keywords": "CSS, animation, effet en gradation, développement web, HTML, didacticiels"
      },
      "details": {
        "steps": [
          {
            "title": "Animation en gradation",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Vérifier le statut d'exécution du service web",
                "file": "verify1-1.sh",
                "hint": "Veuillez cliquer sur 'Go Live' dans le coin inférieur droit pour exécuter le service web sur le port 8080. Ensuite, vous pouvez actualiser l'onglet **Web 8080** pour prévisualiser la page web."
              },
              {
                "name": "Vérifier le statut de la modification de index.html",
                "file": "verify1-2.sh",
                "hint": "Veuillez suivre les étapes pour terminer le laboratoire."
              },
              {
                "name": "Vérifier le statut de la modification de style.css",
                "file": "verify1-3.sh",
                "hint": "Veuillez suivre les étapes pour terminer le laboratoire."
              }
            ]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Gestaffelte CSS-Animation für Listenelemente",
      "description": "In diesem Lab werden wir lernen, wie man mit CSS einen gestaffelten Animationseffekt für eine Liste von Elementen erstellt. Wir werden die Opazität- und Transform-Eigenschaften verwenden, um die Elemente transparent zu machen und sie bis ganz nach rechts zu bewegen. Anschließend werden wir die Übergangsverzögerung und den :checked-Pseudo-Klassen-Selektor verwenden, um die Elemente in einem gestaffelten Muster erscheinen zu lassen und in den sichtbaren Bereich zu gleiten. Am Ende dieses Labs werden Sie in der Lage sein, visuell ansprechende Animationen für Ihre Webseiten zu erstellen.",
      "meta": {
        "title": "Gestaffelte Animation | CSS-Tutorials | Webentwicklung",
        "description": "Lernen Sie, wie man mit CSS einen visuell ansprechenden gestaffelten Animationseffekt für eine Liste von Elementen erstellt. Entdecken Sie Techniken, um Elemente transparent zu machen und mit einer glatten Übergangsanimation in den sichtbaren Bereich zu bringen.",
        "keywords": "CSS, Animation, gestaffelter Effekt, Webentwicklung, HTML, Tutorials"
      },
      "details": {
        "steps": [
          {
            "title": "Gestaffelte Animation",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Überprüfen des Laufzustands des Webdiensts",
                "file": "verify1-1.sh",
                "hint": "Bitte klicken Sie in der unteren rechten Ecke auf 'Go Live', um den Webdienst auf Port 8080 auszuführen. Anschließend können Sie die Registerkarte **Web 8080** aktualisieren, um die Webseite anzuschauen."
              },
              {
                "name": "Überprüfen des Status der Änderungen an index.html",
                "file": "verify1-2.sh",
                "hint": "Bitte folgen Sie den Schritten, um das Lab abzuschließen."
              },
              {
                "name": "Überprüfen des Status der Änderungen an style.css",
                "file": "verify1-3.sh",
                "hint": "Bitte folgen Sie den Schritten, um das Lab abzuschließen."
              }
            ]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "リスト要素の段階的な CSS アニメーション",
      "description": "この実験では、CSS を使って要素のリストに対して段階的なアニメーション効果を作成する方法を学びます。要素を透明にして最も右まで移動させるために、opacity と transform プロパティを使用します。その後、transition-delay と:checked 疑似クラスセレクタを使って、要素を段階的に表示させて表示領域にスライドさせます。この実験が終わるとき、あなたは魅力的なビジュアルなアニメーションを Web ページに作成できるようになります。",
      "meta": {
        "title": "段階的なアニメーション | CSS チュートリアル | Web 開発",
        "description": "CSS を使って要素のリストに対して魅力的な段階的なアニメーション効果を作成する方法を学びましょう。要素を透明にして、スムーズなトランジションで表示領域にスライドさせる技術を発見しましょう。",
        "keywords": "CSS, アニメーション，段階的な効果，Web 開発，HTML, チュートリアル"
      },
      "details": {
        "steps": [
          {
            "title": "段階的なアニメーション",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "Web サービスの実行状態を確認する",
                "file": "verify1-1.sh",
                "hint": "右下隅の「Go Live」をクリックして、ポート 8080 で Web サービスを実行してください。その後、**Web 8080** タブを更新して Web ページをプレビューできます。"
              },
              {
                "name": "index.html の変更状態を確認する",
                "file": "verify1-2.sh",
                "hint": "実験を完了する手順に従ってください。"
              },
              {
                "name": "style.css の変更状態を確認する",
                "file": "verify1-3.sh",
                "hint": "実験を完了する手順に従ってください。"
              }
            ]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Анимация списка элементов с задержкой в CSS",
      "description": "В этом практическом занятии мы научимся создавать эффект анимации с задержкой для списка элементов с использованием CSS. Мы будем использовать свойства opacity и transform, чтобы сделать элементы прозрачными и переместить их в самый правый край. Затем мы будем использовать transition-delay и псевдо-класс селектор :checked, чтобы элементы появлялись и сдвигались в вид последовательно с задержкой. В конце этого практического занятия вы сможете создавать визуально привлекательные анимации для своих веб-страниц.",
      "meta": {
        "title": "Анимация с задержкой | Руководства по CSS | Разработка в вебе",
        "description": "Изучите, как создать эффект анимации с задержкой, который привлекает внимание, для списка элементов с использованием CSS. Откройте методы, чтобы сделать элементы прозрачными и сдвинуть их в вид с гладким переходом.",
        "keywords": "CSS, анимация, эффект с задержкой, веб-разработка, HTML, руководства"
      },
      "details": {
        "steps": [
          {
            "title": "Анимация с задержкой",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "Проверить состояние работы веб-сервиса",
                "file": "verify1-1.sh",
                "hint": "Пожалуйста, нажмите на кнопку 'Go Live' в нижнем правом углу, чтобы запустить веб-сервис на порту 8080. Затем вы можете обновить вкладку **Web 8080**, чтобы просмотреть веб-страницу."
              },
              {
                "name": "Проверить состояние изменения index.html",
                "file": "verify1-2.sh",
                "hint": "Пожалуйста, следуйте шагам, чтобы завершить практическое занятие."
              },
              {
                "name": "Проверить состояние изменения style.css",
                "file": "verify1-3.sh",
                "hint": "Пожалуйста, следуйте шагам, чтобы завершить практическое занятие."
              }
            ]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    }
  ]
}
