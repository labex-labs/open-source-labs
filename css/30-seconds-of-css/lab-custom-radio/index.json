{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Custom Radio Button",
  "description": "In this lab, we will explore CSS programming concepts by creating a custom radio button with animation on state change. The lab will guide you through the process of using flexbox to create a layout for the radio buttons, resetting the styles on the <input> element, and using the ::before element to create the inner circle of the radio button. By the end of the lab, you will have a better understanding of CSS styling and animation techniques.",
  "meta": {
    "title": "Create Custom Radio Buttons with CSS Animation",
    "description": "Learn how to create custom radio buttons with CSS animation effects for state changes.",
    "keywords": "css, css exercises, css practice, custom ui, radio buttons, css playground, web development, css lab, animation"
  },
  "difficulty": "Beginner",
  "time": 5,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Custom Radio Button",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify the running status of the web service",
            "file": "verify1-1.sh",
            "hint": "Please click on 'Go Live' in the bottom right corner to run the web service on port 8080. Then, you can refresh the **Web 8080** Tab to preview the web page.",
            "timeout": 0,
            "showstderr": true
          },
          {
            "name": "Verify the status of index.html modification",
            "file": "verify1-2.sh",
            "hint": "Please follow the steps to complete the lab.",
            "timeout": 0,
            "showstderr": true
          },
          {
            "name": "Verify the status of style.css modification",
            "file": "verify1-3.sh",
            "hint": "Please follow the steps to complete the lab.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "css/backgrounds",
          "css/borders",
          "css/box_model",
          "css/colors",
          "css/display_property",
          "css/flexbox",
          "css/margin_and_padding",
          "css/pseudo_classes",
          "css/pseudo_elements",
          "css/selectors",
          "css/transformations",
          "css/transitions",
          "css/width_and_height"
        ]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    },
    "assets": {
      "host01": [
        {
          "file": "index.html",
          "target": "~/project",
          "chmod": "ugo+rwx"
        },
        {
          "file": "style.css",
          "target": "~/project",
          "chmod": "ugo+rwx"
        }
      ]
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["Lotus-7"],
  "license": {
    "name": "CC-BY-4.0",
    "url": "https://github.com/30-seconds/30-seconds-of-code/blob/master/LICENSE",
    "repo": "https://github.com/30-seconds/30-seconds-of-code"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "自定义单选按钮",
      "description": "在本实验中，我们将通过创建一个在状态变化时带有动画效果的自定义单选按钮来探索 CSS 编程概念。本实验将指导你完成使用弹性盒模型（Flexbox）为单选按钮创建布局、重置<input>元素的样式以及使用::before 元素创建单选按钮内圈的过程。在实验结束时，你将对 CSS 样式和动画技术有更深入的理解。",
      "meta": {
        "title": "使用 CSS 动画创建自定义单选按钮",
        "description": "学习如何为状态变化创建带有 CSS 动画效果的自定义单选按钮。",
        "keywords": "CSS, CSS 练习，CSS 实践，自定义用户界面，单选按钮，CSS 游乐场，网页开发，CSS 实验，动画"
      },
      "details": {
        "steps": [
          {
            "title": "自定义单选按钮",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "验证网络服务的运行状态",
                "file": "verify1-1.sh",
                "hint": "请点击右下角的“Go Live”，在端口 8080 上运行网络服务。然后，你可以刷新“Web 8080”标签页来预览网页。"
              },
              {
                "name": "验证 index.html 的修改状态",
                "file": "verify1-2.sh",
                "hint": "请按照步骤完成实验。"
              },
              {
                "name": "验证 style.css 的修改状态",
                "file": "verify1-3.sh",
                "hint": "请按照步骤完成实验。"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Botón de radio personalizado",
      "description": "En este laboratorio, exploraremos los conceptos de programación CSS creando un botón de radio personalizado con animación al cambiar de estado. El laboratorio te guiará a través del proceso de usar flexbox para crear un diseño para los botones de radio, restablecer los estilos en el elemento <input> y usar el elemento ::before para crear el círculo interno del botón de radio. Al final del laboratorio, tendrás una mejor comprensión de las técnicas de estilo y animación CSS.",
      "meta": {
        "title": "Crea botones de radio personalizados con animación CSS",
        "description": "Aprende cómo crear botones de radio personalizados con efectos de animación CSS para cambios de estado.",
        "keywords": "css, ejercicios de css, práctica de css, interfaz de usuario personalizada, botones de radio, playground de css, desarrollo web, laboratorio de css, animación"
      },
      "details": {
        "steps": [
          {
            "title": "Botón de radio personalizado",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Verificar el estado de ejecución del servicio web",
                "file": "verify1-1.sh",
                "hint": "Haga clic en 'Go Live' en la esquina inferior derecha para ejecutar el servicio web en el puerto 8080. Luego, puede actualizar la pestaña **Web 8080** para previsualizar la página web."
              },
              {
                "name": "Verificar el estado de la modificación de index.html",
                "file": "verify1-2.sh",
                "hint": "Siga los pasos para completar el laboratorio."
              },
              {
                "name": "Verificar el estado de la modificación de style.css",
                "file": "verify1-3.sh",
                "hint": "Siga los pasos para completar el laboratorio."
              }
            ]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Bouton radio personnalisé",
      "description": "Dans ce laboratoire, nous allons explorer les concepts de programmation CSS en créant un bouton radio personnalisé avec une animation lors du changement d'état. Le laboratoire vous guidera tout au long du processus d'utilisation de flexbox pour créer une mise en page pour les boutons radio, de réinitialisation des styles sur l'élément <input> et d'utilisation de l'élément ::before pour créer le cercle intérieur du bouton radio. À la fin du laboratoire, vous aurez une meilleure compréhension des techniques de style et d'animation CSS.",
      "meta": {
        "title": "Créer des boutons radio personnalisés avec une animation CSS",
        "description": "Découvrez comment créer des boutons radio personnalisés avec des effets d'animation CSS pour les changements d'état.",
        "keywords": "css, exercices css, pratique css, interface utilisateur personnalisée, boutons radio, terrain de jeu css, développement web, laboratoire css, animation"
      },
      "details": {
        "steps": [
          {
            "title": "Bouton radio personnalisé",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Vérifiez le statut d'exécution du service web",
                "file": "verify1-1.sh",
                "hint": "Veuillez cliquer sur 'Go Live' dans le coin inférieur droit pour exécuter le service web sur le port 8080. Ensuite, vous pouvez actualiser l'onglet **Web 8080** pour prévisualiser la page web."
              },
              {
                "name": "Vérifiez le statut de la modification de index.html",
                "file": "verify1-2.sh",
                "hint": "Veuillez suivre les étapes pour terminer le laboratoire."
              },
              {
                "name": "Vérifiez le statut de la modification de style.css",
                "file": "verify1-3.sh",
                "hint": "Veuillez suivre les étapes pour terminer le laboratoire."
              }
            ]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Benutzerdefinierter Radiobutton",
      "description": "In diesem Lab werden wir CSS-Programmierkonzepte erkunden, indem wir einen benutzerdefinierten Radiobutton mit Animation bei einem Statuswechsel erstellen. Das Lab führt Sie durch den Prozess der Verwendung von Flexbox, um ein Layout für die Radiobuttons zu erstellen, die Stile des <input>-Elements zurückzusetzen und das ::before-Element zu verwenden, um den inneren Kreis des Radiobuttons zu erstellen. Am Ende des Labs werden Sie ein besseres Verständnis von CSS-Stil- und Animations-Techniken haben.",
      "meta": {
        "title": "Benutzerdefinierte Radiobuttons mit CSS-Animation erstellen",
        "description": "Lernen Sie, wie Sie benutzerdefinierte Radiobuttons mit CSS-Animationseffekten für Statuswechsel erstellen.",
        "keywords": "css, css Übungen, css Übung, benutzerdefiniertes UI, Radiobuttons, css Spielplatz, Webentwicklung, css Lab, Animation"
      },
      "details": {
        "steps": [
          {
            "title": "Benutzerdefinierter Radiobutton",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Überprüfen des Laufzustands des Webdiensts",
                "file": "verify1-1.sh",
                "hint": "Bitte klicken Sie auf 'Go Live' in der unteren rechten Ecke, um den Webdienst auf Port 8080 auszuführen. Anschließend können Sie die Registerkarte **Web 8080** aktualisieren, um die Webseite anzuschauen."
              },
              {
                "name": "Überprüfen des Status der Änderungen an index.html",
                "file": "verify1-2.sh",
                "hint": "Bitte folgen Sie den Schritten, um das Lab abzuschließen."
              },
              {
                "name": "Überprüfen des Status der Änderungen an style.css",
                "file": "verify1-3.sh",
                "hint": "Bitte folgen Sie den Schritten, um das Lab abzuschließen."
              }
            ]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "カスタムラジオボタン",
      "description": "この実験では、状態変更時にアニメーション付きのカスタムラジオボタンを作成することで、CSS プログラミングの概念を探ります。この実験では、フレックスボックスを使用してラジオボタンのレイアウトを作成し、<input> 要素のスタイルをリセットし、::before 要素を使用してラジオボタンの内側の円を作成するプロセスを案内します。実験が終了するまでに、CSS スタイリングとアニメーション技術についてより深い理解を得ることができます。",
      "meta": {
        "title": "CSS アニメーションでカスタムラジオボタンを作成する",
        "description": "状態変更に対する CSS アニメーション効果付きのカスタムラジオボタンを作成する方法を学びましょう。",
        "keywords": "css, css エクササイズ，css 練習，カスタム UI, ラジオボタン，css プレイグラウンド，ウェブ開発，css 実験，アニメーション"
      },
      "details": {
        "steps": [
          {
            "title": "カスタムラジオボタン",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "ウェブサービスの実行状態を確認する",
                "file": "verify1-1.sh",
                "hint": "右下隅の「Go Live」をクリックして、ポート 8080 でウェブサービスを実行してください。その後、**Web 8080** タブを更新して、ウェブページをプレビューできます。"
              },
              {
                "name": "index.html の変更状態を確認する",
                "file": "verify1-2.sh",
                "hint": "実験を完了する手順に従ってください。"
              },
              {
                "name": "style.css の変更状態を確認する",
                "file": "verify1-3.sh",
                "hint": "実験を完了する手順に従ってください。"
              }
            ]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Кастомная радиокнопка",
      "description": "В этом практическом занятии мы изучим концепции программирования CSS, создав кастомную радиокнопку с анимацией при изменении состояния. Практическое занятие проведет вас по процессу использования flexbox для создания макета радиокнопок, сброса стилей на элементе <input> и использования элемента ::before для создания внутренней окружности радиокнопки. В конце практического занятия вы будете лучше понимать методы стилизации и анимации CSS.",
      "meta": {
        "title": "Создайте кастомные радиокнопки с CSS-анимацией",
        "description": "Изучите, как создавать кастомные радиокнопки с эффектами CSS-анимации при изменении состояния.",
        "keywords": "css, упражнения по css, практика css, настраиваемый интерфейс, радиокнопки, css-площадка для экспериментов, веб-разработка, практическое занятие по css, анимация"
      },
      "details": {
        "steps": [
          {
            "title": "Кастомная радиокнопка",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "Проверить статус работы веб-сервиса",
                "file": "verify1-1.sh",
                "hint": "Пожалуйста, нажмите кнопку 'Go Live' в нижнем правом углу, чтобы запустить веб-сервис на порту 8080. Затем можно обновить вкладку **Web 8080**, чтобы просмотреть веб-страницу."
              },
              {
                "name": "Проверить статус изменения index.html",
                "file": "verify1-2.sh",
                "hint": "Пожалуйста, следуйте шагам, чтобы завершить практическое занятие."
              },
              {
                "name": "Проверить статус изменения style.css",
                "file": "verify1-3.sh",
                "hint": "Пожалуйста, следуйте шагам, чтобы завершить практическое занятие."
              }
            ]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    }
  ]
}
