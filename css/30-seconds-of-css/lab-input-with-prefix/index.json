{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Input with Prefix",
  "description": "In this lab, we will be creating an input box with a visual, non-editable prefix. By using CSS and HTML, we will create a container element with a prefix and an input field. We will also use the :focus-within pseudo-class selector to style the parent element accordingly, providing a better user experience when interacting with the input field.",
  "meta": {
    "title": "Create Stylish Input Box with Prefix",
    "description": "Learn how to create an input box with a visual, non-editable prefix using CSS and HTML.",
    "keywords": "css, html playground, prefix, css practice, html, css playground, html exercises, html practice exercises, web development, css lab"
  },
  "difficulty": "Beginner",
  "time": 5,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Input with Prefix",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify the running status of the web service",
            "file": "verify1-1.sh",
            "hint": "Please click on 'Go Live' in the bottom right corner to run the web service on port 8080. Then, you can refresh the **Web 8080** Tab to preview the web page.",
            "timeout": 0,
            "showstderr": true
          },
          {
            "name": "Verify the status of index.html modification",
            "file": "verify1-2.sh",
            "hint": "Please follow the steps to complete the lab.",
            "timeout": 0,
            "showstderr": true
          },
          {
            "name": "Verify the status of style.css modification",
            "file": "verify1-3.sh",
            "hint": "Please follow the steps to complete the lab.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": []
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    },
    "assets": {
      "host01": [
        {
          "file": "index.html",
          "target": "~/project",
          "chmod": "ugo+rwx"
        },
        {
          "file": "style.css",
          "target": "~/project",
          "chmod": "ugo+rwx"
        }
      ]
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["Lotus-7"],
  "license": {
    "name": "CC-BY-4.0",
    "url": "https://github.com/30-seconds/30-seconds-of-code/blob/master/LICENSE",
    "repo": "https://github.com/30-seconds/30-seconds-of-code"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "带前缀的输入框",
      "description": "在这个实验中，我们将创建一个带有可视化、不可编辑前缀的输入框。通过使用 CSS 和 HTML，我们将创建一个带有前缀和输入字段的容器元素。我们还将使用 :focus-within 伪类选择器来相应地设置父元素的样式，在与输入字段交互时提供更好的用户体验。",
      "meta": {
        "title": "创建带前缀的时尚输入框",
        "description": "学习如何使用 CSS 和 HTML 创建一个带有可视化、不可编辑前缀的输入框。",
        "keywords": "CSS, HTML 游乐场，前缀，CSS 练习，HTML, CSS 游乐场，HTML 练习，HTML 实践练习，网页开发，CSS 实验"
      },
      "details": {
        "steps": [
          {
            "title": "带前缀的输入框",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "验证 Web 服务的运行状态",
                "file": "verify1-1.sh",
                "hint": "请点击右下角的“Go Live”以在端口 8080 上运行 Web 服务。然后，你可以刷新“Web 8080”标签页来预览网页。"
              },
              {
                "name": "验证 index.html 的修改状态",
                "file": "verify1-2.sh",
                "hint": "请按照步骤完成实验。"
              },
              {
                "name": "验证 style.css 的修改状态",
                "file": "verify1-3.sh",
                "hint": "请按照步骤完成实验。"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Entrada con prefijo",
      "description": "En este laboratorio, crearemos una caja de entrada con un prefijo visual no editable. Utilizando CSS y HTML, crearemos un elemento contenedor con un prefijo y un campo de entrada. También utilizaremos el selector de pseudo-clase :focus-within para dar estilo al elemento padre en consecuencia, proporcionando una mejor experiencia de usuario al interactuar con el campo de entrada.",
      "meta": {
        "title": "Crea una caja de entrada elegante con prefijo",
        "description": "Aprende a crear una caja de entrada con un prefijo visual no editable utilizando CSS y HTML.",
        "keywords": "css, html playground, prefijo, práctica de css, html, css playground, ejercicios de html, ejercicios de práctica de html, desarrollo web, laboratorio de css"
      },
      "details": {
        "steps": [
          {
            "title": "Entrada con prefijo",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Verificar el estado de ejecución del servicio web",
                "file": "verify1-1.sh",
                "hint": "Haga clic en 'Go Live' en la esquina inferior derecha para ejecutar el servicio web en el puerto 8080. Luego, puede actualizar la pestaña **Web 8080** para previsualizar la página web."
              },
              {
                "name": "Verificar el estado de la modificación de index.html",
                "file": "verify1-2.sh",
                "hint": "Siga los pasos para completar el laboratorio."
              },
              {
                "name": "Verificar el estado de la modificación de style.css",
                "file": "verify1-3.sh",
                "hint": "Siga los pasos para completar el laboratorio."
              }
            ]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Input avec préfixe",
      "description": "Dans ce laboratoire, nous allons créer une zone de saisie avec un préfixe visuel non modifiable. En utilisant CSS et HTML, nous allons créer un élément conteneur avec un préfixe et un champ de saisie. Nous utiliserons également le sélecteur de pseudo-classe :focus-within pour styliser l'élément parent en conséquence, offrant une meilleure expérience utilisateur lors de l'interaction avec le champ de saisie.",
      "meta": {
        "title": "Créer une zone de saisie élégante avec un préfixe",
        "description": "Découvrez comment créer une zone de saisie avec un préfixe visuel non modifiable à l'aide de CSS et HTML.",
        "keywords": "css, terrain de jeu html, préfixe, pratique css, html, terrain de jeu css, exercices html, exercices de pratique html, développement web, laboratoire css"
      },
      "details": {
        "steps": [
          {
            "title": "Input avec préfixe",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Vérifier le statut d'exécution du service web",
                "file": "verify1-1.sh",
                "hint": "Veuillez cliquer sur 'Go Live' dans le coin inférieur droit pour exécuter le service web sur le port 8080. Ensuite, vous pouvez rafraîchir l'onglet **Web 8080** pour prévisualiser la page web."
              },
              {
                "name": "Vérifier le statut de la modification de index.html",
                "file": "verify1-2.sh",
                "hint": "Veuillez suivre les étapes pour terminer le laboratoire."
              },
              {
                "name": "Vérifier le statut de la modification de style.css",
                "file": "verify1-3.sh",
                "hint": "Veuillez suivre les étapes pour terminer le laboratoire."
              }
            ]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Eingabe mit Präfix",
      "description": "In diesem Lab werden wir eine Eingabemaske mit einem visuellen, nicht bearbeitbaren Präfix erstellen. Mit CSS und HTML werden wir ein Container-Element mit einem Präfix und einem Eingabefeld erstellen. Wir werden auch den pseudo-klassenselektoren :focus-within verwenden, um das übergeordnete Element entsprechend zu gestalten und so eine bessere Benutzererfahrung bei der Interaktion mit dem Eingabefeld zu gewährleisten.",
      "meta": {
        "title": "Stylishe Eingabemaske mit Präfix erstellen",
        "description": "Lernen Sie, wie Sie mit CSS und HTML eine Eingabemaske mit einem visuellen, nicht bearbeitbaren Präfix erstellen.",
        "keywords": "css, html playground, prefix, css übung, html, css playground, html übungen, html Übungsaufgaben, Webentwicklung, css lab"
      },
      "details": {
        "steps": [
          {
            "title": "Eingabe mit Präfix",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Überprüfen des Laufzustands des Webdiensts",
                "file": "verify1-1.sh",
                "hint": "Bitte klicken Sie in der unteren rechten Ecke auf 'Go Live', um den Webdienst auf Port 8080 auszuführen. Anschließend können Sie die Registerkarte **Web 8080** aktualisieren, um die Webseite anzuschauen."
              },
              {
                "name": "Überprüfen des Status der Änderung von index.html",
                "file": "verify1-2.sh",
                "hint": "Bitte folgen Sie den Schritten, um das Lab abzuschließen."
              },
              {
                "name": "Überprüfen des Status der Änderung von style.css",
                "file": "verify1-3.sh",
                "hint": "Bitte folgen Sie den Schritten, um das Lab abzuschließen."
              }
            ]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "接頭辞付き入力",
      "description": "この実験では、可視的で編集不可の接頭辞付きの入力ボックスを作成します。CSS と HTML を使用して、接頭辞と入力フィールドを持つコンテナ要素を作成します。また、`:focus-within` 疑似クラスセレクタを使用して親要素をスタイリングし、入力フィールドとのインタラクション時により良いユーザーエクスペリエンスを提供します。",
      "meta": {
        "title": "接頭辞付きのスタイリッシュな入力ボックスを作成する",
        "description": "CSS と HTML を使って、可視的で編集不可の接頭辞付きの入力ボックスを作成する方法を学びましょう。",
        "keywords": "css, html playground, 接頭辞，css 練習，html, css playground, html 演習，html 練習演習，ウェブ開発，css 実験"
      },
      "details": {
        "steps": [
          {
            "title": "接頭辞付き入力",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "ウェブサービスの実行状態を確認する",
                "file": "verify1-1.sh",
                "hint": "右下隅の「Go Live」をクリックして、ポート 8080 でウェブサービスを実行してください。その後、**Web 8080**タブを更新してウェブページをプレビューできます。"
              },
              {
                "name": "index.html の変更状態を確認する",
                "file": "verify1-2.sh",
                "hint": "実験を完了するための手順に従ってください。"
              },
              {
                "name": "style.css の変更状態を確認する",
                "file": "verify1-3.sh",
                "hint": "実験を完了するための手順に従ってください。"
              }
            ]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Ввод с префиксом",
      "description": "В этой лабораторной работе мы создадим поле ввода с визуальным нередактируемым префиксом. С использованием CSS и HTML мы создадим контейнерный элемент с префиксом и полем ввода. Мы также будем использовать псевдо-класс селектор :focus-within для стилизации родительского элемента соответственно, обеспечивая лучший пользовательский опыт при взаимодействии с полем ввода.",
      "meta": {
        "title": "Создайте стильное поле ввода с префиксом",
        "description": "Изучите, как создать поле ввода с визуальным нередактируемым префиксом с использованием CSS и HTML.",
        "keywords": "css, html playground, префикс, практика css, html, css playground, упражнения по html, практические упражнения по html, веб-разработка, css лабораторная"
      },
      "details": {
        "steps": [
          {
            "title": "Ввод с префиксом",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "Проверить состояние запуска веб-сервиса",
                "file": "verify1-1.sh",
                "hint": "Пожалуйста, нажмите на кнопку 'Go Live' в нижнем правом углу, чтобы запустить веб-сервис на порту 8080. Затем вы можете обновить вкладку **Web 8080**, чтобы просмотреть веб-страницу."
              },
              {
                "name": "Проверить состояние изменения index.html",
                "file": "verify1-2.sh",
                "hint": "Пожалуйста, следуйте шагам для завершения лабораторной работы."
              },
              {
                "name": "Проверить состояние изменения style.css",
                "file": "verify1-3.sh",
                "hint": "Пожалуйста, следуйте шагам для завершения лабораторной работы."
              }
            ]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    },
    {
      "lang": "ko",
      "title": "접두사 포함 입력",
      "description": "이 랩에서는 시각적이고 편집 불가능한 접두사가 있는 입력 상자를 만들 것입니다. CSS 와 HTML 을 사용하여 접두사와 입력 필드가 있는 컨테이너 요소를 만들 것입니다. 또한 `:focus-within` 의사 클래스 선택자를 사용하여 부모 요소를 적절하게 스타일링하여 입력 필드와 상호 작용할 때 더 나은 사용자 경험을 제공합니다.",
      "meta": {
        "title": "접두사로 스타일리시한 입력 상자 만들기 - CSS, HTML 튜토리얼",
        "description": "CSS 와 HTML 을 사용하여 시각적이고 편집 불가능한 접두사가 있는 입력 상자를 만드는 방법을 알아보세요. 웹 개발, 프론트엔드, CSS, HTML 연습",
        "keywords": "CSS, HTML, 입력 상자, 접두사, 웹 개발, 프론트엔드, CSS 연습, HTML 연습, HTML/CSS 튜토리얼, 웹 디자인"
      },
      "details": {
        "steps": [
          {
            "title": "접두사 포함 입력",
            "text": "ko/step1.md",
            "verify": [
              {
                "name": "웹 서비스 실행 상태 확인",
                "file": "verify1-1.sh",
                "hint": "오른쪽 하단의 'Go Live'를 클릭하여 웹 서비스를 포트 8080 에서 실행하세요. 그런 다음 **Web 8080** 탭을 새로 고쳐 웹 페이지를 미리 볼 수 있습니다."
              },
              {
                "name": "index.html 수정 상태 확인",
                "file": "verify1-2.sh",
                "hint": "랩을 완료하려면 단계를 따르세요."
              },
              {
                "name": "style.css 수정 상태 확인",
                "file": "verify1-3.sh",
                "hint": "랩을 완료하려면 단계를 따르세요."
              }
            ]
          }
        ],
        "intro": {
          "text": "ko/intro.md",
          "title": "소개"
        },
        "finish": {
          "text": "ko/finish.md",
          "title": "요약"
        }
      }
    },
    {
      "lang": "pt",
      "title": "Input com Prefixo",
      "description": "Neste laboratório, criaremos uma caixa de entrada com um prefixo visual e não editável. Usando CSS e HTML, criaremos um elemento container com um prefixo e um campo de entrada. Também usaremos o seletor de pseudo-classe :focus-within para estilizar o elemento pai de acordo, proporcionando uma melhor experiência ao usuário ao interagir com o campo de entrada.",
      "meta": {
        "title": "Crie uma Caixa de Entrada Elegante com Prefixo",
        "description": "Aprenda a criar uma caixa de entrada com um prefixo visual e não editável usando CSS e HTML. Melhore a experiência do usuário com este tutorial prático.",
        "keywords": "css, html playground, prefixo, prática css, html, playground css, exercícios html, exercícios de prática html, desenvolvimento web, laboratório css, caixa de entrada com prefixo"
      },
      "details": {
        "steps": [
          {
            "title": "Input com Prefixo",
            "text": "pt/step1.md",
            "verify": [
              {
                "name": "Verifique o status de execução do serviço web",
                "file": "verify1-1.sh",
                "hint": "Por favor, clique em 'Go Live' no canto inferior direito para executar o serviço web na porta 8080. Em seguida, você pode atualizar a aba **Web 8080** para visualizar a página web."
              },
              {
                "name": "Verifique o status da modificação de index.html",
                "file": "verify1-2.sh",
                "hint": "Por favor, siga os passos para completar o laboratório."
              },
              {
                "name": "Verifique o status da modificação de style.css",
                "file": "verify1-3.sh",
                "hint": "Por favor, siga os passos para completar o laboratório."
              }
            ]
          }
        ],
        "intro": {
          "text": "pt/intro.md",
          "title": "Introdução"
        },
        "finish": {
          "text": "pt/finish.md",
          "title": "Resumo"
        }
      }
    }
  ]
}
