{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Responsive Fluid Typography with CSS",
  "description": "In this lab, we will learn how to implement fluid typography using CSS. Fluid typography ensures that the text scales according to the viewport width, making it more responsive and accessible for different screen sizes. By using the clamp() function and a formula to calculate responsive values for font-size, we can create a more dynamic and user-friendly design.",
  "meta": {
    "title": "Fluid Typography | Responsive Web Design",
    "description": "Learn how to implement fluid typography using CSS, ensuring your text scales according to viewport width for a more responsive and accessible design.",
    "keywords": "fluid typography, responsive web design, CSS, clamp function, viewport width, font size"
  },
  "difficulty": "Beginner",
  "time": 5,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Fluid Typography",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify the running status of the web service",
            "file": "verify1-1.sh",
            "hint": "Please click on 'Go Live' in the bottom right corner to run the web service on port 8080. Then, you can refresh the **Web 8080** Tab to preview the web page.",
            "timeout": 0,
            "showstderr": true
          },
          {
            "name": "Verify the status of index.html modification",
            "file": "verify1-2.sh",
            "hint": "Please follow the steps to complete the lab.",
            "timeout": 0,
            "showstderr": true
          },
          {
            "name": "Verify the status of style.css modification",
            "file": "verify1-3.sh",
            "hint": "Please follow the steps to complete the lab.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": []
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    },
    "assets": {
      "host01": [
        {
          "file": "index.html",
          "target": "~/project",
          "chmod": "ugo+rwx"
        },
        {
          "file": "style.css",
          "target": "~/project",
          "chmod": "ugo+rwx"
        }
      ]
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["Lotus-7"],
  "license": {
    "name": "CC-BY-4.0",
    "url": "https://github.com/30-seconds/30-seconds-of-code/blob/master/LICENSE",
    "repo": "https://github.com/30-seconds/30-seconds-of-code"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "使用 CSS 实现响应式流体排版",
      "description": "在本实验中，我们将学习如何使用 CSS 实现流体排版。流体排版可确保文本根据视口宽度进行缩放，从而使其在不同屏幕尺寸下更具响应性和易读性。通过使用 clamp() 函数和一个公式来计算 font-size 的响应式值，我们可以创建一个更具动态性和用户友好性的设计。",
      "meta": {
        "title": "流体排版 | 响应式网页设计",
        "description": "学习如何使用 CSS 实现流体排版，确保你的文本根据视口宽度进行缩放，以获得更具响应性和易读性的设计。",
        "keywords": "流体排版，响应式网页设计，CSS, clamp 函数，视口宽度，字体大小"
      },
      "details": {
        "steps": [
          {
            "title": "流体排版",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "验证网络服务的运行状态",
                "file": "verify1-1.sh",
                "hint": "请点击右下角的“Go Live”以在端口 8080 上运行网络服务。然后，你可以刷新“Web 8080”标签页来预览网页。"
              },
              {
                "name": "验证 index.html 修改状态",
                "file": "verify1-2.sh",
                "hint": "请按照步骤完成实验。"
              },
              {
                "name": "验证 style.css 修改状态",
                "file": "verify1-3.sh",
                "hint": "请按照步骤完成实验。"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Tipografía fluida reactiva con CSS",
      "description": "En este laboratorio, aprenderemos cómo implementar la tipografía fluida utilizando CSS. La tipografía fluida garantiza que el texto se escala de acuerdo con el ancho del viewport, lo que la hace más reactiva y accesible para diferentes tamaños de pantalla. Al utilizar la función clamp() y una fórmula para calcular valores reactivos para el tamaño de fuente, podemos crear un diseño más dinámico y amigable para el usuario.",
      "meta": {
        "title": "Tipografía fluida | Diseño web reactivo",
        "description": "Aprende cómo implementar la tipografía fluida utilizando CSS, asegurando que tu texto se escala de acuerdo con el ancho del viewport para un diseño más reactivo y accesible.",
        "keywords": "tipografía fluida, diseño web reactivo, CSS, función clamp, ancho del viewport, tamaño de fuente"
      },
      "details": {
        "steps": [
          {
            "title": "Tipografía fluida",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Verificar el estado de ejecución del servicio web",
                "file": "verify1-1.sh",
                "hint": "Haga clic en 'Go Live' en la esquina inferior derecha para ejecutar el servicio web en el puerto 8080. Luego, puede actualizar la pestaña **Web 8080** para previsualizar la página web."
              },
              {
                "name": "Verificar el estado de la modificación de index.html",
                "file": "verify1-2.sh",
                "hint": "Siga los pasos para completar el laboratorio."
              },
              {
                "name": "Verificar el estado de la modificación de style.css",
                "file": "verify1-3.sh",
                "hint": "Siga los pasos para completar el laboratorio."
              }
            ]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Typographie fluide responsive avec CSS",
      "description": "Dans ce laboratoire, nous allons apprendre à implémenter une typographie fluide à l'aide de CSS. La typographie fluide assure que le texte s'adapte en fonction de la largeur de la fenêtre d'affichage, ce qui en fait une conception plus réactive et accessible pour différentes tailles d'écran. En utilisant la fonction clamp() et une formule pour calculer des valeurs réactives pour la taille de police, nous pouvons créer une conception plus dynamique et conviviale.",
      "meta": {
        "title": "Typographie fluide | Conception web responsive",
        "description": "Apprenez à implémenter une typographie fluide à l'aide de CSS, afin de vous assurer que votre texte s'adapte en fonction de la largeur de la fenêtre d'affichage pour une conception plus réactive et accessible.",
        "keywords": "typographie fluide, conception web responsive, CSS, fonction clamp, largeur de la fenêtre d'affichage, taille de police"
      },
      "details": {
        "steps": [
          {
            "title": "Typographie fluide",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Vérifiez le statut d'exécution du service web",
                "file": "verify1-1.sh",
                "hint": "Veuillez cliquer sur 'Go Live' dans le coin inférieur droit pour exécuter le service web sur le port 8080. Ensuite, vous pouvez rafraîchir l'onglet **Web 8080** pour prévisualiser la page web."
              },
              {
                "name": "Vérifiez le statut de la modification de index.html",
                "file": "verify1-2.sh",
                "hint": "Veuillez suivre les étapes pour terminer le laboratoire."
              },
              {
                "name": "Vérifiez le statut de la modification de style.css",
                "file": "verify1-3.sh",
                "hint": "Veuillez suivre les étapes pour terminer le laboratoire."
              }
            ]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Responsive Fluid Typografie mit CSS",
      "description": "In diesem Lab werden wir lernen, wie man mit CSS fluid Typografie implementiert. Fluid Typografie gewährleistet, dass der Text sich entsprechend der Breite der Anzeige skaliert, was ihn für verschiedene Bildschirmgrößen reaktionsschneller und zugänglicher macht. Indem wir die clamp()-Funktion und eine Formel verwenden, um responsive Werte für die Schriftgröße zu berechnen, können wir ein dynamischeres und nutzerfreundlicheres Design erstellen.",
      "meta": {
        "title": "Fluid Typografie | Responsive Web Design",
        "description": "Lernen Sie, wie man mit CSS fluid Typografie implementiert, um sicherzustellen, dass Ihr Text sich entsprechend der Breite der Anzeige skaliert, für ein reaktionsschnelleres und zugänglichereres Design.",
        "keywords": "fluid Typografie, responsive web design, CSS, clamp-Funktion, Breite der Anzeige, Schriftgröße"
      },
      "details": {
        "steps": [
          {
            "title": "Fluid Typografie",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Verifizieren des Laufzustands des Webdiensts",
                "file": "verify1-1.sh",
                "hint": "Bitte klicken Sie auf 'Go Live' in der unteren rechten Ecke, um den Webdienst auf Port 8080 auszuführen. Anschließend können Sie die Registerkarte **Web 8080** aktualisieren, um die Webseite anzuschauen."
              },
              {
                "name": "Verifizieren des Status der Änderungen an index.html",
                "file": "verify1-2.sh",
                "hint": "Bitte folgen Sie den Schritten, um das Lab abzuschließen."
              },
              {
                "name": "Verifizieren des Status der Änderungen an style.css",
                "file": "verify1-3.sh",
                "hint": "Bitte folgen Sie den Schritten, um das Lab abzuschließen."
              }
            ]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "CSS を使った応答型流体的な文字装飾",
      "description": "この実験では、CSS を使って流体的な文字装飾を実装する方法を学びます。流体的な文字装飾は、ビューポートの幅に応じてテキストが拡大縮小することを保証し、さまざまな画面サイズに対応しやすくなります。`clamp()` 関数と `font-size` の応答型の値を計算する式を使うことで、よりダイナミックでユーザーフレンドリーなデザインを作成できます。",
      "meta": {
        "title": "流体的な文字装飾 | 応答型ウェブデザイン",
        "description": "CSS を使って流体的な文字装飾を実装する方法を学び、ビューポートの幅に応じてテキストが拡大縮小するようにして、より応答性が高く利用しやすいデザインを実現しましょう。",
        "keywords": "流体的な文字装飾，応答型ウェブデザイン，CSS, clamp 関数，ビューポートの幅，フォントサイズ"
      },
      "details": {
        "steps": [
          {
            "title": "流体的な文字装飾",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "ウェブサービスの実行状態を確認する",
                "file": "verify1-1.sh",
                "hint": "右下隅の「Go Live」をクリックして、ポート 8080 でウェブサービスを実行してください。その後、**Web 8080**タブを更新してウェブページをプレビューできます。"
              },
              {
                "name": "index.html の変更状態を確認する",
                "file": "verify1-2.sh",
                "hint": "実験を完了するための手順に従ってください。"
              },
              {
                "name": "style.css の変更状態を確認する",
                "file": "verify1-3.sh",
                "hint": "実験を完了するための手順に従ってください。"
              }
            ]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Реактивная жидкая типографика с использованием CSS",
      "description": "В этом практическом занятии мы узнаем, как реализовать жидкую типографию с использованием CSS. Жидкая типографика обеспечивает масштабирование текста в соответствии с шириной viewport, делая его более адаптивным и доступным для различных размеров экранов. Используя функцию clamp() и формулу для вычисления адаптивных значений для font-size, мы можем создать более динамический и удобный для пользователя дизайн.",
      "meta": {
        "title": "Жидкая типографика | Реактивный веб-дизайн",
        "description": "Изучите, как реализовать жидкую типографию с использованием CSS, обеспечивая масштабирование текста в соответствии с шириной viewport для более адаптивного и доступного дизайна.",
        "keywords": "жидкая типографика, реактивный веб-дизайн, CSS, функция clamp, ширина viewport, размер шрифта"
      },
      "details": {
        "steps": [
          {
            "title": "Жидкая типографика",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "Проверить статус работы веб-сервиса",
                "file": "verify1-1.sh",
                "hint": "Пожалуйста, нажмите кнопку 'Go Live' в нижнем правом углу, чтобы запустить веб-сервис на порту 8080. Затем можно обновить вкладку **Web 8080**, чтобы просмотреть веб-страницу."
              },
              {
                "name": "Проверить статус изменения index.html",
                "file": "verify1-2.sh",
                "hint": "Пожалуйста, следуйте шагам, чтобы завершить практическое занятие."
              },
              {
                "name": "Проверить статус изменения style.css",
                "file": "verify1-3.sh",
                "hint": "Пожалуйста, следуйте шагам, чтобы завершить практическое занятие."
              }
            ]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    },
    {
      "lang": "ko",
      "title": "CSS 를 이용한 반응형 유동적 타이포그래피",
      "description": "이 랩에서는 CSS 를 사용하여 유동적 타이포그래피를 구현하는 방법을 배웁니다. 유동적 타이포그래피는 텍스트가 뷰포트 너비에 따라 크기가 조정되도록 하여 다양한 화면 크기에 더 반응적이고 접근성을 높입니다. clamp() 함수와 글꼴 크기에 대한 반응형 값을 계산하는 공식을 사용하여 더욱 동적이고 사용자 친화적인 디자인을 만들 수 있습니다.",
      "meta": {
        "title": "유동적 타이포그래피 | 반응형 웹 디자인",
        "description": "CSS 를 사용하여 유동적 타이포그래피를 구현하는 방법을 배우고, 텍스트가 뷰포트 너비에 따라 크기가 조정되어 더욱 반응적이고 접근성이 뛰어난 디자인을 만드세요.",
        "keywords": "유동적 타이포그래피, 반응형 웹 디자인, CSS, clamp 함수, 뷰포트 너비, 글꼴 크기"
      },
      "details": {
        "steps": [
          {
            "title": "유동적 타이포그래피",
            "text": "ko/step1.md",
            "verify": [
              {
                "name": "웹 서비스 실행 상태 확인",
                "file": "verify1-1.sh",
                "hint": "오른쪽 하단의 'Go Live'를 클릭하여 포트 8080 에서 웹 서비스를 실행하세요. 그런 다음, **Web 8080** 탭을 새로 고쳐 웹 페이지를 미리 볼 수 있습니다."
              },
              {
                "name": "index.html 수정 상태 확인",
                "file": "verify1-2.sh",
                "hint": "랩을 완료하려면 단계를 따르세요."
              },
              {
                "name": "style.css 수정 상태 확인",
                "file": "verify1-3.sh",
                "hint": "랩을 완료하려면 단계를 따르세요."
              }
            ]
          }
        ],
        "intro": {
          "text": "ko/intro.md",
          "title": "소개"
        },
        "finish": {
          "text": "ko/finish.md",
          "title": "요약"
        }
      }
    },
    {
      "lang": "pt",
      "title": "Tipografia Fluida Responsiva com CSS",
      "description": "Neste laboratório, aprenderemos como implementar tipografia fluida usando CSS. A tipografia fluida garante que o texto se ajuste de acordo com a largura da viewport, tornando-o mais responsivo e acessível para diferentes tamanhos de tela. Ao usar a função clamp() e uma fórmula para calcular valores responsivos para o tamanho da fonte, podemos criar um design mais dinâmico e amigável.",
      "meta": {
        "title": "Tipografia Fluida | Design Web Responsivo",
        "description": "Aprenda como implementar tipografia fluida usando CSS, garantindo que seu texto se ajuste à largura da viewport para um design mais responsivo e acessível. Otimize a experiência do usuário em diferentes dispositivos.",
        "keywords": "tipografia fluida, design web responsivo, CSS, função clamp, largura da viewport, tamanho da fonte, design responsivo"
      },
      "details": {
        "steps": [
          {
            "title": "Tipografia Fluida",
            "text": "pt/step1.md",
            "verify": [
              {
                "name": "Verificar o status de execução do serviço web",
                "file": "verify1-1.sh",
                "hint": "Por favor, clique em 'Go Live' no canto inferior direito para executar o serviço web na porta 8080. Em seguida, você pode atualizar a aba **Web 8080** para visualizar a página web."
              },
              {
                "name": "Verificar o status da modificação de index.html",
                "file": "verify1-2.sh",
                "hint": "Por favor, siga os passos para completar o laboratório."
              },
              {
                "name": "Verificar o status da modificação de style.css",
                "file": "verify1-3.sh",
                "hint": "Por favor, siga os passos para completar o laboratório."
              }
            ]
          }
        ],
        "intro": {
          "text": "pt/intro.md",
          "title": "Introdução"
        },
        "finish": {
          "text": "pt/finish.md",
          "title": "Resumo"
        }
      }
    }
  ]
}
