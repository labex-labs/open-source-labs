{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Overflow Scroll Gradient",
  "description": "In this lab, we will learn how to add a fading gradient to an overflowing element using CSS. The purpose of this lab is to create a visual cue for users that there is more content to be scrolled. By using the ::after pseudo-element and linear-gradient() function, we can create a gradient that fades from transparent to white, indicating that there is additional content to be viewed.",
  "meta": {
    "title": "Mastering Overflow Scroll Gradient with CSS",
    "description": "Learn how to add a fading gradient to an overflowing element using CSS, creating a visual cue for users to indicate more content to be scrolled.",
    "keywords": "css, gradient, css practice, scroll, overflow, visual cue, css playground, css lab, css exercises"
  },
  "difficulty": "Intermediate",
  "time": 7,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Overflow Scroll Gradient",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify the running status of the web service",
            "file": "verify1-1.sh",
            "hint": "Please click on 'Go Live' in the bottom right corner to run the web service on port 8080. Then, you can refresh the **Web 8080** Tab to preview the web page.",
            "timeout": 0,
            "showstderr": true
          },
          {
            "name": "Verify the status of index.html modification",
            "file": "verify1-2.sh",
            "hint": "Please follow the steps to complete the lab.",
            "timeout": 0,
            "showstderr": true
          },
          {
            "name": "Verify the status of style.css modification",
            "file": "verify1-3.sh",
            "hint": "Please follow the steps to complete the lab.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "css/backgrounds",
          "css/margin_and_padding",
          "css/positioning",
          "css/pseudo_elements",
          "css/selectors",
          "css/width_and_height"
        ]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    },
    "assets": {
      "host01": [
        {
          "file": "index.html",
          "target": "~/project",
          "chmod": "ugo+rwx"
        },
        {
          "file": "style.css",
          "target": "~/project",
          "chmod": "ugo+rwx"
        }
      ]
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["Lotus-7"],
  "license": {
    "name": "CC-BY-4.0",
    "url": "https://github.com/30-seconds/30-seconds-of-code/blob/master/LICENSE",
    "repo": "https://github.com/30-seconds/30-seconds-of-code"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "溢出滚动渐变",
      "description": "在本实验中，我们将学习如何使用 CSS 为溢出元素添加渐变效果。本实验的目的是为用户创建一个视觉提示，表明还有更多内容需要滚动查看。通过使用::after 伪元素和 linear-gradient() 函数，我们可以创建一个从透明渐变到白色的渐变效果，表明还有更多内容可供查看。",
      "meta": {
        "title": "用 CSS 掌握溢出滚动渐变",
        "description": "学习如何使用 CSS 为溢出元素添加渐变效果，为用户创建一个视觉提示，表明还有更多内容需要滚动查看。",
        "keywords": "CSS，渐变，CSS 实践，滚动，溢出，视觉提示，CSS 游乐场，CSS 实验，CSS 练习"
      },
      "details": {
        "steps": [
          {
            "title": "溢出滚动渐变",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "验证 Web 服务的运行状态",
                "file": "verify1-1.sh",
                "hint": "请点击右下角的“Go Live”以在端口 8080 上运行 Web 服务。然后，你可以刷新“Web 8080”标签页来预览网页。"
              },
              {
                "name": "验证 index.html 修改状态",
                "file": "verify1-2.sh",
                "hint": "请按照步骤完成实验。"
              },
              {
                "name": "验证 style.css 修改状态",
                "file": "verify1-3.sh",
                "hint": "请按照步骤完成实验。"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Degradado de desplazamiento con desbordamiento",
      "description": "En este laboratorio, aprenderemos cómo agregar un degradado con desvanecimiento a un elemento con desbordamiento utilizando CSS. El propósito de este laboratorio es crear una señal visual para los usuarios de que hay más contenido que se puede desplazar. Al utilizar el pseudo-elemento ::after y la función linear-gradient(), podemos crear un degradado que desvanece de transparente a blanco, lo que indica que hay contenido adicional que se puede ver.",
      "meta": {
        "title": "Dominando el degradado de desplazamiento con desbordamiento con CSS",
        "description": "Aprende cómo agregar un degradado con desvanecimiento a un elemento con desbordamiento utilizando CSS, creando una señal visual para los usuarios para indicar que hay más contenido que se puede desplazar.",
        "keywords": "css, degradado, práctica de css, desplazamiento, desbordamiento, señal visual, playground de css, laboratorio de css, ejercicios de css"
      },
      "details": {
        "steps": [
          {
            "title": "Degradado de desplazamiento con desbordamiento",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Verificar el estado de ejecución del servicio web",
                "file": "verify1-1.sh",
                "hint": "Haga clic en 'Go Live' en la esquina inferior derecha para ejecutar el servicio web en el puerto 8080. Luego, puede actualizar la pestaña **Web 8080** para previsualizar la página web."
              },
              {
                "name": "Verificar el estado de la modificación de index.html",
                "file": "verify1-2.sh",
                "hint": "Siga los pasos para completar el laboratorio."
              },
              {
                "name": "Verificar el estado de la modificación de style.css",
                "file": "verify1-3.sh",
                "hint": "Siga los pasos para completar el laboratorio."
              }
            ]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Dégradé de défilement d'éléments débordants",
      "description": "Dans ce laboratoire, nous allons apprendre à ajouter un dégradé poussant à un élément débordant à l'aide de CSS. Le but de ce laboratoire est de créer un indice visuel pour les utilisateurs indiquant qu'il y a plus de contenu à défiler. En utilisant le pseudo-élément ::after et la fonction linear-gradient(), nous pouvons créer un dégradé qui passe du transparent au blanc, indiquant qu'il y a du contenu supplémentaire à visualiser.",
      "meta": {
        "title": "Maîtriser le dégradé de défilement d'éléments débordants avec CSS",
        "description": "Apprenez à ajouter un dégradé poussant à un élément débordant à l'aide de CSS, en créant un indice visuel pour les utilisateurs indiquant qu'il y a plus de contenu à défiler.",
        "keywords": "css, dégradé, pratique css, défilement, débordement, indice visuel, terrain de jeu css, laboratoire css, exercices css"
      },
      "details": {
        "steps": [
          {
            "title": "Dégradé de défilement d'éléments débordants",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Vérifiez le statut d'exécution du service web",
                "file": "verify1-1.sh",
                "hint": "Veuillez cliquer sur 'Go Live' dans le coin inférieur droit pour exécuter le service web sur le port 8080. Ensuite, vous pouvez actualiser l'onglet **Web 8080** pour prévisualiser la page web."
              },
              {
                "name": "Vérifiez le statut de la modification de index.html",
                "file": "verify1-2.sh",
                "hint": "Veuillez suivre les étapes pour terminer le laboratoire."
              },
              {
                "name": "Vérifiez le statut de la modification de style.css",
                "file": "verify1-3.sh",
                "hint": "Veuillez suivre les étapes pour terminer le laboratoire."
              }
            ]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Überlauf Scroll Farbverlauf",
      "description": "In diesem Lab werden wir lernen, wie man mit CSS einen schwindenden Farbverlauf zu einem überlaufenden Element hinzufügt. Das Ziel dieses Labs ist es, den Benutzern einen visuellen Hinweis zu geben, dass es noch mehr Inhalte gibt, die scrollet werden müssen. Mit der ::after-Pseudo-Eigenschaft und der linear-gradient()-Funktion können wir einen Farbverlauf erstellen, der von transparent nach weiß schwindet, was darauf hinweist, dass es weitere Inhalte gibt, die angesehen werden können.",
      "meta": {
        "title": "Das Überlauf Scroll Farbverlauf mit CSS bemeistern",
        "description": "Lernen Sie, wie man mit CSS einen schwindenden Farbverlauf zu einem überlaufenden Element hinzufügt, um Benutzern einen visuellen Hinweis zu geben, dass es noch mehr Inhalte gibt, die scrollet werden müssen.",
        "keywords": "css, farbverlauf, css übung, scroll, überlauf, visueller hinweis, css spielplatz, css lab, css übungen"
      },
      "details": {
        "steps": [
          {
            "title": "Überlauf Scroll Farbverlauf",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Überprüfen des Laufzustands des Webdiensts",
                "file": "verify1-1.sh",
                "hint": "Klicken Sie bitte in der unteren rechten Ecke auf 'Go Live', um den Webdienst auf Port 8080 auszuführen. Anschließend können Sie die Registerkarte **Web 8080** aktualisieren, um die Webseite anzuschauen."
              },
              {
                "name": "Überprüfen des Status der Änderungen an index.html",
                "file": "verify1-2.sh",
                "hint": "Bitte folgen Sie den Schritten, um das Lab abzuschließen."
              },
              {
                "name": "Überprüfen des Status der Änderungen an style.css",
                "file": "verify1-3.sh",
                "hint": "Bitte folgen Sie den Schritten, um das Lab abzuschließen."
              }
            ]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "はみ出しスクロールグラデーション",
      "description": "この実験では、CSS を使ってはみ出た要素にフェードインググラデーションを追加する方法を学びます。この実験の目的は、ユーザーにスクロールする追加のコンテンツがあることを視覚的なキューとして伝えることです。`::after` 疑似要素と `linear-gradient()` 関数を使うことで、透明から白にフェードするグラデーションを作成し、追加のコンテンツが表示されることを示すことができます。",
      "meta": {
        "title": "CSS ではみ出しスクロールグラデーションをマスターする",
        "description": "CSS を使ってはみ出た要素にフェードインググラデーションを追加する方法を学び、ユーザーにスクロールする追加のコンテンツがあることを示す視覚的なキューを作成しましょう。",
        "keywords": "CSS, グラデーション，CSS の練習，スクロール，はみ出し，視覚的キュー, CSS の遊び場，CSS の実験，CSS の演習"
      },
      "details": {
        "steps": [
          {
            "title": "はみ出しスクロールグラデーション",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "ウェブサービスの実行状態を確認する",
                "file": "verify1-1.sh",
                "hint": "右下隅の「Go Live」をクリックして、ポート 8080 でウェブサービスを実行してください。その後、**Web 8080**タブを更新してウェブページをプレビューできます。"
              },
              {
                "name": "index.html の変更状態を確認する",
                "file": "verify1-2.sh",
                "hint": "実験を完了する手順に従ってください。"
              },
              {
                "name": "style.css の変更状態を確認する",
                "file": "verify1-3.sh",
                "hint": "実験を完了する手順に従ってください。"
              }
            ]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Градиент прокрутки при переполнении",
      "description": "В этом практическом занятии мы научимся добавлять затухающий градиент к элементу с переполнением с использованием CSS. Целью этого практического занятия является создание визуального сигнала для пользователей о том, что есть дополнительный контент, который можно прокрутить. С помощью псевдо-элемента ::after и функции linear-gradient() мы можем создать градиент, который затухает от прозрачного до белого цвета, что указывает на наличие дополнительного контента для просмотра.",
      "meta": {
        "title": "Мастерство в использовании градиента прокрутки при переполнении с помощью CSS",
        "description": "Изучите, как добавить затухающий градиент к элементу с переполнением с использованием CSS, создавая визуальный сигнал для пользователей, указывающий на дополнительный контент для прокрутки.",
        "keywords": "css, градиент, практика css, прокрутка, переполнение, визуальный сигнал, css-площадка, css-практическое занятие, упражнения по css"
      },
      "details": {
        "steps": [
          {
            "title": "Градиент прокрутки при переполнении",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "Проверить статус работы веб-сервиса",
                "file": "verify1-1.sh",
                "hint": "Пожалуйста, нажмите кнопку 'Go Live' в нижнем правом углу, чтобы запустить веб-сервис на порту 8080. Затем вы можете обновить вкладку **Web 8080**, чтобы просмотреть веб-страницу."
              },
              {
                "name": "Проверить статус изменения index.html",
                "file": "verify1-2.sh",
                "hint": "Пожалуйста, следуйте шагам, чтобы завершить практическое занятие."
              },
              {
                "name": "Проверить статус изменения style.css",
                "file": "verify1-3.sh",
                "hint": "Пожалуйста, следуйте шагам, чтобы завершить практическое занятие."
              }
            ]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    },
    {
      "lang": "ko",
      "title": "Overflow Scroll Gradient (오버플로우 스크롤 그라데이션)",
      "description": "이 랩에서는 CSS 를 사용하여 넘치는 요소에 페이딩 그라데이션을 추가하는 방법을 배웁니다. 이 랩의 목적은 사용자가 스크롤해야 할 콘텐츠가 더 있음을 시각적으로 알려주는 것입니다. ::after 의사 요소와 linear-gradient() 함수를 사용하여 투명에서 흰색으로 페이드되는 그라데이션을 생성하여 추가 콘텐츠가 있음을 나타낼 수 있습니다.",
      "meta": {
        "title": "CSS 로 Overflow Scroll Gradient 마스터하기 - 웹 디자인 팁",
        "description": "CSS 를 사용하여 넘치는 요소에 페이딩 그라데이션을 추가하는 방법을 배우고, 더 많은 콘텐츠가 있음을 사용자에게 시각적으로 알려주는 팁을 얻으세요. CSS, 웹 디자인, 프론트엔드 개발 관련 정보.",
        "keywords": "CSS, 그라데이션, CSS 연습, 스크롤, 오버플로우, 시각적 큐, CSS 플레이그라운드, CSS 랩, CSS 예제, 웹 디자인 팁, 프론트엔드 개발"
      },
      "details": {
        "steps": [
          {
            "title": "Overflow Scroll Gradient (오버플로우 스크롤 그라데이션)",
            "text": "ko/step1.md",
            "verify": [
              {
                "name": "웹 서비스 실행 상태 확인",
                "file": "verify1-1.sh",
                "hint": "오른쪽 하단의 'Go Live'를 클릭하여 웹 서비스를 포트 8080 에서 실행하세요. 그런 다음 **Web 8080** 탭을 새로 고쳐 웹 페이지를 미리 볼 수 있습니다."
              },
              {
                "name": "index.html 수정 상태 확인",
                "file": "verify1-2.sh",
                "hint": "랩을 완료하려면 단계를 따르세요."
              },
              {
                "name": "style.css 수정 상태 확인",
                "file": "verify1-3.sh",
                "hint": "랩을 완료하려면 단계를 따르세요."
              }
            ]
          }
        ],
        "intro": {
          "text": "ko/intro.md",
          "title": "소개"
        },
        "finish": {
          "text": "ko/finish.md",
          "title": "요약"
        }
      }
    },
    {
      "lang": "pt",
      "title": "Gradiente de Rolagem com Overflow",
      "description": "Neste laboratório, aprenderemos como adicionar um gradiente de desvanecimento a um elemento com overflow usando CSS. O objetivo deste laboratório é criar uma dica visual para os usuários de que há mais conteúdo para ser rolado. Ao usar o pseudo-elemento ::after e a função linear-gradient(), podemos criar um gradiente que desvanece de transparente para branco, indicando que há conteúdo adicional para ser visualizado.",
      "meta": {
        "title": "Dominando o Gradiente de Rolagem com Overflow em CSS",
        "description": "Aprenda como adicionar um gradiente de desvanecimento a um elemento com overflow usando CSS, criando uma dica visual para os usuários indicando que há mais conteúdo para rolar.",
        "keywords": "css, gradiente, prática css, rolagem, overflow, dica visual, playground css, laboratório css, exercícios css"
      },
      "details": {
        "steps": [
          {
            "title": "Gradiente de Rolagem com Overflow",
            "text": "pt/step1.md",
            "verify": [
              {
                "name": "Verificar o status de execução do serviço web",
                "file": "verify1-1.sh",
                "hint": "Por favor, clique em 'Go Live' no canto inferior direito para executar o serviço web na porta 8080. Em seguida, você pode atualizar a aba **Web 8080** para visualizar a página web."
              },
              {
                "name": "Verificar o status da modificação de index.html",
                "file": "verify1-2.sh",
                "hint": "Por favor, siga os passos para completar o laboratório."
              },
              {
                "name": "Verificar o status da modificação de style.css",
                "file": "verify1-3.sh",
                "hint": "Por favor, siga os passos para completar o laboratório."
              }
            ]
          }
        ],
        "intro": {
          "text": "pt/intro.md",
          "title": "Introdução"
        },
        "finish": {
          "text": "pt/finish.md",
          "title": "Resumo"
        }
      }
    }
  ]
}
