{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "SVM Classification Using Custom Kernel",
  "description": "In this lab, we will learn how to use Support Vector Machines (SVM) to classify a sample using a custom kernel. We will use Python's scikit-learn library to perform SVM classification with a custom kernel. SVM is a popular machine learning algorithm used for classification, regression, and outlier detection. SVM works by creating a boundary or a line (hyperplane) that separates the data into classes.",
  "meta": {
    "title": "Support Vector Machines | Machine Learning | Python",
    "description": "Learn how to use Support Vector Machines (SVM) with a custom kernel for classification using Python's scikit-learn library.",
    "keywords": "Support Vector Machines, SVM, Machine Learning, Python, scikit-learn, Classification"
  },
  "difficulty": "Beginner",
  "time": 25,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Import Libraries",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "This step has no verification at the moment",
            "file": "verify1-1.sh",
            "hint": "This step has no verification at the moment"
          }
        ],
        "skills": ["ml/sklearn", "sklearn/inspection"]
      },
      {
        "title": "Load Data",
        "text": "en/step2.md",
        "verify": [
          {
            "name": "This step has no verification at the moment",
            "file": "verify2-1.sh",
            "hint": "This step has no verification at the moment"
          }
        ],
        "skills": ["ml/sklearn"]
      },
      {
        "title": "Create Custom Kernel",
        "text": "en/step3.md",
        "verify": [
          {
            "name": "This step has no verification at the moment",
            "file": "verify3-1.sh",
            "hint": "This step has no verification at the moment"
          }
        ],
        "skills": ["ml/sklearn"]
      },
      {
        "title": "Create SVM Classifier",
        "text": "en/step4.md",
        "verify": [
          {
            "name": "This step has no verification at the moment",
            "file": "verify4-1.sh",
            "hint": "This step has no verification at the moment"
          }
        ],
        "skills": ["ml/sklearn"]
      },
      {
        "title": "Plot Decision Boundary",
        "text": "en/step5.md",
        "verify": [
          {
            "name": "This step has no verification at the moment",
            "file": "verify5-1.sh",
            "hint": "This step has no verification at the moment"
          }
        ],
        "skills": ["ml/sklearn"]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    },
    "assets": {
      "host01": [
        {
          "file": "plot-custom-kernel.ipynb",
          "target": "/home/labex/project",
          "chmod": "ugo+rwx"
        }
      ]
    }
  },
  "backend": {
    "imageid": "jupyter-ubuntu:2204"
  },
  "contributors": [],
  "license": {
    "name": "BSD 3-Clause",
    "url": "https://github.com/scikit-learn/scikit-learn/tree/main/LICENSE",
    "repo": "https://github.com/scikit-learn/scikit-learn"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "使用自定义核函数的支持向量机分类",
      "description": "在本实验中，我们将学习如何使用支持向量机（SVM）通过自定义核函数对样本进行分类。我们将使用 Python 的 scikit-learn 库来执行带有自定义核函数的 SVM 分类。SVM 是一种用于分类、回归和异常值检测的流行机器学习算法。SVM 的工作原理是创建一个将数据分隔为不同类别的边界或直线（超平面）。",
      "meta": {
        "title": "支持向量机 | 机器学习 | Python",
        "description": "学习如何使用 Python 的 scikit-learn 库，通过自定义核函数使用支持向量机（SVM）进行分类。",
        "keywords": "支持向量机，SVM, 机器学习，Python, scikit-learn, 分类"
      },
      "details": {
        "steps": [
          {
            "title": "导入库",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "此步骤目前没有验证",
                "file": "verify1-1.sh",
                "hint": "此步骤目前没有验证"
              }
            ]
          },
          {
            "title": "加载数据",
            "text": "zh/step2.md",
            "verify": [
              {
                "name": "此步骤目前没有验证",
                "file": "verify2-1.sh",
                "hint": "此步骤目前没有验证"
              }
            ]
          },
          {
            "title": "创建自定义核函数",
            "text": "zh/step3.md",
            "verify": [
              {
                "name": "此步骤目前没有验证",
                "file": "verify3-1.sh",
                "hint": "此步骤目前没有验证"
              }
            ]
          },
          {
            "title": "创建支持向量机分类器",
            "text": "zh/step4.md",
            "verify": [
              {
                "name": "此步骤目前没有验证",
                "file": "verify4-1.sh",
                "hint": "此步骤目前没有验证"
              }
            ]
          },
          {
            "title": "绘制决策边界",
            "text": "zh/step5.md",
            "verify": [
              {
                "name": "此步骤目前没有验证",
                "file": "verify5-1.sh",
                "hint": "此步骤目前没有验证"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Clasificación SVM con Kernel Personalizado",
      "description": "En este laboratorio, aprenderemos cómo usar Máquinas de Vectores de Soporte (SVM) para clasificar una muestra con un kernel personalizado. Usaremos la biblioteca scikit-learn de Python para realizar la clasificación SVM con un kernel personalizado. La SVM es un algoritmo de aprendizaje automático popular utilizado para clasificación, regresión y detección de valores atípicos. La SVM funciona creando un límite o una línea (hiperplano) que separa los datos en clases.",
      "meta": {
        "title": "Máquinas de Vectores de Soporte | Aprendizaje Automático | Python",
        "description": "Aprende cómo usar Máquinas de Vectores de Soporte (SVM) con un kernel personalizado para la clasificación usando la biblioteca scikit-learn de Python.",
        "keywords": "Máquinas de Vectores de Soporte, SVM, Aprendizaje Automático, Python, scikit-learn, Clasificación"
      },
      "details": {
        "steps": [
          {
            "title": "Importar bibliotecas",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Este paso no tiene verificaciones en este momento",
                "file": "verify1-1.sh",
                "hint": "Este paso no tiene verificaciones en este momento"
              }
            ]
          },
          {
            "title": "Cargar datos",
            "text": "es/step2.md",
            "verify": [
              {
                "name": "Este paso no tiene verificaciones en este momento",
                "file": "verify2-1.sh",
                "hint": "Este paso no tiene verificaciones en este momento"
              }
            ]
          },
          {
            "title": "Crear kernel personalizado",
            "text": "es/step3.md",
            "verify": [
              {
                "name": "Este paso no tiene verificaciones en este momento",
                "file": "verify3-1.sh",
                "hint": "Este paso no tiene verificaciones en este momento"
              }
            ]
          },
          {
            "title": "Crear clasificador SVM",
            "text": "es/step4.md",
            "verify": [
              {
                "name": "Este paso no tiene verificaciones en este momento",
                "file": "verify4-1.sh",
                "hint": "Este paso no tiene verificaciones en este momento"
              }
            ]
          },
          {
            "title": "Trazar el límite de decisión",
            "text": "es/step5.md",
            "verify": [
              {
                "name": "Este paso no tiene verificaciones en este momento",
                "file": "verify5-1.sh",
                "hint": "Este paso no tiene verificaciones en este momento"
              }
            ]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Classification SVM à l'aide d'un noyau personnalisé",
      "description": "Dans ce laboratoire, nous allons apprendre à utiliser les Machines à Vecteurs de Support (SVM) pour classifier un échantillon à l'aide d'un noyau personnalisé. Nous utiliserons la bibliothèque scikit-learn de Python pour effectuer une classification SVM avec un noyau personnalisé. Les SVM sont un algorithme d'apprentissage automatique populaire utilisé pour la classification, la régression et la détection d'anomalies. Les SVM fonctionnent en créant une frontière ou une ligne (hyperplan) qui sépare les données en classes.",
      "meta": {
        "title": "Machines à Vecteurs de Support | Apprentissage automatique | Python",
        "description": "Apprenez à utiliser les Machines à Vecteurs de Support (SVM) avec un noyau personnalisé pour la classification à l'aide de la bibliothèque scikit-learn de Python.",
        "keywords": "Machines à Vecteurs de Support, SVM, Apprentissage automatique, Python, scikit-learn, Classification"
      },
      "details": {
        "steps": [
          {
            "title": "Importer les bibliothèques",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Cette étape n'a pas de vérification pour le moment",
                "file": "verify1-1.sh",
                "hint": "Cette étape n'a pas de vérification pour le moment"
              }
            ]
          },
          {
            "title": "Charger les données",
            "text": "fr/step2.md",
            "verify": [
              {
                "name": "Cette étape n'a pas de vérification pour le moment",
                "file": "verify2-1.sh",
                "hint": "Cette étape n'a pas de vérification pour le moment"
              }
            ]
          },
          {
            "title": "Créer un noyau personnalisé",
            "text": "fr/step3.md",
            "verify": [
              {
                "name": "Cette étape n'a pas de vérification pour le moment",
                "file": "verify3-1.sh",
                "hint": "Cette étape n'a pas de vérification pour le moment"
              }
            ]
          },
          {
            "title": "Créer un classifieur SVM",
            "text": "fr/step4.md",
            "verify": [
              {
                "name": "Cette étape n'a pas de vérification pour le moment",
                "file": "verify4-1.sh",
                "hint": "Cette étape n'a pas de vérification pour le moment"
              }
            ]
          },
          {
            "title": "Tracer la frontière de décision",
            "text": "fr/step5.md",
            "verify": [
              {
                "name": "Cette étape n'a pas de vérification pour le moment",
                "file": "verify5-1.sh",
                "hint": "Cette étape n'a pas de vérification pour le moment"
              }
            ]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "SVM-Klassifizierung mit benutzerdefiniertem Kernel",
      "description": "In diesem Lab werden wir lernen, wie man Support Vector Machines (SVM) verwendet, um eine Probe mit einem benutzerdefinierten Kernel zu klassifizieren. Wir werden die scikit-learn-Bibliothek in Python verwenden, um die SVM-Klassifizierung mit einem benutzerdefinierten Kernel durchzuführen. SVM ist ein populäres Machine-Learning-Algorithmus, der zur Klassifizierung, Regression und Ausreißererkennung verwendet wird. SVM arbeitet, indem es eine Grenze oder eine Linie (Hyperebene) erstellt, die die Daten in Klassen trennt.",
      "meta": {
        "title": "Support Vector Machines | Machine Learning | Python",
        "description": "Lernen Sie, wie man Support Vector Machines (SVM) mit einem benutzerdefinierten Kernel für die Klassifizierung mithilfe der scikit-learn-Bibliothek in Python verwendet.",
        "keywords": "Support Vector Machines, SVM, Machine Learning, Python, scikit-learn, Klassifizierung"
      },
      "details": {
        "steps": [
          {
            "title": "Bibliotheken importieren",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Dieser Schritt hat momentan keine Überprüfung",
                "file": "verify1-1.sh",
                "hint": "Dieser Schritt hat momentan keine Überprüfung"
              }
            ]
          },
          {
            "title": "Daten laden",
            "text": "de/step2.md",
            "verify": [
              {
                "name": "Dieser Schritt hat momentan keine Überprüfung",
                "file": "verify2-1.sh",
                "hint": "Dieser Schritt hat momentan keine Überprüfung"
              }
            ]
          },
          {
            "title": "Benutzerdefinierten Kernel erstellen",
            "text": "de/step3.md",
            "verify": [
              {
                "name": "Dieser Schritt hat momentan keine Überprüfung",
                "file": "verify3-1.sh",
                "hint": "Dieser Schritt hat momentan keine Überprüfung"
              }
            ]
          },
          {
            "title": "SVM-Klassifizierer erstellen",
            "text": "de/step4.md",
            "verify": [
              {
                "name": "Dieser Schritt hat momentan keine Überprüfung",
                "file": "verify4-1.sh",
                "hint": "Dieser Schritt hat momentan keine Überprüfung"
              }
            ]
          },
          {
            "title": "Entscheidungsgrenze plotten",
            "text": "de/step5.md",
            "verify": [
              {
                "name": "Dieser Schritt hat momentan keine Überprüfung",
                "file": "verify5-1.sh",
                "hint": "Dieser Schritt hat momentan keine Überprüfung"
              }
            ]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "カスタムカーネルを使用した SVM 分類",
      "description": "この実験では、カスタムカーネルを使用してサポートベクターマシン (SVM) を使ってサンプルを分類する方法を学びます。Python の scikit-learn ライブラリを使用して、カスタムカーネルを持つ SVM 分類を行います。SVM は、分類、回帰、およびアウトライア検出に使用される人気のある機械学習アルゴリズムです。SVM は、データをクラスに分離する境界または線 (ハイパープレーン) を作成することによって機能します。",
      "meta": {
        "title": "サポートベクターマシン | 機械学習 | Python",
        "description": "Python の scikit-learn ライブラリを使用して、カスタムカーネル付きのサポートベクターマシン (SVM) を分類に使用する方法を学びましょう。",
        "keywords": "サポートベクターマシン，SVM, 機械学習，Python, scikit-learn, 分類"
      },
      "details": {
        "steps": [
          {
            "title": "ライブラリのインポート",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "このステップでは現在検証はありません",
                "file": "verify1-1.sh",
                "hint": "このステップでは現在検証はありません"
              }
            ]
          },
          {
            "title": "データの読み込み",
            "text": "ja/step2.md",
            "verify": [
              {
                "name": "このステップでは現在検証はありません",
                "file": "verify2-1.sh",
                "hint": "このステップでは現在検証はありません"
              }
            ]
          },
          {
            "title": "カスタムカーネルの作成",
            "text": "ja/step3.md",
            "verify": [
              {
                "name": "このステップでは現在検証はありません",
                "file": "verify3-1.sh",
                "hint": "このステップでは現在検証はありません"
              }
            ]
          },
          {
            "title": "SVM 分類器の作成",
            "text": "ja/step4.md",
            "verify": [
              {
                "name": "このステップでは現在検証はありません",
                "file": "verify4-1.sh",
                "hint": "このステップでは現在検証はありません"
              }
            ]
          },
          {
            "title": "決定境界のプロット",
            "text": "ja/step5.md",
            "verify": [
              {
                "name": "このステップでは現在検証はありません",
                "file": "verify5-1.sh",
                "hint": "このステップでは現在検証はありません"
              }
            ]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Классификация SVM с использованием пользовательского ядра",
      "description": "В этом практическом занятии мы узнаем, как использовать методы опорных векторов (Support Vector Machines, SVM) для классификации выборки с использованием пользовательского ядра. Мы будем использовать библиотеку scikit-learn для выполнения классификации SVM с пользовательским ядром. SVM - это популярный алгоритм машинного обучения, используемый для классификации, регрессии и обнаружения выбросов. SVM работает путем создания границы или линии (гиперплоскости), которая разделяет данные на классы.",
      "meta": {
        "title": "Методы опорных векторов | машинное обучение | Python",
        "description": "Изучите, как использовать методы опорных векторов (SVM) с пользовательским ядром для классификации с использованием библиотеки scikit-learn для Python.",
        "keywords": "Методы опорных векторов, SVM, машинное обучение, Python, scikit-learn, классификация"
      },
      "details": {
        "steps": [
          {
            "title": "Импортировать библиотеки",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "На данный момент эта стадия не имеет проверки",
                "file": "verify1-1.sh",
                "hint": "На данный момент эта стадия не имеет проверки"
              }
            ]
          },
          {
            "title": "Загрузить данные",
            "text": "ru/step2.md",
            "verify": [
              {
                "name": "На данный момент эта стадия не имеет проверки",
                "file": "verify2-1.sh",
                "hint": "На данный момент эта стадия не имеет проверки"
              }
            ]
          },
          {
            "title": "Создать пользовательское ядро",
            "text": "ru/step3.md",
            "verify": [
              {
                "name": "На данный момент эта стадия не имеет проверки",
                "file": "verify3-1.sh",
                "hint": "На данный момент эта стадия не имеет проверки"
              }
            ]
          },
          {
            "title": "Создать классификатор SVM",
            "text": "ru/step4.md",
            "verify": [
              {
                "name": "На данный момент эта стадия не имеет проверки",
                "file": "verify4-1.sh",
                "hint": "На данный момент эта стадия не имеет проверки"
              }
            ]
          },
          {
            "title": "Построить границу решения",
            "text": "ru/step5.md",
            "verify": [
              {
                "name": "На данный момент эта стадия не имеет проверки",
                "file": "verify5-1.sh",
                "hint": "На данный момент эта стадия не имеет проверки"
              }
            ]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    }
  ]
}
