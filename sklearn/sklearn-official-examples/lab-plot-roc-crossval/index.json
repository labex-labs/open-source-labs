{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "ROC with Cross Validation",
  "description": "In this lab, we will learn how to estimate and visualize the variance of the Receiver Operating Characteristic (ROC) metric using cross-validation in Python. ROC curves are used in binary classification to measure the performance of a model by plotting the true positive rate (TPR) against the false positive rate (FPR). We will use the Scikit-learn library to load the iris dataset, create noisy features, and classify the dataset with Support Vector Machine (SVM). We will then plot the ROC curves with cross-validation and calculate the mean Area Under the Curve (AUC) to see the variability of the classifier output when the training set is split into different subsets.",
  "meta": {
    "title": "Estimating ROC Variance with Cross-Validation",
    "description": "Learn how to estimate and visualize the variance of the Receiver Operating Characteristic (ROC) metric using cross-validation in Python.",
    "keywords": "auc, machine learning, cross validation, binary classification, roc, scikit-learn, machine learning playground, svm, scikit-learn playground"
  },
  "difficulty": "Beginner",
  "time": 10,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Load and prepare data",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "This step has no verification at the moment",
            "file": "verify1-1.sh",
            "hint": "This step has no verification at the moment"
          }
        ],
        "skills": ["ml/sklearn", "sklearn/datasets"]
      },
      {
        "title": "Classification and ROC analysis",
        "text": "en/step2.md",
        "verify": [
          {
            "name": "This step has no verification at the moment",
            "file": "verify2-1.sh",
            "hint": "This step has no verification at the moment"
          }
        ],
        "skills": ["ml/sklearn", "sklearn/metrics", "sklearn/model_selection"]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    },
    "assets": {
      "host01": [
        {
          "file": "plot-roc-crossval.ipynb",
          "target": "/home/labex/project",
          "chmod": "ugo+rwx"
        }
      ]
    }
  },
  "backend": {
    "imageid": "jupyter-ubuntu:2204"
  },
  "contributors": [],
  "license": {
    "name": "BSD 3-Clause",
    "url": "https://github.com/scikit-learn/scikit-learn/tree/main/LICENSE",
    "repo": "https://github.com/scikit-learn/scikit-learn"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "使用交叉验证的 ROC",
      "description": "在本实验中，我们将学习如何使用 Python 中的交叉验证来估计和可视化接收器操作特征（ROC）指标的方差。ROC 曲线用于二分类，通过绘制真阳性率（TPR）与假阳性率（FPR）来衡量模型的性能。我们将使用 Scikit-learn 库加载鸢尾花数据集，创建噪声特征，并使用支持向量机（SVM）对数据集进行分类。然后，我们将通过交叉验证绘制 ROC 曲线，并计算曲线下面积（AUC）的平均值，以了解当训练集被拆分为不同子集时分类器输出的可变性。",
      "meta": {
        "title": "通过交叉验证估计 ROC 方差",
        "description": "学习如何使用 Python 中的交叉验证来估计和可视化接收器操作特征（ROC）指标的方差。",
        "keywords": "AUC, 机器学习, 交叉验证, 二分类, ROC, Scikit-learn, 机器学习平台, SVM, Scikit-learn 平台"
      },
      "details": {
        "steps": [
          {
            "title": "加载并准备数据",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "此步骤目前没有验证",
                "file": "verify1-1.sh",
                "hint": "此步骤目前没有验证"
              }
            ]
          },
          {
            "title": "分类与ROC分析",
            "text": "zh/step2.md",
            "verify": [
              {
                "name": "此步骤目前没有验证",
                "file": "verify2-1.sh",
                "hint": "此步骤目前没有验证"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    }
  ]
}
