{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Blind Source Separation",
  "description": "In this lab, we will use FastICA to perform blind source separation on a mixed signal. Blind source separation is a technique used to separate mixed signals into their original independent components. This is useful in various fields such as signal processing, image processing, and data analysis. We will use Python's scikit-learn library to perform ICA and PCA on a sample mixed signal.",
  "meta": {
    "title": "Blind Source Separation: Unlocking the Secrets of Mixed Signals",
    "description": "Explore the power of FastICA and PCA in separating mixed signals into their independent components, a crucial technique in signal processing and data analysis.",
    "keywords": "machine learning, pca, scikit-learn, scikit-learn playground, machine learning playground, fastica, blind source separation, data analysis, signal processing"
  },
  "difficulty": "Beginner",
  "time": 15,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Generate Sample Data",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "This step has no verification at the moment",
            "file": "verify1-1.sh",
            "hint": "This step has no verification at the moment"
          }
        ],
        "skills": []
      },
      {
        "title": "Fit ICA and PCA Models",
        "text": "en/step2.md",
        "verify": [
          {
            "name": "This step has no verification at the moment",
            "file": "verify2-1.sh",
            "hint": "This step has no verification at the moment"
          }
        ],
        "skills": []
      },
      {
        "title": "Plot Results",
        "text": "en/step3.md",
        "verify": [
          {
            "name": "This step has no verification at the moment",
            "file": "verify3-1.sh",
            "hint": "This step has no verification at the moment"
          }
        ],
        "skills": []
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    },
    "assets": {
      "host01": [
        {
          "file": "plot-ica-blind-source-separation.ipynb",
          "target": "/home/labex/project",
          "chmod": "ugo+rwx"
        }
      ]
    }
  },
  "backend": {
    "imageid": "jupyter-ubuntu:2204"
  },
  "contributors": [],
  "license": {
    "name": "BSD 3-Clause",
    "url": "https://github.com/scikit-learn/scikit-learn/tree/main/LICENSE",
    "repo": "https://github.com/scikit-learn/scikit-learn"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "盲源分离",
      "description": "在本实验中，我们将使用快速独立成分分析（FastICA）对混合信号进行盲源分离。盲源分离是一种用于将混合信号分离为其原始独立成分的技术。这在信号处理、图像处理和数据分析等各个领域都很有用。我们将使用 Python 的 scikit-learn 库对一个示例混合信号执行独立成分分析（ICA）和主成分分析（PCA）。",
      "meta": {
        "title": "盲源分离：揭开混合信号的秘密",
        "description": "探索快速独立成分分析（FastICA）和主成分分析（PCA）在将混合信号分离为独立成分方面的强大功能，这是信号处理和数据分析中的一项关键技术。",
        "keywords": "机器学习，主成分分析（PCA）, scikit-learn, scikit-learn 游乐场，机器学习游乐场，快速独立成分分析（FastICA）, 盲源分离，数据分析，信号处理"
      },
      "details": {
        "steps": [
          {
            "title": "生成示例数据",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "此步骤目前没有验证",
                "file": "verify1-1.sh",
                "hint": "此步骤目前没有验证"
              }
            ]
          },
          {
            "title": "拟合独立成分分析（ICA）和主成分分析（PCA）模型",
            "text": "zh/step2.md",
            "verify": [
              {
                "name": "此步骤目前没有验证",
                "file": "verify2-1.sh",
                "hint": "此步骤目前没有验证"
              }
            ]
          },
          {
            "title": "绘制结果",
            "text": "zh/step3.md",
            "verify": [
              {
                "name": "此步骤目前没有验证",
                "file": "verify3-1.sh",
                "hint": "此步骤目前没有验证"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Separación de fuentes ocultas",
      "description": "En este laboratorio, usaremos FastICA para realizar la separación de fuentes ocultas en una señal mixta. La separación de fuentes ocultas es una técnica utilizada para separar señales mezcladas en sus componentes independientes originales. Esto es útil en varios campos como el procesamiento de señales, el procesamiento de imágenes y el análisis de datos. Usaremos la biblioteca scikit-learn de Python para realizar ICA y PCA en una señal mixta de muestra.",
      "meta": {
        "title": "Separación de fuentes ocultas: Desbloqueando los secretos de las señales mezcladas",
        "description": "Explora el poder de FastICA y PCA en la separación de señales mezcladas en sus componentes independientes, una técnica crucial en el procesamiento de señales y el análisis de datos.",
        "keywords": "aprendizaje automático, pca, scikit-learn, playground de scikit-learn, playground de aprendizaje automático, fastica, separación de fuentes ocultas, análisis de datos, procesamiento de señales"
      },
      "details": {
        "steps": [
          {
            "title": "Generar datos de muestra",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Este paso no tiene verificación en este momento",
                "file": "verify1-1.sh",
                "hint": "Este paso no tiene verificación en este momento"
              }
            ]
          },
          {
            "title": "Ajustar los modelos ICA y PCA",
            "text": "es/step2.md",
            "verify": [
              {
                "name": "Este paso no tiene verificación en este momento",
                "file": "verify2-1.sh",
                "hint": "Este paso no tiene verificación en este momento"
              }
            ]
          },
          {
            "title": "Graficar los resultados",
            "text": "es/step3.md",
            "verify": [
              {
                "name": "Este paso no tiene verificación en este momento",
                "file": "verify3-1.sh",
                "hint": "Este paso no tiene verificación en este momento"
              }
            ]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Séparation des sources cachées",
      "description": "Dans ce laboratoire, nous utiliserons FastICA pour effectuer la séparation des sources cachées sur un signal mixte. La séparation des sources cachées est une technique utilisée pour séparer des signaux mixtes en leurs composantes indépendantes d'origine. Cela est utile dans divers domaines tels que le traitement du signal, le traitement d'images et l'analyse de données. Nous utiliserons la bibliothèque scikit-learn de Python pour effectuer l'ICA et la PCA sur un signal mixte d'échantillonnage.",
      "meta": {
        "title": "Séparation des sources cachées : Découvrir les secrets des signaux mixtes",
        "description": "Explorez le pouvoir de FastICA et de PCA dans la séparation de signaux mixtes en leurs composantes indépendantes, une technique cruciale dans le traitement du signal et l'analyse de données.",
        "keywords": "apprentissage automatique, pca, scikit-learn, terrain de jeu scikit-learn, terrain de jeu d'apprentissage automatique, fastica, séparation des sources cachées, analyse de données, traitement du signal"
      },
      "details": {
        "steps": [
          {
            "title": "Générer des données d'échantillonnage",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Cette étape n'a pas de vérification pour le moment",
                "file": "verify1-1.sh",
                "hint": "Cette étape n'a pas de vérification pour le moment"
              }
            ]
          },
          {
            "title": "Ajuster les modèles ICA et PCA",
            "text": "fr/step2.md",
            "verify": [
              {
                "name": "Cette étape n'a pas de vérification pour le moment",
                "file": "verify2-1.sh",
                "hint": "Cette étape n'a pas de vérification pour le moment"
              }
            ]
          },
          {
            "title": "Tracer les résultats",
            "text": "fr/step3.md",
            "verify": [
              {
                "name": "Cette étape n'a pas de vérification pour le moment",
                "file": "verify3-1.sh",
                "hint": "Cette étape n'a pas de vérification pour le moment"
              }
            ]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Blind Source Separation",
      "description": "In diesem Lab verwenden wir FastICA, um eine Blind Source Separation auf einem gemischten Signal durchzuführen. Blind Source Separation ist eine Technik, die verwendet wird, um gemischte Signale in ihre ursprünglichen unabhängigen Komponenten zu trennen. Dies ist in verschiedenen Bereichen wie Signalverarbeitung, Bildverarbeitung und Datenanalyse nützlich. Wir verwenden die scikit-learn-Bibliothek in Python, um ICA und PCA auf einem Beispielgemischten Signal durchzuführen.",
      "meta": {
        "title": "Blind Source Separation: Entschlüsseln der Geheimnisse von gemischten Signalen",
        "description": "Entdecken Sie die Macht von FastICA und PCA bei der Trennung von gemischten Signalen in ihre unabhängigen Komponenten, eine entscheidende Technik in der Signalverarbeitung und Datenanalyse.",
        "keywords": "Maschinelles Lernen, PCA, scikit-learn, scikit-learn Spielplatz, Maschinelles Lernen Spielplatz, FastICA, Blind Source Separation, Datenanalyse, Signalverarbeitung"
      },
      "details": {
        "steps": [
          {
            "title": "Stichproben-Daten generieren",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Dieser Schritt hat momentan keine Verifizierung",
                "file": "verify1-1.sh",
                "hint": "Dieser Schritt hat momentan keine Verifizierung"
              }
            ]
          },
          {
            "title": "ICA- und PCA-Modelle anpassen",
            "text": "de/step2.md",
            "verify": [
              {
                "name": "Dieser Schritt hat momentan keine Verifizierung",
                "file": "verify2-1.sh",
                "hint": "Dieser Schritt hat momentan keine Verifizierung"
              }
            ]
          },
          {
            "title": "Ergebnisse grafisch darstellen",
            "text": "de/step3.md",
            "verify": [
              {
                "name": "Dieser Schritt hat momentan keine Verifizierung",
                "file": "verify3-1.sh",
                "hint": "Dieser Schritt hat momentan keine Verifizierung"
              }
            ]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "ブラインドソース分離",
      "description": "この実験では、FastICA を使って混合信号に対してブラインドソース分離を行います。ブラインドソース分離は、混合信号を元の独立成分に分離するために使用される技術です。これは、信号処理、画像処理、データ分析などの様々な分野で役立ちます。サンプルの混合信号に対して ICA と PCA を行うために、Python の scikit-learn ライブラリを使用します。",
      "meta": {
        "title": "ブラインドソース分離：混合信号の秘密を解き明かす",
        "description": "FastICA と PCA の力を活用して、混合信号をその独立成分に分離しましょう。これは信号処理とデータ分析における重要な技術です。",
        "keywords": "機械学習、PCA、scikit-learn、scikit-learn プレイグラウンド、機械学習プレイグラウンド、FastICA、ブラインドソース分離、データ分析、信号処理"
      },
      "details": {
        "steps": [
          {
            "title": "サンプルデータを生成する",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "このステップには現在、検証はありません",
                "file": "verify1-1.sh",
                "hint": "このステップには現在、検証はありません"
              }
            ]
          },
          {
            "title": "ICA と PCA モデルをフィットさせる",
            "text": "ja/step2.md",
            "verify": [
              {
                "name": "このステップには現在、検証はありません",
                "file": "verify2-1.sh",
                "hint": "このステップには現在、検証はありません"
              }
            ]
          },
          {
            "title": "結果をプロットする",
            "text": "ja/step3.md",
            "verify": [
              {
                "name": "このステップには現在、検証はありません",
                "file": "verify3-1.sh",
                "hint": "このステップには現在、検証はありません"
              }
            ]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Разделение смешанных сигналов на исходные компоненты",
      "description": "В этом практическом занятии мы будем использовать FastICA для разделения смешанных сигналов на исходные компоненты. Разделение смешанных сигналов на исходные компоненты - это метод, который позволяет разделить смешанные сигналы на их исходные независимые компоненты. Это полезно в различных областях, таких как обработка сигналов, обработка изображений и анализ данных. Мы будем использовать библиотеку scikit - learn на Python для выполнения ICA и PCA для примера смешанного сигнала.",
      "meta": {
        "title": "Разделение смешанных сигналов на исходные компоненты: раскрытие секретов смешанных сигналов",
        "description": "Изучите силу FastICA и PCA при разделении смешанных сигналов на их независимые компоненты, важный метод в обработке сигналов и анализе данных.",
        "keywords": "машинное обучение, pca, scikit - learn, scikit - learn playground, machine learning playground, fastica, разделение смешанных сигналов на исходные компоненты, анализ данных, обработка сигналов"
      },
      "details": {
        "steps": [
          {
            "title": "Сгенерировать пример данных",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "На данный момент эта стадия не имеет проверки",
                "file": "verify1-1.sh",
                "hint": "На данный момент эта стадия не имеет проверки"
              }
            ]
          },
          {
            "title": "Настроить модели ICA и PCA",
            "text": "ru/step2.md",
            "verify": [
              {
                "name": "На данный момент эта стадия не имеет проверки",
                "file": "verify2-1.sh",
                "hint": "На данный момент эта стадия не имеет проверки"
              }
            ]
          },
          {
            "title": "Построить результаты",
            "text": "ru/step3.md",
            "verify": [
              {
                "name": "На данный момент эта стадия не имеет проверки",
                "file": "verify3-1.sh",
                "hint": "На данный момент эта стадия не имеет проверки"
              }
            ]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    },
    {
      "lang": "ko",
      "title": "맹검 소스 분리",
      "description": "이 실험에서는 FastICA 를 사용하여 혼합 신호에 대한 맹검 소스 분리를 수행합니다. 맹검 소스 분리는 혼합 신호를 원래의 독립적인 구성 요소로 분리하는 기술입니다. 이는 신호 처리, 이미지 처리 및 데이터 분석과 같은 다양한 분야에서 유용합니다. 파이썬의 scikit-learn 라이브러리를 사용하여 샘플 혼합 신호에 대한 ICA 및 PCA 를 수행할 것입니다.",
      "meta": {
        "title": "맹검 소스 분리: 혼합 신호의 비밀을 풀다",
        "description": "혼합 신호를 독립적인 구성 요소로 분리하는 FastICA 와 PCA 의 힘을 탐험하세요. 이는 신호 처리 및 데이터 분석에서 필수적인 기술입니다.",
        "keywords": "머신러닝, pca, scikit-learn, scikit-learn 플레이그라운드, 머신러닝 플레이그라운드, fastica, 맹검 소스 분리, 데이터 분석, 신호 처리, 혼합신호분리, 독립소스분리"
      },
      "details": {
        "steps": [
          {
            "title": "샘플 데이터 생성",
            "text": "ko/step1.md",
            "verify": [
              {
                "name": "현재 이 단계에는 검증이 없습니다",
                "file": "verify1-1.sh",
                "hint": "현재 이 단계에는 검증이 없습니다"
              }
            ]
          },
          {
            "title": "ICA 및 PCA 모델 적합",
            "text": "ko/step2.md",
            "verify": [
              {
                "name": "현재 이 단계에는 검증이 없습니다",
                "file": "verify2-1.sh",
                "hint": "현재 이 단계에는 검증이 없습니다"
              }
            ]
          },
          {
            "title": "결과 플롯",
            "text": "ko/step3.md",
            "verify": [
              {
                "name": "현재 이 단계에는 검증이 없습니다",
                "file": "verify3-1.sh",
                "hint": "현재 이 단계에는 검증이 없습니다"
              }
            ]
          }
        ],
        "intro": {
          "text": "ko/intro.md",
          "title": "소개"
        },
        "finish": {
          "text": "ko/finish.md",
          "title": "요약"
        }
      }
    },
    {
      "lang": "pt",
      "title": "Separação de Fontes Cegas",
      "description": "Neste laboratório, utilizaremos o FastICA para realizar a separação de fontes cegas num sinal misto. A separação de fontes cegas é uma técnica usada para separar sinais mistos nos seus componentes independentes originais. Esta técnica é útil em diversos campos, como processamento de sinal, processamento de imagem e análise de dados. Usaremos a biblioteca scikit-learn do Python para realizar ICA e PCA num sinal misto de amostra.",
      "meta": {
        "title": "Separação de Fontes Cegas: Desvendando os Segredos de Sinais Mistos",
        "description": "Explore o poder do FastICA e PCA na separação de sinais mistos em seus componentes independentes, uma técnica crucial em processamento de sinal e análise de dados.",
        "keywords": "machine learning, pca, scikit-learn, scikit-learn playground, machine learning playground, fastica, separação de fontes cegas, análise de dados, processamento de sinal, TDK"
      },
      "details": {
        "steps": [
          {
            "title": "Gerar Dados de Amostra",
            "text": "pt/step1.md",
            "verify": [
              {
                "name": "Este passo não possui verificação no momento",
                "file": "verify1-1.sh",
                "hint": "Este passo não possui verificação no momento"
              }
            ]
          },
          {
            "title": "Ajustar Modelos ICA e PCA",
            "text": "pt/step2.md",
            "verify": [
              {
                "name": "Este passo não possui verificação no momento",
                "file": "verify2-1.sh",
                "hint": "Este passo não possui verificação no momento"
              }
            ]
          },
          {
            "title": "Plotar Resultados",
            "text": "pt/step3.md",
            "verify": [
              {
                "name": "Esta etapa não possui verificação no momento",
                "file": "verify3-1.sh",
                "hint": "Esta etapa não possui verificação no momento"
              }
            ]
          }
        ],
        "intro": {
          "text": "pt/intro.md",
          "title": "Introdução"
        },
        "finish": {
          "text": "pt/finish.md",
          "title": "Resumo"
        }
      }
    }
  ]
}
