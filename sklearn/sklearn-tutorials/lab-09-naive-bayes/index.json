{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Naive Bayes Example",
  "description": "In this lab, we will go through an example of using Naive Bayes classifiers from the scikit-learn library in Python. Naive Bayes classifiers are a set of supervised learning algorithms that are commonly used for classification tasks. These classifiers are based on applying Bayes' theorem with the assumption of conditional independence between every pair of features given the value of the class variable.",
  "meta": {
    "title": "Naive Bayes Example: Mastering Classification with Python",
    "description": "Explore the power of Naive Bayes classifiers in Python through an engaging tutorial on the iris dataset.",
    "keywords": "machine learning, naive bayes, python, classification, scikit learn, scikit-learn, machine learning playground, scikit-learn playground, iris dataset"
  },
  "difficulty": "Beginner",
  "time": 20,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Import Libraries and Load the Dataset",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "This step has no verification at the moment",
            "file": "verify1-1.sh",
            "hint": "This step has no verification at the moment"
          }
        ],
        "skills": ["ml/sklearn", "sklearn/datasets"]
      },
      {
        "title": "Split the Dataset into Training and Test Sets",
        "text": "en/step2.md",
        "verify": [
          {
            "name": "This step has no verification at the moment",
            "file": "verify2-1.sh",
            "hint": "This step has no verification at the moment"
          }
        ],
        "skills": ["ml/sklearn", "sklearn/model_selection"]
      },
      {
        "title": "Train and Evaluate the Gaussian Naive Bayes Classifier",
        "text": "en/step3.md",
        "verify": [
          {
            "name": "This step has no verification at the moment",
            "file": "verify3-1.sh",
            "hint": "This step has no verification at the moment"
          }
        ],
        "skills": ["ml/sklearn", "sklearn/naive_bayes"]
      },
      {
        "title": "Interpret the Results",
        "text": "en/step4.md",
        "verify": [
          {
            "name": "This step has no verification at the moment",
            "file": "verify4-1.sh",
            "hint": "This step has no verification at the moment"
          }
        ],
        "skills": ["ml/sklearn"]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    },
    "assets": {
      "host01": [
        {
          "file": "09-naive-bayes.ipynb",
          "target": "/home/labex/project",
          "chmod": "ugo+rwx"
        }
      ]
    }
  },
  "backend": {
    "imageid": "jupyter-ubuntu:2204"
  },
  "contributors": [],
  "license": {
    "name": "BSD 3-Clause",
    "url": "https://github.com/scikit-learn/scikit-learn/tree/main/LICENSE",
    "repo": "https://github.com/scikit-learn/scikit-learn"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "朴素贝叶斯示例",
      "description": "在本实验中，我们将介绍一个在 Python 中使用 scikit-learn 库中的朴素贝叶斯分类器的示例。朴素贝叶斯分类器是一组常用于分类任务的监督学习算法。这些分类器基于应用贝叶斯定理，并假设在给定类别变量值的情况下，每对特征之间具有条件独立性。",
      "meta": {
        "title": "朴素贝叶斯示例：用 Python 掌握分类",
        "description": "通过一个关于鸢尾花数据集的精彩教程，探索 Python 中朴素贝叶斯分类器的强大功能。",
        "keywords": "机器学习，朴素贝叶斯，Python, 分类，scikit learn, scikit-learn, 机器学习游乐场，scikit-learn 游乐场，鸢尾花数据集"
      },
      "details": {
        "steps": [
          {
            "title": "导入库并加载数据集",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "此步骤目前没有验证",
                "file": "verify1-1.sh",
                "hint": "此步骤目前没有验证"
              }
            ]
          },
          {
            "title": "将数据集拆分为训练集和测试集",
            "text": "zh/step2.md",
            "verify": [
              {
                "name": "此步骤目前没有验证",
                "file": "verify2-1.sh",
                "hint": "此步骤目前没有验证"
              }
            ]
          },
          {
            "title": "训练并评估高斯朴素贝叶斯分类器",
            "text": "zh/step3.md",
            "verify": [
              {
                "name": "此步骤目前没有验证",
                "file": "verify3-1.sh",
                "hint": "此步骤目前没有验证"
              }
            ]
          },
          {
            "title": "解读结果",
            "text": "zh/step4.md",
            "verify": [
              {
                "name": "此步骤目前没有验证",
                "file": "verify4-1.sh",
                "hint": "此步骤目前没有验证"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Ejemplo de Naive Bayes",
      "description": "En este laboratorio, revisaremos un ejemplo de uso de clasificadores Naive Bayes de la biblioteca scikit-learn en Python. Los clasificadores Naive Bayes son un conjunto de algoritmos de aprendizaje supervisado que se utilizan comúnmente para tareas de clasificación. Estos clasificadores se basan en aplicar el teorema de Bayes con la suposición de independencia condicional entre cada par de características dado el valor de la variable de clase.",
      "meta": {
        "title": "Ejemplo de Naive Bayes: Dominando la Clasificación con Python",
        "description": "Explora el poder de los clasificadores Naive Bayes en Python a través de un tutorial atractivo sobre el conjunto de datos iris.",
        "keywords": "aprendizaje automático, naive bayes, python, clasificación, scikit learn, scikit-learn, playground de aprendizaje automático, playground de scikit-learn, conjunto de datos iris"
      },
      "details": {
        "steps": [
          {
            "title": "Importar bibliotecas y cargar el conjunto de datos",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Este paso no tiene verificaciones en este momento",
                "file": "verify1-1.sh",
                "hint": "Este paso no tiene verificaciones en este momento"
              }
            ]
          },
          {
            "title": "Dividir el conjunto de datos en conjuntos de entrenamiento y prueba",
            "text": "es/step2.md",
            "verify": [
              {
                "name": "Este paso no tiene verificaciones en este momento",
                "file": "verify2-1.sh",
                "hint": "Este paso no tiene verificaciones en este momento"
              }
            ]
          },
          {
            "title": "Entrenar y evaluar el clasificador Naive Bayes Gaussiano",
            "text": "es/step3.md",
            "verify": [
              {
                "name": "Este paso no tiene verificaciones en este momento",
                "file": "verify3-1.sh",
                "hint": "Este paso no tiene verificaciones en este momento"
              }
            ]
          },
          {
            "title": "Interpretar los resultados",
            "text": "es/step4.md",
            "verify": [
              {
                "name": "Este paso no tiene verificaciones en este momento",
                "file": "verify4-1.sh",
                "hint": "Este paso no tiene verificaciones en este momento"
              }
            ]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Exemple de Naïf Bayésien",
      "description": "Dans ce laboratoire, nous allons étudier un exemple d'utilisation de classifieurs Naïf Bayésien de la bibliothèque scikit - learn en Python. Les classifieurs Naïf Bayésien sont un ensemble d'algorithmes d'apprentissage supervisé couramment utilisés pour les tâches de classification. Ces classifieurs sont basés sur l'application du théorème de Bayes avec l'hypothèse d'indépendance conditionnelle entre chaque paire de caractéristiques étant donné la valeur de la variable de classe.",
      "meta": {
        "title": "Exemple de Naïf Bayésien : Maîtriser la classification avec Python",
        "description": "Explorez le pouvoir des classifieurs Naïf Bayésien en Python grâce à un tutoriel captivant sur l'ensemble de données iris.",
        "keywords": "apprentissage automatique, naïf bayésien, python, classification, scikit learn, scikit - learn, terrain de jeux d'apprentissage automatique, terrain de jeux de scikit - learn, ensemble de données iris"
      },
      "details": {
        "steps": [
          {
            "title": "Importer les bibliothèques et charger l'ensemble de données",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Cette étape n'a pas de vérification pour le moment",
                "file": "verify1-1.sh",
                "hint": "Cette étape n'a pas de vérification pour le moment"
              }
            ]
          },
          {
            "title": "Diviser l'ensemble de données en ensembles d'entraînement et de test",
            "text": "fr/step2.md",
            "verify": [
              {
                "name": "Cette étape n'a pas de vérification pour le moment",
                "file": "verify2-1.sh",
                "hint": "Cette étape n'a pas de vérification pour le moment"
              }
            ]
          },
          {
            "title": "Entraîner et évaluer le classifieur Naïf Bayésien Gaussien",
            "text": "fr/step3.md",
            "verify": [
              {
                "name": "Cette étape n'a pas de vérification pour le moment",
                "file": "verify3-1.sh",
                "hint": "Cette étape n'a pas de vérification pour le moment"
              }
            ]
          },
          {
            "title": "Interpréter les résultats",
            "text": "fr/step4.md",
            "verify": [
              {
                "name": "Cette étape n'a pas de vérification pour le moment",
                "file": "verify4-1.sh",
                "hint": "Cette étape n'a pas de vérification pour le moment"
              }
            ]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Naives Bayes-Beispiel",
      "description": "In diesem Lab werden wir ein Beispiel für die Verwendung von Naiven Bayes-Klassifizierern aus der scikit-learn-Bibliothek in Python durchgehen. Naive Bayes-Klassifizierer sind eine Gruppe von Supervised-Learning-Algorithmen, die häufig für Klassifizierungstasks verwendet werden. Diese Klassifizierer basieren auf der Anwendung des Bayes'schen Theorems unter der Annahme von bedingter Unabhängigkeit zwischen jeder Paarung von Merkmalen bei gegebener Wert der Klassenvariable.",
      "meta": {
        "title": "Naives Bayes-Beispiel: Das Erlernen der Klassifizierung mit Python",
        "description": "Entdecken Sie die Macht von Naiven Bayes-Klassifizierern in Python durch einen ansprechenden Tutorial zum Iris-Datensatz.",
        "keywords": "Maschinenlernen, Naives Bayes, Python, Klassifizierung, scikit learn, scikit-learn, Maschinenlernspielplatz, scikit-learn-Spielplatz, Iris-Datensatz"
      },
      "details": {
        "steps": [
          {
            "title": "Bibliotheken importieren und den Datensatz laden",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Dieser Schritt hat momentan keine Verifizierung",
                "file": "verify1-1.sh",
                "hint": "Dieser Schritt hat momentan keine Verifizierung"
              }
            ]
          },
          {
            "title": "Den Datensatz in Trainings- und Testsets unterteilen",
            "text": "de/step2.md",
            "verify": [
              {
                "name": "Dieser Schritt hat momentan keine Verifizierung",
                "file": "verify2-1.sh",
                "hint": "Dieser Schritt hat momentan keine Verifizierung"
              }
            ]
          },
          {
            "title": "Den Gauß'schen Naiven Bayes-Klassifizierer trainieren und bewerten",
            "text": "de/step3.md",
            "verify": [
              {
                "name": "Dieser Schritt hat momentan keine Verifizierung",
                "file": "verify3-1.sh",
                "hint": "Dieser Schritt hat momentan keine Verifizierung"
              }
            ]
          },
          {
            "title": "Die Ergebnisse interpretieren",
            "text": "de/step4.md",
            "verify": [
              {
                "name": "Dieser Schritt hat momentan keine Verifizierung",
                "file": "verify4-1.sh",
                "hint": "Dieser Schritt hat momentan keine Verifizierung"
              }
            ]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "ナイーブベイズの例",
      "description": "この実験では、Python の scikit - learn ライブラリのナイーブベイズ分類器を使用する例を見ていきます。ナイーブベイズ分類器は、分類タスクに一般的に使用される一連の教師あり学習アルゴリズムです。これらの分類器は、クラス変数の値が与えられたときに各特徴のペア間の条件付き独立性の仮定を用いてベイズの定理を適用することに基づいています。",
      "meta": {
        "title": "ナイーブベイズの例：Python での分類のマスター",
        "description": "アイリスデータセットに関する魅力的なチュートリアルを通じて、Python におけるナイーブベイズ分類器の力を探求しましょう。",
        "keywords": "機械学習，ナイーブベイズ，Python, 分類，scikit learn, scikit - learn, 機械学習の遊び場，scikit - learn の遊び場，アイリスデータセット"
      },
      "details": {
        "steps": [
          {
            "title": "ライブラリのインポートとデータセットの読み込み",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "このステップでは現在検証はありません",
                "file": "verify1-1.sh",
                "hint": "このステップでは現在検証はありません"
              }
            ]
          },
          {
            "title": "データセットを学習用とテスト用に分割する",
            "text": "ja/step2.md",
            "verify": [
              {
                "name": "このステップでは現在検証はありません",
                "file": "verify2-1.sh",
                "hint": "このステップでは現在検証はありません"
              }
            ]
          },
          {
            "title": "ガウスナイーブベイズ分類器を訓練して評価する",
            "text": "ja/step3.md",
            "verify": [
              {
                "name": "このステップでは現在検証はありません",
                "file": "verify3-1.sh",
                "hint": "このステップでは現在検証はありません"
              }
            ]
          },
          {
            "title": "結果を解釈する",
            "text": "ja/step4.md",
            "verify": [
              {
                "name": "このステップでは現在検証はありません",
                "file": "verify4-1.sh",
                "hint": "このステップでは現在検証はありません"
              }
            ]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Пример наивного байесовского классификатора",
      "description": "В этом практическом занятии мы рассмотрим пример использования наивных байесовских классификаторов из библиотеки scikit - learn в Python. Наивные байесовские классификаторы - это набор алгоритмов обучения с учителем, которые обычно используются для задач классификации. Эти классификаторы основаны на применении теоремы Байеса с предположением условной независимости между каждой парой признаков при заданном значении переменной класса.",
      "meta": {
        "title": "Пример наивного байесовского классификатора: овладейте классификацией с помощью Python",
        "description": "Исследуйте мощь наивных байесовских классификаторов в Python с помощью увлекательного туториала на датасете iris.",
        "keywords": "машинное обучение, наивный байес, python, классификация, scikit learn, scikit - learn, игровой площадка для машинного обучения, игровой площадка scikit - learn, датасет iris"
      },
      "details": {
        "steps": [
          {
            "title": "Импортировать библиотеки и загрузить датасет",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "На данный момент эта стадия не имеет проверки",
                "file": "verify1-1.sh",
                "hint": "На данный момент эта стадия не имеет проверки"
              }
            ]
          },
          {
            "title": "Разделить датасет на тренировочный и тестовые наборы",
            "text": "ru/step2.md",
            "verify": [
              {
                "name": "На данный момент эта стадия не имеет проверки",
                "file": "verify2-1.sh",
                "hint": "На данный момент эта стадия не имеет проверки"
              }
            ]
          },
          {
            "title": "Обучить и оценить гауссовский наивный байесовский классификатор",
            "text": "ru/step3.md",
            "verify": [
              {
                "name": "На данный момент эта стадия не имеет проверки",
                "file": "verify3-1.sh",
                "hint": "На данный момент эта стадия не имеет проверки"
              }
            ]
          },
          {
            "title": "Интерпретировать результаты",
            "text": "ru/step4.md",
            "verify": [
              {
                "name": "На данный момент эта стадия не имеет проверки",
                "file": "verify4-1.sh",
                "hint": "На данный момент эта стадия не имеет проверки"
              }
            ]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    }
  ]
}
