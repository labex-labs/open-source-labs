{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "React useMergeState Hook",
  "description": "In this lab, we will explore the useMergeState hook in React. This hook allows us to create a stateful value and a function to update it by merging the new state provided. We will learn how to use this hook to simplify state management and make our code more efficient.",
  "meta": {
    "title": "Mastering React useMergeState Hook",
    "description": "Explore the powerful useMergeState hook in React and learn how to simplify state management and improve code efficiency.",
    "keywords": "code efficiency, react, state management, web development, usemergestate"
  },
  "difficulty": "Beginner",
  "time": 5,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "React useMergeState Hook",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify the running status of the web service",
            "file": "verify1-1.sh",
            "hint": "Please click on 'Go Live' in the bottom right corner to run the web service on port 8080. Then, you can refresh the **Web 8080** Tab to preview the web page.",
            "timeout": 0,
            "showstderr": true
          },
          {
            "name": "Verify the status of script.js modification",
            "file": "verify1-2.sh",
            "hint": "Please follow the steps to complete the lab.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "react/event_handling",
          "react/hooks",
          "react/jsx",
          "react/use_state_reducer"
        ]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    },
    "assets": {
      "host01": [
        {
          "file": "index.html",
          "target": "~/project",
          "chmod": "ugo+rwx"
        },
        {
          "file": "script.js",
          "target": "~/project",
          "chmod": "ugo+rwx"
        }
      ]
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["Lotus-7"],
  "license": {
    "name": "CC-BY-4.0",
    "url": "https://github.com/30-seconds/30-seconds-of-code/blob/master/LICENSE",
    "repo": "https://github.com/30-seconds/30-seconds-of-code"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "React 的 useMergeState 钩子",
      "description": "在本实验中，我们将探索 React 中的 useMergeState 钩子。这个钩子允许我们创建一个有状态的值以及一个通过合并提供的新状态来更新它的函数。我们将学习如何使用这个钩子来简化状态管理并使我们的代码更高效。",
      "meta": {
        "title": "掌握 React 的 useMergeState 钩子",
        "description": "探索 React 中强大的 useMergeState 钩子，并学习如何简化状态管理和提高代码效率。",
        "keywords": "代码效率，React, 状态管理，网页开发，useMergeState"
      },
      "details": {
        "steps": [
          {
            "title": "React 的 useMergeState 钩子",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "验证网络服务的运行状态",
                "file": "verify1-1.sh",
                "hint": "请点击右下角的“Go Live”以在端口 8080 上运行网络服务。然后，你可以刷新 **Web 8080** 标签页来预览网页。"
              },
              {
                "name": "验证 script.js 修改状态",
                "file": "verify1-2.sh",
                "hint": "请按照步骤完成实验。"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Hook useMergeState de React",
      "description": "En este laboratorio, exploraremos el hook useMergeState en React. Este hook nos permite crear un valor con estado y una función para actualizarlo mediante la fusión del nuevo estado proporcionado. Aprenderemos cómo utilizar este hook para simplificar la gestión del estado y hacer que nuestro código sea más eficiente.",
      "meta": {
        "title": "Dominando el hook useMergeState de React",
        "description": "Explora el poderoso hook useMergeState en React y aprende cómo simplificar la gestión del estado y mejorar la eficiencia del código.",
        "keywords": "eficiencia del código, react, gestión del estado, desarrollo web, usemergestate"
      },
      "details": {
        "steps": [
          {
            "title": "Hook useMergeState de React",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Verificar el estado de ejecución del servicio web",
                "file": "verify1-1.sh",
                "hint": "Haga clic en 'Go Live' en la esquina inferior derecha para ejecutar el servicio web en el puerto 8080. Luego, puede actualizar la pestaña **Web 8080** para previsualizar la página web."
              },
              {
                "name": "Verificar el estado de la modificación de script.js",
                "file": "verify1-2.sh",
                "hint": "Siga los pasos para completar el laboratorio."
              }
            ]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Hook useMergeState de React",
      "description": "Dans ce laboratoire, nous allons explorer le hook useMergeState dans React. Ce hook nous permet de créer une valeur avec état et une fonction pour la mettre à jour en fusionnant le nouvel état fourni. Nous allons apprendre à utiliser ce hook pour simplifier la gestion de l'état et rendre notre code plus efficace.",
      "meta": {
        "title": "Maîtriser le hook useMergeState de React",
        "description": "Explorez le puissant hook useMergeState dans React et apprenez à simplifier la gestion de l'état et à améliorer l'efficacité du code.",
        "keywords": "efficacité du code, react, gestion de l'état, développement web, usemergestate"
      },
      "details": {
        "steps": [
          {
            "title": "Hook useMergeState de React",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Vérifiez le statut d'exécution du service web",
                "file": "verify1-1.sh",
                "hint": "Veuillez cliquer sur 'Go Live' dans le coin inférieur droit pour exécuter le service web sur le port 8080. Ensuite, vous pouvez actualiser l'onglet **Web 8080** pour prévisualiser la page web."
              },
              {
                "name": "Vérifiez l'état de la modification de script.js",
                "file": "verify1-2.sh",
                "hint": "Veuillez suivre les étapes pour terminer le laboratoire."
              }
            ]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "React useMergeState-Hook",
      "description": "In diesem Lab werden wir den useMergeState-Hook in React erkunden. Dieser Hook ermöglicht es uns, einen zustandsbehafteten Wert und eine Funktion zu erstellen, um ihn durch Zusammenführen des bereitgestellten neuen Zustands zu aktualisieren. Wir werden lernen, wie wir diesen Hook verwenden, um den Zustandsmanagement zu vereinfachen und unseren Code effizienter zu gestalten.",
      "meta": {
        "title": "Meisterhaftigkeit mit dem React useMergeState-Hook",
        "description": "Erkunden Sie den leistungsstarken useMergeState-Hook in React und lernen Sie, wie Sie den Zustandsmanagement vereinfachen und die Codeeffizienz verbessern.",
        "keywords": "Codeeffizienz, React, Zustandsmanagement, Webentwicklung, useMergeState"
      },
      "details": {
        "steps": [
          {
            "title": "React useMergeState-Hook",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Überprüfen des Laufzustands des Webdiensts",
                "file": "verify1-1.sh",
                "hint": "Bitte klicken Sie auf 'Go Live' in der unteren rechten Ecke, um den Webdienst auf Port 8080 auszuführen. Anschließend können Sie die Registerkarte **Web 8080** aktualisieren, um die Webseite anzuschauen."
              },
              {
                "name": "Überprüfen des Status der Änderungen in script.js",
                "file": "verify1-2.sh",
                "hint": "Bitte folgen Sie den Schritten, um das Lab abzuschließen."
              }
            ]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "React の useMergeState フック",
      "description": "この実験では、React の useMergeState フックを調べます。このフックを使うと、状態付きの値と、提供された新しい状態をマージすることでそれを更新する関数を作成できます。このフックを使って状態管理を簡素化し、コードを効率的にする方法を学びます。",
      "meta": {
        "title": "React の useMergeState フックをマスターする",
        "description": "React の強力な useMergeState フックを調べ、状態管理を簡素化してコードの効率を向上させる方法を学びましょう。",
        "keywords": "コード効率，React, 状態管理，ウェブ開発，useMergeState"
      },
      "details": {
        "steps": [
          {
            "title": "React の useMergeState フック",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "ウェブサービスの実行状態を確認する",
                "file": "verify1-1.sh",
                "hint": "右下隅の「Go Live」をクリックして、ポート 8080 でウェブサービスを実行してください。その後、**Web 8080** タブを更新してウェブページをプレビューできます。"
              },
              {
                "name": "script.js の変更状態を確認する",
                "file": "verify1-2.sh",
                "hint": "実験を完了するための手順に従ってください。"
              }
            ]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "React хук useMergeState",
      "description": "В этом лабораторном задании мы будем изучать хук useMergeState в React. Этот хук позволяет нам создавать состояние и функцию для его обновления путём объединения нового состояния. Мы узнаем, как использовать этот хук для упрощения управления состоянием и повышения эффективности нашего кода.",
      "meta": {
        "title": "Мастерство в использовании хука useMergeState в React",
        "description": "Изучите мощный хук useMergeState в React и узнайте, как упростить управление состоянием и повысить эффективность кода.",
        "keywords": "эффективность кода, react, управление состоянием, веб-разработка, useMergeState"
      },
      "details": {
        "steps": [
          {
            "title": "React хук useMergeState",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "Проверить статус работы веб-сервиса",
                "file": "verify1-1.sh",
                "hint": "Пожалуйста, нажмите кнопку 'Go Live' в нижнем правом углу, чтобы запустить веб-сервис на порту 8080. Затем вы можете обновить вкладку **Web 8080**, чтобы просмотреть веб-страницу."
              },
              {
                "name": "Проверить статус изменения script.js",
                "file": "verify1-2.sh",
                "hint": "Пожалуйста, следуйте шагам для завершения лабораторной работы."
              }
            ]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    }
  ]
}
