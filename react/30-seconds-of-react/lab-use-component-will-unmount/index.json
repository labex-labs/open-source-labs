{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "React useComponentWillUnmount Hook",
  "description": "In this lab, we will explore the useComponentWillUnmount hook in React, which allows us to execute a callback function right before a component is unmounted and destroyed. By using this hook, we can perform any necessary cleanup tasks, such as removing event listeners or cancelling any pending requests. This lab will provide hands-on experience in using this hook and understanding its behavior, which is similar to the componentWillUnmount() lifecycle method in class components.",
  "meta": {
    "title": "Mastering React's useComponentWillUnmount Hook",
    "description": "Explore the power of the useComponentWillUnmount hook in React for seamless component lifecycle management.",
    "keywords": "react, usecomponentwillunmount, component lifecycle, cleanup, hooks"
  },
  "difficulty": "Beginner",
  "time": 10,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "React useComponentWillUnmount Hook",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify the running status of the web service",
            "file": "verify1-1.sh",
            "hint": "Please click on 'Go Live' in the bottom right corner to run the web service on port 8080. Then, you can refresh the **Web 8080** Tab to preview the web page.",
            "timeout": 0,
            "showstderr": true
          },
          {
            "name": "Verify the status of script.js modification",
            "file": "verify1-2.sh",
            "hint": "Please follow the steps to complete the lab.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": ["react/hooks", "react/jsx"]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    },
    "assets": {
      "host01": [
        {
          "file": "index.html",
          "target": "~/project",
          "chmod": "ugo+rwx"
        },
        {
          "file": "script.js",
          "target": "~/project",
          "chmod": "ugo+rwx"
        }
      ]
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["Lotus-7"],
  "license": {
    "name": "CC-BY-4.0",
    "url": "https://github.com/30-seconds/30-seconds-of-code/blob/master/LICENSE",
    "repo": "https://github.com/30-seconds/30-seconds-of-code"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "React 的 useComponentWillUnmount 钩子",
      "description": "在本实验中，我们将探索 React 中的 useComponentWillUnmount 钩子，它使我们能够在组件卸载和销毁之前立即执行一个回调函数。通过使用此钩子，我们可以执行任何必要的清理任务，例如移除事件监听器或取消任何挂起的请求。本实验将提供使用此钩子的实践经验，并理解其行为，这类似于类组件中的 componentWillUnmount() 生命周期方法。",
      "meta": {
        "title": "掌握 React 的 useComponentWillUnmount 钩子",
        "description": "探索 React 中 useComponentWillUnmount 钩子在无缝组件生命周期管理方面的强大功能。",
        "keywords": "react, usecomponentwillunmount, 组件生命周期, 清理, 钩子"
      },
      "details": {
        "steps": [
          {
            "title": "React 的 useComponentWillUnmount 钩子",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "验证 Web 服务的运行状态",
                "file": "verify1-1.sh",
                "hint": "请点击右下角的“Go Live”以在端口 8080 上运行 Web 服务。然后，你可以刷新“Web 8080”标签页来预览网页。"
              },
              {
                "name": "验证 script.js 修改状态",
                "file": "verify1-2.sh",
                "hint": "请按照步骤完成实验。"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    }
  ]
}
