{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "React useEventListener Hook",
  "description": "In this lab, we will be exploring the use of the useEventListener hook in React. The purpose of this lab is to help you understand how to add event listeners to elements in a React application, and how to clean them up properly to avoid memory leaks. Through practical examples, you will learn how to use this hook to create more interactive and responsive user interfaces.",
  "meta": {
    "title": "Mastering the React useEventListener Hook",
    "description": "Explore the power of the useEventListener hook in React to create interactive and responsive user interfaces.",
    "keywords": "useeventlistener, interactive, react, event listener, user interface"
  },
  "difficulty": "Beginner",
  "time": 5,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "React useEventListener Hook",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify the running status of the web service",
            "file": "verify1-1.sh",
            "hint": "Please click on 'Go Live' in the bottom right corner to run the web service on port 8080. Then, you can refresh the **Web 8080** Tab to preview the web page.",
            "timeout": 0,
            "showstderr": true
          },
          {
            "name": "Verify the status of script.js modification",
            "file": "verify1-2.sh",
            "hint": "Please follow the steps to complete the lab.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": ["react/hooks", "react/jsx", "react/use_state_reducer"]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    },
    "assets": {
      "host01": [
        {
          "file": "index.html",
          "target": "~/project",
          "chmod": "ugo+rwx"
        },
        {
          "file": "script.js",
          "target": "~/project",
          "chmod": "ugo+rwx"
        }
      ]
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["Lotus-7"],
  "license": {
    "name": "CC-BY-4.0",
    "url": "https://github.com/30-seconds/30-seconds-of-code/blob/master/LICENSE",
    "repo": "https://github.com/30-seconds/30-seconds-of-code"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "React useEventListener 钩子",
      "description": "在本实验中，我们将探索在 React 中使用 useEventListener 钩子。本实验的目的是帮助你理解如何向 React 应用程序中的元素添加事件监听器，以及如何正确清理它们以避免内存泄漏。通过实际示例，你将学习如何使用此钩子来创建更具交互性和响应性的用户界面。",
      "meta": {
        "title": "掌握 React useEventListener 钩子",
        "description": "探索 React 中 useEventListener 钩子的强大功能，以创建交互式和响应式用户界面。",
        "keywords": "useeventlistener, 交互式，React, 事件监听器，用户界面"
      },
      "details": {
        "steps": [
          {
            "title": "React useEventListener 钩子",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "验证 Web 服务的运行状态",
                "file": "verify1-1.sh",
                "hint": "请点击右下角的“Go Live”以在端口 8080 上运行 Web 服务。然后，你可以刷新“Web 8080”标签页来预览网页。"
              },
              {
                "name": "验证 script.js 修改状态",
                "file": "verify1-2.sh",
                "hint": "请按照步骤完成实验。"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Hook useEventListener de React",
      "description": "En este laboratorio, exploraremos el uso del hook useEventListener en React. El objetivo de este laboratorio es ayudarte a entender cómo agregar listeners de eventos a los elementos de una aplicación React y cómo eliminarlos correctamente para evitar fugas de memoria. A través de ejemplos prácticos, aprenderás cómo usar este hook para crear interfaces de usuario más interactivas y responsivas.",
      "meta": {
        "title": "Dominando el Hook useEventListener de React",
        "description": "Explora el poder del hook useEventListener en React para crear interfaces de usuario interactivas y responsivas.",
        "keywords": "useeventlistener, interactivo, react, listener de eventos, interfaz de usuario"
      },
      "details": {
        "steps": [
          {
            "title": "Hook useEventListener de React",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Verificar el estado de ejecución del servicio web",
                "file": "verify1-1.sh",
                "hint": "Haga clic en 'Go Live' en la esquina inferior derecha para ejecutar el servicio web en el puerto 8080. Luego, puede actualizar la pestaña **Web 8080** para previsualizar la página web."
              },
              {
                "name": "Verificar el estado de la modificación de script.js",
                "file": "verify1-2.sh",
                "hint": "Siga los pasos para completar el laboratorio."
              }
            ]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Hook useEventListener de React",
      "description": "Dans ce laboratoire, nous allons explorer l'utilisation du hook useEventListener dans React. Le but de ce laboratoire est de vous aider à comprendre comment ajouter des écouteurs d'événements à des éléments dans une application React, et comment les nettoyer correctement pour éviter les fuites mémoire. Par des exemples pratiques, vous allez apprendre à utiliser ce hook pour créer des interfaces utilisateur plus interactives et réactives.",
      "meta": {
        "title": "Maîtriser le hook useEventListener de React",
        "description": "Explorez le pouvoir du hook useEventListener dans React pour créer des interfaces utilisateur interactives et réactives.",
        "keywords": "useeventlistener, interactif, react, écouteur d'événement, interface utilisateur"
      },
      "details": {
        "steps": [
          {
            "title": "Hook useEventListener de React",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Vérifiez le statut d'exécution du service web",
                "file": "verify1-1.sh",
                "hint": "Veuillez cliquer sur 'Go Live' dans le coin inférieur droit pour exécuter le service web sur le port 8080. Ensuite, vous pouvez actualiser l'onglet **Web 8080** pour prévisualiser la page web."
              },
              {
                "name": "Vérifiez l'état de la modification de script.js",
                "file": "verify1-2.sh",
                "hint": "Veuillez suivre les étapes pour terminer le laboratoire."
              }
            ]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "React useEventListener-Hook",
      "description": "In diesem Lab werden wir die Verwendung des useEventListener-Hooks in React untersuchen. Ziel dieses Labs ist es, Ihnen zu helfen, zu verstehen, wie man Ereignislistener zu Elementen in einer React-Anwendung hinzufügt und wie man sie richtig aufräumt, um Speicherlecks zu vermeiden. Anhand von praktischen Beispielen lernen Sie, wie man diesen Hook verwendet, um interaktivere und reaktionsschnellere Benutzeroberflächen zu erstellen.",
      "meta": {
        "title": "Meisterhaft mit dem React useEventListener-Hook umgehen",
        "description": "Entdecken Sie die Macht des useEventListener-Hooks in React, um interaktive und reaktionsschnellere Benutzeroberflächen zu erstellen.",
        "keywords": "useeventlistener, interaktiv, react, ereignislistener, benutzeroberfläche"
      },
      "details": {
        "steps": [
          {
            "title": "React useEventListener-Hook",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Überprüfen des Laufzustands des Webdiensts",
                "file": "verify1-1.sh",
                "hint": "Bitte klicken Sie in der unteren rechten Ecke auf 'Go Live', um den Webdienst auf Port 8080 auszuführen. Anschließend können Sie die Registerkarte **Web 8080** aktualisieren, um die Webseite zu previewen."
              },
              {
                "name": "Überprüfen des Status der Änderungen in script.js",
                "file": "verify1-2.sh",
                "hint": "Bitte folgen Sie den Schritten, um das Lab abzuschließen."
              }
            ]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "React の useEventListener フック",
      "description": "この実験では、React における useEventListener フックの使用方法を検討します。この実験の目的は、React アプリケーションの要素にイベントリスナーを追加する方法と、メモリリークを回避するために適切にクリーンアップする方法を理解することです。実際の例を通じて、このフックを使用してよりインタラクティブで応答性の高いユーザーインターフェイスを作成する方法を学びます。",
      "meta": {
        "title": "React の useEventListener フックをマスターする",
        "description": "React における useEventListener フックの力を探求して、インタラクティブで応答性の高いユーザーインターフェイスを作成しましょう。",
        "keywords": "useeventlistener, インタラクティブ，react, イベントリスナー, ユーザーインターフェイス"
      },
      "details": {
        "steps": [
          {
            "title": "React の useEventListener フック",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "ウェブサービスの実行状態を確認する",
                "file": "verify1-1.sh",
                "hint": "右下隅の「Go Live」をクリックして、ポート 8080 でウェブサービスを実行してください。その後、**Web 8080** タブを更新して、ウェブページをプレビューできます。"
              },
              {
                "name": "script.js の変更状態を確認する",
                "file": "verify1-2.sh",
                "hint": "実験を完了するための手順に従ってください。"
              }
            ]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "React хук useEventListener",
      "description": "В этом лабораторном задании мы будем изучать использование хука useEventListener в React. Цель этого лабораторного задания - помочь вам понять, как добавлять слушатели событий к элементам в React-приложении и как правильно их очищать, чтобы избежать утечки памяти. С помощью практических примеров вы научитесь использовать этот хук для создания более интерактивных и отзывчивых пользовательских интерфейсов.",
      "meta": {
        "title": "Мастерство в React хук useEventListener",
        "description": "Исследуйте мощь хука useEventListener в React для создания интерактивных и отзывчивых пользовательских интерфейсов.",
        "keywords": "useeventlistener, интерактивный, react, слушатель события, пользовательский интерфейс"
      },
      "details": {
        "steps": [
          {
            "title": "React хук useEventListener",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "Проверить статус работы веб-сервиса",
                "file": "verify1-1.sh",
                "hint": "Пожалуйста, нажмите кнопку 'Go Live' в нижнем правом углу, чтобы запустить веб-сервис на порту 8080. Затем вы можете обновить вкладку **Web 8080**, чтобы просмотреть веб-страницу."
              },
              {
                "name": "Проверить статус изменения script.js",
                "file": "verify1-2.sh",
                "hint": "Пожалуйста, следуйте шагам, чтобы завершить лабораторную работу."
              }
            ]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    },
    {
      "lang": "ko",
      "title": "React useEventListener 훅",
      "description": "이 랩에서는 React 에서 useEventListener 훅의 사용법을 살펴봅니다. 이 랩의 목적은 React 애플리케이션에서 요소에 이벤트 리스너를 추가하고 메모리 누수를 방지하기 위해 이를 적절하게 정리하는 방법을 이해하도록 돕는 것입니다. 실용적인 예제를 통해 이 훅을 사용하여 더욱 인터랙티브하고 반응성이 뛰어난 사용자 인터페이스를 만드는 방법을 배우게 됩니다.",
      "meta": {
        "title": "React useEventListener 훅 마스터하기 - 인터랙티브 UI 구현",
        "description": "React 의 useEventListener 훅을 활용하여 인터랙티브하고 반응성이 뛰어난 사용자 인터페이스를 구축하는 방법을 알아보세요.",
        "keywords": "useeventlistener, 인터랙티브, react, 이벤트 리스너, 사용자 인터페이스, UI, React 훅"
      },
      "details": {
        "steps": [
          {
            "title": "React useEventListener 훅",
            "text": "ko/step1.md",
            "verify": [
              {
                "name": "웹 서비스 실행 상태 확인",
                "file": "verify1-1.sh",
                "hint": "오른쪽 하단의 'Go Live'를 클릭하여 웹 서비스를 포트 8080 에서 실행하세요. 그런 다음, **Web 8080** 탭을 새로 고쳐 웹 페이지를 미리 볼 수 있습니다."
              },
              {
                "name": "script.js 수정 상태 확인",
                "file": "verify1-2.sh",
                "hint": "랩을 완료하려면 단계를 따르세요."
              }
            ]
          }
        ],
        "intro": {
          "text": "ko/intro.md",
          "title": "소개"
        },
        "finish": {
          "text": "ko/finish.md",
          "title": "요약"
        }
      }
    },
    {
      "lang": "pt",
      "title": "React useEventListener Hook",
      "description": "Neste laboratório, exploraremos o uso do hook useEventListener no React. O objetivo deste laboratório é ajudá-lo a entender como adicionar event listeners (ouvintes de eventos) a elementos em uma aplicação React e como limpá-los corretamente para evitar vazamentos de memória. Através de exemplos práticos, você aprenderá como usar este hook para criar interfaces de usuário mais interativas e responsivas.",
      "meta": {
        "title": "Dominando o Hook useEventListener do React: Guia Prático",
        "description": "Explore o poder do hook useEventListener no React para criar interfaces de usuário interativas e responsivas. Aprenda a gerenciar eventos de forma eficiente e evitar vazamentos de memória.",
        "keywords": "useeventlistener, react, ouvinte de evento, interface do usuário, eventos react, hooks react"
      },
      "details": {
        "steps": [
          {
            "title": "React useEventListener Hook",
            "text": "pt/step1.md",
            "verify": [
              {
                "name": "Verificar o status de execução do serviço web",
                "file": "verify1-1.sh",
                "hint": "Por favor, clique em 'Go Live' (Iniciar) no canto inferior direito para executar o serviço web na porta 8080. Em seguida, você pode atualizar a aba **Web 8080** para visualizar a página web."
              },
              {
                "name": "Verificar o status da modificação do script.js",
                "file": "verify1-2.sh",
                "hint": "Por favor, siga os passos para completar o laboratório."
              }
            ]
          }
        ],
        "intro": {
          "text": "pt/intro.md",
          "title": "Introdução"
        },
        "finish": {
          "text": "pt/finish.md",
          "title": "Resumo"
        }
      }
    }
  ]
}
