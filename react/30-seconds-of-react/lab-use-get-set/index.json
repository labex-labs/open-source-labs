{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "React useGetSet Hook",
  "description": "In this lab, we will be exploring the use of the useGetSet hook in React. This hook allows us to create a stateful value and retrieve or update its value using getter and setter functions respectively. By the end of this lab, you will have a better understanding of how to use this hook in your React applications.",
  "meta": {
    "title": "Mastering React's useGetSet Hook",
    "description": "Explore the power of the useGetSet hook in React to create stateful values and manage their state efficiently.",
    "keywords": "usegetset, react, state management, web development, hooks"
  },
  "difficulty": "Beginner",
  "time": 10,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "React useGetSet Hook",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify the running status of the web service",
            "file": "verify1-1.sh",
            "hint": "Please click on 'Go Live' in the bottom right corner to run the web service on port 8080. Then, you can refresh the **Web 8080** Tab to preview the web page.",
            "timeout": 0,
            "showstderr": true
          },
          {
            "name": "Verify the status of script.js modification",
            "file": "verify1-2.sh",
            "hint": "Please follow the steps to complete the lab.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "react/event_handling",
          "react/hooks",
          "react/jsx",
          "react/use_state_reducer"
        ]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    },
    "assets": {
      "host01": [
        {
          "file": "index.html",
          "target": "~/project",
          "chmod": "ugo+rwx"
        },
        {
          "file": "script.js",
          "target": "~/project",
          "chmod": "ugo+rwx"
        }
      ]
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["Lotus-7"],
  "license": {
    "name": "CC-BY-4.0",
    "url": "https://github.com/30-seconds/30-seconds-of-code/blob/master/LICENSE",
    "repo": "https://github.com/30-seconds/30-seconds-of-code"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "React useGetSet 钩子",
      "description": "在本实验中，我们将探索如何在 React 中使用 useGetSet 钩子。这个钩子使我们能够创建一个有状态的值，并分别使用获取器和设置器函数来检索或更新其值。在本实验结束时，你将更好地理解如何在你的 React 应用程序中使用这个钩子。",
      "meta": {
        "title": "掌握 React 的 useGetSet 钩子",
        "description": "探索 React 中 useGetSet 钩子的强大功能，以创建有状态的值并有效地管理其状态。",
        "keywords": "usegetset, react, 状态管理, 网页开发, 钩子"
      },
      "details": {
        "steps": [
          {
            "title": "React useGetSet 钩子",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "验证 Web 服务的运行状态",
                "file": "verify1-1.sh",
                "hint": "请点击右下角的“Go Live”以在端口 8080 上运行 Web 服务。然后，你可以刷新“Web 8080”标签页来预览网页。"
              },
              {
                "name": "验证 script.js 修改状态",
                "file": "verify1-2.sh",
                "hint": "请按照步骤完成实验。"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "React useGetSet Hook",
      "description": "En este laboratorio, exploraremos el uso del hook useGetSet en React. Este hook nos permite crear un valor con estado y recuperar o actualizar su valor utilizando funciones getter y setter respectivamente. Al final de este laboratorio, tendrás una mejor comprensión de cómo utilizar este hook en tus aplicaciones React.",
      "meta": {
        "title": "Dominando el hook useGetSet de React",
        "description": "Explora el poder del hook useGetSet en React para crear valores con estado y administrar su estado de manera eficiente.",
        "keywords": "usegetset, react, gestión de estado, desarrollo web, hooks"
      },
      "details": {
        "steps": [
          {
            "title": "React useGetSet Hook",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Verificar el estado de ejecución del servicio web",
                "file": "verify1-1.sh",
                "hint": "Haga clic en 'Go Live' en la esquina inferior derecha para ejecutar el servicio web en el puerto 8080. Luego, puede actualizar la pestaña **Web 8080** para previsualizar la página web."
              },
              {
                "name": "Verificar el estado de la modificación de script.js",
                "file": "verify1-2.sh",
                "hint": "Siga los pasos para completar el laboratorio."
              }
            ]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Hook useGetSet de React",
      "description": "Dans ce laboratoire, nous allons explorer l'utilisation du hook useGetSet dans React. Ce hook nous permet de créer une valeur avec état et de récupérer ou de mettre à jour sa valeur en utilisant respectivement des fonctions getter et setter. À la fin de ce laboratoire, vous aurez une meilleure compréhension de la manière d'utiliser ce hook dans vos applications React.",
      "meta": {
        "title": "Maîtriser le hook useGetSet de React",
        "description": "Explorez le pouvoir du hook useGetSet dans React pour créer des valeurs avec état et gérer efficacement leur état.",
        "keywords": "usegetset, react, gestion d'état, développement web, hooks"
      },
      "details": {
        "steps": [
          {
            "title": "Hook useGetSet de React",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Vérifier le statut d'exécution du service web",
                "file": "verify1-1.sh",
                "hint": "Veuillez cliquer sur 'Go Live' dans le coin inférieur droit pour exécuter le service web sur le port 8080. Ensuite, vous pouvez rafraîchir l'onglet **Web 8080** pour prévisualiser la page web."
              },
              {
                "name": "Vérifier le statut de la modification de script.js",
                "file": "verify1-2.sh",
                "hint": "Veuillez suivre les étapes pour terminer le laboratoire."
              }
            ]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "React useGetSet-Hook",
      "description": "In diesem Lab werden wir die Verwendung des useGetSet-Hooks in React untersuchen. Dieser Hook ermöglicht es uns, einen zustandsbehafteten Wert zu erstellen und dessen Wert mithilfe von Getter- und Setter-Funktionen jeweils abzurufen oder zu aktualisieren. Am Ende dieses Labs werden Sie ein besseres Verständnis dafür haben, wie Sie diesen Hook in Ihren React-Anwendungen verwenden.",
      "meta": {
        "title": "Meisterhaftes Verwenden des React useGetSet-Hooks",
        "description": "Erkunden Sie die Macht des useGetSet-Hooks in React, um zustandsbehaftete Werte zu erstellen und ihren Zustand effizient zu verwalten.",
        "keywords": "usegetset, react, zustandsverwaltung, webdesign, hooks"
      },
      "details": {
        "steps": [
          {
            "title": "React useGetSet-Hook",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Verifizieren des Laufzustands des Webdiensts",
                "file": "verify1-1.sh",
                "hint": "Bitte klicken Sie auf 'Go Live' in der unteren rechten Ecke, um den Webdienst auf Port 8080 auszuführen. Anschließend können Sie die Registerkarte **Web 8080** aktualisieren, um die Webseite anzuschauen."
              },
              {
                "name": "Verifizieren des Status der Änderungen in script.js",
                "file": "verify1-2.sh",
                "hint": "Bitte folgen Sie den Schritten, um das Lab abzuschließen."
              }
            ]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "ReactのuseGetSetフック",
      "description": "この実験では、ReactにおけるuseGetSetフックの使用方法を検討します。このフックを使用することで、状態付きの値を作成し、それぞれゲッター関数とセッター関数を使ってその値を取得または更新することができます。この実験が終了するまでに、Reactアプリケーションでこのフックをどのように使用するかをより深く理解するようになります。",
      "meta": {
        "title": "ReactのuseGetSetフックをマスターする",
        "description": "ReactにおけるuseGetSetフックの力を探求して、状態付きの値を作成し、その状態を効率的に管理しましょう。",
        "keywords": "usegetset, react, 状態管理, ウェブ開発, フック"
      },
      "details": {
        "steps": [
          {
            "title": "ReactのuseGetSetフック",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "ウェブサービスの実行状態を確認する",
                "file": "verify1-1.sh",
                "hint": "右下隅の「Go Live」をクリックして、ポート8080でウェブサービスを実行してください。その後、**Web 8080**タブを更新して、ウェブページをプレビューできます。"
              },
              {
                "name": "script.jsの変更状態を確認する",
                "file": "verify1-2.sh",
                "hint": "実験を完了する手順に従ってください。"
              }
            ]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "React хук useGetSet",
      "description": "В этом практическом занятии мы будем изучать использование хука useGetSet в React. Этот хук позволяет нам создавать состояние и получать или обновлять его значение с использованием функций-аксессоров и функций-менеджеров соответственно. В конце практического занятия вы будете лучше понимать, как использовать этот хук в своих React-приложениях.",
      "meta": {
        "title": "Мастерство в использовании хука useGetSet React",
        "description": "Изучите мощь хука useGetSet в React для создания состояний и эффективного управления их состоянием.",
        "keywords": "usegetset, react, управление состоянием, веб-разработка, хуки"
      },
      "details": {
        "steps": [
          {
            "title": "React хук useGetSet",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "Проверить статус работы веб-сервиса",
                "file": "verify1-1.sh",
                "hint": "Пожалуйста, нажмите кнопку 'Go Live' в нижнем правом углу, чтобы запустить веб-сервис на порту 8080. Затем вы можете обновить вкладку **Web 8080**, чтобы просмотреть веб-страницу."
              },
              {
                "name": "Проверить статус изменения script.js",
                "file": "verify1-2.sh",
                "hint": "Пожалуйста, следуйте шагам, чтобы завершить практическое занятие."
              }
            ]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    }
  ]
}
