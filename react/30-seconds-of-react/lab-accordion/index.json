{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Building Collapsible React Accordion",
  "description": "In this lab, we will explore how to implement a collapsible accordion menu in React using components and hooks. The purpose of this lab is to provide a hands-on experience in building a functional accordion menu with multiple collapsible content elements. By the end of this lab, you will have a good understanding of how to use React to create dynamic and interactive user interfaces.",
  "meta": {
    "title": "Implement Collapsible Accordion Menu | React Tutorial",
    "description": "Learn how to create a collapsible accordion menu with multiple content elements using React components and hooks. Hands-on experience for dynamic user interfaces.",
    "keywords": "React, Accordion, Collapsible, User Interface, Dynamic Content"
  },
  "difficulty": "Beginner",
  "time": 5,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Collapsible Accordion",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify the running status of the web service",
            "file": "verify1-1.sh",
            "hint": "Please click on 'Go Live' in the bottom right corner to run the web service on port 8080. Then, you can refresh the **Web 8080** Tab to preview the web page.",
            "timeout": 0,
            "showstderr": true
          },
          {
            "name": "Verify the status of script.js modification",
            "file": "verify1-2.sh",
            "hint": "Please follow the steps to complete the lab.",
            "timeout": 0,
            "showstderr": true
          },
          {
            "name": "Verify the status of style.css modification",
            "file": "verify1-3.sh",
            "hint": "Please follow the steps to complete the lab.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "react/conditional_render",
          "react/event_handling",
          "react/hooks",
          "react/jsx",
          "react/use_state_reducer"
        ]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    },
    "assets": {
      "host01": [
        {
          "file": "index.html",
          "target": "~/project",
          "chmod": "ugo+rwx"
        },
        {
          "file": "script.js",
          "target": "~/project",
          "chmod": "ugo+rwx"
        },
        {
          "file": "style.css",
          "target": "~/project",
          "chmod": "ugo+rwx"
        }
      ]
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["Lotus-7"],
  "license": {
    "name": "CC-BY-4.0",
    "url": "https://github.com/30-seconds/30-seconds-of-code/blob/master/LICENSE",
    "repo": "https://github.com/30-seconds/30-seconds-of-code"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "构建可折叠的 React 手风琴",
      "description": "在本实验中，我们将探索如何使用组件和钩子在 React 中实现一个可折叠的手风琴菜单。本实验的目的是提供一个实践经验，用于构建一个具有多个可折叠内容元素的功能性手风琴菜单。在本实验结束时，你将很好地理解如何使用 React 创建动态和交互式用户界面。",
      "meta": {
        "title": "实现可折叠手风琴菜单 | React 教程",
        "description": "学习如何使用 React 组件和钩子创建一个带有多个内容元素的可折叠手风琴菜单。获得构建动态用户界面的实践经验。",
        "keywords": "React, 手风琴，可折叠，用户界面，动态内容"
      },
      "details": {
        "steps": [
          {
            "title": "可折叠手风琴",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "验证 Web 服务的运行状态",
                "file": "verify1-1.sh",
                "hint": "请点击右下角的“Go Live”以在端口 8080 上运行 Web 服务。然后，你可以刷新“Web 8080”标签页来预览网页。"
              },
              {
                "name": "验证 script.js 修改状态",
                "file": "verify1-2.sh",
                "hint": "请按照步骤完成实验。"
              },
              {
                "name": "验证 style.css 修改状态",
                "file": "verify1-3.sh",
                "hint": "请按照步骤完成实验。"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Construyendo un acordeón desplegable en React",
      "description": "En este laboratorio, exploraremos cómo implementar un menú acordeón desplegable en React utilizando componentes y hooks. El objetivo de este laboratorio es proporcionar una experiencia práctica en la construcción de un menú acordeón funcional con múltiples elementos de contenido desplegables. Al final de este laboratorio, tendrás una buena comprensión de cómo utilizar React para crear interfaces de usuario dinámicas e interactivas.",
      "meta": {
        "title": "Implementar menú acordeón desplegable | Tutorial de React",
        "description": "Aprende a crear un menú acordeón desplegable con múltiples elementos de contenido utilizando componentes y hooks de React. Experiencia práctica para interfaces de usuario dinámicas.",
        "keywords": "React, Acordeón, Desplegable, Interfaz de usuario, Contenido dinámico"
      },
      "details": {
        "steps": [
          {
            "title": "Menú desplegable tipo acordeón",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Verificar el estado de ejecución del servicio web",
                "file": "verify1-1.sh",
                "hint": "Haga clic en 'Go Live' en la esquina inferior derecha para ejecutar el servicio web en el puerto 8080. Luego, puede actualizar la pestaña **Web 8080** para previsualizar la página web."
              },
              {
                "name": "Verificar el estado de la modificación de script.js",
                "file": "verify1-2.sh",
                "hint": "Siga los pasos para completar el laboratorio."
              },
              {
                "name": "Verificar el estado de la modificación de style.css",
                "file": "verify1-3.sh",
                "hint": "Siga los pasos para completar el laboratorio."
              }
            ]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Création d'un menu accordéon rétractable en React",
      "description": "Dans ce laboratoire, nous allons explorer la manière de mettre en œuvre un menu accordéon rétractable en React en utilisant des composants et des hooks. Le but de ce laboratoire est de fournir une expérience pratique dans la construction d'un menu accordéon fonctionnel avec plusieurs éléments de contenu rétractables. À la fin de ce laboratoire, vous aurez une bonne compréhension de la manière d'utiliser React pour créer des interfaces utilisateur dynamiques et interactives.",
      "meta": {
        "title": "Implémenter un menu accordéon rétractable | Tutoriel React",
        "description": "Découvrez comment créer un menu accordéon rétractable avec plusieurs éléments de contenu à l'aide de composants React et de hooks. Expérience pratique pour des interfaces utilisateur dynamiques.",
        "keywords": "React, Accordéon, Rétractable, Interface utilisateur, Contenu dynamique"
      },
      "details": {
        "steps": [
          {
            "title": "Menu accordéon rétractable",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Vérifier le statut d'exécution du service web",
                "file": "verify1-1.sh",
                "hint": "Veuillez cliquer sur 'Go Live' dans le coin inférieur droit pour exécuter le service web sur le port 8080. Ensuite, vous pouvez actualiser l'onglet **Web 8080** pour prévisualiser la page web."
              },
              {
                "name": "Vérifier le statut de modification de script.js",
                "file": "verify1-2.sh",
                "hint": "Veuillez suivre les étapes pour terminer le laboratoire."
              },
              {
                "name": "Vérifier le statut de modification de style.css",
                "file": "verify1-3.sh",
                "hint": "Veuillez suivre les étapes pour terminer le laboratoire."
              }
            ]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Erstellen eines zusammenziehbaren React-Akkordeons",
      "description": "In diesem Lab werden wir untersuchen, wie man ein zusammenziehbares Akkordeon-Menü in React mit Komponenten und Hooks implementiert. Das Ziel dieses Labs ist es, einen praxisnahen Einblick in das Erstellen eines funktionellen Akkordeon-Menüs mit mehreren zusammenziehbaren Inhaltelementen zu geben. Am Ende dieses Labs werden Sie gut verstehen, wie man React verwendet, um dynamische und interaktive Benutzeroberflächen zu erstellen.",
      "meta": {
        "title": "Zusammenziehbares Akkordeon-Menü implementieren | React-Tutorial",
        "description": "Lernen Sie, wie man ein zusammenziehbares Akkordeon-Menü mit mehreren Inhaltelementen mithilfe von React-Komponenten und -Hooks erstellt. Praxisnaher Einblick in dynamische Benutzeroberflächen.",
        "keywords": "React, Akkordeon, zusammenziehbar, Benutzeroberfläche, dynamischer Inhalt"
      },
      "details": {
        "steps": [
          {
            "title": "Zusammenziehbares Akkordeon",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Überprüfen des Laufzustands des Webdiensts",
                "file": "verify1-1.sh",
                "hint": "Bitte klicken Sie in der unteren rechten Ecke auf 'Go Live', um den Webdienst auf Port 8080 auszuführen. Anschließend können Sie die Registerkarte **Web 8080** aktualisieren, um die Webseite zu previewen."
              },
              {
                "name": "Überprüfen des Status der Änderungen in script.js",
                "file": "verify1-2.sh",
                "hint": "Bitte folgen Sie den Schritten, um das Lab abzuschließen."
              },
              {
                "name": "Überprüfen des Status der Änderungen in style.css",
                "file": "verify1-3.sh",
                "hint": "Bitte folgen Sie den Schritten, um das Lab abzuschließen."
              }
            ]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "折りたたみ可能な React アコーディオンの構築",
      "description": "この実験では、コンポーネントとフックを使用して React で折りたたみ可能なアコーディオンメニューを実装する方法を探ります。この実験の目的は、複数の折りたたみ可能なコンテンツ要素を持つ機能的なアコーディオンメニューを構築する実践的な経験を提供することです。この実験が終了するまでに、React を使用して動的で対話型のユーザーインターフェイスを作成する方法を十分に理解しているようになります。",
      "meta": {
        "title": "折りたたみ可能なアコーディオンメニューを実装する | React チュートリアル",
        "description": "React コンポーネントとフックを使って、複数のコンテンツ要素を持つ折りたたみ可能なアコーディオンメニューを作成する方法を学びましょう。動的なユーザーインターフェイスのための実践的な経験。",
        "keywords": "React, アコーディオン，折りたたみ可能，ユーザーインターフェイス，動的コンテンツ"
      },
      "details": {
        "steps": [
          {
            "title": "折りたたみ可能なアコーディオン",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "ウェブサービスの実行状態を確認する",
                "file": "verify1-1.sh",
                "hint": "右下隅の「Go Live」をクリックして、ポート 8080 でウェブサービスを実行してください。その後、**Web 8080**タブを更新してウェブページをプレビューできます。"
              },
              {
                "name": "script.js の変更状態を確認する",
                "file": "verify1-2.sh",
                "hint": "実験を完了するための手順に従ってください。"
              },
              {
                "name": "style.css の変更状態を確認する",
                "file": "verify1-3.sh",
                "hint": "実験を完了するための手順に従ってください。"
              }
            ]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Создание свертывающегося аккордеона в React",
      "description": "В этом практическом занятии мы изучим, как реализовать свертывающееся аккордеонное меню в React с использованием компонентов и хуков. Цель этого практического занятия - дать возможность получить практический опыт в создании функционального аккордеонного меню с несколькими свертывающимися элементами содержимого. В конце этого практического занятия вы хорошо освоите методы создания динамических и интерактивных пользовательских интерфейсов с использованием React.",
      "meta": {
        "title": "Реализация свертывающегося аккордеонного меню | Руководство по React",
        "description": "Изучите, как создать свертывающееся аккордеонное меню с несколькими элементами содержимого с использованием компонентов и хуков React. Практический опыт для создания динамических пользовательских интерфейсов.",
        "keywords": "React, Аккордеон, Свертывающийся, Пользовательский интерфейс,Динамическое содержимое"
      },
      "details": {
        "steps": [
          {
            "title": "Свертывающийся аккордеон",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "Проверить статус работы веб-сервиса",
                "file": "verify1-1.sh",
                "hint": "Пожалуйста, нажмите кнопку 'Go Live' в нижнем правом углу, чтобы запустить веб-сервис на порту 8080. Затем вы можете обновить вкладку **Web 8080**, чтобы просмотреть веб-страницу."
              },
              {
                "name": "Проверить статус изменения script.js",
                "file": "verify1-2.sh",
                "hint": "Пожалуйста, следуйте шагам для завершения практического занятия."
              },
              {
                "name": "Проверить статус изменения style.css",
                "file": "verify1-3.sh",
                "hint": "Пожалуйста, следуйте шагам для завершения практического занятия."
              }
            ]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    },
    {
      "lang": "ko",
      "title": "React 를 이용한 접을 수 있는 아코디언 구현",
      "description": "이 랩에서는 컴포넌트와 훅을 사용하여 React 에서 접을 수 있는 아코디언 메뉴를 구현하는 방법을 살펴봅니다. 이 랩의 목적은 여러 개의 접을 수 있는 콘텐츠 요소를 갖춘 기능적인 아코디언 메뉴를 구축하는 실질적인 경험을 제공하는 것입니다. 이 랩을 마치면 React 를 사용하여 동적이고 상호 작용적인 사용자 인터페이스를 만드는 방법에 대한 이해를 높일 수 있습니다.",
      "meta": {
        "title": "접을 수 있는 아코디언 메뉴 구현 | React 튜토리얼",
        "description": "React 컴포넌트와 훅을 사용하여 여러 콘텐츠 요소가 있는 접을 수 있는 아코디언 메뉴를 만드는 방법을 알아보세요. 동적 사용자 인터페이스를 위한 실습 경험 제공.",
        "keywords": "React, 아코디언, 접기, 사용자 인터페이스, 동적 콘텐츠, 리액트 아코디언 메뉴, 반응형 아코디언"
      },
      "details": {
        "steps": [
          {
            "title": "접을 수 있는 아코디언",
            "text": "ko/step1.md",
            "verify": [
              {
                "name": "웹 서비스 실행 상태 확인",
                "file": "verify1-1.sh",
                "hint": "오른쪽 하단의 'Go Live'를 클릭하여 웹 서비스를 포트 8080 에서 실행하세요. 그런 다음, **Web 8080** 탭을 새로 고쳐 웹 페이지를 미리 볼 수 있습니다."
              },
              {
                "name": "script.js 수정 상태 확인",
                "file": "verify1-2.sh",
                "hint": "랩을 완료하려면 단계를 따르세요."
              },
              {
                "name": "style.css 수정 상태 확인",
                "file": "verify1-3.sh",
                "hint": "랩을 완료하려면 단계를 따르세요."
              }
            ]
          }
        ],
        "intro": {
          "text": "ko/intro.md",
          "title": "소개"
        },
        "finish": {
          "text": "ko/finish.md",
          "title": "요약"
        }
      }
    },
    {
      "lang": "pt",
      "title": "Construindo um Acordeão Recolhível em React",
      "description": "Neste laboratório, exploraremos como implementar um menu acordeão recolhível em React usando componentes e hooks. O objetivo deste laboratório é fornecer uma experiência prática na construção de um menu acordeão funcional com múltiplos elementos de conteúdo recolhíveis. Ao final deste laboratório, você terá uma boa compreensão de como usar React para criar interfaces de usuário dinâmicas e interativas.",
      "meta": {
        "title": "Implemente um Menu Acordeão Recolhível | Tutorial React",
        "description": "Aprenda a criar um menu acordeão recolhível com múltiplos elementos de conteúdo usando componentes e hooks React. Experiência prática para interfaces de usuário dinâmicas.",
        "keywords": "React, Acordeão, Recolhível, Interface do Usuário, Conteúdo Dinâmico"
      },
      "details": {
        "steps": [
          {
            "title": "Acordeão Recolhível",
            "text": "pt/step1.md",
            "verify": [
              {
                "name": "Verifique o status de execução do serviço web",
                "file": "verify1-1.sh",
                "hint": "Por favor, clique em 'Go Live' no canto inferior direito para executar o serviço web na porta 8080. Em seguida, você pode atualizar a aba **Web 8080** para visualizar a página web."
              },
              {
                "name": "Verifique o status da modificação do script.js",
                "file": "verify1-2.sh",
                "hint": "Por favor, siga os passos para completar o laboratório."
              },
              {
                "name": "Verifique o status da modificação do style.css",
                "file": "verify1-3.sh",
                "hint": "Por favor, siga os passos para completar o laboratório."
              }
            ]
          }
        ],
        "intro": {
          "text": "pt/intro.md",
          "title": "Introdução"
        },
        "finish": {
          "text": "pt/finish.md",
          "title": "Resumo"
        }
      }
    }
  ]
}
