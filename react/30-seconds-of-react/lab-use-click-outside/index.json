{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "React useClickOutside Hook",
  "description": "In this lab, we will be learning how to use the useClickOutside hook in React to handle click events that occur outside of a specific component. This custom hook allows us to easily detect when a user clicks outside of a specific component and perform an action based on that event. By the end of the lab, you will have a better understanding of how to use this hook to create more interactive and user-friendly components in your React applications.",
  "meta": {
    "title": "Mastering the useClickOutside Hook in React",
    "description": "Learn how to use the useClickOutside hook in React to handle click events outside of a specific component.",
    "keywords": "click events, user experience, useclickoutside, react, custom hooks"
  },
  "difficulty": "Beginner",
  "time": 5,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "React useClickOutside Hook",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify the running status of the web service",
            "file": "verify1-1.sh",
            "hint": "Please click on 'Go Live' in the bottom right corner to run the web service on port 8080. Then, you can refresh the **Web 8080** Tab to preview the web page.",
            "timeout": 0,
            "showstderr": true
          },
          {
            "name": "Verify the status of script.js modification",
            "file": "verify1-2.sh",
            "hint": "Please follow the steps to complete the lab.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "react/css_in_react",
          "react/event_handling",
          "react/hooks",
          "react/jsx"
        ]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    },
    "assets": {
      "host01": [
        {
          "file": "index.html",
          "target": "~/project",
          "chmod": "ugo+rwx"
        },
        {
          "file": "script.js",
          "target": "~/project",
          "chmod": "ugo+rwx"
        }
      ]
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["Lotus-7"],
  "license": {
    "name": "CC-BY-4.0",
    "url": "https://github.com/30-seconds/30-seconds-of-code/blob/master/LICENSE",
    "repo": "https://github.com/30-seconds/30-seconds-of-code"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "React 的 useClickOutside 钩子",
      "description": "在本实验中，我们将学习如何在 React 中使用 useClickOutside 钩子来处理在特定组件外部发生的点击事件。这个自定义钩子使我们能够轻松检测用户何时在特定组件外部点击，并根据该事件执行一个操作。在本实验结束时，你将更好地理解如何使用这个钩子在你的 React 应用程序中创建更具交互性和用户友好性的组件。",
      "meta": {
        "title": "掌握 React 中的 useClickOutside 钩子",
        "description": "学习如何在 React 中使用 useClickOutside 钩子来处理特定组件外部的点击事件。",
        "keywords": "点击事件，用户体验，useclickoutside, React, 自定义钩子"
      },
      "details": {
        "steps": [
          {
            "title": "React 的 useClickOutside 钩子",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "验证网络服务的运行状态",
                "file": "verify1-1.sh",
                "hint": "请点击右下角的“Go Live”以在端口 8080 上运行网络服务。然后，你可以刷新“Web 8080”标签页来预览网页。"
              },
              {
                "name": "验证 script.js 修改状态",
                "file": "verify1-2.sh",
                "hint": "请按照步骤完成实验。"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "React useClickOutside Hook",
      "description": "En este laboratorio, aprenderemos a usar el hook useClickOutside en React para manejar eventos de clic que ocurren fuera de un componente específico. Este hook personalizado nos permite detectar fácilmente cuando un usuario hace clic fuera de un componente específico y realizar una acción basada en ese evento. Al final del laboratorio, tendrás una mejor comprensión de cómo usar este hook para crear componentes más interactivos y amigables para el usuario en tus aplicaciones React.",
      "meta": {
        "title": "Dominando el hook useClickOutside en React",
        "description": "Aprende a usar el hook useClickOutside en React para manejar eventos de clic fuera de un componente específico.",
        "keywords": "eventos de clic, experiencia del usuario, useclickoutside, react, hooks personalizados"
      },
      "details": {
        "steps": [
          {
            "title": "React useClickOutside Hook",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Verificar el estado de ejecución del servicio web",
                "file": "verify1-1.sh",
                "hint": "Haga clic en 'Go Live' en la esquina inferior derecha para ejecutar el servicio web en el puerto 8080. Luego, puede actualizar la pestaña **Web 8080** para previsualizar la página web."
              },
              {
                "name": "Verificar el estado de la modificación de script.js",
                "file": "verify1-2.sh",
                "hint": "Siga los pasos para completar el laboratorio."
              }
            ]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "React useClickOutside Hook",
      "description": "Dans ce laboratoire, nous allons apprendre à utiliser le crochet useClickOutside en React pour gérer les événements de clic qui se produisent en dehors d'un composant spécifique. Ce crochet personnalisé nous permet de détecter facilement lorsqu'un utilisateur clique en dehors d'un composant spécifique et d'effectuer une action en fonction de cet événement. À la fin du laboratoire, vous aurez une meilleure compréhension de la manière d'utiliser ce crochet pour créer des composants plus interactifs et conviviaux dans vos applications React.",
      "meta": {
        "title": "Maîtriser le crochet useClickOutside en React",
        "description": "Apprenez à utiliser le crochet useClickOutside en React pour gérer les événements de clic en dehors d'un composant spécifique.",
        "keywords": "événements de clic, expérience utilisateur, useclickoutside, react, crochets personnalisés"
      },
      "details": {
        "steps": [
          {
            "title": "React useClickOutside Hook",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Vérifier le statut d'exécution du service web",
                "file": "verify1-1.sh",
                "hint": "Veuillez cliquer sur 'Go Live' dans le coin inférieur droit pour exécuter le service web sur le port 8080. Ensuite, vous pouvez actualiser l'onglet **Web 8080** pour prévisualiser la page web."
              },
              {
                "name": "Vérifier le statut de modification de script.js",
                "file": "verify1-2.sh",
                "hint": "Veuillez suivre les étapes pour terminer le laboratoire."
              }
            ]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "React useClickOutside-Hook",
      "description": "In diesem Lab werden wir lernen, wie man den useClickOutside-Hook in React verwendet, um Klickereignisse außerhalb eines bestimmten Komponenten zu behandeln. Dieser benutzerdefinierte Hook ermöglicht es uns, einfach zu erkennen, wenn ein Benutzer außerhalb eines bestimmten Komponenten klickt, und eine Aktion aufgrund dieses Ereignisses auszuführen. Am Ende des Labs werden Sie ein besseres Verständnis dafür haben, wie man diesen Hook verwendet, um in Ihren React-Anwendungen interaktivere und nutzerfreundlichere Komponenten zu erstellen.",
      "meta": {
        "title": "Meisterhaft mit dem useClickOutside-Hook in React umgehen",
        "description": "Lernen Sie, wie man den useClickOutside-Hook in React verwendet, um Klickereignisse außerhalb eines bestimmten Komponenten zu behandeln.",
        "keywords": "Klickereignisse, Benutzererfahrung, useclickoutside, React, benutzerdefinierte Hooks"
      },
      "details": {
        "steps": [
          {
            "title": "React useClickOutside-Hook",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Überprüfen des Laufzustands des Webdiensts",
                "file": "verify1-1.sh",
                "hint": "Bitte klicken Sie in der unteren rechten Ecke auf 'Go Live', um den Webdienst auf Port 8080 auszuführen. Anschließend können Sie die Registerkarte **Web 8080** aktualisieren, um die Webseite anzuschauen."
              },
              {
                "name": "Überprüfen des Status der Änderungen in script.js",
                "file": "verify1-2.sh",
                "hint": "Bitte folgen Sie den Schritten, um das Lab abzuschließen."
              }
            ]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "React の useClickOutside フック",
      "description": "この実験では、React における useClickOutside フックを使って特定のコンポーネントの外で発生するクリックイベントを処理する方法を学びます。このカスタムフックを使うことで、ユーザーが特定のコンポーネントの外でクリックしたときを簡単に検出し、そのイベントに基づいてアクションを実行できます。実験が終了するとき、React アプリケーションでこのフックを使ってよりインタラクティブでユーザーフレンドリーなコンポーネントを作成する方法をより深く理解しているでしょう。",
      "meta": {
        "title": "React における useClickOutside フックのマスター",
        "description": "React で特定のコンポーネントの外のクリックイベントを処理するための useClickOutside フックの使い方を学びましょう。",
        "keywords": "クリックイベント，ユーザーエクスペリエンス，useclickoutside, React, カスタムフック"
      },
      "details": {
        "steps": [
          {
            "title": "React の useClickOutside フック",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "ウェブサービスの実行状態を確認する",
                "file": "verify1-1.sh",
                "hint": "右下隅の「Go Live」をクリックして、ポート 8080 でウェブサービスを実行してください。その後、**Web 8080** タブを更新してウェブページをプレビューできます。"
              },
              {
                "name": "script.js の変更状態を確認する",
                "file": "verify1-2.sh",
                "hint": "実験を完了する手順に従ってください。"
              }
            ]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "React хук useClickOutside",
      "description": "В этом практическом занятии мы научимся использовать хук useClickOutside в React для обработки событий клика, происходящих вне определенного компонента. Этот пользовательский хук позволяет легко определить, когда пользователь кликает вне определенного компонента, и выполнять действие на основе этого события. В конце практического занятия вы будете лучше понимать, как использовать этот хук для создания более интерактивных и удобных для пользователя компонентов в своих React-приложениях.",
      "meta": {
        "title": "Мастерство в использовании хука useClickOutside в React",
        "description": "Изучите, как использовать хук useClickOutside в React для обработки событий клика вне определенного компонента.",
        "keywords": "события клика, пользовательский опыт, useclickoutside, react, пользовательские хуки"
      },
      "details": {
        "steps": [
          {
            "title": "React хук useClickOutside",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "Проверить статус работы веб-сервиса",
                "file": "verify1-1.sh",
                "hint": "Пожалуйста, нажмите на кнопку 'Go Live' в нижнем правом углу, чтобы запустить веб-сервис на порту 8080. Затем вы можете обновить вкладку **Web 8080**, чтобы просмотреть веб-страницу."
              },
              {
                "name": "Проверить статус изменения script.js",
                "file": "verify1-2.sh",
                "hint": "Пожалуйста, следуйте шагам, чтобы завершить практическое занятие."
              }
            ]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    }
  ]
}
