{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Controlled Input Field",
  "description": "In this lab, we will learn how to create a controlled input field in React. The controlled input field is a common pattern used to manage form input values in React applications. By using a callback function to inform the parent component of any value updates, we can ensure that the input field's value is always in sync with the state of the parent component. This lab will guide us through the creation and usage of a controlled input field component in React.",
  "meta": {
    "title": "Mastering Controlled Input Fields in React",
    "description": "Learn how to create and use controlled input fields in React applications to manage form input values.",
    "keywords": "user interaction, react, state management, controlled input field, form management"
  },
  "difficulty": "Beginner",
  "time": 10,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Controlled Input Field",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify the running status of the web service",
            "file": "verify1-1.sh",
            "hint": "Please click on 'Go Live' in the bottom right corner to run the web service on port 8080. Then, you can refresh the **Web 8080** Tab to preview the web page.",
            "timeout": 0,
            "showstderr": true
          },
          {
            "name": "Verify the status of script.js modification",
            "file": "verify1-2.sh",
            "hint": "Please follow the steps to complete the lab.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "react/event_handling",
          "react/hooks",
          "react/jsx",
          "react/use_state_reducer"
        ]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    },
    "assets": {
      "host01": [
        {
          "file": "index.html",
          "target": "~/project",
          "chmod": "ugo+rwx"
        },
        {
          "file": "script.js",
          "target": "~/project",
          "chmod": "ugo+rwx"
        }
      ]
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["Lotus-7"],
  "license": {
    "name": "CC-BY-4.0",
    "url": "https://github.com/30-seconds/30-seconds-of-code/blob/master/LICENSE",
    "repo": "https://github.com/30-seconds/30-seconds-of-code"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "受控输入字段",
      "description": "在本实验中，我们将学习如何在React中创建一个受控输入字段。受控输入字段是React应用程序中用于管理表单输入值的常见模式。通过使用回调函数将任何值更新通知父组件，我们可以确保输入字段的值始终与父组件的状态同步。本实验将指导我们完成React中受控输入字段组件的创建和使用。",
      "meta": {
        "title": "掌握React中的受控输入字段",
        "description": "了解如何在React应用程序中创建和使用受控输入字段来管理表单输入值。",
        "keywords": "用户交互, React, 状态管理, 受控输入字段, 表单管理"
      },
      "details": {
        "steps": [
          {
            "title": "受控输入字段",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "验证网络服务的运行状态",
                "file": "verify1-1.sh",
                "hint": "请点击右下角的“Go Live”以在端口8080上运行网络服务。然后，你可以刷新“Web 8080”标签页来预览网页。"
              },
              {
                "name": "验证script.js修改的状态",
                "file": "verify1-2.sh",
                "hint": "请按照步骤完成实验。"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    }
  ]
}
