{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Uncontrolled Textarea Element",
  "description": "In this lab, we will learn how to create an uncontrolled <textarea> element in React. The purpose of this lab is to showcase how to use the defaultValue and onChange props to pass the value of the text area to a callback function in the parent component. By the end of this lab, you will have a better understanding of how to create uncontrolled input fields in React.",
  "meta": {
    "title": "Uncontrolled Textarea Element in React",
    "description": "Learn how to create an uncontrolled textarea element in React, using the defaultValue and onChange props to pass the value to a callback function.",
    "keywords": "react, uncontrolled input, defaultvalue, onchange, textarea"
  },
  "difficulty": "Beginner",
  "time": 5,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Uncontrolled Textarea Element",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify the running status of the web service",
            "file": "verify1-1.sh",
            "hint": "Please click on 'Go Live' in the bottom right corner to run the web service on port 8080. Then, you can refresh the **Web 8080** Tab to preview the web page.",
            "timeout": 0,
            "showstderr": true
          },
          {
            "name": "Verify the status of script.js modification",
            "file": "verify1-2.sh",
            "hint": "Please follow the steps to complete the lab.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": ["react/event_handling"]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    },
    "assets": {
      "host01": [
        {
          "file": "index.html",
          "target": "~/project",
          "chmod": "ugo+rwx"
        },
        {
          "file": "script.js",
          "target": "~/project",
          "chmod": "ugo+rwx"
        }
      ]
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["Lotus-7"],
  "license": {
    "name": "CC-BY-4.0",
    "url": "https://github.com/30-seconds/30-seconds-of-code/blob/master/LICENSE",
    "repo": "https://github.com/30-seconds/30-seconds-of-code"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "不受控文本区域元素",
      "description": "在本实验中，我们将学习如何在 React 中创建一个不受控的<textarea>元素。本实验的目的是展示如何使用 defaultValue 和 onChange 属性将文本区域的值传递给父组件中的回调函数。完成本实验后，你将对如何在 React 中创建不受控输入字段有更深入的理解。",
      "meta": {
        "title": "React 中的不受控文本区域元素",
        "description": "学习如何在 React 中创建一个不受控的文本区域元素，使用 defaultValue 和 onChange 属性将值传递给回调函数。",
        "keywords": "react, 不受控输入，defaultvalue, onchange, 文本区域"
      },
      "details": {
        "steps": [
          {
            "title": "不受控文本区域元素",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "验证网络服务的运行状态",
                "file": "verify1-1.sh",
                "hint": "请点击右下角的“Go Live”以在端口 8080 上运行网络服务。然后，你可以刷新“Web 8080”标签页来预览网页。"
              },
              {
                "name": "验证 script.js 修改的状态",
                "file": "verify1-2.sh",
                "hint": "请按照步骤完成实验。"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Elemento <textarea> no controlado",
      "description": "En este laboratorio, aprenderemos cómo crear un elemento <textarea> no controlado en React. El objetivo de este laboratorio es mostrar cómo usar las propiedades defaultValue y onChange para pasar el valor del área de texto a una función de devolución de llamada en el componente padre. Al final de este laboratorio, tendrás una mejor comprensión de cómo crear campos de entrada no controlados en React.",
      "meta": {
        "title": "Elemento <textarea> no controlado en React",
        "description": "Aprende cómo crear un elemento <textarea> no controlado en React, usando las propiedades defaultValue y onChange para pasar el valor a una función de devolución de llamada.",
        "keywords": "react, entrada no controlada, defaultValue, onChange, textarea"
      },
      "details": {
        "steps": [
          {
            "title": "Elemento <textarea> no controlado",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Verificar el estado de ejecución del servicio web",
                "file": "verify1-1.sh",
                "hint": "Haga clic en 'Go Live' en la esquina inferior derecha para ejecutar el servicio web en el puerto 8080. Luego, puede actualizar la pestaña **Web 8080** para previsualizar la página web."
              },
              {
                "name": "Verificar el estado de la modificación de script.js",
                "file": "verify1-2.sh",
                "hint": "Siga los pasos para completar el laboratorio."
              }
            ]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Élément <textarea> non contrôlé",
      "description": "Dans ce laboratoire, nous allons apprendre à créer un élément <textarea> non contrôlé dans React. Le but de ce laboratoire est de montrer comment utiliser les propriétés defaultValue et onChange pour passer la valeur de la zone de texte à une fonction de rappel dans le composant parent. À la fin de ce laboratoire, vous aurez une meilleure compréhension de la création de champs de saisie non contrôlés dans React.",
      "meta": {
        "title": "Élément <textarea> non contrôlé dans React",
        "description": "Apprenez à créer un élément textarea non contrôlé dans React, en utilisant les propriétés defaultValue et onChange pour passer la valeur à une fonction de rappel.",
        "keywords": "react, entrée non contrôlée, defaultValue, onChange, textarea"
      },
      "details": {
        "steps": [
          {
            "title": "Élément <textarea> non contrôlé",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Vérifiez le statut d'exécution du service web",
                "file": "verify1-1.sh",
                "hint": "Veuillez cliquer sur 'Go Live' dans le coin inférieur droit pour exécuter le service web sur le port 8080. Ensuite, vous pouvez actualiser l'onglet **Web 8080** pour prévisualiser la page web."
              },
              {
                "name": "Vérifiez l'état de la modification de script.js",
                "file": "verify1-2.sh",
                "hint": "Veuillez suivre les étapes pour terminer le laboratoire."
              }
            ]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Unkontrolliertes Textarea-Element",
      "description": "In diesem Lab werden wir lernen, wie man ein unkontrolliertes <textarea>-Element in React erstellt. Das Ziel dieses Labs ist es, zu zeigen, wie man die defaultValue- und onChange-Eigenschaften verwendet, um den Wert des Textbereichs an eine Callback-Funktion in der übergeordneten Komponente zu übergeben. Am Ende dieses Labs werden Sie ein besseres Verständnis dafür haben, wie man in React unkontrollierte Eingabefelder erstellt.",
      "meta": {
        "title": "Unkontrolliertes Textarea-Element in React",
        "description": "Lernen Sie, wie man ein unkontrolliertes Textarea-Element in React erstellt, indem Sie die defaultValue- und onChange-Eigenschaften verwenden, um den Wert an eine Callback-Funktion zu übergeben.",
        "keywords": "react, unkontrollierte Eingabe, defaultValue, onChange, Textarea"
      },
      "details": {
        "steps": [
          {
            "title": "Unkontrolliertes Textarea-Element",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Überprüfen des Laufzustands des Webdiensts",
                "file": "verify1-1.sh",
                "hint": "Bitte klicken Sie auf 'Go Live' in der unteren rechten Ecke, um den Webdienst auf Port 8080 auszuführen. Anschließend können Sie die Registerkarte **Web 8080** aktualisieren, um die Webseite anzuschauen."
              },
              {
                "name": "Überprüfen des Status der Änderungen an script.js",
                "file": "verify1-2.sh",
                "hint": "Bitte folgen Sie den Schritten, um das Lab abzuschließen."
              }
            ]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "制御されていないテキストエリア要素",
      "description": "この実験では、React において制御されていない <textarea> 要素を作成する方法を学びます。この実験の目的は、defaultValue と onChange のプロップを使用して、テキストエリアの値を親コンポーネント内のコールバック関数に渡す方法を示すことです。この実験が終了するまでに、React において制御されていない入力フィールドを作成する方法をより深く理解するようになります。",
      "meta": {
        "title": "React における制御されていないテキストエリア要素",
        "description": "defaultValue と onChange のプロップを使用して値をコールバック関数に渡すことで、React において制御されていないテキストエリア要素を作成する方法を学びましょう。",
        "keywords": "react, 制御されていない入力，defaultvalue, onchange, テキストエリア"
      },
      "details": {
        "steps": [
          {
            "title": "制御されていないテキストエリア要素",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "ウェブサービスの実行状態を確認する",
                "file": "verify1-1.sh",
                "hint": "右下隅の「Go Live」をクリックして、ポート 8080 でウェブサービスを実行してください。その後、**Web 8080** タブを更新して、ウェブページをプレビューできます。"
              },
              {
                "name": "script.js の変更状態を確認する",
                "file": "verify1-2.sh",
                "hint": "実験を完了するための手順に従ってください。"
              }
            ]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Неуправляемый элемент <textarea>",
      "description": "В этом практическом занятии мы узнаем, как создавать элемент <textarea>, не контролируемый в React. Целью этого практического занятия является демонстрация использования свойств defaultValue и onChange для передачи значения текстового поля в функцию обратного вызова в родительском компоненте. В конце этого практического занятия у вас будет лучше понимание того, как создавать неконтролируемые поля ввода в React.",
      "meta": {
        "title": "Неуправляемый элемент <textarea> в React",
        "description": "Изучите, как создать неуправляемый элемент textarea в React, используя свойства defaultValue и onChange для передачи значения в функцию обратного вызова.",
        "keywords": "react, неконтролируемый ввод, defaultValue, onChange, textarea"
      },
      "details": {
        "steps": [
          {
            "title": "Неуправляемый элемент <textarea>",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "Проверить статус работы веб-сервиса",
                "file": "verify1-1.sh",
                "hint": "Пожалуйста, нажмите кнопку 'Go Live' в нижнем правом углу, чтобы запустить веб-сервис на порту 8080. Затем вы можете обновить вкладку **Web 8080**, чтобы просмотреть веб-страницу."
              },
              {
                "name": "Проверить статус изменения script.js",
                "file": "verify1-2.sh",
                "hint": "Пожалуйста, следуйте шагам, чтобы завершить практическое занятие."
              }
            ]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    },
    {
      "lang": "ko",
      "title": "제어되지 않는 Textarea 요소",
      "description": "이 랩에서는 React 에서 제어되지 않는 `<textarea>` 요소를 만드는 방법을 배웁니다. 이 랩의 목적은 `defaultValue` 및 `onChange` prop 을 사용하여 텍스트 영역의 값을 부모 컴포넌트의 콜백 함수로 전달하는 방법을 보여주는 것입니다. 이 랩을 마치면 React 에서 제어되지 않는 입력 필드를 만드는 방법에 대한 이해도가 높아질 것입니다.",
      "meta": {
        "title": "React 에서 제어되지 않는 Textarea 요소 만들기",
        "description": "defaultValue 및 onChange prop 을 사용하여 값을 콜백 함수로 전달하는 React 에서 제어되지 않는 textarea 요소를 만드는 방법을 알아보세요.",
        "keywords": "react, 제어되지 않는 입력, defaultValue, onChange, textarea, 리액트 텍스트 에어리어"
      },
      "details": {
        "steps": [
          {
            "title": "제어되지 않는 Textarea 요소",
            "text": "ko/step1.md",
            "verify": [
              {
                "name": "웹 서비스 실행 상태 확인",
                "file": "verify1-1.sh",
                "hint": "오른쪽 하단의 'Go Live'를 클릭하여 웹 서비스를 포트 8080 에서 실행하세요. 그런 다음 **Web 8080** 탭을 새로 고쳐 웹 페이지를 미리 볼 수 있습니다."
              },
              {
                "name": "script.js 수정 상태 확인",
                "file": "verify1-2.sh",
                "hint": "랩을 완료하려면 단계를 따르세요."
              }
            ]
          }
        ],
        "intro": {
          "text": "ko/intro.md",
          "title": "소개"
        },
        "finish": {
          "text": "ko/finish.md",
          "title": "요약"
        }
      }
    },
    {
      "lang": "pt",
      "title": "Elemento Textarea Não Controlado",
      "description": "Neste laboratório, aprenderemos como criar um elemento `<textarea>` não controlado em React. O objetivo deste laboratório é demonstrar como usar as propriedades defaultValue e onChange para passar o valor da área de texto para uma função de callback no componente pai. Ao final deste laboratório, você terá uma melhor compreensão de como criar campos de entrada não controlados em React.",
      "meta": {
        "title": "Elemento Textarea Não Controlado em React - Tutorial e Exemplo",
        "description": "Aprenda a criar um elemento textarea não controlado em React, utilizando as propriedades defaultValue e onChange para passar o valor para uma função de callback. Guia completo e exemplos práticos.",
        "keywords": "react, textarea não controlado, defaultValue, onChange, área de texto, tutorial react, exemplo react"
      },
      "details": {
        "steps": [
          {
            "title": "Elemento Textarea Não Controlado",
            "text": "pt/step1.md",
            "verify": [
              {
                "name": "Verificar o status de execução do serviço web",
                "file": "verify1-1.sh",
                "hint": "Por favor, clique em 'Go Live' no canto inferior direito para executar o serviço web na porta 8080. Em seguida, você pode atualizar a aba **Web 8080** para visualizar a página web."
              },
              {
                "name": "Verificar o status da modificação do script.js",
                "file": "verify1-2.sh",
                "hint": "Por favor, siga os passos para completar o laboratório."
              }
            ]
          }
        ],
        "intro": {
          "text": "pt/intro.md",
          "title": "Introdução"
        },
        "finish": {
          "text": "pt/finish.md",
          "title": "Resumo"
        }
      }
    }
  ]
}
