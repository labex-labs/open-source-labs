{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Building Reusable React Tabs Component",
  "description": "In this lab, we will be creating a Tabs component in React that allows users to switch between different content views by clicking on a menu. We will be using the useState() hook to manage the active tab index and the map() method to render the tab menu and content view. By the end of this lab, you will have a better understanding of how to build reusable components in React using state and props.",
  "meta": {
    "title": "React Tabs Component | Reusable UI | Interactive Web Development",
    "description": "Learn how to create a reusable Tabs component in React using the useState hook and map method. Enhance your interactive web development skills.",
    "keywords": "React, Tabs, Component, Reusable, UI, Interactive, Web Development"
  },
  "difficulty": "Beginner",
  "time": 10,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Tabs",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify the running status of the web service",
            "file": "verify1-1.sh",
            "hint": "Please click on 'Go Live' in the bottom right corner to run the web service on port 8080. Then, you can refresh the **Web 8080** Tab to preview the web page.",
            "timeout": 0,
            "showstderr": true
          },
          {
            "name": "Verify the status of script.js modification",
            "file": "verify1-2.sh",
            "hint": "Please follow the steps to complete the lab.",
            "timeout": 0,
            "showstderr": true
          },
          {
            "name": "Verify the status of style.css modification",
            "file": "verify1-3.sh",
            "hint": "Please follow the steps to complete the lab.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "react/conditional_render",
          "react/event_handling",
          "react/hooks",
          "react/jsx",
          "react/list_keys",
          "react/use_state_reducer"
        ]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    },
    "assets": {
      "host01": [
        {
          "file": "index.html",
          "target": "~/project",
          "chmod": "ugo+rwx"
        },
        {
          "file": "script.js",
          "target": "~/project",
          "chmod": "ugo+rwx"
        },
        {
          "file": "style.css",
          "target": "~/project",
          "chmod": "ugo+rwx"
        }
      ]
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["Lotus-7"],
  "license": {
    "name": "CC-BY-4.0",
    "url": "https://github.com/30-seconds/30-seconds-of-code/blob/master/LICENSE",
    "repo": "https://github.com/30-seconds/30-seconds-of-code"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "构建可复用的 React 标签组件",
      "description": "在本实验中，我们将在 React 中创建一个标签组件，允许用户通过点击菜单在不同的内容视图之间切换。我们将使用 useState() 钩子来管理活动标签索引，并使用 map() 方法来渲染标签菜单和内容视图。在本实验结束时，你将更好地理解如何使用状态和属性在 React 中构建可复用的组件。",
      "meta": {
        "title": "React 标签组件 | 可复用界面 | 交互式网页开发",
        "description": "学习如何使用 useState 钩子和 map 方法在 React 中创建一个可复用的标签组件。提升你的交互式网页开发技能。",
        "keywords": "React, 标签，组件，可复用，界面，交互式，网页开发"
      },
      "details": {
        "steps": [
          {
            "title": "标签",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "验证 Web 服务的运行状态",
                "file": "verify1-1.sh",
                "hint": "请点击右下角的“Go Live”以在端口 8080 上运行 Web 服务。然后，你可以刷新“Web 8080”标签以预览网页。"
              },
              {
                "name": "验证 script.js 修改状态",
                "file": "verify1-2.sh",
                "hint": "请按照步骤完成实验。"
              },
              {
                "name": "验证 style.css 修改状态",
                "file": "verify1-3.sh",
                "hint": "请按照步骤完成实验。"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Construyendo un componente de pestañas reutilizable en React",
      "description": "En este laboratorio, crearemos un componente de pestañas en React que permite a los usuarios cambiar entre diferentes vistas de contenido al hacer clic en un menú. Usaremos el hook useState() para administrar el índice de la pestaña activa y el método map() para renderizar el menú de pestañas y la vista de contenido. Al final de este laboratorio, tendrás una mejor comprensión de cómo construir componentes reutilizables en React utilizando el estado y las propiedades.",
      "meta": {
        "title": "Componente de pestañas de React | Interfaz de usuario reutilizable | Desarrollo web interactivo",
        "description": "Aprende cómo crear un componente de pestañas reutilizable en React utilizando el hook useState y el método map. Mejora tus habilidades en el desarrollo web interactivo.",
        "keywords": "React, Pestañas, Componente, Reutilizable, Interfaz de usuario, Interactivo, Desarrollo web"
      },
      "details": {
        "steps": [
          {
            "title": "Pestañas",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Verificar el estado de ejecución del servicio web",
                "file": "verify1-1.sh",
                "hint": "Haga clic en 'Go Live' en la esquina inferior derecha para ejecutar el servicio web en el puerto 8080. Luego, puede actualizar la pestaña **Web 8080** para previsualizar la página web."
              },
              {
                "name": "Verificar el estado de la modificación de script.js",
                "file": "verify1-2.sh",
                "hint": "Siga los pasos para completar el laboratorio."
              },
              {
                "name": "Verificar el estado de la modificación de style.css",
                "file": "verify1-3.sh",
                "hint": "Siga los pasos para completar el laboratorio."
              }
            ]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Création d'un composant Tabs réutilisable en React",
      "description": "Dans ce laboratoire, nous allons créer un composant Tabs en React qui permet aux utilisateurs de basculer entre différentes vues de contenu en cliquant sur un menu. Nous utiliserons le hook useState() pour gérer l'index de l'onglet actif et la méthode map() pour afficher le menu d'onglets et la vue de contenu. À la fin de ce laboratoire, vous aurez une meilleure compréhension de la manière de construire des composants réutilisables en React en utilisant l'état et les props.",
      "meta": {
        "title": "Composant Tabs React | Interface utilisable réutilisable | Développement web interactif",
        "description": "Découvrez comment créer un composant Tabs réutilisable en React en utilisant le hook useState et la méthode map. Améliorez vos compétences en développement web interactif.",
        "keywords": "React, Tabs, Composant, Réutilisable, Interface utilisable, Interactif, Développement web"
      },
      "details": {
        "steps": [
          {
            "title": "Tabs",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Vérifiez le statut d'exécution du service web",
                "file": "verify1-1.sh",
                "hint": "Veuillez cliquer sur 'Go Live' dans le coin inférieur droit pour exécuter le service web sur le port 8080. Ensuite, vous pouvez actualiser l'onglet **Web 8080** pour prévisualiser la page web."
              },
              {
                "name": "Vérifiez le statut de la modification de script.js",
                "file": "verify1-2.sh",
                "hint": "Veuillez suivre les étapes pour terminer le laboratoire."
              },
              {
                "name": "Vérifiez le statut de la modification de style.css",
                "file": "verify1-3.sh",
                "hint": "Veuillez suivre les étapes pour terminer le laboratoire."
              }
            ]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Erstellung eines wiederverwendbaren React Tabs - Komponenten",
      "description": "In diesem Lab werden wir in React einen Tabs - Komponenten erstellen, der es Benutzern ermöglicht, zwischen verschiedenen Inhaltsansichten zu wechseln, indem sie auf ein Menü klicken. Wir werden den useState() - Hook verwenden, um den aktiven Tab - Index zu verwalten, und die map() - Methode, um das Tab - Menü und die Inhaltsansicht zu rendern. Am Ende dieses Labs werden Sie ein besseres Verständnis dafür haben, wie man in React wiederverwendbare Komponenten mit Zustand und Props aufbaut.",
      "meta": {
        "title": "React Tabs - Komponenten | Wiederverwendbare Benutzeroberfläche | Interaktive Webanwendungentwicklung",
        "description": "Lernen Sie, wie Sie in React mithilfe des useState - Hooks und der map - Methode eine wiederverwendbare Tabs - Komponente erstellen. Verbessern Sie Ihre Fähigkeiten bei der interaktiven Webanwendungentwicklung.",
        "keywords": "React, Tabs, Komponenten, Wiederverwendbar, Benutzeroberfläche, Interaktiv, Webanwendungentwicklung"
      },
      "details": {
        "steps": [
          {
            "title": "Tabs",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Überprüfen des Laufzustands des Webdiensts",
                "file": "verify1-1.sh",
                "hint": "Bitte klicken Sie in der unteren rechten Ecke auf 'Go Live', um den Webdienst auf Port 8080 auszuführen. Anschließend können Sie die Registerkarte **Web 8080** aktualisieren, um die Webseite zu previewen."
              },
              {
                "name": "Überprüfen des Status der Änderungen in script.js",
                "file": "verify1-2.sh",
                "hint": "Bitte folgen Sie den Schritten, um das Lab abzuschließen."
              },
              {
                "name": "Überprüfen des Status der Änderungen in style.css",
                "file": "verify1-3.sh",
                "hint": "Bitte folgen Sie den Schritten, um das Lab abzuschließen."
              }
            ]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "再利用可能な React Tabs コンポーネントの構築",
      "description": "この実験では、React で Tabs コンポーネントを作成します。これにより、ユーザーはメニューをクリックすることで異なるコンテンツ ビューを切り替えることができます。active tab index を管理するために useState() フックを使用し、tab メニューとコンテンツ ビューをレンダリングするために map() メソッドを使用します。この実験が終了するとき、state と props を使用して React で再利用可能なコンポーネントを構築する方法をより深く理解しているでしょう。",
      "meta": {
        "title": "React Tabs コンポーネント | 再利用可能な UI | インタラクティブな Web 開発",
        "description": "useState フックと map メソッドを使用して、React で再利用可能な Tabs コンポーネントを作成する方法を学びましょう。インタラクティブな Web 開発技術を向上させましょう。",
        "keywords": "React, Tabs, コンポーネント，再利用可能，UI, インタラクティブ，Web 開発"
      },
      "details": {
        "steps": [
          {
            "title": "タブ",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "Web サービスの実行状態を確認する",
                "file": "verify1-1.sh",
                "hint": "右下隅の「Go Live」をクリックして、ポート 8080 で Web サービスを実行してください。その後、**Web 8080** タブを更新して、Web ページをプレビューできます。"
              },
              {
                "name": "script.js の変更状態を確認する",
                "file": "verify1-2.sh",
                "hint": "実験を完了する手順に従ってください。"
              },
              {
                "name": "style.css の変更状態を確認する",
                "file": "verify1-3.sh",
                "hint": "実験を完了する手順に従ってください。"
              }
            ]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Создание повторно используемого компонента вкладок в React",
      "description": "В этом практическом занятии мы создадим компонент вкладок в React, который позволит пользователям переключаться между различными представлениями содержимого, щелкая по меню. Мы будем использовать хук useState() для управления индексом активной вкладки и метод map() для отображения меню вкладок и представления содержимого. В конце этого практического занятия вы лучше поймете, как создавать повторно используемые компоненты в React с использованием состояния и пропсов.",
      "meta": {
        "title": "Компонент вкладок React | Повторно используемый интерфейс | Взаимодействующая веб-разработка",
        "description": "Изучите, как создать повторно используемый компонент вкладок в React с использованием хука useState и метода map. Повысьте свои навыки взаимодействующей веб-разработки.",
        "keywords": "React, Вкладки, Компонент, Повторно используемый, Интерфейс, Взаимодействие, Веб-разработка"
      },
      "details": {
        "steps": [
          {
            "title": "Вкладки",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "Проверить состояние работы веб-сервиса",
                "file": "verify1-1.sh",
                "hint": "Пожалуйста, нажмите кнопку 'Запустить в браузере' в нижнем правом углу, чтобы запустить веб-сервис на порту 8080. Затем вы можете обновить вкладку **Web 8080**, чтобы просмотреть веб-страницу."
              },
              {
                "name": "Проверить состояние изменения script.js",
                "file": "verify1-2.sh",
                "hint": "Пожалуйста, следуйте шагам, чтобы завершить практическое занятие."
              },
              {
                "name": "Проверить состояние изменения style.css",
                "file": "verify1-3.sh",
                "hint": "Пожалуйста, следуйте шагам, чтобы завершить практическое занятие."
              }
            ]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    }
  ]
}
