{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Textarea with Word Limit",
  "description": "In this lab, we will be creating a React component that renders a textarea with a word limit. The component will utilize React hooks such as useState(), useCallback(), and useEffect() to manage the state of the textarea and limit the number of words that can be entered. This lab provides a practical example of how to utilize hooks to create reusable React components.",
  "meta": {
    "title": "Textarea with Word Limit: React Component Tutorial",
    "description": "Learn how to create a React component that renders a textarea with a word limit using hooks like useState, useCallback, and useEffect.",
    "keywords": "word limit, react, usestate, hooks, textarea"
  },
  "difficulty": "Beginner",
  "time": 10,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Textarea with Word Limit",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify the running status of the web service",
            "file": "verify1-1.sh",
            "hint": "Please click on 'Go Live' in the bottom right corner to run the web service on port 8080. Then, you can refresh the **Web 8080** Tab to preview the web page.",
            "timeout": 0,
            "showstderr": true
          },
          {
            "name": "Verify the status of script.js modification",
            "file": "verify1-2.sh",
            "hint": "Please follow the steps to complete the lab.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "react/event_handling",
          "react/hooks",
          "react/jsx",
          "react/use_state_reducer"
        ]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    },
    "assets": {
      "host01": [
        {
          "file": "index.html",
          "target": "~/project",
          "chmod": "ugo+rwx"
        },
        {
          "file": "script.js",
          "target": "~/project",
          "chmod": "ugo+rwx"
        }
      ]
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["Lotus-7"],
  "license": {
    "name": "CC-BY-4.0",
    "url": "https://github.com/30-seconds/30-seconds-of-code/blob/master/LICENSE",
    "repo": "https://github.com/30-seconds/30-seconds-of-code"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "有字数限制的文本区域",
      "description": "在本实验中，我们将创建一个 React 组件，该组件会渲染一个有字数限制的文本区域。该组件将使用诸如 useState()、useCallback() 和 useEffect() 等 React 钩子来管理文本区域的状态，并限制可输入的单词数量。本实验提供了一个关于如何利用钩子来创建可复用的 React 组件的实际示例。",
      "meta": {
        "title": "有字数限制的文本区域：React 组件教程",
        "description": "学习如何使用 useState、useCallback 和 useEffect 等钩子创建一个渲染有字数限制的文本区域的 React 组件。",
        "keywords": "字数限制，React, useState, 钩子，文本区域"
      },
      "details": {
        "steps": [
          {
            "title": "有字数限制的文本区域",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "验证网络服务的运行状态",
                "file": "verify1-1.sh",
                "hint": "请点击右下角的“Go Live”以在端口 8080 上运行网络服务。然后，你可以刷新“Web 8080”标签页来预览网页。"
              },
              {
                "name": "验证 script.js 修改的状态",
                "file": "verify1-2.sh",
                "hint": "请按照步骤完成实验。"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Área de texto con límite de palabras",
      "description": "En este laboratorio, crearemos un componente de React que muestra un área de texto con un límite de palabras. El componente utilizará hooks de React como useState(), useCallback() y useEffect() para administrar el estado del área de texto y limitar el número de palabras que se pueden ingresar. Este laboratorio ofrece un ejemplo práctico de cómo utilizar hooks para crear componentes de React reutilizables.",
      "meta": {
        "title": "Área de texto con límite de palabras: Tutorial de componentes de React",
        "description": "Aprende a crear un componente de React que muestra un área de texto con un límite de palabras utilizando hooks como useState, useCallback y useEffect.",
        "keywords": "límite de palabras, react, usestate, hooks, área de texto"
      },
      "details": {
        "steps": [
          {
            "title": "Área de texto con límite de palabras",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Verificar el estado de ejecución del servicio web",
                "file": "verify1-1.sh",
                "hint": "Haga clic en 'Go Live' en la esquina inferior derecha para ejecutar el servicio web en el puerto 8080. Luego, puede actualizar la pestaña **Web 8080** para previsualizar la página web."
              },
              {
                "name": "Verificar el estado de la modificación de script.js",
                "file": "verify1-2.sh",
                "hint": "Siga los pasos para completar el laboratorio."
              }
            ]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Zone de texte avec limite de mots",
      "description": "Dans ce laboratoire, nous allons créer un composant React qui affiche une zone de texte avec une limite de mots. Le composant utilisera des hooks React tels que useState(), useCallback() et useEffect() pour gérer l'état de la zone de texte et limiter le nombre de mots qui peuvent être saisis. Ce laboratoire fournit un exemple pratique de la manière d'utiliser des hooks pour créer des composants React réutilisables.",
      "meta": {
        "title": "Zone de texte avec limite de mots : tutoriel sur les composants React",
        "description": "Découvrez comment créer un composant React qui affiche une zone de texte avec une limite de mots en utilisant des hooks comme useState, useCallback et useEffect.",
        "keywords": "limite de mots, react, usestate, hooks, zone de texte"
      },
      "details": {
        "steps": [
          {
            "title": "Zone de texte avec limite de mots",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Vérifiez le statut d'exécution du service web",
                "file": "verify1-1.sh",
                "hint": "Veuillez cliquer sur 'Go Live' dans le coin inférieur droit pour exécuter le service web sur le port 8080. Ensuite, vous pouvez actualiser l'onglet **Web 8080** pour prévisualiser la page web."
              },
              {
                "name": "Vérifiez l'état de la modification de script.js",
                "file": "verify1-2.sh",
                "hint": "Veuillez suivre les étapes pour terminer le laboratoire."
              }
            ]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Textfeld mit Wortbegrenzung",
      "description": "In diesem Lab werden wir einen React-Komponenten erstellen, der ein Textfeld mit einer Wortbegrenzung anzeigt. Die Komponente wird React-Hooks wie useState(), useCallback() und useEffect() verwenden, um den Zustand des Textfelds zu verwalten und die Anzahl der eingegebenen Wörter zu begrenzen. Dieses Lab bietet ein praktisches Beispiel dafür, wie Hooks verwendet werden, um wiederverwendbare React-Komponenten zu erstellen.",
      "meta": {
        "title": "Textfeld mit Wortbegrenzung: React-Komponenten-Tutorial",
        "description": "Lernen Sie, wie Sie einen React-Komponenten erstellen, der ein Textfeld mit einer Wortbegrenzung anzeigt, indem Sie Hooks wie useState, useCallback und useEffect verwenden.",
        "keywords": "Wortbegrenzung, React, useState, Hooks, Textfeld"
      },
      "details": {
        "steps": [
          {
            "title": "Textfeld mit Wortbegrenzung",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Überprüfen des Laufzustands des Webdiensts",
                "file": "verify1-1.sh",
                "hint": "Bitte klicken Sie auf 'Go Live' in der unteren rechten Ecke, um den Webdienst auf Port 8080 auszuführen. Anschließend können Sie die Registerkarte **Web 8080** aktualisieren, um die Webseite zu Vorschauen."
              },
              {
                "name": "Überprüfen des Status der Änderungen in script.js",
                "file": "verify1-2.sh",
                "hint": "Bitte folgen Sie den Schritten, um das Lab abzuschließen."
              }
            ]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "単語制限付きのテキストエリア",
      "description": "この実験では、単語制限付きのテキストエリアをレンダリングする React コンポーネントを作成します。このコンポーネントは、useState()、useCallback()、および useEffect() などの React フックを使用して、テキストエリアの状態を管理し、入力できる単語数を制限します。この実験は、フックを使用して再利用可能な React コンポーネントを作成する方法の実際の例を提供します。",
      "meta": {
        "title": "単語制限付きのテキストエリア：React コンポーネント チュートリアル",
        "description": "useState、useCallback、および useEffect のようなフックを使用して、単語制限付きのテキストエリアをレンダリングする React コンポーネントを作成する方法を学びましょう。",
        "keywords": "単語制限，React, useState, フック，テキストエリア"
      },
      "details": {
        "steps": [
          {
            "title": "単語制限付きのテキストエリア",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "ウェブサービスの実行状態を確認する",
                "file": "verify1-1.sh",
                "hint": "右下隅の「Go Live」をクリックして、ポート 8080 でウェブサービスを実行してください。その後、**Web 8080** タブを更新して、ウェブページをプレビューできます。"
              },
              {
                "name": "script.js の変更状態を確認する",
                "file": "verify1-2.sh",
                "hint": "実験を完了するための手順に従ってください。"
              }
            ]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Текстовое поле с ограничением по количеству слов",
      "description": "В этом практическом занятии мы создадим компонент React, который отображает текстовое поле с ограничением по количеству слов. Компонент будет использовать React-хуки, такие как useState(), useCallback() и useEffect(), для управления состоянием текстового поля и ограничения количества слов, которые можно ввести. Это практическое занятие демонстрирует, как использовать хуки для создания повторно используемых компонентов React.",
      "meta": {
        "title": "Текстовое поле с ограничением по количеству слов: Руководство по компонентам React",
        "description": "Изучите, как создать компонент React, который отображает текстовое поле с ограничением по количеству слов, используя хуки, такие как useState, useCallback и useEffect.",
        "keywords": "ограничение по количеству слов, react, usestate, хуки, текстовое поле"
      },
      "details": {
        "steps": [
          {
            "title": "Текстовое поле с ограничением по количеству слов",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "Проверить статус работы веб-сервиса",
                "file": "verify1-1.sh",
                "hint": "Пожалуйста, нажмите кнопку 'Go Live' в нижнем правом углу, чтобы запустить веб-сервис на порту 8080. Затем можно обновить вкладку **Web 8080**, чтобы просмотреть веб-страницу."
              },
              {
                "name": "Проверить статус изменения script.js",
                "file": "verify1-2.sh",
                "hint": "Пожалуйста, следуйте шагам, чтобы завершить практическое занятие."
              }
            ]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    }
  ]
}
