{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Uncontrolled Range Input",
  "description": "In this lab, we will explore how to create an uncontrolled range input element in React that allows users to select values from a range of numbers by sliding a button along a horizontal line. We will use a callback function to pass the selected value to the parent component. By the end of this lab, you will have a better understanding of how to use the onChange event and defaultValue property in React.",
  "meta": {
    "title": "Uncontrolled Range Input: Mastering React Sliders",
    "description": "Explore creating an uncontrolled range input element in React, allowing users to select values from a range of numbers by sliding a button.",
    "keywords": "react, uncontrolled input, range, callback function, slider"
  },
  "difficulty": "Beginner",
  "time": 10,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Uncontrolled Range Input",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify the running status of the web service",
            "file": "verify1-1.sh",
            "hint": "Please click on 'Go Live' in the bottom right corner to run the web service on port 8080. Then, you can refresh the **Web 8080** Tab to preview the web page.",
            "timeout": 0,
            "showstderr": true
          },
          {
            "name": "Verify the status of script.js modification",
            "file": "verify1-2.sh",
            "hint": "Please follow the steps to complete the lab.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": ["react/event_handling", "react/jsx"]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    },
    "assets": {
      "host01": [
        {
          "file": "index.html",
          "target": "~/project",
          "chmod": "ugo+rwx"
        },
        {
          "file": "script.js",
          "target": "~/project",
          "chmod": "ugo+rwx"
        }
      ]
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["Lotus-7"],
  "license": {
    "name": "CC-BY-4.0",
    "url": "https://github.com/30-seconds/30-seconds-of-code/blob/master/LICENSE",
    "repo": "https://github.com/30-seconds/30-seconds-of-code"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "不受控范围输入",
      "description": "在本实验中，我们将探索如何在 React 中创建一个不受控的范围输入元素，该元素允许用户通过沿水平线滑动按钮来从一系列数字中选择值。我们将使用回调函数将选定的值传递给父组件。在本实验结束时，你将更好地理解如何在 React 中使用 onChange 事件和 defaultValue 属性。",
      "meta": {
        "title": "掌握 React 滑块：不受控范围输入",
        "description": "探索在 React 中创建不受控范围输入元素，允许用户通过滑动按钮从一系列数字中选择值。",
        "keywords": "React, 不受控输入，范围，回调函数，滑块"
      },
      "details": {
        "steps": [
          {
            "title": "不受控范围输入",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "验证 Web 服务的运行状态",
                "file": "verify1-1.sh",
                "hint": "请点击右下角的“Go Live”以在端口 8080 上运行 Web 服务。然后，你可以刷新“Web 8080”标签页以预览网页。"
              },
              {
                "name": "验证 script.js 修改状态",
                "file": "verify1-2.sh",
                "hint": "请按照步骤完成实验。"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Entrada de rango no controlada",
      "description": "En este laboratorio, exploraremos cómo crear un elemento de entrada de rango no controlado en React que permita a los usuarios seleccionar valores de un rango de números deslizando un botón a lo largo de una línea horizontal. Utilizaremos una función de devolución de llamada para pasar el valor seleccionado al componente padre. Al final de este laboratorio, tendrás una mejor comprensión de cómo utilizar el evento onChange y la propiedad defaultValue en React.",
      "meta": {
        "title": "Entrada de rango no controlada: Dominando los deslizadores de React",
        "description": "Explora la creación de un elemento de entrada de rango no controlado en React, permitiendo a los usuarios seleccionar valores de un rango de números deslizando un botón.",
        "keywords": "react, entrada no controlada, rango, función de devolución de llamada, deslizador"
      },
      "details": {
        "steps": [
          {
            "title": "Entrada de rango no controlada",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Verificar el estado de ejecución del servicio web",
                "file": "verify1-1.sh",
                "hint": "Haga clic en 'Go Live' en la esquina inferior derecha para ejecutar el servicio web en el puerto 8080. Luego, puede actualizar la pestaña **Web 8080** para previsualizar la página web."
              },
              {
                "name": "Verificar el estado de la modificación de script.js",
                "file": "verify1-2.sh",
                "hint": "Siga los pasos para completar el laboratorio."
              }
            ]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Entrée de plage non contrôlée",
      "description": "Dans ce laboratoire, nous allons explorer la manière de créer un élément d'entrée de plage non contrôlé dans React qui permet aux utilisateurs de sélectionner des valeurs dans une plage de nombres en faisant glisser un bouton le long d'une ligne horizontale. Nous utiliserons une fonction de rappel pour passer la valeur sélectionnée au composant parent. À la fin de ce laboratoire, vous aurez une meilleure compréhension de la manière d'utiliser l'événement onChange et la propriété defaultValue dans React.",
      "meta": {
        "title": "Entrée de plage non contrôlée : Maîtrise des curseurs React",
        "description": "Explorez la création d'un élément d'entrée de plage non contrôlée dans React, permettant aux utilisateurs de sélectionner des valeurs dans une plage de nombres en faisant glisser un bouton.",
        "keywords": "react, entrée non contrôlée, plage, fonction de rappel, curseur"
      },
      "details": {
        "steps": [
          {
            "title": "Entrée de plage non contrôlée",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Vérifiez le statut d'exécution du service web",
                "file": "verify1-1.sh",
                "hint": "Veuillez cliquer sur 'Go Live' dans le coin inférieur droit pour exécuter le service web sur le port 8080. Ensuite, vous pouvez rafraîchir l'onglet **Web 8080** pour prévisualiser la page web."
              },
              {
                "name": "Vérifiez l'état de la modification de script.js",
                "file": "verify1-2.sh",
                "hint": "Veuillez suivre les étapes pour terminer le laboratoire."
              }
            ]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Unkontrolliertes Range-Eingabefeld",
      "description": "In diesem Lab werden wir untersuchen, wie man in React ein unkontrolliertes Range-Eingabeelement erstellt, das es Benutzern ermöglicht, Werte aus einem Bereich von Zahlen auszuwählen, indem sie einen Button entlang einer horizontalen Linie ziehen. Wir werden eine Callback-Funktion verwenden, um den ausgewählten Wert an die übergeordnete Komponente zu übergeben. Am Ende dieses Labs werden Sie ein besseres Verständnis dafür haben, wie man das onChange-Ereignis und die defaultValue-Eigenschaft in React verwendet.",
      "meta": {
        "title": "Unkontrolliertes Range-Eingabefeld: Beherrschen von React-Schiebereglern",
        "description": "Erfahren Sie, wie man in React ein unkontrolliertes Range-Eingabeelement erstellt, das es Benutzern ermöglicht, Werte aus einem Bereich von Zahlen auszuwählen, indem sie einen Button ziehen.",
        "keywords": "react, unkontrolliertes Eingabefeld, Bereich, Callback-Funktion, Schieberegler"
      },
      "details": {
        "steps": [
          {
            "title": "Unkontrolliertes Range-Eingabefeld",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Überprüfen des Laufzustands des Webdiensts",
                "file": "verify1-1.sh",
                "hint": "Bitte klicken Sie in der unteren rechten Ecke auf 'Go Live', um den Webdienst auf Port 8080 auszuführen. Anschließend können Sie die Registerkarte **Web 8080** aktualisieren, um die Webseite anzuschauen."
              },
              {
                "name": "Überprüfen des Status der Änderungen in script.js",
                "file": "verify1-2.sh",
                "hint": "Bitte folgen Sie den Schritten, um das Lab abzuschließen."
              }
            ]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "制御されていない範囲入力",
      "description": "この実験では、React において、ユーザーが水平線に沿ってボタンをスライドさせることで数値の範囲から値を選択できる、制御されていない範囲入力要素を作成する方法を探ります。選択された値を親コンポーネントに渡すためにコールバック関数を使用します。この実験が終了するまでに、React における onChange イベントと defaultValue プロパティの使い方をより深く理解するようになります。",
      "meta": {
        "title": "制御されていない範囲入力：React のスライダーをマスターする",
        "description": "React で制御されていない範囲入力要素を作成し、ユーザーがボタンをスライドさせることで数値の範囲から値を選択できるようにする方法を探ります。",
        "keywords": "react, 制御されていない入力，範囲，コールバック関数，スライダー"
      },
      "details": {
        "steps": [
          {
            "title": "制御されていない範囲入力",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "ウェブサービスの実行状態を確認する",
                "file": "verify1-1.sh",
                "hint": "右下隅の「Go Live」をクリックして、ポート 8080 でウェブサービスを実行してください。その後、**Web 8080** タブを更新して、ウェブページをプレビューできます。"
              },
              {
                "name": "script.js の変更状態を確認する",
                "file": "verify1-2.sh",
                "hint": "実験を完了する手順に従ってください。"
              }
            ]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Неуправляемый ввод диапазона",
      "description": "В этом практическом занятии мы изучим, как создать в React неуправляемый элемент ввода диапазона, который позволяет пользователям выбирать значения из диапазона чисел, скользя кнопкой по горизонтальной линии. Мы будем использовать обратный вызов-функцию для передачи выбранного значения в родительский компонент. В конце этого практического занятия вы лучше поймете, как использовать событие onChange и свойство defaultValue в React.",
      "meta": {
        "title": "Неуправляемый ввод диапазона: мастерство над ползунками в React",
        "description": "Изучите создание неуправляемого элемента ввода диапазона в React, позволяющего пользователям выбирать значения из диапазона чисел, скользя кнопкой.",
        "keywords": "react, неуправляемый ввод, диапазон, обратный вызов-функция, ползунок"
      },
      "details": {
        "steps": [
          {
            "title": "Неуправляемый ввод диапазона",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "Проверить статус работы веб-сервиса",
                "file": "verify1-1.sh",
                "hint": "Пожалуйста, нажмите кнопку 'Go Live' в нижнем правом углу, чтобы запустить веб-сервис на порту 8080. Затем вы можете обновить вкладку **Web 8080**, чтобы просмотреть веб-страницу."
              },
              {
                "name": "Проверить статус изменения script.js",
                "file": "verify1-2.sh",
                "hint": "Пожалуйста, следуйте шагам для завершения практического занятия."
              }
            ]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    }
  ]
}
