{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "React useHash Hook",
  "description": "In this lab, we will learn how to use the useHash hook in React to track and update the browser's location hash value. This hook is useful for creating single-page applications where different components or sections of the page are displayed based on the hash value. By the end of this lab, you will be able to implement the useHash hook in your React projects and enhance the user experience of your web applications.",
  "meta": {
    "title": "Mastering the React useHash Hook",
    "description": "Learn how to use the useHash hook in React to track and update the browser's location hash, enhancing your web application's user experience.",
    "keywords": "usehash, single page application, hook, react, web development"
  },
  "difficulty": "Beginner",
  "time": 10,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "React useHash Hook",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify the running status of the web service",
            "file": "verify1-1.sh",
            "hint": "Please click on 'Go Live' in the bottom right corner to run the web service on port 8080. Then, you can refresh the **Web 8080** Tab to preview the web page.",
            "timeout": 0,
            "showstderr": true
          },
          {
            "name": "Verify the status of script.js modification",
            "file": "verify1-2.sh",
            "hint": "Please follow the steps to complete the lab.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "react/event_handling",
          "react/hooks",
          "react/jsx",
          "react/use_state_reducer"
        ]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    },
    "assets": {
      "host01": [
        {
          "file": "index.html",
          "target": "~/project",
          "chmod": "ugo+rwx"
        },
        {
          "file": "script.js",
          "target": "~/project",
          "chmod": "ugo+rwx"
        }
      ]
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["Lotus-7"],
  "license": {
    "name": "CC-BY-4.0",
    "url": "https://github.com/30-seconds/30-seconds-of-code/blob/master/LICENSE",
    "repo": "https://github.com/30-seconds/30-seconds-of-code"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "React useHash 钩子",
      "description": "在本实验中，我们将学习如何在 React 中使用 useHash 钩子来跟踪和更新浏览器的位置哈希值。此钩子对于创建单页面应用程序非常有用，在这类应用中，页面的不同组件或部分会根据哈希值进行显示。完成本实验后，你将能够在 React 项目中实现 useHash 钩子，并提升 Web 应用程序的用户体验。",
      "meta": {
        "title": "掌握 React useHash 钩子",
        "description": "学习如何在 React 中使用 useHash 钩子来跟踪和更新浏览器的位置哈希，提升你的 Web 应用程序的用户体验。",
        "keywords": "usehash, 单页面应用程序, 钩子, React, 网页开发"
      },
      "details": {
        "steps": [
          {
            "title": "React useHash 钩子",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "验证 Web 服务的运行状态",
                "file": "verify1-1.sh",
                "hint": "请点击右下角的“上线”以在端口 8080 上运行 Web 服务。然后，你可以刷新“Web 8080”标签页来预览网页。"
              },
              {
                "name": "验证 script.js 修改状态",
                "file": "verify1-2.sh",
                "hint": "请按照步骤完成实验。"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    }
  ]
}
