{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "React useHash Hook",
  "description": "In this lab, we will learn how to use the useHash hook in React to track and update the browser's location hash value. This hook is useful for creating single-page applications where different components or sections of the page are displayed based on the hash value. By the end of this lab, you will be able to implement the useHash hook in your React projects and enhance the user experience of your web applications.",
  "meta": {
    "title": "Mastering the React useHash Hook",
    "description": "Learn how to use the useHash hook in React to track and update the browser's location hash, enhancing your web application's user experience.",
    "keywords": "usehash, single page application, hook, react, web development"
  },
  "difficulty": "Beginner",
  "time": 5,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "React useHash Hook",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify the running status of the web service",
            "file": "verify1-1.sh",
            "hint": "Please click on 'Go Live' in the bottom right corner to run the web service on port 8080. Then, you can refresh the **Web 8080** Tab to preview the web page.",
            "timeout": 0,
            "showstderr": true
          },
          {
            "name": "Verify the status of script.js modification",
            "file": "verify1-2.sh",
            "hint": "Please follow the steps to complete the lab.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": []
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    },
    "assets": {
      "host01": [
        {
          "file": "index.html",
          "target": "~/project",
          "chmod": "ugo+rwx"
        },
        {
          "file": "script.js",
          "target": "~/project",
          "chmod": "ugo+rwx"
        }
      ]
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["Lotus-7"],
  "license": {
    "name": "CC-BY-4.0",
    "url": "https://github.com/30-seconds/30-seconds-of-code/blob/master/LICENSE",
    "repo": "https://github.com/30-seconds/30-seconds-of-code"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "React useHash 钩子",
      "description": "在本实验中，我们将学习如何在 React 中使用 useHash 钩子来跟踪和更新浏览器的位置哈希值。此钩子对于创建单页面应用程序非常有用，在这类应用中，页面的不同组件或部分会根据哈希值进行显示。完成本实验后，你将能够在 React 项目中实现 useHash 钩子，并提升 Web 应用程序的用户体验。",
      "meta": {
        "title": "掌握 React useHash 钩子",
        "description": "学习如何在 React 中使用 useHash 钩子来跟踪和更新浏览器的位置哈希，提升你的 Web 应用程序的用户体验。",
        "keywords": "usehash, 单页面应用程序，钩子，React, 网页开发"
      },
      "details": {
        "steps": [
          {
            "title": "React useHash 钩子",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "验证 Web 服务的运行状态",
                "file": "verify1-1.sh",
                "hint": "请点击右下角的“上线”以在端口 8080 上运行 Web 服务。然后，你可以刷新“Web 8080”标签页来预览网页。"
              },
              {
                "name": "验证 script.js 修改状态",
                "file": "verify1-2.sh",
                "hint": "请按照步骤完成实验。"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Hook useHash de React",
      "description": "En este laboratorio, aprenderemos a usar el hook useHash en React para rastrear y actualizar el valor del hash de la ubicación del navegador. Este hook es útil para crear aplicaciones de una sola página donde diferentes componentes o secciones de la página se muestran según el valor del hash. Al final de este laboratorio, serás capaz de implementar el hook useHash en tus proyectos de React y mejorar la experiencia del usuario de tus aplicaciones web.",
      "meta": {
        "title": "Dominando el hook useHash de React",
        "description": "Aprende a usar el hook useHash en React para rastrear y actualizar el hash de la ubicación del navegador, mejorando la experiencia del usuario de tu aplicación web.",
        "keywords": "usehash, aplicación de una sola página, hook, react, desarrollo web"
      },
      "details": {
        "steps": [
          {
            "title": "Hook useHash de React",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Verificar el estado de ejecución del servicio web",
                "file": "verify1-1.sh",
                "hint": "Haga clic en 'Go Live' en la esquina inferior derecha para ejecutar el servicio web en el puerto 8080. Luego, puede actualizar la pestaña **Web 8080** para previsualizar la página web."
              },
              {
                "name": "Verificar el estado de la modificación de script.js",
                "file": "verify1-2.sh",
                "hint": "Siga los pasos para completar el laboratorio."
              }
            ]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "React useHash Hook",
      "description": "Dans ce laboratoire, nous allons apprendre à utiliser le hook useHash dans React pour suivre et mettre à jour la valeur du hash de l'emplacement du navigateur. Ce hook est utile pour créer des applications monopages où différents composants ou sections de la page sont affichés en fonction de la valeur du hash. À la fin de ce laboratoire, vous serez capable d'implementer le hook useHash dans vos projets React et d'améliorer l'expérience utilisateur de vos applications web.",
      "meta": {
        "title": "Maîtriser le hook React useHash",
        "description": "Apprenez à utiliser le hook useHash dans React pour suivre et mettre à jour le hash de l'emplacement du navigateur, améliorant l'expérience utilisateur de votre application web.",
        "keywords": "usehash, application monopage, hook, react, développement web"
      },
      "details": {
        "steps": [
          {
            "title": "React useHash Hook",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Vérifier le statut d'exécution du service web",
                "file": "verify1-1.sh",
                "hint": "Veuillez cliquer sur 'Go Live' dans le coin inférieur droit pour exécuter le service web sur le port 8080. Ensuite, vous pouvez rafraîchir l'onglet **Web 8080** pour prévisualiser la page web."
              },
              {
                "name": "Vérifier le statut de la modification de script.js",
                "file": "verify1-2.sh",
                "hint": "Veuillez suivre les étapes pour terminer le laboratoire."
              }
            ]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "React useHash-Hook",
      "description": "In diesem Lab werden wir lernen, wie man den useHash-Hook in React verwendet, um den Hash-Wert der Browser-Adresse zu verfolgen und zu aktualisieren. Dieser Hook ist nützlich bei der Erstellung von Single-Page-Anwendungen, bei denen verschiedene Komponenten oder Abschnitte der Seite basierend auf dem Hash-Wert angezeigt werden. Am Ende dieses Labs werden Sie in der Lage sein, den useHash-Hook in Ihren React-Projekten zu implementieren und die Benutzererfahrung Ihrer Webanwendungen zu verbessern.",
      "meta": {
        "title": "Meisterhaftigkeit mit dem React useHash-Hook",
        "description": "Lernen Sie, wie man den useHash-Hook in React verwendet, um den Hash-Wert der Browser-Adresse zu verfolgen und zu aktualisieren und so die Benutzererfahrung Ihrer Webanwendung zu verbessern.",
        "keywords": "usehash, Single-Page-Anwendung, Hook, React, Webentwicklung"
      },
      "details": {
        "steps": [
          {
            "title": "React useHash-Hook",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Überprüfen des Laufzustands des Webdiensts",
                "file": "verify1-1.sh",
                "hint": "Bitte klicken Sie in der unteren rechten Ecke auf 'Go Live', um den Webdienst auf Port 8080 auszuführen. Anschließend können Sie die Registerkarte **Web 8080** aktualisieren, um die Webseite zu previewen."
              },
              {
                "name": "Überprüfen des Status der Änderungen an script.js",
                "file": "verify1-2.sh",
                "hint": "Bitte folgen Sie den Schritten, um das Lab abzuschließen."
              }
            ]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "React の useHash フック",
      "description": "この実験では、React における useHash フックを使ってブラウザのロケーションハッシュ値を追跡して更新する方法を学びます。このフックは、ハッシュ値に基づいてページの異なるコンポーネントやセクションを表示するシングルページアプリケーションを作成する際に便利です。この実験が終了すると、React プロジェクトで useHash フックを実装し、Web アプリケーションのユーザー体験を向上させることができます。",
      "meta": {
        "title": "React の useHash フックをマスターする",
        "description": "React における useHash フックを使ってブラウザのロケーションハッシュを追跡して更新する方法を学び、Web アプリケーションのユーザー体験を向上させましょう。",
        "keywords": "usehash, シングルページアプリケーション，フック，react, Web 開発"
      },
      "details": {
        "steps": [
          {
            "title": "React の useHash フック",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "Web サービスの実行状態を確認する",
                "file": "verify1-1.sh",
                "hint": "右下隅の「Go Live」をクリックして、ポート 8080 で Web サービスを実行してください。その後、**Web 8080**タブを更新して Web ページをプレビューできます。"
              },
              {
                "name": "script.js の変更状態を確認する",
                "file": "verify1-2.sh",
                "hint": "実験を完了するための手順に従ってください。"
              }
            ]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "React useHash Хук",
      "description": "В этом практическом занятии мы научимся использовать хук useHash в React для отслеживания и обновления значения хэша адреса в браузере. Этот хук полезен для создания одностраничных приложений, где разные компоненты или разделы страницы отображаются в зависимости от значения хэша. В конце этого практического занятия вы сможете реализовать хук useHash в своих проектах React и улучшить пользовательский опыт ваших веб-приложений.",
      "meta": {
        "title": "Мастерство в React useHash Хук",
        "description": "Изучите, как использовать хук useHash в React для отслеживания и обновления хэша адреса в браузере, улучшая пользовательский опыт вашего веб-приложения.",
        "keywords": "usehash, одностраничное приложение, хук, react, веб-разработка"
      },
      "details": {
        "steps": [
          {
            "title": "React useHash Хук",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "Проверить статус работы веб-сервиса",
                "file": "verify1-1.sh",
                "hint": "Пожалуйста, нажмите кнопку 'Go Live' в нижнем правом углу, чтобы запустить веб-сервис на порту 8080. Затем вы можете обновить вкладку **Web 8080**, чтобы просмотреть веб-страницу."
              },
              {
                "name": "Проверить статус изменения script.js",
                "file": "verify1-2.sh",
                "hint": "Пожалуйста, следуйте шагам, чтобы завершить практическое занятие."
              }
            ]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    },
    {
      "lang": "ko",
      "title": "React useHash 훅",
      "description": "이 랩에서는 React 에서 useHash 훅을 사용하여 브라우저의 위치 해시 값을 추적하고 업데이트하는 방법을 배웁니다. 이 훅은 해시 값에 따라 페이지의 다른 컴포넌트 또는 섹션이 표시되는 싱글 페이지 애플리케이션 (SPA) 을 만드는 데 유용합니다. 이 랩을 마치면 React 프로젝트에서 useHash 훅을 구현하고 웹 애플리케이션의 사용자 경험을 향상시킬 수 있습니다.",
      "meta": {
        "title": "React useHash 훅 마스터하기",
        "description": "React 에서 useHash 훅을 사용하여 브라우저 위치 해시를 추적하고 업데이트하는 방법을 배우고, 웹 애플리케이션의 사용자 경험을 향상시키세요.",
        "keywords": "useHash, 싱글 페이지 애플리케이션, 훅, React, 웹 개발, 리액트 useHash"
      },
      "details": {
        "steps": [
          {
            "title": "React useHash 훅",
            "text": "ko/step1.md",
            "verify": [
              {
                "name": "웹 서비스 실행 상태 확인",
                "file": "verify1-1.sh",
                "hint": "오른쪽 하단의 'Go Live'를 클릭하여 웹 서비스를 포트 8080 에서 실행하세요. 그런 다음, **Web 8080** 탭을 새로 고쳐 웹 페이지를 미리 볼 수 있습니다."
              },
              {
                "name": "script.js 수정 상태 확인",
                "file": "verify1-2.sh",
                "hint": "랩을 완료하려면 단계를 따르세요."
              }
            ]
          }
        ],
        "intro": {
          "text": "ko/intro.md",
          "title": "소개"
        },
        "finish": {
          "text": "ko/finish.md",
          "title": "요약"
        }
      }
    },
    {
      "lang": "pt",
      "title": "React useHash Hook",
      "description": "Neste laboratório, aprenderemos como usar o hook useHash no React para rastrear e atualizar o valor hash da localização do navegador. Este hook é útil para criar aplicações de página única (single-page applications - SPA), onde diferentes componentes ou seções da página são exibidos com base no valor hash. Ao final deste laboratório, você será capaz de implementar o hook useHash em seus projetos React e aprimorar a experiência do usuário de suas aplicações web.",
      "meta": {
        "title": "Dominando o React useHash Hook: Guia Completo",
        "description": "Aprenda a usar o hook useHash no React para rastrear e atualizar o hash da localização do navegador, otimizando a experiência do usuário em sua aplicação web. Ideal para SPAs e navegação dinâmica.",
        "keywords": "usehash, aplicação de página única, SPA, hook React, desenvolvimento web, hash URL, navegação web"
      },
      "details": {
        "steps": [
          {
            "title": "React useHash Hook",
            "text": "pt/step1.md",
            "verify": [
              {
                "name": "Verificar o status de execução do serviço web",
                "file": "verify1-1.sh",
                "hint": "Por favor, clique em 'Go Live' no canto inferior direito para executar o serviço web na porta 8080. Em seguida, você pode atualizar a aba **Web 8080** para visualizar a página web."
              },
              {
                "name": "Verificar o status da modificação de script.js",
                "file": "verify1-2.sh",
                "hint": "Por favor, siga os passos para completar o laboratório."
              }
            ]
          }
        ],
        "intro": {
          "text": "pt/intro.md",
          "title": "Introdução"
        },
        "finish": {
          "text": "pt/finish.md",
          "title": "Resumo"
        }
      }
    }
  ]
}
