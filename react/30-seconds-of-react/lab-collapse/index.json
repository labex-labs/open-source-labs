{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Create Collapsible React Components",
  "description": "In this lab, we will explore how to create a collapsible content component in React using the useState hook. This component will allow users to toggle the visibility of content by clicking on a button, making it a useful tool for organizing and presenting information on a webpage. By the end of this lab, you will have a better understanding of how to create reusable components in React that improve the accessibility and user experience of your web applications.",
  "meta": {
    "title": "React Collapsible Content | Web Development Tutorial",
    "description": "Learn how to create a collapsible content component in React using the useState hook. Improve accessibility and user experience in your web applications.",
    "keywords": "React, collapsible content, useState, web development, accessibility, user experience"
  },
  "difficulty": "Beginner",
  "time": 5,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Collapsible Content",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify the running status of the web service",
            "file": "verify1-1.sh",
            "hint": "Please click on 'Go Live' in the bottom right corner to run the web service on port 8080. Then, you can refresh the **Web 8080** Tab to preview the web page.",
            "timeout": 0,
            "showstderr": true
          },
          {
            "name": "Verify the status of script.js modification",
            "file": "verify1-2.sh",
            "hint": "Please follow the steps to complete the lab.",
            "timeout": 0,
            "showstderr": true
          },
          {
            "name": "Verify the status of style.css modification",
            "file": "verify1-3.sh",
            "hint": "Please follow the steps to complete the lab.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": []
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    },
    "assets": {
      "host01": [
        {
          "file": "index.html",
          "target": "~/project",
          "chmod": "ugo+rwx"
        },
        {
          "file": "script.js",
          "target": "~/project",
          "chmod": "ugo+rwx"
        },
        {
          "file": "style.css",
          "target": "~/project",
          "chmod": "ugo+rwx"
        }
      ]
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["Lotus-7"],
  "license": {
    "name": "CC-BY-4.0",
    "url": "https://github.com/30-seconds/30-seconds-of-code/blob/master/LICENSE",
    "repo": "https://github.com/30-seconds/30-seconds-of-code"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "创建可折叠的 React 组件",
      "description": "在本实验中，我们将探索如何使用 useState 钩子在 React 中创建一个可折叠内容组件。该组件将允许用户通过点击按钮来切换内容的可见性，使其成为在网页上组织和呈现信息的有用工具。在本实验结束时，你将更好地理解如何在 React 中创建可复用组件，从而改善你的 Web 应用程序的可访问性和用户体验。",
      "meta": {
        "title": "React 可折叠内容 | 网页开发教程",
        "description": "学习如何使用 useState 钩子在 React 中创建一个可折叠内容组件。改善你的 Web 应用程序的可访问性和用户体验。",
        "keywords": "React, 可折叠内容，useState, 网页开发，可访问性，用户体验"
      },
      "details": {
        "steps": [
          {
            "title": "可折叠内容",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "验证 Web 服务的运行状态",
                "file": "verify1-1.sh",
                "hint": "请点击右下角的“上线”以在端口 8080 上运行 Web 服务。然后，你可以刷新“Web 8080”标签页来预览网页。"
              },
              {
                "name": "验证 script.js 修改状态",
                "file": "verify1-2.sh",
                "hint": "请按照步骤完成实验。"
              },
              {
                "name": "验证 style.css 修改状态",
                "file": "verify1-3.sh",
                "hint": "请按照步骤完成实验。"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Crear componentes React collapsibles",
      "description": "En este laboratorio, exploraremos cómo crear un componente de contenido collapsible en React utilizando el hook useState. Este componente permitirá a los usuarios alternar la visibilidad del contenido al hacer clic en un botón, lo que lo convierte en una herramienta útil para organizar y presentar información en una página web. Al final de este laboratorio, tendrás una mejor comprensión de cómo crear componentes reutilizables en React que mejoren la accesibilidad y la experiencia del usuario de tus aplicaciones web.",
      "meta": {
        "title": "Contenido collapsible de React | Tutorial de desarrollo web",
        "description": "Aprende cómo crear un componente de contenido collapsible en React utilizando el hook useState. Mejora la accesibilidad y la experiencia del usuario en tus aplicaciones web.",
        "keywords": "React, contenido collapsible, useState, desarrollo web, accesibilidad, experiencia del usuario"
      },
      "details": {
        "steps": [
          {
            "title": "Contenido collapsible",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Verificar el estado de ejecución del servicio web",
                "file": "verify1-1.sh",
                "hint": "Haga clic en 'Go Live' en la esquina inferior derecha para ejecutar el servicio web en el puerto 8080. Luego, puede actualizar la pestaña **Web 8080** para previsualizar la página web."
              },
              {
                "name": "Verificar el estado de la modificación de script.js",
                "file": "verify1-2.sh",
                "hint": "Siga los pasos para completar el laboratorio."
              },
              {
                "name": "Verificar el estado de la modificación de style.css",
                "file": "verify1-3.sh",
                "hint": "Siga los pasos para completar el laboratorio."
              }
            ]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Créer des composants React rétractables",
      "description": "Dans ce laboratoire, nous allons explorer la manière de créer un composant de contenu rétractable en React en utilisant le hook useState. Ce composant permettra aux utilisateurs de basculer la visibilité du contenu en cliquant sur un bouton, ce qui en fera un outil pratique pour organiser et présenter des informations sur une page web. À la fin de ce laboratoire, vous aurez une meilleure compréhension de la manière de créer des composants réutilisables en React qui améliorent l'accessibilité et l'expérience utilisateur de vos applications web.",
      "meta": {
        "title": "Contenu rétractable React | Tutoriel de développement web",
        "description": "Découvrez comment créer un composant de contenu rétractable en React en utilisant le hook useState. Améliorez l'accessibilité et l'expérience utilisateur de vos applications web.",
        "keywords": "React, contenu rétractable, useState, développement web, accessibilité, expérience utilisateur"
      },
      "details": {
        "steps": [
          {
            "title": "Contenu rétractable",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Vérifiez le statut d'exécution du service web",
                "file": "verify1-1.sh",
                "hint": "Veuillez cliquer sur 'Go Live' dans le coin inférieur droit pour exécuter le service web sur le port 8080. Ensuite, vous pouvez rafraîchir l'onglet **Web 8080** pour prévisualiser la page web."
              },
              {
                "name": "Vérifiez le statut de la modification de script.js",
                "file": "verify1-2.sh",
                "hint": "Veuillez suivre les étapes pour terminer le laboratoire."
              },
              {
                "name": "Vérifiez le statut de la modification de style.css",
                "file": "verify1-3.sh",
                "hint": "Veuillez suivre les étapes pour terminer le laboratoire."
              }
            ]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Erstelle zusammenziehbare React-Komponenten",
      "description": "In diesem Lab werden wir untersuchen, wie man in React mithilfe des useState-Hooks eine zusammenziehbare Inhaltskomponente erstellt. Diese Komponente wird es Benutzern ermöglichen, die Sichtbarkeit des Inhalts durch Klicken auf einen Button umzuschalten, was ein nützliches Werkzeug für die Organisation und Präsentation von Informationen auf einer Webseite ist. Am Ende dieses Labs werden Sie ein besseres Verständnis dafür haben, wie man in React wiederverwendbare Komponenten erstellt, die die Zugänglichkeit und die Benutzererfahrung Ihrer Webanwendungen verbessern.",
      "meta": {
        "title": "React zusammenziehbarer Inhalt | Webdesign-Tutorial",
        "description": "Lernen Sie, wie man in React mithilfe des useState-Hooks eine zusammenziehbare Inhaltskomponente erstellt. Verbessern Sie die Zugänglichkeit und die Benutzererfahrung in Ihren Webanwendungen.",
        "keywords": "React, zusammenziehbarer Inhalt, useState, Webdesign, Zugänglichkeit, Benutzererfahrung"
      },
      "details": {
        "steps": [
          {
            "title": "Zusammenziehbarer Inhalt",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Überprüfen des Laufzustands des Webdiensts",
                "file": "verify1-1.sh",
                "hint": "Bitte klicken Sie in der unteren rechten Ecke auf 'Go Live', um den Webdienst auf Port 8080 auszuführen. Anschließend können Sie die Registerkarte **Web 8080** aktualisieren, um die Webseite anzuschauen."
              },
              {
                "name": "Überprüfen des Status der Änderungen in script.js",
                "file": "verify1-2.sh",
                "hint": "Bitte folgen Sie den Schritten, um das Lab abzuschließen."
              },
              {
                "name": "Überprüfen des Status der Änderungen in style.css",
                "file": "verify1-3.sh",
                "hint": "Bitte folgen Sie den Schritten, um das Lab abzuschließen."
              }
            ]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "折りたたみ可能な React コンポーネントを作成する",
      "description": "この実験では、useState フックを使って React で折りたたみ可能なコンテンツコンポーネントを作成する方法を探ります。このコンポーネントを使うと、ボタンをクリックすることでコンテンツの表示を切り替えることができ、Web ページ上の情報の整理と提示に役立つツールになります。この実験が終わるとき、Web アプリケーションのアクセシビリティとユーザーエクスペリエンスを向上させるための、React で再利用可能なコンポーネントを作成する方法をより深く理解しているでしょう。",
      "meta": {
        "title": "React の折りたたみ可能なコンテンツ | Web 開発チュートリアル",
        "description": "useState フックを使って React で折りたたみ可能なコンテンツコンポーネントを作成する方法を学びましょう。Web アプリケーションのアクセシビリティとユーザーエクスペリエンスを向上させます。",
        "keywords": "React, 折りたたみ可能なコンテンツ，useState, Web 開発，アクセシビリティ，ユーザーエクスペリエンス"
      },
      "details": {
        "steps": [
          {
            "title": "折りたたみ可能なコンテンツ",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "Web サービスの実行状態を確認する",
                "file": "verify1-1.sh",
                "hint": "右下隅の「Go Live」をクリックして、ポート 8080 で Web サービスを実行してください。その後、**Web 8080**タブを更新して Web ページをプレビューできます。"
              },
              {
                "name": "script.js の変更状態を確認する",
                "file": "verify1-2.sh",
                "hint": "実験を完了する手順に従ってください。"
              },
              {
                "name": "style.css の変更状態を確認する",
                "file": "verify1-3.sh",
                "hint": "実験を完了する手順に従ってください。"
              }
            ]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Создание свертываемых компонентов React",
      "description": "В этом практическом занятии мы изучим, как создать компонент с свертываемым содержимым в React с использованием хука useState. Этот компонент позволит пользователям переключать видимость содержимого, нажимая на кнопку, что делает его полезным инструментом для организации и представления информации на веб-странице. В конце этого практического занятия вы будете лучше понимать, как создавать повторно используемые компоненты в React, которые улучшают доступность и пользовательский опыт ваших веб-приложений.",
      "meta": {
        "title": "Свертываемое содержимое React | Руководство по веб-разработке",
        "description": "Изучите, как создать компонент с свертываемым содержимым в React с использованием хука useState. Повысьте доступность и пользовательский опыт в своих веб-приложениях.",
        "keywords": "React, свертываемое содержимое, useState, веб-разработка, доступность, пользовательский опыт"
      },
      "details": {
        "steps": [
          {
            "title": "Свертываемое содержимое",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "Проверить статус работы веб-сервиса",
                "file": "verify1-1.sh",
                "hint": "Пожалуйста, нажмите кнопку 'Go Live' в нижнем правом углу, чтобы запустить веб-сервис на порту 8080. Затем вы можете обновить вкладку **Web 8080**, чтобы просмотреть веб-страницу."
              },
              {
                "name": "Проверить статус изменения script.js",
                "file": "verify1-2.sh",
                "hint": "Пожалуйста, следуйте шагам, чтобы завершить практическое занятие."
              },
              {
                "name": "Проверить статус изменения style.css",
                "file": "verify1-3.sh",
                "hint": "Пожалуйста, следуйте шагам, чтобы завершить практическое занятие."
              }
            ]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    },
    {
      "lang": "ko",
      "title": "React 접을 수 있는 컴포넌트 만들기",
      "description": "이 랩에서는 useState 훅을 사용하여 React 에서 접을 수 있는 콘텐츠 컴포넌트를 만드는 방법을 살펴봅니다. 이 컴포넌트를 사용하면 사용자가 버튼을 클릭하여 콘텐츠의 가시성을 토글할 수 있어 웹 페이지에서 정보를 구성하고 표시하는 데 유용한 도구입니다. 이 랩을 마치면 웹 애플리케이션의 접근성과 사용자 경험을 향상시키는 재사용 가능한 React 컴포넌트를 만드는 방법에 대한 이해도가 높아질 것입니다.",
      "meta": {
        "title": "React 접기 기능 | 웹 개발 튜토리얼",
        "description": "useState 훅을 사용하여 React 에서 접을 수 있는 콘텐츠 컴포넌트를 만드는 방법을 알아보세요. 웹 애플리케이션의 접근성과 사용자 경험을 향상시키세요.",
        "keywords": "React, 접기 기능, useState, 웹 개발, 접근성, 사용자 경험"
      },
      "details": {
        "steps": [
          {
            "title": "접을 수 있는 콘텐츠",
            "text": "ko/step1.md",
            "verify": [
              {
                "name": "웹 서비스 실행 상태 확인",
                "file": "verify1-1.sh",
                "hint": "오른쪽 하단의 'Go Live'를 클릭하여 웹 서비스를 포트 8080 에서 실행하세요. 그런 다음 **Web 8080** 탭을 새로 고쳐 웹 페이지를 미리 볼 수 있습니다."
              },
              {
                "name": "script.js 수정 상태 확인",
                "file": "verify1-2.sh",
                "hint": "랩을 완료하려면 단계를 따르세요."
              },
              {
                "name": "style.css 수정 상태 확인",
                "file": "verify1-3.sh",
                "hint": "랩을 완료하려면 단계를 따르세요."
              }
            ]
          }
        ],
        "intro": {
          "text": "ko/intro.md",
          "title": "소개"
        },
        "finish": {
          "text": "ko/finish.md",
          "title": "요약"
        }
      }
    },
    {
      "lang": "pt",
      "title": "Criar Componentes React Recolhíveis",
      "description": "Neste laboratório, exploraremos como criar um componente de conteúdo recolhível em React usando o hook useState. Este componente permitirá que os usuários alternem a visibilidade do conteúdo clicando em um botão, tornando-o uma ferramenta útil para organizar e apresentar informações em uma página web. Ao final deste laboratório, você terá uma melhor compreensão de como criar componentes reutilizáveis em React que melhoram a acessibilidade e a experiência do usuário em suas aplicações web.",
      "meta": {
        "title": "Conteúdo Recolhível em React | Tutorial de Desenvolvimento Web",
        "description": "Aprenda a criar um componente de conteúdo recolhível em React usando o hook useState. Melhore a acessibilidade e a experiência do usuário em suas aplicações web.",
        "keywords": "React, conteúdo recolhível, useState, desenvolvimento web, acessibilidade, experiência do usuário, componentes React"
      },
      "details": {
        "steps": [
          {
            "title": "Conteúdo Recolhível",
            "text": "pt/step1.md",
            "verify": [
              {
                "name": "Verificar o status de execução do serviço web",
                "file": "verify1-1.sh",
                "hint": "Por favor, clique em 'Go Live' no canto inferior direito para executar o serviço web na porta 8080. Em seguida, você pode atualizar a aba **Web 8080** para visualizar a página web."
              },
              {
                "name": "Verificar o status da modificação do script.js",
                "file": "verify1-2.sh",
                "hint": "Por favor, siga os passos para completar o laboratório."
              },
              {
                "name": "Verificar o status da modificação do style.css",
                "file": "verify1-3.sh",
                "hint": "Por favor, siga os passos para completar o laboratório."
              }
            ]
          }
        ],
        "intro": {
          "text": "pt/intro.md",
          "title": "Introdução"
        },
        "finish": {
          "text": "pt/finish.md",
          "title": "Resumo"
        }
      }
    }
  ]
}
