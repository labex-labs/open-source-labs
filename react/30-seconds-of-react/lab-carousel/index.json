{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "React Carousel Component Creation",
  "description": "In this lab, we will explore how to create a carousel component using React. A carousel is a popular UI element that allows users to cycle through a set of images or content. By using the useState() and useEffect() hooks, we can build a simple yet functional carousel that automatically scrolls through a set of items.",
  "meta": {
    "title": "Create a Responsive React Carousel Component",
    "description": "Learn how to build a simple yet functional carousel component using React's useState and useEffect hooks.",
    "keywords": "carousel, component, ui, react, web development"
  },
  "difficulty": "Beginner",
  "time": 10,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Carousel",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify the running status of the web service",
            "file": "verify1-1.sh",
            "hint": "Please click on 'Go Live' in the bottom right corner to run the web service on port 8080. Then, you can refresh the **Web 8080** Tab to preview the web page.",
            "timeout": 0,
            "showstderr": true
          },
          {
            "name": "Verify the status of script.js modification",
            "file": "verify1-2.sh",
            "hint": "Please follow the steps to complete the lab.",
            "timeout": 0,
            "showstderr": true
          },
          {
            "name": "Verify the status of style.css modification",
            "file": "verify1-3.sh",
            "hint": "Please follow the steps to complete the lab.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": ["react/hooks", "react/jsx", "react/use_state_reducer"]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    },
    "assets": {
      "host01": [
        {
          "file": "index.html",
          "target": "~/project",
          "chmod": "ugo+rwx"
        },
        {
          "file": "script.js",
          "target": "~/project",
          "chmod": "ugo+rwx"
        },
        {
          "file": "style.css",
          "target": "~/project",
          "chmod": "ugo+rwx"
        }
      ]
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["Lotus-7"],
  "license": {
    "name": "CC-BY-4.0",
    "url": "https://github.com/30-seconds/30-seconds-of-code/blob/master/LICENSE",
    "repo": "https://github.com/30-seconds/30-seconds-of-code"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "使用 React 创建轮播组件",
      "description": "在本实验中，我们将探索如何使用 React 创建一个轮播组件。轮播是一种流行的用户界面 (UI) 元素，它允许用户循环浏览一组图像或内容。通过使用 `useState()` 和 `useEffect()` 钩子，我们可以构建一个简单但功能齐全的轮播，它会自动滚动浏览一组项目。",
      "meta": {
        "title": "创建响应式 React 轮播组件",
        "description": "学习如何使用 React 的 `useState` 和 `useEffect` 钩子构建一个简单但功能齐全的轮播组件。",
        "keywords": "轮播, 组件, 用户界面, React, 网页开发"
      },
      "details": {
        "steps": [
          {
            "title": "轮播",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "验证 Web 服务的运行状态",
                "file": "verify1-1.sh",
                "hint": "请点击右下角的“Go Live”以在端口 8080 上运行 Web 服务。然后，你可以刷新“Web 8080”标签页来预览网页。"
              },
              {
                "name": "验证 script.js 修改状态",
                "file": "verify1-2.sh",
                "hint": "请按照步骤完成实验。"
              },
              {
                "name": "验证 style.css 修改状态",
                "file": "verify1-3.sh",
                "hint": "请按照步骤完成实验。"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Creación de un componente de carrusel con React",
      "description": "En este laboratorio, exploraremos cómo crear un componente de carrusel utilizando React. Un carrusel es un elemento de interfaz de usuario popular que permite a los usuarios recorrer un conjunto de imágenes o contenido. Al utilizar los hooks useState() y useEffect(), podemos construir un carrusel simple pero funcional que desplace automáticamente un conjunto de elementos.",
      "meta": {
        "title": "Crea un componente de carrusel reactivo",
        "description": "Aprende cómo construir un componente de carrusel simple pero funcional utilizando los hooks useState y useEffect de React.",
        "keywords": "carrusel, componente, interfaz de usuario, react, desarrollo web"
      },
      "details": {
        "steps": [
          {
            "title": "Carrusel",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Verificar el estado de ejecución del servicio web",
                "file": "verify1-1.sh",
                "hint": "Haga clic en 'Go Live' en la esquina inferior derecha para ejecutar el servicio web en el puerto 8080. Luego, puede actualizar la pestaña **Web 8080** para previsualizar la página web."
              },
              {
                "name": "Verificar el estado de la modificación de script.js",
                "file": "verify1-2.sh",
                "hint": "Siga los pasos para completar el laboratorio."
              },
              {
                "name": "Verificar el estado de la modificación de style.css",
                "file": "verify1-3.sh",
                "hint": "Siga los pasos para completar el laboratorio."
              }
            ]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Création d'un composant carousel React",
      "description": "Dans ce laboratoire, nous allons explorer la manière de créer un composant carousel à l'aide de React. Un carousel est un élément d'interface utilisateur populaire qui permet aux utilisateurs de parcourir une série d'images ou de contenu. En utilisant les hooks useState() et useEffect(), nous pouvons construire un carousel simple mais fonctionnel qui défile automatiquement à travers une série d'éléments.",
      "meta": {
        "title": "Créer un composant carousel React responsive",
        "description": "Découvrez comment construire un composant carousel simple mais fonctionnel à l'aide des hooks useState et useEffect de React.",
        "keywords": "carousel, composant, interface utilisateur, react, développement web"
      },
      "details": {
        "steps": [
          {
            "title": "Carousel",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Vérifier le statut d'exécution du service web",
                "file": "verify1-1.sh",
                "hint": "Veuillez cliquer sur 'Go Live' dans le coin inférieur droit pour exécuter le service web sur le port 8080. Ensuite, vous pouvez actualiser l'onglet **Web 8080** pour prévisualiser la page web."
              },
              {
                "name": "Vérifier le statut de la modification de script.js",
                "file": "verify1-2.sh",
                "hint": "Veuillez suivre les étapes pour terminer le laboratoire."
              },
              {
                "name": "Vérifier le statut de la modification de style.css",
                "file": "verify1-3.sh",
                "hint": "Veuillez suivre les étapes pour terminer le laboratoire."
              }
            ]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Erstellung eines React - Carousel - Komponenten",
      "description": "In diesem Lab werden wir untersuchen, wie man mithilfe von React einen Carousel - Komponenten erstellt. Ein Carousel ist ein beliebtes Benutzeroberflächenelement, das es Benutzern ermöglicht, durch eine Reihe von Bildern oder Inhalten zu blättern. Mit den Hooks useState() und useEffect() können wir einen einfachen, aber funktionierenden Carousel - Komponenten erstellen, der automatisch durch eine Reihe von Elementen scrollt.",
      "meta": {
        "title": "Erstellen eines responsiven React - Carousel - Komponenten",
        "description": "Lernen Sie, wie man mithilfe von React's useState - und useEffect - Hooks einen einfachen, aber funktionierenden Carousel - Komponenten erstellt.",
        "keywords": "Carousel, Komponente, UI, React, Webentwicklung"
      },
      "details": {
        "steps": [
          {
            "title": "Carousel",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Überprüfen des Laufzustands des Webdiensts",
                "file": "verify1-1.sh",
                "hint": "Bitte klicken Sie in der unteren rechten Ecke auf 'Go Live', um den Webdienst auf Port 8080 auszuführen. Anschließend können Sie die Registerkarte **Web 8080** aktualisieren, um die Webseite anzuschauen."
              },
              {
                "name": "Überprüfen des Status der Änderungen in script.js",
                "file": "verify1-2.sh",
                "hint": "Bitte folgen Sie den Schritten, um das Lab abzuschließen."
              },
              {
                "name": "Überprüfen des Status der Änderungen in style.css",
                "file": "verify1-3.sh",
                "hint": "Bitte folgen Sie den Schritten, um das Lab abzuschließen."
              }
            ]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "Reactを使ったキャルーセルコンポーネントの作成",
      "description": "この実験では、Reactを使ってキャルーセルコンポーネントを作成する方法を探ります。キャルーセルは、ユーザーが一連の画像やコンテンツを循環させることができる人気のあるUI要素です。useState()とuseEffect()フックを使うことで、一連の項目を自動的にスクロールするシンプルで機能的なキャルーセルを構築することができます。",
      "meta": {
        "title": "応答性のあるReactキャルーセルコンポーネントを作成する",
        "description": "ReactのuseStateとuseEffectフックを使って、シンプルで機能的なキャルーセルコンポーネントを構築する方法を学びましょう。",
        "keywords": "キャルーセル, コンポーネント, UI, React, ウェブ開発"
      },
      "details": {
        "steps": [
          {
            "title": "キャルーセル",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "ウェブサービスの実行状況を確認する",
                "file": "verify1-1.sh",
                "hint": "右下隅の「Go Live」をクリックして、ポート8080でウェブサービスを実行してください。その後、**Web 8080** タブを更新してウェブページをプレビューできます。"
              },
              {
                "name": "script.jsの変更状況を確認する",
                "file": "verify1-2.sh",
                "hint": "実験を完了する手順に従ってください。"
              },
              {
                "name": "style.cssの変更状況を確認する",
                "file": "verify1-3.sh",
                "hint": "実験を完了する手順に従ってください。"
              }
            ]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Создание компонента карусели на React",
      "description": "В этом лабе мы исследуем, как создать компонент карусели с использованием React. Карусель - это популярный UI-элемент, который позволяет пользователям переключаться между набором изображений или контента. Используя хуки useState() и useEffect(), мы можем построить простую, но функциональную карусель, которая автоматически прокручивает набор элементов.",
      "meta": {
        "title": "Создайте адаптивный компонент карусели на React",
        "description": "Изучите, как построить простой, но функциональный компонент карусели с использованием хуков useState и useEffect React.",
        "keywords": "карусель, компонент, ui, react, веб-разработка"
      },
      "details": {
        "steps": [
          {
            "title": "Карусель",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "Проверить статус работы веб-сервиса",
                "file": "verify1-1.sh",
                "hint": "Пожалуйста, нажмите кнопку 'Go Live' в нижнем правом углу, чтобы запустить веб-сервис на порту 8080. Затем вы можете обновить вкладку **Web 8080**, чтобы просмотреть веб-страницу."
              },
              {
                "name": "Проверить статус изменения script.js",
                "file": "verify1-2.sh",
                "hint": "Пожалуйста, следуйте шагам для завершения лабы."
              },
              {
                "name": "Проверить статус изменения style.css",
                "file": "verify1-3.sh",
                "hint": "Пожалуйста, следуйте шагам для завершения лабы."
              }
            ]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    }
  ]
}
