{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "React useForm Hook",
  "description": "In this lab, we will be learning how to use the useForm hook in React to create a stateful value from the fields in a form. This will allow us to easily manage the state of our form inputs and update them as needed. By the end of this lab, you will have a better understanding of how to create and manage forms in React using the useForm hook.",
  "meta": {
    "title": "Mastering React useForm Hook: Effortless Form Management",
    "description": "Discover the power of the React useForm hook to simplify form handling and state management in your web applications.",
    "keywords": "useform, react, state management, web development, form management"
  },
  "difficulty": "Beginner",
  "time": 5,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "React useForm Hook",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify the running status of the web service",
            "file": "verify1-1.sh",
            "hint": "Please click on 'Go Live' in the bottom right corner to run the web service on port 8080. Then, you can refresh the **Web 8080** Tab to preview the web page.",
            "timeout": 0,
            "showstderr": true
          },
          {
            "name": "Verify the status of script.js modification",
            "file": "verify1-2.sh",
            "hint": "Please follow the steps to complete the lab.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "react/event_handling",
          "react/hooks",
          "react/jsx",
          "react/use_state_reducer"
        ]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    },
    "assets": {
      "host01": [
        {
          "file": "index.html",
          "target": "~/project",
          "chmod": "ugo+rwx"
        },
        {
          "file": "script.js",
          "target": "~/project",
          "chmod": "ugo+rwx"
        }
      ]
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["Lotus-7"],
  "license": {
    "name": "CC-BY-4.0",
    "url": "https://github.com/30-seconds/30-seconds-of-code/blob/master/LICENSE",
    "repo": "https://github.com/30-seconds/30-seconds-of-code"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "React useForm 钩子",
      "description": "在本实验中，我们将学习如何在 React 中使用 useForm 钩子从表单字段创建有状态值。这将使我们能够轻松管理表单输入的状态并根据需要进行更新。完成本实验后，你将更好地理解如何使用 useForm 钩子在 React 中创建和管理表单。",
      "meta": {
        "title": "掌握 React useForm 钩子：轻松管理表单",
        "description": "探索 React useForm 钩子的强大功能，简化你的 Web 应用程序中的表单处理和状态管理。",
        "keywords": "useform, React, 状态管理，网页开发，表单管理"
      },
      "details": {
        "steps": [
          {
            "title": "React useForm 钩子",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "验证 Web 服务的运行状态",
                "file": "verify1-1.sh",
                "hint": "请点击右下角的“Go Live”以在端口 8080 上运行 Web 服务。然后，你可以刷新“Web 8080”标签页来预览网页。"
              },
              {
                "name": "验证 script.js 修改状态",
                "file": "verify1-2.sh",
                "hint": "请按照步骤完成实验。"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "React useForm Hook",
      "description": "En este laboratorio, aprenderemos a usar el hook useForm en React para crear un valor con estado a partir de los campos de un formulario. Esto nos permitirá manejar fácilmente el estado de nuestras entradas de formulario y actualizarlas según sea necesario. Al final de este laboratorio, tendrás una mejor comprensión de cómo crear y manejar formularios en React usando el hook useForm.",
      "meta": {
        "title": "Dominando el hook React useForm: Gestión de formularios sin esfuerzo",
        "description": "Descubre el poder del hook React useForm para simplificar el manejo de formularios y la gestión de estado en tus aplicaciones web.",
        "keywords": "useform, react, gestión de estado, desarrollo web, gestión de formularios"
      },
      "details": {
        "steps": [
          {
            "title": "React useForm Hook",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Verificar el estado de ejecución del servicio web",
                "file": "verify1-1.sh",
                "hint": "Haga clic en 'Go Live' en la esquina inferior derecha para ejecutar el servicio web en el puerto 8080. Luego, puede actualizar la pestaña **Web 8080** para previsualizar la página web."
              },
              {
                "name": "Verificar el estado de la modificación de script.js",
                "file": "verify1-2.sh",
                "hint": "Siga los pasos para completar el laboratorio."
              }
            ]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "React useForm Hook",
      "description": "Dans ce laboratoire, nous allons apprendre à utiliser le crochet useForm en React pour créer une valeur avec état à partir des champs d'un formulaire. Cela nous permettra de gérer facilement l'état de nos entrées de formulaire et de les mettre à jour selon les besoins. À la fin de ce laboratoire, vous aurez une meilleure compréhension de la manière de créer et de gérer des formulaires en React en utilisant le crochet useForm.",
      "meta": {
        "title": "Maîtriser le crochet React useForm : Gestion de formulaire sans effort",
        "description": "Découvrez le pouvoir du crochet React useForm pour simplifier la gestion des formulaires et de l'état dans vos applications web.",
        "keywords": "useform, react, gestion d'état, développement web, gestion de formulaire"
      },
      "details": {
        "steps": [
          {
            "title": "React useForm Hook",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Vérifier le statut d'exécution du service web",
                "file": "verify1-1.sh",
                "hint": "Veuillez cliquer sur 'Go Live' dans le coin inférieur droit pour exécuter le service web sur le port 8080. Ensuite, vous pouvez rafraîchir l'onglet **Web 8080** pour prévisualiser la page web."
              },
              {
                "name": "Vérifier le statut de modification de script.js",
                "file": "verify1-2.sh",
                "hint": "Veuillez suivre les étapes pour terminer le laboratoire."
              }
            ]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "React useForm-Hook",
      "description": "In diesem Lab werden wir lernen, wie man den useForm-Hook in React verwendet, um einen zustandsbehafteten Wert aus den Feldern eines Formulars zu erstellen. Dies wird es uns ermöglichen, den Zustand unserer Formular-Eingaben leicht zu verwalten und ihn nach Bedarf zu aktualisieren. Am Ende dieses Labs werdet ihr ein besseres Verständnis dafür haben, wie man Formulare in React mit dem useForm-Hook erstellt und verwaltet.",
      "meta": {
        "title": "Meisterhaftes Arbeiten mit dem React useForm-Hook: Effortlose Formularverwaltung",
        "description": "Entdecken Sie die Macht des React useForm-Hooks, um die Formularbehandlung und den Zustandsmanagement in Ihren Webanwendungen zu vereinfachen.",
        "keywords": "useform, react, zustandsmanagement, Webanwendung, Formularverwaltung"
      },
      "details": {
        "steps": [
          {
            "title": "React useForm-Hook",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Verifizieren des Laufzustands des Webdiensts",
                "file": "verify1-1.sh",
                "hint": "Bitte klicken Sie auf 'Go Live' in der unteren rechten Ecke, um den Webdienst auf Port 8080 auszuführen. Anschließend können Sie die Registerkarte **Web 8080** aktualisieren, um die Webseite anzuschauen."
              },
              {
                "name": "Verifizieren des Status der Änderungen in script.js",
                "file": "verify1-2.sh",
                "hint": "Bitte folgen Sie den Schritten, um das Lab abzuschließen."
              }
            ]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "React useForm フック",
      "description": "この実験では、React で useForm フックを使用してフォームのフィールドから状態付きの値を作成する方法を学びます。これにより、フォーム入力の状態を簡単に管理し、必要に応じて更新することができます。この実験が終了するとき、useForm フックを使用して React でフォームを作成および管理する方法をより深く理解しているでしょう。",
      "meta": {
        "title": "React useForm フックをマスターする：簡単なフォーム管理",
        "description": "React useForm フックの力を発見して、Web アプリケーションでのフォーム処理と状態管理を簡素化しましょう。",
        "keywords": "useform, react, 状態管理，Web 開発，フォーム管理"
      },
      "details": {
        "steps": [
          {
            "title": "React useForm フック",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "Web サービスの実行状態を確認する",
                "file": "verify1-1.sh",
                "hint": "右下隅の「Go Live」をクリックして 8080 ポートで Web サービスを実行してください。その後、**Web 8080** タブを更新して Web ページをプレビューできます。"
              },
              {
                "name": "script.js の変更状態を確認する",
                "file": "verify1-2.sh",
                "hint": "実験を完了する手順に従ってください。"
              }
            ]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "React useForm Хук",
      "description": "В этом практическом занятии мы научимся использовать хук useForm в React для создания состояния на основе полей формы. Это позволит нам легко управлять состоянием вводных данных формы и обновлять их по мере необходимости. В конце практического занятия вы будете лучше понимать, как создавать и управлять формами в React с использованием хука useForm.",
      "meta": {
        "title": "Мастерство в использовании React useForm Хука: effortless управление формой",
        "description": "Откройте силу хука React useForm для упрощения обработки форм и управления состоянием в ваших веб-приложениях.",
        "keywords": "useform, react, управление состоянием, веб-разработка, управление формой"
      },
      "details": {
        "steps": [
          {
            "title": "React useForm Хук",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "Проверить статус работы веб-сервиса",
                "file": "verify1-1.sh",
                "hint": "Пожалуйста, нажмите кнопку 'Go Live' в нижнем правом углу, чтобы запустить веб-сервис на порту 8080. Затем вы можете обновить вкладку **Web 8080**, чтобы просмотреть веб-страницу."
              },
              {
                "name": "Проверить статус изменения script.js",
                "file": "verify1-2.sh",
                "hint": "Пожалуйста, следуйте шагам, чтобы завершить практическое занятие."
              }
            ]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    },
    {
      "lang": "ko",
      "title": "React useForm 훅",
      "description": "이 랩에서는 React 에서 useForm 훅을 사용하여 폼 필드에서 상태 값을 생성하는 방법을 배웁니다. 이를 통해 폼 입력의 상태를 쉽게 관리하고 필요에 따라 업데이트할 수 있습니다. 이 랩을 마치면 useForm 훅을 사용하여 React 에서 폼을 생성하고 관리하는 방법에 대한 이해도가 높아질 것입니다.",
      "meta": {
        "title": "React useForm 훅 마스터하기: 간편한 폼 관리",
        "description": "웹 애플리케이션에서 폼 처리 및 상태 관리를 간소화하는 React useForm 훅의 강력한 기능을 알아보세요.",
        "keywords": "useform, react, 상태 관리, 웹 개발, 폼 관리"
      },
      "details": {
        "steps": [
          {
            "title": "React useForm 훅",
            "text": "ko/step1.md",
            "verify": [
              {
                "name": "웹 서비스 실행 상태 확인",
                "file": "verify1-1.sh",
                "hint": "오른쪽 하단의 'Go Live'를 클릭하여 웹 서비스를 포트 8080 에서 실행하십시오. 그런 다음 **Web 8080** 탭을 새로 고쳐 웹 페이지를 미리 볼 수 있습니다."
              },
              {
                "name": "script.js 수정 상태 확인",
                "file": "verify1-2.sh",
                "hint": "랩을 완료하려면 단계를 따르십시오."
              }
            ]
          }
        ],
        "intro": {
          "text": "ko/intro.md",
          "title": "소개"
        },
        "finish": {
          "text": "ko/finish.md",
          "title": "요약"
        }
      }
    },
    {
      "lang": "pt",
      "title": "React useForm Hook",
      "description": "Neste laboratório, aprenderemos como usar o hook useForm no React para criar um valor com estado a partir dos campos em um formulário. Isso nos permitirá gerenciar facilmente o estado das entradas do nosso formulário e atualizá-las conforme necessário. Ao final deste laboratório, você terá uma melhor compreensão de como criar e gerenciar formulários no React usando o hook useForm.",
      "meta": {
        "title": "Dominando o React useForm Hook: Gerenciamento de Formulários Sem Esforço",
        "description": "Descubra o poder do hook React useForm para simplificar o tratamento de formulários e o gerenciamento de estado em suas aplicações web. Aprenda a otimizar seus formulários React com facilidade.",
        "keywords": "useform, react, gerenciamento de estado, desenvolvimento web, gerenciamento de formulários, formulários react"
      },
      "details": {
        "steps": [
          {
            "title": "React useForm Hook",
            "text": "pt/step1.md",
            "verify": [
              {
                "name": "Verificar o status de execução do serviço web",
                "file": "verify1-1.sh",
                "hint": "Por favor, clique em 'Go Live' no canto inferior direito para executar o serviço web na porta 8080. Em seguida, você pode atualizar a aba **Web 8080** para visualizar a página web."
              },
              {
                "name": "Verificar o status da modificação do script.js",
                "file": "verify1-2.sh",
                "hint": "Por favor, siga os passos para completar o laboratório."
              }
            ]
          }
        ],
        "intro": {
          "text": "pt/intro.md",
          "title": "Introdução"
        },
        "finish": {
          "text": "pt/finish.md",
          "title": "Resumo"
        }
      }
    }
  ]
}
