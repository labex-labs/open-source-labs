{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "React Countdown Timer Component",
  "description": "In this lab, we will be building a countdown timer component using React. The timer will accept props for the starting time and will render a visual representation of the time left. It will also include buttons to pause, resume, and restart the timer, and will display a message when the time runs out. By completing this lab, you will gain experience using state and effects in React to build dynamic and interactive components.",
  "meta": {
    "title": "Build a Countdown Timer with React",
    "description": "Learn how to create an interactive countdown timer component using React, with features like pause, resume, and restart.",
    "keywords": "react, react hooks, state management, web development, countdown timer"
  },
  "difficulty": "Beginner",
  "time": 5,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Countdown Timer",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify the running status of the web service",
            "file": "verify1-1.sh",
            "hint": "Please click on 'Go Live' in the bottom right corner to run the web service on port 8080. Then, you can refresh the **Web 8080** Tab to preview the web page.",
            "timeout": 0,
            "showstderr": true
          },
          {
            "name": "Verify the status of script.js modification",
            "file": "verify1-2.sh",
            "hint": "Please follow the steps to complete the lab.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": []
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    },
    "assets": {
      "host01": [
        {
          "file": "index.html",
          "target": "~/project",
          "chmod": "ugo+rwx"
        },
        {
          "file": "script.js",
          "target": "~/project",
          "chmod": "ugo+rwx"
        }
      ]
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["Lotus-7"],
  "license": {
    "name": "CC-BY-4.0",
    "url": "https://github.com/30-seconds/30-seconds-of-code/blob/master/LICENSE",
    "repo": "https://github.com/30-seconds/30-seconds-of-code"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "React 倒计时器组件",
      "description": "在这个实验中，我们将使用 React 构建一个倒计时器组件。该定时器将接受起始时间的属性，并呈现剩余时间的可视化表示。它还将包括用于暂停、恢复和重新启动定时器的按钮，并在时间用完时显示一条消息。通过完成这个实验，你将获得使用 React 中的状态和效果来构建动态和交互式组件的经验。",
      "meta": {
        "title": "使用 React 构建倒计时器",
        "description": "学习如何使用 React 创建一个交互式倒计时器组件，具备暂停、恢复和重新启动等功能。",
        "keywords": "React, React 钩子，状态管理，网页开发，倒计时器"
      },
      "details": {
        "steps": [
          {
            "title": "倒计时器",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "验证 Web 服务的运行状态",
                "file": "verify1-1.sh",
                "hint": "请点击右下角的“Go Live”在 8080 端口运行 Web 服务。然后，你可以刷新“Web 8080”标签页来预览网页。"
              },
              {
                "name": "验证 script.js 修改状态",
                "file": "verify1-2.sh",
                "hint": "请按照步骤完成实验。"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Componente de temporizador 倒计时器 de React",
      "description": "En este laboratorio, construiremos un componente de temporizador 倒计时器 utilizando React. El temporizador aceptará propiedades para el tiempo de inicio y mostrará una representación visual del tiempo restante. También incluirá botones para pausar, reanudar y reiniciar el temporizador, y mostrará un mensaje cuando se agote el tiempo. Al completar este laboratorio, adquirirá experiencia en el uso de estado y efectos en React para construir componentes dinámicos e interactivos.",
      "meta": {
        "title": "Construir un temporizador 倒计时器 con React",
        "description": "Aprenda cómo crear un componente de temporizador 倒计时器 interactivo utilizando React, con características como pausa, reanudación y reinicio.",
        "keywords": "react, react hooks, gestión de estado, desarrollo web, temporizador 倒计时器"
      },
      "details": {
        "steps": [
          {
            "title": "Temporizador 倒计时器",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Verificar el estado de ejecución del servicio web",
                "file": "verify1-1.sh",
                "hint": "Haga clic en 'Go Live' en la esquina inferior derecha para ejecutar el servicio web en el puerto 8080. Luego, puede actualizar la pestaña **Web 8080** para previsualizar la página web."
              },
              {
                "name": "Verificar el estado de la modificación de script.js",
                "file": "verify1-2.sh",
                "hint": "Siga los pasos para completar el laboratorio."
              }
            ]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Composant de minuteur à rebours React",
      "description": "Dans ce laboratoire, nous allons construire un composant de minuteur à rebours en utilisant React. Le minuteur acceptera des props pour le temps de départ et affichera une représentation visuelle du temps restant. Il inclura également des boutons pour mettre en pause, reprendre et redémarrer le minuteur, et affichera un message lorsque le temps est écoulé. En complétant ce laboratoire, vous acquerrez de l'expérience dans l'utilisation de l'état et des effets en React pour construire des composants dynamiques et interactifs.",
      "meta": {
        "title": "Créer un minuteur à rebours avec React",
        "description": "Découvrez comment créer un composant de minuteur à rebours interactif en utilisant React, avec des fonctionnalités telles que la mise en pause, la reprise et le redémarrage.",
        "keywords": "react, react hooks, gestion d'état, développement web, minuteur à rebours"
      },
      "details": {
        "steps": [
          {
            "title": "Minuteur à rebours",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Vérifiez le statut d'exécution du service web",
                "file": "verify1-1.sh",
                "hint": "Veuillez cliquer sur 'Go Live' dans le coin inférieur droit pour exécuter le service web sur le port 8080. Ensuite, vous pouvez actualiser l'onglet **Web 8080** pour prévisualiser la page web."
              },
              {
                "name": "Vérifiez l'état de la modification de script.js",
                "file": "verify1-2.sh",
                "hint": "Veuillez suivre les étapes pour terminer le laboratoire."
              }
            ]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "React Countdown Timer Komponente",
      "description": "In diesem Lab bauen wir eine Countdown-Timer-Komponente mit React. Der Timer wird Props für die Startzeit akzeptieren und eine visuelle Darstellung der verbleibenden Zeit rendern. Es wird auch Buttons zum Pausieren, Fortsetzen und Neustarten des Timers geben und eine Nachricht anzeigen, wenn die Zeit abgelaufen ist. Indem Sie dieses Lab absolvieren, werden Sie Erfahrungen beim Verwenden von Zustand und Effekten in React für das Erstellen dynamischer und interaktiver Komponenten sammeln.",
      "meta": {
        "title": "Erstelle einen Countdown-Timer mit React",
        "description": "Lerne, wie du eine interaktive Countdown-Timer-Komponente mit React erstellst, mit Funktionen wie Pause, Fortsetzen und Neustarten.",
        "keywords": "react, react hooks, zustandsverwaltung, webentwicklung, countdown timer"
      },
      "details": {
        "steps": [
          {
            "title": "Countdown Timer",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Überprüfen des Laufzustands des Webdiensts",
                "file": "verify1-1.sh",
                "hint": "Bitte klicken Sie in der unteren rechten Ecke auf 'Go Live', um den Webdienst auf Port 8080 auszuführen. Anschließend können Sie die Registerkarte **Web 8080** aktualisieren, um die Webseite anzuschauen."
              },
              {
                "name": "Überprüfen des Status der Änderungen an script.js",
                "file": "verify1-2.sh",
                "hint": "Bitte folgen Sie den Schritten, um das Lab abzuschließen."
              }
            ]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "React でカウントダウンタイマーコンポーネントを作成する",
      "description": "この実験では、React を使ってカウントダウンタイマーコンポーネントを作成します。タイマーは開始時刻のための props を受け取り、残り時間の視覚的表現をレンダリングします。また、タイマーを一時停止、再開、再起動するためのボタンも含み、時間切れになったときにメッセージを表示します。この実験を完了することで、React で状態とエフェクトを使って動的で対話型のコンポーネントを構築する経験を得ることができます。",
      "meta": {
        "title": "React を使ってカウントダウンタイマーを作成する",
        "description": "React を使って、一時停止、再開、再起動などの機能付きの対話型カウントダウンタイマーコンポーネントを作成する方法を学びましょう。",
        "keywords": "react, react フック，状態管理，ウェブ開発，カウントダウンタイマー"
      },
      "details": {
        "steps": [
          {
            "title": "カウントダウンタイマー",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "ウェブサービスの実行状態を確認する",
                "file": "verify1-1.sh",
                "hint": "右下隅の「Go Live」をクリックして、ポート 8080 でウェブサービスを実行してください。その後、**Web 8080**タブを更新してウェブページをプレビューできます。"
              },
              {
                "name": "script.js の変更状態を確認する",
                "file": "verify1-2.sh",
                "hint": "実験を完了するための手順に従ってください。"
              }
            ]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Компонент обратного отсчета времени на React",
      "description": "В этом лабораторном задании мы создадим компонент обратного отсчета времени с использованием React. Таймер будет принимать свойства для начального времени и будет отображать визуальное представление оставшегося времени. Также в нем будут кнопки для паузы, возобновления и перезапуска таймера, и будет показано сообщение, когда время истекло. Завершив это лабораторное задание, вы получите опыт в использовании состояния и эффектов в React для создания динамических и интерактивных компонентов.",
      "meta": {
        "title": "Создайте обратный отсчет времени с использованием React",
        "description": "Изучите, как создать интерактивный компонент обратного отсчета времени с использованием React, с такими функциями, как пауза, возобновление и перезапуск.",
        "keywords": "react, react hooks, управление состоянием, веб-разработка, обратный отсчет времени"
      },
      "details": {
        "steps": [
          {
            "title": "Обратный отсчет времени",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "Проверить статус работы веб-сервиса",
                "file": "verify1-1.sh",
                "hint": "Пожалуйста, нажмите кнопку 'Запустить в браузере' в нижнем правом углу, чтобы запустить веб-сервис на порту 8080. Затем вы можете обновить вкладку **Web 8080**, чтобы просмотреть веб-страницу."
              },
              {
                "name": "Проверить статус изменения script.js",
                "file": "verify1-2.sh",
                "hint": "Пожалуйста, следуйте шагам для завершения лабораторной работы."
              }
            ]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    },
    {
      "lang": "ko",
      "title": "React 카운트다운 타이머 컴포넌트",
      "description": "이 랩에서는 React 를 사용하여 카운트다운 타이머 컴포넌트를 구축합니다. 타이머는 시작 시간을 위한 props 를 받아 남은 시간의 시각적 표현을 렌더링합니다. 또한 일시 중지, 재개 및 재시작 버튼을 포함하며, 시간이 다 되면 메시지를 표시합니다. 이 랩을 완료함으로써 React 에서 동적이고 대화형 컴포넌트를 구축하기 위해 state 와 effect 를 사용하는 경험을 얻게 됩니다.",
      "meta": {
        "title": "React 로 카운트다운 타이머 만들기 - React 타이머 구현",
        "description": "일시 중지, 재개 및 재시작과 같은 기능을 갖춘 대화형 카운트다운 타이머 컴포넌트를 React 를 사용하여 만드는 방법을 알아보세요. React 카운트다운 타이머 제작 튜토리얼.",
        "keywords": "react, react hooks, 상태 관리, 웹 개발, 카운트다운 타이머, 리액트 타이머, react 타이머 만들기, react 카운트다운"
      },
      "details": {
        "steps": [
          {
            "title": "카운트다운 타이머",
            "text": "ko/step1.md",
            "verify": [
              {
                "name": "웹 서비스 실행 상태 확인",
                "file": "verify1-1.sh",
                "hint": "오른쪽 하단의 'Go Live'를 클릭하여 포트 8080 에서 웹 서비스를 실행하세요. 그런 다음 **Web 8080** 탭을 새로 고쳐 웹 페이지를 미리 볼 수 있습니다."
              },
              {
                "name": "script.js 수정 상태 확인",
                "file": "verify1-2.sh",
                "hint": "랩을 완료하려면 단계를 따르세요."
              }
            ]
          }
        ],
        "intro": {
          "text": "ko/intro.md",
          "title": "소개"
        },
        "finish": {
          "text": "ko/finish.md",
          "title": "요약"
        }
      }
    },
    {
      "lang": "pt",
      "title": "Componente de Temporizador de Contagem Regressiva React",
      "description": "Neste laboratório, construiremos um componente de temporizador de contagem regressiva usando React. O temporizador aceitará props para o tempo inicial e renderizará uma representação visual do tempo restante. Ele também incluirá botões para pausar, retomar e reiniciar o temporizador, e exibirá uma mensagem quando o tempo acabar. Ao concluir este laboratório, você ganhará experiência usando estado e efeitos em React para construir componentes dinâmicos e interativos.",
      "meta": {
        "title": "Crie um Temporizador de Contagem Regressiva com React - Tutorial Interativo",
        "description": "Aprenda a criar um componente de temporizador de contagem regressiva interativo usando React, com recursos como pausa, retomada e reinício. Desenvolva suas habilidades em React com este guia prático.",
        "keywords": "react, react hooks, gerenciamento de estado, desenvolvimento web, temporizador de contagem regressiva, tutorial react, contador regressivo react, criar temporizador react"
      },
      "details": {
        "steps": [
          {
            "title": "Temporizador de Contagem Regressiva",
            "text": "pt/step1.md",
            "verify": [
              {
                "name": "Verifique o status de execução do serviço web",
                "file": "verify1-1.sh",
                "hint": "Por favor, clique em 'Go Live' no canto inferior direito para executar o serviço web na porta 8080. Em seguida, você pode atualizar a aba **Web 8080** para visualizar a página web."
              },
              {
                "name": "Verifique o status da modificação do script.js",
                "file": "verify1-2.sh",
                "hint": "Por favor, siga os passos para completar o laboratório."
              }
            ]
          }
        ],
        "intro": {
          "text": "pt/intro.md",
          "title": "Introdução"
        },
        "finish": {
          "text": "pt/finish.md",
          "title": "Resumo"
        }
      }
    }
  ]
}
