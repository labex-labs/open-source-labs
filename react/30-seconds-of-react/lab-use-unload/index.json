{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "React useUnload Hook",
  "description": "In this lab, we will explore the useUnload hook in React, which allows us to handle the beforeunload window event. The purpose of this lab is to demonstrate how to use this hook to create a callback function that will be triggered when the user tries to close the window. We will also learn how to perform cleanup after the component is unmounted. By the end of this lab, you will have a better understanding of how to manage window events in React.",
  "meta": {
    "title": "Mastering the React useUnload Hook",
    "description": "Discover how to handle the beforeunload window event in React using the useUnload hook, ensuring seamless user experience.",
    "keywords": "user experience, useunload, react, beforeunload, window event"
  },
  "difficulty": "Beginner",
  "time": 10,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "React useUnload Hook",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify the running status of the web service",
            "file": "verify1-1.sh",
            "hint": "Please click on 'Go Live' in the bottom right corner to run the web service on port 8080. Then, you can refresh the **Web 8080** Tab to preview the web page.",
            "timeout": 0,
            "showstderr": true
          },
          {
            "name": "Verify the status of script.js modification",
            "file": "verify1-2.sh",
            "hint": "Please follow the steps to complete the lab.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": ["react/hooks", "react/jsx"]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    },
    "assets": {
      "host01": [
        {
          "file": "index.html",
          "target": "~/project",
          "chmod": "ugo+rwx"
        },
        {
          "file": "script.js",
          "target": "~/project",
          "chmod": "ugo+rwx"
        }
      ]
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["Lotus-7"],
  "license": {
    "name": "CC-BY-4.0",
    "url": "https://github.com/30-seconds/30-seconds-of-code/blob/master/LICENSE",
    "repo": "https://github.com/30-seconds/30-seconds-of-code"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "React useUnload 钩子",
      "description": "在本实验中，我们将探索 React 中的 useUnload 钩子，它使我们能够处理 beforeunload 窗口事件。本实验的目的是演示如何使用此钩子创建一个回调函数，该函数将在用户尝试关闭窗口时触发。我们还将学习如何在组件卸载后执行清理操作。在本实验结束时，你将更好地理解如何在 React 中管理窗口事件。",
      "meta": {
        "title": "掌握 React useUnload 钩子",
        "description": "探索如何使用 useUnload 钩子在 React 中处理 beforeunload 窗口事件，确保无缝用户体验。",
        "keywords": "用户体验, useunload, react, beforeunload, 窗口事件"
      },
      "details": {
        "steps": [
          {
            "title": "React useUnload 钩子",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "验证网络服务的运行状态",
                "file": "verify1-1.sh",
                "hint": "请点击右下角的“上线”以在端口 8080 上运行网络服务。然后，你可以刷新 **Web 8080** 标签页来预览网页。"
              },
              {
                "name": "验证 script.js 修改状态",
                "file": "verify1-2.sh",
                "hint": "请按照步骤完成实验。"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Hook useUnload de React",
      "description": "En este laboratorio, exploraremos el hook useUnload en React, que nos permite manejar el evento de ventana beforeunload. El propósito de este laboratorio es demostrar cómo usar este hook para crear una función de devolución de llamada (callback) que se activará cuando el usuario intente cerrar la ventana. También aprenderemos cómo realizar la limpieza después de que el componente se desmonte. Al final de este laboratorio, tendrás una mejor comprensión de cómo administrar los eventos de ventana en React.",
      "meta": {
        "title": "Dominando el Hook useUnload de React",
        "description": "Descubre cómo manejar el evento de ventana beforeunload en React utilizando el hook useUnload, asegurando una experiencia de usuario perfecta.",
        "keywords": "experiencia de usuario, useunload, react, beforeunload, evento de ventana"
      },
      "details": {
        "steps": [
          {
            "title": "Hook useUnload de React",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Verificar el estado de ejecución del servicio web",
                "file": "verify1-1.sh",
                "hint": "Por favor, haz clic en 'Go Live' en la esquina inferior derecha para ejecutar el servicio web en el puerto 8080. Luego, puedes actualizar la pestaña **Web 8080** para ver una vista previa de la página web."
              },
              {
                "name": "Verificar el estado de la modificación de script.js",
                "file": "verify1-2.sh",
                "hint": "Por favor, sigue los pasos para completar el laboratorio."
              }
            ]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Hook React useUnload",
      "description": "Dans ce laboratoire, nous allons explorer le hook useUnload dans React, qui nous permet de gérer l'événement de fenêtre beforeunload. Le but de ce laboratoire est de démontrer comment utiliser ce hook pour créer une fonction de rappel qui sera déclenchée lorsque l'utilisateur tente de fermer la fenêtre. Nous apprendrons également comment effectuer le nettoyage après le démontage du composant. À la fin de ce laboratoire, vous aurez une meilleure compréhension de la gestion des événements de fenêtre dans React.",
      "meta": {
        "title": "Maîtriser le hook React useUnload",
        "description": "Découvrez comment gérer l'événement de fenêtre beforeunload dans React en utilisant le hook useUnload, garantissant une expérience utilisateur transparente.",
        "keywords": "expérience utilisateur, useunload, react, beforeunload, événement de fenêtre"
      },
      "details": {
        "steps": [
          {
            "title": "Hook React useUnload",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Vérifier le statut d'exécution du service web",
                "file": "verify1-1.sh",
                "hint": "Veuillez cliquer sur 'Go Live' dans le coin inférieur droit pour exécuter le service web sur le port 8080. Ensuite, vous pouvez actualiser l'onglet **Web 8080** pour prévisualiser la page web."
              },
              {
                "name": "Vérifier le statut de modification de script.js",
                "file": "verify1-2.sh",
                "hint": "Veuillez suivre les étapes pour terminer le laboratoire."
              }
            ]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "React useUnload-Hook",
      "description": "In diesem Lab werden wir den useUnload-Hook in React untersuchen, der es uns ermöglicht, das beforeunload-Fensterereignis (window event) zu behandeln. Das Ziel dieses Labs besteht darin, zu zeigen, wie man diesen Hook verwendet, um eine Callback-Funktion zu erstellen, die ausgelöst wird, wenn der Benutzer versucht, das Fenster zu schließen. Wir werden auch lernen, wie man nach dem Entfernen der Komponente (unmounting) die Bereinigung (cleanup) durchführt. Am Ende dieses Labs werden Sie besser verstehen, wie man Fensterereignisse in React verwaltet.",
      "meta": {
        "title": "Beherrschen des React useUnload-Hooks",
        "description": "Entdecken Sie, wie Sie das beforeunload-Fensterereignis in React mit dem useUnload-Hook behandeln können, um ein nahtloses Benutzererlebnis zu gewährleisten.",
        "keywords": "Benutzererlebnis, useunload, react, beforeunload, Fensterereignis (window event)"
      },
      "details": {
        "steps": [
          {
            "title": "React useUnload-Hook",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Überprüfen Sie den Laufstatus des Web-Services",
                "file": "verify1-1.sh",
                "hint": "Klicken Sie bitte auf 'Go Live' in der unteren rechten Ecke, um den Web-Service auf Port 8080 auszuführen. Anschließend können Sie die Registerkarte **Web 8080** aktualisieren, um die Webseite anzusehen."
              },
              {
                "name": "Überprüfen Sie den Status der Änderungen an script.js",
                "file": "verify1-2.sh",
                "hint": "Bitte befolgen Sie die Schritte, um das Lab abzuschließen."
              }
            ]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "React の useUnload フック",
      "description": "この実験では、React の useUnload フックを探索します。このフックを使用すると、beforeunload ウィンドウイベントを処理できます。この実験の目的は、このフックを使用して、ユーザーがウィンドウを閉じようとしたときにトリガーされるコールバック関数を作成する方法を示すことです。また、コンポーネントがアンマウントされた後のクリーンアップを行う方法も学びます。この実験の最後まで進めると、React でウィンドウイベントを管理する方法をより深く理解できるようになります。",
      "meta": {
        "title": "React の useUnload フックをマスターする",
        "description": "useUnload フックを使用して React で beforeunload ウィンドウイベントを処理する方法を学び、シームレスなユーザー体験を実現しましょう。",
        "keywords": "ユーザー体験, useunload, react, beforeunload, ウィンドウイベント"
      },
      "details": {
        "steps": [
          {
            "title": "React の useUnload フック",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "Web サービスの実行状態を確認する",
                "file": "verify1-1.sh",
                "hint": "右下隅にある「Go Live」をクリックして、ポート 8080 で Web サービスを実行してください。その後、**Web 8080** タブを更新すると、Web ページをプレビューできます。"
              },
              {
                "name": "script.js の変更状態を確認する",
                "file": "verify1-2.sh",
                "hint": "手順に従って実験を完了してください。"
              }
            ]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Хук React useUnload",
      "description": "В этом лабораторном занятии мы рассмотрим хук useUnload в React, который позволяет нам обрабатывать событие окна beforeunload. Цель этого лабораторного занятия - показать, как использовать этот хук для создания функции обратного вызова, которая будет вызываться, когда пользователь пытается закрыть окно. Мы также узнаем, как выполнить очистку после того, как компонент будет демонтирован. По завершении этого лабораторного занятия вы лучше поймете, как управлять событиями окна в React.",
      "meta": {
        "title": "Освоение хука React useUnload",
        "description": "Узнайте, как обрабатывать событие окна beforeunload в React с использованием хука useUnload, обеспечивая бесперебойный опыт пользователя.",
        "keywords": "опыт пользователя, useunload, react, beforeunload, событие окна"
      },
      "details": {
        "steps": [
          {
            "title": "Хук React useUnload",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "Проверить состояние запуска веб-сервиса",
                "file": "verify1-1.sh",
                "hint": "Нажмите на кнопку 'Go Live' в правом нижнем углу, чтобы запустить веб-сервис на порту 8080. Затем вы можете обновить вкладку **Web 8080**, чтобы предварительно просмотреть веб-страницу."
              },
              {
                "name": "Проверить состояние изменения файла script.js",
                "file": "verify1-2.sh",
                "hint": "Пожалуйста, следуйте шагам, чтобы завершить лабораторное занятие."
              }
            ]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    }
  ]
}
