{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "React usePersistedState Hook",
  "description": "In this lab, we will learn about the usePersistedState hook in React, which allows us to persist a stateful value in localStorage. We will explore how to initialize and update the stored value, as well as how to handle changes to the key name. By the end of this lab, you will be able to use this hook in your React applications to ensure that certain data is stored and can be retrieved even after a page refresh.",
  "meta": {
    "title": "Mastering React's usePersistedState Hook",
    "description": "Learn how to use the powerful usePersistedState hook to persist state in your React applications and ensure data is retained even after page refreshes.",
    "keywords": "localstorage, usepersistedstate, react, state management, data persistence"
  },
  "difficulty": "Beginner",
  "time": 10,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "React usePersistedState Hook",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify the running status of the web service",
            "file": "verify1-1.sh",
            "hint": "Please click on 'Go Live' in the bottom right corner to run the web service on port 8080. Then, you can refresh the **Web 8080** Tab to preview the web page.",
            "timeout": 0,
            "showstderr": true
          },
          {
            "name": "Verify the status of script.js modification",
            "file": "verify1-2.sh",
            "hint": "Please follow the steps to complete the lab.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "react/event_handling",
          "react/hooks",
          "react/jsx",
          "react/use_state_reducer"
        ]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    },
    "assets": {
      "host01": [
        {
          "file": "index.html",
          "target": "~/project",
          "chmod": "ugo+rwx"
        },
        {
          "file": "script.js",
          "target": "~/project",
          "chmod": "ugo+rwx"
        }
      ]
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["Lotus-7"],
  "license": {
    "name": "CC-BY-4.0",
    "url": "https://github.com/30-seconds/30-seconds-of-code/blob/master/LICENSE",
    "repo": "https://github.com/30-seconds/30-seconds-of-code"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "React 的 usePersistedState 钩子",
      "description": "在本实验中，我们将学习 React 中的 usePersistedState 钩子，它允许我们在 localStorage 中持久化一个有状态的值。我们将探讨如何初始化和更新存储的值，以及如何处理键名的更改。在本实验结束时，你将能够在你的 React 应用程序中使用这个钩子，以确保某些数据被存储，并且即使在页面刷新后也能被检索到。",
      "meta": {
        "title": "掌握 React 的 usePersistedState 钩子",
        "description": "学习如何使用强大的 usePersistedState 钩子在你的 React 应用程序中持久化状态，并确保即使在页面刷新后数据也能保留。",
        "keywords": "localstorage, usepersistedstate, react, 状态管理, 数据持久化"
      },
      "details": {
        "steps": [
          {
            "title": "React 的 usePersistedState 钩子",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "验证 Web 服务的运行状态",
                "file": "verify1-1.sh",
                "hint": "请点击右下角的“Go Live”以在端口 8080 上运行 Web 服务。然后，你可以刷新“Web 8080”标签页来预览网页。"
              },
              {
                "name": "验证 script.js 修改的状态",
                "file": "verify1-2.sh",
                "hint": "请按照步骤完成实验。"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    }
  ]
}
