{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "React useIntersectionObserver Hook",
  "description": "In this lab, we will learn how to use the useIntersectionObserver hook in React to observe the visibility changes of a given element. This hook can be used to track when an element becomes visible on the screen and trigger certain actions accordingly. By the end of this lab, you will be able to implement this hook in your React projects to create more interactive and dynamic user interfaces.",
  "meta": {
    "title": "Mastering React's useIntersectionObserver Hook",
    "description": "Learn how to use the powerful useIntersectionObserver hook in React to track element visibility and create dynamic user interfaces.",
    "keywords": "useintersectionobserver, react, user interface, visibility, hooks"
  },
  "difficulty": "Beginner",
  "time": 10,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "React useIntersectionObserver Hook",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify the running status of the web service",
            "file": "verify1-1.sh",
            "hint": "Please click on 'Go Live' in the bottom right corner to run the web service on port 8080. Then, you can refresh the **Web 8080** Tab to preview the web page.",
            "timeout": 0,
            "showstderr": true
          },
          {
            "name": "Verify the status of script.js modification",
            "file": "verify1-2.sh",
            "hint": "Please follow the steps to complete the lab.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "react/conditional_render",
          "react/css_in_react",
          "react/event_handling",
          "react/hooks",
          "react/jsx",
          "react/use_state_reducer"
        ]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    },
    "assets": {
      "host01": [
        {
          "file": "index.html",
          "target": "~/project",
          "chmod": "ugo+rwx"
        },
        {
          "file": "script.js",
          "target": "~/project",
          "chmod": "ugo+rwx"
        }
      ]
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["Lotus-7"],
  "license": {
    "name": "CC-BY-4.0",
    "url": "https://github.com/30-seconds/30-seconds-of-code/blob/master/LICENSE",
    "repo": "https://github.com/30-seconds/30-seconds-of-code"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "React 的 useIntersectionObserver 钩子",
      "description": "在本实验中，我们将学习如何在 React 中使用 useIntersectionObserver 钩子来观察给定元素的可见性变化。这个钩子可用于跟踪元素何时在屏幕上变得可见，并相应地触发某些操作。在本实验结束时，你将能够在你的 React 项目中实现这个钩子，以创建更具交互性和动态性的用户界面。",
      "meta": {
        "title": "掌握 React 的 useIntersectionObserver 钩子",
        "description": "学习如何在 React 中使用强大的 useIntersectionObserver 钩子来跟踪元素可见性并创建动态用户界面。",
        "keywords": "useintersectionobserver, react, 用户界面, 可见性, 钩子"
      },
      "details": {
        "steps": [
          {
            "title": "React 的 useIntersectionObserver 钩子",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "验证网络服务的运行状态",
                "file": "verify1-1.sh",
                "hint": "请点击右下角的“上线”以在端口 8080 上运行网络服务。然后，你可以刷新“Web 8080”标签页来预览网页。"
              },
              {
                "name": "验证 script.js 修改的状态",
                "file": "verify1-2.sh",
                "hint": "请按照步骤完成实验。"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    }
  ]
}
