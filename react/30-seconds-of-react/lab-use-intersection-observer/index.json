{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "React useIntersectionObserver Hook",
  "description": "In this lab, we will learn how to use the useIntersectionObserver hook in React to observe the visibility changes of a given element. This hook can be used to track when an element becomes visible on the screen and trigger certain actions accordingly. By the end of this lab, you will be able to implement this hook in your React projects to create more interactive and dynamic user interfaces.",
  "meta": {
    "title": "Mastering React's useIntersectionObserver Hook",
    "description": "Learn how to use the powerful useIntersectionObserver hook in React to track element visibility and create dynamic user interfaces.",
    "keywords": "useintersectionobserver, react, user interface, visibility, hooks"
  },
  "difficulty": "Beginner",
  "time": 5,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "React useIntersectionObserver Hook",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify the running status of the web service",
            "file": "verify1-1.sh",
            "hint": "Please click on 'Go Live' in the bottom right corner to run the web service on port 8080. Then, you can refresh the **Web 8080** Tab to preview the web page.",
            "timeout": 0,
            "showstderr": true
          },
          {
            "name": "Verify the status of script.js modification",
            "file": "verify1-2.sh",
            "hint": "Please follow the steps to complete the lab.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": []
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    },
    "assets": {
      "host01": [
        {
          "file": "index.html",
          "target": "~/project",
          "chmod": "ugo+rwx"
        },
        {
          "file": "script.js",
          "target": "~/project",
          "chmod": "ugo+rwx"
        }
      ]
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["Lotus-7"],
  "license": {
    "name": "CC-BY-4.0",
    "url": "https://github.com/30-seconds/30-seconds-of-code/blob/master/LICENSE",
    "repo": "https://github.com/30-seconds/30-seconds-of-code"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "React 的 useIntersectionObserver 钩子",
      "description": "在本实验中，我们将学习如何在 React 中使用 useIntersectionObserver 钩子来观察给定元素的可见性变化。这个钩子可用于跟踪元素何时在屏幕上变得可见，并相应地触发某些操作。在本实验结束时，你将能够在你的 React 项目中实现这个钩子，以创建更具交互性和动态性的用户界面。",
      "meta": {
        "title": "掌握 React 的 useIntersectionObserver 钩子",
        "description": "学习如何在 React 中使用强大的 useIntersectionObserver 钩子来跟踪元素可见性并创建动态用户界面。",
        "keywords": "useintersectionobserver, react, 用户界面，可见性，钩子"
      },
      "details": {
        "steps": [
          {
            "title": "React 的 useIntersectionObserver 钩子",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "验证网络服务的运行状态",
                "file": "verify1-1.sh",
                "hint": "请点击右下角的“上线”以在端口 8080 上运行网络服务。然后，你可以刷新“Web 8080”标签页来预览网页。"
              },
              {
                "name": "验证 script.js 修改的状态",
                "file": "verify1-2.sh",
                "hint": "请按照步骤完成实验。"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Hook useIntersectionObserver de React",
      "description": "En este laboratorio, aprenderemos a usar el hook useIntersectionObserver en React para observar los cambios de visibilidad de un elemento dado. Este hook se puede utilizar para rastrear cuándo un elemento se hace visible en la pantalla y desencadenar ciertas acciones en consecuencia. Al final de este laboratorio, serás capaz de implementar este hook en tus proyectos de React para crear interfaces de usuario más interactivas y dinámicas.",
      "meta": {
        "title": "Dominando el hook useIntersectionObserver de React",
        "description": "Aprende a usar el poderoso hook useIntersectionObserver en React para rastrear la visibilidad de los elementos y crear interfaces de usuario dinámicas.",
        "keywords": "useintersectionobserver, react, interfaz de usuario, visibilidad, hooks"
      },
      "details": {
        "steps": [
          {
            "title": "Hook useIntersectionObserver de React",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Verificar el estado de ejecución del servicio web",
                "file": "verify1-1.sh",
                "hint": "Haga clic en 'Go Live' en la esquina inferior derecha para ejecutar el servicio web en el puerto 8080. Luego, puede actualizar la pestaña **Web 8080** para previsualizar la página web."
              },
              {
                "name": "Verificar el estado de la modificación de script.js",
                "file": "verify1-2.sh",
                "hint": "Siga los pasos para completar el laboratorio."
              }
            ]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Hook useIntersectionObserver de React",
      "description": "Dans ce laboratoire, nous allons apprendre à utiliser le hook useIntersectionObserver dans React pour observer les changements de visibilité d'un élément donné. Ce hook peut être utilisé pour suivre le moment où un élément devient visible à l'écran et déclencher certaines actions en conséquence. À la fin de ce laboratoire, vous serez capable d'implementer ce hook dans vos projets React pour créer des interfaces utilisateur plus interactives et dynamiques.",
      "meta": {
        "title": "Maîtriser le hook useIntersectionObserver de React",
        "description": "Apprenez à utiliser le puissant hook useIntersectionObserver dans React pour suivre la visibilité des éléments et créer des interfaces utilisateur dynamiques.",
        "keywords": "useintersectionobserver, react, interface utilisateur, visibilité, hooks"
      },
      "details": {
        "steps": [
          {
            "title": "Hook useIntersectionObserver de React",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Vérifier l'état d'exécution du service web",
                "file": "verify1-1.sh",
                "hint": "Veuillez cliquer sur 'Go Live' dans le coin inférieur droit pour exécuter le service web sur le port 8080. Ensuite, vous pouvez actualiser l'onglet **Web 8080** pour prévisualiser la page web."
              },
              {
                "name": "Vérifier l'état de la modification de script.js",
                "file": "verify1-2.sh",
                "hint": "Veuillez suivre les étapes pour terminer le laboratoire."
              }
            ]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "React useIntersectionObserver-Hook",
      "description": "In diesem Lab werden wir lernen, wie man den useIntersectionObserver-Hook in React verwendet, um die Sichtbarkeitsänderungen eines bestimmten Elements zu beobachten. Dieser Hook kann verwendet werden, um zu verfolgen, wann ein Element auf dem Bildschirm sichtbar wird, und dementsprechend bestimmte Aktionen auszulösen. Am Ende dieses Labs werden Sie in der Lage sein, diesen Hook in Ihren React-Projekten zu implementieren, um interaktivere und dynamischere Benutzeroberflächen zu erstellen.",
      "meta": {
        "title": "Meisterhaftes Verwenden des React useIntersectionObserver-Hooks",
        "description": "Lernen Sie, wie man den leistungsstarken useIntersectionObserver-Hook in React verwendet, um die Elementsichtbarkeit zu verfolgen und dynamische Benutzeroberflächen zu erstellen.",
        "keywords": "useintersectionobserver, react, Benutzeroberfläche, Sichtbarkeit, Hooks"
      },
      "details": {
        "steps": [
          {
            "title": "React useIntersectionObserver-Hook",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Überprüfen des Laufzustands des Webdiensts",
                "file": "verify1-1.sh",
                "hint": "Bitte klicken Sie in der unteren rechten Ecke auf 'Go Live', um den Webdienst auf Port 8080 auszuführen. Anschließend können Sie die Registerkarte **Web 8080** aktualisieren, um die Webseite anzuschauen."
              },
              {
                "name": "Überprüfen des Status der Änderungen an script.js",
                "file": "verify1-2.sh",
                "hint": "Bitte folgen Sie den Schritten, um das Lab abzuschließen."
              }
            ]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "React の useIntersectionObserver フック",
      "description": "この実験では、React で useIntersectionObserver フックを使用して、特定の要素の表示状態の変化を監視する方法を学びます。このフックは、要素が画面上に表示されるタイミングを追跡し、それに応じて特定のアクションをトリガーするために使用できます。この実験が終了すると、React プロジェクトでこのフックを実装して、よりインタラクティブで動的なユーザーインターフェイスを作成できるようになります。",
      "meta": {
        "title": "React の useIntersectionObserver フックをマスターする",
        "description": "React で強力な useIntersectionObserver フックを使用して、要素の表示状態を追跡し、動的なユーザーインターフェイスを作成する方法を学びましょう。",
        "keywords": "useintersectionobserver, react, ユーザーインターフェイス，表示状態，フック"
      },
      "details": {
        "steps": [
          {
            "title": "React の useIntersectionObserver フック",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "ウェブサービスの実行状態を確認する",
                "file": "verify1-1.sh",
                "hint": "右下隅の「Go Live」をクリックして、ポート 8080 でウェブサービスを実行してください。その後、**Web 8080**タブを更新して、ウェブページをプレビューできます。"
              },
              {
                "name": "script.js の変更状態を確認する",
                "file": "verify1-2.sh",
                "hint": "実験を完了するための手順に従ってください。"
              }
            ]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "React хук useIntersectionObserver",
      "description": "В этом практическом занятии мы узнаем, как использовать хук useIntersectionObserver в React для наблюдения за изменениями видимости заданного элемента. Этот хук можно использовать для отслеживания момента, когда элемент становится видимым на экране, и соответствующим образом запускать определенные действия. В конце этого практического занятия вы сможете реализовать этот хук в своих проектах React для создания более интерактивных и динамических пользовательских интерфейсов.",
      "meta": {
        "title": "Осваиваем React хук useIntersectionObserver",
        "description": "Изучите, как использовать мощный хук useIntersectionObserver в React для отслеживания видимости элементов и создания динамических пользовательских интерфейсов.",
        "keywords": "useintersectionobserver, react, пользовательский интерфейс, видимость, хуки"
      },
      "details": {
        "steps": [
          {
            "title": "React хук useIntersectionObserver",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "Проверить статус работы веб-сервиса",
                "file": "verify1-1.sh",
                "hint": "Пожалуйста, нажмите на кнопку 'Go Live' в нижнем правом углу, чтобы запустить веб-сервис на порту 8080. Затем вы можете обновить вкладку **Web 8080**, чтобы просмотреть веб-страницу."
              },
              {
                "name": "Проверить статус изменения script.js",
                "file": "verify1-2.sh",
                "hint": "Пожалуйста, следуйте шагам, чтобы завершить практическое занятие."
              }
            ]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    },
    {
      "lang": "ko",
      "title": "React useIntersectionObserver 훅",
      "description": "이 랩에서는 React 에서 useIntersectionObserver 훅을 사용하여 주어진 요소의 가시성 변화를 관찰하는 방법을 배웁니다. 이 훅은 요소가 화면에 나타날 때 추적하고 그에 따라 특정 작업을 트리거하는 데 사용될 수 있습니다. 이 랩을 마치면 React 프로젝트에서 이 훅을 구현하여 더욱 인터랙티브하고 동적인 사용자 인터페이스를 만들 수 있습니다.",
      "meta": {
        "title": "React 의 useIntersectionObserver 훅 마스터하기",
        "description": "React 에서 강력한 useIntersectionObserver 훅을 사용하여 요소의 가시성을 추적하고 동적인 사용자 인터페이스를 만드는 방법을 알아보세요.",
        "keywords": "useintersectionobserver, react, 사용자 인터페이스, 가시성, 훅"
      },
      "details": {
        "steps": [
          {
            "title": "React useIntersectionObserver 훅",
            "text": "ko/step1.md",
            "verify": [
              {
                "name": "웹 서비스 실행 상태 확인",
                "file": "verify1-1.sh",
                "hint": "오른쪽 하단의 'Go Live'를 클릭하여 웹 서비스를 포트 8080 에서 실행하세요. 그런 다음 **Web 8080** 탭을 새로 고쳐 웹 페이지를 미리 볼 수 있습니다."
              },
              {
                "name": "script.js 수정 상태 확인",
                "file": "verify1-2.sh",
                "hint": "랩을 완료하려면 단계를 따르세요."
              }
            ]
          }
        ],
        "intro": {
          "text": "ko/intro.md",
          "title": "소개"
        },
        "finish": {
          "text": "ko/finish.md",
          "title": "요약"
        }
      }
    },
    {
      "lang": "pt",
      "title": "React useIntersectionObserver Hook",
      "description": "Neste laboratório, aprenderemos como usar o hook useIntersectionObserver no React para observar as mudanças de visibilidade de um determinado elemento. Este hook pode ser usado para rastrear quando um elemento se torna visível na tela e acionar certas ações de acordo. Ao final deste laboratório, você será capaz de implementar este hook em seus projetos React para criar interfaces de usuário mais interativas e dinâmicas.",
      "meta": {
        "title": "Dominando o useIntersectionObserver Hook do React",
        "description": "Aprenda a usar o poderoso hook useIntersectionObserver no React para rastrear a visibilidade de elementos e criar interfaces de usuário dinâmicas.",
        "keywords": "useintersectionobserver, react, interface do usuário, visibilidade, hooks"
      },
      "details": {
        "steps": [
          {
            "title": "React useIntersectionObserver Hook",
            "text": "pt/step1.md",
            "verify": [
              {
                "name": "Verificar o status de execução do serviço web",
                "file": "verify1-1.sh",
                "hint": "Por favor, clique em 'Go Live' no canto inferior direito para executar o serviço web na porta 8080. Em seguida, você pode atualizar a aba **Web 8080** para visualizar a página web."
              },
              {
                "name": "Verificar o status da modificação do script.js",
                "file": "verify1-2.sh",
                "hint": "Por favor, siga os passos para completar o laboratório."
              }
            ]
          }
        ],
        "intro": {
          "text": "pt/intro.md",
          "title": "Introdução"
        },
        "finish": {
          "text": "pt/finish.md",
          "title": "Resumo"
        }
      }
    }
  ]
}
