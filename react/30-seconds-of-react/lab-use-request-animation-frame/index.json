{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "React useRequestAnimationFrame Hook",
  "description": "In this lab, we will explore how to use the useRequestAnimationFrame hook in React to animate a function, ensuring that it runs before every repaint. This hook is useful for creating smooth and efficient animations in web applications. We will walk through the process of creating the hook and implementing it in a simple counter component that updates in real-time.",
  "meta": {
    "title": "Mastering React's useRequestAnimationFrame Hook",
    "description": "Learn how to use the powerful useRequestAnimationFrame hook in React to create smooth and efficient animations in your web applications.",
    "keywords": "react, userequestanimationframe, web development, hooks, animation"
  },
  "difficulty": "Beginner",
  "time": 10,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "React useRequestAnimationFrame Hook",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify the running status of the web service",
            "file": "verify1-1.sh",
            "hint": "Please click on 'Go Live' in the bottom right corner to run the web service on port 8080. Then, you can refresh the **Web 8080** Tab to preview the web page.",
            "timeout": 0,
            "showstderr": true
          },
          {
            "name": "Verify the status of script.js modification",
            "file": "verify1-2.sh",
            "hint": "Please follow the steps to complete the lab.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "react/event_handling",
          "react/hooks",
          "react/jsx",
          "react/use_state_reducer"
        ]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    },
    "assets": {
      "host01": [
        {
          "file": "index.html",
          "target": "~/project",
          "chmod": "ugo+rwx"
        },
        {
          "file": "script.js",
          "target": "~/project",
          "chmod": "ugo+rwx"
        }
      ]
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["Lotus-7"],
  "license": {
    "name": "CC-BY-4.0",
    "url": "https://github.com/30-seconds/30-seconds-of-code/blob/master/LICENSE",
    "repo": "https://github.com/30-seconds/30-seconds-of-code"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "React 的 useRequestAnimationFrame 钩子",
      "description": "在本实验中，我们将探索如何在 React 中使用 useRequestAnimationFrame 钩子来为一个函数设置动画，确保它在每次重绘之前运行。这个钩子对于在 Web 应用程序中创建平滑且高效的动画很有用。我们将逐步介绍创建该钩子并在一个实时更新的简单计数器组件中实现它的过程。",
      "meta": {
        "title": "掌握 React 的 useRequestAnimationFrame 钩子",
        "description": "了解如何在 React 中使用强大的 useRequestAnimationFrame 钩子在你的 Web 应用程序中创建平滑且高效的动画。",
        "keywords": "React, useRequestAnimationFrame, 网页开发, 钩子, 动画"
      },
      "details": {
        "steps": [
          {
            "title": "React 的 useRequestAnimationFrame 钩子",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "验证 Web 服务的运行状态",
                "file": "verify1-1.sh",
                "hint": "请点击右下角的“Go Live”以在端口 8080 上运行 Web 服务。然后，你可以刷新“Web 8080”标签页来预览网页。"
              },
              {
                "name": "验证 script.js 修改的状态",
                "file": "verify1-2.sh",
                "hint": "请按照步骤完成实验。"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    }
  ]
}
