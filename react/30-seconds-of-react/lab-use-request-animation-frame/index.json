{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "React useRequestAnimationFrame Hook",
  "description": "In this lab, we will explore how to use the useRequestAnimationFrame hook in React to animate a function, ensuring that it runs before every repaint. This hook is useful for creating smooth and efficient animations in web applications. We will walk through the process of creating the hook and implementing it in a simple counter component that updates in real-time.",
  "meta": {
    "title": "Mastering React's useRequestAnimationFrame Hook",
    "description": "Learn how to use the powerful useRequestAnimationFrame hook in React to create smooth and efficient animations in your web applications.",
    "keywords": "react, userequestanimationframe, web development, hooks, animation"
  },
  "difficulty": "Beginner",
  "time": 5,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "React useRequestAnimationFrame Hook",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify the running status of the web service",
            "file": "verify1-1.sh",
            "hint": "Please click on 'Go Live' in the bottom right corner to run the web service on port 8080. Then, you can refresh the **Web 8080** Tab to preview the web page.",
            "timeout": 0,
            "showstderr": true
          },
          {
            "name": "Verify the status of script.js modification",
            "file": "verify1-2.sh",
            "hint": "Please follow the steps to complete the lab.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": []
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    },
    "assets": {
      "host01": [
        {
          "file": "index.html",
          "target": "~/project",
          "chmod": "ugo+rwx"
        },
        {
          "file": "script.js",
          "target": "~/project",
          "chmod": "ugo+rwx"
        }
      ]
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["Lotus-7"],
  "license": {
    "name": "CC-BY-4.0",
    "url": "https://github.com/30-seconds/30-seconds-of-code/blob/master/LICENSE",
    "repo": "https://github.com/30-seconds/30-seconds-of-code"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "React 的 useRequestAnimationFrame 钩子",
      "description": "在本实验中，我们将探索如何在 React 中使用 useRequestAnimationFrame 钩子来为一个函数设置动画，确保它在每次重绘之前运行。这个钩子对于在 Web 应用程序中创建平滑且高效的动画很有用。我们将逐步介绍创建该钩子并在一个实时更新的简单计数器组件中实现它的过程。",
      "meta": {
        "title": "掌握 React 的 useRequestAnimationFrame 钩子",
        "description": "了解如何在 React 中使用强大的 useRequestAnimationFrame 钩子在你的 Web 应用程序中创建平滑且高效的动画。",
        "keywords": "React, useRequestAnimationFrame, 网页开发，钩子，动画"
      },
      "details": {
        "steps": [
          {
            "title": "React 的 useRequestAnimationFrame 钩子",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "验证 Web 服务的运行状态",
                "file": "verify1-1.sh",
                "hint": "请点击右下角的“Go Live”以在端口 8080 上运行 Web 服务。然后，你可以刷新“Web 8080”标签页来预览网页。"
              },
              {
                "name": "验证 script.js 修改的状态",
                "file": "verify1-2.sh",
                "hint": "请按照步骤完成实验。"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "React useRequestAnimationFrame Hook",
      "description": "En este laboratorio, exploraremos cómo usar el hook useRequestAnimationFrame en React para animar una función, asegurándonos de que se ejecute antes de cada repintado. Este hook es útil para crear animaciones suaves y eficientes en aplicaciones web. Recorreremos el proceso de creación del hook y su implementación en un componente contador simple que se actualice en tiempo real.",
      "meta": {
        "title": "Dominando el hook useRequestAnimationFrame de React",
        "description": "Aprende cómo usar el poderoso hook useRequestAnimationFrame en React para crear animaciones suaves y eficientes en tus aplicaciones web.",
        "keywords": "react, userequestanimationframe, desarrollo web, hooks, animación"
      },
      "details": {
        "steps": [
          {
            "title": "React useRequestAnimationFrame Hook",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Verificar el estado de ejecución del servicio web",
                "file": "verify1-1.sh",
                "hint": "Haga clic en 'Go Live' en la esquina inferior derecha para ejecutar el servicio web en el puerto 8080. Luego, puede actualizar la pestaña **Web 8080** para previsualizar la página web."
              },
              {
                "name": "Verificar el estado de la modificación de script.js",
                "file": "verify1-2.sh",
                "hint": "Siga los pasos para completar el laboratorio."
              }
            ]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Hook React useRequestAnimationFrame",
      "description": "Dans ce laboratoire, nous allons explorer comment utiliser le hook useRequestAnimationFrame dans React pour animer une fonction, en veillant à ce qu'elle s'exécute avant chaque rafraîchissement de l'écran. Ce hook est utile pour créer des animations fluides et efficaces dans les applications web. Nous allons parcourir le processus de création du hook et de son implantation dans un composant de compteur simple qui met à jour en temps réel.",
      "meta": {
        "title": "Maîtriser le hook React useRequestAnimationFrame",
        "description": "Découvrez comment utiliser le puissant hook useRequestAnimationFrame dans React pour créer des animations fluides et efficaces dans vos applications web.",
        "keywords": "react, userequestanimationframe, développement web, hooks, animation"
      },
      "details": {
        "steps": [
          {
            "title": "Hook React useRequestAnimationFrame",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Vérifier l'état d'exécution du service web",
                "file": "verify1-1.sh",
                "hint": "Veuillez cliquer sur 'Go Live' dans le coin inférieur droit pour exécuter le service web sur le port 8080. Ensuite, vous pouvez actualiser l'onglet **Web 8080** pour prévisualiser la page web."
              },
              {
                "name": "Vérifier l'état de modification de script.js",
                "file": "verify1-2.sh",
                "hint": "Veuillez suivre les étapes pour terminer le laboratoire."
              }
            ]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "React useRequestAnimationFrame-Hook",
      "description": "In diesem Lab werden wir untersuchen, wie man den useRequestAnimationFrame-Hook in React verwendet, um eine Funktion zu animieren und sicherzustellen, dass sie vor jedem Neuzeichnen ausgeführt wird. Dieser Hook ist nützlich für das Erstellen von glatten und effizienten Animationen in Webanwendungen. Wir werden den Prozess des Erstellens des Hooks und dessen Implementierung in einem einfachen Zähler-Component durchgehen, das in Echtzeit aktualisiert wird.",
      "meta": {
        "title": "Meisterhaftes Verwenden des React useRequestAnimationFrame-Hooks",
        "description": "Lernen Sie, wie Sie den leistungsstarken useRequestAnimationFrame-Hook in React verwenden, um glatte und effiziente Animationen in Ihren Webanwendungen zu erstellen.",
        "keywords": "react, userequestanimationframe, webentwicklung, hooks, animation"
      },
      "details": {
        "steps": [
          {
            "title": "React useRequestAnimationFrame-Hook",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Verifizieren des Laufzustands des Webdiensts",
                "file": "verify1-1.sh",
                "hint": "Bitte klicken Sie in der unteren rechten Ecke auf 'Go Live', um den Webdienst auf Port 8080 auszuführen. Anschließend können Sie die Registerkarte **Web 8080** aktualisieren, um die Webseite anzuschauen."
              },
              {
                "name": "Verifizieren des Status der Änderungen an script.js",
                "file": "verify1-2.sh",
                "hint": "Bitte folgen Sie den Schritten, um das Lab abzuschließen."
              }
            ]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "React の useRequestAnimationFrame フック",
      "description": "この実験では、React において useRequestAnimationFrame フックを使って関数をアニメーションさせる方法を探り、各再描画の前にそれが実行されるようにします。このフックは、Web アプリケーションでスムーズで効率的なアニメーションを作成するのに役立ちます。このフックを作成し、リアルタイムで更新される単純なカウンターコンポーネントに実装するプロセスを見ていきます。",
      "meta": {
        "title": "React の useRequestAnimationFrame フックをマスターする",
        "description": "React で強力な useRequestAnimationFrame フックを使って、Web アプリケーションでスムーズで効率的なアニメーションを作成する方法を学びましょう。",
        "keywords": "react, userequestanimationframe, ウェブ開発，フック，アニメーション"
      },
      "details": {
        "steps": [
          {
            "title": "React の useRequestAnimationFrame フック",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "Web サービスの実行状態を確認する",
                "file": "verify1-1.sh",
                "hint": "右下隅の「Go Live」をクリックして、ポート 8080 で Web サービスを実行してください。その後、**Web 8080**タブを更新して Web ページをプレビューできます。"
              },
              {
                "name": "script.js の変更状態を確認する",
                "file": "verify1-2.sh",
                "hint": "実験を完了するための手順に従ってください。"
              }
            ]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "React хук useRequestAnimationFrame",
      "description": "В этом практическом занятии мы изучим, как использовать хук useRequestAnimationFrame в React для анимации функции, чтобы обеспечить ее выполнение перед каждым перерисованием. Этот хук полезен для создания гладких и эффективных анимаций в веб-приложениях. Мы рассмотрим процесс создания хука и его реализации в простом компоненте счетчика, который обновляется в режиме реального времени.",
      "meta": {
        "title": "Мастерство в использовании хука useRequestAnimationFrame React",
        "description": "Изучите, как использовать мощный хук useRequestAnimationFrame в React для создания гладких и эффективных анимаций в ваших веб-приложениях.",
        "keywords": "react, userequestanimationframe, веб-разработка, хуки, анимация"
      },
      "details": {
        "steps": [
          {
            "title": "React хук useRequestAnimationFrame",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "Проверить статус работы веб-сервиса",
                "file": "verify1-1.sh",
                "hint": "Пожалуйста, нажмите кнопку 'Go Live' в нижнем правом углу, чтобы запустить веб-сервис на порту 8080. Затем вы можете обновить вкладку **Web 8080**, чтобы просмотреть веб-страницу."
              },
              {
                "name": "Проверить статус изменения script.js",
                "file": "verify1-2.sh",
                "hint": "Пожалуйста, следуйте шагам, чтобы завершить практическое занятие."
              }
            ]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    },
    {
      "lang": "ko",
      "title": "React useRequestAnimationFrame 훅",
      "description": "이 랩에서는 React 에서 useRequestAnimationFrame 훅을 사용하여 함수를 애니메이션하는 방법을 살펴봅니다. 이를 통해 모든 리페인트 전에 함수가 실행되도록 보장합니다. 이 훅은 웹 애플리케이션에서 부드럽고 효율적인 애니메이션을 생성하는 데 유용합니다. 훅을 생성하고 실시간으로 업데이트되는 간단한 카운터 컴포넌트에 구현하는 과정을 안내합니다.",
      "meta": {
        "title": "React 의 useRequestAnimationFrame 훅 마스터하기 - 부드러운 애니메이션 구현",
        "description": "React 에서 강력한 useRequestAnimationFrame 훅을 사용하여 웹 애플리케이션에서 부드럽고 효율적인 애니메이션을 만드는 방법을 알아보세요.",
        "keywords": "react, userequestanimationframe, 웹 개발, 훅, 애니메이션, 리액트 애니메이션, 자바스크립트 애니메이션"
      },
      "details": {
        "steps": [
          {
            "title": "React useRequestAnimationFrame 훅",
            "text": "ko/step1.md",
            "verify": [
              {
                "name": "웹 서비스 실행 상태 확인",
                "file": "verify1-1.sh",
                "hint": "오른쪽 하단의 'Go Live'를 클릭하여 웹 서비스를 포트 8080 에서 실행하세요. 그런 다음, **Web 8080** 탭을 새로 고쳐 웹 페이지를 미리 볼 수 있습니다."
              },
              {
                "name": "script.js 수정 상태 확인",
                "file": "verify1-2.sh",
                "hint": "랩을 완료하려면 단계를 따르세요."
              }
            ]
          }
        ],
        "intro": {
          "text": "ko/intro.md",
          "title": "소개"
        },
        "finish": {
          "text": "ko/finish.md",
          "title": "요약"
        }
      }
    },
    {
      "lang": "pt",
      "title": "React useRequestAnimationFrame Hook",
      "description": "Neste laboratório, exploraremos como usar o hook useRequestAnimationFrame no React para animar uma função, garantindo que ela seja executada antes de cada repintura (repaint). Este hook é útil para criar animações suaves e eficientes em aplicações web. Iremos percorrer o processo de criação do hook e implementá-lo em um componente contador simples que se atualiza em tempo real.",
      "meta": {
        "title": "Dominando o useRequestAnimationFrame Hook do React",
        "description": "Aprenda a usar o poderoso hook useRequestAnimationFrame no React para criar animações suaves e eficientes em suas aplicações web.",
        "keywords": "react, userequestanimationframe, desenvolvimento web, hooks, animação, animações react"
      },
      "details": {
        "steps": [
          {
            "title": "React useRequestAnimationFrame Hook",
            "text": "pt/step1.md",
            "verify": [
              {
                "name": "Verificar o status de execução do serviço web",
                "file": "verify1-1.sh",
                "hint": "Por favor, clique em 'Go Live' no canto inferior direito para executar o serviço web na porta 8080. Em seguida, você pode atualizar a aba **Web 8080** para visualizar a página web."
              },
              {
                "name": "Verificar o status da modificação do script.js",
                "file": "verify1-2.sh",
                "hint": "Por favor, siga os passos para completar o laboratório."
              }
            ]
          }
        ],
        "intro": {
          "text": "pt/intro.md",
          "title": "Introdução"
        },
        "finish": {
          "text": "pt/finish.md",
          "title": "Resumo"
        }
      }
    }
  ]
}
