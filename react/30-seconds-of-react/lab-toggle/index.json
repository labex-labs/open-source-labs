{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Reusable React Toggle Component",
  "description": "In this lab, we will explore how to implement a toggle component using React. The toggle component is a common UI element used to switch between two states. We will use the useState() hook to manage the component's state and apply different CSS classes based on its state. By the end of this lab, you will have a better understanding of how to create reusable UI components in React.",
  "meta": {
    "title": "React Toggle Component | Hands-on Programming Tutorial",
    "description": "Learn how to implement a reusable toggle component using React and the useState() hook. Gain practical experience in building interactive UI elements.",
    "keywords": "React, Toggle Component, UI Development, useState, Interactive UI, Programming Tutorial"
  },
  "difficulty": "Beginner",
  "time": 10,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Toggle",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify the running status of the web service",
            "file": "verify1-1.sh",
            "hint": "Please click on 'Go Live' in the bottom right corner to run the web service on port 8080. Then, you can refresh the **Web 8080** Tab to preview the web page.",
            "timeout": 0,
            "showstderr": true
          },
          {
            "name": "Verify the status of script.js modification",
            "file": "verify1-2.sh",
            "hint": "Please follow the steps to complete the lab.",
            "timeout": 0,
            "showstderr": true
          },
          {
            "name": "Verify the status of style.css modification",
            "file": "verify1-3.sh",
            "hint": "Please follow the steps to complete the lab.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "react/conditional_render",
          "react/event_handling",
          "react/hooks",
          "react/jsx",
          "react/use_state_reducer"
        ]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    },
    "assets": {
      "host01": [
        {
          "file": "index.html",
          "target": "~/project",
          "chmod": "ugo+rwx"
        },
        {
          "file": "script.js",
          "target": "~/project",
          "chmod": "ugo+rwx"
        },
        {
          "file": "style.css",
          "target": "~/project",
          "chmod": "ugo+rwx"
        }
      ]
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["Lotus-7"],
  "license": {
    "name": "CC-BY-4.0",
    "url": "https://github.com/30-seconds/30-seconds-of-code/blob/master/LICENSE",
    "repo": "https://github.com/30-seconds/30-seconds-of-code"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "可复用的 React 切换组件",
      "description": "在本实验中，我们将探索如何使用 React 实现一个切换组件。切换组件是一种常见的用户界面 (UI) 元素，用于在两种状态之间进行切换。我们将使用 `useState()` 钩子来管理组件的状态，并根据其状态应用不同的 CSS 类。在本实验结束时，你将更好地理解如何在 React 中创建可复用的 UI 组件。",
      "meta": {
        "title": "React 切换组件 | 实践编程教程",
        "description": "学习如何使用 React 和 `useState()` 钩子实现一个可复用的切换组件。在构建交互式 UI 元素方面获得实践经验。",
        "keywords": "React, 切换组件, UI 开发, useState, 交互式 UI, 编程教程"
      },
      "details": {
        "steps": [
          {
            "title": "切换组件",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "验证网络服务的运行状态",
                "file": "verify1-1.sh",
                "hint": "请点击右下角的“上线”以在端口 8080 上运行网络服务。然后，你可以刷新“Web 8080”标签页来预览网页。"
              },
              {
                "name": "验证 script.js 修改状态",
                "file": "verify1-2.sh",
                "hint": "请按照步骤完成实验。"
              },
              {
                "name": "验证 style.css 修改状态",
                "file": "verify1-3.sh",
                "hint": "请按照步骤完成实验。"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    }
  ]
}
