{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Stateful Checkbox with Multiple Selection",
  "description": "In this lab, we will learn how to create a stateful checkbox with multiple selection using React. This lab will guide you through the process of rendering a checkbox list, updating its state, and passing the selected value/values to the parent component using a callback function. By the end of this lab, you will be able to create a reusable checkbox component that can be used in any React project.",
  "meta": {
    "title": "Create Stateful Checkbox with Multiple Selection | React Tutorial",
    "description": "Learn how to create a stateful checkbox with multiple selection using React. This tutorial will guide you through the process of rendering a checkbox list, updating its state, and passing the selected value/values to the parent component.",
    "keywords": "React, Checkbox, Multiple Selection, State Management, Callback Function"
  },
  "difficulty": "Beginner",
  "time": 5,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Stateful Checkbox with Multiple Selection",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify the running status of the web service",
            "file": "verify1-1.sh",
            "hint": "Please click on 'Go Live' in the bottom right corner to run the web service on port 8080. Then, you can refresh the **Web 8080** Tab to preview the web page.",
            "timeout": 0,
            "showstderr": true
          },
          {
            "name": "Verify the status of script.js modification",
            "file": "verify1-2.sh",
            "hint": "Please follow the steps to complete the lab.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": []
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    },
    "assets": {
      "host01": [
        {
          "file": "index.html",
          "target": "~/project",
          "chmod": "ugo+rwx"
        },
        {
          "file": "script.js",
          "target": "~/project",
          "chmod": "ugo+rwx"
        }
      ]
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["Lotus-7"],
  "license": {
    "name": "CC-BY-4.0",
    "url": "https://github.com/30-seconds/30-seconds-of-code/blob/master/LICENSE",
    "repo": "https://github.com/30-seconds/30-seconds-of-code"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "支持多项选择的有状态复选框",
      "description": "在本实验中，我们将学习如何使用 React 创建一个支持多项选择的有状态复选框。本实验将指导你完成呈现复选框列表、更新其状态以及使用回调函数将选定的值传递给父组件的过程。在本实验结束时，你将能够创建一个可在任何 React 项目中使用的可复用复选框组件。",
      "meta": {
        "title": "创建支持多项选择的有状态复选框 | React 教程",
        "description": "学习如何使用 React 创建一个支持多项选择的有状态复选框。本教程将指导你完成呈现复选框列表、更新其状态以及将选定的值传递给父组件的过程。",
        "keywords": "React, 复选框，多项选择，状态管理，回调函数"
      },
      "details": {
        "steps": [
          {
            "title": "支持多项选择的有状态复选框",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "验证网络服务的运行状态",
                "file": "verify1-1.sh",
                "hint": "请点击右下角的“Go Live”，在端口 8080 上运行网络服务。然后，你可以刷新“Web 8080”标签页来预览网页。"
              },
              {
                "name": "验证 script.js 修改的状态",
                "file": "verify1-2.sh",
                "hint": "请按照步骤完成实验。"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Casilla de verificación con estado y selección múltiple",
      "description": "En este laboratorio, aprenderemos a crear una casilla de verificación con estado y selección múltiple utilizando React. Este laboratorio te guiará a través del proceso de renderizar una lista de casillas de verificación, actualizar su estado y pasar el valor o valores seleccionados al componente padre mediante una función de devolución de llamada. Al final de este laboratorio, serás capaz de crear un componente de casilla de verificación reusable que se puede utilizar en cualquier proyecto de React.",
      "meta": {
        "title": "Crear casilla de verificación con estado y selección múltiple | Tutorial de React",
        "description": "Aprende a crear una casilla de verificación con estado y selección múltiple utilizando React. Este tutorial te guiará a través del proceso de renderizar una lista de casillas de verificación, actualizar su estado y pasar el valor o valores seleccionados al componente padre.",
        "keywords": "React, Casilla de verificación, Selección múltiple, Gestión de estado, Función de devolución de llamada"
      },
      "details": {
        "steps": [
          {
            "title": "Casilla de verificación con estado y selección múltiple",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Verificar el estado de ejecución del servicio web",
                "file": "verify1-1.sh",
                "hint": "Haga clic en 'Go Live' en la esquina inferior derecha para ejecutar el servicio web en el puerto 8080. Luego, puede actualizar la pestaña **Web 8080** para previsualizar la página web."
              },
              {
                "name": "Verificar el estado de la modificación de script.js",
                "file": "verify1-2.sh",
                "hint": "Siga los pasos para completar el laboratorio."
              }
            ]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Case à cocher avec état et sélection multiple",
      "description": "Dans ce laboratoire, nous allons apprendre à créer une case à cocher avec état et sélection multiple à l'aide de React. Ce laboratoire vous guidera tout au long du processus de rendu d'une liste de cases à cocher, de mise à jour de son état et de passage de la valeur ou des valeurs sélectionnées au composant parent à l'aide d'une fonction de rappel. À la fin de ce laboratoire, vous serez capable de créer un composant de case à cocher réutilisable qui peut être utilisé dans n'importe quel projet React.",
      "meta": {
        "title": "Créer une case à cocher avec état et sélection multiple | Tutoriel React",
        "description": "Apprenez à créer une case à cocher avec état et sélection multiple à l'aide de React. Ce tutoriel vous guidera tout au long du processus de rendu d'une liste de cases à cocher, de mise à jour de son état et de passage de la valeur ou des valeurs sélectionnées au composant parent.",
        "keywords": "React, Case à cocher, Sélection multiple, Gestion d'état, Fonction de rappel"
      },
      "details": {
        "steps": [
          {
            "title": "Case à cocher avec état et sélection multiple",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Vérifiez le statut d'exécution du service web",
                "file": "verify1-1.sh",
                "hint": "Veuillez cliquer sur 'Go Live' dans le coin inférieur droit pour exécuter le service web sur le port 8080. Ensuite, vous pouvez actualiser l'onglet **Web 8080** pour prévisualiser la page web."
              },
              {
                "name": "Vérifiez l'état de la modification de script.js",
                "file": "verify1-2.sh",
                "hint": "Veuillez suivre les étapes pour terminer le laboratoire."
              }
            ]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Zustandsbehaftete Checkbox mit Mehrfachauswahl",
      "description": "In diesem Lab werden wir lernen, wie man mit React eine zustandsbehaftete Checkbox mit Mehrfachauswahl erstellt. Dieses Lab wird Ihnen den Prozess der Darstellung einer Checkbox-Liste, das Aktualisieren ihres Zustands und das Übergeben des/der ausgewählten Wert(e) an die übergeordnete Komponente mithilfe einer Callback-Funktion beibringen. Am Ende dieses Labs werden Sie in der Lage sein, eine wiederverwendbare Checkbox-Komponente zu erstellen, die in jedem React-Projekt verwendet werden kann.",
      "meta": {
        "title": "Erstelle eine zustandsbehaftete Checkbox mit Mehrfachauswahl | React Tutorial",
        "description": "Lerne, wie man mit React eine zustandsbehaftete Checkbox mit Mehrfachauswahl erstellt. Dieser Tutorial wird Ihnen den Prozess der Darstellung einer Checkbox-Liste, das Aktualisieren ihres Zustands und das Übergeben des/der ausgewählten Wert(e) an die übergeordnete Komponente beibringen.",
        "keywords": "React, Checkbox, Mehrfachauswahl, Zustandsverwaltung, Callback-Funktion"
      },
      "details": {
        "steps": [
          {
            "title": "Zustandsbehaftete Checkbox mit Mehrfachauswahl",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Überprüfen des Laufzustands des Webdiensts",
                "file": "verify1-1.sh",
                "hint": "Bitte klicken Sie in der unteren rechten Ecke auf 'Go Live', um den Webdienst auf Port 8080 auszuführen. Anschließend können Sie die Registerkarte **Web 8080** aktualisieren, um die Webseite anzuschauen."
              },
              {
                "name": "Überprüfen des Status der Änderungen in script.js",
                "file": "verify1-2.sh",
                "hint": "Bitte folgen Sie den Schritten, um das Lab abzuschließen."
              }
            ]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "複数選択可能な状態保持チェックボックス",
      "description": "この実験では、React を使って複数選択可能な状態保持チェックボックスを作成する方法を学びます。この実験では、チェックボックスリストをレンダリングし、その状態を更新し、コールバック関数を使って選択された値を親コンポーネントに渡すプロセスを案内します。この実験が終わると、任意の React プロジェクトで使える再利用可能なチェックボックスコンポーネントを作成できるようになります。",
      "meta": {
        "title": "複数選択可能な状態保持チェックボックスを作成する | React チュートリアル",
        "description": "React を使って複数選択可能な状態保持チェックボックスを作成する方法を学びましょう。このチュートリアルでは、チェックボックスリストをレンダリングし、その状態を更新し、選択された値を親コンポーネントに渡すプロセスを案内します。",
        "keywords": "React, チェックボックス，複数選択，状態管理，コールバック関数"
      },
      "details": {
        "steps": [
          {
            "title": "複数選択可能な状態保持チェックボックス",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "ウェブサービスの実行状態を確認する",
                "file": "verify1-1.sh",
                "hint": "右下隅の「Go Live」をクリックして、ポート 8080 でウェブサービスを実行してください。その後、**Web 8080**タブを更新してウェブページをプレビューできます。"
              },
              {
                "name": "script.js の変更状態を確認する",
                "file": "verify1-2.sh",
                "hint": "実験を完了するための手順に従ってください。"
              }
            ]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Состояние чекбокса с множественным выбором",
      "description": "В этом практическом занятии мы научимся создавать состояние чекбокса с множественным выбором с использованием React. В этом практическом занятии вы узнаете, как отображать список чекбоксов, обновлять его состояние и передавать выбранное значение или значения в родительский компонент с использованием обратного вызова. В конце этого практического занятия вы сможете создать повторно используемый компонент чекбокса, который можно использовать в любом проекте на React.",
      "meta": {
        "title": "Создайте состояние чекбокса с множественным выбором | Руководство по React",
        "description": "Изучите, как создать состояние чекбокса с множественным выбором с использованием React. Это руководство проведет вас через процесс отображения списка чекбоксов, обновления его состояния и передачи выбранного значения или значений в родительский компонент.",
        "keywords": "React, Чекбокс, Множественный выбор, Управление состоянием, Функция обратного вызова"
      },
      "details": {
        "steps": [
          {
            "title": "Состояние чекбокса с множественным выбором",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "Проверить состояние работы веб-сервиса",
                "file": "verify1-1.sh",
                "hint": "Пожалуйста, нажмите кнопку 'Go Live' в нижнем правом углу, чтобы запустить веб-сервис на порту 8080. Затем вы можете обновить вкладку **Web 8080**, чтобы просмотреть веб-страницу."
              },
              {
                "name": "Проверить состояние изменения script.js",
                "file": "verify1-2.sh",
                "hint": "Пожалуйста, следуйте шагам, чтобы завершить практическое занятие."
              }
            ]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    },
    {
      "lang": "ko",
      "title": "다중 선택이 가능한 상태 저장 체크박스",
      "description": "이 랩에서는 React 를 사용하여 다중 선택이 가능한 상태 저장 체크박스를 만드는 방법을 배웁니다. 이 랩은 체크박스 목록을 렌더링하고, 상태를 업데이트하며, 콜백 함수를 사용하여 선택된 값 (value) 을 상위 컴포넌트로 전달하는 과정을 안내합니다. 이 랩을 마치면 모든 React 프로젝트에서 사용할 수 있는 재사용 가능한 체크박스 컴포넌트를 만들 수 있습니다.",
      "meta": {
        "title": "React 로 다중 선택 체크박스 만들기 | React 튜토리얼",
        "description": "React 를 사용하여 다중 선택이 가능한 상태 저장 체크박스를 만드는 방법을 알아보세요. 이 튜토리얼은 체크박스 목록 렌더링, 상태 업데이트, 선택된 값 (value) 을 상위 컴포넌트로 전달하는 과정을 안내합니다.",
        "keywords": "React, 체크박스, 다중 선택, 상태 관리, 콜백 함수, 리액트 체크박스, 체크박스 컴포넌트, 리액트 튜토리얼"
      },
      "details": {
        "steps": [
          {
            "title": "다중 선택이 가능한 상태 저장 체크박스",
            "text": "ko/step1.md",
            "verify": [
              {
                "name": "웹 서비스 실행 상태 확인",
                "file": "verify1-1.sh",
                "hint": "오른쪽 하단의 'Go Live'를 클릭하여 웹 서비스를 포트 8080 에서 실행하세요. 그런 다음, **Web 8080** 탭을 새로 고쳐 웹 페이지를 미리 볼 수 있습니다."
              },
              {
                "name": "script.js 수정 상태 확인",
                "file": "verify1-2.sh",
                "hint": "랩을 완료하려면 단계를 따르세요."
              }
            ]
          }
        ],
        "intro": {
          "text": "ko/intro.md",
          "title": "소개"
        },
        "finish": {
          "text": "ko/finish.md",
          "title": "요약"
        }
      }
    },
    {
      "lang": "pt",
      "title": "Checkbox com Estado e Seleção Múltipla",
      "description": "Neste laboratório, aprenderemos como criar um *checkbox* com estado e seleção múltipla usando React. Este laboratório irá guiá-lo através do processo de renderização de uma lista de *checkboxes*, atualizando seu estado e passando o(s) valor(es) selecionado(s) para o componente pai usando uma função *callback*. Ao final deste laboratório, você será capaz de criar um componente de *checkbox* reutilizável que pode ser usado em qualquer projeto React.",
      "meta": {
        "title": "Criar *Checkbox* com Estado e Seleção Múltipla | Tutorial React",
        "description": "Aprenda como criar um *checkbox* com estado e seleção múltipla usando React. Este tutorial irá guiá-lo através do processo de renderização de uma lista de *checkboxes*, atualizando seu estado e passando o(s) valor(es) selecionado(s) para o componente pai.",
        "keywords": "React, *Checkbox*, Seleção Múltipla, Gerenciamento de Estado, Função *Callback*"
      },
      "details": {
        "steps": [
          {
            "title": "Checkbox com Estado e Seleção Múltipla",
            "text": "pt/step1.md",
            "verify": [
              {
                "name": "Verificar o status de execução do serviço web",
                "file": "verify1-1.sh",
                "hint": "Por favor, clique em 'Go Live' no canto inferior direito para executar o serviço web na porta 8080. Em seguida, você pode atualizar a aba **Web 8080** para visualizar a página web."
              },
              {
                "name": "Verificar o status da modificação do script.js",
                "file": "verify1-2.sh",
                "hint": "Por favor, siga os passos para completar o laboratório."
              }
            ]
          }
        ],
        "intro": {
          "text": "pt/intro.md",
          "title": "Introdução"
        },
        "finish": {
          "text": "pt/finish.md",
          "title": "Resumo"
        }
      }
    }
  ]
}
