{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Uncontrolled Select Element",
  "description": "In this lab, we will learn how to create an uncontrolled <select> element in React using callback functions to pass its value to the parent component. We will use the selectedValue prop to set the initial value of the <select> element, and the onChange event to send the new value to the parent. This lab will also cover how to use Array.prototype.map() to create <option> elements for each passed value.",
  "meta": {
    "title": "Uncontrolled Select Element in React",
    "description": "Learn how to create an uncontrolled select element in React using callback functions to pass its value to the parent component.",
    "keywords": "array prototype map, callback functions, react, parent component, uncontrolled select"
  },
  "difficulty": "Beginner",
  "time": 10,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Uncontrolled Select Element",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify the running status of the web service",
            "file": "verify1-1.sh",
            "hint": "Please click on 'Go Live' in the bottom right corner to run the web service on port 8080. Then, you can refresh the **Web 8080** Tab to preview the web page.",
            "timeout": 0,
            "showstderr": true
          },
          {
            "name": "Verify the status of script.js modification",
            "file": "verify1-2.sh",
            "hint": "Please follow the steps to complete the lab.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": ["react/event_handling", "react/jsx", "react/list_keys"]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    },
    "assets": {
      "host01": [
        {
          "file": "index.html",
          "target": "~/project",
          "chmod": "ugo+rwx"
        },
        {
          "file": "script.js",
          "target": "~/project",
          "chmod": "ugo+rwx"
        }
      ]
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["Lotus-7"],
  "license": {
    "name": "CC-BY-4.0",
    "url": "https://github.com/30-seconds/30-seconds-of-code/blob/master/LICENSE",
    "repo": "https://github.com/30-seconds/30-seconds-of-code"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "不受控的选择元素",
      "description": "在本实验中，我们将学习如何在React中创建一个不受控的 <select> 元素，使用回调函数将其值传递给父组件。我们将使用selectedValue属性来设置 <select> 元素的初始值，并使用onChange事件将新值发送给父组件。本实验还将介绍如何使用Array.prototype.map()为每个传递的值创建 <option> 元素。",
      "meta": {
        "title": "React中的不受控选择元素",
        "description": "学习如何在React中使用回调函数创建一个不受控的选择元素，并将其值传递给父组件。",
        "keywords": "数组原型映射, 回调函数, React, 父组件, 不受控选择"
      },
      "details": {
        "steps": [
          {
            "title": "不受控的选择元素",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "验证网络服务的运行状态",
                "file": "verify1-1.sh",
                "hint": "请点击右下角的“Go Live”以在端口8080上运行网络服务。然后，你可以刷新“Web 8080”标签页来预览网页。"
              },
              {
                "name": "验证script.js修改的状态",
                "file": "verify1-2.sh",
                "hint": "请按照步骤完成实验。"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    }
  ]
}
