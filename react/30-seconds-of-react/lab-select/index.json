{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Uncontrolled Select Element",
  "description": "In this lab, we will learn how to create an uncontrolled <select> element in React using callback functions to pass its value to the parent component. We will use the selectedValue prop to set the initial value of the <select> element, and the onChange event to send the new value to the parent. This lab will also cover how to use Array.prototype.map() to create <option> elements for each passed value.",
  "meta": {
    "title": "Uncontrolled Select Element in React",
    "description": "Learn how to create an uncontrolled select element in React using callback functions to pass its value to the parent component.",
    "keywords": "array prototype map, callback functions, react, parent component, uncontrolled select"
  },
  "difficulty": "Beginner",
  "time": 5,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Uncontrolled Select Element",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify the running status of the web service",
            "file": "verify1-1.sh",
            "hint": "Please click on 'Go Live' in the bottom right corner to run the web service on port 8080. Then, you can refresh the **Web 8080** Tab to preview the web page.",
            "timeout": 0,
            "showstderr": true
          },
          {
            "name": "Verify the status of script.js modification",
            "file": "verify1-2.sh",
            "hint": "Please follow the steps to complete the lab.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": ["react/event_handling", "react/jsx", "react/list_keys"]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    },
    "assets": {
      "host01": [
        {
          "file": "index.html",
          "target": "~/project",
          "chmod": "ugo+rwx"
        },
        {
          "file": "script.js",
          "target": "~/project",
          "chmod": "ugo+rwx"
        }
      ]
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["Lotus-7"],
  "license": {
    "name": "CC-BY-4.0",
    "url": "https://github.com/30-seconds/30-seconds-of-code/blob/master/LICENSE",
    "repo": "https://github.com/30-seconds/30-seconds-of-code"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "不受控的选择元素",
      "description": "在本实验中，我们将学习如何在 React 中创建一个不受控的 <select> 元素，使用回调函数将其值传递给父组件。我们将使用 selectedValue 属性来设置 <select> 元素的初始值，并使用 onChange 事件将新值发送给父组件。本实验还将介绍如何使用 Array.prototype.map() 为每个传递的值创建 <option> 元素。",
      "meta": {
        "title": "React 中的不受控选择元素",
        "description": "学习如何在 React 中使用回调函数创建一个不受控的选择元素，并将其值传递给父组件。",
        "keywords": "数组原型映射，回调函数，React, 父组件，不受控选择"
      },
      "details": {
        "steps": [
          {
            "title": "不受控的选择元素",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "验证网络服务的运行状态",
                "file": "verify1-1.sh",
                "hint": "请点击右下角的“Go Live”以在端口 8080 上运行网络服务。然后，你可以刷新“Web 8080”标签页来预览网页。"
              },
              {
                "name": "验证 script.js 修改的状态",
                "file": "verify1-2.sh",
                "hint": "请按照步骤完成实验。"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Elemento <select> no controlado",
      "description": "En este laboratorio, aprenderemos a crear un elemento <select> no controlado en React utilizando funciones de devolución de llamada para pasar su valor al componente padre. Utilizaremos la propiedad selectedValue para establecer el valor inicial del elemento <select>, y el evento onChange para enviar el nuevo valor al padre. Este laboratorio también cubrirá cómo utilizar Array.prototype.map() para crear elementos <option> para cada valor pasado.",
      "meta": {
        "title": "Elemento <select> no controlado en React",
        "description": "Aprende a crear un elemento <select> no controlado en React utilizando funciones de devolución de llamada para pasar su valor al componente padre.",
        "keywords": "map del prototipo de matriz, funciones de devolución de llamada, react, componente padre, <select> no controlado"
      },
      "details": {
        "steps": [
          {
            "title": "Elemento <select> no controlado",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Verificar el estado de ejecución del servicio web",
                "file": "verify1-1.sh",
                "hint": "Haga clic en 'Go Live' en la esquina inferior derecha para ejecutar el servicio web en el puerto 8080. Luego, puede actualizar la pestaña **Web 8080** para previsualizar la página web."
              },
              {
                "name": "Verificar el estado de la modificación de script.js",
                "file": "verify1-2.sh",
                "hint": "Siga los pasos para completar el laboratorio."
              }
            ]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Élément <select> non contrôlé",
      "description": "Dans ce laboratoire, nous allons apprendre à créer un élément `<select>` non contrôlé dans React en utilisant des fonctions de rappel pour passer sa valeur au composant parent. Nous utiliserons la propriété `selectedValue` pour définir la valeur initiale de l'élément `<select>`, et l'événement `onChange` pour envoyer la nouvelle valeur au parent. Ce laboratoire couvrira également la manière d'utiliser `Array.prototype.map()` pour créer des éléments `<option>` pour chaque valeur passée.",
      "meta": {
        "title": "Élément <select> non contrôlé dans React",
        "description": "Apprenez à créer un élément `<select>` non contrôlé dans React en utilisant des fonctions de rappel pour passer sa valeur au composant parent.",
        "keywords": "map du prototype d'un tableau, fonctions de rappel, React, composant parent, `<select>` non contrôlé"
      },
      "details": {
        "steps": [
          {
            "title": "Élément <select> non contrôlé",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Vérifiez le statut d'exécution du service web",
                "file": "verify1-1.sh",
                "hint": "Veuillez cliquer sur 'Go Live' dans le coin inférieur droit pour exécuter le service web sur le port 8080. Ensuite, vous pouvez rafraîchir l'onglet **Web 8080** pour prévisualiser la page web."
              },
              {
                "name": "Vérifiez l'état de la modification de script.js",
                "file": "verify1-2.sh",
                "hint": "Veuillez suivre les étapes pour terminer le laboratoire."
              }
            ]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Unkontrolliertes Select-Element",
      "description": "In diesem Lab werden wir lernen, wie man in React ein unkontrolliertes <select>-Element mit Hilfe von Callback-Funktionen erstellt, um seinen Wert an das übergeordnete Element zu übergeben. Wir werden die selectedValue-Eigenschaft verwenden, um den Anfangswert des <select>-Elements festzulegen, und das onChange-Ereignis, um den neuen Wert an das übergeordnete Element zu senden. In diesem Lab wird auch erklärt, wie man Array.prototype.map() verwendet, um <option>-Elemente für jeden übergebenen Wert zu erstellen.",
      "meta": {
        "title": "Unkontrolliertes Select-Element in React",
        "description": "Lernen Sie, wie man in React ein unkontrolliertes Select-Element mit Hilfe von Callback-Funktionen erstellt, um seinen Wert an das übergeordnete Element zu übergeben.",
        "keywords": "Array Prototype Map, Callback-Funktionen, React, übergeordnetes Element, unkontrolliertes Select"
      },
      "details": {
        "steps": [
          {
            "title": "Unkontrolliertes Select-Element",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Überprüfen des Laufzustands des Webdiensts",
                "file": "verify1-1.sh",
                "hint": "Bitte klicken Sie in der unteren rechten Ecke auf 'Go Live', um den Webdienst auf Port 8080 auszuführen. Anschließend können Sie die Registerkarte **Web 8080** aktualisieren, um die Webseite anzuschauen."
              },
              {
                "name": "Überprüfen des Status der Änderungen in script.js",
                "file": "verify1-2.sh",
                "hint": "Bitte folgen Sie den Schritten, um das Lab abzuschließen."
              }
            ]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "制御されていない <select> 要素",
      "description": "この実験では、コールバック関数を使って React で制御されていない `<select>`要素を作成し、その値を親コンポーネントに渡す方法を学びます。`<select>`要素の初期値を設定するために `selectedValue`プロップを使い、新しい値を親に送信するために`onChange`イベントを使います。この実験では、渡された各値に対して`<option>` 要素を作成するために`Array.prototype.map()` をどのように使うかも説明します。",
      "meta": {
        "title": "React における制御されていない <select> 要素",
        "description": "コールバック関数を使って React で制御されていない select 要素を作成し、その値を親コンポーネントに渡す方法を学びましょう。",
        "keywords": "配列プロトタイプマップ，コールバック関数，React, 親コンポーネント，制御されていない select"
      },
      "details": {
        "steps": [
          {
            "title": "制御されていない <select> 要素",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "ウェブサービスの実行状態を確認する",
                "file": "verify1-1.sh",
                "hint": "右下隅の「Go Live」をクリックして、ポート 8080 でウェブサービスを実行してください。その後、**Web 8080**タブを更新してウェブページをプレビューできます。"
              },
              {
                "name": "script.js の変更状態を確認する",
                "file": "verify1-2.sh",
                "hint": "実験を完了する手順に従ってください。"
              }
            ]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Неуправляемый элемент <select>",
      "description": "В этом практическом занятии мы узнаем, как создавать неуправляемый элемент <select> в React с использованием функций обратного вызова для передачи его значения в родительский компонент. Мы будем использовать свойство selectedValue для установки начального значения элемента <select>, и событие onChange для отправки нового значения в родительский компонент. В этом практическом занятии также будут рассмотрены методы использования Array.prototype.map() для создания элементов <option> для каждого переданного значения.",
      "meta": {
        "title": "Неуправляемый элемент <select> в React",
        "description": "Изучите, как создавать неуправляемый элемент <select> в React с использованием функций обратного вызова для передачи его значения в родительский компонент.",
        "keywords": "массив прототип map, функции обратного вызова, react, родительский компонент, неуправляемый <select>"
      },
      "details": {
        "steps": [
          {
            "title": "Неуправляемый элемент <select>",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "Проверить статус работы веб-сервиса",
                "file": "verify1-1.sh",
                "hint": "Пожалуйста, нажмите кнопку 'Go Live' в нижнем правом углу, чтобы запустить веб-сервис на порту 8080. Затем вы можете обновить вкладку **Web 8080**, чтобы просмотреть веб-страницу."
              },
              {
                "name": "Проверить статус изменения script.js",
                "file": "verify1-2.sh",
                "hint": "Пожалуйста, следуйте шагам, чтобы завершить практическое занятие."
              }
            ]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    }
  ]
}
