{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Dynamic React List Component",
  "description": "In this lab, we will explore how to create a dynamic list component in React using the DataList component. with this component, we can render an array of primitive values as an ordered or unordered list. By the end of the lab, you will have a better understanding of how to use Array.prototype.map() and conditionally render elements based on props in React.",
  "meta": {
    "title": "React Dynamic List Component | Programming Tutorial",
    "description": "Learn how to create a dynamic list component in React using the DataList component. Explore Array.prototype.map() and conditional rendering in this comprehensive programming tutorial.",
    "keywords": "React, DataList, Dynamic List, Array.prototype.map, Conditional Rendering, Programming Tutorial"
  },
  "difficulty": "Beginner",
  "time": 5,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Data List",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify the running status of the web service",
            "file": "verify1-1.sh",
            "hint": "Please click on 'Go Live' in the bottom right corner to run the web service on port 8080. Then, you can refresh the **Web 8080** Tab to preview the web page.",
            "timeout": 0,
            "showstderr": true
          },
          {
            "name": "Verify the status of script.js modification",
            "file": "verify1-2.sh",
            "hint": "Please follow the steps to complete the lab.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": ["react/jsx", "react/list_keys"]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    },
    "assets": {
      "host01": [
        {
          "file": "index.html",
          "target": "~/project",
          "chmod": "ugo+rwx"
        },
        {
          "file": "script.js",
          "target": "~/project",
          "chmod": "ugo+rwx"
        }
      ]
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["Lotus-7"],
  "license": {
    "name": "CC-BY-4.0",
    "url": "https://github.com/30-seconds/30-seconds-of-code/blob/master/LICENSE",
    "repo": "https://github.com/30-seconds/30-seconds-of-code"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "React 动态列表组件",
      "description": "在本实验中，我们将探索如何使用 DataList 组件在 React 中创建一个动态列表组件。借助此组件，我们可以将原始值数组呈现为有序列表或无序列表。在实验结束时，你将更好地理解如何在 React 中使用 Array.prototype.map() 以及如何根据属性有条件地渲染元素。",
      "meta": {
        "title": "React 动态列表组件 | 编程教程",
        "description": "学习如何使用 DataList 组件在 React 中创建动态列表组件。在这个全面的编程教程中探索 Array.prototype.map() 和条件渲染。",
        "keywords": "React, DataList, 动态列表，Array.prototype.map(), 条件渲染，编程教程"
      },
      "details": {
        "steps": [
          {
            "title": "数据列表",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "验证网络服务的运行状态",
                "file": "verify1-1.sh",
                "hint": "请点击右下角的“上线”以在端口 8080 上运行网络服务。然后，你可以刷新“Web 8080”标签页以预览网页。"
              },
              {
                "name": "验证 script.js 修改状态",
                "file": "verify1-2.sh",
                "hint": "请按照步骤完成实验。"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Componente de lista dinámica en React",
      "description": "En este laboratorio, exploraremos cómo crear un componente de lista dinámica en React utilizando el componente DataList. Con este componente, podemos renderizar una matriz de valores primitivos como una lista ordenada o no ordenada. Al final del laboratorio, tendrás una mejor comprensión de cómo utilizar Array.prototype.map() y renderizar elementos condicionalmente basados en props en React.",
      "meta": {
        "title": "Componente de lista dinámica en React | Tutorial de programación",
        "description": "Aprende cómo crear un componente de lista dinámica en React utilizando el componente DataList. Explora Array.prototype.map() y la renderización condicional en este completo tutorial de programación.",
        "keywords": "React, DataList, Lista dinámica, Array.prototype.map(), Renderización condicional, Tutorial de programación"
      },
      "details": {
        "steps": [
          {
            "title": "Lista de datos",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Verificar el estado de ejecución del servicio web",
                "file": "verify1-1.sh",
                "hint": "Haga clic en 'Go Live' en la esquina inferior derecha para ejecutar el servicio web en el puerto 8080. Luego, puede actualizar la pestaña **Web 8080** para previsualizar la página web."
              },
              {
                "name": "Verificar el estado de la modificación de script.js",
                "file": "verify1-2.sh",
                "hint": "Siga los pasos para completar el laboratorio."
              }
            ]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Composant de liste dynamique React",
      "description": "Dans ce laboratoire, nous allons explorer comment créer un composant de liste dynamique dans React en utilisant le composant DataList. Avec ce composant, nous pouvons afficher un tableau de valeurs primitives sous forme d'une liste ordonnée ou non ordonnée. À la fin du laboratoire, vous aurez une meilleure compréhension de la manière d'utiliser Array.prototype.map() et de rendre conditionnellement des éléments en fonction des props dans React.",
      "meta": {
        "title": "Composant de liste dynamique React | Tutoriel de programmation",
        "description": "Découvrez comment créer un composant de liste dynamique dans React en utilisant le composant DataList. Explorez Array.prototype.map() et le rendu conditionnel dans ce tutoriel de programmation complet.",
        "keywords": "React, DataList, Liste dynamique, Array.prototype.map, Rendu conditionnel, Tutoriel de programmation"
      },
      "details": {
        "steps": [
          {
            "title": "Liste de données",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Vérifiez l'état d'exécution du service web",
                "file": "verify1-1.sh",
                "hint": "Veuillez cliquer sur 'Go Live' dans le coin inférieur droit pour exécuter le service web sur le port 8080. Ensuite, vous pouvez actualiser l'onglet **Web 8080** pour prévisualiser la page web."
              },
              {
                "name": "Vérifiez l'état de la modification de script.js",
                "file": "verify1-2.sh",
                "hint": "Veuillez suivre les étapes pour terminer le laboratoire."
              }
            ]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Dynamische React-Listenkomponente",
      "description": "In diesem Lab werden wir untersuchen, wie man in React mithilfe der DataList-Komponente eine dynamische Listenkomponente erstellt. Mit dieser Komponente können wir ein Array von primitiven Werten als nummerierte oder aufzählungsfreie Liste rendern. Am Ende des Labs werden Sie ein besseres Verständnis dafür haben, wie man Array.prototype.map() verwendet und in React bedingte Elemente basierend auf Props rendert.",
      "meta": {
        "title": "React Dynamische Listenkomponente | Programmier-Tutorial",
        "description": "Lernen Sie, wie man in React mithilfe der DataList-Komponente eine dynamische Listenkomponente erstellt. Entdecken Sie Array.prototype.map() und bedingtes Rendern in diesem umfassenden Programmier-Tutorial.",
        "keywords": "React, DataList, Dynamische Liste, Array.prototype.map, Bedingtes Rendern, Programmier-Tutorial"
      },
      "details": {
        "steps": [
          {
            "title": "Datenliste",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Überprüfen des Laufzustands des Webdiensts",
                "file": "verify1-1.sh",
                "hint": "Bitte klicken Sie auf 'Go Live' in der unteren rechten Ecke, um den Webdienst auf Port 8080 auszuführen. Anschließend können Sie die Registerkarte **Web 8080** aktualisieren, um die Webseite anzuschauen."
              },
              {
                "name": "Überprüfen des Status der Änderungen an script.js",
                "file": "verify1-2.sh",
                "hint": "Bitte folgen Sie den Schritten, um das Lab abzuschließen."
              }
            ]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "React の動的なリストコンポーネント",
      "description": "この実験では、DataList コンポーネントを使用して React で動的なリストコンポーネントを作成する方法を探ります。このコンポーネントを使用すると、プリミティブ値の配列を順序付きまたは無順序のリストとしてレンダリングできます。実験が終了するとき、React で Array.prototype.map() を使用して props に基づいて要素を条件付きでレンダリングする方法をより深く理解しているでしょう。",
      "meta": {
        "title": "React の動的リストコンポーネント | プログラミングチュートリアル",
        "description": "DataList コンポーネントを使用して React で動的なリストコンポーネントを作成する方法を学びましょう。この包括的なプログラミングチュートリアルで Array.prototype.map() と条件付きレンダリングを探りましょう。",
        "keywords": "React, DataList, 動的リスト，Array.prototype.map, 条件付きレンダリング，プログラミングチュートリアル"
      },
      "details": {
        "steps": [
          {
            "title": "データ リスト",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "ウェブ サービスの実行状態を確認する",
                "file": "verify1-1.sh",
                "hint": "右下隅の「Go Live」をクリックして、ポート 8080 でウェブ サービスを実行してください。その後、**Web 8080** タブを更新してウェブ ページをプレビューできます。"
              },
              {
                "name": "script.js の変更状態を確認する",
                "file": "verify1-2.sh",
                "hint": "実験を完了する手順に従ってください。"
              }
            ]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Динамический компонент списка в React",
      "description": "В этом практическом занятии мы изучим, как создать динамический компонент списка в React с использованием компонента DataList. С помощью этого компонента мы можем отображать массив примитивных значений в виде упорядоченного или неупорядоченного списка. В конце практического занятия вы будете лучше понимать, как использовать Array.prototype.map() и условно отображать элементы на основе пропсов в React.",
      "meta": {
        "title": "Динамический компонент списка в React | Руководство по программированию",
        "description": "Изучите, как создать динамический компонент списка в React с использованием компонента DataList. Исследуйте Array.prototype.map() и условное отображение в этом полноценном руководстве по программированию.",
        "keywords": "React, DataList, Динамический список, Array.prototype.map(), Условное отображение, Руководство по программированию"
      },
      "details": {
        "steps": [
          {
            "title": "Data List",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "Проверить статус работы веб-сервиса",
                "file": "verify1-1.sh",
                "hint": "Пожалуйста, нажмите кнопку 'Go Live' в нижнем правом углу, чтобы запустить веб-сервис на порту 8080. Затем вы можете обновить вкладку **Web 8080**, чтобы просмотреть веб-страницу."
              },
              {
                "name": "Проверить статус изменения script.js",
                "file": "verify1-2.sh",
                "hint": "Пожалуйста, следуйте шагам, чтобы завершить практическое занятие."
              }
            ]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    }
  ]
}
