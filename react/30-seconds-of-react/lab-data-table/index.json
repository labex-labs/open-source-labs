{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Dynamic React Table with Primitive Data",
  "description": "In this lab, we will explore how to use React to dynamically render a table with rows created from an array of primitives. Specifically, we will utilize the Array.prototype.map() method to map each item in the data array to a <tr> element with an appropriate key and display it in a table with two columns: ID and Value. By the end of this lab, you will gain a better understanding of how to use React to create dynamic and responsive tables.",
  "meta": {
    "title": "React Dynamic Table | Programming Tutorial",
    "description": "Learn how to use React to dynamically render a table with rows created from an array of primitives. Explore the use of Array.prototype.map() to create responsive tables.",
    "keywords": "React, Dynamic Table, Array.prototype.map, Programming Tutorial, Web Development"
  },
  "difficulty": "Beginner",
  "time": 10,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Data Table",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify the running status of the web service",
            "file": "verify1-1.sh",
            "hint": "Please click on 'Go Live' in the bottom right corner to run the web service on port 8080. Then, you can refresh the **Web 8080** Tab to preview the web page.",
            "timeout": 0,
            "showstderr": true
          },
          {
            "name": "Verify the status of script.js modification",
            "file": "verify1-2.sh",
            "hint": "Please follow the steps to complete the lab.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": ["react/jsx", "react/list_keys"]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    },
    "assets": {
      "host01": [
        {
          "file": "index.html",
          "target": "~/project",
          "chmod": "ugo+rwx"
        },
        {
          "file": "script.js",
          "target": "~/project",
          "chmod": "ugo+rwx"
        }
      ]
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["Lotus-7"],
  "license": {
    "name": "CC-BY-4.0",
    "url": "https://github.com/30-seconds/30-seconds-of-code/blob/master/LICENSE",
    "repo": "https://github.com/30-seconds/30-seconds-of-code"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "使用原始数据的 React 动态表格",
      "description": "在本实验中，我们将探索如何使用 React 动态渲染一个表格，其行由基本数据类型数组创建。具体来说，我们将利用 Array.prototype.map() 方法将数据数组中的每个项目映射到一个具有适当键的 <tr> 元素，并在一个包含两列（ID 和 值）的表格中显示它。在本实验结束时，你将更好地理解如何使用 React 创建动态且响应式的表格。",
      "meta": {
        "title": "React 动态表格 | 编程教程",
        "description": "学习如何使用 React 动态渲染一个表格，其行由基本数据类型数组创建。探索使用 Array.prototype.map() 创建响应式表格。",
        "keywords": "React, 动态表格，Array.prototype.map, 编程教程，网页开发"
      },
      "details": {
        "steps": [
          {
            "title": "数据表格",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "验证网络服务的运行状态",
                "file": "verify1-1.sh",
                "hint": "请点击右下角的“上线”以在端口 8080 上运行网络服务。然后，你可以刷新“Web 8080”标签页以预览网页。"
              },
              {
                "name": "验证 script.js 修改状态",
                "file": "verify1-2.sh",
                "hint": "请按照步骤完成实验。"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Tabla dinámica de React con datos primitivos",
      "description": "En este laboratorio, exploraremos cómo usar React para renderizar dinámicamente una tabla con filas creadas a partir de una matriz de primitivos. Específicamente, utilizaremos el método Array.prototype.map() para mapear cada elemento en la matriz de datos a un elemento <tr> con una clave adecuada y mostrarlo en una tabla con dos columnas: ID y Valor. Al final de este laboratorio, tendrás una mejor comprensión de cómo usar React para crear tablas dinámicas y responsivas.",
      "meta": {
        "title": "Tabla dinámica de React | Tutorial de programación",
        "description": "Aprende cómo usar React para renderizar dinámicamente una tabla con filas creadas a partir de una matriz de primitivos. Explora el uso de Array.prototype.map() para crear tablas responsivas.",
        "keywords": "React, Tabla dinámica, Array.prototype.map, Tutorial de programación, Desarrollo web"
      },
      "details": {
        "steps": [
          {
            "title": "Tabla de Datos",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Verificar el estado de ejecución del servicio web",
                "file": "verify1-1.sh",
                "hint": "Haga clic en 'Go Live' en la esquina inferior derecha para ejecutar el servicio web en el puerto 8080. Luego, puede actualizar la pestaña **Web 8080** para previsualizar la página web."
              },
              {
                "name": "Verificar el estado de la modificación de script.js",
                "file": "verify1-2.sh",
                "hint": "Siga los pasos para completar el laboratorio."
              }
            ]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Tableau React dynamique avec des données primitives",
      "description": "Dans ce laboratoire, nous allons explorer comment utiliser React pour rendre dynamiquement un tableau avec des lignes créées à partir d'un tableau de primitives. Plus précisément, nous allons utiliser la méthode Array.prototype.map() pour mapper chaque élément du tableau de données à un élément <tr> avec une clé appropriée et l'afficher dans un tableau avec deux colonnes : ID et Valeur. À la fin de ce laboratoire, vous aurez une meilleure compréhension de la manière d'utiliser React pour créer des tableaux dynamiques et réactifs.",
      "meta": {
        "title": "Tableau dynamique React | Tutoriel de programmation",
        "description": "Découvrez comment utiliser React pour rendre dynamiquement un tableau avec des lignes créées à partir d'un tableau de primitives. Explorez l'utilisation de Array.prototype.map() pour créer des tableaux réactifs.",
        "keywords": "React, Tableau dynamique, Array.prototype.map, Tutoriel de programmation, Développement web"
      },
      "details": {
        "steps": [
          {
            "title": "Tableau de données",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Vérifiez le statut d'exécution du service web",
                "file": "verify1-1.sh",
                "hint": "Veuillez cliquer sur 'Go Live' dans le coin inférieur droit pour exécuter le service web sur le port 8080. Ensuite, vous pouvez actualiser l'onglet **Web 8080** pour prévisualiser la page web."
              },
              {
                "name": "Vérifiez l'état de la modification de script.js",
                "file": "verify1-2.sh",
                "hint": "Veuillez suivre les étapes pour terminer le laboratoire."
              }
            ]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Dynamische React-Tabelle mit primitiven Daten",
      "description": "In diesem Lab werden wir untersuchen, wie man React verwendet, um eine Tabelle dynamisch zu rendern, deren Zeilen aus einem Array von primitiven Werten erstellt werden. Insbesondere werden wir die Array.prototype.map()-Methode verwenden, um jedes Element im Datenarray zu einem <tr>-Element mit einem geeigneten Schlüssel zuzuordnen und es in einer Tabelle mit zwei Spalten: ID und Wert anzuzeigen. Am Ende dieses Labs werden Sie ein besseres Verständnis dafür erwerben, wie man React verwendet, um dynamische und reaktive Tabellen zu erstellen.",
      "meta": {
        "title": "React-Dynamische Tabelle | Programmier-Tutorial",
        "description": "Lernen Sie, wie man React verwendet, um eine Tabelle dynamisch zu rendern, deren Zeilen aus einem Array von primitiven Werten erstellt werden. Entdecken Sie die Verwendung von Array.prototype.map(), um reaktive Tabellen zu erstellen.",
        "keywords": "React, Dynamische Tabelle, Array.prototype.map, Programmier-Tutorial, Webentwicklung"
      },
      "details": {
        "steps": [
          {
            "title": "Daten Tabelle",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Überprüfen des Laufzustands des Webdiensts",
                "file": "verify1-1.sh",
                "hint": "Bitte klicken Sie auf 'Go Live' in der unteren rechten Ecke, um den Webdienst auf Port 8080 auszuführen. Anschließend können Sie die Registerkarte **Web 8080** aktualisieren, um die Webseite anzuschauen."
              },
              {
                "name": "Überprüfen des Status der Änderungen an script.js",
                "file": "verify1-2.sh",
                "hint": "Bitte folgen Sie den Schritten, um das Lab abzuschließen."
              }
            ]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "プリミティブデータを使った React の動的テーブル",
      "description": "この実験では、React を使ってプリミティブ型の配列から作成された行を持つテーブルを動的にレンダリングする方法を探ります。具体的には、Array.prototype.map() メソッドを利用して、データ配列の各項目を適切なキー付きの <tr> 要素にマッピングし、ID と値の 2 つの列を持つテーブルに表示します。この実験が終了するとき、React を使って動的で応答性の高いテーブルを作成する方法をより深く理解するようになります。",
      "meta": {
        "title": "React の動的テーブル | プログラミングチュートリアル",
        "description": "React を使ってプリミティブ型の配列から作成された行を持つテーブルを動的にレンダリングする方法を学びましょう。応答性の高いテーブルを作成するための Array.prototype.map() の使い方を探求しましょう。",
        "keywords": "React, 動的テーブル，Array.prototype.map, プログラミングチュートリアル，ウェブ開発"
      },
      "details": {
        "steps": [
          {
            "title": "データテーブル",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "ウェブサービスの実行状態を確認する",
                "file": "verify1-1.sh",
                "hint": "右下隅の「Go Live」をクリックして 8080 ポートでウェブサービスを実行してください。その後、**Web 8080** タブを更新してウェブページをプレビューできます。"
              },
              {
                "name": "script.js の変更状態を確認する",
                "file": "verify1-2.sh",
                "hint": "実験を完了する手順に従ってください。"
              }
            ]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Динамическая таблица React с примитивными данными",
      "description": "В этом практическом занятии мы изучим, как использовать React для динамического отображения таблицы с строками, созданными из массива примитивных типов. В частности, мы будем использовать метод Array.prototype.map(), чтобы сопоставить каждый элемент в массиве данных с элементом <tr> с соответствующим ключом и отобразить его в таблице с двумя столбцами: ID и Value. В конце этого практического занятия вы получите более глубокое понимание того, как использовать React для создания динамических и отзывчивых таблиц.",
      "meta": {
        "title": "Динамическая таблица React | Руководство по программированию",
        "description": "Изучите, как использовать React для динамического отображения таблицы с строками, созданными из массива примитивных типов. Исследуйте применение Array.prototype.map() для создания отзывчивых таблиц.",
        "keywords": "React,Динамическая таблица,Array.prototype.map,Руководство по программированию,Разработка в вебе"
      },
      "details": {
        "steps": [
          {
            "title": "Таблица данных",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "Проверить статус работы веб-сервиса",
                "file": "verify1-1.sh",
                "hint": "Пожалуйста, нажмите кнопку 'Go Live' в нижнем правом углу, чтобы запустить веб-сервис на порту 8080. Затем вы можете обновить вкладку **Web 8080**, чтобы просмотреть веб-страницу."
              },
              {
                "name": "Проверить статус изменения script.js",
                "file": "verify1-2.sh",
                "hint": "Пожалуйста, следуйте шагам для завершения практического занятия."
              }
            ]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    }
  ]
}
