{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Textarea with Character Limit",
  "description": "In this lab, we will be building a limited textarea component using React. The purpose of this lab is to provide a hands-on experience in utilizing React hooks, such as useState() and useCallback(), to create a component that limits the number of characters a user can input in a textarea. By the end of this lab, you will have a functional textarea component that displays the character count and limits the number of characters a user can input.",
  "meta": {
    "title": "Textarea with Character Limit: A Hands-on React Coding Tutorial",
    "description": "Learn how to build a limited textarea component using React hooks like useState() and useCallback().",
    "keywords": "usecallback, react, character limit, usestate, textarea"
  },
  "difficulty": "Beginner",
  "time": 5,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Textarea with Character Limit",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify the running status of the web service",
            "file": "verify1-1.sh",
            "hint": "Please click on 'Go Live' in the bottom right corner to run the web service on port 8080. Then, you can refresh the **Web 8080** Tab to preview the web page.",
            "timeout": 0,
            "showstderr": true
          },
          {
            "name": "Verify the status of script.js modification",
            "file": "verify1-2.sh",
            "hint": "Please follow the steps to complete the lab.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": []
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    },
    "assets": {
      "host01": [
        {
          "file": "index.html",
          "target": "~/project",
          "chmod": "ugo+rwx"
        },
        {
          "file": "script.js",
          "target": "~/project",
          "chmod": "ugo+rwx"
        }
      ]
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["Lotus-7"],
  "license": {
    "name": "CC-BY-4.0",
    "url": "https://github.com/30-seconds/30-seconds-of-code/blob/master/LICENSE",
    "repo": "https://github.com/30-seconds/30-seconds-of-code"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "有字符限制的文本区域",
      "description": "在本实验中，我们将使用 React 构建一个有限制的文本区域组件。本实验的目的是提供一个实践经验，利用 React 钩子，如 useState() 和 useCallback()，来创建一个组件，限制用户在文本区域中可以输入的字符数。在本实验结束时，你将拥有一个功能齐全的文本区域组件，它可以显示字符计数并限制用户可以输入的字符数。",
      "meta": {
        "title": "有字符限制的文本区域：React 实践编码教程",
        "description": "学习如何使用 useState() 和 useCallback() 等 React 钩子构建有限制的文本区域组件。",
        "keywords": "usecallback, react, 字符限制，usestate, 文本区域"
      },
      "details": {
        "steps": [
          {
            "title": "有字符限制的文本区域",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "验证 Web 服务的运行状态",
                "file": "verify1-1.sh",
                "hint": "请点击右下角的“Go Live”在端口 8080 上运行 Web 服务。然后，你可以刷新“Web 8080”标签页来预览网页。"
              },
              {
                "name": "验证 script.js 修改状态",
                "file": "verify1-2.sh",
                "hint": "请按照步骤完成实验。"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Área de texto con límite de caracteres",
      "description": "En este laboratorio, construiremos un componente de área de texto limitado utilizando React. El objetivo de este laboratorio es proporcionar una experiencia práctica en el uso de hooks de React, como useState() y useCallback(), para crear un componente que limite el número de caracteres que un usuario puede ingresar en un área de texto. Al final de este laboratorio, tendrás un componente de área de texto funcional que muestra la cuenta de caracteres y limita el número de caracteres que un usuario puede ingresar.",
      "meta": {
        "title": "Área de texto con límite de caracteres: Un tutorial práctico de codificación con React",
        "description": "Aprende a construir un componente de área de texto limitado utilizando hooks de React como useState() y useCallback().",
        "keywords": "usecallback, react, límite de caracteres, usestate, área de texto"
      },
      "details": {
        "steps": [
          {
            "title": "Área de texto con límite de caracteres",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Verificar el estado de ejecución del servicio web",
                "file": "verify1-1.sh",
                "hint": "Haga clic en 'Go Live' en la esquina inferior derecha para ejecutar el servicio web en el puerto 8080. Luego, puede actualizar la pestaña **Web 8080** para previsualizar la página web."
              },
              {
                "name": "Verificar el estado de la modificación de script.js",
                "file": "verify1-2.sh",
                "hint": "Siga los pasos para completar el laboratorio."
              }
            ]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Zone de texte avec limite de caractères",
      "description": "Dans ce laboratoire, nous allons construire un composant de zone de texte limité à l'aide de React. Le but de ce laboratoire est de fournir une expérience pratique dans l'utilisation des hooks React, tels que useState() et useCallback(), pour créer un composant qui limite le nombre de caractères que l'utilisateur peut saisir dans une zone de texte. À la fin de ce laboratoire, vous aurez un composant de zone de texte fonctionnel qui affiche le compteur de caractères et limite le nombre de caractères que l'utilisateur peut saisir.",
      "meta": {
        "title": "Zone de texte avec limite de caractères : Un tutoriel de codage React pratique",
        "description": "Découvrez comment construire un composant de zone de texte limité à l'aide de hooks React comme useState() et useCallback().",
        "keywords": "usecallback, react, limite de caractères, usestate, zone de texte"
      },
      "details": {
        "steps": [
          {
            "title": "Zone de texte avec limite de caractères",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Vérifiez l'état d'exécution du service web",
                "file": "verify1-1.sh",
                "hint": "Veuillez cliquer sur 'Go Live' dans le coin inférieur droit pour exécuter le service web sur le port 8080. Ensuite, vous pouvez rafraîchir l'onglet **Web 8080** pour prévisualiser la page web."
              },
              {
                "name": "Vérifiez l'état de la modification de script.js",
                "file": "verify1-2.sh",
                "hint": "Veuillez suivre les étapes pour terminer le laboratoire."
              }
            ]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Textbereich mit Zeichenbegrenzung",
      "description": "In diesem Lab werden wir einen Textbereichskomponenten mit Eingabebegrenzung mithilfe von React erstellen. Ziel dieses Labs ist es, praktische Erfahrungen bei der Verwendung von React-Hooks wie useState() und useCallback() zu sammeln, um einen Komponenten zu erstellen, der die Anzahl der Zeichen begrenzt, die ein Benutzer in einem Textbereich eingeben kann. Am Ende dieses Labs werden Sie einen funktionsfähigen Textbereichskomponenten haben, der die Zeichenzahl anzeigt und die Anzahl der Zeichen begrenzt, die ein Benutzer eingeben kann.",
      "meta": {
        "title": "Textbereich mit Zeichenbegrenzung: Ein praxisorientierter React-Coding-Tutorial",
        "description": "Lernen Sie, wie Sie einen Textbereichskomponenten mit Eingabebegrenzung mithilfe von React-Hooks wie useState() und useCallback() erstellen.",
        "keywords": "usecallback, react, Zeichenbegrenzung, usestate, Textbereich"
      },
      "details": {
        "steps": [
          {
            "title": "Textbereich mit Zeichenbegrenzung",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Überprüfen des Laufzustands des Webdiensts",
                "file": "verify1-1.sh",
                "hint": "Bitte klicken Sie auf 'Go Live' in der unteren rechten Ecke, um den Webdienst auf Port 8080 auszuführen. Anschließend können Sie die Registerkarte **Web 8080** aktualisieren, um die Webseite anzuschauen."
              },
              {
                "name": "Überprüfen des Status der Änderungen in script.js",
                "file": "verify1-2.sh",
                "hint": "Bitte folgen Sie den Schritten, um das Lab abzuschließen."
              }
            ]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "文字数制限付きのテキストエリア",
      "description": "この実験では、React を使って制限付きのテキストエリアコンポーネントを作成します。この実験の目的は、useState() や useCallback() などの React フックを使って、ユーザーがテキストエリアに入力できる文字数を制限するコンポーネントを作成する際の実践的な経験を提供することです。この実験が終了すると、文字数を表示し、ユーザーが入力できる文字数を制限する機能性のあるテキストエリアコンポーネントが完成します。",
      "meta": {
        "title": "文字数制限付きのテキストエリア：React のコーディングチュートリアル",
        "description": "useState() や useCallback() のような React フックを使って、制限付きのテキストエリアコンポーネントを作成する方法を学びましょう。",
        "keywords": "usecallback, react, 文字数制限，usestate, テキストエリア"
      },
      "details": {
        "steps": [
          {
            "title": "文字数制限付きのテキストエリア",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "ウェブサービスの実行状況を確認する",
                "file": "verify1-1.sh",
                "hint": "右下隅の「Go Live」をクリックして、ポート 8080 でウェブサービスを実行してください。その後、**Web 8080**タブを更新して、ウェブページをプレビューできます。"
              },
              {
                "name": "script.js の変更状況を確認する",
                "file": "verify1-2.sh",
                "hint": "実験を完了する手順に従ってください。"
              }
            ]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Текстовое поле с ограничением количества символов",
      "description": "В этом практическом занятии мы создадим компонент ограниченного текстового поля с использованием React. Целью этого практического занятия является получение практического опыта в использовании React-хуков, таких как useState() и useCallback(), для создания компонента, который ограничивает количество символов, которое пользователь может ввести в текстовом поле. В конце этого практического занятия у вас будет функциональный компонент текстового поля, который отображает количество введенных символов и ограничивает количество символов, которое пользователь может ввести.",
      "meta": {
        "title": "Текстовое поле с ограничением количества символов: Практическое руководство по программированию на React",
        "description": "Изучите, как создать компонент ограниченного текстового поля с использованием React-хуков, таких как useState() и useCallback().",
        "keywords": "usecallback, react, ограничение количества символов, usestate, текстовое поле"
      },
      "details": {
        "steps": [
          {
            "title": "Текстовое поле с ограничением количества символов",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "Проверить статус работы веб-сервиса",
                "file": "verify1-1.sh",
                "hint": "Пожалуйста, нажмите кнопку 'Go Live' в нижнем правом углу, чтобы запустить веб-сервис на порту 8080. Затем вы можете обновить вкладку **Web 8080**, чтобы просмотреть веб-страницу."
              },
              {
                "name": "Проверить статус изменения script.js",
                "file": "verify1-2.sh",
                "hint": "Пожалуйста, следуйте шагам, чтобы завершить практическое занятие."
              }
            ]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    },
    {
      "lang": "ko",
      "title": "문자 제한 Textarea",
      "description": "이 랩에서는 React 를 사용하여 문자 제한이 있는 textarea 컴포넌트를 구축합니다. 이 랩의 목적은 useState() 및 useCallback() 과 같은 React 훅을 활용하여 사용자가 textarea 에 입력할 수 있는 문자 수를 제한하는 컴포넌트를 만드는 실습 경험을 제공하는 것입니다. 이 랩을 마치면 문자 수를 표시하고 사용자가 입력할 수 있는 문자 수를 제한하는 기능적인 textarea 컴포넌트를 갖게 됩니다.",
      "meta": {
        "title": "문자 제한 Textarea: React 코딩 실습 튜토리얼",
        "description": "useState() 및 useCallback() 과 같은 React 훅을 사용하여 문자 제한이 있는 textarea 컴포넌트를 구축하는 방법을 알아보세요.",
        "keywords": "useCallback, React, 문자 제한, useState, textarea, 텍스트 입력 제한, 리액트 튜토리얼"
      },
      "details": {
        "steps": [
          {
            "title": "문자 제한 Textarea",
            "text": "ko/step1.md",
            "verify": [
              {
                "name": "웹 서비스 실행 상태 확인",
                "file": "verify1-1.sh",
                "hint": "오른쪽 하단의 'Go Live'를 클릭하여 포트 8080 에서 웹 서비스를 실행하세요. 그런 다음 **Web 8080** 탭을 새로 고쳐 웹 페이지를 미리 볼 수 있습니다."
              },
              {
                "name": "script.js 수정 상태 확인",
                "file": "verify1-2.sh",
                "hint": "랩을 완료하려면 단계를 따르세요."
              }
            ]
          }
        ],
        "intro": {
          "text": "ko/intro.md",
          "title": "소개"
        },
        "finish": {
          "text": "ko/finish.md",
          "title": "요약"
        }
      }
    },
    {
      "lang": "pt",
      "title": "Textarea com Limite de Caracteres",
      "description": "Neste laboratório, construiremos um componente textarea com limite de caracteres usando React. O objetivo deste laboratório é fornecer uma experiência prática na utilização de hooks do React, como useState() e useCallback(), para criar um componente que limita o número de caracteres que um usuário pode inserir em uma textarea. Ao final deste laboratório, você terá um componente textarea funcional que exibe a contagem de caracteres e limita o número de caracteres que um usuário pode inserir.",
      "meta": {
        "title": "Textarea com Limite de Caracteres: Tutorial Prático de Codificação em React",
        "description": "Aprenda a construir um componente textarea com limite de caracteres usando hooks do React como useState() e useCallback().",
        "keywords": "usecallback, react, limite de caracteres, usestate, textarea, componente react"
      },
      "details": {
        "steps": [
          {
            "title": "Textarea com Limite de Caracteres",
            "text": "pt/step1.md",
            "verify": [
              {
                "name": "Verificar o status de execução do serviço web",
                "file": "verify1-1.sh",
                "hint": "Por favor, clique em 'Go Live' no canto inferior direito para executar o serviço web na porta 8080. Em seguida, você pode atualizar a aba **Web 8080** para visualizar a página web."
              },
              {
                "name": "Verificar o status da modificação do script.js",
                "file": "verify1-2.sh",
                "hint": "Por favor, siga os passos para completar o laboratório."
              }
            ]
          }
        ],
        "intro": {
          "text": "pt/intro.md",
          "title": "Introdução"
        },
        "finish": {
          "text": "pt/finish.md",
          "title": "Resumo"
        }
      }
    }
  ]
}
