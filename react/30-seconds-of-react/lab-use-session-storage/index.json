{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "React useSessionStorage Hook",
  "description": "In this lab, we will be learning how to use the useSessionStorage hook in React to persist stateful values to sessionStorage. We will learn how to initialize the value lazily, retrieve and store values using Storage.getItem() and Storage.setItem(), and how to update the state variable using the defined function. By the end of this lab, you will have a better understanding of how to use sessionStorage to store and retrieve data within a React application.",
  "meta": {
    "title": "React useSessionStorage Hook: Persist State in sessionStorage",
    "description": "Learn how to use the useSessionStorage hook in React to store and retrieve data in sessionStorage, with lazy initialization and update functions.",
    "keywords": "sessionstorage, react, state management, web development, usesessionstorage"
  },
  "difficulty": "Beginner",
  "time": 10,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "React useSessionStorage Hook",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify the running status of the web service",
            "file": "verify1-1.sh",
            "hint": "Please click on 'Go Live' in the bottom right corner to run the web service on port 8080. Then, you can refresh the **Web 8080** Tab to preview the web page.",
            "timeout": 0,
            "showstderr": true
          },
          {
            "name": "Verify the status of script.js modification",
            "file": "verify1-2.sh",
            "hint": "Please follow the steps to complete the lab.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "react/event_handling",
          "react/hooks",
          "react/jsx",
          "react/use_state_reducer"
        ]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    },
    "assets": {
      "host01": [
        {
          "file": "index.html",
          "target": "~/project",
          "chmod": "ugo+rwx"
        },
        {
          "file": "script.js",
          "target": "~/project",
          "chmod": "ugo+rwx"
        }
      ]
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["Lotus-7"],
  "license": {
    "name": "CC-BY-4.0",
    "url": "https://github.com/30-seconds/30-seconds-of-code/blob/master/LICENSE",
    "repo": "https://github.com/30-seconds/30-seconds-of-code"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "React useSessionStorage 钩子",
      "description": "在本实验中，我们将学习如何在 React 中使用 useSessionStorage 钩子将有状态的值持久化到 sessionStorage。我们将学习如何延迟初始化值，如何使用 Storage.getItem() 和 Storage.setItem() 检索和存储值，以及如何使用定义的函数更新状态变量。在本实验结束时，你将更好地理解如何在 React 应用程序中使用 sessionStorage 来存储和检索数据。",
      "meta": {
        "title": "React useSessionStorage 钩子：在 sessionStorage 中持久化状态",
        "description": "学习如何在 React 中使用 useSessionStorage 钩子在 sessionStorage 中存储和检索数据，包括延迟初始化和更新函数。",
        "keywords": "sessionstorage, react, 状态管理, 网页开发, usesessionstorage"
      },
      "details": {
        "steps": [
          {
            "title": "React useSessionStorage 钩子",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "验证 Web 服务的运行状态",
                "file": "verify1-1.sh",
                "hint": "请点击右下角的“Go Live”以在端口 8080 上运行 Web 服务。然后，你可以刷新“Web 8080”标签页来预览网页。"
              },
              {
                "name": "验证 script.js 修改状态",
                "file": "verify1-2.sh",
                "hint": "请按照步骤完成实验。"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    }
  ]
}
