{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Button with Ripple Effect",
  "description": "In this lab, we will learn how to create a button with a ripple effect animation using React. The purpose of this lab is to help you understand how to use React hooks, such as useState() and useEffect(), to manage the state of the button and trigger the animation. By the end of this lab, you will be able to create interactive and visually appealing buttons for your React applications.",
  "meta": {
    "title": "Create Interactive Buttons with Ripple Effect in React",
    "description": "Learn how to build a button with a rippling animation effect using React hooks and CSS.",
    "keywords": "button, interactive, react, ripple effect, animation"
  },
  "difficulty": "Beginner",
  "time": 5,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Button with Ripple Effect",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify the running status of the web service",
            "file": "verify1-1.sh",
            "hint": "Please click on 'Go Live' in the bottom right corner to run the web service on port 8080. Then, you can refresh the **Web 8080** Tab to preview the web page.",
            "timeout": 0,
            "showstderr": true
          },
          {
            "name": "Verify the status of script.js modification",
            "file": "verify1-2.sh",
            "hint": "Please follow the steps to complete the lab.",
            "timeout": 0,
            "showstderr": true
          },
          {
            "name": "Verify the status of style.css modification",
            "file": "verify1-3.sh",
            "hint": "Please follow the steps to complete the lab.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "react/css_in_react",
          "react/event_handling",
          "react/hooks",
          "react/jsx",
          "react/use_state_reducer"
        ]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    },
    "assets": {
      "host01": [
        {
          "file": "index.html",
          "target": "~/project",
          "chmod": "ugo+rwx"
        },
        {
          "file": "script.js",
          "target": "~/project",
          "chmod": "ugo+rwx"
        },
        {
          "file": "style.css",
          "target": "~/project",
          "chmod": "ugo+rwx"
        }
      ]
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["Lotus-7"],
  "license": {
    "name": "CC-BY-4.0",
    "url": "https://github.com/30-seconds/30-seconds-of-code/blob/master/LICENSE",
    "repo": "https://github.com/30-seconds/30-seconds-of-code"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "带有涟漪效果的按钮",
      "description": "在本实验中，我们将学习如何使用 React 创建一个带有涟漪效果动画的按钮。本实验的目的是帮助你理解如何使用 React 钩子，如 useState() 和 useEffect()，来管理按钮的状态并触发动画。在本实验结束时，你将能够为你的 React 应用创建交互式且视觉上吸引人的按钮。",
      "meta": {
        "title": "在 React 中创建带有涟漪效果的交互式按钮",
        "description": "学习如何使用 React 钩子和 CSS 构建具有涟漪动画效果的按钮。",
        "keywords": "按钮，交互式，React, 涟漪效果，动画"
      },
      "details": {
        "steps": [
          {
            "title": "带有涟漪效果的按钮",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "验证网络服务的运行状态",
                "file": "verify1-1.sh",
                "hint": "请点击右下角的“上线”以在端口 8080 上运行网络服务。然后，你可以刷新“Web 8080”标签页来预览网页。"
              },
              {
                "name": "验证 script.js 修改状态",
                "file": "verify1-2.sh",
                "hint": "请按照步骤完成实验。"
              },
              {
                "name": "验证 style.css 修改状态",
                "file": "verify1-3.sh",
                "hint": "请按照步骤完成实验。"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Botón con Efecto de Onda (Ripple Effect)",
      "description": "En este laboratorio, aprenderemos cómo crear un botón con una animación de efecto de onda (ripple effect) utilizando React. El propósito de este laboratorio es ayudarte a entender cómo usar los hooks de React, como useState() y useEffect(), para gestionar el estado del botón y activar la animación. Al final de este laboratorio, podrás crear botones interactivos y visualmente atractivos para tus aplicaciones de React.",
      "meta": {
        "title": "Crea Botones Interactivos con Efecto de Onda en React",
        "description": "Aprende cómo construir un botón con un efecto de animación de onda utilizando hooks de React y CSS.",
        "keywords": "botón, interactivo, react, efecto de onda, animación"
      },
      "details": {
        "steps": [
          {
            "title": "Botón con Efecto de Onda (Ripple Effect)",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Verificar el estado de ejecución del servicio web",
                "file": "verify1-1.sh",
                "hint": "Por favor, haz clic en 'Go Live' en la esquina inferior derecha para ejecutar el servicio web en el puerto 8080. Luego, puedes actualizar la pestaña **Web 8080** para ver una vista previa de la página web."
              },
              {
                "name": "Verificar el estado de la modificación de script.js",
                "file": "verify1-2.sh",
                "hint": "Por favor, sigue los pasos para completar el laboratorio."
              },
              {
                "name": "Verificar el estado de la modificación de style.css",
                "file": "verify1-3.sh",
                "hint": "Por favor, sigue los pasos para completar el laboratorio."
              }
            ]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Bouton avec effet d'onde (Ripple Effect)",
      "description": "Dans ce laboratoire, nous allons apprendre à créer un bouton avec une animation d'effet d'onde en utilisant React. Le but de ce laboratoire est de vous aider à comprendre comment utiliser les hooks React, tels que useState() et useEffect(), pour gérer l'état du bouton et déclencher l'animation. À la fin de ce laboratoire, vous serez en mesure de créer des boutons interactifs et esthétiquement agréables pour vos applications React.",
      "meta": {
        "title": "Créer des boutons interactifs avec effet d'onde en React",
        "description": "Apprenez à construire un bouton avec un effet d'animation d'onde en utilisant les hooks React et le CSS.",
        "keywords": "bouton, interactif, react, effet d'onde, animation"
      },
      "details": {
        "steps": [
          {
            "title": "Bouton avec effet d'onde (Ripple Effect)",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Vérifier le statut d'exécution du service web",
                "file": "verify1-1.sh",
                "hint": "Veuillez cliquer sur 'Go Live' dans le coin inférieur droit pour exécuter le service web sur le port 8080. Ensuite, vous pouvez actualiser l'onglet **Web 8080** pour prévisualiser la page web."
              },
              {
                "name": "Vérifier le statut de modification de script.js",
                "file": "verify1-2.sh",
                "hint": "Veuillez suivre les étapes pour terminer le laboratoire."
              },
              {
                "name": "Vérifier le statut de modification de style.css",
                "file": "verify1-3.sh",
                "hint": "Veuillez suivre les étapes pour terminer le laboratoire."
              }
            ]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Button mit Welleneffekt",
      "description": "In diesem Lab werden wir lernen, wie man mit React einen Button mit einer Welleneffekt-Animation erstellt. Das Ziel dieses Labs ist es, Ihnen zu helfen, zu verstehen, wie man React-Hooks wie useState() und useEffect() verwendet, um den Zustand des Buttons zu verwalten und die Animation auszulösen. Am Ende dieses Labs können Sie interaktive und optisch ansprechende Buttons für Ihre React-Anwendungen erstellen.",
      "meta": {
        "title": "Interaktive Buttons mit Welleneffekt in React erstellen",
        "description": "Lernen Sie, wie Sie mit React-Hooks und CSS einen Button mit einem Wellen-Animations-Effekt erstellen.",
        "keywords": "Button, interaktiv, React, Welleneffekt, Animation"
      },
      "details": {
        "steps": [
          {
            "title": "Button mit Welleneffekt",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Überprüfen Sie den Laufstatus des Web-Services",
                "file": "verify1-1.sh",
                "hint": "Klicken Sie bitte auf 'Go Live' in der unteren rechten Ecke, um den Web-Service auf Port 8080 auszuführen. Anschließend können Sie die Registerkarte **Web 8080** aktualisieren, um die Webseite anzusehen."
              },
              {
                "name": "Überprüfen Sie den Status der Änderungen an script.js",
                "file": "verify1-2.sh",
                "hint": "Bitte befolgen Sie die Schritte, um das Lab abzuschließen."
              },
              {
                "name": "Überprüfen Sie den Status der Änderungen an style.css",
                "file": "verify1-3.sh",
                "hint": "Bitte befolgen Sie die Schritte, um das Lab abzuschließen."
              }
            ]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "波紋エフェクト付きボタン",
      "description": "この実験では、React を使用して波紋エフェクトのアニメーション付きのボタンを作成する方法を学びます。この実験の目的は、useState() や useEffect() などの React フックを使用してボタンの状態を管理し、アニメーションをトリガーする方法を理解するのに役立つことです。この実験の最後までに、React アプリケーション用のインタラクティブで視覚的に魅力的なボタンを作成できるようになります。",
      "meta": {
        "title": "React で波紋エフェクト付きのインタラクティブなボタンを作成する",
        "description": "React フックと CSS を使用して、波紋アニメーションエフェクト付きのボタンを構築する方法を学びましょう。",
        "keywords": "ボタン，インタラクティブ，React, 波紋エフェクト，アニメーション"
      },
      "details": {
        "steps": [
          {
            "title": "波紋エフェクト付きボタン",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "Web サービスの実行状態を確認する",
                "file": "verify1-1.sh",
                "hint": "右下隅にある「Go Live」をクリックして、ポート 8080 で Web サービスを実行してください。その後、**Web 8080**タブを更新すると、Web ページをプレビューできます。"
              },
              {
                "name": "script.js の変更状態を確認する",
                "file": "verify1-2.sh",
                "hint": "手順に従って実験を完了してください。"
              },
              {
                "name": "style.css の変更状態を確認する",
                "file": "verify1-3.sh",
                "hint": "手順に従って実験を完了してください。"
              }
            ]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Кнопка с эффектом волны (Ripple Effect)",
      "description": "В этом практическом занятии (лабораторной работе) мы научимся создавать кнопку с анимацией эффекта волны (ripple effect) с использованием React. Цель этого практического занятия - помочь вам понять, как использовать хуки React, такие как useState() и useEffect(), для управления состоянием кнопки и запуска анимации. К концу этого практического занятия вы сможете создавать интерактивные и визуально привлекательные кнопки для своих React-приложений.",
      "meta": {
        "title": "Создайте интерактивные кнопки с эффектом волны в React",
        "description": "Узнайте, как создать кнопку с эффектом волновой анимации с использованием хуков React и CSS.",
        "keywords": "кнопка, интерактивная, React, эффект волны (ripple effect), анимация"
      },
      "details": {
        "steps": [
          {
            "title": "Кнопка с эффектом волны (Ripple Effect)",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "Проверить статус запуска веб-сервиса",
                "file": "verify1-1.sh",
                "hint": "Нажмите на кнопку 'Go Live' в правом нижнем углу, чтобы запустить веб-сервис на порту 8080. Затем вы можете обновить вкладку **Web 8080**, чтобы предварительно просмотреть веб-страницу."
              },
              {
                "name": "Проверить статус изменения файла script.js",
                "file": "verify1-2.sh",
                "hint": "Пожалуйста, следуйте инструкциям, чтобы завершить практическое занятие."
              },
              {
                "name": "Проверить статус изменения файла style.css",
                "file": "verify1-3.sh",
                "hint": "Пожалуйста, следуйте инструкциям, чтобы завершить практическое занятие."
              }
            ]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    },
    {
      "lang": "ko",
      "title": "리플 효과 버튼",
      "description": "이 랩에서는 React 를 사용하여 리플 효과 애니메이션이 있는 버튼을 만드는 방법을 배웁니다. 이 랩의 목적은 useState() 및 useEffect() 와 같은 React 훅을 사용하여 버튼의 상태를 관리하고 애니메이션을 트리거하는 방법을 이해하도록 돕는 것입니다. 이 랩을 마치면 React 애플리케이션을 위한 대화형 및 시각적으로 매력적인 버튼을 만들 수 있습니다.",
      "meta": {
        "title": "React 에서 리플 효과로 대화형 버튼 만들기",
        "description": "React 훅과 CSS 를 사용하여 리플 애니메이션 효과가 있는 버튼을 만드는 방법을 알아보세요.",
        "keywords": "버튼, 대화형, react, 리플 효과, 애니메이션"
      },
      "details": {
        "steps": [
          {
            "title": "리플 효과 버튼",
            "text": "ko/step1.md",
            "verify": [
              {
                "name": "웹 서비스 실행 상태 확인",
                "file": "verify1-1.sh",
                "hint": "오른쪽 하단의 'Go Live'를 클릭하여 웹 서비스를 포트 8080 에서 실행하십시오. 그런 다음 **Web 8080** 탭을 새로 고쳐 웹 페이지를 미리 볼 수 있습니다."
              },
              {
                "name": "script.js 수정 상태 확인",
                "file": "verify1-2.sh",
                "hint": "랩을 완료하려면 단계를 따르십시오."
              },
              {
                "name": "style.css 수정 상태 확인",
                "file": "verify1-3.sh",
                "hint": "랩을 완료하려면 단계를 따르십시오."
              }
            ]
          }
        ],
        "intro": {
          "text": "ko/intro.md",
          "title": "소개"
        },
        "finish": {
          "text": "ko/finish.md",
          "title": "요약"
        }
      }
    },
    {
      "lang": "pt",
      "title": "Botão com Efeito Ripple",
      "description": "Neste laboratório, aprenderemos como criar um botão com uma animação de efeito ripple usando React. O objetivo deste laboratório é ajudá-lo a entender como usar os hooks do React, como useState() e useEffect(), para gerenciar o estado do botão e acionar a animação. Ao final deste laboratório, você será capaz de criar botões interativos e visualmente atraentes para suas aplicações React.",
      "meta": {
        "title": "Crie Botões Interativos com Efeito Ripple em React",
        "description": "Aprenda a construir um botão com um efeito de animação ripple (ondulação) usando hooks do React e CSS.",
        "keywords": "botão, interativo, react, efeito ripple, animação, botão com efeito de ondulação, React hooks"
      },
      "details": {
        "steps": [
          {
            "title": "Botão com Efeito Ripple",
            "text": "pt/step1.md",
            "verify": [
              {
                "name": "Verifique o status de execução do serviço web",
                "file": "verify1-1.sh",
                "hint": "Por favor, clique em 'Go Live' no canto inferior direito para executar o serviço web na porta 8080. Em seguida, você pode atualizar a aba **Web 8080** para visualizar a página web."
              },
              {
                "name": "Verifique o status da modificação de script.js",
                "file": "verify1-2.sh",
                "hint": "Por favor, siga os passos para completar o laboratório."
              },
              {
                "name": "Verifique o status da modificação de style.css",
                "file": "verify1-3.sh",
                "hint": "Por favor, siga os passos para completar o laboratório."
              }
            ]
          }
        ],
        "intro": {
          "text": "pt/intro.md",
          "title": "Introdução"
        },
        "finish": {
          "text": "pt/finish.md",
          "title": "Resumo"
        }
      }
    }
  ]
}
