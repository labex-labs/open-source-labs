{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "React useScript Hook",
  "description": "In this lab, we will learn how to use the useScript hook in React to dynamically load an external script. This hook can be used to efficiently handle the loading and unloading of scripts, and it can be especially useful when working with third-party libraries or APIs. By the end of this lab, you will be able to use the useScript hook to load external scripts in your React applications.",
  "meta": {
    "title": "Mastering the React useScript Hook",
    "description": "Learn how to use the React useScript hook to dynamically load external scripts in your web applications.",
    "keywords": "usescript, dynamic script loading, react, web development, hooks"
  },
  "difficulty": "Beginner",
  "time": 10,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "React useScript Hook",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify the running status of the web service",
            "file": "verify1-1.sh",
            "hint": "Please click on 'Go Live' in the bottom right corner to run the web service on port 8080. Then, you can refresh the **Web 8080** Tab to preview the web page.",
            "timeout": 0,
            "showstderr": true
          },
          {
            "name": "Verify the status of script.js modification",
            "file": "verify1-2.sh",
            "hint": "Please follow the steps to complete the lab.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": ["react/hooks", "react/jsx", "react/use_state_reducer"]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    },
    "assets": {
      "host01": [
        {
          "file": "index.html",
          "target": "~/project",
          "chmod": "ugo+rwx"
        },
        {
          "file": "script.js",
          "target": "~/project",
          "chmod": "ugo+rwx"
        }
      ]
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["Lotus-7"],
  "license": {
    "name": "CC-BY-4.0",
    "url": "https://github.com/30-seconds/30-seconds-of-code/blob/master/LICENSE",
    "repo": "https://github.com/30-seconds/30-seconds-of-code"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "React useScript 钩子",
      "description": "在本实验中，我们将学习如何在 React 中使用 useScript 钩子来动态加载外部脚本。这个钩子可用于高效地处理脚本的加载和卸载，在使用第三方库或 API 时特别有用。完成本实验后，你将能够在 React 应用程序中使用 useScript 钩子来加载外部脚本。",
      "meta": {
        "title": "掌握 React useScript 钩子",
        "description": "学习如何在你的 Web 应用程序中使用 React useScript 钩子来动态加载外部脚本。",
        "keywords": "usescript, 动态脚本加载，React, 网页开发，钩子"
      },
      "details": {
        "steps": [
          {
            "title": "React useScript 钩子",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "验证 Web 服务的运行状态",
                "file": "verify1-1.sh",
                "hint": "请点击右下角的“Go Live”以在端口 8080 上运行 Web 服务。然后，你可以刷新“Web 8080”标签页来预览网页。"
              },
              {
                "name": "验证 script.js 修改的状态",
                "file": "verify1-2.sh",
                "hint": "请按照步骤完成实验。"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Hook useScript de React",
      "description": "En este laboratorio, aprenderemos a usar el hook useScript en React para cargar dinámicamente un script externo. Este hook se puede utilizar para manejar eficientemente la carga y descarga de scripts, y puede ser especialmente útil cuando se trabaja con bibliotecas o APIs de terceros. Al final de este laboratorio, serás capaz de usar el hook useScript para cargar scripts externos en tus aplicaciones React.",
      "meta": {
        "title": "Dominando el hook useScript de React",
        "description": "Aprende a usar el hook useScript de React para cargar dinámicamente scripts externos en tus aplicaciones web.",
        "keywords": "usescript, carga dinámica de scripts, react, desarrollo web, hooks"
      },
      "details": {
        "steps": [
          {
            "title": "Hook useScript de React",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Verificar el estado de ejecución del servicio web",
                "file": "verify1-1.sh",
                "hint": "Haga clic en 'Go Live' en la esquina inferior derecha para ejecutar el servicio web en el puerto 8080. Luego, puede actualizar la pestaña **Web 8080** para previsualizar la página web."
              },
              {
                "name": "Verificar el estado de la modificación de script.js",
                "file": "verify1-2.sh",
                "hint": "Siga los pasos para completar el laboratorio."
              }
            ]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Hook useScript de React",
      "description": "Dans ce laboratoire, nous allons apprendre à utiliser le hook useScript dans React pour charger dynamiquement un script externe. Ce hook peut être utilisé pour gérer efficacement le chargement et le déchargement des scripts, et il peut s'avérer particulièrement utile lorsqu'il s'agit de bibliothèques tierces ou d'APIs. À la fin de ce laboratoire, vous serez capable d'utiliser le hook useScript pour charger des scripts externes dans vos applications React.",
      "meta": {
        "title": "Maîtriser le hook useScript de React",
        "description": "Apprenez à utiliser le hook useScript de React pour charger dynamiquement des scripts externes dans vos applications web.",
        "keywords": "usescript, chargement dynamique de script, react, développement web, hooks"
      },
      "details": {
        "steps": [
          {
            "title": "Hook useScript de React",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Vérifiez le statut d'exécution du service web",
                "file": "verify1-1.sh",
                "hint": "Veuillez cliquer sur 'Go Live' dans le coin inférieur droit pour exécuter le service web sur le port 8080. Ensuite, vous pouvez actualiser l'onglet **Web 8080** pour prévisualiser la page web."
              },
              {
                "name": "Vérifiez le statut de la modification de script.js",
                "file": "verify1-2.sh",
                "hint": "Veuillez suivre les étapes pour terminer le laboratoire."
              }
            ]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "React useScript-Hook",
      "description": "In diesem Lab werden wir lernen, wie man den useScript-Hook in React verwendet, um ein externes Skript dynamisch zu laden. Dieser Hook kann verwendet werden, um das Laden und Entladen von Skripten effizient zu verwalten und ist besonders nützlich, wenn es um Drittanbieterbibliotheken oder APIs geht. Am Ende dieses Labs werden Sie in der Lage sein, den useScript-Hook zum Laden externer Skripts in Ihren React-Anwendungen zu verwenden.",
      "meta": {
        "title": "Meisterhaftigkeit mit dem React useScript-Hook",
        "description": "Lernen Sie, wie man den React useScript-Hook verwendet, um externe Skripte in Ihren Webanwendungen dynamisch zu laden.",
        "keywords": "usescript, dynamisches Skriptladen, react, Webanwendung, Hooks"
      },
      "details": {
        "steps": [
          {
            "title": "React useScript-Hook",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Überprüfen des Laufzustands des Webdiensts",
                "file": "verify1-1.sh",
                "hint": "Bitte klicken Sie in der unteren rechten Ecke auf 'Go Live', um den Webdienst auf Port 8080 auszuführen. Anschließend können Sie die Registerkarte **Web 8080** aktualisieren, um die Webseite anzuschauen."
              },
              {
                "name": "Überprüfen des Status der Änderungen an script.js",
                "file": "verify1-2.sh",
                "hint": "Bitte folgen Sie den Schritten, um das Lab abzuschließen."
              }
            ]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "React useScript フック",
      "description": "この実験では、React で useScript フックを使用して外部スクリプトを動的に読み込む方法を学びます。このフックは、スクリプトの読み込みとアンロードを効率的に処理するために使用でき、第三者のライブラリや API を使用する際に特に役立ちます。この実験が終了すると、React アプリケーションで useScript フックを使用して外部スクリプトを読み込めるようになります。",
      "meta": {
        "title": "React useScript フックをマスターする",
        "description": "Web アプリケーションで React useScript フックを使用して外部スクリプトを動的に読み込む方法を学びましょう。",
        "keywords": "usescript, 動的なスクリプト読み込み，react, Web 開発，フック"
      },
      "details": {
        "steps": [
          {
            "title": "React useScript フック",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "Web サービスの実行状態を確認する",
                "file": "verify1-1.sh",
                "hint": "右下隅の「Go Live」をクリックして、ポート 8080 で Web サービスを実行してください。その後、**Web 8080** タブを更新して、Web ページをプレビューできます。"
              },
              {
                "name": "script.js の変更状態を確認する",
                "file": "verify1-2.sh",
                "hint": "実験を完了する手順に従ってください。"
              }
            ]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "React useScript Хук",
      "description": "В этом практическом занятии мы научимся использовать хук useScript в React для динамической загрузки внешнего скрипта. Этот хук позволяет эффективно обрабатывать загрузку и выгрузку скриптов и особенно полезен при работе с библиотеками или API третьих лиц. В конце практического занятия вы сможете использовать хук useScript для загрузки внешних скриптов в своих React-приложениях.",
      "meta": {
        "title": "Мастерство в React useScript Хук",
        "description": "Изучите, как использовать хук React useScript для динамической загрузки внешних скриптов в своих веб-приложениях.",
        "keywords": "usescript, динамическая загрузка скрипта, react, веб-разработка, хуки"
      },
      "details": {
        "steps": [
          {
            "title": "React useScript Хук",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "Проверить статус работы веб-сервиса",
                "file": "verify1-1.sh",
                "hint": "Пожалуйста, нажмите кнопку 'Go Live' в нижнем правом углу, чтобы запустить веб-сервис на порту 8080. Затем вы можете обновить вкладку **Web 8080**, чтобы просмотреть веб-страницу."
              },
              {
                "name": "Проверить статус изменения script.js",
                "file": "verify1-2.sh",
                "hint": "Пожалуйста, следуйте шагам, чтобы завершить практическое занятие."
              }
            ]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    }
  ]
}
