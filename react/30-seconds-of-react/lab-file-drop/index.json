{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "File Drag and Drop Area",
  "description": "In this lab, we will learn how to create a file drag and drop component in React using the useState and useEffect hooks. This component allows users to easily drag and drop files onto a designated area and triggers a callback function with the dropped file as an argument. By the end of this lab, you will have a better understanding of how to handle drag and drop functionality in React.",
  "meta": {
    "title": "Mastering File Drag and Drop in React",
    "description": "Learn how to create a file drag and drop component in React using hooks and handle file uploads seamlessly.",
    "keywords": "react, file drag and drop, usestate, hooks, file upload"
  },
  "difficulty": "Beginner",
  "time": 5,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "File Drag and Drop Area",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify the running status of the web service",
            "file": "verify1-1.sh",
            "hint": "Please click on 'Go Live' in the bottom right corner to run the web service on port 8080. Then, you can refresh the **Web 8080** Tab to preview the web page.",
            "timeout": 0,
            "showstderr": true
          },
          {
            "name": "Verify the status of script.js modification",
            "file": "verify1-2.sh",
            "hint": "Please follow the steps to complete the lab.",
            "timeout": 0,
            "showstderr": true
          },
          {
            "name": "Verify the status of style.css modification",
            "file": "verify1-3.sh",
            "hint": "Please follow the steps to complete the lab.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "react/conditional_render",
          "react/hooks",
          "react/jsx",
          "react/use_state_reducer"
        ]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    },
    "assets": {
      "host01": [
        {
          "file": "index.html",
          "target": "~/project",
          "chmod": "ugo+rwx"
        },
        {
          "file": "script.js",
          "target": "~/project",
          "chmod": "ugo+rwx"
        },
        {
          "file": "style.css",
          "target": "~/project",
          "chmod": "ugo+rwx"
        }
      ]
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["Lotus-7"],
  "license": {
    "name": "CC-BY-4.0",
    "url": "https://github.com/30-seconds/30-seconds-of-code/blob/master/LICENSE",
    "repo": "https://github.com/30-seconds/30-seconds-of-code"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "文件拖放区域",
      "description": "在本实验中，我们将学习如何使用 useState 和 useEffect 钩子在 React 中创建一个文件拖放组件。该组件允许用户轻松地将文件拖放到指定区域，并触发一个回调函数，将拖放的文件作为参数传递。完成本实验后，你将更好地理解如何在 React 中处理拖放功能。",
      "meta": {
        "title": "掌握 React 中的文件拖放",
        "description": "学习如何使用钩子在 React 中创建文件拖放组件并无缝处理文件上传。",
        "keywords": "react, 文件拖放，usestate, 钩子，文件上传"
      },
      "details": {
        "steps": [
          {
            "title": "文件拖放区域",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "验证 Web 服务的运行状态",
                "file": "verify1-1.sh",
                "hint": "请点击右下角的“Go Live”以在端口 8080 上运行 Web 服务。然后，你可以刷新“Web 8080”标签页来预览网页。"
              },
              {
                "name": "验证 script.js 修改状态",
                "file": "verify1-2.sh",
                "hint": "请按照步骤完成实验。"
              },
              {
                "name": "验证 style.css 修改状态",
                "file": "verify1-3.sh",
                "hint": "请按照步骤完成实验。"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Área de arrastrar y soltar de archivos",
      "description": "En este laboratorio, aprenderemos cómo crear un componente de arrastrar y soltar de archivos en React utilizando los hooks useState y useEffect. Este componente permite a los usuarios arrastrar y soltar fácilmente archivos en un área designada y desencadena una función de devolución de llamada con el archivo soltado como argumento. Al final de este laboratorio, tendrás una mejor comprensión de cómo manejar la funcionalidad de arrastrar y soltar en React.",
      "meta": {
        "title": "Dominando el arrastrar y soltar de archivos en React",
        "description": "Aprende cómo crear un componente de arrastrar y soltar de archivos en React utilizando hooks y manejar las subidas de archivos sin problemas.",
        "keywords": "react, arrastrar y soltar de archivos, usestate, hooks, subida de archivos"
      },
      "details": {
        "steps": [
          {
            "title": "Área de arrastrar y soltar de archivos",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Verificar el estado de ejecución del servicio web",
                "file": "verify1-1.sh",
                "hint": "Haga clic en 'Go Live' en la esquina inferior derecha para ejecutar el servicio web en el puerto 8080. Luego, puede actualizar la pestaña **Web 8080** para previsualizar la página web."
              },
              {
                "name": "Verificar el estado de la modificación de script.js",
                "file": "verify1-2.sh",
                "hint": "Siga los pasos para completar el laboratorio."
              },
              {
                "name": "Verificar el estado de la modificación de style.css",
                "file": "verify1-3.sh",
                "hint": "Siga los pasos para completar el laboratorio."
              }
            ]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Zone de glisser-déposer de fichiers",
      "description": "Dans ce laboratoire, nous allons apprendre à créer un composant de glisser-déposer de fichiers en React en utilisant les hooks useState et useEffect. Ce composant permet aux utilisateurs de glisser et déposer facilement des fichiers sur une zone désignée et déclenche une fonction de rappel avec le fichier déposé en argument. À la fin de ce laboratoire, vous aurez une meilleure compréhension de la manière de gérer la fonctionnalité de glisser-déposer en React.",
      "meta": {
        "title": "Maîtriser le glisser-déposer de fichiers en React",
        "description": "Apprenez à créer un composant de glisser-déposer de fichiers en React à l'aide de hooks et à gérer les téléchargements de fichiers de manière transparente.",
        "keywords": "react, glisser-déposer de fichiers, usestate, hooks, téléchargement de fichiers"
      },
      "details": {
        "steps": [
          {
            "title": "Zone de glisser-déposer de fichiers",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Vérifiez le statut d'exécution du service web",
                "file": "verify1-1.sh",
                "hint": "Veuillez cliquer sur 'Go Live' dans le coin inférieur droit pour exécuter le service web sur le port 8080. Ensuite, vous pouvez actualiser l'onglet **Web 8080** pour prévisualiser la page web."
              },
              {
                "name": "Vérifiez le statut de la modification de script.js",
                "file": "verify1-2.sh",
                "hint": "Veuillez suivre les étapes pour terminer le laboratoire."
              },
              {
                "name": "Vérifiez le statut de la modification de style.css",
                "file": "verify1-3.sh",
                "hint": "Veuillez suivre les étapes pour terminer le laboratoire."
              }
            ]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Datei-Ziehen-und-Zwischenlegen-Bereich",
      "description": "In diesem Lab werden wir lernen, wie man in React mithilfe der useState- und useEffect-Hooks eine Datei-Ziehen-und-Zwischenlegen-Komponente erstellt. Diese Komponente ermöglicht es Benutzern, Dateien einfach auf einen bestimmten Bereich zu ziehen und zu legen und löst eine Rückruffunktion mit der abgelegten Datei als Argument aus. Am Ende dieses Labs werden Sie ein besseres Verständnis dafür haben, wie man in React die Ziehen-und-Zwischenlegen-Funktionalität behandelt.",
      "meta": {
        "title": "Meisterhaftes Ziehen und Legen von Dateien in React",
        "description": "Lernen Sie, wie man in React mithilfe von Hooks eine Datei-Ziehen-und-Zwischenlegen-Komponente erstellt und Dateiuploads nahtlos behandelt.",
        "keywords": "react, Datei-Ziehen-und-Zwischenlegen, usestate, hooks, Dateiupload"
      },
      "details": {
        "steps": [
          {
            "title": "Datei-Ziehen-und-Zwischenlegen-Bereich",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Überprüfen des Laufzustands des Webdiensts",
                "file": "verify1-1.sh",
                "hint": "Bitte klicken Sie in der unteren rechten Ecke auf 'Go Live', um den Webdienst auf Port 8080 auszuführen. Anschließend können Sie die Registerkarte **Web 8080** aktualisieren, um die Webseite anzuschauen."
              },
              {
                "name": "Überprüfen des Status der Änderungen in script.js",
                "file": "verify1-2.sh",
                "hint": "Bitte folgen Sie den Schritten, um das Lab abzuschließen."
              },
              {
                "name": "Überprüfen des Status der Änderungen in style.css",
                "file": "verify1-3.sh",
                "hint": "Bitte folgen Sie den Schritten, um das Lab abzuschließen."
              }
            ]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "ファイルのドラッグアンドドロップエリア",
      "description": "この実験では、useState と useEffect フックを使用して React でファイルのドラッグアンドドロップコンポーネントを作成する方法を学びます。このコンポーネントを使うと、ユーザーは指定されたエリアに簡単にファイルをドラッグアンドドロップでき、ドロップされたファイルを引数としてコールバック関数がトリガーされます。この実験が終了するとき、React でドラッグアンドドロップ機能を扱う方法をより深く理解しているでしょう。",
      "meta": {
        "title": "React におけるファイルのドラッグアンドドロップのマスター",
        "description": "フックを使って React でファイルのドラッグアンドドロップコンポーネントを作成し、ファイルアップロードを円滑に処理する方法を学びましょう。",
        "keywords": "react, ファイルのドラッグアンドドロップ，usestate, フック，ファイルアップロード"
      },
      "details": {
        "steps": [
          {
            "title": "ファイルのドラッグアンドドロップエリア",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "ウェブサービスの実行状態を確認する",
                "file": "verify1-1.sh",
                "hint": "右下隅の「Go Live」をクリックして、ポート 8080 でウェブサービスを実行してください。その後、**Web 8080** タブを更新して、ウェブページをプレビューできます。"
              },
              {
                "name": "script.js の変更状態を確認する",
                "file": "verify1-2.sh",
                "hint": "実験を完了するための手順に従ってください。"
              },
              {
                "name": "style.css の変更状態を確認する",
                "file": "verify1-3.sh",
                "hint": "実験を完了するための手順に従ってください。"
              }
            ]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Область для перетаскивания и вставки файлов",
      "description": "В этом практическом занятии мы узнаем, как создать компонент для перетаскивания и вставки файлов в React с использованием хуков useState и useEffect. Этот компонент позволяет пользователям легко перетаскивать и вставлять файлы в заданную область и запускает функцию обратного вызова с переданным в качестве аргумента файлом. В конце этого практического занятия вы будете лучше понимать, как обрабатывать функциональность перетаскивания и вставки в React.",
      "meta": {
        "title": "Мастерство в перетаскивании и вставке файлов в React",
        "description": "Изучите, как создать компонент для перетаскивания и вставки файлов в React с использованием хуков и беспрепятственно обрабатывать загрузку файлов.",
        "keywords": "react, перетаскивание и вставка файлов, usestate, хуки, загрузка файлов"
      },
      "details": {
        "steps": [
          {
            "title": "Область для перетаскивания и вставки файлов",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "Проверить статус работы веб-сервиса",
                "file": "verify1-1.sh",
                "hint": "Пожалуйста, нажмите на кнопку 'Go Live' в нижнем правом углу, чтобы запустить веб-сервис на порту 8080. Затем вы можете обновить вкладку **Web 8080**, чтобы просмотреть веб-страницу."
              },
              {
                "name": "Проверить статус изменения script.js",
                "file": "verify1-2.sh",
                "hint": "Пожалуйста, следуйте шагам, чтобы завершить практическое занятие."
              },
              {
                "name": "Проверить статус изменения style.css",
                "file": "verify1-3.sh",
                "hint": "Пожалуйста, следуйте шагам, чтобы завершить практическое занятие."
              }
            ]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    }
  ]
}
