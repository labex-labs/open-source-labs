{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "React useMediaQuery Hook",
  "description": "In this lab, we will explore the use of the useMediaQuery hook in React. This hook allows us to check if the current environment matches a given media query and return the appropriate value. We will learn how to use this hook to create responsive components that change their behavior based on the screen size.",
  "meta": {
    "title": "Mastering React's useMediaQuery Hook",
    "description": "Explore the power of React's useMediaQuery hook to build responsive components that adapt to different screen sizes.",
    "keywords": "programming tutorial, responsive design, react, web development, usemediaquery"
  },
  "difficulty": "Beginner",
  "time": 5,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "React useMediaQuery Hook",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify the running status of the web service",
            "file": "verify1-1.sh",
            "hint": "Please click on 'Go Live' in the bottom right corner to run the web service on port 8080. Then, you can refresh the **Web 8080** Tab to preview the web page.",
            "timeout": 0,
            "showstderr": true
          },
          {
            "name": "Verify the status of script.js modification",
            "file": "verify1-2.sh",
            "hint": "Please follow the steps to complete the lab.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": ["react/hooks", "react/jsx", "react/use_state_reducer"]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    },
    "assets": {
      "host01": [
        {
          "file": "index.html",
          "target": "~/project",
          "chmod": "ugo+rwx"
        },
        {
          "file": "script.js",
          "target": "~/project",
          "chmod": "ugo+rwx"
        }
      ]
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["Lotus-7"],
  "license": {
    "name": "CC-BY-4.0",
    "url": "https://github.com/30-seconds/30-seconds-of-code/blob/master/LICENSE",
    "repo": "https://github.com/30-seconds/30-seconds-of-code"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "React useMediaQuery 钩子",
      "description": "在本实验中，我们将探索如何在 React 中使用 useMediaQuery 钩子。这个钩子能让我们检查当前环境是否匹配给定的媒体查询，并返回相应的值。我们将学习如何使用这个钩子来创建响应式组件，使其根据屏幕大小改变行为。",
      "meta": {
        "title": "掌握 React 的 useMediaQuery 钩子",
        "description": "探索 React 的 useMediaQuery 钩子的强大功能，以构建适应不同屏幕大小的响应式组件。",
        "keywords": "编程教程，响应式设计，React, 网页开发，useMediaQuery"
      },
      "details": {
        "steps": [
          {
            "title": "React useMediaQuery 钩子",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "验证 Web 服务的运行状态",
                "file": "verify1-1.sh",
                "hint": "请点击右下角的“Go Live”以在端口 8080 上运行 Web 服务。然后，你可以刷新“Web 8080”标签页来预览网页。"
              },
              {
                "name": "验证 script.js 修改状态",
                "file": "verify1-2.sh",
                "hint": "请按照步骤完成实验。"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "React useMediaQuery Hook",
      "description": "En este laboratorio, exploraremos el uso del hook useMediaQuery en React. Este hook nos permite comprobar si el entorno actual coincide con una consulta de medios dada y devolver el valor adecuado. Aprenderemos cómo usar este hook para crear componentes responsivos que cambien su comportamiento en función del tamaño de la pantalla.",
      "meta": {
        "title": "Dominando el hook useMediaQuery de React",
        "description": "Explora el poder del hook useMediaQuery de React para construir componentes responsivos que se adapten a diferentes tamaños de pantalla.",
        "keywords": "tutorial de programación, diseño responsivo, react, desarrollo web, usemediaquery"
      },
      "details": {
        "steps": [
          {
            "title": "React useMediaQuery Hook",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Verificar el estado de ejecución del servicio web",
                "file": "verify1-1.sh",
                "hint": "Haga clic en 'Go Live' en la esquina inferior derecha para ejecutar el servicio web en el puerto 8080. Luego, puede actualizar la pestaña **Web 8080** para previsualizar la página web."
              },
              {
                "name": "Verificar el estado de la modificación de script.js",
                "file": "verify1-2.sh",
                "hint": "Siga los pasos para completar el laboratorio."
              }
            ]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Hook useMediaQuery de React",
      "description": "Dans ce laboratoire, nous allons explorer l'utilisation du hook useMediaQuery dans React. Ce hook nous permet de vérifier si l'environnement actuel correspond à une requête média donnée et de retourner la valeur appropriée. Nous allons apprendre à utiliser ce hook pour créer des composants réactifs qui changent leur comportement en fonction de la taille de l'écran.",
      "meta": {
        "title": "Maîtriser le hook useMediaQuery de React",
        "description": "Explorez le pouvoir du hook useMediaQuery de React pour construire des composants réactifs qui s'adaptent à différentes tailles d'écran.",
        "keywords": "tutoriel de programmation, conception responsive, react, développement web, usemediaquery"
      },
      "details": {
        "steps": [
          {
            "title": "Hook useMediaQuery de React",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Vérifiez l'état d'exécution du service web",
                "file": "verify1-1.sh",
                "hint": "Veuillez cliquer sur 'Go Live' dans le coin inférieur droit pour exécuter le service web sur le port 8080. Ensuite, vous pouvez actualiser l'onglet **Web 8080** pour prévisualiser la page web."
              },
              {
                "name": "Vérifiez l'état de la modification de script.js",
                "file": "verify1-2.sh",
                "hint": "Veuillez suivre les étapes pour terminer le laboratoire."
              }
            ]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "React useMediaQuery-Hook",
      "description": "In diesem Lab werden wir die Verwendung des useMediaQuery-Hooks in React erkunden. Dieser Hook ermöglicht es uns, zu überprüfen, ob die aktuelle Umgebung einer angegebenen Medienabfrage entspricht und den passenden Wert zurückzugeben. Wir werden lernen, wie wir diesen Hook verwenden, um responsive Komponenten zu erstellen, die ihr Verhalten basierend auf der Bildschirmgröße ändern.",
      "meta": {
        "title": "Meisterhaftes Verwenden des React useMediaQuery-Hooks",
        "description": "Erkunden Sie die Macht des React useMediaQuery-Hooks, um responsive Komponenten zu erstellen, die sich an verschiedene Bildschirmgrößen anpassen.",
        "keywords": "Programmier-Tutorial, responsive Design, React, Webentwicklung, useMediaQuery"
      },
      "details": {
        "steps": [
          {
            "title": "React useMediaQuery-Hook",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Überprüfen des Laufzustands des Webdiensts",
                "file": "verify1-1.sh",
                "hint": "Bitte klicken Sie in der unteren rechten Ecke auf 'Go Live', um den Webdienst auf Port 8080 auszuführen. Anschließend können Sie die Registerkarte **Web 8080** aktualisieren, um die Webseite anzuschauen."
              },
              {
                "name": "Überprüfen des Status der Änderungen in script.js",
                "file": "verify1-2.sh",
                "hint": "Bitte folgen Sie den Schritten, um das Lab abzuschließen."
              }
            ]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "React の useMediaQuery フック",
      "description": "この実験では、React における useMediaQuery フックの使用方法を探ります。このフックを使うと、現在の環境が指定されたメディアクエリに一致するかどうかを確認し、適切な値を返すことができます。画面サイズに応じて動作を変える応答型コンポーネントを作成するために、このフックをどのように使うか学びます。",
      "meta": {
        "title": "React の useMediaQuery フックをマスターする",
        "description": "React の useMediaQuery フックの力を活用して、さまざまな画面サイズに適応する応答型コンポーネントを構築しましょう。",
        "keywords": "プログラミングチュートリアル，応答型デザイン，React, ウェブ開発，usemediaquery"
      },
      "details": {
        "steps": [
          {
            "title": "React の useMediaQuery フック",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "ウェブサービスの実行状態を確認する",
                "file": "verify1-1.sh",
                "hint": "右下隅の「Go Live」をクリックして、ポート 8080 でウェブサービスを実行してください。その後、**Web 8080** タブを更新してウェブページをプレビューできます。"
              },
              {
                "name": "script.js の変更状態を確認する",
                "file": "verify1-2.sh",
                "hint": "実験を完了するための手順に従ってください。"
              }
            ]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "React useMediaQuery Хук",
      "description": "В этом лабораторном задании мы будем изучать использование хука useMediaQuery в React. Этот хук позволяет проверить, соответствует ли текущая среда заданному медиа-запросу, и возвращать соответствующее значение. Мы узнаем, как использовать этот хук для создания отзывчивых компонентов, которые изменяют свое поведение в зависимости от размера экрана.",
      "meta": {
        "title": "Осваиваем React's useMediaQuery Хук",
        "description": "Исследуйте мощь React's useMediaQuery хука для создания отзывчивых компонентов, которые адаптируются к разным размерам экранов.",
        "keywords": "программирование руководство, отзывчивый дизайн, react, веб-разработка, usemediaquery"
      },
      "details": {
        "steps": [
          {
            "title": "React useMediaQuery Хук",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "Проверить статус работы веб-сервиса",
                "file": "verify1-1.sh",
                "hint": "Пожалуйста, нажмите на кнопку 'Go Live' в нижнем правом углу, чтобы запустить веб-сервис на порту 8080. Затем вы можете обновить вкладку **Web 8080**, чтобы просмотреть веб-страницу."
              },
              {
                "name": "Проверить статус изменения script.js",
                "file": "verify1-2.sh",
                "hint": "Пожалуйста, следуйте шагам для завершения лабораторной работы."
              }
            ]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    },
    {
      "lang": "ko",
      "title": "React useMediaQuery 훅",
      "description": "이 랩에서는 React 에서 useMediaQuery 훅의 사용법을 살펴봅니다. 이 훅을 사용하면 현재 환경이 주어진 미디어 쿼리와 일치하는지 확인하고 적절한 값을 반환할 수 있습니다. 이 훅을 사용하여 화면 크기에 따라 동작을 변경하는 반응형 컴포넌트를 만드는 방법을 배웁니다.",
      "meta": {
        "title": "React useMediaQuery 훅 마스터하기 - 반응형 웹 개발",
        "description": "다양한 화면 크기에 적응하는 반응형 컴포넌트를 구축하기 위해 React 의 useMediaQuery 훅의 강력한 기능을 탐구하세요.",
        "keywords": "프로그래밍 튜토리얼, 반응형 디자인, 리액트, 웹 개발, useMediaQuery, 미디어 쿼리"
      },
      "details": {
        "steps": [
          {
            "title": "React useMediaQuery 훅",
            "text": "ko/step1.md",
            "verify": [
              {
                "name": "웹 서비스 실행 상태 확인",
                "file": "verify1-1.sh",
                "hint": "오른쪽 하단의 'Go Live'를 클릭하여 웹 서비스를 포트 8080 에서 실행하십시오. 그런 다음 **Web 8080** 탭을 새로 고쳐 웹 페이지를 미리 볼 수 있습니다."
              },
              {
                "name": "script.js 수정 상태 확인",
                "file": "verify1-2.sh",
                "hint": "랩을 완료하려면 단계를 따르십시오."
              }
            ]
          }
        ],
        "intro": {
          "text": "ko/intro.md",
          "title": "소개"
        },
        "finish": {
          "text": "ko/finish.md",
          "title": "요약"
        }
      }
    },
    {
      "lang": "pt",
      "title": "React useMediaQuery Hook",
      "description": "Neste laboratório, exploraremos o uso do hook useMediaQuery no React. Este hook nos permite verificar se o ambiente atual corresponde a uma determinada media query (consulta de mídia) e retornar o valor apropriado. Aprenderemos como usar este hook para criar componentes responsivos que alteram seu comportamento com base no tamanho da tela.",
      "meta": {
        "title": "Dominando o useMediaQuery Hook do React",
        "description": "Explore o poder do hook useMediaQuery do React para construir componentes responsivos que se adaptam a diferentes tamanhos de tela.",
        "keywords": "tutorial de programação, design responsivo, react, desenvolvimento web, usemediaquery, componentes responsivos react"
      },
      "details": {
        "steps": [
          {
            "title": "React useMediaQuery Hook",
            "text": "pt/step1.md",
            "verify": [
              {
                "name": "Verifique o status de execução do serviço web",
                "file": "verify1-1.sh",
                "hint": "Por favor, clique em 'Go Live' no canto inferior direito para executar o serviço web na porta 8080. Em seguida, você pode atualizar a aba **Web 8080** para visualizar a página web."
              },
              {
                "name": "Verifique o status da modificação do script.js",
                "file": "verify1-2.sh",
                "hint": "Por favor, siga os passos para completar o laboratório."
              }
            ]
          }
        ],
        "intro": {
          "text": "pt/intro.md",
          "title": "Introdução"
        },
        "finish": {
          "text": "pt/finish.md",
          "title": "Resumo"
        }
      }
    }
  ]
}
