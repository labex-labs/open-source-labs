{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Creating Reusable Modal Component in React",
  "description": "In this lab, we will explore how to create a Modal component in React that can be controlled through events. The Modal component will have a close button, and the keyboard event listener will be used to close the modal when the Esc key is pressed. By the end of this lab, you will have a good understanding of how to create a reusable Modal component that can be easily integrated into any React project.",
  "meta": {
    "title": "Create Reusable React Modal | Keyboard Event Handling",
    "description": "Learn how to create a reusable React Modal component with keyboard event handling, including a close button and Esc key functionality.",
    "keywords": "React, Modal, Keyboard Event, Reusable Component, Web Development"
  },
  "difficulty": "Beginner",
  "time": 10,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Modal Dialog",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify the running status of the web service",
            "file": "verify1-1.sh",
            "hint": "Please click on 'Go Live' in the bottom right corner to run the web service on port 8080. Then, you can refresh the **Web 8080** Tab to preview the web page.",
            "timeout": 0,
            "showstderr": true
          },
          {
            "name": "Verify the status of script.js modification",
            "file": "verify1-2.sh",
            "hint": "Please follow the steps to complete the lab.",
            "timeout": 0,
            "showstderr": true
          },
          {
            "name": "Verify the status of style.css modification",
            "file": "verify1-3.sh",
            "hint": "Please follow the steps to complete the lab.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [
          "react/event_handling",
          "react/hooks",
          "react/jsx",
          "react/use_state_reducer"
        ]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    },
    "assets": {
      "host01": [
        {
          "file": "index.html",
          "target": "~/project",
          "chmod": "ugo+rwx"
        },
        {
          "file": "script.js",
          "target": "~/project",
          "chmod": "ugo+rwx"
        },
        {
          "file": "style.css",
          "target": "~/project",
          "chmod": "ugo+rwx"
        }
      ]
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["Lotus-7"],
  "license": {
    "name": "CC-BY-4.0",
    "url": "https://github.com/30-seconds/30-seconds-of-code/blob/master/LICENSE",
    "repo": "https://github.com/30-seconds/30-seconds-of-code"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "在 React 中创建可复用的模态框组件",
      "description": "在本实验中，我们将探索如何在 React 中创建一个可以通过事件控制的模态框组件。该模态框组件将有一个关闭按钮，并且将使用键盘事件监听器在按下 Esc 键时关闭模态框。在本实验结束时，你将很好地理解如何创建一个可重复使用的模态框组件，该组件可以轻松集成到任何 React 项目中。",
      "meta": {
        "title": "创建可复用的 React 模态框 | 键盘事件处理",
        "description": "学习如何创建一个带有键盘事件处理功能的可复用 React 模态框组件，包括关闭按钮和 Esc 键功能。",
        "keywords": "React, 模态框，键盘事件，可复用组件，网页开发"
      },
      "details": {
        "steps": [
          {
            "title": "模态对话框",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "验证 Web 服务的运行状态",
                "file": "verify1-1.sh",
                "hint": "请点击右下角的“Go Live”在端口 8080 上运行 Web 服务。然后，你可以刷新**Web 8080**标签页来预览网页。"
              },
              {
                "name": "验证 script.js 修改的状态",
                "file": "verify1-2.sh",
                "hint": "请按照步骤完成实验。"
              },
              {
                "name": "验证 style.css 修改的状态",
                "file": "verify1-3.sh",
                "hint": "请按照步骤完成实验。"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Crear un componente Modal reusable en React",
      "description": "En este laboratorio, exploraremos cómo crear un componente Modal en React que se pueda controlar a través de eventos. El componente Modal tendrá un botón de cierre, y se utilizará un oyente de eventos del teclado para cerrar el modal cuando se presione la tecla Esc. Al final de este laboratorio, tendrás una buena comprensión de cómo crear un componente Modal reusable que se puede integrar fácilmente en cualquier proyecto de React.",
      "meta": {
        "title": "Crea un Modal reusable de React | Manejo de eventos del teclado",
        "description": "Aprende cómo crear un componente Modal reusable de React con manejo de eventos del teclado, incluyendo un botón de cierre y la funcionalidad de la tecla Esc.",
        "keywords": "React, Modal, Evento del teclado, Componente reusable, Desarrollo web"
      },
      "details": {
        "steps": [
          {
            "title": "Diálogo Modal",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Verificar el estado de ejecución del servicio web",
                "file": "verify1-1.sh",
                "hint": "Haga clic en 'Go Live' en la esquina inferior derecha para ejecutar el servicio web en el puerto 8080. Luego, puede actualizar la pestaña **Web 8080** para previsualizar la página web."
              },
              {
                "name": "Verificar el estado de la modificación de script.js",
                "file": "verify1-2.sh",
                "hint": "Siga los pasos para completar el laboratorio."
              },
              {
                "name": "Verificar el estado de la modificación de style.css",
                "file": "verify1-3.sh",
                "hint": "Siga los pasos para completar el laboratorio."
              }
            ]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Création d'un composant Modal réutilisable en React",
      "description": "Dans ce laboratoire, nous allons explorer la manière de créer un composant Modal en React qui peut être contrôlé via des événements. Le composant Modal aura un bouton de fermeture, et un écouteur d'événements clavier sera utilisé pour fermer le modal lorsque la touche Échap est pressée. À la fin de ce laboratoire, vous aurez une bonne compréhension de la manière de créer un composant Modal réutilisable qui peut être facilement intégré dans n'importe quel projet React.",
      "meta": {
        "title": "Créer un Modal React réutilisable | Gestion des événements clavier",
        "description": "Découvrez comment créer un composant Modal React réutilisable avec la gestion des événements clavier, y compris un bouton de fermeture et la fonctionnalité de la touche Échap.",
        "keywords": "React, Modal, Événement clavier, Composant réutilisable, Développement web"
      },
      "details": {
        "steps": [
          {
            "title": "Boîte de dialogue modale",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Vérifiez le statut d'exécution du service web",
                "file": "verify1-1.sh",
                "hint": "Veuillez cliquer sur 'Go Live' dans le coin inférieur droit pour exécuter le service web sur le port 8080. Ensuite, vous pouvez actualiser l'onglet **Web 8080** pour prévisualiser la page web."
              },
              {
                "name": "Vérifiez le statut de la modification de script.js",
                "file": "verify1-2.sh",
                "hint": "Veuillez suivre les étapes pour terminer le laboratoire."
              },
              {
                "name": "Vérifiez le statut de la modification de style.css",
                "file": "verify1-3.sh",
                "hint": "Veuillez suivre les étapes pour terminer le laboratoire."
              }
            ]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Erstellen einer wiederverwendbaren Modal - Komponente in React",
      "description": "In diesem Lab werden wir untersuchen, wie man in React eine Modal - Komponente erstellt, die über Ereignisse gesteuert werden kann. Die Modal - Komponente wird einen Schließknopf haben, und der Tastaturereignis - Listener wird verwendet, um das Modal zu schließen, wenn die Esc - Taste gedrückt wird. Am Ende dieses Labs werden Sie gut verstehen, wie man eine wiederverwendbare Modal - Komponente erstellt, die einfach in jedes React - Projekt integriert werden kann.",
      "meta": {
        "title": "Erstelle wiederverwendbaren React Modal | Tastaturereignisbehandlung",
        "description": "Lernen Sie, wie man eine wiederverwendbare React Modal - Komponente mit Tastaturereignisbehandlung erstellt, einschließlich eines Schließknopfes und der Esc - Taste - Funktionalität.",
        "keywords": "React, Modal, Tastaturereignis, wiederverwendbare Komponente, Webentwicklung"
      },
      "details": {
        "steps": [
          {
            "title": "Modal Dialog",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Überprüfen des Laufzustands des Webdiensts",
                "file": "verify1-1.sh",
                "hint": "Bitte klicken Sie in der unteren rechten Ecke auf 'Go Live', um den Webdienst auf Port 8080 auszuführen. Anschließend können Sie die Registerkarte **Web 8080** aktualisieren, um die Webseite anzuschauen."
              },
              {
                "name": "Überprüfen des Status der Änderungen in script.js",
                "file": "verify1-2.sh",
                "hint": "Bitte folgen Sie den Schritten, um das Lab abzuschließen."
              },
              {
                "name": "Überprüfen des Status der Änderungen in style.css",
                "file": "verify1-3.sh",
                "hint": "Bitte folgen Sie den Schritten, um das Lab abzuschließen."
              }
            ]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "React で再利用可能な Modal コンポーネントを作成する",
      "description": "この実験では、イベントを通じて制御できる React の Modal コンポーネントを作成する方法を探ります。Modal コンポーネントにはクローズ ボタンがあり、Esc キーが押されたときにモーダルを閉じるためにキーボード イベント リスナーが使用されます。この実験が終了するとき、任意の React プロジェクトに簡単に統合できる再利用可能な Modal コンポーネントを作成する方法を十分に理解しているでしょう。",
      "meta": {
        "title": "再利用可能な React Modal を作成する | キーボード イベントの処理",
        "description": "キーボード イベントの処理、クローズ ボタンや Esc キーの機能を備えた再利用可能な React Modal コンポーネントを作成する方法を学びましょう。",
        "keywords": "React、Modal、キーボード イベント、再利用可能なコンポーネント、Web 開発"
      },
      "details": {
        "steps": [
          {
            "title": "モーダル ダイアログ",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "ウェブ サービスの実行状態を確認する",
                "file": "verify1-1.sh",
                "hint": "右下隅の「Go Live」をクリックして、ポート 8080 でウェブ サービスを実行してください。その後、**Web 8080** タブを更新してウェブ ページをプレビューできます。"
              },
              {
                "name": "script.js の変更状態を確認する",
                "file": "verify1-2.sh",
                "hint": "実験を完了するための手順に従ってください。"
              },
              {
                "name": "style.css の変更状態を確認する",
                "file": "verify1-3.sh",
                "hint": "実験を完了するための手順に従ってください。"
              }
            ]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Создание повторно используемого компонента Modal в React",
      "description": "В этом практическом занятии мы изучим, как создать компонент Modal в React, который можно контролировать с помощью событий. Компонент Modal будет иметь кнопку закрытия, и слушатель событий клавиатуры будет использоваться для закрытия модального окна при нажатии клавиши Esc. В конце этого практического занятия вы хорошо освоите создание повторно используемого компонента Modal, который можно легко интегрировать в любой проект на React.",
      "meta": {
        "title": "Создайте повторно используемый модальный компонент React | Обработка событий клавиатуры",
        "description": "Изучите, как создать повторно используемый компонент React Modal с обработкой событий клавиатуры, включая кнопку закрытия и функциональность клавиши Esc.",
        "keywords": "React, Modal, Событие клавиатуры, Повторно используемый компонент, Разработка веб-приложений"
      },
      "details": {
        "steps": [
          {
            "title": "Модальное окно",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "Проверить состояние работы веб-сервиса",
                "file": "verify1-1.sh",
                "hint": "Пожалуйста, нажмите кнопку 'Go Live' в нижнем правом углу, чтобы запустить веб-сервис на порту 8080. Затем вы можете обновить вкладку **Web 8080**, чтобы просмотреть веб-страницу."
              },
              {
                "name": "Проверить состояние изменения script.js",
                "file": "verify1-2.sh",
                "hint": "Пожалуйста, следуйте шагам, чтобы завершить практическое занятие."
              },
              {
                "name": "Проверить состояние изменения style.css",
                "file": "verify1-3.sh",
                "hint": "Пожалуйста, следуйте шагам, чтобы завершить практическое занятие."
              }
            ]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    }
  ]
}
