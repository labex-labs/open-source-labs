{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "React useIsomporphicEffect Hook",
  "description": "In this lab, we will be exploring the use of the useIsomorphicEffect hook in React. This hook allows for the resolution of useEffect() on the server and useLayoutEffect() on the client, ensuring that the same effect is executed regardless of the environment. Through this lab, we will learn how to use the useIsomorphicEffect hook to create consistent and reliable effects in our React applications.",
  "meta": {
    "title": "Mastering React's useIsomorphicEffect Hook",
    "description": "Explore the power of the useIsomorphicEffect hook in React, ensuring consistent effects across server and client environments.",
    "keywords": "useisomorphiceffect, client side rendering, react, server side rendering, web development"
  },
  "difficulty": "Beginner",
  "time": 5,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "React useIsomporphicEffect Hook",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify the running status of the web service",
            "file": "verify1-1.sh",
            "hint": "Please click on 'Go Live' in the bottom right corner to run the web service on port 8080. Then, you can refresh the **Web 8080** Tab to preview the web page.",
            "timeout": 0,
            "showstderr": true
          },
          {
            "name": "Verify the status of script.js modification",
            "file": "verify1-2.sh",
            "hint": "Please follow the steps to complete the lab.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": ["react/hooks", "react/jsx"]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    },
    "assets": {
      "host01": [
        {
          "file": "index.html",
          "target": "~/project",
          "chmod": "ugo+rwx"
        },
        {
          "file": "script.js",
          "target": "~/project",
          "chmod": "ugo+rwx"
        }
      ]
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["Lotus-7"],
  "license": {
    "name": "CC-BY-4.0",
    "url": "https://github.com/30-seconds/30-seconds-of-code/blob/master/LICENSE",
    "repo": "https://github.com/30-seconds/30-seconds-of-code"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "React useIsomporphicEffect 钩子",
      "description": "在本实验中，我们将探索在 React 中使用 useIsomorphicEffect 钩子。这个钩子允许在服务器上解析 useEffect()，在客户端解析 useLayoutEffect()，确保无论在何种环境下都能执行相同的副作用。通过本实验，我们将学习如何使用 useIsomorphicEffect 钩子在我们的 React 应用程序中创建一致且可靠的副作用。",
      "meta": {
        "title": "掌握 React 的 useIsomorphicEffect 钩子",
        "description": "探索 React 中 useIsomorphicEffect 钩子的强大功能，确保在服务器和客户端环境中都有一致的副作用。",
        "keywords": "useisomorphiceffect, 客户端渲染，React, 服务器端渲染，网页开发"
      },
      "details": {
        "steps": [
          {
            "title": "React useIsomporphicEffect 钩子",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "验证 Web 服务的运行状态",
                "file": "verify1-1.sh",
                "hint": "请点击右下角的“Go Live”以在端口 8080 上运行 Web 服务。然后，你可以刷新“Web 8080”标签页来预览网页。"
              },
              {
                "name": "验证 script.js 修改的状态",
                "file": "verify1-2.sh",
                "hint": "请按照步骤完成实验。"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "React useIsomporphicEffect Hook",
      "description": "En este laboratorio, exploraremos el uso del hook useIsomorphicEffect en React. Este hook permite resolver useEffect() en el servidor y useLayoutEffect() en el cliente, lo que garantiza que el mismo efecto se ejecute independientemente del entorno. A través de este laboratorio, aprenderemos cómo usar el hook useIsomorphicEffect para crear efectos consistentes y confiables en nuestras aplicaciones React.",
      "meta": {
        "title": "Dominando el hook useIsomorphicEffect de React",
        "description": "Explora el poder del hook useIsomorphicEffect en React, asegurando efectos consistentes en entornos de servidor y cliente.",
        "keywords": "useisomorphiceffect, renderizado del lado del cliente, react, renderizado del lado del servidor, desarrollo web"
      },
      "details": {
        "steps": [
          {
            "title": "React useIsomporphicEffect Hook",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Verificar el estado de ejecución del servicio web",
                "file": "verify1-1.sh",
                "hint": "Haga clic en 'Go Live' en la esquina inferior derecha para ejecutar el servicio web en el puerto 8080. Luego, puede actualizar la pestaña **Web 8080** para previsualizar la página web."
              },
              {
                "name": "Verificar el estado de la modificación de script.js",
                "file": "verify1-2.sh",
                "hint": "Siga los pasos para completar el laboratorio."
              }
            ]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Hook useIsomporphicEffect de React",
      "description": "Dans ce laboratoire, nous allons explorer l'utilisation du hook useIsomorphicEffect dans React. Ce hook permet de résoudre useEffect() sur le serveur et useLayoutEffect() sur le client, garantissant que le même effet est exécuté indépendamment de l'environnement. Grâce à ce laboratoire, nous apprendrons à utiliser le hook useIsomorphicEffect pour créer des effets cohérents et fiables dans nos applications React.",
      "meta": {
        "title": "Maîtriser le hook useIsomorphicEffect de React",
        "description": "Explorez le pouvoir du hook useIsomorphicEffect dans React, assurant des effets cohérents dans les environnements serveur et client.",
        "keywords": "useisomorphiceffect, rendu côté client, react, rendu côté serveur, développement web"
      },
      "details": {
        "steps": [
          {
            "title": "Hook useIsomporphicEffect de React",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Vérifiez l'état d'exécution du service web",
                "file": "verify1-1.sh",
                "hint": "Veuillez cliquer sur 'Go Live' dans le coin inférieur droit pour exécuter le service web sur le port 8080. Ensuite, vous pouvez rafraîchir l'onglet **Web 8080** pour prévisualiser la page web."
              },
              {
                "name": "Vérifiez l'état de la modification de script.js",
                "file": "verify1-2.sh",
                "hint": "Veuillez suivre les étapes pour terminer le laboratoire."
              }
            ]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "React useIsomporphicEffect-Hook",
      "description": "In diesem Lab werden wir die Verwendung des useIsomorphicEffect-Hooks in React untersuchen. Dieser Hook ermöglicht die Ausführung von useEffect() auf dem Server und useLayoutEffect() auf dem Client, was gewährleistet, dass der gleiche Effekt unabhängig von der Umgebung ausgeführt wird. Durch dieses Lab lernen wir, wie wir den useIsomorphicEffect-Hook verwenden, um konsistente und zuverlässige Effekte in unseren React-Anwendungen zu erstellen.",
      "meta": {
        "title": "Meisterhaft in React's useIsomporphicEffect-Hook",
        "description": "Erkunden Sie die Macht des useIsomorphicEffect-Hooks in React und gewährleisten Sie konsistente Effekte in Server- und Clientumgebungen.",
        "keywords": "useisomorphiceffect, client side rendering, react, server side rendering, web development"
      },
      "details": {
        "steps": [
          {
            "title": "React useIsomporphicEffect-Hook",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Überprüfen des Laufzustands des Webdiensts",
                "file": "verify1-1.sh",
                "hint": "Bitte klicken Sie auf 'Go Live' in der unteren rechten Ecke, um den Webdienst auf Port 8080 auszuführen. Anschließend können Sie die Registerkarte **Web 8080** aktualisieren, um die Webseite zu previewen."
              },
              {
                "name": "Überprüfen des Status der Änderungen an script.js",
                "file": "verify1-2.sh",
                "hint": "Bitte folgen Sie den Schritten, um das Lab abzuschließen."
              }
            ]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "React の useIsomporphicEffect フック",
      "description": "この実験では、React における useIsomorphicEffect フックの使用方法を検討します。このフックを使用することで、サーバー上では useEffect() が、クライアント上では useLayoutEffect() が解決され、環境に関係なく同じ効果が実行されるようになります。この実験を通じて、React アプリケーションで一貫性のある信頼性の高い効果を作成するために useIsomorphicEffect フックをどのように使用するかを学びます。",
      "meta": {
        "title": "React の useIsomorphicEffect フックをマスターする",
        "description": "React における useIsomorphicEffect フックの力を探求し、サーバーとクライアントの環境で一貫した効果を確保しましょう。",
        "keywords": "useisomorphiceffect, クライアントサイドレンダリング，React, サーバーサイドレンダリング，ウェブ開発"
      },
      "details": {
        "steps": [
          {
            "title": "React の useIsomporphicEffect フック",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "ウェブサービスの実行状況を確認する",
                "file": "verify1-1.sh",
                "hint": "右下隅の「Go Live」をクリックして 8080 番ポートでウェブサービスを実行してください。その後、**Web 8080** タブを更新してウェブページをプレビューできます。"
              },
              {
                "name": "script.js の変更状況を確認する",
                "file": "verify1-2.sh",
                "hint": "実験を完了する手順に従ってください。"
              }
            ]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "React хук useIsomporphicEffect",
      "description": "В этом лабораторном задании мы будем изучать использование хука useIsomorphicEffect в React. Этот хук позволяет решить проблему применения useEffect() на сервере и useLayoutEffect() на клиенте, обеспечивая выполнение одного и того же эффекта независимо от среды. В ходе выполнения этого лабораторного задания мы научимся использовать хук useIsomorphicEffect для создания согласованных и надежных эффектов в наших React-приложениях.",
      "meta": {
        "title": "Мастерство в использовании хука useIsomorphicEffect React",
        "description": "Исследуйте мощь хука useIsomorphicEffect в React, обеспечивая согласованные эффекты на сервере и в клиентской среде.",
        "keywords": "useisomorphiceffect, рендеринг на стороне клиента, react, рендеринг на стороне сервера, веб-разработка"
      },
      "details": {
        "steps": [
          {
            "title": "React хук useIsomporphicEffect",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "Проверить статус работы веб-сервиса",
                "file": "verify1-1.sh",
                "hint": "Пожалуйста, нажмите на кнопку 'Go Live' в нижнем правом углу, чтобы запустить веб-сервис на порту 8080. Затем можно обновить вкладку **Web 8080**, чтобы просмотреть веб-страницу."
              },
              {
                "name": "Проверить статус изменения script.js",
                "file": "verify1-2.sh",
                "hint": "Пожалуйста, следуйте шагам для завершения лабораторной работы."
              }
            ]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    },
    {
      "lang": "ko",
      "title": "React useIsomporphicEffect 훅",
      "description": "이 랩에서는 React 에서 useIsomorphicEffect 훅의 사용법을 살펴봅니다. 이 훅을 사용하면 서버에서 useEffect() 를, 클라이언트에서 useLayoutEffect() 를 해결하여 환경에 관계없이 동일한 효과가 실행되도록 할 수 있습니다. 이 랩을 통해 useIsomorphicEffect 훅을 사용하여 React 애플리케이션에서 일관되고 안정적인 효과를 만드는 방법을 배우게 됩니다.",
      "meta": {
        "title": "React useIsomorphicEffect 훅 마스터하기",
        "description": "서버 및 클라이언트 환경에서 일관된 효과를 보장하는 React 의 useIsomorphicEffect 훅의 강력함을 탐구하세요.",
        "keywords": "useisomorphiceffect, 클라이언트 사이드 렌더링, react, 서버 사이드 렌더링, 웹 개발"
      },
      "details": {
        "steps": [
          {
            "title": "React useIsomporphicEffect 훅",
            "text": "ko/step1.md",
            "verify": [
              {
                "name": "웹 서비스 실행 상태 확인",
                "file": "verify1-1.sh",
                "hint": "오른쪽 하단의 'Go Live'를 클릭하여 포트 8080 에서 웹 서비스를 실행하세요. 그런 다음 **Web 8080** 탭을 새로 고쳐 웹 페이지를 미리 볼 수 있습니다."
              },
              {
                "name": "script.js 수정 상태 확인",
                "file": "verify1-2.sh",
                "hint": "랩을 완료하려면 단계를 따르세요."
              }
            ]
          }
        ],
        "intro": {
          "text": "ko/intro.md",
          "title": "소개"
        },
        "finish": {
          "text": "ko/finish.md",
          "title": "요약"
        }
      }
    },
    {
      "lang": "pt",
      "title": "React useIsomporphicEffect Hook",
      "description": "Neste laboratório, exploraremos o uso do hook useIsomorphicEffect em React. Este hook permite a resolução de useEffect() no servidor e useLayoutEffect() no cliente, garantindo que o mesmo efeito seja executado independentemente do ambiente. Através deste laboratório, aprenderemos como usar o hook useIsomorphicEffect para criar efeitos consistentes e confiáveis em nossas aplicações React.",
      "meta": {
        "title": "Dominando o useIsomorphicEffect Hook do React",
        "description": "Explore o poder do hook useIsomorphicEffect em React, garantindo efeitos consistentes em ambientes de servidor e cliente.",
        "keywords": "useisomorphiceffect, renderização no lado do cliente, react, renderização no lado do servidor, desenvolvimento web"
      },
      "details": {
        "steps": [
          {
            "title": "React useIsomporphicEffect Hook",
            "text": "pt/step1.md",
            "verify": [
              {
                "name": "Verificar o status de execução do serviço web",
                "file": "verify1-1.sh",
                "hint": "Por favor, clique em 'Go Live' no canto inferior direito para executar o serviço web na porta 8080. Em seguida, você pode atualizar a aba **Web 8080** para visualizar a página web."
              },
              {
                "name": "Verificar o status da modificação do script.js",
                "file": "verify1-2.sh",
                "hint": "Por favor, siga os passos para completar o laboratório."
              }
            ]
          }
        ],
        "intro": {
          "text": "pt/intro.md",
          "title": "Introdução"
        },
        "finish": {
          "text": "pt/finish.md",
          "title": "Resumo"
        }
      }
    }
  ]
}
