{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "React useIsomporphicEffect Hook",
  "description": "In this lab, we will be exploring the use of the useIsomorphicEffect hook in React. This hook allows for the resolution of useEffect() on the server and useLayoutEffect() on the client, ensuring that the same effect is executed regardless of the environment. Through this lab, we will learn how to use the useIsomorphicEffect hook to create consistent and reliable effects in our React applications.",
  "meta": {
    "title": "Mastering React's useIsomorphicEffect Hook",
    "description": "Explore the power of the useIsomorphicEffect hook in React, ensuring consistent effects across server and client environments.",
    "keywords": "useisomorphiceffect, client side rendering, react, server side rendering, web development"
  },
  "difficulty": "Beginner",
  "time": 10,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "React useIsomporphicEffect Hook",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify the running status of the web service",
            "file": "verify1-1.sh",
            "hint": "Please click on 'Go Live' in the bottom right corner to run the web service on port 8080. Then, you can refresh the **Web 8080** Tab to preview the web page.",
            "timeout": 0,
            "showstderr": true
          },
          {
            "name": "Verify the status of script.js modification",
            "file": "verify1-2.sh",
            "hint": "Please follow the steps to complete the lab.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": ["react/hooks", "react/jsx"]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    },
    "assets": {
      "host01": [
        {
          "file": "index.html",
          "target": "~/project",
          "chmod": "ugo+rwx"
        },
        {
          "file": "script.js",
          "target": "~/project",
          "chmod": "ugo+rwx"
        }
      ]
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["Lotus-7"],
  "license": {
    "name": "CC-BY-4.0",
    "url": "https://github.com/30-seconds/30-seconds-of-code/blob/master/LICENSE",
    "repo": "https://github.com/30-seconds/30-seconds-of-code"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "React useIsomporphicEffect 钩子",
      "description": "在本实验中，我们将探索在 React 中使用 useIsomorphicEffect 钩子。这个钩子允许在服务器上解析 useEffect()，在客户端解析 useLayoutEffect()，确保无论在何种环境下都能执行相同的副作用。通过本实验，我们将学习如何使用 useIsomorphicEffect 钩子在我们的 React 应用程序中创建一致且可靠的副作用。",
      "meta": {
        "title": "掌握 React 的 useIsomorphicEffect 钩子",
        "description": "探索 React 中 useIsomorphicEffect 钩子的强大功能，确保在服务器和客户端环境中都有一致的副作用。",
        "keywords": "useisomorphiceffect, 客户端渲染, React, 服务器端渲染, 网页开发"
      },
      "details": {
        "steps": [
          {
            "title": "React useIsomporphicEffect 钩子",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "验证 Web 服务的运行状态",
                "file": "verify1-1.sh",
                "hint": "请点击右下角的“Go Live”以在端口 8080 上运行 Web 服务。然后，你可以刷新“Web 8080”标签页来预览网页。"
              },
              {
                "name": "验证 script.js 修改的状态",
                "file": "verify1-2.sh",
                "hint": "请按照步骤完成实验。"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    }
  ]
}
