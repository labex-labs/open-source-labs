{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Handling Panics with Golang Recover",
  "description": "In Golang, recover is a built-in function that can be used to recover from a panic. This lab will test your ability to use recover to handle panics.",
  "meta": {
    "title": "Recover from Panics in Golang | Programming Tutorials",
    "description": "Learn how to use the built-in `recover` function in Golang to handle panics and prevent your server from crashing. Explore this programming tutorial to improve your error handling skills.",
    "keywords": "Golang, recover, panic, error handling, programming tutorials"
  },
  "difficulty": "Beginner",
  "time": 5,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Recover",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify Go Program Recover Error",
            "file": "verify1-1.sh",
            "hint": "Please make sure you have completed the required actions.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": ["go/recover"]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    },
    "assets": {
      "host01": [
        {
          "file": "recover.go",
          "target": "/home/labex/project",
          "chmod": "ugo+rwx"
        }
      ]
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["jiaosenvip"],
  "license": {
    "name": "CC-BY-3.0",
    "url": "http://creativecommons.org/licenses/by/3.0/",
    "repo": "https://github.com/mmcgrana/gobyexample"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "使用 Go 语言的 recover 处理恐慌",
      "description": "在 Go 语言中，recover 是一个内置函数，可用于从恐慌中恢复。本实验将测试你使用 recover 处理恐慌的能力。",
      "meta": {
        "title": "从 Go 语言恐慌中恢复 | 编程教程",
        "description": "学习如何使用 Go 语言中的内置 `recover` 函数来处理恐慌并防止服务器崩溃。探索本编程教程以提高你的错误处理技能。",
        "keywords": "Go 语言，recover, 恐慌，错误处理，编程教程"
      },
      "details": {
        "steps": [
          {
            "title": "恢复",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "验证 Go 程序恢复错误",
                "file": "verify1-1.sh",
                "hint": "请确保你已完成所需操作。"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Manejar Pánicos con Recuperar en Golang",
      "description": "En Golang, recuperar es una función integrada que se puede utilizar para recuperarse de un pánico. Esta práctica probará tu capacidad para utilizar recuperar para manejar pánicos.",
      "meta": {
        "title": "Recuperarse de Pánicos en Golang | Tutoriales de Programación",
        "description": "Aprende cómo utilizar la función integrada `recuperar` en Golang para manejar pánicos y evitar que tu servidor se detenga. Explora este tutorial de programación para mejorar tus habilidades de manejo de errores.",
        "keywords": "Golang, recuperar, pánico, manejo de errores, tutoriales de programación"
      },
      "details": {
        "steps": [
          {
            "title": "Recuperar",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Verificar el Error de Recuperación del Programa de Go",
                "file": "verify1-1.sh",
                "hint": "Asegúrese de haber completado las acciones requeridas."
              }
            ]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Gérer les panics avec la fonction recover en Golang",
      "description": "En Golang, recover est une fonction intégrée qui peut être utilisée pour récupérer d'un panic. Ce laboratoire vous permettra de tester votre capacité à utiliser recover pour gérer les panics.",
      "meta": {
        "title": "Récupérer des panics en Golang | Didacticiels de programmation",
        "description": "Découvrez comment utiliser la fonction intégrée `recover` en Golang pour gérer les panics et empêcher votre serveur de planter. Explorez ce didacticiel de programmation pour améliorer vos compétences en gestion d'erreurs.",
        "keywords": "Golang, recover, panic, gestion d'erreurs, didacticiels de programmation"
      },
      "details": {
        "steps": [
          {
            "title": "Récupérer",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Vérifier la récupération d'erreur dans un programme Go",
                "file": "verify1-1.sh",
                "hint": "Veuillez vous assurer d'avoir effectué les actions requises."
              }
            ]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Panics in Golang mit recover behandeln",
      "description": "In Golang ist recover eine integrierte Funktion, die verwendet werden kann, um von einem Panic zurückzukehren. In diesem Lab wird Ihre Fähigkeit getestet, recover zum Behandeln von Panics zu verwenden.",
      "meta": {
        "title": "Von Panics in Golang zurückkehren | Programmier-Tutorials",
        "description": "Lernen Sie, wie Sie die integrierte `recover`-Funktion in Golang verwenden, um Panics zu behandeln und Ihren Server vor einem Absturz zu schützen. Entdecken Sie dieses Programmier-Tutorial, um Ihre Fehlerbehandlungsfähigkeiten zu verbessern.",
        "keywords": "Golang, recover, Panic, Fehlerbehandlung, Programmier-Tutorials"
      },
      "details": {
        "steps": [
          {
            "title": "Recover",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Überprüfen, ob das Go-Programm den Fehler zurückgewinnen kann",
                "file": "verify1-1.sh",
                "hint": "Bitte stellen Sie sicher, dass Sie die erforderlichen Aktionen ausgeführt haben."
              }
            ]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "Go 言語の recover を使ったパニックの処理",
      "description": "Go 言語では、recover はパニックから回復するために使用できる組み込み関数です。この実験では、recover を使用してパニックを処理する能力をテストします。",
      "meta": {
        "title": "Go 言語でのパニックからの回復 | プログラミングチュートリアル",
        "description": "Go 言語の組み込み関数 `recover` を使ってパニックを処理し、サーバーのクラッシュを防ぐ方法を学びましょう。このプログラミングチュートリアルを探索して、エラーハンドリングのスキルを向上させましょう。",
        "keywords": "Go 言語，recover, パニック，エラーハンドリング，プログラミングチュートリアル"
      },
      "details": {
        "steps": [
          {
            "title": "回復",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "Go プログラムのエラー回復を確認する",
                "file": "verify1-1.sh",
                "hint": "必要な操作を完了していることを確認してください。"
              }
            ]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Обработка паник с использованием recover в Golang",
      "description": "В Golang recover - это встроенная функция, которая может использоваться для восстановления от паники. В этом лабе будет проверяться ваша способность использовать recover для обработки паник.",
      "meta": {
        "title": "Восстановление от паник в Golang | Руководства по программированию",
        "description": "Изучите, как использовать встроенную функцию `recover` в Golang для обработки паник и предотвращения аварийного завершения сервера. Исследуйте это руководство по программированию, чтобы улучшить свои навыки обработки ошибок.",
        "keywords": "Golang, recover, паника, обработка ошибок, руководства по программированию"
      },
      "details": {
        "steps": [
          {
            "title": "Восстановление",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "Проверить восстановление ошибки в Go-программе",
                "file": "verify1-1.sh",
                "hint": "Пожалуйста, убедитесь, что вы выполнили требуемые действия."
              }
            ]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    },
    {
      "lang": "ko",
      "title": "Golang Recover 를 이용한 패닉 처리",
      "description": "Golang 에서 recover 는 패닉으로부터 복구하는 데 사용될 수 있는 내장 함수입니다. 이 랩에서는 recover 를 사용하여 패닉을 처리하는 능력을 테스트합니다.",
      "meta": {
        "title": "Golang 에서 패닉 복구하기 | 프로그래밍 튜토리얼",
        "description": "Golang 의 내장 함수 `recover` 를 사용하여 패닉을 처리하고 서버 충돌을 방지하는 방법을 알아보세요. 이 프로그래밍 튜토리얼을 통해 오류 처리 기술을 향상시키세요.",
        "keywords": "Golang, recover, panic, 오류 처리, 프로그래밍 튜토리얼, Go 패닉, Go recover, Go 에러 처리"
      },
      "details": {
        "steps": [
          {
            "title": "Recover",
            "text": "ko/step1.md",
            "verify": [
              {
                "name": "Go 프로그램 Recover 에러 검증",
                "file": "verify1-1.sh",
                "hint": "필수 작업을 완료했는지 확인하십시오."
              }
            ]
          }
        ],
        "intro": {
          "text": "ko/intro.md",
          "title": "소개"
        },
        "finish": {
          "text": "ko/finish.md",
          "title": "요약"
        }
      }
    },
    {
      "lang": "pt",
      "title": "Lidando com Panics com Recover em Golang",
      "description": "Em Golang, recover é uma função embutida que pode ser usada para recuperar de um panic. Este laboratório testará sua capacidade de usar recover para lidar com panics.",
      "meta": {
        "title": "Recupere de Panics em Golang | Tutoriais de Programação",
        "description": "Aprenda como usar a função `recover` embutida em Golang para lidar com panics e evitar que seu servidor trave. Explore este tutorial de programação para aprimorar suas habilidades de tratamento de erros.",
        "keywords": "Golang, recover, panic, tratamento de erros, tutoriais de programação, Go"
      },
      "details": {
        "steps": [
          {
            "title": "Recover",
            "text": "pt/step1.md",
            "verify": [
              {
                "name": "Verificar Erro de Recover no Programa Go",
                "file": "verify1-1.sh",
                "hint": "Por favor, certifique-se de ter concluído as ações necessárias."
              }
            ]
          }
        ],
        "intro": {
          "text": "pt/intro.md",
          "title": "Introdução"
        },
        "finish": {
          "text": "pt/finish.md",
          "title": "Resumo"
        }
      }
    }
  ]
}
