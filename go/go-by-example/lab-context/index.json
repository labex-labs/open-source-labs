{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Golang Context Cancellation Demonstration",
  "description": "This lab aims to demonstrate the usage of context.Context for controlling cancellation in Golang. A Context carries deadlines, cancellation signals, and other request-scoped values across API boundaries and goroutines.",
  "meta": {
    "title": "Context in Golang | HTTP Server Cancellation",
    "description": "Learn how to use context.Context for controlling cancellation in Golang HTTP servers. Explore request-scoped values, deadlines, and cancellation signals across API boundaries and goroutines.",
    "keywords": "Golang, context, HTTP server, cancellation, request-scoped, deadlines, goroutines"
  },
  "difficulty": "Beginner",
  "time": 15,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Context",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify Go Run Constant File Output",
            "file": "verify1-1.sh",
            "hint": "Please make sure you have completed the required actions.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": ["go/context"]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    },
    "assets": {
      "host01": [
        {
          "file": "context.go",
          "target": "/home/labex/project",
          "chmod": "ugo+rwx"
        }
      ]
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["jiaosenvip"],
  "license": {
    "name": "CC-BY-3.0",
    "url": "http://creativecommons.org/licenses/by/3.0/",
    "repo": "https://github.com/mmcgrana/gobyexample"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "Go 语言中上下文取消的演示",
      "description": "本实验旨在演示如何使用 context.Context 在 Go 语言中控制取消操作。Context 可携带截止日期、取消信号以及其他跨 API 边界和 goroutine 的请求范围值。",
      "meta": {
        "title": "Go 语言中的上下文 | HTTP 服务器取消",
        "description": "了解如何在 Go 语言 HTTP 服务器中使用 context.Context 控制取消操作。探索跨 API 边界和 goroutine 的请求范围值、截止日期和取消信号。",
        "keywords": "Go 语言，上下文，HTTP 服务器，取消，请求范围，截止日期，goroutine"
      },
      "details": {
        "steps": [
          {
            "title": "上下文",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "验证 Go 运行常量文件输出",
                "file": "verify1-1.sh",
                "hint": "请确保你已完成所需操作。"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Demostración de cancelación de contexto en Golang",
      "description": "Este laboratorio tiene como objetivo demostrar el uso de context.Context para controlar la cancelación en Golang. Un Context lleva plazos de finalización, señales de cancelación y otros valores con ámbito de solicitud a través de los límites de API y gorutinas.",
      "meta": {
        "title": "Contexto en Golang | Cancelación de servidor HTTP",
        "description": "Aprende cómo usar context.Context para controlar la cancelación en servidores HTTP de Golang. Explora valores con ámbito de solicitud, plazos de finalización y señales de cancelación a través de los límites de API y gorutinas.",
        "keywords": "Golang, contexto, servidor HTTP, cancelación, con ámbito de solicitud, plazos de finalización, gorutinas"
      },
      "details": {
        "steps": [
          {
            "title": "Contexto",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Verificar la salida del archivo constante de Go Run",
                "file": "verify1-1.sh",
                "hint": "Asegúrese de haber completado las acciones requeridas."
              }
            ]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Démonstration d'annulation avec context.Context en Golang",
      "description": "Ce laboratoire vise à démontrer l'utilisation de context.Context pour contrôler l'annulation en Golang. Un Context transporte des délais, des signaux d'annulation et d'autres valeurs liées à la requête entre les limites d'API et les goroutines.",
      "meta": {
        "title": "Context en Golang | Annulation du serveur HTTP",
        "description": "Découvrez comment utiliser context.Context pour contrôler l'annulation dans les serveurs HTTP Golang. Explorez les valeurs liées à la requête, les délais et les signaux d'annulation entre les limites d'API et les goroutines.",
        "keywords": "Golang, context, serveur HTTP, annulation, lié à la requête, délais, goroutines"
      },
      "details": {
        "steps": [
          {
            "title": "Contexte",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Vérifier la sortie du fichier Go Run Constant",
                "file": "verify1-1.sh",
                "hint": "Veuillez vous assurer d'avoir effectué les actions requises."
              }
            ]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Golang Context Stornierungsdemonstration",
      "description": "Dieses Labor hat zum Ziel, die Verwendung von context.Context zur Steuerung der Stornierung in Golang zu demonstrieren. Ein Context trägt Fristen, Stornierungssignale und andere anforderungsbezogene Werte über API-Grenzen und Goroutinen hinweg.",
      "meta": {
        "title": "Context in Golang | HTTP-Server-Stornierung",
        "description": "Lernen Sie, wie Sie context.Context für die Steuerung der Stornierung in Golang-HTTP-Servern verwenden. Entdecken Sie anforderungsbezogene Werte, Fristen und Stornierungssignale über API-Grenzen und Goroutinen.",
        "keywords": "Golang, context, HTTP-Server, Stornierung, anforderungsbezogen, Fristen, Goroutinen"
      },
      "details": {
        "steps": [
          {
            "title": "Context",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Überprüfen Sie die Ausgabe der Go Run Konstanten-Datei",
                "file": "verify1-1.sh",
                "hint": "Bitte stellen Sie sicher, dass Sie die erforderlichen Aktionen abgeschlossen haben."
              }
            ]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "Golang におけるコンテキストのキャンセルのデモ",
      "description": "この実験は、Golang においてコンテキストのキャンセル制御に対する context.Context の使用方法を示すことを目的としています。コンテキストは、API 境界と goroutine をまたいで期限付き、キャンセル信号、およびその他の要求スコープの値を保持します。",
      "meta": {
        "title": "Golang のコンテキスト | HTTP サーバーのキャンセル",
        "description": "Golang の HTTP サーバーにおけるコンテキストのキャンセル制御に context.Context をどのように使用するか学びましょう。API 境界と goroutine をまたいで要求スコープの値、期限付き、およびキャンセル信号を探りましょう。",
        "keywords": "Golang, コンテキスト，HTTP サーバー, キャンセル，要求スコープ，期限付き，goroutine"
      },
      "details": {
        "steps": [
          {
            "title": "コンテキスト",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "Go 実行定数ファイル出力を確認する",
                "file": "verify1-1.sh",
                "hint": "必要な操作を完了していることを確認してください。"
              }
            ]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Демонстрация отмены в Golang с использованием context.Context",
      "description": "Этот лабораторный практикум旨在演示 `context.Context`在 Golang 中用于控制取消操作的用法。`Context` 跨 API 边界和 goroutine 携带截止日期、取消信号及其他请求范围的值。",
      "meta": {
        "title": "Context в Golang | Отмена в HTTP-сервере",
        "description": "Изучите, как использовать context.Context для управления отменой в HTTP-серверах Golang. Исследуйте значения, связанные с запросом, даты окончания и сигналы отмены на границах API и в goroutine.",
        "keywords": "Golang, context, HTTP-сервер, отмена, связанные с запросом, даты окончания, goroutine"
      },
      "details": {
        "steps": [
          {
            "title": "Контекст",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "Проверить вывод файла констант Go Run",
                "file": "verify1-1.sh",
                "hint": "Пожалуйста, убедитесь, что вы выполнили требуемые действия."
              }
            ]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    }
  ]
}
