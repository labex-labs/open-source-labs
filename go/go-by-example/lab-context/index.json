{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Golang Context Cancellation Demonstration",
  "description": "This lab aims to demonstrate the usage of context.Context for controlling cancellation in Golang. A Context carries deadlines, cancellation signals, and other request-scoped values across API boundaries and goroutines.",
  "meta": {
    "title": "Context in Golang | HTTP Server Cancellation",
    "description": "Learn how to use context.Context for controlling cancellation in Golang HTTP servers. Explore request-scoped values, deadlines, and cancellation signals across API boundaries and goroutines.",
    "keywords": "Golang, context, HTTP server, cancellation, request-scoped, deadlines, goroutines"
  },
  "difficulty": "Beginner",
  "time": 15,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Context",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify Go Run Constant File Output",
            "file": "verify1-1.sh",
            "hint": "Please make sure you have completed the required actions.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": ["go/context"]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    },
    "assets": {
      "host01": [
        {
          "file": "context.go",
          "target": "/home/labex/project",
          "chmod": "ugo+rwx"
        }
      ]
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["jiaosenvip"],
  "license": {
    "name": "CC-BY-3.0",
    "url": "http://creativecommons.org/licenses/by/3.0/",
    "repo": "https://github.com/mmcgrana/gobyexample"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "Go 语言中上下文取消的演示",
      "description": "本实验旨在演示如何使用 context.Context 在 Go 语言中控制取消操作。Context 可携带截止日期、取消信号以及其他跨 API 边界和 goroutine 的请求范围值。",
      "meta": {
        "title": "Go 语言中的上下文 | HTTP 服务器取消",
        "description": "了解如何在 Go 语言 HTTP 服务器中使用 context.Context 控制取消操作。探索跨 API 边界和 goroutine 的请求范围值、截止日期和取消信号。",
        "keywords": "Go 语言, 上下文, HTTP 服务器, 取消, 请求范围, 截止日期, goroutine"
      },
      "details": {
        "steps": [
          {
            "title": "上下文",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "验证 Go 运行常量文件输出",
                "file": "verify1-1.sh",
                "hint": "请确保你已完成所需操作。"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    }
  ]
}
