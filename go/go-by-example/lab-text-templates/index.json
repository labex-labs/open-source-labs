{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Dynamic Content Generation with Golang Templates",
  "description": "In this lab, you will learn how to use the Go `text/template` package to generate dynamic content, including accessing struct fields, providing conditional execution, and looping through slices, arrays, maps, or channels.",
  "meta": {
    "title": "Go Programming | Text Templates | Dynamic Content",
    "description": "This lab demonstrates the use of the Go `text/template` package to generate dynamic content, including accessing struct fields, providing conditional execution, and looping through data structures.",
    "keywords": "Go Programming, Text Templates, Dynamic Content, Golang, Template Parsing, Template Execution"
  },
  "difficulty": "Beginner",
  "time": 15,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Text Templates",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify Go Run Templates Output",
            "file": "verify1-1.sh",
            "hint": "Please make sure you have completed the required actions.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": ["go/text_templates"]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    },
    "assets": {
      "host01": [
        {
          "file": "text-templates.go",
          "target": "/home/labex/project",
          "chmod": "ugo+rwx"
        }
      ]
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["jiaosenvip"],
  "license": {
    "name": "CC-BY-3.0",
    "url": "http://creativecommons.org/licenses/by/3.0/",
    "repo": "https://github.com/mmcgrana/gobyexample"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "使用 Go 语言模板生成动态内容",
      "description": "在本实验中，你将学习如何使用 Go 语言的 `text/template` 包来生成动态内容，包括访问结构体字段、提供条件执行以及遍历切片、数组、映射或通道。",
      "meta": {
        "title": "Go 编程 | 文本模板 | 动态内容",
        "description": "本实验演示了如何使用 Go 语言的 `text/template` 包来生成动态内容，包括访问结构体字段、提供条件执行以及遍历数据结构。",
        "keywords": "Go 编程，文本模板，动态内容，Go 语言，模板解析，模板执行"
      },
      "details": {
        "steps": [
          {
            "title": "文本模板",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "验证 Go 运行模板输出",
                "file": "verify1-1.sh",
                "hint": "请确保你已完成所需操作。"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Generación de contenido dinámico con plantillas de Golang",
      "description": "En este laboratorio, aprenderá a utilizar el paquete `text/template` de Go para generar contenido dinámico, incluyendo el acceso a los campos de un struct, la ejecución condicional y la iteración a través de slices, arrays, maps o canales.",
      "meta": {
        "title": "Programación en Go | Plantillas de texto | Contenido dinámico",
        "description": "Este laboratorio demuestra el uso del paquete `text/template` de Go para generar contenido dinámico, incluyendo el acceso a los campos de un struct, la ejecución condicional y la iteración a través de estructuras de datos.",
        "keywords": "Programación en Go, Plantillas de texto, Contenido dinámico, Golang, Análisis de plantillas, Ejecución de plantillas"
      },
      "details": {
        "steps": [
          {
            "title": "Plantillas de texto",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Verificar la salida de las plantillas de Go Run",
                "file": "verify1-1.sh",
                "hint": "Asegúrese de haber completado las acciones requeridas."
              }
            ]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Génération de contenu dynamique avec les modèles Golang",
      "description": "Dans ce laboratoire, vous allez apprendre à utiliser le package Go `text/template` pour générer du contenu dynamique, y compris l'accès aux champs de struct, la fourniture d'une exécution conditionnelle et la boucle sur des slices, des tableaux, des maps ou des canaux.",
      "meta": {
        "title": "Programmation Go | Modèles de texte | Contenu dynamique",
        "description": "Ce laboratoire démontre l'utilisation du package Go `text/template` pour générer du contenu dynamique, y compris l'accès aux champs de struct, la fourniture d'une exécution conditionnelle et la boucle sur des structures de données.",
        "keywords": "Programmation Go, Modèles de texte, Contenu dynamique, Golang, Analyse de modèle, Exécution de modèle"
      },
      "details": {
        "steps": [
          {
            "title": "Modèles de texte",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Vérifier la sortie des modèles Go Run",
                "file": "verify1-1.sh",
                "hint": "Veuillez vous assurer d'avoir effectué les actions requises."
              }
            ]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Dynamische Inhaltserzeugung mit Golang-Vorlagen",
      "description": "In diesem Lab lernen Sie, wie Sie das Go-Paket `text/template` verwenden, um dynamischen Inhalt zu erzeugen, einschließlich des Zugangs zu Struct-Feldern, der bedingten Ausführung und des Iterierens über Slices, Arrays, Maps oder Kanäle.",
      "meta": {
        "title": "Go-Programmierung | Textvorlagen | Dynamischer Inhalt",
        "description": "Dieses Lab demonstriert die Verwendung des Go-Pakets `text/template` zur Erzeugung von dynamischem Inhalt, einschließlich des Zugangs zu Struct-Feldern, der bedingten Ausführung und des Iterierens über Datenstrukturen.",
        "keywords": "Go-Programmierung, Textvorlagen, Dynamischer Inhalt, Golang, Vorlagenanalyse, Vorlagenausführung"
      },
      "details": {
        "steps": [
          {
            "title": "Textvorlagen",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Überprüfen der Ausgabe von Go Run Templates",
                "file": "verify1-1.sh",
                "hint": "Stellen Sie sicher, dass Sie die erforderlichen Aktionen abgeschlossen haben."
              }
            ]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "Go 言語のテンプレートを使った動的コンテンツの生成",
      "description": "この実験では、Go 言語の `text/template` パッケージを使って動的コンテンツを生成する方法を学びます。構造体のフィールドにアクセスする方法、条件付き実行を行う方法、およびスライス、配列、マップ、またはチャネルをループ処理する方法が含まれます。",
      "meta": {
        "title": "Go 言語プログラミング | テキストテンプレート | 動的コンテンツ",
        "description": "この実験では、Go 言語の `text/template` パッケージを使って動的コンテンツを生成する方法を示します。構造体のフィールドにアクセスする方法、条件付き実行を行う方法、およびデータ構造をループ処理する方法が含まれます。",
        "keywords": "Go 言語プログラミング，テキストテンプレート，動的コンテンツ，Go 言語，テンプレート解析，テンプレート実行"
      },
      "details": {
        "steps": [
          {
            "title": "テキストテンプレート",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "Go 実行テンプレートの出力を確認する",
                "file": "verify1-1.sh",
                "hint": "必要な操作を完了していることを確認してください。"
              }
            ]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Генерация динамического контента с использованием шаблонов Go",
      "description": "В этом практическом задании вы научитесь использовать пакет Go `text/template` для генерации динамического контента, включая доступ к полям структуры, обеспечение условного выполнения и перебор срезов, массивов, карточек или каналов.",
      "meta": {
        "title": "Программирование на Go | Текстовые шаблоны | Динамический контент",
        "description": "В этом практическом задании демонстрируется использование пакета Go `text/template` для генерации динамического контента, включая доступ к полям структуры, обеспечение условного выполнения и перебор данных структур.",
        "keywords": "Программирование на Go, Текстовые шаблоны, Динамический контент, Golang, Анализ шаблонов, Выполнение шаблонов"
      },
      "details": {
        "steps": [
          {
            "title": "Текстовые шаблоны",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "Проверить вывод шаблонов Go Run",
                "file": "verify1-1.sh",
                "hint": "Пожалуйста, убедитесь, что вы выполнили требуемые действия."
              }
            ]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    }
  ]
}
