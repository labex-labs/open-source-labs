{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "challenge",
  "title": "Golang Channel Communication with Workers | Challenge",
  "description": "In Golang, closing a channel can be used to communicate completion to the channel's receivers. This challenge will demonstrate how to use a channel to communicate work to be done from the main() goroutine to a worker goroutine, and how to close the channel when there are no more jobs for the worker.",
  "meta": {
    "title": "Golang | Channel Synchronization | Closing Channels",
    "description": "Learn how to use channels in Golang to communicate work between goroutines and close channels when there are no more jobs for the worker.",
    "keywords": "Golang, Channel Synchronization, Closing Channels, Goroutine, Programming Tutorial"
  },
  "difficulty": "Beginner",
  "time": 15,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": false,
  "details": {
    "steps": [
      {
        "title": "Closing Channels",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify Go Run Closing Channels",
            "file": "verify1-1.sh",
            "hint": "Please make sure you have completed the required actions.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": ["go/channels"],
        "solutions": ["closing-channels.go"]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md"
    },
    "assets": {
      "host01": [
        {
          "file": "closing-channels.go",
          "target": "/home/labex/project",
          "chmod": "ugo+rwx"
        }
      ]
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["jiaosenvip"],
  "license": {
    "name": "CC-BY-3.0",
    "url": "http://creativecommons.org/licenses/by/3.0/",
    "repo": "https://github.com/mmcgrana/gobyexample"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "Go 语言中与工作协程的通道通信 | 挑战",
      "description": "在 Go 语言中，关闭一个通道可用于向通道的接收者传达完成信息。本挑战将演示如何使用通道将 `main()` 协程中待完成的工作传达给工作协程，以及当工作协程没有更多任务时如何关闭通道。",
      "meta": {
        "title": "Go 语言 | 通道同步 | 关闭通道",
        "description": "学习如何在 Go 语言中使用通道在协程之间通信，以及在工作协程没有更多任务时关闭通道。",
        "keywords": "Go 语言，通道同步，关闭通道，协程，编程教程"
      },
      "details": {
        "steps": [
          {
            "title": "关闭通道",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "验证 Go 运行关闭通道",
                "file": "verify1-1.sh",
                "hint": "请确保你已完成所需操作。"
              }
            ],
            "solutions": ["closing-channels.go"]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Comunicación de canales en Golang con trabajadores | Desafío",
      "description": "En Golang, cerrar un canal se puede utilizar para comunicar la finalización a los receptores del canal. Este desafío demostrará cómo utilizar un canal para comunicar el trabajo que se debe realizar desde la gorutina main() a una gorutina trabajadora, y cómo cerrar el canal cuando ya no hay más trabajos para el trabajador.",
      "meta": {
        "title": "Golang | Sincronización de canales | Cerrando canales",
        "description": "Aprende cómo utilizar canales en Golang para comunicar trabajo entre gorutinas y cerrar canales cuando ya no hay más trabajos para el trabajador.",
        "keywords": "Golang, Sincronización de canales, Cerrando canales, Gorutina, Tutorial de programación"
      },
      "details": {
        "steps": [
          {
            "title": "Cerrando canales",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Verificar la ejecución de Go Closing Channels",
                "file": "verify1-1.sh",
                "hint": "Asegúrese de haber completado las acciones requeridas."
              }
            ],
            "solutions": ["closing-channels.go"]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Communication de canal Golang avec des travailleurs | Défi",
      "description": "En Golang, fermer un canal peut être utilisé pour communiquer la fin à des récepteurs de canal. Ce défi montrera comment utiliser un canal pour communiquer le travail à effectuer de la goroutine main() à une goroutine de travail, et comment fermer le canal lorsqu'il n'y a plus de tâches pour le travailleur.",
      "meta": {
        "title": "Golang | Synchronisation de canal | Fermeture de canaux",
        "description": "Apprenez à utiliser des canaux en Golang pour communiquer le travail entre des goroutines et fermer les canaux lorsqu'il n'y a plus de tâches pour le travailleur.",
        "keywords": "Golang, Synchronisation de canal, Fermeture de canaux, Goroutine, Tutoriel de programmation"
      },
      "details": {
        "steps": [
          {
            "title": "Fermeture des canaux",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Vérifier l'exécution de Go Closing Channels",
                "file": "verify1-1.sh",
                "hint": "Veuillez vous assurer d'avoir effectué les actions requises."
              }
            ],
            "solutions": ["closing-channels.go"]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Golang-Kanalkommunikation mit Arbeitern | Challenge",
      "description": "In Golang kann das Schließen eines Kanals verwendet werden, um die Fertigstellung an die Empfänger des Kanals zu kommunizieren. In dieser Aufgabe wird gezeigt, wie ein Kanal verwendet wird, um Arbeit von der main()-Goroutine an eine Arbeits-Goroutine zu übermitteln, und wie der Kanal geschlossen wird, wenn es keine weiteren Aufgaben für die Arbeitsroutine gibt.",
      "meta": {
        "title": "Golang | Kanal-Synchronisierung | Kanäle schließen",
        "description": "Lernen Sie, wie Sie in Golang Kanäle verwenden, um Arbeit zwischen Goroutinen zu kommunizieren und Kanäle zu schließen, wenn es keine weiteren Aufgaben für die Arbeitsroutine gibt.",
        "keywords": "Golang, Kanal-Synchronisierung, Kanäle schließen, Goroutine, Programmierungstutorial"
      },
      "details": {
        "steps": [
          {
            "title": "Kanäle schließen",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Überprüfen Sie, ob Go Run Closing Channels funktioniert",
                "file": "verify1-1.sh",
                "hint": "Bitte stellen Sie sicher, dass Sie die erforderlichen Aktionen ausgeführt haben."
              }
            ],
            "solutions": ["closing-channels.go"]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "Golang におけるワーカーとのチャネル通信 | チャレンジ",
      "description": "Golang では、チャネルを閉じることで、チャネルの受信側に完了を通知することができます。このチャネルを使って、main() goroutine からワーカーgoroutine に行う作業を通知する方法と、ワーカーに対してもう作業がなくなったときにチャネルを閉じる方法をこのチャレンジで示します。",
      "meta": {
        "title": "Golang | チャネル同期 | チャネルのクローズ",
        "description": "Golang でチャネルを使って goroutine 間で作業を通知し、ワーカーに対してもう作業がなくなったときにチャネルを閉じる方法を学びましょう。",
        "keywords": "Golang, チャネル同期，チャネルのクローズ，goroutine, プログラミングチュートリアル"
      },
      "details": {
        "steps": [
          {
            "title": "チャネルのクローズ",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "Go Run Closing Channels を確認する",
                "file": "verify1-1.sh",
                "hint": "必要な操作を完了していることを確認してください。"
              }
            ],
            "solutions": ["closing-channels.go"]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Общение по каналам в Golang с воркерами | Задача",
      "description": "В Golang закрытие канала может использоваться для передачи сигнала о завершении работы приемникам канала. В этом задании будет показано, как использовать канал для передачи задач от горутины main() к воркеру, и как закрывать канал, когда у воркера больше нет задач.",
      "meta": {
        "title": "Golang | Синхронизация по каналам | Закрытие каналов",
        "description": "Изучите, как использовать каналы в Golang для передачи задач между горутинами и закрывать каналы, когда у воркера больше нет задач.",
        "keywords": "Golang, Синхронизация по каналам, Закрытие каналов, Горутина, Руководство по программированию"
      },
      "details": {
        "steps": [
          {
            "title": "Закрытие каналов",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "Проверить выполнение программы closing-channels.go",
                "file": "verify1-1.sh",
                "hint": "Пожалуйста, убедитесь, что вы выполнили все необходимые действия."
              }
            ],
            "solutions": ["closing-channels.go"]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    }
  ]
}
