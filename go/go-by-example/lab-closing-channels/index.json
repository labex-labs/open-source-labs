{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Golang Channel Communication with Workers",
  "description": "In Golang, closing a channel can be used to communicate completion to the channel's receivers. This lab will demonstrate how to use a channel to communicate work to be done from the main() goroutine to a worker goroutine, and how to close the channel when there are no more jobs for the worker.",
  "meta": {
    "title": "Closing Channels in Golang | Channel Synchronization",
    "description": "Learn how to use channels to communicate work between goroutines and close channels when there are no more jobs in Golang.",
    "keywords": "Golang, Channels, Closing Channels, Channel Synchronization, Goroutines"
  },
  "difficulty": "Beginner",
  "time": 5,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Closing Channels",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify Closing Channels Go Program Output",
            "file": "verify1-1.sh",
            "hint": "Please make sure you have completed the required actions.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": ["go/channels"]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    },
    "assets": {
      "host01": [
        {
          "file": "closing-channels.go",
          "target": "/home/labex/project",
          "chmod": "ugo+rwx"
        }
      ]
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["jiaosenvip"],
  "license": {
    "name": "CC-BY-3.0",
    "url": "http://creativecommons.org/licenses/by/3.0/",
    "repo": "https://github.com/mmcgrana/gobyexample"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "Go 语言中与工作协程的通道通信",
      "description": "在 Go 语言中，关闭一个通道可用于向通道的接收者传达完成信息。本实验将演示如何使用通道将 main() 协程中待完成的工作传达给一个工作协程，以及当工作协程没有更多任务时如何关闭通道。",
      "meta": {
        "title": "Go 语言中关闭通道 | 通道同步",
        "description": "学习如何在 Go 语言中使用通道在协程之间通信，以及在没有更多任务时关闭通道。",
        "keywords": "Go 语言，通道，关闭通道，通道同步，协程"
      },
      "details": {
        "steps": [
          {
            "title": "关闭通道",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "验证 Go 语言关闭通道程序的输出",
                "file": "verify1-1.sh",
                "hint": "请确保你已完成所需操作。"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Comunicación de canales en Golang con trabajadores",
      "description": "En Golang, cerrar un canal se puede utilizar para comunicar la finalización a los receptores del canal. Esta práctica demostrará cómo utilizar un canal para comunicar el trabajo por hacer desde la rutina main() a una rutina de trabajo, y cómo cerrar el canal cuando ya no hay más trabajos para el trabajador.",
      "meta": {
        "title": "Cerrando canales en Golang | Sincronización de canales",
        "description": "Aprende cómo utilizar canales para comunicar trabajo entre gorutinas y cerrar canales cuando ya no hay más trabajos en Golang.",
        "keywords": "Golang, Canales, Cerrando canales, Sincronización de canales, Gorutinas"
      },
      "details": {
        "steps": [
          {
            "title": "Cerrando canales",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Verificar la salida del programa de Go de cerrado de canales",
                "file": "verify1-1.sh",
                "hint": "Asegúrese de haber completado las acciones requeridas."
              }
            ]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Communication de canal en Golang avec des travailleurs",
      "description": "En Golang, la fermeture d'un canal peut être utilisée pour communiquer la fin aux récepteurs du canal. Ce laboratoire démontrera comment utiliser un canal pour communiquer les travaux à effectuer du goroutine main() à une goroutine de travail, et comment fermer le canal lorsqu'il n'y a plus de tâches pour le travailleur.",
      "meta": {
        "title": "Fermeture de canaux en Golang | Synchronisation de canal",
        "description": "Apprenez à utiliser des canaux pour communiquer des travaux entre des goroutines et à fermer des canaux lorsqu'il n'y a plus de tâches en Golang.",
        "keywords": "Golang, Canaux, Fermeture de canaux, Synchronisation de canal, Goroutines"
      },
      "details": {
        "steps": [
          {
            "title": "Fermeture de canaux",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Vérifier la sortie du programme Go de fermeture de canaux",
                "file": "verify1-1.sh",
                "hint": "Veuillez vous assurer d'avoir effectué les actions requises."
              }
            ]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Golang-Kanalkommunikation mit Arbeitern",
      "description": "In Golang kann das Schließen eines Kanals verwendet werden, um die Fertigstellung an die Empfänger des Kanals zu kommunizieren. In diesem Lab wird gezeigt, wie ein Kanal verwendet wird, um Arbeit, die von der main()-Goroutine an eine Arbeits-Goroutine zu erledigen, zu kommunizieren, und wie der Kanal geschlossen wird, wenn es keine weiteren Aufgaben für die Arbeiter gibt.",
      "meta": {
        "title": "Kanäle in Golang schließen | Kanalsynchronisierung",
        "description": "Lernen Sie, wie Sie Kanäle verwenden, um Arbeit zwischen Goroutinen zu kommunizieren und Kanäle zu schließen, wenn es keine weiteren Aufgaben in Golang gibt.",
        "keywords": "Golang, Kanäle, Kanäle schließen, Kanalsynchronisierung, Goroutinen"
      },
      "details": {
        "steps": [
          {
            "title": "Kanäle schließen",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Überprüfen der Ausgabe des Go-Programms zum Schließen von Kanälen",
                "file": "verify1-1.sh",
                "hint": "Bitte stellen Sie sicher, dass Sie die erforderlichen Aktionen ausgeführt haben."
              }
            ]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "Golang におけるワーカーとのチャネル通信",
      "description": "Golang では、チャネルをクローズすることで、チャネルの受信側に完了を通知することができます。この実験では、チャネルを使って main() ゴルーチンからワーカーゴルーチンに処理すべき作業を伝える方法と、ワーカーに対してもう作業がない場合にチャネルをクローズする方法を示します。",
      "meta": {
        "title": "Golang におけるチャネルのクローズ | チャネル同期",
        "description": "Golang では、チャネルを使ってゴルーチン間で作業を伝え、作業がなくなったときにチャネルをクローズする方法を学びましょう。",
        "keywords": "Golang, チャネル，チャネルのクローズ，チャネル同期，ゴルーチン"
      },
      "details": {
        "steps": [
          {
            "title": "チャネルのクローズ",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "チャネルをクローズする Go プログラムの出力を確認する",
                "file": "verify1-1.sh",
                "hint": "必要な操作を完了していることを確認してください。"
              }
            ]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Golang: коммуникация каналов с воркерами",
      "description": "В Golang закрытие канала может использоваться для передачи сигнала о завершении работы приемникам канала. В этом практическом задании будет показано, как использовать канал для передачи задач от горутины main() к воркеру, и как закрывать канал, когда у воркера больше нет задач.",
      "meta": {
        "title": "Закрытие каналов в Golang | Синхронизация каналов",
        "description": "Изучите, как использовать каналы для передачи задач между горутинами и закрывать каналы, когда в Golang больше нет задач.",
        "keywords": "Golang, Каналы, Закрытие каналов, Синхронизация каналов, Горутины"
      },
      "details": {
        "steps": [
          {
            "title": "Закрытие каналов",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "Проверить вывод программы Go по закрытию каналов",
                "file": "verify1-1.sh",
                "hint": "Пожалуйста, убедитесь, что вы выполнили требуемые действия."
              }
            ]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    },
    {
      "lang": "ko",
      "title": "Golang 채널을 이용한 작업자 통신",
      "description": "Golang 에서 채널 닫기는 채널 수신자에게 완료를 알리는 데 사용될 수 있습니다. 이 랩에서는 main() 고루틴에서 작업자 고루틴으로 수행할 작업을 전달하기 위해 채널을 사용하는 방법과, 작업자에게 더 이상 작업이 없을 때 채널을 닫는 방법을 보여줍니다.",
      "meta": {
        "title": "Golang 채널 닫기 | 채널 동기화 (Channel Synchronization)",
        "description": "Golang 에서 고루틴 간에 작업을 전달하기 위해 채널을 사용하고, 더 이상 작업이 없을 때 채널을 닫는 방법을 알아보세요.",
        "keywords": "Golang, 채널 (Channels), 채널 닫기, 채널 동기화, 고루틴 (Goroutines), Golang 채널 예제, Golang 채널 사용법"
      },
      "details": {
        "steps": [
          {
            "title": "채널 닫기",
            "text": "ko/step1.md",
            "verify": [
              {
                "name": "채널 닫기 Go 프로그램 출력 검증",
                "file": "verify1-1.sh",
                "hint": "필수 작업을 완료했는지 확인하십시오."
              }
            ]
          }
        ],
        "intro": {
          "text": "ko/intro.md",
          "title": "소개"
        },
        "finish": {
          "text": "ko/finish.md",
          "title": "요약"
        }
      }
    },
    {
      "lang": "pt",
      "title": "Comunicação de Canais Golang com Workers",
      "description": "Em Golang, fechar um canal pode ser usado para comunicar a conclusão aos receptores do canal. Este laboratório demonstrará como usar um canal para comunicar o trabalho a ser feito da gorrotina main() para uma gorrotina worker, e como fechar o canal quando não houver mais tarefas para o worker.",
      "meta": {
        "title": "Fechando Canais em Golang | Sincronização de Canais",
        "description": "Aprenda como usar canais para comunicar trabalho entre gorrotinas e fechar canais quando não houver mais tarefas em Golang.",
        "keywords": "Golang, Canais, Fechando Canais, Sincronização de Canais, Gorrotinas"
      },
      "details": {
        "steps": [
          {
            "title": "Fechando Canais",
            "text": "pt/step1.md",
            "verify": [
              {
                "name": "Verificar Saída do Programa Go de Fechamento de Canais",
                "file": "verify1-1.sh",
                "hint": "Por favor, certifique-se de ter concluído as ações necessárias."
              }
            ]
          }
        ],
        "intro": {
          "text": "pt/intro.md",
          "title": "Introdução"
        },
        "finish": {
          "text": "pt/finish.md",
          "title": "Resumo"
        }
      }
    }
  ]
}
