{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "challenge",
  "title": "Multiple Return Values | Challenge",
  "description": "In Go, functions can return multiple values. This feature is commonly used to return both a result and an error value from a function.",
  "meta": {
    "title": "Go Programming | Multiple Return Values",
    "description": "Learn how to use multiple return values in Go programming language. Discover the power of returning both a result and an error from a function.",
    "keywords": "Go programming, multiple return values, error handling, function return, programming tutorial"
  },
  "difficulty": "Beginner",
  "time": 5,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": false,
  "details": {
    "steps": [
      {
        "title": "Multiple Return Values",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify Go Run Multiple Return Values",
            "file": "verify1-1.sh",
            "hint": "Please make sure you have completed the required actions.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": ["go/functions"],
        "solutions": ["multiple-return-values.go"]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md"
    },
    "assets": {
      "host01": [
        {
          "file": "multiple-return-values.go",
          "target": "/home/labex/project",
          "chmod": "ugo+rwx"
        }
      ]
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["jiaosenvip"],
  "license": {
    "name": "CC-BY-3.0",
    "url": "http://creativecommons.org/licenses/by/3.0/",
    "repo": "https://github.com/mmcgrana/gobyexample"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "多个返回值 | 挑战",
      "description": "在 Go 语言中，函数可以返回多个值。此功能通常用于从函数中同时返回一个结果和一个错误值。",
      "meta": {
        "title": "Go 编程 | 多个返回值",
        "description": "学习如何在 Go 编程语言中使用多个返回值。探索从函数中同时返回结果和错误的强大功能。",
        "keywords": "Go 编程，多个返回值，错误处理，函数返回，编程教程"
      },
      "details": {
        "steps": [
          {
            "title": "多个返回值",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "验证 Go 运行多个返回值",
                "file": "verify1-1.sh",
                "hint": "请确保你已完成所需操作。"
              }
            ],
            "solutions": ["multiple-return-values.go"]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Varios valores de retorno | Desafío",
      "description": "En Go, las funciones pueden devolver múltiples valores. Esta característica se utiliza comúnmente para devolver tanto un resultado como un valor de error desde una función.",
      "meta": {
        "title": "Programación en Go | Varios valores de retorno",
        "description": "Aprende cómo usar múltiples valores de retorno en el lenguaje de programación Go. Descubre el poder de devolver tanto un resultado como un error desde una función.",
        "keywords": "Programación en Go, varios valores de retorno, manejo de errores, retorno de función, tutorial de programación"
      },
      "details": {
        "steps": [
          {
            "title": "Varios valores de retorno",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Verificar la ejecución de Go con múltiples valores de retorno",
                "file": "verify1-1.sh",
                "hint": "Asegúrese de haber completado las acciones requeridas."
              }
            ],
            "solutions": ["multiple-return-values.go"]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Valeurs de retour multiples | Défi",
      "description": "En Go, les fonctions peuvent renvoyer plusieurs valeurs. Cette fonctionnalité est couramment utilisée pour renvoyer à la fois un résultat et une valeur d'erreur à partir d'une fonction.",
      "meta": {
        "title": "Programmation Go | Valeurs de retour multiples",
        "description": "Découvrez comment utiliser des valeurs de retour multiples dans le langage de programmation Go. Découvrez le pouvoir de renvoyer à la fois un résultat et une erreur à partir d'une fonction.",
        "keywords": "Programmation Go, valeurs de retour multiples, gestion d'erreurs, retour de fonction, tutoriel de programmation"
      },
      "details": {
        "steps": [
          {
            "title": "Valeurs de retour multiples",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Vérifiez l'exécution de Go avec des valeurs de retour multiples",
                "file": "verify1-1.sh",
                "hint": "Veuillez vous assurer d'avoir effectué les actions requises."
              }
            ],
            "solutions": ["multiple-return-values.go"]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Mehrere Rückgabewerte | Herausforderung",
      "description": "In Go können Funktionen mehrere Werte zurückgeben. Dieses Feature wird häufig verwendet, um sowohl ein Ergebnis als auch einen Fehlerwert aus einer Funktion zurückzugeben.",
      "meta": {
        "title": "Go-Programmierung | Mehrere Rückgabewerte",
        "description": "Lernen Sie, wie Sie in der Go-Programmiersprache mehrere Rückgabewerte verwenden. Entdecken Sie die Macht des Zurückgebens sowohl eines Ergebnisses als auch eines Fehlers aus einer Funktion.",
        "keywords": "Go-Programmierung, mehrere Rückgabewerte, Fehlerbehandlung, Funktionsrückgabe, Programmier-Tutorial"
      },
      "details": {
        "steps": [
          {
            "title": "Mehrere Rückgabewerte",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Überprüfen Sie, ob Go mehrere Rückgabewerte ausführt",
                "file": "verify1-1.sh",
                "hint": "Bitte stellen Sie sicher, dass Sie die erforderlichen Aktionen abgeschlossen haben."
              }
            ],
            "solutions": ["multiple-return-values.go"]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "複数の戻り値 | チャレンジ",
      "description": "Go 言語では、関数は複数の値を返すことができます。この機能は、関数から結果とエラー値の両方を返すために一般的に使用されます。",
      "meta": {
        "title": "Go 言語プログラミング | 複数の戻り値",
        "description": "Go 言語プログラミングにおける複数の戻り値の使い方を学びましょう。関数から結果とエラーの両方を返す力を発見しましょう。",
        "keywords": "Go 言語プログラミング，複数の戻り値，エラーハンドリング，関数の戻り値，プログラミングチュートリアル"
      },
      "details": {
        "steps": [
          {
            "title": "複数の戻り値",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "Go 実行の複数の戻り値を検証する",
                "file": "verify1-1.sh",
                "hint": "必要な操作を完了していることを確認してください。"
              }
            ],
            "solutions": ["multiple-return-values.go"]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Несколько возвращаемых значений | Вызов",
      "description": "В Go функции могут возвращать несколько значений. Эта особенность часто используется для возврата как результата, так и значения ошибки из функции.",
      "meta": {
        "title": "Программирование на Go | Несколько возвращаемых значений",
        "description": "Изучите, как использовать несколько возвращаемых значений в языке программирования Go. Откройте силу возвращения как результата, так и ошибки из функции.",
        "keywords": "Программирование на Go, несколько возвращаемых значений, обработка ошибок, возврат функции, учебник по программированию"
      },
      "details": {
        "steps": [
          {
            "title": "Несколько возвращаемых значений",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "Проверить выполнение программы Go с несколькими возвращаемыми значениями",
                "file": "verify1-1.sh",
                "hint": "Пожалуйста, убедитесь, что вы выполнили все необходимые действия."
              }
            ],
            "solutions": ["multiple-return-values.go"]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    }
  ]
}
