{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "challenge",
  "title": "Golang Text Template Dynamic Content",
  "description": "The Golang text/template package provides a way to create dynamic content or show customized output to the user. This package allows mixing static text and actions enclosed in {{...}} to insert dynamic content.",
  "meta": {
    "title": "Golang Text Templates | Dynamic Content Generation",
    "description": "Learn how to use the Golang text/template package to create dynamic content and customize output for users.",
    "keywords": "Golang, text/template, dynamic content, template generation, customized output"
  },
  "difficulty": "Beginner",
  "time": 5,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": false,
  "details": {
    "steps": [
      {
        "title": "Text Templates",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify Go Run Templates Output Contains Some Text",
            "file": "verify1-1.sh",
            "hint": "Please make sure you have completed the required actions.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": [],
        "solutions": ["text-templates.go"]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md"
    },
    "assets": {
      "host01": [
        {
          "file": "text-templates.go",
          "target": "/home/labex/project",
          "chmod": "ugo+rwx"
        }
      ]
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["jiaosenvip"],
  "license": {
    "name": "CC-BY-3.0",
    "url": "http://creativecommons.org/licenses/by/3.0/",
    "repo": "https://github.com/mmcgrana/gobyexample"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "Go 语言文本模板动态内容",
      "description": "Go 语言的 text/template 包提供了一种创建动态内容或向用户展示定制化输出的方式。这个包允许将静态文本与包含在 {{...}} 中的操作混合使用，以插入动态内容。",
      "meta": {
        "title": "Go 语言文本模板 | 动态内容生成",
        "description": "了解如何使用 Go 语言的 text/template 包来创建动态内容并为用户定制输出。",
        "keywords": "Go 语言，text/template, 动态内容，模板生成，定制化输出"
      },
      "details": {
        "steps": [
          {
            "title": "文本模板",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "验证 Go Run 模板输出是否包含某些文本",
                "file": "verify1-1.sh",
                "hint": "请确保你已完成所需操作。"
              }
            ],
            "solutions": ["text-templates.go"]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Contenido dinámico con plantillas de texto de Golang",
      "description": "El paquete de plantillas de texto de Golang (text/template) proporciona una forma de crear contenido dinámico o mostrar una salida personalizada al usuario. Este paquete permite mezclar texto estático y acciones encerradas en {{...}} para insertar contenido dinámico.",
      "meta": {
        "title": "Plantillas de texto de Golang | Generación de contenido dinámico",
        "description": "Aprende cómo utilizar el paquete de plantillas de texto de Golang para crear contenido dinámico y personalizar la salida para los usuarios.",
        "keywords": "Golang, plantillas de texto, contenido dinámico, generación de plantillas, salida personalizada"
      },
      "details": {
        "steps": [
          {
            "title": "Plantillas de texto",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Verificar que la salida de Go Run Templates contenga algún texto",
                "file": "verify1-1.sh",
                "hint": "Asegúrese de haber completado las acciones requeridas."
              }
            ],
            "solutions": ["text-templates.go"]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Contenu dynamique avec les modèles de texte en Golang",
      "description": "Le package Golang text/template fournit un moyen de créer du contenu dynamique ou d'afficher une sortie personnalisée à l'utilisateur. Ce package permet de mélanger du texte statique et des actions encadrées par {{...}} pour insérer du contenu dynamique.",
      "meta": {
        "title": "Modèles de texte en Golang | Génération de contenu dynamique",
        "description": "Découvrez comment utiliser le package Golang text/template pour créer du contenu dynamique et personnaliser la sortie pour les utilisateurs.",
        "keywords": "Golang, text/template, contenu dynamique, génération de modèles, sortie personnalisée"
      },
      "details": {
        "steps": [
          {
            "title": "Modèles de texte",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Vérifiez que la sortie des modèles Go Run contient du texte",
                "file": "verify1-1.sh",
                "hint": "Veuillez vous assurer d'avoir effectué les actions requises."
              }
            ],
            "solutions": ["text-templates.go"]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Golang Text Template Dynamischer Inhalt",
      "description": "Das Golang-Text/Template-Paket bietet eine Möglichkeit, dynamischen Inhalt zu erstellen oder benutzerdefinierte Ausgabe an den Benutzer zu zeigen. Dieses Paket ermöglicht das Mischen von statischem Text und Aktionen, die in {{...}} eingeschlossen sind, um dynamischen Inhalt einzufügen.",
      "meta": {
        "title": "Golang Text Templates | Dynamische Inhaltserzeugung",
        "description": "Lernen Sie, wie Sie das Golang-Text/Template-Paket verwenden, um dynamischen Inhalt zu erstellen und die Ausgabe für Benutzer anzupassen.",
        "keywords": "Golang, text/template, dynamischer Inhalt, Vorlagenerzeugung, benutzerdefinierte Ausgabe"
      },
      "details": {
        "steps": [
          {
            "title": "Text Templates",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Verifizieren Sie, dass die Ausgabe von Go Run Templates Text enthält",
                "file": "verify1-1.sh",
                "hint": "Bitte stellen Sie sicher, dass Sie die erforderlichen Aktionen abgeschlossen haben."
              }
            ],
            "solutions": ["text-templates.go"]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "Go 言語のテキスト テンプレートによる動的コンテンツ",
      "description": "Go 言語の text/template パッケージは、動的なコンテンツを作成する方法や、ユーザーにカスタマイズされた出力を表示する方法を提供します。このパッケージを使うと、静的なテキストと{{...}}で囲まれたアクションを混ぜて、動的なコンテンツを挿入することができます。",
      "meta": {
        "title": "Go 言語のテキスト テンプレート | 動的コンテンツ生成",
        "description": "Go 言語の text/template パッケージを使って動的なコンテンツを作成し、ユーザー向けに出力をカスタマイズする方法を学びましょう。",
        "keywords": "Go 言語，text/template, 動的コンテンツ，テンプレート生成，カスタマイズされた出力"
      },
      "details": {
        "steps": [
          {
            "title": "テキスト テンプレート",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "Go 実行時のテンプレート出力に特定のテキストが含まれていることを確認する",
                "file": "verify1-1.sh",
                "hint": "必要なアクションを完了していることを確認してください。"
              }
            ],
            "solutions": ["text-templates.go"]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Динамический контент с использованием текстовых шаблонов в Golang",
      "description": "Пакет text/template в Golang предоставляет способ создания динамического контента или показа пользовательского настраиваемого вывода. Этот пакет позволяет смешивать статический текст и действия, заключённые в {{...}}, для вставки динамического контента.",
      "meta": {
        "title": "Текстовые шаблоны в Golang | Генерация динамического контента",
        "description": "Изучите, как использовать пакет text/template в Golang для создания динамического контента и настройки вывода для пользователей.",
        "keywords": "Golang, text/template, динамический контент, генерация шаблонов, настраиваемый вывод"
      },
      "details": {
        "steps": [
          {
            "title": "Текстовые шаблоны",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "Проверить, что вывод go run templates содержит некоторый текст",
                "file": "verify1-1.sh",
                "hint": "Пожалуйста, убедитесь, что вы выполнили требуемые действия."
              }
            ],
            "solutions": ["text-templates.go"]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    }
  ]
}
