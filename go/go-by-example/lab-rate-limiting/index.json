{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Implementing Rate Limiting in Go",
  "description": "The lab demonstrates how to implement rate limiting in Go using goroutines, channels, and tickers.",
  "meta": {
    "title": "Go Programming | Rate Limiting | Goroutines | Channels | Tickers",
    "description": "Learn how to implement rate limiting in Go using goroutines, channels, and tickers to control resource utilization and maintain quality of service.",
    "keywords": "Go programming, rate limiting, goroutines, channels, tickers"
  },
  "difficulty": "Beginner",
  "time": 15,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Rate Limiting",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify First Batch of Requests Handled Every 200 Milliseconds",
            "file": "verify1-1.sh",
            "hint": "Please make sure you have completed the required actions.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": ["go/rate_limiting"]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    },
    "assets": {
      "host01": [
        {
          "file": "rate-limiting.go",
          "target": "/home/labex/project",
          "chmod": "ugo+rwx"
        }
      ]
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["jiaosenvip"],
  "license": {
    "name": "CC-BY-3.0",
    "url": "http://creativecommons.org/licenses/by/3.0/",
    "repo": "https://github.com/mmcgrana/gobyexample"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "在Go语言中实现速率限制",
      "description": "本实验展示了如何使用Go语言中的goroutine、通道和定时器来实现速率限制。",
      "meta": {
        "title": "Go编程 | 速率限制 | goroutine | 通道 | 定时器",
        "description": "学习如何使用Go语言中的goroutine、通道和定时器来实现速率限制，以控制资源利用并维持服务质量。",
        "keywords": "Go编程, 速率限制, goroutine, 通道, 定时器"
      },
      "details": {
        "steps": [
          {
            "title": "速率限制",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "验证每200毫秒处理一批请求",
                "file": "verify1-1.sh",
                "hint": "请确保你已完成所需操作。"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    }
  ]
}
