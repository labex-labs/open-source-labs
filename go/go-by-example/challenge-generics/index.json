{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "challenge",
  "title": "Golang Generics Introduction",
  "description": "This challenge introduces the concept of generics in Golang. Starting from version 1.18, Golang has added support for generics, which allows us to write more flexible and reusable code.",
  "meta": {
    "title": "Golang Generics | Programming Tutorials",
    "description": "Explore the concept of generics in Golang, a powerful feature introduced in version 1.18 that enables more flexible and reusable code.",
    "keywords": "Golang, Generics, Programming Tutorials, Reusable Code, Type Parameters, Constraints"
  },
  "difficulty": "Beginner",
  "time": 5,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": false,
  "details": {
    "steps": [
      {
        "title": "Generics",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify Go Run Generics Output",
            "file": "verify1-1.sh",
            "hint": "Please make sure you have completed the required actions.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": ["go/generics"],
        "solutions": ["generics.go"]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md"
    },
    "assets": {
      "host01": [
        {
          "file": "generics.go",
          "target": "/home/labex/project",
          "chmod": "ugo+rwx"
        }
      ]
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["jiaosenvip"],
  "license": {
    "name": "CC-BY-3.0",
    "url": "http://creativecommons.org/licenses/by/3.0/",
    "repo": "https://github.com/mmcgrana/gobyexample"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "Go 语言泛型介绍",
      "description": "此挑战介绍了 Go 语言中泛型的概念。从 1.18 版本开始，Go 语言增加了对泛型的支持，这使我们能够编写更灵活、可复用的代码。",
      "meta": {
        "title": "Go 语言泛型 | 编程教程",
        "description": "探索 Go 语言中的泛型概念，这是 1.18 版本引入的一项强大功能，可实现更灵活、可复用的代码。",
        "keywords": "Go 语言，泛型，编程教程，可复用代码，类型参数，约束"
      },
      "details": {
        "steps": [
          {
            "title": "泛型",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "验证 Go 运行泛型输出",
                "file": "verify1-1.sh",
                "hint": "请确保你已完成所需操作。"
              }
            ],
            "solutions": ["generics.go"]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Introducción a los Genéricos en Golang",
      "description": "Este desafío introduce el concepto de genéricos en Golang. A partir de la versión 1.18, Golang ha agregado soporte para genéricos, lo que nos permite escribir código más flexible y reutilizable.",
      "meta": {
        "title": "Genéricos en Golang | Tutoriales de Programación",
        "description": "Explora el concepto de genéricos en Golang, una característica poderosa introducida en la versión 1.18 que permite un código más flexible y reutilizable.",
        "keywords": "Golang, Genéricos, Tutoriales de Programación, Código Reutilizable, Parámetros de Tipo, Restricciones"
      },
      "details": {
        "steps": [
          {
            "title": "Genéricos",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Verificar la salida de ejecución de Go con genéricos",
                "file": "verify1-1.sh",
                "hint": "Asegúrese de haber completado las acciones requeridas."
              }
            ],
            "solutions": ["generics.go"]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Présentation des génériques en Golang",
      "description": "Ce défi présente le concept de génériques en Golang. À partir de la version 1.18, Golang a ajouté la prise en charge des génériques, ce qui nous permet d'écrire du code plus flexible et réutilisable.",
      "meta": {
        "title": "Génériques en Golang | Tutoriels de programmation",
        "description": "Explorez le concept de génériques en Golang, une fonction puissante introduite dans la version 1.18 qui permet d'écrire du code plus flexible et réutilisable.",
        "keywords": "Golang, Génériques, Tutoriels de programmation, Code réutilisable, Paramètres de type, Contraintes"
      },
      "details": {
        "steps": [
          {
            "title": "Génériques",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Vérifier la sortie des génériques Go Run",
                "file": "verify1-1.sh",
                "hint": "Veuillez vous assurer d'avoir effectué les actions requises."
              }
            ],
            "solutions": ["generics.go"]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Einführung in Golang Generics",
      "description": "Diese Herausforderung stellt das Konzept der Generics in Golang vor. Ab Version 1.18 hat Golang die Unterstützung für Generics hinzugefügt, was es uns ermöglicht, flexibleres und wiederverwendbares Code zu schreiben.",
      "meta": {
        "title": "Golang Generics | Programmierungstutorials",
        "description": "Erkunden Sie das Konzept der Generics in Golang, eine leistungsstarke Funktion, die in Version 1.18 eingeführt wurde und flexibleren und wiederverwendbaren Code ermöglicht.",
        "keywords": "Golang, Generics, Programmierungstutorials, wiederverwendbarer Code, Typ-Parameter, Beschränkungen"
      },
      "details": {
        "steps": [
          {
            "title": "Generics",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Verifiziere die Ausgabe von Go Run Generics",
                "file": "verify1-1.sh",
                "hint": "Bitte stellen Sie sicher, dass Sie die erforderlichen Aktionen abgeschlossen haben."
              }
            ],
            "solutions": ["generics.go"]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "Go 言語のジェネリクス入門",
      "description": "このチャレンジでは、Go 言語におけるジェネリクスの概念を紹介します。1.18 バージョン以降、Go 言語はジェネリクスのサポートを追加しており、これによりより柔軟で再利用可能なコードを書くことができます。",
      "meta": {
        "title": "Go 言語のジェネリクス | プログラミングチュートリアル",
        "description": "Go 言語におけるジェネリクスの概念を探りましょう。1.18 バージョンで導入された強力な機能で、より柔軟で再利用可能なコードを可能にします。",
        "keywords": "Go 言語，ジェネリクス，プログラミングチュートリアル，再利用可能なコード，型パラメータ，制約"
      },
      "details": {
        "steps": [
          {
            "title": "ジェネリクス",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "Go 実行時のジェネリクス出力を確認する",
                "file": "verify1-1.sh",
                "hint": "必要な操作を完了していることを確認してください。"
              }
            ],
            "solutions": ["generics.go"]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Введение в обобщения в Golang",
      "description": "Эта задача представляет концепцию обобщений в Golang. Начиная с версии 1.18, Golang добавил поддержку обобщений, что позволяет нам писать более гибкий и повторно используемый код.",
      "meta": {
        "title": "Обобщения в Golang | Руководства по программированию",
        "description": "Изучите концепцию обобщений в Golang, мощный функционал, введенный в версии 1.18, который позволяет создавать более гибкий и повторно используемый код.",
        "keywords": "Golang, Обобщения, Руководства по программированию, Повторно используемый код, Параметры типа, Ограничения"
      },
      "details": {
        "steps": [
          {
            "title": "Обобщения",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "Проверить вывод обобщений Go Run",
                "file": "verify1-1.sh",
                "hint": "Пожалуйста, убедитесь, что вы выполнили требуемые действия."
              }
            ],
            "solutions": ["generics.go"]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    }
  ]
}
