{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Atomic Counters in Concurrent Go",
  "description": "This lab focuses on managing state in Go using the sync/atomic package for atomic counters accessed by multiple goroutines.",
  "meta": {
    "title": "Go Programming | Atomic Counters | Concurrency Management",
    "description": "Learn how to manage state in Go using the sync/atomic package for atomic counters accessed by multiple goroutines. Explore concurrency techniques and avoid data race issues.",
    "keywords": "Go Programming, Atomic Counters, Concurrency, Goroutines, sync/atomic, State Management"
  },
  "difficulty": "Beginner",
  "time": 5,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Atomic Counters",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify Atomic Counters Reach 50,000 Operations",
            "file": "verify1-1.sh",
            "hint": "Please make sure you have completed the required actions.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": []
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    },
    "assets": {
      "host01": [
        {
          "file": "atomic-counters.go",
          "target": "/home/labex/project",
          "chmod": "ugo+rwx"
        }
      ]
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["jiaosenvip"],
  "license": {
    "name": "CC-BY-3.0",
    "url": "http://creativecommons.org/licenses/by/3.0/",
    "repo": "https://github.com/mmcgrana/gobyexample"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "Go 语言并发中的原子计数器",
      "description": "本实验重点介绍如何在 Go 语言中使用 `sync/atomic` 包来管理状态，该包用于处理由多个 goroutine 访问的原子计数器。",
      "meta": {
        "title": "Go 编程 | 原子计数器 | 并发管理",
        "description": "学习如何在 Go 语言中使用 `sync/atomic` 包来管理状态，该包用于处理由多个 goroutine 访问的原子计数器。探索并发技术并避免数据竞争问题。",
        "keywords": "Go 编程，原子计数器，并发，goroutine, sync/atomic, 状态管理"
      },
      "details": {
        "steps": [
          {
            "title": "原子计数器",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "验证原子计数器达到 50000 次操作",
                "file": "verify1-1.sh",
                "hint": "请确保你已完成所需操作。"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Contadores atómicos en Go concurrente",
      "description": "Esta práctica se centra en la gestión del estado en Go utilizando el paquete sync/atomic para contadores atómicos accedidos por múltiples goroutines.",
      "meta": {
        "title": "Programación en Go | Contadores atómicos | Gestión de concurrencia",
        "description": "Aprende cómo gestionar el estado en Go utilizando el paquete sync/atomic para contadores atómicos accedidos por múltiples goroutines. Explora técnicas de concurrencia y evita problemas de carrera de datos.",
        "keywords": "Programación en Go, Contadores atómicos, Concurrencia, Goroutines, sync/atomic, Gestión de estado"
      },
      "details": {
        "steps": [
          {
            "title": "Contadores atómicos",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Verificar que los contadores atómicos alcancen 50.000 operaciones",
                "file": "verify1-1.sh",
                "hint": "Asegúrese de haber completado las acciones requeridas."
              }
            ]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Compteurs atomiques en Go concurrent",
      "description": "Ce laboratoire se concentre sur la gestion de l'état en Go en utilisant le package sync/atomic pour les compteurs atomiques accessibles par plusieurs goroutines.",
      "meta": {
        "title": "Programmation Go | Compteurs atomiques | Gestion de la concurrence",
        "description": "Découvrez comment gérer l'état en Go en utilisant le package sync/atomic pour les compteurs atomiques accessibles par plusieurs goroutines. Explorez les techniques de concurrence et évitez les problèmes de course de données.",
        "keywords": "Programmation Go, Compteurs atomiques, Concurrence, Goroutines, sync/atomic, Gestion de l'état"
      },
      "details": {
        "steps": [
          {
            "title": "Compteurs atomiques",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Vérifiez que les compteurs atomiques atteignent 50 000 opérations",
                "file": "verify1-1.sh",
                "hint": "Veuillez vous assurer d'avoir effectué les actions requises."
              }
            ]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Atomare Zähler in Go bei der Verwendung von Goroutinen",
      "description": "In diesem Lab geht es darum, den Zustand in Go mit dem Paket sync/atomic zu verwalten, um atomare Zähler zu verwenden, die von mehreren Goroutinen zugegriffen werden.",
      "meta": {
        "title": "Go-Programmierung | Atomare Zähler | Verwaltung von Parallelität",
        "description": "Lernen Sie, wie Sie in Go den Zustand mit dem Paket sync/atomic für atomare Zähler verwalten, die von mehreren Goroutinen zugegriffen werden. Entdecken Sie Techniken zur Parallelität und vermeiden Sie Probleme bei Datenkonflikten.",
        "keywords": "Go-Programmierung, Atomare Zähler, Parallelität, Goroutinen, sync/atomic, Zustandsverwaltung"
      },
      "details": {
        "steps": [
          {
            "title": "Atomare Zähler",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Verifizieren, dass atomare Zähler 50.000 Operationen erreichen",
                "file": "verify1-1.sh",
                "hint": "Bitte stellen Sie sicher, dass Sie die erforderlichen Aktionen abgeschlossen haben."
              }
            ]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "同時実行 Go の原子カウンター",
      "description": "この実験では、複数の goroutine によってアクセスされる原子カウンターに対して、sync/atomic パッケージを使用して Go で状態を管理することに焦点を当てています。",
      "meta": {
        "title": "Go プログラミング | 原子カウンター | 並列処理管理",
        "description": "複数の goroutine によってアクセスされる原子カウンターに対して、sync/atomic パッケージを使用して Go で状態を管理する方法を学びましょう。並列処理技術を探り、データ競合の問題を回避しましょう。",
        "keywords": "Go プログラミング，原子カウンター, 並列処理，goroutine, sync/atomic, 状態管理"
      },
      "details": {
        "steps": [
          {
            "title": "原子カウンター",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "原子カウンターが 50,000 回の操作に達することを確認する",
                "file": "verify1-1.sh",
                "hint": "必要な操作を完了していることを確認してください。"
              }
            ]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Атомарные счётчики в конкурентном Go",
      "description": "В этом практическом занятии сосредоточено на управлении состоянием в Go с использованием пакета sync/atomic для атомарных счётчиков, доступных нескольким goroutine.",
      "meta": {
        "title": "Программирование на Go | Атомарные счётчики | Управление конкурентностью",
        "description": "Изучите, как управлять состоянием в Go с использованием пакета sync/atomic для атомарных счётчиков, доступных нескольким goroutine. Исследуйте методы управления конкурентностью и избегайте проблем с дата-расами.",
        "keywords": "Программирование на Go, Атомарные счётчики, Конкурентность, Goroutine, sync/atomic, Управление состоянием"
      },
      "details": {
        "steps": [
          {
            "title": "Атомарные счётчики",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "Проверить, что атомарные счётчики достигают 50 000 операций",
                "file": "verify1-1.sh",
                "hint": "Пожалуйста, убедитесь, что вы выполнили требуемые действия."
              }
            ]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    },
    {
      "lang": "ko",
      "title": "Go 동시성 프로그래밍: 원자 카운터 (Atomic Counters)",
      "description": "이 랩에서는 여러 고루틴에서 접근하는 원자 카운터를 위해 sync/atomic 패키지를 사용하여 Go 에서 상태를 관리하는 데 중점을 둡니다.",
      "meta": {
        "title": "Go 프로그래밍 | 원자 카운터 | 동시성 관리 | Go 튜토리얼",
        "description": "여러 고루틴에서 접근하는 원자 카운터를 위해 sync/atomic 패키지를 사용하여 Go 에서 상태를 관리하는 방법을 알아보세요. 동시성 기술을 탐구하고 데이터 경합 문제를 방지하세요. Go 프로그래밍 학습.",
        "keywords": "Go 프로그래밍, 원자 카운터 (Atomic Counters), 동시성, 고루틴 (Goroutines), sync/atomic, 상태 관리, Go 튜토리얼, Go 학습"
      },
      "details": {
        "steps": [
          {
            "title": "원자 카운터 (Atomic Counters)",
            "text": "ko/step1.md",
            "verify": [
              {
                "name": "원자 카운터가 50,000 번의 연산에 도달하는지 확인",
                "file": "verify1-1.sh",
                "hint": "필수 작업을 완료했는지 확인하십시오."
              }
            ]
          }
        ],
        "intro": {
          "text": "ko/intro.md",
          "title": "소개"
        },
        "finish": {
          "text": "ko/finish.md",
          "title": "요약"
        }
      }
    },
    {
      "lang": "pt",
      "title": "Contadores Atômicos em Go Concorrente",
      "description": "Este laboratório foca em gerenciar o estado em Go usando o pacote sync/atomic para contadores atômicos acessados por múltiplas goroutines.",
      "meta": {
        "title": "Programação Go | Contadores Atômicos | Gerenciamento de Concorrência",
        "description": "Aprenda como gerenciar o estado em Go usando o pacote sync/atomic para contadores atômicos acessados por múltiplas goroutines. Explore técnicas de concorrência e evite problemas de data race.",
        "keywords": "Programação Go, Contadores Atômicos, Concorrência, Goroutines, sync/atomic, Gerenciamento de Estado"
      },
      "details": {
        "steps": [
          {
            "title": "Contadores Atômicos",
            "text": "pt/step1.md",
            "verify": [
              {
                "name": "Verificar se os Contadores Atômicos Atingem 50.000 Operações",
                "file": "verify1-1.sh",
                "hint": "Por favor, certifique-se de ter completado as ações requeridas."
              }
            ]
          }
        ],
        "intro": {
          "text": "pt/intro.md",
          "title": "Introdução"
        },
        "finish": {
          "text": "pt/finish.md",
          "title": "Resumo"
        }
      }
    }
  ]
}
