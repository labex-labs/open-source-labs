{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Generics in Go 1.18",
  "description": "This lab introduces the concept of generics in Golang. Starting from version 1.18, Golang has added support for generics, which allows us to write more flexible and reusable code.",
  "meta": {
    "title": "Generics in Go 1.18: Unlocking Flexible and Reusable Code",
    "description": "Explore the power of generics in Golang 1.18, enabling you to write more versatile and reusable code.",
    "keywords": "generics, type parameters, go, golang, go labs, go playground online, constraints, go lab, go practice"
  },
  "difficulty": "Beginner",
  "time": 5,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Generics",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify Go Generics Implementation",
            "file": "verify1-1.sh",
            "hint": "Please make sure you have completed the required actions.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": ["go/generics"]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    },
    "assets": {
      "host01": [
        {
          "file": "generics.go",
          "target": "/home/labex/project",
          "chmod": "ugo+rwx"
        }
      ]
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["jiaosenvip"],
  "license": {
    "name": "CC-BY-3.0",
    "url": "http://creativecommons.org/licenses/by/3.0/",
    "repo": "https://github.com/mmcgrana/gobyexample"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "Go 1.18 中的泛型",
      "description": "本实验介绍了 Go 语言中泛型的概念。从 1.18 版本开始，Go 语言增加了对泛型的支持，这使我们能够编写更灵活、可复用的代码。",
      "meta": {
        "title": "Go 1.18 中的泛型：解锁灵活且可复用的代码",
        "description": "探索 Go 1.18 中泛型的强大功能，让你能够编写更通用、可复用的代码。",
        "keywords": "泛型，类型参数，Go, Go 语言，Go 实验，在线 Go 游乐场，约束，Go 实验，Go 练习"
      },
      "details": {
        "steps": [
          {
            "title": "泛型",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "验证 Go 泛型实现",
                "file": "verify1-1.sh",
                "hint": "请确保你已完成所需操作。"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Genéricos en Go 1.18",
      "description": "Esta práctica introduce el concepto de genéricos en Golang. A partir de la versión 1.18, Golang ha agregado soporte para genéricos, lo que nos permite escribir código más flexible y reutilizable.",
      "meta": {
        "title": "Genéricos en Go 1.18: Desbloqueando Código Flexible y Reutilizable",
        "description": "Explora el poder de los genéricos en Golang 1.18, lo que te permite escribir código más versátil y reutilizable.",
        "keywords": "genéricos, parámetros de tipo, go, golang, prácticas de go, playground de go en línea, restricciones, práctica de go, práctica de go"
      },
      "details": {
        "steps": [
          {
            "title": "Genéricos",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Verificar la implementación de genéricos de Go",
                "file": "verify1-1.sh",
                "hint": "Asegúrese de haber completado las acciones requeridas."
              }
            ]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Génériques en Go 1.18",
      "description": "Ce laboratoire présente le concept de génériques en Golang. À partir de la version 1.18, Golang a ajouté la prise en charge des génériques, ce qui nous permet d'écrire du code plus flexible et réutilisable.",
      "meta": {
        "title": "Génériques en Go 1.18 : Découvrez le code flexible et réutilisable",
        "description": "Explorez le pouvoir des génériques en Golang 1.18, vous permettant d'écrire un code plus polyvalent et réutilisable.",
        "keywords": "génériques, paramètres de type, go, golang, laboratoires go, terrain de jeu en ligne go, contraintes, laboratoire go, pratique go"
      },
      "details": {
        "steps": [
          {
            "title": "Génériques",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Vérifiez la mise en œuvre des génériques Go",
                "file": "verify1-1.sh",
                "hint": "Veuillez vous assurer d'avoir effectué les actions requises."
              }
            ]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Generics in Go 1.18",
      "description": "In diesem Lab wird das Konzept der Generics in Golang vorgestellt. Ab Version 1.18 hat Golang die Unterstützung für Generics hinzugefügt, was es uns ermöglicht, flexibleres und wiederverwendbares Code zu schreiben.",
      "meta": {
        "title": "Generics in Go 1.18: Entschlüsseln von flexibel und wiederverwendbarem Code",
        "description": "Erkunden Sie die Macht der Generics in Golang 1.18, die es Ihnen ermöglicht, vielseitigeren und wiederverwendbaren Code zu schreiben.",
        "keywords": "Generics, Typ-Parameter, Go, Golang, Go Labs, Online Go Playground, Beschränkungen, Go Lab, Go Übung"
      },
      "details": {
        "steps": [
          {
            "title": "Generics",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Überprüfen der Go Generics-Implementierung",
                "file": "verify1-1.sh",
                "hint": "Bitte stellen Sie sicher, dass Sie die erforderlichen Aktionen abgeschlossen haben."
              }
            ]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "Go 1.18 におけるジェネリクス",
      "description": "この実験では、Go 言語におけるジェネリクスの概念を紹介します。1.18 バージョンから、Go 言語はジェネリクスのサポートを追加し、より柔軟で再利用可能なコードを書くことができるようになりました。",
      "meta": {
        "title": "Go 1.18 におけるジェネリクス：柔軟性と再利用可能性を備えたコードの解錠",
        "description": "Go 1.18 におけるジェネリクスの力を探求し、より多用途で再利用可能なコードを書くことができます。",
        "keywords": "ジェネリクス，型パラメータ，Go 言語，Go, Go 言語の実験，オンラインの Go 言語のプレイグラウンド，制約，Go 言語の実験，Go 言語の練習"
      },
      "details": {
        "steps": [
          {
            "title": "ジェネリクス",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "Go ジェネリクスの実装を確認する",
                "file": "verify1-1.sh",
                "hint": "必要な操作を完了していることを確認してください。"
              }
            ]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Обобщения в Go 1.18",
      "description": "В этом лабе представляется концепция обобщений в Golang. Начиная с версии 1.18, Golang добавил поддержку обобщений, что позволяет нам писать более гибкий и повторно используемый код.",
      "meta": {
        "title": "Обобщения в Go 1.18: Открытие гибкого и повторно используемого кода",
        "description": "Изучите мощь обобщений в Golang 1.18, позволяющих вам писать более универсальный и повторно используемый код.",
        "keywords": "обобщения, параметры типа, go, golang, лаборатории go, онлайн-игровая площадка go, ограничения, лаборатория go, практика go"
      },
      "details": {
        "steps": [
          {
            "title": "Обобщения",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "Проверить реализацию обобщений Go",
                "file": "verify1-1.sh",
                "hint": "Пожалуйста, убедитесь, что вы выполнили требуемые действия."
              }
            ]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    }
  ]
}
