{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Implementing Go Timeouts with Channels",
  "description": "The purpose of this lab is to implement timeouts in Go using channels and select.",
  "meta": {
    "title": "Implementing Timeouts in Go | Programming Tutorials",
    "description": "Learn how to implement timeouts in Go using channels and select. Prevent goroutine leaks and use time.After to await a value after the timeout.",
    "keywords": "Go programming, timeouts, channels, select, goroutine leaks, time.After"
  },
  "difficulty": "Beginner",
  "time": 5,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Timeouts",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify Timeout Operation in Go Project",
            "file": "verify1-1.sh",
            "hint": "Please make sure you have completed the required actions.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": ["go/timeouts"]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    },
    "assets": {
      "host01": [
        {
          "file": "timeouts.go",
          "target": "/home/labex/project",
          "chmod": "ugo+rwx"
        }
      ]
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["jiaosenvip"],
  "license": {
    "name": "CC-BY-3.0",
    "url": "http://creativecommons.org/licenses/by/3.0/",
    "repo": "https://github.com/mmcgrana/gobyexample"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "使用通道在 Go 中实现超时",
      "description": "本实验的目的是使用通道和 select 在 Go 中实现超时。",
      "meta": {
        "title": "在 Go 中实现超时 | 编程教程",
        "description": "学习如何使用通道和 select 在 Go 中实现超时。防止 goroutine 泄漏，并使用 time.After 在超时时等待一个值。",
        "keywords": "Go 编程，超时，通道，select, goroutine 泄漏，time.After"
      },
      "details": {
        "steps": [
          {
            "title": "超时",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "在 Go 项目中验证超时操作",
                "file": "verify1-1.sh",
                "hint": "请确保你已完成所需操作。"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Implementando tiempos de espera en Go con canales",
      "description": "El propósito de este laboratorio es implementar tiempos de espera en Go utilizando canales y select.",
      "meta": {
        "title": "Implementar tiempos de espera en Go | Tutoriales de programación",
        "description": "Aprende cómo implementar tiempos de espera en Go utilizando canales y select. Evita fugas de gorutinas y utiliza time.After para esperar un valor después del tiempo de espera.",
        "keywords": "Programación en Go, tiempos de espera, canales, select, fugas de gorutinas, time.After"
      },
      "details": {
        "steps": [
          {
            "title": "Tiempos de espera",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Verificar la operación de tiempo de espera en el proyecto de Go",
                "file": "verify1-1.sh",
                "hint": "Asegúrese de haber completado las acciones requeridas."
              }
            ]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Implémentation de délais d'attente en Go avec des canaux",
      "description": "Le but de ce laboratoire est d'implémenter des délais d'attente en Go à l'aide de canaux et de select.",
      "meta": {
        "title": "Implémentation de délais d'attente en Go | Tutoriels de programmation",
        "description": "Découvrez comment implémenter des délais d'attente en Go à l'aide de canaux et de select. Évitez les fuites de goroutine et utilisez time.After pour attendre une valeur après le délai d'attente.",
        "keywords": "Programmation Go, délais d'attente, canaux, select, fuites de goroutine, time.After"
      },
      "details": {
        "steps": [
          {
            "title": "Délais d'attente",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Vérifiez l'opération de délai d'attente dans un projet Go",
                "file": "verify1-1.sh",
                "hint": "Veuillez vous assurer d'avoir effectué les actions requises."
              }
            ]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Implementierung von Go-Timeouts mit Kanälen",
      "description": "Zweck dieses Labors ist es, Timeouts in Go mit Hilfe von Kanälen und select zu implementieren.",
      "meta": {
        "title": "Timeouts in Go implementieren | Programmier-Tutorials",
        "description": "Lernen Sie, wie Sie in Go Timeouts mit Hilfe von Kanälen und select implementieren. Verhindern Sie Goroutine-Lecks und verwenden Sie time.After, um auf einen Wert nach Ablauf der Zeitüberschreitung zu warten.",
        "keywords": "Go-Programmierung, Timeouts, Kanäle, select, Goroutine-Lecks, time.After"
      },
      "details": {
        "steps": [
          {
            "title": "Timeouts",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Verifizieren Sie die Timeout-Operation in einem Go-Projekt",
                "file": "verify1-1.sh",
                "hint": "Bitte stellen Sie sicher, dass Sie die erforderlichen Aktionen abgeschlossen haben."
              }
            ]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "チャネルを使った Go のタイムアウトの実装",
      "description": "この実験の目的は、チャネルと select を使って Go でタイムアウトを実装することです。",
      "meta": {
        "title": "Go でのタイムアウトの実装 | プログラミングチュートリアル",
        "description": "チャネルと select を使って Go でタイムアウトを実装する方法を学びましょう。ゴルーチンリークを防止し、タイムアウト後に値を待つために time.After を使用します。",
        "keywords": "Go 言語プログラミング，タイムアウト，チャネル，select, ゴルーチンリーク，time.After"
      },
      "details": {
        "steps": [
          {
            "title": "タイムアウト",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "Go プロジェクトでのタイムアウト操作を確認する",
                "file": "verify1-1.sh",
                "hint": "必要な操作を完了していることを確認してください。"
              }
            ]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Реализация таймаутов в Go с использованием каналов",
      "description": "Цель этого лабораторного занятия - реализовать таймауты в Go с использованием каналов и select.",
      "meta": {
        "title": "Реализация таймаутов в Go | Руководства по программированию",
        "description": "Изучите, как реализовать таймауты в Go с использованием каналов и select. Предотвратите утечку горутин и используйте time.After для ожидания значения после истечения таймаута.",
        "keywords": "Программирование на Go, таймауты, каналы, select, утечка горутин, time.After"
      },
      "details": {
        "steps": [
          {
            "title": "Таймауты",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "Проверить операцию с таймаутом в проекте на Go",
                "file": "verify1-1.sh",
                "hint": "Пожалуйста, убедитесь, что вы выполнили требуемые действия."
              }
            ]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    }
  ]
}
