{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Basic HTTP Server in Go",
  "description": "This lab aims to test your ability to write a basic HTTP server using the net/http package in Golang.",
  "meta": {
    "title": "Golang HTTP Server | Programming Tutorial",
    "description": "Learn how to write a basic HTTP server using the net/http package in Golang. Covers handling routes, returning responses, and accessing request headers.",
    "keywords": "Golang, HTTP Server, net/http, Programming Tutorial, Web Development"
  },
  "difficulty": "Beginner",
  "time": 5,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "HTTP Server",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify Go HTTP Client Response Status",
            "file": "verify1-1.sh",
            "hint": "Please make sure you have completed the required actions.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": []
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    },
    "assets": {
      "host01": [
        {
          "file": "http-server.go",
          "target": "/home/labex/project",
          "chmod": "ugo+rwx"
        }
      ]
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["jiaosenvip"],
  "license": {
    "name": "CC-BY-3.0",
    "url": "http://creativecommons.org/licenses/by/3.0/",
    "repo": "https://github.com/mmcgrana/gobyexample"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "Go 语言中的基本 HTTP 服务器",
      "description": "本实验旨在测试你使用 Go 语言的 net/http 包编写基本 HTTP 服务器的能力。",
      "meta": {
        "title": "Go 语言 HTTP 服务器 | 编程教程",
        "description": "学习如何使用 Go 语言的 net/http 包编写基本 HTTP 服务器。涵盖处理路由、返回响应以及访问请求头。",
        "keywords": "Go 语言，HTTP 服务器，net/http, 编程教程，网页开发"
      },
      "details": {
        "steps": [
          {
            "title": "HTTP 服务器",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "验证 Go HTTP 客户端响应状态",
                "file": "verify1-1.sh",
                "hint": "请确保你已完成所需操作。"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Servidor HTTP básico en Go",
      "description": "Este laboratorio tiene como objetivo probar tu capacidad para escribir un servidor HTTP básico utilizando el paquete net/http en Golang.",
      "meta": {
        "title": "Servidor HTTP de Golang | Tutorial de programación",
        "description": "Aprende cómo escribir un servidor HTTP básico utilizando el paquete net/http en Golang. Cubre el manejo de rutas, la devolución de respuestas y el acceso a los encabezados de solicitud.",
        "keywords": "Golang, Servidor HTTP, net/http, Tutorial de programación, Desarrollo web"
      },
      "details": {
        "steps": [
          {
            "title": "Servidor HTTP",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Verificar el estado de la respuesta del cliente HTTP de Go",
                "file": "verify1-1.sh",
                "hint": "Asegúrese de haber completado las acciones requeridas."
              }
            ]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Serveur HTTP de base en Go",
      "description": "Ce laboratoire vise à tester votre capacité à écrire un serveur HTTP de base en utilisant le package net/http en Golang.",
      "meta": {
        "title": "Serveur HTTP Golang | Tutoriel de programmation",
        "description": "Découvrez comment écrire un serveur HTTP de base en utilisant le package net/http en Golang. Couvre la gestion des itinéraires, la renvoi de réponses et l'accès aux en-têtes de requête.",
        "keywords": "Golang, Serveur HTTP, net/http, Tutoriel de programmation, Développement web"
      },
      "details": {
        "steps": [
          {
            "title": "Serveur HTTP",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Vérifier le statut de la réponse du client HTTP Go",
                "file": "verify1-1.sh",
                "hint": "Veuillez vous assurer d'avoir effectué les actions requises."
              }
            ]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Grundlegender HTTP-Server in Go",
      "description": "Dieses Labor zielt darauf ab, Ihre Fähigkeit zu testen, einen einfachen HTTP-Server mit dem Paket net/http in Golang zu schreiben.",
      "meta": {
        "title": "Golang HTTP-Server | Programmier-Tutorial",
        "description": "Lernen Sie, wie Sie einen einfachen HTTP-Server mit dem Paket net/http in Golang schreiben. Es werden die Behandlung von Routen, das Zurückgeben von Antworten und das Zugreifen auf Anfrageheader behandelt.",
        "keywords": "Golang, HTTP-Server, net/http, Programmier-Tutorial, Webentwicklung"
      },
      "details": {
        "steps": [
          {
            "title": "HTTP-Server",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Überprüfen der Go HTTP-Client-Antwortstatus",
                "file": "verify1-1.sh",
                "hint": "Bitte stellen Sie sicher, dass Sie die erforderlichen Aktionen abgeschlossen haben."
              }
            ]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "Go 言語による基本的な HTTP サーバ",
      "description": "この実験では、Go 言語の net/http パッケージを使って基本的な HTTP サーバを書く能力をテストすることを目的としています。",
      "meta": {
        "title": "Go 言語の HTTP サーバ | プログラミングチュートリアル",
        "description": "Go 言語の net/http パッケージを使って基本的な HTTP サーバを書く方法を学びます。ルートの処理、レスポンスの返却、およびリクエストヘッダのアクセスについて説明します。",
        "keywords": "Go 言語，HTTP サーバ，net/http, プログラミングチュートリアル，ウェブ開発"
      },
      "details": {
        "steps": [
          {
            "title": "HTTP サーバ",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "Go HTTP クライアントのレスポンスステータスを確認する",
                "file": "verify1-1.sh",
                "hint": "必要な操作を完了していることを確認してください。"
              }
            ]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Базовый HTTP-сервер на Go",
      "description": "Этот лабораторный проект旨在测试您使用 Golang 中的 net/http 包编写基本 HTTP 服务器的能力。",
      "meta": {
        "title": "HTTP-сервер на Golang | Руководство по программированию",
        "description": "Изучите, как написать базовый HTTP-сервер с использованием пакета net/http в Golang. Рассматривается обработка маршрутов, возврат ответов и доступ к заголовкам запросов.",
        "keywords": "Golang, HTTP-сервер, net/http, Руководство по программированию, Разработка в Интернете"
      },
      "details": {
        "steps": [
          {
            "title": "HTTP-сервер",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "Проверить статус ответа Go HTTP-клиента",
                "file": "verify1-1.sh",
                "hint": "Пожалуйста, убедитесь, что вы выполнили требуемые действия."
              }
            ]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    },
    {
      "lang": "ko",
      "title": "Go 언어로 기본 HTTP 서버 만들기",
      "description": "이 랩은 Golang 의 net/http 패키지를 사용하여 기본적인 HTTP 서버를 작성하는 능력을 테스트하는 것을 목표로 합니다.",
      "meta": {
        "title": "Go HTTP 서버 튜토리얼 | 프로그래밍 학습",
        "description": "Go 언어의 net/http 패키지를 사용하여 기본적인 HTTP 서버를 만드는 방법을 알아보세요. 라우팅 처리, 응답 반환, 요청 헤더 접근 등을 다룹니다.",
        "keywords": "Go, HTTP 서버, net/http, 프로그래밍 튜토리얼, 웹 개발"
      },
      "details": {
        "steps": [
          {
            "title": "HTTP 서버",
            "text": "ko/step1.md",
            "verify": [
              {
                "name": "Go HTTP 클라이언트 응답 상태 확인",
                "file": "verify1-1.sh",
                "hint": "필수 작업을 완료했는지 확인하십시오."
              }
            ]
          }
        ],
        "intro": {
          "text": "ko/intro.md",
          "title": "소개"
        },
        "finish": {
          "text": "ko/finish.md",
          "title": "요약"
        }
      }
    },
    {
      "lang": "pt",
      "title": "Servidor HTTP Básico em Go",
      "description": "Este laboratório visa testar sua capacidade de escrever um servidor HTTP básico usando o pacote net/http em Golang.",
      "meta": {
        "title": "Servidor HTTP Golang | Tutorial de Programação",
        "description": "Aprenda a escrever um servidor HTTP básico usando o pacote net/http em Golang. Cobre o tratamento de rotas, retorno de respostas e acesso aos cabeçalhos de requisição.",
        "keywords": "Golang, Servidor HTTP, net/http, Tutorial de Programação, Desenvolvimento Web"
      },
      "details": {
        "steps": [
          {
            "title": "Servidor HTTP",
            "text": "pt/step1.md",
            "verify": [
              {
                "name": "Verificar Status da Resposta do Cliente HTTP Go",
                "file": "verify1-1.sh",
                "hint": "Por favor, certifique-se de ter completado as ações requeridas."
              }
            ]
          }
        ],
        "intro": {
          "text": "pt/intro.md",
          "title": "Introdução"
        },
        "finish": {
          "text": "pt/finish.md",
          "title": "Resumo"
        }
      }
    }
  ]
}
