{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "challenge",
  "title": "Handling Unix Signals in Go Programs",
  "description": "The Signals challenge demonstrates how to handle Unix signals in Go programs using channels.",
  "meta": {
    "title": "Signals in Go | Unix Signal Handling in Go Programs",
    "description": "Learn how to handle Unix signals in Go programs using channels. Gracefully shut down servers and stop processing input with signal handling.",
    "keywords": "Go, Unix signals, signal handling, Go programming, server shutdown, input processing"
  },
  "difficulty": "Beginner",
  "time": 15,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": false,
  "details": {
    "steps": [
      {
        "title": "Signals",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify Awaiting Signal Interrupt",
            "file": "verify1-1.sh",
            "hint": "Please make sure you have completed the required actions.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": ["go/signals"],
        "solutions": ["signals.go"]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md"
    },
    "assets": {
      "host01": [
        {
          "file": "signals.go",
          "target": "/home/labex/project",
          "chmod": "ugo+rwx"
        }
      ]
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["jiaosenvip"],
  "license": {
    "name": "CC-BY-3.0",
    "url": "http://creativecommons.org/licenses/by/3.0/",
    "repo": "https://github.com/mmcgrana/gobyexample"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "在Go程序中处理Unix信号",
      "description": "「信号挑战」展示了如何在Go程序中使用通道来处理Unix信号。",
      "meta": {
        "title": "Go中的信号 | Go程序中的Unix信号处理",
        "description": "学习如何在Go程序中使用通道处理Unix信号。通过信号处理优雅地关闭服务器并停止处理输入。",
        "keywords": "Go, Unix信号, 信号处理, Go编程, 服务器关闭, 输入处理"
      },
      "details": {
        "steps": [
          {
            "title": "信号",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "验证等待信号中断",
                "file": "verify1-1.sh",
                "hint": "请确保你已完成所需操作。"
              }
            ],
            "solutions": ["signals.go"]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Manejo de señales Unix en programas Go",
      "description": "El desafío de Señales demuestra cómo manejar señales Unix en programas Go utilizando canales.",
      "meta": {
        "title": "Señales en Go | Manejo de señales Unix en programas Go",
        "description": "Aprende cómo manejar señales Unix en programas Go utilizando canales. Apaga los servidores de manera adecuada y detén el procesamiento de entrada con el manejo de señales.",
        "keywords": "Go, señales Unix, manejo de señales, programación Go, apagado de servidores, procesamiento de entrada"
      },
      "details": {
        "steps": [
          {
            "title": "Señales",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Verificar interrupción de señal en espera",
                "file": "verify1-1.sh",
                "hint": "Asegúrese de haber completado las acciones requeridas."
              }
            ],
            "solutions": ["signals.go"]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Gérer les signaux Unix dans les programmes Go",
      "description": "Le défi Signals montre comment gérer les signaux Unix dans des programmes Go à l'aide de canaux.",
      "meta": {
        "title": "Signaux en Go | Gestion des signaux Unix dans les programmes Go",
        "description": "Découvrez comment gérer les signaux Unix dans des programmes Go à l'aide de canaux. Arrêtez proprement les serveurs et arrêtez le traitement de l'entrée avec la gestion des signaux.",
        "keywords": "Go, signaux Unix, gestion des signaux, programmation Go, arrêt du serveur, traitement de l'entrée"
      },
      "details": {
        "steps": [
          {
            "title": "Signaux",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Vérifier l'interruption du signal en attente",
                "file": "verify1-1.sh",
                "hint": "Veuillez vous assurer d'avoir effectué les actions requises."
              }
            ],
            "solutions": ["signals.go"]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Umgang mit Unix-Signalen in Go-Programmen",
      "description": "Die Signals-Ausforderung zeigt, wie man Unix-Signale in Go-Programmen mit Kanälen behandelt.",
      "meta": {
        "title": "Signale in Go | Unix-Signalbehandlung in Go-Programmen",
        "description": "Lernen Sie, wie man Unix-Signale in Go-Programmen mit Kanälen behandelt. Beenden Sie Server ordnungsgemäß und stoppen Sie die Eingabeverarbeitung mit der Signalbehandlung.",
        "keywords": "Go, Unix-Signale, Signalbehandlung, Go-Programmierung, Serverabschaltung, Eingabeverarbeitung"
      },
      "details": {
        "steps": [
          {
            "title": "Signale",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Verifiziere Signalunterbrechung im Warten",
                "file": "verify1-1.sh",
                "hint": "Stellen Sie sicher, dass Sie die erforderlichen Aktionen abgeschlossen haben."
              }
            ],
            "solutions": ["signals.go"]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "Go プログラムにおける Unix シグナルの処理",
      "description": "Signals チャレンジでは、チャネルを使って Go プログラムで Unix シグナルを処理する方法を示します。",
      "meta": {
        "title": "Go におけるシグナル | Go プログラムにおける Unix シグナルの処理",
        "description": "チャネルを使って Go プログラムで Unix シグナルを処理する方法を学びましょう。シグナル処理を使ってサーバーをグレースフルにシャットダウンし、入力処理を停止しましょう。",
        "keywords": "Go, Unix シグナル, シグナル処理, Go プログラミング, サーバーシャットダウン, 入力処理"
      },
      "details": {
        "steps": [
          {
            "title": "シグナル",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "待機中のシグナル割り込みを確認する",
                "file": "verify1-1.sh",
                "hint": "必要な操作を完了していることを確認してください。"
              }
            ],
            "solutions": ["signals.go"]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Обработка Unix-сигналов в программах на Go",
      "description": "Задача Signals демонстрирует, как обрабатывать Unix-сигналы в программах на Go с использованием каналов.",
      "meta": {
        "title": "Сигналы в Go | Обработка Unix-сигналов в программах на Go",
        "description": "Изучите, как обрабатывать Unix-сигналы в программах на Go с использованием каналов. Gracefully остановите серверы и прекратите обрабатывать ввод с использованием обработки сигналов.",
        "keywords": "Go, Unix-сигналы, обработка сигналов, программирование на Go, остановка сервера, обработка ввода"
      },
      "details": {
        "steps": [
          {
            "title": "Сигналы",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "Проверить прерывание ожидания сигнала",
                "file": "verify1-1.sh",
                "hint": "Пожалуйста, убедитесь, что вы выполнили требуемые действия."
              }
            ],
            "solutions": ["signals.go"]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    }
  ]
}
