{
  "$schema": "https://cdn.jsdelivr.net/gh/labex-labs/schema/index.json",
  "type": "lab",
  "title": "Handling Unix Signals in Go",
  "description": "The Signals lab demonstrates how to handle Unix signals in Go programs using channels.",
  "meta": {
    "title": "Go Programming | Unix Signal Handling",
    "description": "Learn how to handle Unix signals in Go programs using channels. Gracefully shut down servers and stop processing input for command-line tools.",
    "keywords": "Go Programming, Unix Signals, Signal Handling, Channels, Graceful Shutdown"
  },
  "difficulty": "Beginner",
  "time": 5,
  "hidden": false,
  "fee_type": "free",
  "show_in_tutorial": true,
  "details": {
    "steps": [
      {
        "title": "Signals",
        "text": "en/step1.md",
        "verify": [
          {
            "name": "Verify Go Program Blocking for Signal",
            "file": "verify1-1.sh",
            "hint": "Please make sure you have completed the required actions.",
            "timeout": 0,
            "showstderr": true
          }
        ],
        "skills": ["go/signals"]
      }
    ],
    "intro": {
      "text": "en/intro.md",
      "title": "Introduction",
      "background": "setup.sh"
    },
    "finish": {
      "text": "en/finish.md",
      "title": "Summary"
    },
    "assets": {
      "host01": [
        {
          "file": "signals.go",
          "target": "/home/labex/project",
          "chmod": "ugo+rwx"
        }
      ]
    }
  },
  "backend": {
    "imageid": "webide-ubuntu:2204"
  },
  "contributors": ["jiaosenvip"],
  "license": {
    "name": "CC-BY-3.0",
    "url": "http://creativecommons.org/licenses/by/3.0/",
    "repo": "https://github.com/mmcgrana/gobyexample"
  },
  "i18n": [
    {
      "lang": "zh",
      "title": "在 Go 中处理 Unix 信号",
      "description": "信号实验展示了如何在 Go 程序中使用通道来处理 Unix 信号。",
      "meta": {
        "title": "Go 编程 | Unix 信号处理",
        "description": "学习如何在 Go 程序中使用通道处理 Unix 信号。优雅地关闭服务器并停止命令行工具的输入处理。",
        "keywords": "Go 编程，Unix 信号，信号处理，通道，优雅关闭"
      },
      "details": {
        "steps": [
          {
            "title": "信号",
            "text": "zh/step1.md",
            "verify": [
              {
                "name": "验证 Go 程序阻塞等待信号",
                "file": "verify1-1.sh",
                "hint": "请确保你已完成所需操作。"
              }
            ]
          }
        ],
        "intro": {
          "text": "zh/intro.md",
          "title": "介绍"
        },
        "finish": {
          "text": "zh/finish.md",
          "title": "总结"
        }
      }
    },
    {
      "lang": "es",
      "title": "Manejo de señales Unix en Go",
      "description": "El laboratorio de Señales demuestra cómo manejar señales Unix en programas Go utilizando canales.",
      "meta": {
        "title": "Programación en Go | Manejo de señales Unix",
        "description": "Aprende cómo manejar señales Unix en programas Go utilizando canales. Apaga los servidores de manera elegante y detén el procesamiento de entrada para las herramientas de línea de comandos.",
        "keywords": "Programación en Go, Señales Unix, Manejo de señales, Canales, Apagado elegante"
      },
      "details": {
        "steps": [
          {
            "title": "Señales",
            "text": "es/step1.md",
            "verify": [
              {
                "name": "Verificar el bloqueo del programa Go por una señal",
                "file": "verify1-1.sh",
                "hint": "Asegúrese de haber completado las acciones requeridas."
              }
            ]
          }
        ],
        "intro": {
          "text": "es/intro.md",
          "title": "Introducción"
        },
        "finish": {
          "text": "es/finish.md",
          "title": "Resumen"
        }
      }
    },
    {
      "lang": "fr",
      "title": "Gérer les signaux Unix en Go",
      "description": "Le laboratoire Signaux montre comment gérer les signaux Unix dans des programmes Go à l'aide de canaux.",
      "meta": {
        "title": "Programmation Go | Gestion des signaux Unix",
        "description": "Découvrez comment gérer les signaux Unix dans des programmes Go à l'aide de canaux. Arrêtez proprement les serveurs et arrêtez de traiter l'entrée pour les outils de ligne de commande.",
        "keywords": "Programmation Go, Signaux Unix, Gestion des signaux, Canaux, Arrêt propre"
      },
      "details": {
        "steps": [
          {
            "title": "Signaux",
            "text": "fr/step1.md",
            "verify": [
              {
                "name": "Vérifier le blocage d'un programme Go pour un signal",
                "file": "verify1-1.sh",
                "hint": "Veuillez vous assurer d'avoir effectué les actions requises."
              }
            ]
          }
        ],
        "intro": {
          "text": "fr/intro.md",
          "title": "Introduction"
        },
        "finish": {
          "text": "fr/finish.md",
          "title": "Résumé"
        }
      }
    },
    {
      "lang": "de",
      "title": "Unix-Signale in Go behandeln",
      "description": "Das Signals Lab zeigt, wie man in Go-Programmen mit Kanälen Unix-Signale behandelt.",
      "meta": {
        "title": "Go-Programmierung | Unix-Signalbehandlung",
        "description": "Lernen Sie, wie man in Go-Programmen mit Kanälen Unix-Signale behandelt. Beenden Sie Server gnädig und stoppen Sie die Eingabeverarbeitung für Befehlszeilentools.",
        "keywords": "Go-Programmierung, Unix-Signale, Signalbehandlung, Kanäle, Gnädige Beendigung"
      },
      "details": {
        "steps": [
          {
            "title": "Signale",
            "text": "de/step1.md",
            "verify": [
              {
                "name": "Verifizieren Sie, dass das Go-Programm auf ein Signal blockiert",
                "file": "verify1-1.sh",
                "hint": "Bitte stellen Sie sicher, dass Sie die erforderlichen Aktionen abgeschlossen haben."
              }
            ]
          }
        ],
        "intro": {
          "text": "de/intro.md",
          "title": "Einführung"
        },
        "finish": {
          "text": "de/finish.md",
          "title": "Zusammenfassung"
        }
      }
    },
    {
      "lang": "ja",
      "title": "Go 言語での Unix シグナルの処理",
      "description": "Signals 実験では、チャネルを使って Go プログラムで Unix シグナルを扱う方法を示します。",
      "meta": {
        "title": "Go 言語プログラミング | Unix シグナル処理",
        "description": "チャネルを使って Go プログラムで Unix シグナルをどのように処理するか学びましょう。サーバーをグレースフルにシャットダウンし、コマンドラインツールの入力処理を停止します。",
        "keywords": "Go 言語プログラミング，Unix シグナル，シグナル処理，チャネル，グレースフルシャットダウン"
      },
      "details": {
        "steps": [
          {
            "title": "シグナル",
            "text": "ja/step1.md",
            "verify": [
              {
                "name": "Go プログラムがシグナルを待機していることを確認する",
                "file": "verify1-1.sh",
                "hint": "必要な操作を完了していることを確認してください。"
              }
            ]
          }
        ],
        "intro": {
          "text": "ja/intro.md",
          "title": "はじめに"
        },
        "finish": {
          "text": "ja/finish.md",
          "title": "まとめ"
        }
      }
    },
    {
      "lang": "ru",
      "title": "Обработка Unix-сигналов в Go",
      "description": "Лаборатория Сигналов демонстрирует, как обрабатывать Unix-сигналы в программах на Go с использованием каналов.",
      "meta": {
        "title": "Программирование на Go | Обработка Unix-сигналов",
        "description": "Изучите, как обрабатывать Unix-сигналы в программах на Go с использованием каналов. Gracefully остановите серверы и прекратите обрабатывать ввод для командных строковых инструментов.",
        "keywords": "Программирование на Go, Unix-сигналы, Обработка сигналов, Каналы, Graceful Shutdown"
      },
      "details": {
        "steps": [
          {
            "title": "Сигналы",
            "text": "ru/step1.md",
            "verify": [
              {
                "name": "Проверить блокировку Go-программы на сигнал",
                "file": "verify1-1.sh",
                "hint": "Пожалуйста, убедитесь, что вы выполнили требуемые действия."
              }
            ]
          }
        ],
        "intro": {
          "text": "ru/intro.md",
          "title": "Введение"
        },
        "finish": {
          "text": "ru/finish.md",
          "title": "Резюме"
        }
      }
    },
    {
      "lang": "ko",
      "title": "Go 에서 Unix 시그널 처리하기",
      "description": "Signals 랩은 Go 프로그램에서 채널을 사용하여 Unix 시그널을 처리하는 방법을 보여줍니다.",
      "meta": {
        "title": "Go 프로그래밍 | Unix 시그널 처리 방법",
        "description": "Go 프로그램에서 채널을 사용하여 Unix 시그널을 처리하는 방법을 알아보세요. 서버를 정상적으로 종료하고, 명령줄 도구의 입력 처리를 중지하는 방법을 배웁니다.",
        "keywords": "Go 프로그래밍, Unix 시그널, 시그널 처리, 채널, 정상 종료, Go 시그널"
      },
      "details": {
        "steps": [
          {
            "title": "시그널",
            "text": "ko/step1.md",
            "verify": [
              {
                "name": "Go 프로그램이 시그널을 위해 블로킹되는지 확인",
                "file": "verify1-1.sh",
                "hint": "필수 작업을 완료했는지 확인하십시오."
              }
            ]
          }
        ],
        "intro": {
          "text": "ko/intro.md",
          "title": "소개"
        },
        "finish": {
          "text": "ko/finish.md",
          "title": "요약"
        }
      }
    },
    {
      "lang": "pt",
      "title": "Manipulação de Sinais Unix em Go",
      "description": "O laboratório Signals demonstra como lidar com sinais Unix em programas Go usando canais.",
      "meta": {
        "title": "Programação Go | Tratamento de Sinais Unix",
        "description": "Aprenda a lidar com sinais Unix em programas Go usando canais. Desligue servidores graciosamente e pare o processamento de entrada para ferramentas de linha de comando.",
        "keywords": "Programação Go, Sinais Unix, Tratamento de Sinais, Canais, Desligamento Gracioso, Go Tutorial, Go Sinais"
      },
      "details": {
        "steps": [
          {
            "title": "Sinais",
            "text": "pt/step1.md",
            "verify": [
              {
                "name": "Verificar Bloqueio do Programa Go para Sinal",
                "file": "verify1-1.sh",
                "hint": "Por favor, certifique-se de ter concluído as ações necessárias."
              }
            ]
          }
        ],
        "intro": {
          "text": "pt/intro.md",
          "title": "Introdução"
        },
        "finish": {
          "text": "pt/finish.md",
          "title": "Resumo"
        }
      }
    }
  ]
}
